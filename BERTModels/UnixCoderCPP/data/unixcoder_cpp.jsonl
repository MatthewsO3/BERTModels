{"idx": "cpp::0", "code": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int a,b,c,d;\r\n    int sum=1080;\r\n\r\n    while(cin>>a>>b>>c>>d)\r\n    {\r\n        if(a==0&&b==0&&c==0&&d==0)\r\n            break;\r\n        if(a>b)\r\n        {\r\n            sum=(a-b)*9+sum;\r\n        }\r\n        else if(a<b)\r\n        {\r\n            sum=((40-b)+a)*9+sum;\r\n        }\r\n        if(c>b)\r\n        {\r\n            sum=(c-b)*9+sum;\r\n        }\r\n        else if(c<b)\r\n        {\r\n            sum=((40-b)+c)*9+sum;\r\n        }\r\n          if(c>d)\r\n        {\r\n            sum=(c-d)*9+sum;\r\n        }\r\n        else if(c<d)\r\n        {\r\n            sum=((40-d)+c)*9+sum;\r\n        }\r\n        cout<<sum<<endl;\r\n        sum=1080;\r\n    }\r\n\r\n\r\n    return 0;\r\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġint", "Ġa", ",", "b", ",", "c", ",", "d", ";", "č", "Ċ", "ĠĠĠ", "Ġint", "Ġsum", "=", "10", "80", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġwhile", "(", "cin", ">>", "a", ">>", "b", ">>", "c", ">>", "d", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "a", "==", "0", "&&", "b", "==", "0", "&&", "c", "==", "0", "&&", "d", "==", "0", ")", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "a", ">", "b", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "=(", "a", "-", "b", ")*", "9", "+", "sum", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "(", "a", "<", "b", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "=((", "40", "-", "b", ")+", "a", ")*", "9", "+", "sum", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "c", ">", "b", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "=(", "c", "-", "b", ")*", "9", "+", "sum", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "(", "c", "<", "b", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "=((", "40", "-", "b", ")+", "c", ")*", "9", "+", "sum", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "c", ">", "d", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "=(", "c", "-", "d", ")*", "9", "+", "sum", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "(", "c", "<", "d", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "=((", "40", "-", "d", ")+", "c", ")*", "9", "+", "sum", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "<<", "sum", "<<", "endl", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsum", "=", "10", "80", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::1", "code": "#ifndef IDUCK_HPP_124b1b04_74d3_41ae_b7ce_2a0bea79f1c7\n#define IDUCK_HPP_124b1b04_74d3_41ae_b7ce_2a0bea79f1c7\n\n#include \"../strategy/IFly.hpp\"\n\n/**\n  \\interface IDuck\n  Interface for duck. It can fly, quack and rotate right.\n  */\n\nclass IDuck\n{\npublic:\n    virtual Course getCourse() const = 0;\n    virtual int getDistance(Course course) const = 0;\n    virtual void fly() = 0;\n    virtual void quack() = 0;\n    virtual void right() = 0;\n    virtual void left() = 0;\n\n    virtual ~IDuck() { }\n};\n\n#endif // IDUCK_HPP_124b1b04_74d3_41ae_b7ce_2a0bea79f1c7\n", "code_tokens": ["Ġ#", "ifndef", "ĠID", "U", "CK", "_", "HP", "P", "_", "124", "b", "1", "b", "04", "_", "74", "d", "3", "_", "41", "ae", "_", "b", "7", "ce", "_", "2", "a", "0", "be", "a", "79", "f", "1", "c", "7", "Ċ", "#", "define", "ĠID", "U", "CK", "_", "HP", "P", "_", "124", "b", "1", "b", "04", "_", "74", "d", "3", "_", "41", "ae", "_", "b", "7", "ce", "_", "2", "a", "0", "be", "a", "79", "f", "1", "c", "7", "Ċ", "Ċ", "#", "include", "Ġ\"../", "strategy", "/", "IF", "ly", ".", "hpp", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ\\", "interface", "ĠID", "uck", "Ċ", "Ġ", "ĠInterface", "Ġfor", "Ġd", "uck", ".", "ĠIt", "Ġcan", "Ġfly", ",", "Ġqu", "ack", "Ġand", "Ġrotate", "Ġright", ".", "Ċ", "Ġ", "Ġ*/", "Ċ", "Ċ", "class", "ĠID", "uck", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvirtual", "ĠC", "ourse", "Ġget", "Course", "()", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġint", "Ġget", "Distance", "(", "Course", "Ġcourse", ")", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġfly", "()", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġqu", "ack", "()", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġright", "()", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġleft", "()", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "ID", "uck", "()", "Ġ{", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠID", "U", "CK", "_", "HP", "P", "_", "124", "b", "1", "b", "04", "_", "74", "d", "3", "_", "41", "ae", "_", "b", "7", "ce", "_", "2", "a", "0", "be", "a", "79", "f", "1", "c", "7", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::2", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n#include <CRealMoveRequestDelayCheckerDetail.hpp>\n#include <common/ATFCore.hpp>\n\n\nSTART_ATF_NAMESPACE\n    namespace Register\n    {\n        class CRealMoveRequestDelayCheckerRegister : public IRegister\n        {\n            public: \n                void Register() override\n                {\n                    auto& hook_core = CATFCore::get_instance();\n                    for (auto& r : Detail::CRealMoveRequestDelayChecker_functions)\n                        hook_core.reg_wrapper(r.pBind, r);\n                }\n        };\n    }; // end namespace Register\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "C", "Real", "Move", "Request", "Delay", "Checker", "Detail", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "common", "/", "AT", "FC", "ore", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġnamespace", "ĠRegister", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġclass", "ĠC", "Real", "Move", "Request", "Delay", "Checker", "Register", "Ġ:", "Ġpublic", "ĠI", "Register", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġpublic", ":", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġvoid", "ĠRegister", "()", "Ġoverride", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "&", "Ġhook", "_", "core", "Ġ=", "ĠC", "AT", "FC", "ore", "::", "get", "_", "instance", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "auto", "&", "Ġr", "Ġ:", "ĠDet", "ail", "::", "C", "Real", "Move", "Request", "Delay", "Checker", "_", "functions", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġhook", "_", "core", ".", "reg", "_", "wrapper", "(", "r", ".", "p", "Bind", ",", "Ġr", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġ};", "Ġ//", "Ġend", "Ġnamespace", "ĠRegister", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::3", "code": "#include <gtest/gtest.h>\n#include \"loquat/misc/binary_search.hpp\"\n\nTEST(BinarySearchTest, Integer){\n\tfor(int l = -16; l <= 16; ++l){\n\t\tfor(int r = l; r <= 16; ++r){\n\t\t\tfor(int expect = l; expect <= r; ++expect){\n\t\t\t\tconst auto actual = loquat::binary_search(\n\t\t\t\t\tl, r, [=](int x){ return x < expect; });\n\t\t\t\tEXPECT_EQ(expect, actual);\n\t\t\t}\n\t\t}\n\t}\n}\n\nTEST(BinarySearchTest, Floating){\n\tfor(int li = -16; li <= 16; ++li){\n\t\tfor(int ri = li; ri <= li; ++ri){\n\t\t\tconst double l = li * 1.1, r = ri * 1.1;\n\t\t\tfor(double expect = l; expect < r; expect += 0.2){\n\t\t\t\tconst auto actual = loquat::binary_search(\n\t\t\t\t\tl, r, [=](double x){ return x < expect; });\n\t\t\t\tEXPECT_DOUBLE_EQ(expect, actual);\n\t\t\t}\n\t\t\tconst auto min_actual = loquat::binary_search(\n\t\t\t\tl, r, [=](double){ return true; });\n\t\t\tEXPECT_DOUBLE_EQ(l, min_actual);\n\t\t\tconst auto max_actual = loquat::binary_search(\n\t\t\t\tl, r, [=](double){ return false; });\n\t\t\tEXPECT_DOUBLE_EQ(r, max_actual);\n\t\t}\n\t}\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "lo", "quat", "/", "misc", "/", "binary", "_", "search", ".", "hpp", "\"", "Ċ", "Ċ", "TEST", "(", "Binary", "Search", "Test", ",", "ĠInteger", "){", "Ċ", "ĉ", "for", "(", "int", "Ġl", "Ġ=", "Ġ-", "16", ";", "Ġl", "Ġ<=", "Ġ16", ";", "Ġ++", "l", "){", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġr", "Ġ=", "Ġl", ";", "Ġr", "Ġ<=", "Ġ16", ";", "Ġ++", "r", "){", "Ċ", "ĉĉ", "ĉ", "for", "(", "int", "Ġexpect", "Ġ=", "Ġl", ";", "Ġexpect", "Ġ<=", "Ġr", ";", "Ġ++", "expect", "){", "Ċ", "ĉĉĉ", "ĉ", "const", "Ġauto", "Ġactual", "Ġ=", "Ġlo", "quat", "::", "binary", "_", "search", "(", "Ċ", "ĉĉĉĉ", "ĉ", "l", ",", "Ġr", ",", "Ġ[", "=", "](", "int", "Ġx", "){", "Ġreturn", "Ġx", "Ġ<", "Ġexpect", ";", "Ġ});", "Ċ", "ĉĉĉ", "ĉ", "EXPECT", "_", "EQ", "(", "expect", ",", "Ġactual", ");", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "TEST", "(", "Binary", "Search", "Test", ",", "ĠFloating", "){", "Ċ", "ĉ", "for", "(", "int", "Ġli", "Ġ=", "Ġ-", "16", ";", "Ġli", "Ġ<=", "Ġ16", ";", "Ġ++", "li", "){", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġri", "Ġ=", "Ġli", ";", "Ġri", "Ġ<=", "Ġli", ";", "Ġ++", "ri", "){", "Ċ", "ĉĉ", "ĉ", "const", "Ġdouble", "Ġl", "Ġ=", "Ġli", "Ġ*", "Ġ1", ".", "1", ",", "Ġr", "Ġ=", "Ġri", "Ġ*", "Ġ1", ".", "1", ";", "Ċ", "ĉĉ", "ĉ", "for", "(", "double", "Ġexpect", "Ġ=", "Ġl", ";", "Ġexpect", "Ġ<", "Ġr", ";", "Ġexpect", "Ġ+=", "Ġ0", ".", "2", "){", "Ċ", "ĉĉĉ", "ĉ", "const", "Ġauto", "Ġactual", "Ġ=", "Ġlo", "quat", "::", "binary", "_", "search", "(", "Ċ", "ĉĉĉĉ", "ĉ", "l", ",", "Ġr", ",", "Ġ[", "=", "](", "double", "Ġx", "){", "Ġreturn", "Ġx", "Ġ<", "Ġexpect", ";", "Ġ});", "Ċ", "ĉĉĉ", "ĉ", "EXPECT", "_", "DOUBLE", "_", "EQ", "(", "expect", ",", "Ġactual", ");", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉĉ", "ĉ", "const", "Ġauto", "Ġmin", "_", "actual", "Ġ=", "Ġlo", "quat", "::", "binary", "_", "search", "(", "Ċ", "ĉĉĉ", "ĉ", "l", ",", "Ġr", ",", "Ġ[", "=", "](", "double", "){", "Ġreturn", "Ġtrue", ";", "Ġ});", "Ċ", "ĉĉ", "ĉ", "EXPECT", "_", "DOUBLE", "_", "EQ", "(", "l", ",", "Ġmin", "_", "actual", ");", "Ċ", "ĉĉ", "ĉ", "const", "Ġauto", "Ġmax", "_", "actual", "Ġ=", "Ġlo", "quat", "::", "binary", "_", "search", "(", "Ċ", "ĉĉĉ", "ĉ", "l", ",", "Ġr", ",", "Ġ[", "=", "](", "double", "){", "Ġreturn", "Ġfalse", ";", "Ġ});", "Ċ", "ĉĉ", "ĉ", "EXPECT", "_", "DOUBLE", "_", "EQ", "(", "r", ",", "Ġmax", "_", "actual", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::4", "code": "#include \"randomplayer.h\"\n#include <QDirIterator>\n\nvoid RandomPlayer::start()\n{\n    this->setMedia(QUrl::fromLocalFile(fileList.takeFirst()));\n    this->play();\n    this->_readyToPlay = true;\n}\n\nvoid RandomPlayer::quitPlayMode()\n{\n    this->_readyToPlay = false;\n    this->stop();\n}\n\nbool RandomPlayer::isPlayMode(){\n    return this->_readyToPlay;\n}\n\nvoid RandomPlayer::initList(bool includePiano, bool includeChants, bool includeMelodies)\n{\n    QString basedir = iPlayer::getMusicRoot();\n\n    QStringList listFilter;\n    listFilter << \"*.mp3\";\n\n    if(!includePiano && !includeChants && !includeMelodies) {\n        includePiano = true;\n    }\n\n    if (includePiano) {\n        QDirIterator dirIterator(basedir+\"/cantiques/\", listFilter ,QDir::Files | QDir::NoSymLinks, QDirIterator::Subdirectories);\n\n        while(dirIterator.hasNext())\n        {\n            fileList << dirIterator.next();\n        }\n    }\n\n    if (includeChants) {\n        QDirIterator dirIterator(basedir+\"/chants/\", listFilter ,QDir::Files | QDir::NoSymLinks, QDirIterator::Subdirectories);\n\n        while(dirIterator.hasNext())\n        {\n            fileList << dirIterator.next();\n        }\n    }\n\n    if (includeMelodies) {\n        QDirIterator dirIterator(basedir+\"/melodies/\", listFilter ,QDir::Files | QDir::NoSymLinks, QDirIterator::Subdirectories);\n\n        while(dirIterator.hasNext())\n        {\n            fileList << dirIterator.next();\n        }\n    }\n\n    std::random_shuffle(fileList.begin(), fileList.end());\n\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "random", "player", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "QDir", "Iterator", ">", "Ċ", "Ċ", "void", "ĠRandom", "Player", "::", "start", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġthis", "->", "set", "Media", "(", "QUrl", "::", "from", "LocalFile", "(", "fileList", ".", "take", "First", "()));", "Ċ", "ĠĠĠ", "Ġthis", "->", "play", "();", "Ċ", "ĠĠĠ", "Ġthis", "->_", "ready", "To", "Play", "Ġ=", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRandom", "Player", "::", "quit", "Play", "Mode", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġthis", "->_", "ready", "To", "Play", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠ", "Ġthis", "->", "stop", "();", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠRandom", "Player", "::", "is", "Play", "Mode", "(){", "Ċ", "ĠĠĠ", "Ġreturn", "Ġthis", "->_", "ready", "To", "Play", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRandom", "Player", "::", "init", "List", "(", "bool", "Ġinclude", "P", "ian", "o", ",", "Ġbool", "Ġinclude", "Ch", "ants", ",", "Ġbool", "Ġinclude", "Me", "lod", "ies", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQString", "Ġbasedir", "Ġ=", "Ġi", "Player", "::", "getM", "usic", "Root", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠQStringList", "Ġlist", "Filter", ";", "Ċ", "ĠĠĠ", "Ġlist", "Filter", "Ġ<<", "Ġ\"*.", "mp", "3", "\";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "(!", "include", "P", "ian", "o", "Ġ&&", "Ġ!", "include", "Ch", "ants", "Ġ&&", "Ġ!", "include", "Me", "lod", "ies", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġinclude", "P", "ian", "o", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "include", "P", "ian", "o", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQDir", "Iterator", "Ġdir", "Iterator", "(", "basedir", "+\"/", "cant", "ique", "s", "/\",", "Ġlist", "Filter", "Ġ,", "QDir", "::", "Files", "Ġ|", "ĠQDir", "::", "No", "Sym", "Links", ",", "ĠQDir", "Iterator", "::", "Sub", "directories", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "dir", "Iterator", ".", "hasNext", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfile", "List", "Ġ<<", "Ġdir", "Iterator", ".", "next", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "include", "Ch", "ants", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQDir", "Iterator", "Ġdir", "Iterator", "(", "basedir", "+\"/", "ch", "ants", "/\",", "Ġlist", "Filter", "Ġ,", "QDir", "::", "Files", "Ġ|", "ĠQDir", "::", "No", "Sym", "Links", ",", "ĠQDir", "Iterator", "::", "Sub", "directories", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "dir", "Iterator", ".", "hasNext", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfile", "List", "Ġ<<", "Ġdir", "Iterator", ".", "next", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "include", "Me", "lod", "ies", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQDir", "Iterator", "Ġdir", "Iterator", "(", "basedir", "+\"/", "me", "lod", "ies", "/\",", "Ġlist", "Filter", "Ġ,", "QDir", "::", "Files", "Ġ|", "ĠQDir", "::", "No", "Sym", "Links", ",", "ĠQDir", "Iterator", "::", "Sub", "directories", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "dir", "Iterator", ".", "hasNext", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfile", "List", "Ġ<<", "Ġdir", "Iterator", ".", "next", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "random", "_", "shuffle", "(", "fileList", ".", "begin", "(),", "Ġfile", "List", ".", "end", "());", "Ċ", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::5", "code": "#include <onyxudp/udpclient.h>\n\n#include <stdio.h>\n#include <string.h>\n#include <assert.h>\n\n\n/* This test just makes sure the client library compiles and doens't crash on start. */\n\n\nvoid on_error(udp_client_params_t *client, UDPERR code, char const *name) {\n    fprintf(stderr, \"on_error: code %d: %s\\n\", code, name);\n    assert(!\"should not happen\");\n}\n\nint main() {\n    udp_client_params_t params;\n    memset(&params, 0, sizeof(params));\n    params.app_id = 123;\n    params.app_version = 321;\n    params.on_error = on_error;\n    params.on_idle = NULL;\n    params.on_payload = NULL;\n    params.on_disconnect = NULL;\n    udp_client_t *client = udp_client_initialize(&params);\n    assert(client != NULL);\n    udp_client_terminate(client);\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "ony", "x", "udp", "/", "ud", "pc", "lient", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "Ċ", "Ċ", "/*", "ĠThis", "Ġtest", "Ġjust", "Ġmakes", "Ġsure", "Ġthe", "Ġclient", "Ġlibrary", "Ġcompile", "s", "Ġand", "Ġdo", "ens", "'t", "Ġcrash", "Ġon", "Ġstart", ".", "Ġ*/", "Ċ", "Ċ", "Ċ", "void", "Ġon", "_", "error", "(", "udp", "_", "client", "_", "params", "_", "t", "Ġ*", "client", ",", "ĠUDP", "ERR", "Ġcode", ",", "Ġchar", "Ġconst", "Ġ*", "name", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġfprintf", "(", "stderr", ",", "Ġ\"", "on", "_", "error", ":", "Ġcode", "Ġ%", "d", ":", "Ġ%", "s", "\\", "n", "\",", "Ġcode", ",", "Ġname", ");", "Ċ", "ĠĠĠ", "Ġassert", "(!", "\"", "should", "Ġnot", "Ġhappen", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġudp", "_", "client", "_", "params", "_", "t", "Ġparams", ";", "Ċ", "ĠĠĠ", "Ġmemset", "(&", "params", ",", "Ġ0", ",", "Ġsizeof", "(", "params", "));", "Ċ", "ĠĠĠ", "Ġparams", ".", "app", "_", "id", "Ġ=", "Ġ123", ";", "Ċ", "ĠĠĠ", "Ġparams", ".", "app", "_", "version", "Ġ=", "Ġ32", "1", ";", "Ċ", "ĠĠĠ", "Ġparams", ".", "on", "_", "error", "Ġ=", "Ġon", "_", "error", ";", "Ċ", "ĠĠĠ", "Ġparams", ".", "on", "_", "idle", "Ġ=", "ĠNULL", ";", "Ċ", "ĠĠĠ", "Ġparams", ".", "on", "_", "payload", "Ġ=", "ĠNULL", ";", "Ċ", "ĠĠĠ", "Ġparams", ".", "on", "_", "disconnect", "Ġ=", "ĠNULL", ";", "Ċ", "ĠĠĠ", "Ġudp", "_", "client", "_", "t", "Ġ*", "client", "Ġ=", "Ġudp", "_", "client", "_", "initialize", "(&", "params", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "client", "Ġ!=", "ĠNULL", ");", "Ċ", "ĠĠĠ", "Ġudp", "_", "client", "_", "terminate", "(", "client", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::6", "code": "#include <ESP8266WiFi.h>\r\n#include <PubSubClient.h>\r\n#include \"mqtt.h\"\r\n\r\n// Connect to MQTT and set up subscriptions based on configuration\r\nvoid MQTT::connect() {\r\n  // Connect to broker\r\n  this->mqttClient.setServer(this->host, this->port);\r\n  mqttClient.connect(this->clientId);\r\n\r\n  Serial.print(\"Connected to MQTT, with server: \");\r\n  Serial.print(this->host);\r\n  Serial.print(\", port: \");\r\n  Serial.print(this->port);\r\n  Serial.print(\", with client ID: \");\r\n  Serial.println(this->clientId);\r\n\r\n  // Send ping\r\n  ping();\r\n}\r\n\r\n// Send ping to MQTT broker\r\nvoid MQTT::ping() {\r\n  char payload[50];\r\n  sprintf(payload, \"%s ok\", this->clientId);\r\n  this->mqttClient.publish(\"/status\", payload);\r\n  Serial.println(\"Sent ping to broker\");\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "ESP", "82", "66", "Wi", "Fi", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "Pub", "Sub", "Client", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ\"", "mq", "tt", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "//", "ĠConnect", "Ġto", "ĠM", "QTT", "Ġand", "Ġset", "Ġup", "Ġsubscriptions", "Ġbased", "Ġon", "Ġconfiguration", "č", "Ċ", "void", "ĠM", "QTT", "::", "connect", "()", "Ġ{", "č", "Ċ", "Ġ", "Ġ//", "ĠConnect", "Ġto", "Ġbroker", "č", "Ċ", "Ġ", "Ġthis", "->", "mq", "tt", "Client", ".", "set", "Server", "(", "this", "->", "host", ",", "Ġthis", "->", "port", ");", "č", "Ċ", "Ġ", "Ġmq", "tt", "Client", ".", "connect", "(", "this", "->", "clientId", ");", "č", "Ċ", "č", "Ċ", "Ġ", "ĠSerial", ".", "print", "(\"", "Connected", "Ġto", "ĠM", "QTT", ",", "Ġwith", "Ġserver", ":", "Ġ\");", "č", "Ċ", "Ġ", "ĠSerial", ".", "print", "(", "this", "->", "host", ");", "č", "Ċ", "Ġ", "ĠSerial", ".", "print", "(\",", "Ġport", ":", "Ġ\");", "č", "Ċ", "Ġ", "ĠSerial", ".", "print", "(", "this", "->", "port", ");", "č", "Ċ", "Ġ", "ĠSerial", ".", "print", "(\",", "Ġwith", "Ġclient", "ĠID", ":", "Ġ\");", "č", "Ċ", "Ġ", "ĠSerial", ".", "println", "(", "this", "->", "clientId", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ//", "ĠSend", "Ġping", "č", "Ċ", "Ġ", "Ġping", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//", "ĠSend", "Ġping", "Ġto", "ĠM", "QTT", "Ġbroker", "č", "Ċ", "void", "ĠM", "QTT", "::", "ping", "()", "Ġ{", "č", "Ċ", "Ġ", "Ġchar", "Ġpayload", "[", "50", "];", "č", "Ċ", "Ġ", "Ġsprintf", "(", "payload", ",", "Ġ\"%", "s", "Ġok", "\",", "Ġthis", "->", "clientId", ");", "č", "Ċ", "Ġ", "Ġthis", "->", "mq", "tt", "Client", ".", "publish", "(\"/", "status", "\",", "Ġpayload", ");", "č", "Ċ", "Ġ", "ĠSerial", ".", "println", "(\"", "Sent", "Ġping", "Ġto", "Ġbroker", "\");", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::7", "code": "#include <iostream>\n\nusing namespace std;\n\nvoid display(const int *xPos, const int *yPos);\nvoid move(int *xPos, int *yPos);\n\nint main(void) {\n\tint x = 10;\n\tint y = 20;\n\n\tdisplay(&x, &y);\n\tmove(&x, &y);\n\tdisplay(&x, &y);\n\n\treturn 0;\n}\n\nvoid display(const int *xPos, const int *yPos) {\n\t// btw const not needed for this\n\tcout << \"Current position [\" << *xPos << \", \" << *yPos << \"]\" << endl;\n}\n\nvoid move(int *xPos, int *yPos) {\n\t*xPos = *xPos + 1;\n\t*yPos = *yPos + 1;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġdisplay", "(", "const", "Ġint", "Ġ*", "x", "Pos", ",", "Ġconst", "Ġint", "Ġ*", "y", "Pos", ");", "Ċ", "void", "Ġmove", "(", "int", "Ġ*", "x", "Pos", ",", "Ġint", "Ġ*", "y", "Pos", ");", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġx", "Ġ=", "Ġ10", ";", "Ċ", "ĉ", "int", "Ġy", "Ġ=", "Ġ20", ";", "Ċ", "Ċ", "ĉ", "display", "(&", "x", ",", "Ġ&", "y", ");", "Ċ", "ĉ", "move", "(&", "x", ",", "Ġ&", "y", ");", "Ċ", "ĉ", "display", "(&", "x", ",", "Ġ&", "y", ");", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdisplay", "(", "const", "Ġint", "Ġ*", "x", "Pos", ",", "Ġconst", "Ġint", "Ġ*", "y", "Pos", ")", "Ġ{", "Ċ", "ĉ", "//", "Ġb", "tw", "Ġconst", "Ġnot", "Ġneeded", "Ġfor", "Ġthis", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Current", "Ġposition", "Ġ[\"", "Ġ<<", "Ġ*", "x", "Pos", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġ*", "y", "Pos", "Ġ<<", "Ġ\"]\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġmove", "(", "int", "Ġ*", "x", "Pos", ",", "Ġint", "Ġ*", "y", "Pos", ")", "Ġ{", "Ċ", "ĉ", "*", "x", "Pos", "Ġ=", "Ġ*", "x", "Pos", "Ġ+", "Ġ1", ";", "Ċ", "ĉ", "*", "y", "Pos", "Ġ=", "Ġ*", "y", "Pos", "Ġ+", "Ġ1", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::8", "code": "#ifndef GLMESH_H\n#define GLMESH_H\n\n#include <GLplus.hpp>\n\nnamespace tinyobj\n{\n    struct shape_t;\n} // end namespace tinyobj\n\nnamespace GLmesh\n{\n\nclass StaticMesh\n{\n    std::shared_ptr<GLplus::Buffer> mpPositions;\n    std::shared_ptr<GLplus::Buffer> mpTexcoords;\n    std::shared_ptr<GLplus::Buffer> mpNormals;\n    std::shared_ptr<GLplus::Buffer> mpIndices;\n\n    size_t mVertexCount = 0;\n\n    std::shared_ptr<GLplus::Texture2D> mpDiffuseTexture;\n\npublic:\n    void LoadShape(const tinyobj::shape_t& shape);\n\n    void Render(GLplus::Program& program) const;\n};\n\n} // end namespace GLmesh\n\n#endif // GLMESH_H\n", "code_tokens": ["Ġ#", "ifndef", "ĠGL", "MESH", "_", "H", "Ċ", "#", "define", "ĠGL", "MESH", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "GL", "plus", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġtiny", "obj", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstruct", "Ġshape", "_", "t", ";", "Ċ", "}", "Ġ//", "Ġend", "Ġnamespace", "Ġtiny", "obj", "Ċ", "Ċ", "namespace", "ĠGL", "mesh", "Ċ", "{", "Ċ", "Ċ", "class", "ĠStatic", "Mesh", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "GL", "plus", "::", "Buffer", ">", "Ġmp", "Positions", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "GL", "plus", "::", "Buffer", ">", "Ġmp", "Tex", "coords", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "GL", "plus", "::", "Buffer", ">", "Ġmp", "Normals", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "GL", "plus", "::", "Buffer", ">", "Ġmp", "Indices", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġsize", "_", "t", "Ġm", "Vertex", "Count", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "GL", "plus", "::", "Texture", "2", "D", ">", "Ġmp", "Diffuse", "Texture", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvoid", "ĠLoad", "Shape", "(", "const", "Ġtiny", "obj", "::", "shape", "_", "t", "&", "Ġshape", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠRender", "(", "GL", "plus", "::", "Program", "&", "Ġprogram", ")", "Ġconst", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġend", "Ġnamespace", "ĠGL", "mesh", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠGL", "MESH", "_", "H", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::9", "code": "#include <CImageLibI.h>\n#include <CImageColorDefP.h>\n\n#include <cstring>\n\nbool\nCImageColorDef::\ngetRGB(const std::string &name, double *r, double *g, double *b)\n{\n  int ri, gi, bi;\n\n  if (! getRGBI(name, &ri, &gi, &bi))\n    return false;\n\n  double rgb_scale = 1.0/255.0;\n\n  *r = ri*rgb_scale;\n  *g = gi*rgb_scale;\n  *b = bi*rgb_scale;\n\n  return true;\n}\n\nbool\nCImageColorDef::\ngetRGBI(const std::string &name, int *r, int *g, int *b)\n{\n  int i;\n\n  std::string lname = CStrUtil::toLower(name);\n\n  const char *name1 = lname.c_str();\n\n  for (i = 0; color_def_data[i].name != 0; ++i)\n    if (strcmp(color_def_data[i].name, name1) == 0)\n      break;\n\n  if (color_def_data[i].name == 0)\n    return false;\n\n  *r = color_def_data[i].r;\n  *g = color_def_data[i].g;\n  *b = color_def_data[i].b;\n\n  return true;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "C", "Image", "Lib", "I", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "C", "Image", "Color", "Def", "P", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "Ċ", "bool", "Ċ", "C", "Image", "Color", "Def", "::", "Ċ", "get", "RGB", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ",", "Ġdouble", "Ġ*", "r", ",", "Ġdouble", "Ġ*", "g", ",", "Ġdouble", "Ġ*", "b", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġri", ",", "Ġgi", ",", "Ġbi", ";", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(!", "Ġget", "RGB", "I", "(", "name", ",", "Ġ&", "ri", ",", "Ġ&", "gi", ",", "Ġ&", "bi", "))", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ċ", "Ġ", "Ġdouble", "Ġrgb", "_", "scale", "Ġ=", "Ġ1", ".", "0", "/", "255", ".", "0", ";", "Ċ", "Ċ", "Ġ", "Ġ*", "r", "Ġ=", "Ġri", "*", "rgb", "_", "scale", ";", "Ċ", "Ġ", "Ġ*", "g", "Ġ=", "Ġgi", "*", "rgb", "_", "scale", ";", "Ċ", "Ġ", "Ġ*", "b", "Ġ=", "Ġbi", "*", "rgb", "_", "scale", ";", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "Ċ", "C", "Image", "Color", "Def", "::", "Ċ", "get", "RGB", "I", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ",", "Ġint", "Ġ*", "r", ",", "Ġint", "Ġ*", "g", ",", "Ġint", "Ġ*", "b", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġi", ";", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġl", "name", "Ġ=", "ĠC", "Str", "Util", "::", "toLower", "(", "name", ");", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġchar", "Ġ*", "name", "1", "Ġ=", "Ġl", "name", ".", "c", "_", "str", "();", "Ċ", "Ċ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġcolor", "_", "def", "_", "data", "[", "i", "].", "name", "Ġ!=", "Ġ0", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "strcmp", "(", "color", "_", "def", "_", "data", "[", "i", "].", "name", ",", "Ġname", "1", ")", "Ġ==", "Ġ0", ")", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "color", "_", "def", "_", "data", "[", "i", "].", "name", "Ġ==", "Ġ0", ")", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ċ", "Ġ", "Ġ*", "r", "Ġ=", "Ġcolor", "_", "def", "_", "data", "[", "i", "].", "r", ";", "Ċ", "Ġ", "Ġ*", "g", "Ġ=", "Ġcolor", "_", "def", "_", "data", "[", "i", "].", "g", ";", "Ċ", "Ġ", "Ġ*", "b", "Ġ=", "Ġcolor", "_", "def", "_", "data", "[", "i", "].", "b", ";", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::10", "code": "#include <iostream>\r\n#include <seqan/graph_types.h>\r\n#include <seqan/graph_algorithms.h>\r\n#include <seqan/find_motif.h>\r\n\r\n\r\nusing namespace seqan;\r\n\r\nint main ()\r\n{\r\n\ttypedef unsigned int TCargo;\r\n    typedef Graph<Undirected<TCargo> > TGraph;\r\n    typedef VertexDescriptor<TGraph>::Type TVertexDescriptor;\r\n\tTGraph g;\r\n\tTVertexDescriptor edges[]={1,0,0,4,2,1,4,1,5,1,6,2,3,2,2,3,7,3,5,4,6,5,5,6,7,6,7,7};\r\n\taddEdges(g,edges,14);\r\n\t\r\n\tchar letters[]={'a','b','c','d','e','f','g','h'};\r\n\tString<char>map;\r\n\tassignVertexMap(g, map, letters);\r\n\t TVertexDescriptor start = 0;\r\n    typedef Iterator<TGraph, DfsPreorder>::Type TDfsIterator;\r\n    TDfsIterator dfsIt(g, start);\r\n\r\n    std::cout << \"Iterate from '\" << getProperty(nameMap, start) << \"' in depth-first-search ordering: \";\r\n    while(!atEnd(dfsIt)) {\r\n        std::cout << getProperty(nameMap, getValue(dfsIt)) << \", \";\r\n        goNext(dfsIt);\r\n    }\r\n    std::cout << std::endl;\r\n\t\r\n\t::std::cout << g << ::std::endl;\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "graph", "_", "types", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "graph", "_", "algorithms", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "find", "_", "mot", "if", ".", "h", ">", "č", "Ċ", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "Ġ()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "typedef", "Ġunsigned", "Ġint", "ĠTC", "argo", ";", "č", "Ċ", "ĠĠĠ", "Ġtypedef", "ĠGraph", "<", "Und", "irected", "<", "TC", "argo", ">", "Ġ>", "ĠT", "Graph", ";", "č", "Ċ", "ĠĠĠ", "Ġtypedef", "ĠVertex", "Descriptor", "<", "T", "Graph", ">::", "Type", "ĠT", "Vertex", "Descriptor", ";", "č", "Ċ", "ĉ", "T", "Graph", "Ġg", ";", "č", "Ċ", "ĉ", "T", "Vertex", "Descriptor", "Ġedges", "[]", "={", "1", ",", "0", ",", "0", ",", "4", ",", "2", ",", "1", ",", "4", ",", "1", ",", "5", ",", "1", ",", "6", ",", "2", ",", "3", ",", "2", ",", "2", ",", "3", ",", "7", ",", "3", ",", "5", ",", "4", ",", "6", ",", "5", ",", "5", ",", "6", ",", "7", ",", "6", ",", "7", ",", "7", "};", "č", "Ċ", "ĉ", "add", "Edges", "(", "g", ",", "edges", ",", "14", ");", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "char", "Ġletters", "[]", "={'", "a", "','", "b", "','", "c", "','", "d", "','", "e", "','", "f", "','", "g", "','", "h", "'};", "č", "Ċ", "ĉ", "String", "<", "char", ">", "map", ";", "č", "Ċ", "ĉ", "assign", "Vertex", "Map", "(", "g", ",", "Ġmap", ",", "Ġletters", ");", "č", "Ċ", "ĉ", "ĠT", "Vertex", "Descriptor", "Ġstart", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĠĠĠ", "Ġtypedef", "ĠIterator", "<", "T", "Graph", ",", "ĠD", "fs", "Pre", "order", ">::", "Type", "ĠTD", "fs", "Iterator", ";", "č", "Ċ", "ĠĠĠ", "ĠTD", "fs", "Iterator", "Ġdfs", "It", "(", "g", ",", "Ġstart", ");", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Iterate", "Ġfrom", "Ġ'\"", "Ġ<<", "ĠgetProperty", "(", "name", "Map", ",", "Ġstart", ")", "Ġ<<", "Ġ\"'", "Ġin", "Ġdepth", "-", "first", "-", "search", "Ġordering", ":", "Ġ\";", "č", "Ċ", "ĠĠĠ", "Ġwhile", "(!", "at", "End", "(", "dfs", "It", "))", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "ĠgetProperty", "(", "name", "Map", ",", "ĠgetValue", "(", "dfs", "It", "))", "Ġ<<", "Ġ\",", "Ġ\";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġgo", "Next", "(", "dfs", "It", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "endl", ";", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "::", "std", "::", "cout", "Ġ<<", "Ġg", "Ġ<<", "Ġ::", "std", "::", "endl", ";", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::11", "code": "// $Author: benine $\n// $Date$\n// $Log$\n// Contains the mismatch class for afin\n\n#ifndef MISMATCH_H\n#define MISMATCH_H\n\n//////////////////////////////////////////////\\\n// Mismatch Class: ////////////////////////////>\n//////////////////////////////////////////////\n//\n// Mismatch object, contains all classes, methods, data, and data references necessary for processing mismatches for contig fusion\n// There will be only one Process object needed per iteration of this program\nclass Mismatch{\n  private:\n    double score;\n    int length;\n    int index_i;\n    int index_j;\n    int end_i;\n    int end_j;\n    \n  public:\n    Mismatch();\n\n    Mismatch( double score, int length, int index_i, int index_j, int end_i, int end_j );\n\n    // set mismatch score\n    void set_score( double score );\n\n    // set length\n    void set_length( int length );\n\n    // set index_i\n    void set_index_i( int index );\n\n    // set index_j\n    void set_index_j( int index );\n\n    // set index\n    void set_indices( int index_i, int index_j );\n\n    // set end_i\n    void set_end_i( int end_i );\n\n    // set end_j\n    void set_end_j( int end_j );\n\n    // return mismatch score\n    double get_score();\n\n    // return length\n    int get_length();\n\n    // return index i\n    int get_index_i();\n\n    // return index j\n    int get_index_j();\n\n    // return end_i\n    int get_end_i();\n\n    // return end_j\n    int get_end_j();\n};\n\n#endif\n", "code_tokens": ["Ġ//", "Ġ$", "Author", ":", "Ġb", "en", "ine", "Ġ$", "Ċ", "//", "Ġ$", "Date", "$", "Ċ", "//", "Ġ$", "Log", "$", "Ċ", "//", "ĠContains", "Ġthe", "Ġmismatch", "Ġclass", "Ġfor", "Ġa", "fin", "Ċ", "Ċ", "#", "ifndef", "ĠM", "IS", "MATCH", "_", "H", "Ċ", "#", "define", "ĠM", "IS", "MATCH", "_", "H", "Ċ", "Ċ", "////////////////////////////////", "////////", "//////", "\\", "Ċ", "//", "ĠM", "ismatch", "ĠClass", ":", "Ġ//", "////////////////////////", "//", ">", "Ċ", "////////////////////////////////", "////////", "//////", "Ċ", "//", "Ċ", "//", "ĠM", "ismatch", "Ġobject", ",", "Ġcontains", "Ġall", "Ġclasses", ",", "Ġmethods", ",", "Ġdata", ",", "Ġand", "Ġdata", "Ġreferences", "Ġnecessary", "Ġfor", "Ġprocessing", "Ġmis", "matches", "Ġfor", "Ġcont", "ig", "Ġf", "usion", "Ċ", "//", "ĠThere", "Ġwill", "Ġbe", "Ġonly", "Ġone", "ĠProcess", "Ġobject", "Ġneeded", "Ġper", "Ġiteration", "Ġof", "Ġthis", "Ġprogram", "Ċ", "class", "ĠM", "ismatch", "{", "Ċ", "Ġ", "Ġprivate", ":", "Ċ", "ĠĠĠ", "Ġdouble", "Ġscore", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġlength", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġindex", "_", "i", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġindex", "_", "j", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġend", "_", "i", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġend", "_", "j", ";", "Ċ", "ĠĠĠĠĊ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "ĠM", "ismatch", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠM", "ismatch", "(", "Ġdouble", "Ġscore", ",", "Ġint", "Ġlength", ",", "Ġint", "Ġindex", "_", "i", ",", "Ġint", "Ġindex", "_", "j", ",", "Ġint", "Ġend", "_", "i", ",", "Ġint", "Ġend", "_", "j", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġmismatch", "Ġscore", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "score", "(", "Ġdouble", "Ġscore", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġlength", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "length", "(", "Ġint", "Ġlength", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġindex", "_", "i", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "index", "_", "i", "(", "Ġint", "Ġindex", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġindex", "_", "j", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "index", "_", "j", "(", "Ġint", "Ġindex", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġindex", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "indices", "(", "Ġint", "Ġindex", "_", "i", ",", "Ġint", "Ġindex", "_", "j", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġend", "_", "i", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "end", "_", "i", "(", "Ġint", "Ġend", "_", "i", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġend", "_", "j", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "end", "_", "j", "(", "Ġint", "Ġend", "_", "j", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġreturn", "Ġmismatch", "Ġscore", "Ċ", "ĠĠĠ", "Ġdouble", "Ġget", "_", "score", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġreturn", "Ġlength", "Ċ", "ĠĠĠ", "Ġint", "Ġget", "_", "length", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġreturn", "Ġindex", "Ġi", "Ċ", "ĠĠĠ", "Ġint", "Ġget", "_", "index", "_", "i", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġreturn", "Ġindex", "Ġj", "Ċ", "ĠĠĠ", "Ġint", "Ġget", "_", "index", "_", "j", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġreturn", "Ġend", "_", "i", "Ċ", "ĠĠĠ", "Ġint", "Ġget", "_", "end", "_", "i", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġreturn", "Ġend", "_", "j", "Ċ", "ĠĠĠ", "Ġint", "Ġget", "_", "end", "_", "j", "();", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::12", "code": "#ifndef _HC_EXCEPTION_HPP_\n#define _HC_EXCEPTION_HPP_\n\n//////////////\n// Includes //\n#include <exception>\n#include <string>\n\n//////////\n// Code //\n\n// To distinguish between different HCExceptions.\nenum HCType {\n    // When the game cannot open the SDL window.\n    HC_WINDOW_EXCEPTION,\n\n    // When the game cannot load an asset, or it has been destroyed.\n    HC_ASSET_EXCEPTION\n};\n\n// A custom exception for this project.\nclass HCException : public std::exception {\nprivate:\n    std::string msg;\n    HCType type;\n\npublic:\n    // Creating an HCException with a message and a type.\n    HCException(std::string, HCType);\n    \n    // The message of this HCException.\n    const char* what() throw();\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "Ġ_", "HC", "_", "EXCEPTION", "_", "HP", "P", "_", "Ċ", "#", "define", "Ġ_", "HC", "_", "EXCEPTION", "_", "HP", "P", "_", "Ċ", "Ċ", "////////", "//////", "Ċ", "//", "ĠInclude", "s", "Ġ//", "Ċ", "#", "include", "Ġ<", "exception", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "////////", "//", "Ċ", "//", "ĠCode", "Ġ//", "Ċ", "Ċ", "//", "ĠTo", "Ġdistinguish", "Ġbetween", "Ġdifferent", "ĠHC", "Exceptions", ".", "Ċ", "enum", "ĠHC", "Type", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "ĠWhen", "Ġthe", "Ġgame", "Ġcannot", "Ġopen", "Ġthe", "ĠSDL", "Ġwindow", ".", "Ċ", "ĠĠĠ", "ĠHC", "_", "WINDOW", "_", "EXCEPTION", ",", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠWhen", "Ġthe", "Ġgame", "Ġcannot", "Ġload", "Ġan", "Ġasset", ",", "Ġor", "Ġit", "Ġhas", "Ġbeen", "Ġdestroyed", ".", "Ċ", "ĠĠĠ", "ĠHC", "_", "ASSET", "_", "EXCEPTION", "Ċ", "};", "Ċ", "Ċ", "//", "ĠA", "Ġcustom", "Ġexception", "Ġfor", "Ġthis", "Ġproject", ".", "Ċ", "class", "ĠHC", "Exception", "Ġ:", "Ġpublic", "Ġstd", "::", "exception", "Ġ{", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġmsg", ";", "Ċ", "ĠĠĠ", "ĠHC", "Type", "Ġtype", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġ//", "ĠCreating", "Ġan", "ĠHC", "Exception", "Ġwith", "Ġa", "Ġmessage", "Ġand", "Ġa", "Ġtype", ".", "Ċ", "ĠĠĠ", "ĠHC", "Exception", "(", "std", "::", "string", ",", "ĠHC", "Type", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ//", "ĠThe", "Ġmessage", "Ġof", "Ġthis", "ĠHC", "Exception", ".", "Ċ", "ĠĠĠ", "Ġconst", "Ġchar", "*", "Ġwhat", "()", "Ġthrow", "();", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::13", "code": "#include <iostream>\r\n#include <string>\r\n#include<iomanip>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    string a;\r\n    double h,m,x;\r\n\r\n    while(cin>>a)\r\n    {\r\n         if(a==\"0:00\")break;\r\n            if(a[1]==':')\r\n            {\r\n                h=a[0]-'0';\r\n                m=(a[2]-'0')*10+(a[3]-'0');\r\n            }\r\n            else if(a[2]==':')\r\n            {\r\n                h=(a[0]-'0')*10+(a[1]-'0');\r\n                m=(a[3]-'0')*10+(a[4]-'0');\r\n            }\r\n            x=30*h+m/2-6*m;\r\n            if(x<0)\r\n            {\r\n                x=-x;\r\n            }\r\n            if(x>180)\r\n            {\r\n                x=360-x;\r\n            }\r\n            cout<<fixed<<setprecision(3)<<x<<endl;\r\n    }\r\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "#", "include", "Ġ<", "string", ">", "č", "Ċ", "#", "include", "<", "iom", "an", "ip", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġstring", "Ġa", ";", "č", "Ċ", "ĠĠĠ", "Ġdouble", "Ġh", ",", "m", ",", "x", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġwhile", "(", "cin", ">>", "a", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġif", "(", "a", "==\"", "0", ":", "00", "\")", "break", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "a", "[", "1", "]==", "':", "')", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġh", "=", "a", "[", "0", "]-", "'", "0", "';", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "=(", "a", "[", "2", "]-", "'", "0", "')", "*", "10", "+(", "a", "[", "3", "]-", "'", "0", "');", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "(", "a", "[", "2", "]==", "':", "')", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġh", "=(", "a", "[", "0", "]-", "'", "0", "')", "*", "10", "+(", "a", "[", "1", "]-", "'", "0", "');", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "=(", "a", "[", "3", "]-", "'", "0", "')", "*", "10", "+(", "a", "[", "4", "]-", "'", "0", "');", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġx", "=", "30", "*", "h", "+", "m", "/", "2", "-", "6", "*", "m", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "x", "<", "0", ")", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġx", "=-", "x", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "x", ">", "180", ")", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġx", "=", "360", "-", "x", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "<<", "fixed", "<<", "set", "precision", "(", "3", ")<<", "x", "<<", "endl", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::14", "code": "class Solution {\npublic:\n\tint findRadius(vector<int>& houses, vector<int>& heaters) {\n\t\tsort(houses.begin(), houses.end());\n\t\tsort(heaters.begin(), heaters.end());\n\n\t\tauto radius = 0;\n\t\tauto idx = 0;\n\t\tfor (auto house : houses) {\n\t\t\tauto current = abs(house - heaters[idx]);\n\t\t\tif (current <= radius) continue;\n\n\t\t\tfor (auto n = idx + 1; n < heaters.size(); ++n) {\n\t\t\t\tif (abs(house - heaters[n]) <= current) {\n\t\t\t\t\tcurrent = abs(house - heaters[n]);\n\t\t\t\t\tidx = n;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tradius = max(radius, current);\n\t\t}\n\t\treturn radius;\n\t}\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "int", "Ġfind", "Radius", "(", "vector", "<", "int", ">&", "Ġhouse", "s", ",", "Ġvector", "<", "int", ">&", "Ġheat", "ers", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "sort", "(", "house", "s", ".", "begin", "(),", "Ġhouse", "s", ".", "end", "());", "Ċ", "ĉ", "ĉ", "sort", "(", "heat", "ers", ".", "begin", "(),", "Ġheat", "ers", ".", "end", "());", "Ċ", "Ċ", "ĉ", "ĉ", "auto", "Ġradius", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "auto", "Ġidx", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "auto", "Ġhouse", "Ġ:", "Ġhouse", "s", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "auto", "Ġcurrent", "Ġ=", "Ġabs", "(", "house", "Ġ-", "Ġheat", "ers", "[", "idx", "]);", "Ċ", "ĉĉ", "ĉ", "if", "Ġ(", "current", "Ġ<=", "Ġradius", ")", "Ġcontinue", ";", "Ċ", "Ċ", "ĉĉ", "ĉ", "for", "Ġ(", "auto", "Ġn", "Ġ=", "Ġidx", "Ġ+", "Ġ1", ";", "Ġn", "Ġ<", "Ġheat", "ers", ".", "size", "();", "Ġ++", "n", ")", "Ġ{", "Ċ", "ĉĉĉ", "ĉ", "if", "Ġ(", "abs", "(", "house", "Ġ-", "Ġheat", "ers", "[", "n", "])", "Ġ<=", "Ġcurrent", ")", "Ġ{", "Ċ", "ĉĉĉĉ", "ĉ", "current", "Ġ=", "Ġabs", "(", "house", "Ġ-", "Ġheat", "ers", "[", "n", "]);", "Ċ", "ĉĉĉĉ", "ĉ", "idx", "Ġ=", "Ġn", ";", "Ċ", "ĉĉĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉĉĉĉ", "ĉ", "break", ";", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉĉ", "ĉ", "radius", "Ġ=", "Ġmax", "(", "radius", ",", "Ġcurrent", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "return", "Ġradius", ";", "Ċ", "ĉ", "}", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::15", "code": "/**\n * Test program.\n *\n * Copyright (c) 2015 Alex Jin (toalexjin@hotmail.com)\n */\n\n#include \"test/test.h\"\n#include <iostream>\n\n\nnamespace {\n\nvoid help() {\n\tstd::cout << \"Usage: testalgo -a\" << std::endl;\n\tstd::cout << \"       testalgo <test-case-name>\" << std::endl;\n\tstd::cout << std::endl;\n\tstd::cout << \"Options:\" << std::endl;\n\tstd::cout << \"       -a    Run all test cases\" << std::endl;\n\tstd::cout << std::endl;\n\tstd::cout << \"Test Case Names:\" << std::endl;\n\n\tconst auto names = test_manager_t::instance().get_names();\n\tfor (auto it = names.begin(); it != names.end(); ++it) {\n\t\tstd::cout << \"       \" << *it << std::endl;\n\t}\n\tstd::cout << std::endl;\n}\n\n} // unnamed namespace\n\n\nint main(int argc, char* argv[]) {\n\n\tif (argc != 2) {\n\t\thelp();\n\t\texit(1);\n\t}\n\n\tbool result = false;\n\tstd::string arg1 = argv[1];\n\n\tif (arg1 == \"-a\") {\n\t\tresult = test_manager_t::instance().run();\n\t}\n\telse {\n\t\tresult = test_manager_t::instance().run(arg1);\n\t}\n\n\treturn result ? 0 : 2;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠTest", "Ġprogram", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "ĠA", "lex", "ĠJ", "in", "Ġ(", "to", "alex", "j", "in", "@", "hot", "mail", ".", "com", ")", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "/", "test", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "void", "Ġhelp", "()", "Ġ{", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Usage", ":", "Ġtest", "algo", "Ġ-", "a", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "ĠĠĠĠĠĠ", "Ġtest", "algo", "Ġ<", "test", "-", "case", "-", "name", ">\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Options", ":\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "ĠĠĠĠĠĠ", "Ġ-", "a", "ĠĠĠ", "ĠRun", "Ġall", "Ġtest", "Ġcases", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Test", "ĠCase", "ĠNames", ":\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĉ", "const", "Ġauto", "Ġnames", "Ġ=", "Ġtest", "_", "manager", "_", "t", "::", "instance", "().", "get", "_", "names", "();", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġit", "Ġ=", "Ġnames", ".", "begin", "();", "Ġit", "Ġ!=", "Ġnames", ".", "end", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "ĠĠĠĠĠĠ", "Ġ\"", "Ġ<<", "Ġ*", "it", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġunnamed", "Ġnamespace", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ġ{", "Ċ", "Ċ", "ĉ", "if", "Ġ(", "argc", "Ġ!=", "Ġ2", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "help", "();", "Ċ", "ĉ", "ĉ", "exit", "(", "1", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "bool", "Ġresult", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "std", "::", "string", "Ġarg", "1", "Ġ=", "Ġargv", "[", "1", "];", "Ċ", "Ċ", "ĉ", "if", "Ġ(", "arg", "1", "Ġ==", "Ġ\"-", "a", "\")", "Ġ{", "Ċ", "ĉ", "ĉ", "result", "Ġ=", "Ġtest", "_", "manager", "_", "t", "::", "instance", "().", "run", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġ{", "Ċ", "ĉ", "ĉ", "result", "Ġ=", "Ġtest", "_", "manager", "_", "t", "::", "instance", "().", "run", "(", "arg", "1", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġresult", "Ġ?", "Ġ0", "Ġ:", "Ġ2", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::16", "code": "\n\n__global__ void /*{kernel_name}*/(/*{parameters}*/)\n{\n    int _tid_ = threadIdx.x + blockIdx.x * blockDim.x;\n\n    if (_tid_ < /*{num_threads}*/)\n    {\n/*{execution}*/\n        \n        _result_[_tid_] = /*{block_invocation}*/;\n    }\n}\n\n\n", "code_tokens": ["Ċ", "Ċ", "__", "global", "__", "Ġvoid", "Ġ/*", "{", "kernel", "_", "name", "}*/", "(/*", "{", "parameters", "}", "*/)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġ_", "tid", "_", "Ġ=", "Ġthread", "Idx", ".", "x", "Ġ+", "Ġblock", "Idx", ".", "x", "Ġ*", "Ġblock", "Dim", ".", "x", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(_", "tid", "_", "Ġ<", "Ġ/*", "{", "num", "_", "threads", "}", "*/)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "/*", "{", "execution", "}*/", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġ_", "result", "_", "[_", "tid", "_", "]", "Ġ=", "Ġ/*", "{", "block", "_", "invocation", "}*/", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::17", "code": "#ifndef __CXXU_TYPE_TRAITS_H__\n#define __CXXU_TYPE_TRAITS_H__\n\n#include <type_traits>\n#include <memory>\n\nnamespace cxxu {\n\ntemplate <typename T>\nstruct is_shared_ptr_helper : std::false_type\n{\n    typedef T element_type;\n\n    static\n    element_type& deref(element_type& e)\n    { return e; }\n\n    static\n    const element_type& deref(const element_type& e)\n    { return e; }\n};\n\ntemplate <typename T>\nstruct is_shared_ptr_helper<std::shared_ptr<T>> : std::true_type\n{\n    typedef typename std::remove_cv<T>::type element_type;\n    typedef std::shared_ptr<element_type> ptr_type;\n\n    static\n    element_type& deref(ptr_type& p)\n    { return *p; }\n\n    static\n    const element_type& deref(const ptr_type& p)\n    { return *p; }\n};\n\ntemplate <typename T>\nstruct is_shared_ptr\n: is_shared_ptr_helper<typename std::remove_cv<T>::type>\n{};\n\n} // namespace cxxu\n\n#endif // __CXXU_TYPE_TRAITS_H__\n", "code_tokens": ["Ġ#", "ifndef", "Ġ__", "CXX", "U", "_", "TYPE", "_", "TRA", "ITS", "_", "H", "__", "Ċ", "#", "define", "Ġ__", "CXX", "U", "_", "TYPE", "_", "TRA", "ITS", "_", "H", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "type", "_", "traits", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "namespace", "Ġcxx", "u", "Ġ{", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ċ", "struct", "Ġis", "_", "shared", "_", "ptr", "_", "helper", "Ġ:", "Ġstd", "::", "false", "_", "type", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtypedef", "ĠT", "Ġelement", "_", "type", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstatic", "Ċ", "ĠĠĠ", "Ġelement", "_", "type", "&", "Ġderef", "(", "element", "_", "type", "&", "Ġe", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ġreturn", "Ġe", ";", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġstatic", "Ċ", "ĠĠĠ", "Ġconst", "Ġelement", "_", "type", "&", "Ġderef", "(", "const", "Ġelement", "_", "type", "&", "Ġe", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ġreturn", "Ġe", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ċ", "struct", "Ġis", "_", "shared", "_", "ptr", "_", "helper", "<", "std", "::", "shared", "_", "ptr", "<", "T", ">>", "Ġ:", "Ġstd", "::", "true", "_", "type", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġtypename", "Ġstd", "::", "remove", "_", "cv", "<", "T", ">::", "type", "Ġelement", "_", "type", ";", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "shared", "_", "ptr", "<", "element", "_", "type", ">", "Ġptr", "_", "type", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstatic", "Ċ", "ĠĠĠ", "Ġelement", "_", "type", "&", "Ġderef", "(", "ptr", "_", "type", "&", "Ġp", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ġreturn", "Ġ*", "p", ";", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġstatic", "Ċ", "ĠĠĠ", "Ġconst", "Ġelement", "_", "type", "&", "Ġderef", "(", "const", "Ġptr", "_", "type", "&", "Ġp", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ġreturn", "Ġ*", "p", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ċ", "struct", "Ġis", "_", "shared", "_", "ptr", "Ċ", ":", "Ġis", "_", "shared", "_", "ptr", "_", "helper", "<", "typename", "Ġstd", "::", "remove", "_", "cv", "<", "T", ">::", "type", ">", "Ċ", "{};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġcxx", "u", "Ċ", "Ċ", "#", "endif", "Ġ//", "Ġ__", "CXX", "U", "_", "TYPE", "_", "TRA", "ITS", "_", "H", "__", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::18", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint count_consecutive(string &s, int n, int k, char x) {\n    int mx_count = 0;\n    int x_count = 0;\n    int curr_count = 0;\n    int l = 0;\n    int r = 0;\n\n    while (r < n) {\n\n        if (x_count <= k) {\n            if (s[r] == x)\n                x_count++;\n            r++;\n            curr_count++;\n            if (s[r-1] != x) mx_count = max(mx_count, curr_count);\n        } else {\n            if (s[l] == x) {\n                x_count--;\n            }\n            l++;\n            curr_count--;\n        }\n\n    }\n\n    if (s[s.size()-1] == x && x_count) mx_count++;\n\n    return mx_count;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    int n, k;\n    string s;\n\n    cin >> n >> k;\n    cin >> s;\n\n    cout << max(count_consecutive(s, n, k, 'b'), count_consecutive(s, n, k, 'a')) << endl;\n\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġcount", "_", "con", "secutive", "(", "string", "Ġ&", "s", ",", "Ġint", "Ġn", ",", "Ġint", "Ġk", ",", "Ġchar", "Ġx", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġmx", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġx", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġcurr", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġl", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġr", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "r", "Ġ<", "Ġn", ")", "Ġ{", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "x", "_", "count", "Ġ<=", "Ġk", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "s", "[", "r", "]", "Ġ==", "Ġx", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġx", "_", "count", "++;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġr", "++;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcurr", "_", "count", "++;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "s", "[", "r", "-", "1", "]", "Ġ!=", "Ġx", ")", "Ġmx", "_", "count", "Ġ=", "Ġmax", "(", "mx", "_", "count", ",", "Ġcurr", "_", "count", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "s", "[", "l", "]", "Ġ==", "Ġx", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġx", "_", "count", "--;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġl", "++;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcurr", "_", "count", "--;", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "s", "[", "s", ".", "size", "()-", "1", "]", "Ġ==", "Ġx", "Ġ&&", "Ġx", "_", "count", ")", "Ġmx", "_", "count", "++;", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġmx", "_", "count", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġios", "::", "sync", "_", "with", "_", "stdio", "(", "false", ");", "Ċ", "ĠĠĠ", "Ġcin", ".", "tie", "(", "nullptr", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "Ġk", ";", "Ċ", "ĠĠĠ", "Ġstring", "Ġs", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġn", "Ġ>>", "Ġk", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġs", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġmax", "(", "count", "_", "con", "secutive", "(", "s", ",", "Ġn", ",", "Ġk", ",", "Ġ'", "b", "'),", "Ġcount", "_", "con", "secutive", "(", "s", ",", "Ġn", ",", "Ġk", ",", "Ġ'", "a", "'))", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::19", "code": "/** ---------------------------------------------------------------------------\n * -*- c++ -*-\n * @file: particlebody.cpp\n *\n * Copyright (c) 2017 Yann Herklotz Grave <ymherklotz@gmail.com>\n * MIT License, see LICENSE file for more details.\n * ----------------------------------------------------------------------------\n */\n\n#include <yage/physics/particlebody.h>\n\n#include <cmath>\n\nnamespace yage\n{\n\nParticleBody::ParticleBody(const Vector2d &position, double mass,\n                           const Vector2d &velocity, bool gravity)\n    : Body(position, mass, velocity, gravity)\n{\n}\n\nvoid ParticleBody::applyForce(const Vector2d &force)\n{\n    force_ += force;\n}\n\nvoid ParticleBody::update()\n{\n    // set the time_step for 60fps\n    double time_step = 1.0 / 60.0;\n\n    // set the last acceleration\n    Vector2d last_acceleration = acceleration_;\n\n    // update the position of the body\n    position_ += velocity_ * time_step +\n                 (0.5 * last_acceleration * std::pow(time_step, 2));\n\n    // update the acceleration\n    if (gravity_) {\n        acceleration_ =\n            Vector2d(force_.x() / mass_, (GRAVITY + force_.y()) / mass_);\n    } else {\n        acceleration_ = Vector2d(force_.x() / mass_, force_.y() / mass_);\n    }\n\n    Vector2d avg_acceleration = (acceleration_ + last_acceleration) / 2.0;\n\n    // update the velocity of the body\n    velocity_ += avg_acceleration * time_step;\n}\n\n} // namespace yage\n", "code_tokens": ["Ġ/**", "Ġ---------------------------------------------------------------------------", "Ċ", "Ġ*", "Ġ-", "*-", "Ġc", "++", "Ġ-", "*-", "Ċ", "Ġ*", "Ġ@", "file", ":", "Ġparticle", "body", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2017", "ĠY", "ann", "ĠH", "erk", "lot", "z", "ĠGra", "ve", "Ġ<", "ym", "her", "k", "lot", "z", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*", "ĠMIT", "ĠLicense", ",", "Ġsee", "ĠLICENSE", "Ġfile", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ġ----------------------------------------------------------------------------", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "y", "age", "/", "physics", "/", "particle", "body", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "Ċ", "namespace", "Ġy", "age", "Ċ", "{", "Ċ", "Ċ", "Particle", "Body", "::", "Particle", "Body", "(", "const", "ĠVector", "2", "d", "Ġ&", "position", ",", "Ġdouble", "Ġmass", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "ĠVector", "2", "d", "Ġ&", "velocity", ",", "Ġbool", "Ġgravity", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠBody", "(", "position", ",", "Ġmass", ",", "Ġvelocity", ",", "Ġgravity", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠParticle", "Body", "::", "apply", "Force", "(", "const", "ĠVector", "2", "d", "Ġ&", "force", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġforce", "_", "Ġ+=", "Ġforce", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠParticle", "Body", "::", "update", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġthe", "Ġtime", "_", "step", "Ġfor", "Ġ60", "fps", "Ċ", "ĠĠĠ", "Ġdouble", "Ġtime", "_", "step", "Ġ=", "Ġ1", ".", "0", "Ġ/", "Ġ60", ".", "0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġthe", "Ġlast", "Ġacceleration", "Ċ", "ĠĠĠ", "ĠVector", "2", "d", "Ġlast", "_", "ac", "celeration", "Ġ=", "Ġacceleration", "_;", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġupdate", "Ġthe", "Ġposition", "Ġof", "Ġthe", "Ġbody", "Ċ", "ĠĠĠ", "Ġposition", "_", "Ġ+=", "Ġvelocity", "_", "Ġ*", "Ġtime", "_", "step", "Ġ+", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(", "0", ".", "5", "Ġ*", "Ġlast", "_", "ac", "celeration", "Ġ*", "Ġstd", "::", "pow", "(", "time", "_", "step", ",", "Ġ2", "));", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġupdate", "Ġthe", "Ġacceleration", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "gravity", "_)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġacceleration", "_", "Ġ=", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠVector", "2", "d", "(", "force", "_.", "x", "()", "Ġ/", "Ġmass", "_,", "Ġ(", "GR", "AV", "ITY", "Ġ+", "Ġforce", "_.", "y", "())", "Ġ/", "Ġmass", "_);", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġacceleration", "_", "Ġ=", "ĠVector", "2", "d", "(", "force", "_.", "x", "()", "Ġ/", "Ġmass", "_,", "Ġforce", "_.", "y", "()", "Ġ/", "Ġmass", "_);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠVector", "2", "d", "Ġavg", "_", "ac", "celeration", "Ġ=", "Ġ(", "ac", "celeration", "_", "Ġ+", "Ġlast", "_", "ac", "celeration", ")", "Ġ/", "Ġ2", ".", "0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġupdate", "Ġthe", "Ġvelocity", "Ġof", "Ġthe", "Ġbody", "Ċ", "ĠĠĠ", "Ġvelocity", "_", "Ġ+=", "Ġavg", "_", "ac", "celeration", "Ġ*", "Ġtime", "_", "step", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġy", "age", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::20", "code": "//\n// Created by Aman LaChapelle on 5/26/17.\n//\n// pytorch_inference\n// Copyright (c) 2017 Aman LaChapelle\n// Full license at pytorch_inference/LICENSE.txt\n//\n\n#include \"../include/layers.hpp\"\n\n#include \"utils.hpp\"\n\nint main(){\n  std::vector<pytorch::tensor> tests = test_setup({1, 1, 1},\n                                            {2, 2, 2},\n                                            {45, 45, 45},\n                                            {50, 50, 50},\n                                            {1},\n                                            {2},\n                                            {45},\n                                            {50},\n                                            {\"test_prod1.dat\", \"test_prod2.dat\", \"test_prod3.dat\"},\n                                            \"test_prod\");\n\n  // tests has {input1, input2, input3, pytorch_output}\n\n  pytorch::Product p(pytorch::k, 3);\n  af::timer::start();\n  pytorch::tensor prod;\n  for (int j = 49; j >= 0; j--){\n    prod = p({tests[0], tests[1], tests[2]})[0];\n    prod.eval();\n  }\n  af::sync();\n  std::cout << \"arrayfire forward took (s): \" << af::timer::stop()/50 << \"(avg)\" << std::endl;\n\n  assert(almost_equal(prod, tests[3]));\n\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "ĠA", "man", "ĠLa", "Ch", "apel", "le", "Ġon", "Ġ5", "/", "26", "/", "17", ".", "Ċ", "//", "Ċ", "//", "Ġpy", "torch", "_", "in", "ference", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2017", "ĠA", "man", "ĠLa", "Ch", "apel", "le", "Ċ", "//", "ĠFull", "Ġlicense", "Ġat", "Ġpy", "torch", "_", "in", "ference", "/", "LICENSE", ".", "txt", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"../", "include", "/", "layers", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "utils", ".", "hpp", "\"", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "py", "torch", "::", "tensor", ">", "Ġtests", "Ġ=", "Ġtest", "_", "setup", "({", "1", ",", "Ġ1", ",", "Ġ1", "},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "2", ",", "Ġ2", ",", "Ġ2", "},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "45", ",", "Ġ45", ",", "Ġ45", "},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "50", ",", "Ġ50", ",", "Ġ50", "},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "1", "},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "2", "},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "45", "},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "50", "},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{\"", "test", "_", "prod", "1", ".", "dat", "\",", "Ġ\"", "test", "_", "prod", "2", ".", "dat", "\",", "Ġ\"", "test", "_", "prod", "3", ".", "dat", "\"},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\"", "test", "_", "prod", "\");", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġtests", "Ġhas", "Ġ{", "input", "1", ",", "Ġinput", "2", ",", "Ġinput", "3", ",", "Ġpy", "torch", "_", "output", "}", "Ċ", "Ċ", "Ġ", "Ġpy", "torch", "::", "Product", "Ġp", "(", "py", "torch", "::", "k", ",", "Ġ3", ");", "Ċ", "Ġ", "Ġaf", "::", "timer", "::", "start", "();", "Ċ", "Ġ", "Ġpy", "torch", "::", "tensor", "Ġprod", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ49", ";", "Ġj", "Ġ>=", "Ġ0", ";", "Ġj", "--){", "Ċ", "ĠĠĠ", "Ġprod", "Ġ=", "Ġp", "({", "tests", "[", "0", "],", "Ġtests", "[", "1", "],", "Ġtests", "[", "2", "]})", "[", "0", "];", "Ċ", "ĠĠĠ", "Ġprod", ".", "eval", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġaf", "::", "sync", "();", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "array", "fire", "Ġforward", "Ġtook", "Ġ(", "s", "):", "Ġ\"", "Ġ<<", "Ġaf", "::", "timer", "::", "stop", "()/", "50", "Ġ<<", "Ġ\"(", "avg", ")\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "Ġ", "Ġassert", "(", "almost", "_", "equal", "(", "prod", ",", "Ġtests", "[", "3", "]));", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::21", "code": "#include <vector>\n#include <memory>\n#include <iostream>\n\nusing namespace std;\n\nshared_ptr<vector<int>> make() {\n\treturn make_shared<vector<int>>();\n}\n\nshared_ptr<vector<int>> read(shared_ptr<vector<int>> p) {\n\tcout << \"Enter values: \" << endl;\n\tint x;\n\n\twhile (cin >> x) {\n\t\tp->push_back(x);\n\t}\n\n\treturn p;\n}\n\nvoid print(shared_ptr<vector<int>> p) {\n\tfor (int i : *p) {\n\t\tcout << i << \" \";\t\n\t}\n}\n\nint main() {\n\tauto p = read(make());\n\tprint(p);\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "shared", "_", "ptr", "<", "vector", "<", "int", ">>", "Ġmake", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġmake", "_", "shared", "<", "vector", "<", "int", ">>();", "Ċ", "}", "Ċ", "Ċ", "shared", "_", "ptr", "<", "vector", "<", "int", ">>", "Ġread", "(", "shared", "_", "ptr", "<", "vector", "<", "int", ">>", "Ġp", ")", "Ġ{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Enter", "Ġvalues", ":", "Ġ\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "int", "Ġx", ";", "Ċ", "Ċ", "ĉ", "while", "Ġ(", "cin", "Ġ>>", "Ġx", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "p", "->", "push", "_", "back", "(", "x", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġp", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġprint", "(", "shared", "_", "ptr", "<", "vector", "<", "int", ">>", "Ġp", ")", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ:", "Ġ*", "p", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ\";", "ĉĊ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "auto", "Ġp", "Ġ=", "Ġread", "(", "make", "());", "Ċ", "ĉ", "print", "(", "p", ");", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::22", "code": "#include \"estimation/sensors/make_interpolator.hh\"\nnamespace estimation {\n\ngeometry::spatial::TimeInterpolator make_accel_interpolator(\n    const std::vector<TimedMeasurement<jet_filter::AccelMeasurement>>&\n        accel_meas,\n    const ImuModel& imu_model) {\n  std::vector<geometry::spatial::TimeControlPoint> points;\n\n  for (const auto& accel : accel_meas) {\n    const jcc::Vec3 corrected_accel =\n        imu_model.correct_measured_accel(accel.measurement.observed_acceleration);\n    points.push_back({accel.timestamp, corrected_accel});\n  }\n  const geometry::spatial::TimeInterpolator interp(points);\n  return interp;\n}\n\ngeometry::spatial::TimeInterpolator make_gyro_interpolator(\n    const std::vector<TimedMeasurement<jet_filter::GyroMeasurement>>&\n        gyro_meas) {\n  std::vector<geometry::spatial::TimeControlPoint> points;\n\n  for (const auto& gyro : gyro_meas) {\n    points.push_back({gyro.timestamp, gyro.measurement.observed_w});\n  }\n  const geometry::spatial::TimeInterpolator interp(points);\n  return interp;\n}\n\n}  // namespace estimation", "code_tokens": ["Ġ#", "include", "Ġ\"", "est", "imation", "/", "sensors", "/", "make", "_", "inter", "polator", ".", "hh", "\"", "Ċ", "namespace", "Ġest", "imation", "Ġ{", "Ċ", "Ċ", "geometry", "::", "spatial", "::", "Time", "Interpolator", "Ġmake", "_", "accel", "_", "inter", "polator", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "Timed", "Measurement", "<", "jet", "_", "filter", "::", "Accel", "Measurement", ">>", "&", "Ċ", "ĠĠĠĠĠĠĠ", "Ġaccel", "_", "meas", ",", "Ċ", "ĠĠĠ", "Ġconst", "ĠI", "mu", "Model", "&", "Ġim", "u", "_", "model", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "geometry", "::", "spatial", "::", "Time", "ControlPoint", ">", "Ġpoints", ";", "Ċ", "Ċ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "&", "Ġaccel", "Ġ:", "Ġaccel", "_", "meas", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġconst", "Ġj", "cc", "::", "Vec", "3", "Ġcorrected", "_", "accel", "Ġ=", "Ċ", "ĠĠĠĠĠĠĠ", "Ġim", "u", "_", "model", ".", "correct", "_", "measure", "d", "_", "accel", "(", "accel", ".", "measurement", ".", "observed", "_", "ac", "celeration", ");", "Ċ", "ĠĠĠ", "Ġpoints", ".", "push", "_", "back", "({", "accel", ".", "timestamp", ",", "Ġcorrected", "_", "accel", "});", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġconst", "Ġgeometry", "::", "spatial", "::", "Time", "Interpolator", "Ġinterp", "(", "points", ");", "Ċ", "Ġ", "Ġreturn", "Ġinterp", ";", "Ċ", "}", "Ċ", "Ċ", "geometry", "::", "spatial", "::", "Time", "Interpolator", "Ġmake", "_", "gyro", "_", "inter", "polator", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "Timed", "Measurement", "<", "jet", "_", "filter", "::", "Gy", "ro", "Measurement", ">>", "&", "Ċ", "ĠĠĠĠĠĠĠ", "Ġgy", "ro", "_", "meas", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "geometry", "::", "spatial", "::", "Time", "ControlPoint", ">", "Ġpoints", ";", "Ċ", "Ċ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "&", "Ġgy", "ro", "Ġ:", "Ġgy", "ro", "_", "meas", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġpoints", ".", "push", "_", "back", "({", "gyro", ".", "timestamp", ",", "Ġgy", "ro", ".", "measurement", ".", "observed", "_", "w", "});", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġconst", "Ġgeometry", "::", "spatial", "::", "Time", "Interpolator", "Ġinterp", "(", "points", ");", "Ċ", "Ġ", "Ġreturn", "Ġinterp", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġest", "imation"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::23", "code": "#include \"TextItem.h\"\n\n#include <QPainter>\n#include <QFont>\n#include <QDebug>\n\n////////////////////////////////////////////////////////////////\nTextItem::TextItem(const QString& text, QGraphicsLayoutItem *parent)\n    : BaseItem(parent)\n{\n    _text = text;\n\n    QFont font;\n    font.setPointSize(11);\n    font.setBold(false);\n\n    setFont(font);\n}\n\n////////////////////////////////////////////////////////////////\nTextItem::~TextItem()\n{\n}\n\n////////////////////////////////////////////////////////////////\nvoid TextItem::setFont(const QFont &font)\n{\n    _font = font;\n    QFontMetrics fm(_font);\n}\n\n////////////////////////////////////////////////////////////////\nQSizeF TextItem::measureSize() const\n{\n    QFontMetrics fm(_font);\n\n    const QSizeF& size = fm.size(Qt::TextExpandTabs, _text);\n    // NOTE: flag Qt::TextSingleLine ignores newline characters.\n    return size;\n}\n\n////////////////////////////////////////////////////////////////\nvoid TextItem::draw(QPainter *painter, const QRectF& bounds)\n{\n    painter->setFont(_font);\n\n    // TODO: mozno bude treba specialne handlovat novy riadok\n    painter->drawText(bounds, _text);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Text", "Item", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "QPainter", ">", "Ċ", "#", "include", "Ġ<", "QFont", ">", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "Text", "Item", "::", "Text", "Item", "(", "const", "ĠQString", "&", "Ġtext", ",", "ĠQGraphics", "Layout", "Item", "Ġ*", "parent", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠBase", "Item", "(", "parent", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ_", "text", "Ġ=", "Ġtext", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠQFont", "Ġfont", ";", "Ċ", "ĠĠĠ", "Ġfont", ".", "setPoint", "Size", "(", "11", ");", "Ċ", "ĠĠĠ", "Ġfont", ".", "set", "Bold", "(", "false", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġset", "Font", "(", "font", ");", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "Text", "Item", "::~", "Text", "Item", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "void", "ĠText", "Item", "::", "setFont", "(", "const", "ĠQFont", "Ġ&", "font", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ_", "font", "Ġ=", "Ġfont", ";", "Ċ", "ĠĠĠ", "ĠQFont", "Metrics", "Ġfm", "(_", "font", ");", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "QSize", "F", "ĠText", "Item", "::", "measure", "Size", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQFont", "Metrics", "Ġfm", "(_", "font", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġconst", "ĠQSize", "F", "&", "Ġsize", "Ġ=", "Ġfm", ".", "size", "(", "Qt", "::", "Text", "Expand", "Tabs", ",", "Ġ_", "text", ");", "Ċ", "ĠĠĠ", "Ġ//", "ĠNOTE", ":", "Ġflag", "ĠQt", "::", "Text", "SingleLine", "Ġignores", "Ġnewline", "Ġcharacters", ".", "Ċ", "ĠĠĠ", "Ġreturn", "Ġsize", ";", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "void", "ĠText", "Item", "::", "draw", "(", "QPainter", "Ġ*", "painter", ",", "Ġconst", "ĠQRectF", "&", "Ġbounds", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġpainter", "->", "setFont", "(_", "font", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġmoz", "no", "Ġbu", "de", "Ġtre", "ba", "Ġspecial", "ne", "Ġhand", "lov", "at", "Ġno", "vy", "Ġri", "ad", "ok", "Ċ", "ĠĠĠ", "Ġpainter", "->", "drawText", "(", "bounds", ",", "Ġ_", "text", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::24", "code": "#include <vector>\n#include <iostream>\n\nstruct point\n{\n\tdouble x;\n\tdouble y;\n};\n\nint main()\n{\n\t// Generate a lot of uniformly distributed 2d points in the range -1,-1 to +1,+1.\n\tenum { numXSamples = 10000 };\n\tenum { numYSamples = 10000 };\n\tstd::vector<point> points;\n\tpoints.reserve(numXSamples * numYSamples);\n\tfor(int x = 0;x < numXSamples;++x)\n\t{\n\t\tfor(int y = 0;y < numXSamples;++y)\n\t\t{\n\t\t\tpoint p = {-1.0 + 2.0 * x / (numXSamples-1),-1.0 + 2.0 * y / (numYSamples-1)};\n\t\t\tpoints.push_back(p);\n\t\t}\n\t}\n\n\t// Count the ratio of points inside the unit circle.\n\tint numerator = 0;\n\tint denominator = 0;\n\tfor(auto pointIt = points.begin();pointIt != points.end();++pointIt)\n\t{\n\t\tif(pointIt->x * pointIt->x + pointIt->y * pointIt->y < 1.0)\n\t\t{\n\t\t\t++numerator;\n\t\t}\n\t\t++denominator;\n\t}\n\n\t// Derive the area of the unit circle.\n\tauto circleArea = 4.0 * (double)numerator / denominator;\n\tstd::cout << \"result: \" << circleArea << std::endl;\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "struct", "Ġpoint", "Ċ", "{", "Ċ", "ĉ", "double", "Ġx", ";", "Ċ", "ĉ", "double", "Ġy", ";", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "//", "ĠGenerate", "Ġa", "Ġlot", "Ġof", "Ġuniform", "ly", "Ġdistributed", "Ġ2", "d", "Ġpoints", "Ġin", "Ġthe", "Ġrange", "Ġ-", "1", ",-", "1", "Ġto", "Ġ+", "1", ",", "+", "1", ".", "Ċ", "ĉ", "enum", "Ġ{", "Ġnum", "X", "Samples", "Ġ=", "Ġ10000", "Ġ};", "Ċ", "ĉ", "enum", "Ġ{", "Ġnum", "Y", "Samples", "Ġ=", "Ġ10000", "Ġ};", "Ċ", "ĉ", "std", "::", "vector", "<", "point", ">", "Ġpoints", ";", "Ċ", "ĉ", "points", ".", "reserve", "(", "num", "X", "Samples", "Ġ*", "Ġnum", "Y", "Samples", ");", "Ċ", "ĉ", "for", "(", "int", "Ġx", "Ġ=", "Ġ0", ";", "x", "Ġ<", "Ġnum", "X", "Samples", ";++", "x", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġy", "Ġ=", "Ġ0", ";", "y", "Ġ<", "Ġnum", "X", "Samples", ";++", "y", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "point", "Ġp", "Ġ=", "Ġ{-", "1", ".", "0", "Ġ+", "Ġ2", ".", "0", "Ġ*", "Ġx", "Ġ/", "Ġ(", "num", "X", "Samples", "-", "1", "),", "-", "1", ".", "0", "Ġ+", "Ġ2", ".", "0", "Ġ*", "Ġy", "Ġ/", "Ġ(", "num", "Y", "Samples", "-", "1", ")};", "Ċ", "ĉĉ", "ĉ", "points", ".", "push", "_", "back", "(", "p", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "//", "ĠCount", "Ġthe", "Ġratio", "Ġof", "Ġpoints", "Ġinside", "Ġthe", "Ġunit", "Ġcircle", ".", "Ċ", "ĉ", "int", "Ġnumerator", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "int", "Ġdenominator", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "for", "(", "auto", "Ġpoint", "It", "Ġ=", "Ġpoints", ".", "begin", "();", "point", "It", "Ġ!=", "Ġpoints", ".", "end", "();", "++", "point", "It", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "(", "point", "It", "->", "x", "Ġ*", "Ġpoint", "It", "->", "x", "Ġ+", "Ġpoint", "It", "->", "y", "Ġ*", "Ġpoint", "It", "->", "y", "Ġ<", "Ġ1", ".", "0", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "++", "numerator", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "++", "denominator", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "//", "ĠDer", "ive", "Ġthe", "Ġarea", "Ġof", "Ġthe", "Ġunit", "Ġcircle", ".", "Ċ", "ĉ", "auto", "Ġcircle", "Area", "Ġ=", "Ġ4", ".", "0", "Ġ*", "Ġ(", "double", ")", "numerator", "Ġ/", "Ġdenominator", ";", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "result", ":", "Ġ\"", "Ġ<<", "Ġcircle", "Area", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::25", "code": "/*\n**==============================================================================\n**\n** Copyright (c) 2003, 2004, 2005, 2006, Michael Brasher, Karl Schopmeyer\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and associated documentation files (the \"Software\"),\n** to deal in the Software without restriction, including without limitation\n** the rights to use, copy, modify, merge, publish, distribute, sublicense,\n** and/or sell copies of the Software, and to permit persons to whom the\n** Software is furnished to do so, subject to the following conditions:\n**\n** The above copyright notice and this permission notice shall be included in\n** all copies or substantial portions of the Software.\n**\n** THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n** SOFTWARE.\n**\n**==============================================================================\n*/\n\n#include \"OS.h\"\n\nint OS::close(Sock sock)\n{\n    int result;\n    SF_RESTART(::close(sock), result);\n    return result;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "**", "================================================================", "==============", "Ċ", "**", "Ċ", "**", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", ",", "Ġ2004", ",", "Ġ2005", ",", "Ġ2006", ",", "ĠM", "ichael", "ĠB", "rash", "er", ",", "ĠK", "ar", "l", "ĠS", "chop", "me", "yer", "Ċ", "**", "Ċ", "**", "ĠPermission", "Ġis", "Ġhere", "by", "Ġgranted", ",", "Ġfree", "Ġof", "Ġcharge", ",", "Ġto", "Ġany", "Ġperson", "Ġobtain", "ing", "Ġa", "Ċ", "**", "Ġcopy", "Ġof", "Ġthis", "Ġsoftware", "Ġand", "Ġassociated", "Ġdocumentation", "Ġfiles", "Ġ(", "the", "Ġ\"", "Software", "\"),", "Ċ", "**", "Ġto", "Ġdeal", "Ġin", "Ġthe", "ĠSoftware", "Ġwithout", "Ġrestriction", ",", "Ġincluding", "Ġwithout", "Ġlimitation", "Ċ", "**", "Ġthe", "Ġrights", "Ġto", "Ġuse", ",", "Ġcopy", ",", "Ġmodify", ",", "Ġmerge", ",", "Ġpublish", ",", "Ġdistribute", ",", "Ġs", "ublic", "ense", ",", "Ċ", "**", "Ġand", "/", "or", "Ġsell", "Ġcopies", "Ġof", "Ġthe", "ĠSoftware", ",", "Ġand", "Ġto", "Ġpermit", "Ġpers", "ons", "Ġto", "Ġwh", "om", "Ġthe", "Ċ", "**", "ĠSoftware", "Ġis", "Ġf", "urn", "ish", "ed", "Ġto", "Ġdo", "Ġso", ",", "Ġsubject", "Ġto", "Ġthe", "Ġfollowing", "Ġconditions", ":", "Ċ", "**", "Ċ", "**", "ĠThe", "Ġabove", "Ġcopyright", "Ġnotice", "Ġand", "Ġthis", "Ġpermission", "Ġnotice", "Ġshall", "Ġbe", "Ġincluded", "Ġin", "Ċ", "**", "Ġall", "Ġcopies", "Ġor", "Ġsub", "stant", "ial", "Ġport", "ions", "Ġof", "Ġthe", "ĠSoftware", ".", "Ċ", "**", "Ċ", "**", "ĠTHE", "ĠSOFTWARE", "ĠIS", "ĠPRO", "VID", "ED", "Ġ\"", "AS", "ĠIS", "\",", "ĠWITHOUT", "ĠWARR", "AN", "TY", "ĠOF", "ĠANY", "ĠK", "IND", ",", "ĠEX", "PRESS", "ĠOR", "Ċ", "**", "ĠIMP", "LIED", ",", "ĠIN", "CL", "UDING", "ĠBUT", "ĠNOT", "ĠLIMIT", "ED", "ĠTO", "ĠTHE", "ĠWARRANTIES", "ĠOF", "ĠMER", "CHAN", "TAB", "ILITY", ",", "Ċ", "**", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", "ĠAND", "ĠNON", "IN", "FR", "IN", "GE", "MENT", ".", "ĠIN", "ĠNO", "ĠEVENT", "ĠSH", "ALL", "ĠTHE", "Ċ", "**", "ĠAUT", "HOR", "S", "ĠOR", "ĠCOPY", "RIGHT", "ĠH", "OLD", "ERS", "ĠBE", "ĠLI", "ABLE", "ĠFOR", "ĠANY", "ĠCLA", "IM", ",", "ĠDA", "MAGE", "S", "ĠOR", "ĠOTHER", "Ċ", "**", "ĠLI", "ABILITY", ",", "ĠW", "HE", "THER", "ĠIN", "ĠAN", "ĠACTION", "ĠOF", "ĠCON", "TRACT", ",", "ĠT", "ORT", "ĠOR", "ĠOTHER", "WISE", ",", "ĠAR", "IS", "ING", "ĠFROM", ",", "Ċ", "**", "ĠOUT", "ĠOF", "ĠOR", "ĠIN", "ĠCONNECTION", "ĠWITH", "ĠTHE", "ĠSOFTWARE", "ĠOR", "ĠTHE", "ĠUSE", "ĠOR", "ĠOTHER", "ĠDE", "AL", "INGS", "ĠIN", "ĠTHE", "Ċ", "**", "ĠSOFTWARE", ".", "Ċ", "**", "Ċ", "**", "================================================================", "==============", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "OS", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠOS", "::", "close", "(", "Sock", "Ġsock", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġresult", ";", "Ċ", "ĠĠĠ", "ĠSF", "_", "RESTART", "(::", "close", "(", "sock", "),", "Ġresult", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::26", "code": "#include \"Renderer.h\"\n#include \"Core/Windows/Window.h\"\n#include <Resources/ResourceCache.h>\n\nnamespace uut\n{\n\tUUT_MODULE_IMPLEMENT(Renderer)\n\t{}\n\n\tRenderer::Renderer()\n\t\t: _screenSize(0)\n\t{\n\t}\n\n\tRenderer::~Renderer()\n\t{\n\t}\n\n\t//////////////////////////////////////////////////////////////////////////////\n\tbool Renderer::OnInit()\n\t{\n\t\tif (!Super::OnInit())\n\t\t\treturn false;\n\n\t\tModuleInstance<ResourceCache> cache;\n\t\tcache->AddResource(CreateMonoTexture(Color32::White), \"white\");\n\t\tcache->AddResource(CreateMonoTexture(Color32::Black), \"black\");\n\n\t\treturn true;\n\t}\n\n\tvoid Renderer::OnDone()\n\t{\n\t}\n\n\tSharedPtr<Texture2D> Renderer::CreateMonoTexture(const Color32& color)\n\t{\n\t\tauto tex = CreateTexture(Vector2i(1), TextureAccess::Static);\n\t\tuint32_t* buf = static_cast<uint32_t*>(tex->Lock());\n\t\tif (buf == nullptr)\n\t\t\treturn nullptr;\n\n\t\tbuf[0] = color.ToInt();\n\t\ttex->Unlock();\n\n\t\treturn tex;\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Renderer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Core", "/", "Windows", "/", "Window", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Resources", "/", "Resource", "Cache", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġu", "ut", "Ċ", "{", "Ċ", "ĉ", "U", "UT", "_", "MODULE", "_", "IMPLEMENT", "(", "Renderer", ")", "Ċ", "ĉ", "{}", "Ċ", "Ċ", "ĉ", "Renderer", "::", "Renderer", "()", "Ċ", "ĉ", "ĉ", ":", "Ġ_", "screen", "Size", "(", "0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "Renderer", "::~", "Renderer", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "//////////////////////////////////////////////////////////////////////////////", "Ċ", "ĉ", "bool", "ĠRenderer", "::", "OnInit", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(!", "Super", "::", "OnInit", "())", "Ċ", "ĉĉ", "ĉ", "return", "Ġfalse", ";", "Ċ", "Ċ", "ĉ", "ĉ", "Module", "Instance", "<", "Resource", "Cache", ">", "Ġcache", ";", "Ċ", "ĉ", "ĉ", "cache", "->", "Add", "Resource", "(", "Create", "Mono", "Texture", "(", "Color", "32", "::", "White", "),", "Ġ\"", "white", "\");", "Ċ", "ĉ", "ĉ", "cache", "->", "Add", "Resource", "(", "Create", "Mono", "Texture", "(", "Color", "32", "::", "Black", "),", "Ġ\"", "black", "\");", "Ċ", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠRenderer", "::", "On", "Done", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "SharedPtr", "<", "Texture", "2", "D", ">", "ĠRenderer", "::", "Create", "Mono", "Texture", "(", "const", "ĠColor", "32", "&", "Ġcolor", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "auto", "Ġtex", "Ġ=", "ĠCreate", "Texture", "(", "Vector", "2", "i", "(", "1", "),", "ĠTexture", "Access", "::", "Static", ");", "Ċ", "ĉ", "ĉ", "uint", "32", "_", "t", "*", "Ġbuf", "Ġ=", "Ġstatic", "_", "cast", "<", "uint", "32", "_", "t", "*>(", "tex", "->", "Lock", "());", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "buf", "Ġ==", "Ġnullptr", ")", "Ċ", "ĉĉ", "ĉ", "return", "Ġnullptr", ";", "Ċ", "Ċ", "ĉ", "ĉ", "buf", "[", "0", "]", "Ġ=", "Ġcolor", ".", "ToInt", "();", "Ċ", "ĉ", "ĉ", "tex", "->", "Unlock", "();", "Ċ", "Ċ", "ĉ", "ĉ", "return", "Ġtex", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::27", "code": "class SparseVector {\n    unordered_map<int, int> repr;\n    int size = 0;\npublic:\n    \n    SparseVector(vector<int> &nums) {\n        size = nums.size();\n        for (int i=0; i<nums.size(); i++) {\n            if (nums[i] == 0) { continue; }\n            repr[i] = nums[i];    \n        }\n    }\n    \n    // Return the dotProduct of two sparse vectors\n    int dotProduct(SparseVector& vec) {\n        if (size != vec.size) {return 0;}  // incompatible\n        int dp=0;\n        for (const auto& kv : vec.repr) {\n            if (repr.find(kv.first) == repr.end()) continue;\n            dp += kv.second * repr[kv.first];\n        }\n        return dp;\n    }\n};\n\n// Your SparseVector object will be instantiated and called as such:\n// SparseVector v1(nums1);\n// SparseVector v2(nums2);\n// int ans = v1.dotProduct(v2);\n", "code_tokens": ["Ġclass", "ĠSparse", "Vector", "Ġ{", "Ċ", "ĠĠĠ", "Ġunordered", "_", "map", "<", "int", ",", "Ġint", ">", "Ġrepr", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġsize", "Ġ=", "Ġ0", ";", "Ċ", "public", ":", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "ĠSparse", "Vector", "(", "vector", "<", "int", ">", "Ġ&", "nums", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsize", "Ġ=", "Ġnums", ".", "size", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "nums", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "nums", "[", "i", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ġcontinue", ";", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġrepr", "[", "i", "]", "Ġ=", "Ġnums", "[", "i", "];", "ĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ//", "ĠReturn", "Ġthe", "Ġdot", "Product", "Ġof", "Ġtwo", "Ġsparse", "Ġvectors", "Ċ", "ĠĠĠ", "Ġint", "Ġdot", "Product", "(", "Sparse", "Vector", "&", "Ġvec", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "size", "Ġ!=", "Ġvec", ".", "size", ")", "Ġ{", "return", "Ġ0", ";}", "Ġ", "Ġ//", "Ġincompatible", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġdp", "=", "0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "const", "Ġauto", "&", "Ġkv", "Ġ:", "Ġvec", ".", "repr", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "repr", ".", "find", "(", "kv", ".", "first", ")", "Ġ==", "Ġrepr", ".", "end", "())", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdp", "Ġ+=", "Ġkv", ".", "second", "Ġ*", "Ġrepr", "[", "kv", ".", "first", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġdp", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "//", "ĠYour", "ĠSparse", "Vector", "Ġobject", "Ġwill", "Ġbe", "Ġinstantiated", "Ġand", "Ġcalled", "Ġas", "Ġsuch", ":", "Ċ", "//", "ĠSparse", "Vector", "Ġv", "1", "(", "nums", "1", ");", "Ċ", "//", "ĠSparse", "Vector", "Ġv", "2", "(", "nums", "2", ");", "Ċ", "//", "Ġint", "Ġans", "Ġ=", "Ġv", "1", ".", "dot", "Product", "(", "v", "2", ");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::28", "code": "// Copyright © 2014-2016 Ryan Leckey, All Rights Reserved.\n\n// Distributed under the MIT License\n// See accompanying file LICENSE\n\n#ifndef ARROW_PASS_H\n#define ARROW_PASS_H\n\n#include <memory>\n#include <string>\n\n#include \"arrow/generator.hpp\"\n\nnamespace arrow {\n\nclass Pass {\n public:\n  explicit Pass(GContext& ctx) : _ctx(ctx) { }\n\n  Pass(const Pass& other) = delete;\n  Pass(Pass&& other) = delete;\n\n  Pass& operator=(const Pass& other) = delete;\n  Pass& operator=(Pass&& other) = delete;\n\n protected:\n  GContext& _ctx;\n};\n\n}  // namespace arrow\n\n#endif  // ARROW_PASS_H\n", "code_tokens": ["Ġ//", "ĠCopyright", "ĠÂ", "©", "Ġ2014", "-", "2016", "ĠR", "yan", "ĠLe", "ckey", ",", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "ĠLicense", "Ċ", "//", "ĠSee", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "Ċ", "Ċ", "#", "ifndef", "ĠAR", "ROW", "_", "PASS", "_", "H", "Ċ", "#", "define", "ĠAR", "ROW", "_", "PASS", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "arrow", "/", "generator", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġarrow", "Ġ{", "Ċ", "Ċ", "class", "ĠPass", "Ġ{", "Ċ", "Ġpublic", ":", "Ċ", "Ġ", "Ġexplicit", "ĠPass", "(", "G", "Context", "&", "Ġctx", ")", "Ġ:", "Ġ_", "ctx", "(", "ctx", ")", "Ġ{", "Ġ}", "Ċ", "Ċ", "Ġ", "ĠPass", "(", "const", "ĠPass", "&", "Ġother", ")", "Ġ=", "Ġdelete", ";", "Ċ", "Ġ", "ĠPass", "(", "Pass", "&&", "Ġother", ")", "Ġ=", "Ġdelete", ";", "Ċ", "Ċ", "Ġ", "ĠPass", "&", "Ġoperator", "=(", "const", "ĠPass", "&", "Ġother", ")", "Ġ=", "Ġdelete", ";", "Ċ", "Ġ", "ĠPass", "&", "Ġoperator", "=(", "Pass", "&&", "Ġother", ")", "Ġ=", "Ġdelete", ";", "Ċ", "Ċ", "Ġprotected", ":", "Ċ", "Ġ", "ĠG", "Context", "&", "Ġ_", "ctx", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġarrow", "Ċ", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠAR", "ROW", "_", "PASS", "_", "H", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::29", "code": "//\n//  StoreAppleReceiptParser.hpp\n//  Pods\n//\n//  Created by eps on 7/3/20.\n//\n\n#ifndef EE_X_STORE_APPLE_RECEIPT_PARSER_HPP\n#define EE_X_STORE_APPLE_RECEIPT_PARSER_HPP\n\n#include <string>\n\n#include \"ee/store/StoreFwd.hpp\"\n\nnamespace ee {\nnamespace store {\nclass AppleReceiptParser {\npublic:\n    AppleReceiptParser();\n\n    std::shared_ptr<AppleReceipt> parse(const std::string& receiptData);\n\nprivate:\n    IMessageBridge& bridge_;\n};\n} // namespace store\n} // namespace ee\n\n#endif /* EE_X_STORE_APPLE_RECEIPT_PARSER_HPP */\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠStore", "Apple", "Receipt", "Parser", ".", "hpp", "Ċ", "//", "Ġ", "ĠPod", "s", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "Ġeps", "Ġon", "Ġ7", "/", "3", "/", "20", ".", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠEE", "_", "X", "_", "STORE", "_", "APPLE", "_", "RECE", "IPT", "_", "PARSER", "_", "HP", "P", "Ċ", "#", "define", "ĠEE", "_", "X", "_", "STORE", "_", "APPLE", "_", "RECE", "IPT", "_", "PARSER", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "ee", "/", "store", "/", "Store", "Fwd", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġee", "Ġ{", "Ċ", "namespace", "Ġstore", "Ġ{", "Ċ", "class", "ĠApple", "Receipt", "Parser", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠApple", "Receipt", "Parser", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "Apple", "Receipt", ">", "Ġparse", "(", "const", "Ġstd", "::", "string", "&", "Ġreceipt", "Data", ");", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "ĠI", "Message", "Bridge", "&", "Ġbridge", "_;", "Ċ", "};", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġstore", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġee", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠEE", "_", "X", "_", "STORE", "_", "APPLE", "_", "RECE", "IPT", "_", "PARSER", "_", "HP", "P", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::30", "code": "#ifndef _PARSER_HPP\n#define _PARSER_HPP\n\n#include <cassert>\n#include <iostream>\n#include <vector>\n#include <string>\n#include <cstdlib>\n#include \"toyobj.hpp\"\n#include \"lexer.hpp\"\n#include \"toy.hpp\"\n#include \"ast.hpp\"\n\nclass ParserContext {\n  public:\n    explicit ParserContext(LexerContext &lexer)\n        : lexer_(lexer) { lexer_.fetchtok(); }\n\n    AST *parse_ast(bool);\n private:\n    Statement *parse_statement();\n    Statement *parse_while();\n    Statement *parse_if();\n    Statement *parse_return();\n    Statement *parse_def();\n\n    Expression *parse_expression();\n    Expression *parse_primary();\n    Expression *parse_binary_op_expression(Expression*, int);\n    Expression *parse_paren_expression();\n    Expression *parse_number();\n    Expression *parse_string();\n    Expression *parse_word_expression();\n\n    AST *parse_block();\n\n    int get_prec(TokenType) const;\n    inline const Token *curtok() { return lexer_.curtok(); }\n    inline void eat_token(TokenType type) {\n        if (type != curtok()->type()) {\n            std::cout << \"I was expecting \" << Token::token_type_name(type) << \" but got \" << curtok()->name() << std::endl;\n            exit(1);\n        }\n        lexer_.fetchtok();\n    }\n\n    LexerContext &lexer_;\n    DISALLOW_COPY_AND_ASSIGN(ParserContext);\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "Ġ_", "PARSER", "_", "HP", "P", "Ċ", "#", "define", "Ġ_", "PARSER", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "#", "include", "Ġ\"", "to", "y", "obj", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "lexer", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "to", "y", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "ast", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠParser", "Context", "Ġ{", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "Ġexplicit", "ĠParser", "Context", "(", "Lexer", "Context", "Ġ&", "lexer", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ:", "Ġlexer", "_(", "lexer", ")", "Ġ{", "Ġlexer", "_.", "fetch", "tok", "();", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠAST", "Ġ*", "parse", "_", "ast", "(", "bool", ");", "Ċ", "Ġprivate", ":", "Ċ", "ĠĠĠ", "ĠStatement", "Ġ*", "parse", "_", "statement", "();", "Ċ", "ĠĠĠ", "ĠStatement", "Ġ*", "parse", "_", "while", "();", "Ċ", "ĠĠĠ", "ĠStatement", "Ġ*", "parse", "_", "if", "();", "Ċ", "ĠĠĠ", "ĠStatement", "Ġ*", "parse", "_", "return", "();", "Ċ", "ĠĠĠ", "ĠStatement", "Ġ*", "parse", "_", "def", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠExpression", "Ġ*", "parse", "_", "expression", "();", "Ċ", "ĠĠĠ", "ĠExpression", "Ġ*", "parse", "_", "primary", "();", "Ċ", "ĠĠĠ", "ĠExpression", "Ġ*", "parse", "_", "binary", "_", "op", "_", "expression", "(", "Expression", "*,", "Ġint", ");", "Ċ", "ĠĠĠ", "ĠExpression", "Ġ*", "parse", "_", "paren", "_", "expression", "();", "Ċ", "ĠĠĠ", "ĠExpression", "Ġ*", "parse", "_", "number", "();", "Ċ", "ĠĠĠ", "ĠExpression", "Ġ*", "parse", "_", "string", "();", "Ċ", "ĠĠĠ", "ĠExpression", "Ġ*", "parse", "_", "word", "_", "expression", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠAST", "Ġ*", "parse", "_", "block", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġint", "Ġget", "_", "prec", "(", "TokenType", ")", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġinline", "Ġconst", "ĠToken", "Ġ*", "cur", "tok", "()", "Ġ{", "Ġreturn", "Ġlexer", "_.", "cur", "tok", "();", "Ġ}", "Ċ", "ĠĠĠ", "Ġinline", "Ġvoid", "Ġeat", "_", "token", "(", "TokenType", "Ġtype", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "type", "Ġ!=", "Ġcur", "tok", "()->", "type", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "I", "Ġwas", "Ġexpecting", "Ġ\"", "Ġ<<", "ĠToken", "::", "token", "_", "type", "_", "name", "(", "type", ")", "Ġ<<", "Ġ\"", "Ġbut", "Ġgot", "Ġ\"", "Ġ<<", "Ġcur", "tok", "()->", "name", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġexit", "(", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġlexer", "_.", "fetch", "tok", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠLexer", "Context", "Ġ&", "lexer", "_;", "Ċ", "ĠĠĠ", "ĠDIS", "ALLOW", "_", "COPY", "_", "AND", "_", "ASSIGN", "(", "Parser", "Context", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::31", "code": "#include <stdio.h>\n#include <set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nconst int MAXN = 1e+2;\n\nint n, x0, y0;\n\ntypedef pair<int, int> point;\n\nset<point> s;\n\nint cross(int x0, int y0, const point &a, const point &b) {\n    return (a.first - x0) * (b.second - y0) - (a.second - y0) * (b.first - x0);\n}\n\nint main() {\n    scanf(\"%d %d %d\", &n, &x0, &y0);\n    int x, y;\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d %d\", &x, &y);\n        s.emplace(x, y);\n    }\n    int n = s.size();\n    vector<point> v(s.begin(), s.end());\n    vector<bool> dead(n);\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (dead[i]) {\n            continue;\n        }\n        dead[i] = true;\n        count++;\n        for (int j = i + 1; j < n; j++) {\n            if (dead[j]) {\n                continue;\n            }\n            if (!cross(x0, y0, v[i], v[j])) {\n                dead[j] = true;\n            }\n        }\n    }\n    printf(\"%d\\n\", count);\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "const", "Ġint", "ĠMAX", "N", "Ġ=", "Ġ1", "e", "+", "2", ";", "Ċ", "Ċ", "int", "Ġn", ",", "Ġx", "0", ",", "Ġy", "0", ";", "Ċ", "Ċ", "typedef", "Ġpair", "<", "int", ",", "Ġint", ">", "Ġpoint", ";", "Ċ", "Ċ", "set", "<", "point", ">", "Ġs", ";", "Ċ", "Ċ", "int", "Ġcross", "(", "int", "Ġx", "0", ",", "Ġint", "Ġy", "0", ",", "Ġconst", "Ġpoint", "Ġ&", "a", ",", "Ġconst", "Ġpoint", "Ġ&", "b", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ(", "a", ".", "first", "Ġ-", "Ġx", "0", ")", "Ġ*", "Ġ(", "b", ".", "second", "Ġ-", "Ġy", "0", ")", "Ġ-", "Ġ(", "a", ".", "second", "Ġ-", "Ġy", "0", ")", "Ġ*", "Ġ(", "b", ".", "first", "Ġ-", "Ġx", "0", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġscanf", "(\"%", "d", "Ġ%", "d", "Ġ%", "d", "\",", "Ġ&", "n", ",", "Ġ&", "x", "0", ",", "Ġ&", "y", "0", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġx", ",", "Ġy", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "Ġ%", "d", "\",", "Ġ&", "x", ",", "Ġ&", "y", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġs", ".", "emplace", "(", "x", ",", "Ġy", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġint", "Ġn", "Ġ=", "Ġs", ".", "size", "();", "Ċ", "ĠĠĠ", "Ġvector", "<", "point", ">", "Ġv", "(", "s", ".", "begin", "(),", "Ġs", ".", "end", "());", "Ċ", "ĠĠĠ", "Ġvector", "<", "bool", ">", "Ġdead", "(", "n", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġcount", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "dead", "[", "i", "])", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdead", "[", "i", "]", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcount", "++;", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġi", "Ġ+", "Ġ1", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġj", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "dead", "[", "j", "])", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "cross", "(", "x", "0", ",", "Ġy", "0", ",", "Ġv", "[", "i", "],", "Ġv", "[", "j", "]))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdead", "[", "j", "]", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "Ġcount", ");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::32", "code": "// 1000. 连通性问题\n#include <iostream>\nusing namespace std;\n\nint unionFind[100001];\n\nint find(int val) {\n  if (val == unionFind[val]) return val;\n  unionFind[val] = find(unionFind[val]);\n  return unionFind[val];\n}\n\nint main() {\n  int a, b;\n  for (int i = 0; i < 100001; i++) {\n    unionFind[i] = i;\n  }\n  while (cin >> a >> b) {\n    if (find(a) != find(b)) {\n      cout << a << ' ' << b << endl;\n      unionFind[find(a)] = unionFind[find(b)];\n    }\n  }\n}\n", "code_tokens": ["Ġ//", "Ġ1000", ".", "Ġ", "è¿ŀ", "éĢļ", "æĢ§", "éĹ®", "é¢ĺ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġunion", "Find", "[", "10000", "1", "];", "Ċ", "Ċ", "int", "Ġfind", "(", "int", "Ġval", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "val", "Ġ==", "Ġunion", "Find", "[", "val", "])", "Ġreturn", "Ġval", ";", "Ċ", "Ġ", "Ġunion", "Find", "[", "val", "]", "Ġ=", "Ġfind", "(", "union", "Find", "[", "val", "]);", "Ċ", "Ġ", "Ġreturn", "Ġunion", "Find", "[", "val", "];", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ10000", "1", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġunion", "Find", "[", "i", "]", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "find", "(", "a", ")", "Ġ!=", "Ġfind", "(", "b", "))", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġa", "Ġ<<", "Ġ'", "Ġ'", "Ġ<<", "Ġb", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠ", "Ġunion", "Find", "[", "find", "(", "a", ")]", "Ġ=", "Ġunion", "Find", "[", "find", "(", "b", ")];", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::33", "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n  int n;\n  string experiment;\n  for(cin>>n; n>0; n--){\n    cin >> experiment;\n    if (experiment.size() < 3) cout << '+' << endl;\n    else{\n      string s = experiment.substr(experiment.size()-2, 2);\n      string saux;\n      if(s == \"35\") cout << '-' << endl;\n      else{\n        s = s[1];\n        saux = experiment[0];\n        if(saux == \"9\" && s == \"4\") cout << '*' << endl;\n        else{\n          s = experiment.substr(0,3);\n          if(s == \"190\") cout << '?' << endl;\n          else cout << '?' << endl;\n        }\n      }\n    }\n  }\n\n\n\nreturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġstring", "Ġexperiment", ";", "Ċ", "Ġ", "Ġfor", "(", "cin", ">>", "n", ";", "Ġn", ">", "0", ";", "Ġn", "--){", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġexperiment", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "experiment", ".", "size", "()", "Ġ<", "Ġ3", ")", "Ġcout", "Ġ<<", "Ġ'+'", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġelse", "{", "Ċ", "ĠĠĠĠĠ", "Ġstring", "Ġs", "Ġ=", "Ġexperiment", ".", "substr", "(", "experiment", ".", "size", "()-", "2", ",", "Ġ2", ");", "Ċ", "ĠĠĠĠĠ", "Ġstring", "Ġsa", "ux", ";", "Ċ", "ĠĠĠĠĠ", "Ġif", "(", "s", "Ġ==", "Ġ\"", "35", "\")", "Ġcout", "Ġ<<", "Ġ'-'", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠ", "Ġelse", "{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġs", "Ġ=", "Ġs", "[", "1", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsa", "ux", "Ġ=", "Ġexperiment", "[", "0", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "sa", "ux", "Ġ==", "Ġ\"", "9", "\"", "Ġ&&", "Ġs", "Ġ==", "Ġ\"", "4", "\")", "Ġcout", "Ġ<<", "Ġ'*'", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "{", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġs", "Ġ=", "Ġexperiment", ".", "substr", "(", "0", ",", "3", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "s", "Ġ==", "Ġ\"", "190", "\")", "Ġcout", "Ġ<<", "Ġ'?'", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġcout", "Ġ<<", "Ġ'?'", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ċ", "Ċ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::34", "code": "#include <QWebView>\n\n#include \"helpdialog.h\"\n\n/**\n  * Constructor of Help Dialog\n  */\nHelpDialog::HelpDialog(QWidget *parent) : QWebPage(parent) {\n    view = new QWebView();\n}\n\n/**\n  * Shows the help dialog\n  */\nvoid HelpDialog::showHelpDialog() {\n    createWindow(QWebPage::WebModalDialog);\n    view->setPage(this);\n    view->setWindowIcon(QIcon(\":/images/help-icon.png\"));\n    view->setWindowTitle(\"Othello FPG - Help\");\n    view->load(QUrl(\"qrc:/html/index.html\"));\n    view->show();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Q", "WebView", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "help", "dialog", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ*", "ĠConstructor", "Ġof", "ĠHelp", "ĠDialog", "Ċ", "Ġ", "Ġ*/", "Ċ", "Help", "Dialog", "::", "Help", "Dialog", "(", "QWidget", "Ġ*", "parent", ")", "Ġ:", "ĠQ", "WebPage", "(", "parent", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġview", "Ġ=", "Ġnew", "ĠQ", "WebView", "();", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ*", "ĠShow", "s", "Ġthe", "Ġhelp", "Ġdialog", "Ċ", "Ġ", "Ġ*/", "Ċ", "void", "ĠHelp", "Dialog", "::", "show", "Help", "Dialog", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġcreate", "Window", "(", "QWebPage", "::", "Web", "Modal", "Dialog", ");", "Ċ", "ĠĠĠ", "Ġview", "->", "setPage", "(", "this", ");", "Ċ", "ĠĠĠ", "Ġview", "->", "set", "Window", "Icon", "(", "QIcon", "(\":/", "images", "/", "help", "-", "icon", ".", "png", "\"));", "Ċ", "ĠĠĠ", "Ġview", "->", "set", "WindowTitle", "(\"", "O", "th", "ello", "ĠF", "PG", "Ġ-", "ĠHelp", "\");", "Ċ", "ĠĠĠ", "Ġview", "->", "load", "(", "QUrl", "(\"", "q", "rc", ":/", "html", "/", "index", ".", "html", "\"));", "Ċ", "ĠĠĠ", "Ġview", "->", "show", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::35", "code": "// Endless Online Bot v0.0.1\r\n\r\n#ifndef UTIL_HPP_INCLUDED\r\n#define UTIL_HPP_INCLUDED\r\n\r\n#include <math.h>\r\n#include <vector>\r\n#include <string>\r\n\r\nint path_length(int x1, int y1, int x2, int y2);\r\nstd::vector<std::string> Args(std::string str);\r\nstd::string Lowercase(std::string str);\r\n\r\n#endif // UTIL_HPP_INCLUDED\r\n", "code_tokens": ["Ġ//", "ĠEnd", "less", "ĠOnline", "ĠBot", "Ġv", "0", ".", "0", ".", "1", "č", "Ċ", "č", "Ċ", "#", "ifndef", "ĠUTIL", "_", "HP", "P", "_", "IN", "CLU", "DED", "č", "Ċ", "#", "define", "ĠUTIL", "_", "HP", "P", "_", "IN", "CLU", "DED", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "vector", ">", "č", "Ċ", "#", "include", "Ġ<", "string", ">", "č", "Ċ", "č", "Ċ", "int", "Ġpath", "_", "length", "(", "int", "Ġx", "1", ",", "Ġint", "Ġy", "1", ",", "Ġint", "Ġx", "2", ",", "Ġint", "Ġy", "2", ");", "č", "Ċ", "std", "::", "vector", "<", "std", "::", "string", ">", "ĠArgs", "(", "std", "::", "string", "Ġstr", ");", "č", "Ċ", "std", "::", "string", "ĠLower", "case", "(", "std", "::", "string", "Ġstr", ");", "č", "Ċ", "č", "Ċ", "#", "endif", "Ġ//", "ĠUTIL", "_", "HP", "P", "_", "IN", "CLU", "DED", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::36", "code": "#include <iostream>\r\n#include <string>\r\n#include <forward_list>\r\n\r\nusing namespace std;\r\n\r\nvoid insert(forward_list<string>& fst, const string& to_find, const string& to_add);\r\n\r\nint main() {\r\n\tforward_list<string> fst{ \"pen\", \"pineapple\", \"apple\", \"pen\" };\r\n\tinsert(fst, \"pen\", \"and\");\r\n\tfor (auto& i : fst)\r\n\t\tcout << i << \" \";\r\n\tcout << endl;\r\n\treturn 0;\r\n}\r\n\r\nvoid insert(forward_list<string>& fst, const string& to_find, const string& to_add) {\r\n\tauto prev = fst.before_begin();\r\n\tfor (auto iter = fst.begin(); iter != fst.end(); prev = iter++) {\r\n\t\tif (*iter == to_find) {\r\n\t\t\tfst.insert_after(iter, to_add);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tfst.insert_after(prev, to_add);\r\n\treturn;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "#", "include", "Ġ<", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "forward", "_", "list", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "void", "Ġinsert", "(", "forward", "_", "list", "<", "string", ">&", "Ġfst", ",", "Ġconst", "Ġstring", "&", "Ġto", "_", "find", ",", "Ġconst", "Ġstring", "&", "Ġto", "_", "add", ");", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "ĉ", "forward", "_", "list", "<", "string", ">", "Ġfst", "{", "Ġ\"", "pen", "\",", "Ġ\"", "p", "ine", "apple", "\",", "Ġ\"", "apple", "\",", "Ġ\"", "pen", "\"", "Ġ};", "č", "Ċ", "ĉ", "insert", "(", "fst", ",", "Ġ\"", "pen", "\",", "Ġ\"", "and", "\");", "č", "Ċ", "ĉ", "for", "Ġ(", "auto", "&", "Ġi", "Ġ:", "Ġfst", ")", "č", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ\";", "č", "Ċ", "ĉ", "cout", "Ġ<<", "Ġendl", ";", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġinsert", "(", "forward", "_", "list", "<", "string", ">&", "Ġfst", ",", "Ġconst", "Ġstring", "&", "Ġto", "_", "find", ",", "Ġconst", "Ġstring", "&", "Ġto", "_", "add", ")", "Ġ{", "č", "Ċ", "ĉ", "auto", "Ġprev", "Ġ=", "Ġfst", ".", "before", "_", "begin", "();", "č", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġiter", "Ġ=", "Ġfst", ".", "begin", "();", "Ġiter", "Ġ!=", "Ġfst", ".", "end", "();", "Ġprev", "Ġ=", "Ġiter", "++)", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(*", "iter", "Ġ==", "Ġto", "_", "find", ")", "Ġ{", "č", "Ċ", "ĉĉ", "ĉ", "fst", ".", "insert", "_", "after", "(", "iter", ",", "Ġto", "_", "add", ");", "č", "Ċ", "ĉĉ", "ĉ", "return", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "fst", ".", "insert", "_", "after", "(", "prev", ",", "Ġto", "_", "add", ");", "č", "Ċ", "ĉ", "return", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::37", "code": "#include \"EngineImplDefine.h\"\n\nvoid BlendColor::Init(D3DCOLOR defaultColor, D3DCOLOR disabledColor, D3DCOLOR hiddenColor)\n{\n\tfor (decltype(States.size()) i = 0; i != States.size(); ++i)\n\t{\n\t\tStates[i] = defaultColor;\n\t}\n\n\tStates[STATE_DISABLED] = disabledColor;\n\tStates[STATE_HIDDEN] = hiddenColor;\n\tCurrent = hiddenColor;\n}\n\nvoid BlendColor::Blend(CONTROL_STATE iState, float fElapsedTime, float fRate)\n{\n\tD3DXCOLOR destColor = States[iState];\n\tD3DXColorLerp(&Current, &Current, &destColor, 1.0f - powf(fRate, 30 * fElapsedTime));\n}\n\nvoid FontTexElement::SetTexture(UINT iTexture, RECT * prcTexture, D3DCOLOR defaultTextureColor)\n{\n\tthis->iTexture = iTexture;\n\n\tif (prcTexture)\n\t\trcTexture = *prcTexture;\n\telse\n\t\tSetRectEmpty(&rcTexture);\n\n\tTextureColor.Init(defaultTextureColor);\n}\n\nvoid FontTexElement::SetFont(UINT iFont, D3DCOLOR defaultFontColor, DWORD dwTextFormat)\n{\n\tthis->iFont = iFont;\n\tthis->dwTextFormat = dwTextFormat;\n\n\tFontColor.Init(defaultFontColor);\n}\n\nvoid FontTexElement::Refresh()\n{\n\tTextureColor.Current = TextureColor.States[STATE_HIDDEN];\n\tFontColor.Current = FontColor.States[STATE_HIDDEN];\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Engine", "Impl", "Define", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠBlend", "Color", "::", "Init", "(", "D", "3", "DC", "OL", "OR", "Ġdefault", "Color", ",", "ĠD", "3", "DC", "OL", "OR", "Ġdisabled", "Color", ",", "ĠD", "3", "DC", "OL", "OR", "Ġhidden", "Color", ")", "Ċ", "{", "Ċ", "ĉ", "for", "Ġ(", "decltype", "(", "States", ".", "size", "())", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ!=", "ĠStates", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "States", "[", "i", "]", "Ġ=", "Ġdefault", "Color", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "States", "[", "STATE", "_", "DISABLED", "]", "Ġ=", "Ġdisabled", "Color", ";", "Ċ", "ĉ", "States", "[", "STATE", "_", "HIDDEN", "]", "Ġ=", "Ġhidden", "Color", ";", "Ċ", "ĉ", "Current", "Ġ=", "Ġhidden", "Color", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBlend", "Color", "::", "Blend", "(", "CONTROL", "_", "STATE", "Ġi", "State", ",", "Ġfloat", "Ġf", "ElapsedTime", ",", "Ġfloat", "Ġf", "Rate", ")", "Ċ", "{", "Ċ", "ĉ", "D", "3", "DX", "COLOR", "Ġdest", "Color", "Ġ=", "ĠStates", "[", "i", "State", "];", "Ċ", "ĉ", "D", "3", "DX", "Color", "Lerp", "(&", "Current", ",", "Ġ&", "Current", ",", "Ġ&", "dest", "Color", ",", "Ġ1", ".", "0", "f", "Ġ-", "Ġpow", "f", "(", "f", "Rate", ",", "Ġ30", "Ġ*", "Ġf", "ElapsedTime", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFont", "Tex", "Element", "::", "SetTexture", "(", "UINT", "Ġi", "Texture", ",", "ĠRECT", "Ġ*", "Ġp", "rc", "Texture", ",", "ĠD", "3", "DC", "OL", "OR", "Ġdefault", "Texture", "Color", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "i", "Texture", "Ġ=", "Ġi", "Texture", ";", "Ċ", "Ċ", "ĉ", "if", "Ġ(", "prc", "Texture", ")", "Ċ", "ĉ", "ĉ", "rc", "Texture", "Ġ=", "Ġ*", "prc", "Texture", ";", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "Set", "Rect", "Empty", "(&", "rc", "Texture", ");", "Ċ", "Ċ", "ĉ", "Texture", "Color", ".", "Init", "(", "default", "Texture", "Color", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFont", "Tex", "Element", "::", "SetFont", "(", "UINT", "Ġi", "Font", ",", "ĠD", "3", "DC", "OL", "OR", "Ġdefault", "Font", "Color", ",", "ĠDWORD", "Ġdw", "Text", "Format", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "i", "Font", "Ġ=", "Ġi", "Font", ";", "Ċ", "ĉ", "this", "->", "dw", "Text", "Format", "Ġ=", "Ġdw", "Text", "Format", ";", "Ċ", "Ċ", "ĉ", "Font", "Color", ".", "Init", "(", "default", "Font", "Color", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFont", "Tex", "Element", "::", "Refresh", "()", "Ċ", "{", "Ċ", "ĉ", "Texture", "Color", ".", "Current", "Ġ=", "ĠTexture", "Color", ".", "States", "[", "STATE", "_", "HIDDEN", "];", "Ċ", "ĉ", "Font", "Color", ".", "Current", "Ġ=", "ĠFont", "Color", ".", "States", "[", "STATE", "_", "HIDDEN", "];", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::38", "code": "#include \"stdafx.h\"\n#include \"record.hpp\"\n\nnamespace tc { namespace log {\n\nconst char* record::type_acronym( void ) const {\n\tswitch( type ) {\n\tcase log::trace: return \"T\";\n\tcase log::debug: return \"D\";\n\tcase log::info: return \"I\";\n\tcase log::warn: return \"W\";\n\tcase log::error: return \"E\";\n\tcase log::fatal: return \"F\";\n\tcase log::all: return \"A\";\n\tdefault:\n\t\treturn \"!\";\n\t}\n\treturn \"?\";\n}\n\nrecord::record( tc::log::type type ,  const tc::log::tag& tag )\n\t: type(type)\n\t, tag(tag)\n\t, ts(tc::timestamp::now())  \n\t, tid(tc::threading::current_thread_id())\n{\n}\n\nrecord::~record( void ) {\n}\n\n}}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "record", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġtc", "Ġ{", "Ġnamespace", "Ġlog", "Ġ{", "Ċ", "Ċ", "const", "Ġchar", "*", "Ġrecord", "::", "type", "_", "ac", "ronym", "(", "Ġvoid", "Ġ)", "Ġconst", "Ġ{", "Ċ", "ĉ", "switch", "(", "Ġtype", "Ġ)", "Ġ{", "Ċ", "ĉ", "case", "Ġlog", "::", "trace", ":", "Ġreturn", "Ġ\"", "T", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "debug", ":", "Ġreturn", "Ġ\"", "D", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "info", ":", "Ġreturn", "Ġ\"", "I", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "warn", ":", "Ġreturn", "Ġ\"", "W", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "error", ":", "Ġreturn", "Ġ\"", "E", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "fatal", ":", "Ġreturn", "Ġ\"", "F", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "all", ":", "Ġreturn", "Ġ\"", "A", "\";", "Ċ", "ĉ", "default", ":", "Ċ", "ĉ", "ĉ", "return", "Ġ\"!", "\";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ\"?", "\";", "Ċ", "}", "Ċ", "Ċ", "record", "::", "record", "(", "Ġtc", "::", "log", "::", "type", "Ġtype", "Ġ,", "Ġ", "Ġconst", "Ġtc", "::", "log", "::", "tag", "&", "Ġtag", "Ġ)", "Ċ", "ĉ", ":", "Ġtype", "(", "type", ")", "Ċ", "ĉ", ",", "Ġtag", "(", "tag", ")", "Ċ", "ĉ", ",", "Ġts", "(", "tc", "::", "timestamp", "::", "now", "())", "ĠĠĊ", "ĉ", ",", "Ġtid", "(", "tc", "::", "thread", "ing", "::", "current", "_", "thread", "_", "id", "())", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "record", "::~", "record", "(", "Ġvoid", "Ġ)", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "}}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::39", "code": "// acquisition.hpp\n\n#ifndef ACQUISITION_HPP\n#define ACQUISITION_HPP\n\n#include <QAbstractVideoBuffer>\n#include <QAbstractVideoSurface>\n#include <QList>\n#include <QVideoFrame>\n#include <QLoggingCategory>\n\nQ_DECLARE_LOGGING_CATEGORY(visionAcquisitionLog)\n\nclass Acquisition : public QAbstractVideoSurface {\n    Q_OBJECT\n\n    public:\n    Acquisition ();\n\n    QList<QVideoFrame::PixelFormat> supportedPixelFormats (\n    QAbstractVideoBuffer::HandleType handleType) const;\n    bool present (const QVideoFrame& frame);\n\n    signals:\n    void FrameAvailable (const QVideoFrame& frame);\n};\n\n#endif // ACQUISITION_HPP\n", "code_tokens": ["Ġ//", "Ġac", "quisition", ".", "hpp", "Ċ", "Ċ", "#", "ifndef", "ĠAC", "QU", "IS", "ITION", "_", "HP", "P", "Ċ", "#", "define", "ĠAC", "QU", "IS", "ITION", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "QAbstract", "Video", "Buffer", ">", "Ċ", "#", "include", "Ġ<", "QAbstract", "Video", "Surface", ">", "Ċ", "#", "include", "Ġ<", "QList", ">", "Ċ", "#", "include", "Ġ<", "Q", "Video", "Frame", ">", "Ċ", "#", "include", "Ġ<", "Q", "Logging", "Category", ">", "Ċ", "Ċ", "Q", "_", "DECLARE", "_", "LOGGING", "_", "CATEGORY", "(", "vision", "Ac", "quisition", "Log", ")", "Ċ", "Ċ", "class", "ĠAc", "quisition", "Ġ:", "Ġpublic", "ĠQAbstract", "Video", "Surface", "Ġ{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "ĠAc", "quisition", "Ġ();", "Ċ", "Ċ", "ĠĠĠ", "ĠQList", "<", "Q", "Video", "Frame", "::", "PixelFormat", ">", "Ġsupported", "Pixel", "Formats", "Ġ(", "Ċ", "ĠĠĠ", "ĠQAbstract", "Video", "Buffer", "::", "Handle", "Type", "Ġhandle", "Type", ")", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġbool", "Ġpresent", "Ġ(", "const", "ĠQ", "Video", "Frame", "&", "Ġframe", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġsignals", ":", "Ċ", "ĠĠĠ", "Ġvoid", "ĠFrame", "Available", "Ġ(", "const", "ĠQ", "Video", "Frame", "&", "Ġframe", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠAC", "QU", "IS", "ITION", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::40", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n\n\nSTART_ATF_NAMESPACE\n    typedef int (WINAPIV *PSYM_ENUMERATESYMBOLS_CALLBACK)(_SYMBOL_INFO *, unsigned int, void *);\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġint", "Ġ(", "WIN", "API", "V", "Ġ*", "P", "SYM", "_", "ENUM", "ERATE", "SYMBOL", "S", "_", "CALLBACK", ")(_", "SYMBOL", "_", "INFO", "Ġ*,", "Ġunsigned", "Ġint", ",", "Ġvoid", "Ġ*);", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::41", "code": "#include <fstream>\n#include <iostream>\n#include <vector>\n\nint main(int argc, char **argv) {\n  std::vector<std::string> args(argv, argv + argc);\n  std::ofstream tty;\n  tty.open(\"/dev/tty\");\n\n  if (args.size() <= 1 || (args.size() & 2) == 1) {\n    std::cerr << \"usage: maplabel [devlocal remote]... remotedir\\n\";\n    return 1;\n  }\n\n  std::string curdir = args[args.size() - 1];\n  for (size_t i = 1; i + 1 < args.size(); i += 2) {\n    if (curdir.find(args[i + 1]) == 0) {\n      if ((curdir.size() > args[i + 1].size() &&\n           curdir[args[i + 1].size()] == '/') ||\n          curdir.size() == args[i + 1].size()) {\n        tty << \"\\033];\" << args[i] + curdir.substr(args[i + 1].size())\n            << \"\\007\\n\";\n        return 0;\n      }\n    }\n  }\n\n  tty << \"\\033];\" << curdir << \"\\007\\n\";\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġargs", "(", "argv", ",", "Ġargv", "Ġ+", "Ġargc", ");", "Ċ", "Ġ", "Ġstd", "::", "ofstream", "Ġtty", ";", "Ċ", "Ġ", "Ġtty", ".", "open", "(\"/", "dev", "/", "tty", "\");", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "args", ".", "size", "()", "Ġ<=", "Ġ1", "Ġ||", "Ġ(", "args", ".", "size", "()", "Ġ&", "Ġ2", ")", "Ġ==", "Ġ1", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "usage", ":", "Ġmap", "label", "Ġ[", "dev", "local", "Ġremote", "].", "..", "Ġremo", "ted", "ir", "\\", "n", "\";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġcur", "dir", "Ġ=", "Ġargs", "[", "args", ".", "size", "()", "Ġ-", "Ġ1", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ+", "Ġ1", "Ġ<", "Ġargs", ".", "size", "();", "Ġi", "Ġ+=", "Ġ2", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "cur", "dir", ".", "find", "(", "args", "[", "i", "Ġ+", "Ġ1", "])", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ((", "cur", "dir", ".", "size", "()", "Ġ>", "Ġargs", "[", "i", "Ġ+", "Ġ1", "].", "size", "()", "Ġ&&", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "Ġcur", "dir", "[", "args", "[", "i", "Ġ+", "Ġ1", "].", "size", "()]", "Ġ==", "Ġ'/')", "Ġ||", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġcur", "dir", ".", "size", "()", "Ġ==", "Ġargs", "[", "i", "Ġ+", "Ġ1", "].", "size", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtty", "Ġ<<", "Ġ\"\\", "033", "];", "\"", "Ġ<<", "Ġargs", "[", "i", "]", "Ġ+", "Ġcur", "dir", ".", "substr", "(", "args", "[", "i", "Ġ+", "Ġ1", "].", "size", "())", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ<<", "Ġ\"\\", "007", "\\", "n", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġtty", "Ġ<<", "Ġ\"\\", "033", "];", "\"", "Ġ<<", "Ġcur", "dir", "Ġ<<", "Ġ\"\\", "007", "\\", "n", "\";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::42", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nint main () {\n\n  int n;\n  \n  while(scanf(\"%d\", &n) && n) {\n    bitset<32> bs,a,b;\n    bs = n;\n    int cont = 0;\n    for(int i = 0; i < 32; i++) {\n      if(bs.test(i)) {\n        if(cont%2) b.set(i);\n        else a.set(i);\n        cont++;\n      }\n    }\n    //int x = a;\n    printf(\"%u %u\\n\", a.to_ulong(), b.to_ulong());\n  }  \n  \n  return 0;    \n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "typedef", "Ġlong", "Ġlong", "Ġll", ";", "Ċ", "typedef", "Ġpair", "<", "int", ",", "int", ">", "Ġii", ";", "Ċ", "typedef", "Ġvector", "<", "int", ">", "Ġvi", ";", "Ċ", "typedef", "Ġvector", "<", "ii", ">", "Ġv", "ii", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "ĠĠĊ", "Ġ", "Ġwhile", "(", "scanf", "(\"%", "d", "\",", "Ġ&", "n", ")", "Ġ&&", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġbit", "set", "<", "32", ">", "Ġbs", ",", "a", ",", "b", ";", "Ċ", "ĠĠĠ", "Ġbs", "Ġ=", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġcont", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ32", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġif", "(", "bs", ".", "test", "(", "i", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "cont", "%", "2", ")", "Ġb", ".", "set", "(", "i", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġa", ".", "set", "(", "i", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcont", "++;", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ//", "int", "Ġx", "Ġ=", "Ġa", ";", "Ċ", "ĠĠĠ", "Ġprintf", "(\"%", "u", "Ġ%", "u", "\\", "n", "\",", "Ġa", ".", "to", "_", "ulong", "(),", "Ġb", ".", "to", "_", "ulong", "());", "Ċ", "Ġ", "Ġ}", "ĠĠĊ", "ĠĠĊ", "Ġ", "Ġreturn", "Ġ0", ";", "ĠĠĠĠ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::43", "code": "/*\r\n * boatWithSupport.cpp\r\n *\r\n *  Created on: 16 de Abr de 2013\r\n *      Author: Windows\r\n */\r\n\r\n#include \"BoatWithSupport.h\"\r\n\r\nBoatWithSupport::BoatWithSupport(int extraCapacity) :\r\n\t\tBoat() {\r\n\textraCap = extraCapacity;\r\n\tlastMaxCap = 0;\r\n\tlastTransported = 0;\r\n}\r\n\r\nBoatWithSupport::BoatWithSupport(int capacity, int extraCapacity) :\r\n\t\tBoat(capacity) {\r\n\textraCap = extraCapacity;\r\n\tlastMaxCap = 0;\r\n\tlastTransported = 0;\r\n}\r\n\r\nint BoatWithSupport::getExtraCapacity() {\r\n\treturn extraCap;\r\n}\r\n\r\nint BoatWithSupport::getMaxCapacity() {\r\n\treturn this->maxCapacity + this->extraCap;\r\n}\r\n\r\n\r\nBoatWithSupport::~BoatWithSupport() {\r\n\t// TODO Auto-generated destructor stub\r\n}\r\n\r\nvoid BoatWithSupport::reset() {\r\n\tthis->transportedQuantity = lastTransported;\r\n\tthis->maxCapacity = lastMaxCap;\r\n}\r\n\r\nvoid BoatWithSupport::resize() {\r\n\tthis->lastMaxCap = this->maxCapacity;\r\n\tthis->maxCapacity = this->extraCap;\r\n\tlastTransported = this->transportedQuantity;\r\n\tthis->transportedQuantity = this->extraCap;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "Ġbo", "at", "With", "Support", ".", "cpp", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ16", "Ġde", "ĠA", "br", "Ġde", "Ġ2013", "č", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "ĠWindows", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Bo", "at", "With", "Support", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "Bo", "at", "With", "Support", "::", "Bo", "at", "With", "Support", "(", "int", "Ġextra", "Capacity", ")", "Ġ:", "č", "Ċ", "ĉ", "ĉ", "Bo", "at", "()", "Ġ{", "č", "Ċ", "ĉ", "extra", "Cap", "Ġ=", "Ġextra", "Capacity", ";", "č", "Ċ", "ĉ", "last", "Max", "Cap", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "last", "Trans", "ported", "Ġ=", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Bo", "at", "With", "Support", "::", "Bo", "at", "With", "Support", "(", "int", "Ġcapacity", ",", "Ġint", "Ġextra", "Capacity", ")", "Ġ:", "č", "Ċ", "ĉ", "ĉ", "Bo", "at", "(", "capacity", ")", "Ġ{", "č", "Ċ", "ĉ", "extra", "Cap", "Ġ=", "Ġextra", "Capacity", ";", "č", "Ċ", "ĉ", "last", "Max", "Cap", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "last", "Trans", "ported", "Ġ=", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠBo", "at", "With", "Support", "::", "get", "Extra", "Capacity", "()", "Ġ{", "č", "Ċ", "ĉ", "return", "Ġextra", "Cap", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠBo", "at", "With", "Support", "::", "getMax", "Capacity", "()", "Ġ{", "č", "Ċ", "ĉ", "return", "Ġthis", "->", "max", "Capacity", "Ġ+", "Ġthis", "->", "extra", "Cap", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "Bo", "at", "With", "Support", "::~", "Bo", "at", "With", "Support", "()", "Ġ{", "č", "Ċ", "ĉ", "//", "ĠTODO", "ĠAuto", "-", "generated", "Ġdestructor", "Ġstub", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠBo", "at", "With", "Support", "::", "reset", "()", "Ġ{", "č", "Ċ", "ĉ", "this", "->", "trans", "ported", "Quantity", "Ġ=", "Ġlast", "Trans", "ported", ";", "č", "Ċ", "ĉ", "this", "->", "max", "Capacity", "Ġ=", "Ġlast", "Max", "Cap", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠBo", "at", "With", "Support", "::", "resize", "()", "Ġ{", "č", "Ċ", "ĉ", "this", "->", "last", "Max", "Cap", "Ġ=", "Ġthis", "->", "max", "Capacity", ";", "č", "Ċ", "ĉ", "this", "->", "max", "Capacity", "Ġ=", "Ġthis", "->", "extra", "Cap", ";", "č", "Ċ", "ĉ", "last", "Trans", "ported", "Ġ=", "Ġthis", "->", "trans", "ported", "Quantity", ";", "č", "Ċ", "ĉ", "this", "->", "trans", "ported", "Quantity", "Ġ=", "Ġthis", "->", "extra", "Cap", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::44", "code": "#include \"ErrorCodes.h\"\n\nstd::error_code make_error_code(SimBlockErrc ec)\n{\n   return {static_cast<int>(ec), simblockErrCategory};\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ErrorCodes", ".", "h", "\"", "Ċ", "Ċ", "std", "::", "error", "_", "code", "Ġmake", "_", "error", "_", "code", "(", "Sim", "Block", "Err", "c", "Ġec", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġreturn", "Ġ{", "static", "_", "cast", "<", "int", ">(", "ec", "),", "Ġsim", "block", "Err", "Category", "};", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::45", "code": "#ifndef ENDOCAST_EXTRACTOR_HPP\r\n#define ENDOCAST_EXTRACTOR_HPP 1\r\n#include <mi/VolumeData.hpp>\r\n\r\nclass EndocastExtractor\r\n{\r\nprivate:\r\npublic:\r\n        EndocastExtractor ( void ) ;\r\n        ~EndocastExtractor ( void ) ;\r\n        bool extract ( mi::VolumeData<float>& distData, mi::VolumeData<int>& labelData, const double scale ) ;\r\n\r\nprivate:\r\n        bool init ( mi::VolumeData<float>& distData, mi::VolumeData<int>& labelData, const double scale ) ;\r\n        bool run ( mi::VolumeData<float>& distData, mi::VolumeData<int>& labelData ) ;\r\n};\r\n#endif // ENDOCAST_EXTRACTOR_HPP", "code_tokens": ["Ġ#", "ifndef", "ĠEND", "O", "CAST", "_", "EXTRACT", "OR", "_", "HP", "P", "č", "Ċ", "#", "define", "ĠEND", "O", "CAST", "_", "EXTRACT", "OR", "_", "HP", "P", "Ġ1", "č", "Ċ", "#", "include", "Ġ<", "mi", "/", "Volume", "Data", ".", "hpp", ">", "č", "Ċ", "č", "Ċ", "class", "ĠEnd", "oc", "ast", "Extractor", "č", "Ċ", "{", "č", "Ċ", "private", ":", "č", "Ċ", "public", ":", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠEnd", "oc", "ast", "Extractor", "Ġ(", "Ġvoid", "Ġ)", "Ġ;", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ~", "End", "oc", "ast", "Extractor", "Ġ(", "Ġvoid", "Ġ)", "Ġ;", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġextract", "Ġ(", "Ġmi", "::", "Volume", "Data", "<", "float", ">&", "Ġdist", "Data", ",", "Ġmi", "::", "Volume", "Data", "<", "int", ">&", "Ġlabel", "Data", ",", "Ġconst", "Ġdouble", "Ġscale", "Ġ)", "Ġ;", "č", "Ċ", "č", "Ċ", "private", ":", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġinit", "Ġ(", "Ġmi", "::", "Volume", "Data", "<", "float", ">&", "Ġdist", "Data", ",", "Ġmi", "::", "Volume", "Data", "<", "int", ">&", "Ġlabel", "Data", ",", "Ġconst", "Ġdouble", "Ġscale", "Ġ)", "Ġ;", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġrun", "Ġ(", "Ġmi", "::", "Volume", "Data", "<", "float", ">&", "Ġdist", "Data", ",", "Ġmi", "::", "Volume", "Data", "<", "int", ">&", "Ġlabel", "Data", "Ġ)", "Ġ;", "č", "Ċ", "};", "č", "Ċ", "#", "endif", "Ġ//", "ĠEND", "O", "CAST", "_", "EXTRACT", "OR", "_", "HP", "P"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::46", "code": "#include \"ConfirmationMenu.h\"\n\nConfirmationMenu::ConfirmationMenu(CarrotQt5* mainClass, std::function<void(bool)> callback, const QString& text, const QString& yesLabel, const QString& noLabel) \n    : MenuScreen(mainClass), text(text) {\n    menuOptions.append(buildMenuItem([this, callback]() {\n        root->popState();\n        callback(true);\n    }, yesLabel));\n    menuOptions.append(buildMenuItem([this, callback]() {\n        root->popState();\n        callback(false);\n    }, noLabel));\n    cancelItem = buildMenuItem([this, callback]() {\n        root->popState();\n        callback(false);\n    }, noLabel);\n    setMenuItemSelected(0);\n}\n\nConfirmationMenu::~ConfirmationMenu() {\n}\n\nvoid ConfirmationMenu::renderTick(bool, bool) {\n    auto canvas = root->getCanvas();\n    uint viewWidth = canvas->getView().getSize().x;\n    uint viewHeight = canvas->getView().getSize().y;\n\n    BitmapString::drawString(canvas, root->getFont(), text, viewWidth / 2, viewHeight / 2 - 50, FONT_ALIGN_CENTER);\n    menuOptions[0]->text->drawString(canvas, viewWidth / 2 - 100, viewHeight / 2 + 50);\n    menuOptions[1]->text->drawString(canvas, viewWidth / 2 + 100, viewHeight / 2 + 50);\n}\n\nvoid ConfirmationMenu::processControlDownEvent(const ControlEvent& e) {\n    MenuScreen::processControlDownEvent(e);\n\n    switch (e.first.keyboardKey) {\n        case Qt::Key_Left:\n            setMenuItemSelected(-1, true);\n            break;\n        case Qt::Key_Right:\n            setMenuItemSelected(1, true);\n            break;\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Confirmation", "Menu", ".", "h", "\"", "Ċ", "Ċ", "Confirmation", "Menu", "::", "Confirmation", "Menu", "(", "Car", "rot", "Qt", "5", "*", "Ġmain", "Class", ",", "Ġstd", "::", "function", "<", "void", "(", "bool", ")>", "Ġcallback", ",", "Ġconst", "ĠQString", "&", "Ġtext", ",", "Ġconst", "ĠQString", "&", "Ġyes", "Label", ",", "Ġconst", "ĠQString", "&", "Ġno", "Label", ")", "ĠĊ", "ĠĠĠ", "Ġ:", "ĠMenu", "Screen", "(", "main", "Class", "),", "Ġtext", "(", "text", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġmenu", "Options", ".", "append", "(", "build", "MenuItem", "([", "this", ",", "Ġcallback", "]()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġroot", "->", "pop", "State", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcallback", "(", "true", ");", "Ċ", "ĠĠĠ", "Ġ},", "Ġyes", "Label", "));", "Ċ", "ĠĠĠ", "Ġmenu", "Options", ".", "append", "(", "build", "MenuItem", "([", "this", ",", "Ġcallback", "]()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġroot", "->", "pop", "State", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcallback", "(", "false", ");", "Ċ", "ĠĠĠ", "Ġ},", "Ġno", "Label", "));", "Ċ", "ĠĠĠ", "Ġcancel", "Item", "Ġ=", "Ġbuild", "MenuItem", "([", "this", ",", "Ġcallback", "]()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġroot", "->", "pop", "State", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcallback", "(", "false", ");", "Ċ", "ĠĠĠ", "Ġ},", "Ġno", "Label", ");", "Ċ", "ĠĠĠ", "Ġset", "MenuItem", "Selected", "(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "Confirmation", "Menu", "::~", "Confirmation", "Menu", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠConfirm", "ation", "Menu", "::", "render", "Tick", "(", "bool", ",", "Ġbool", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġauto", "Ġcanvas", "Ġ=", "Ġroot", "->", "get", "Canvas", "();", "Ċ", "ĠĠĠ", "Ġuint", "Ġview", "Width", "Ġ=", "Ġcanvas", "->", "getView", "().", "getSize", "().", "x", ";", "Ċ", "ĠĠĠ", "Ġuint", "Ġview", "Height", "Ġ=", "Ġcanvas", "->", "getView", "().", "getSize", "().", "y", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠBitmap", "String", "::", "draw", "String", "(", "canvas", ",", "Ġroot", "->", "getFont", "(),", "Ġtext", ",", "Ġview", "Width", "Ġ/", "Ġ2", ",", "Ġview", "Height", "Ġ/", "Ġ2", "Ġ-", "Ġ50", ",", "ĠFONT", "_", "ALIGN", "_", "CENTER", ");", "Ċ", "ĠĠĠ", "Ġmenu", "Options", "[", "0", "]->", "text", "->", "draw", "String", "(", "canvas", ",", "Ġview", "Width", "Ġ/", "Ġ2", "Ġ-", "Ġ100", ",", "Ġview", "Height", "Ġ/", "Ġ2", "Ġ+", "Ġ50", ");", "Ċ", "ĠĠĠ", "Ġmenu", "Options", "[", "1", "]->", "text", "->", "draw", "String", "(", "canvas", ",", "Ġview", "Width", "Ġ/", "Ġ2", "Ġ+", "Ġ100", ",", "Ġview", "Height", "Ġ/", "Ġ2", "Ġ+", "Ġ50", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠConfirm", "ation", "Menu", "::", "process", "Control", "Down", "Event", "(", "const", "ĠControl", "Event", "&", "Ġe", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠMenu", "Screen", "::", "process", "Control", "Down", "Event", "(", "e", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġswitch", "Ġ(", "e", ".", "first", ".", "keyboard", "Key", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠQt", "::", "Key", "_", "Left", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġset", "MenuItem", "Selected", "(-", "1", ",", "Ġtrue", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠQt", "::", "Key", "_", "Right", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġset", "MenuItem", "Selected", "(", "1", ",", "Ġtrue", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::47", "code": "#include \"core/bomberman.hpp\"\n#include \"core/menu.hpp\"\n#include \"core/screens.hpp\"\n#include \"core/view.hpp\"\n#include \"core/views/menu.hpp\"\n\nMenuView::MenuView(Screen *screen, Menu *menu)\n    : View(screen)\n    , menu(menu)\n    , clock(Timer::get(2))\n{\n}\n\nMenuView::~MenuView()\n{\n    delete this->menu;\n}\n\nvoid MenuView::update(const Events &events)\n{\n    Vec2u pos(events.touch.x, events.touch.y);\n\n    if (events.touch.isTouch && this->clock.current() > 10000)\n    {\n        this->clock.reset();\n        this->menu->onClick(pos);\n    }\n}\n\nvoid MenuView::render()\n{\n    swiWaitForVBlank();\n    dmaCopy(this->menu->bgSrc, bgGetGfxPtr(this->getScreen().bg), this->menu->bgSize);\n}\n\nvoid MenuView::setMenu(Menu *menu)\n{\n    if (menu != nullptr)\n    {\n        menu->setView(this);\n    }\n\n    Menu *old = this->menu;\n    Bomberman::getInstance().nextTick([old]() {\n        delete old;\n    });\n    this->menu = menu;\n}\n\nMenu &MenuView::getMenu()\n{\n    return *this->menu;\n}\n\nconst Menu &MenuView::getMenu() const\n{\n    return *this->menu;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "core", "/", "bom", "ber", "man", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "menu", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "sc", "reens", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "view", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "views", "/", "menu", ".", "hpp", "\"", "Ċ", "Ċ", "Menu", "View", "::", "Menu", "View", "(", "Screen", "Ġ*", "screen", ",", "ĠMenu", "Ġ*", "menu", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠView", "(", "screen", ")", "Ċ", "ĠĠĠ", "Ġ,", "Ġmenu", "(", "menu", ")", "Ċ", "ĠĠĠ", "Ġ,", "Ġclock", "(", "Timer", "::", "get", "(", "2", "))", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Menu", "View", "::~", "Menu", "View", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġthis", "->", "menu", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMenu", "View", "::", "update", "(", "const", "ĠEvents", "Ġ&", "events", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠVec", "2", "u", "Ġpos", "(", "events", ".", "touch", ".", "x", ",", "Ġevents", ".", "touch", ".", "y", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "events", ".", "touch", ".", "is", "Touch", "Ġ&&", "Ġthis", "->", "clock", ".", "current", "()", "Ġ>", "Ġ10000", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthis", "->", "clock", ".", "reset", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthis", "->", "menu", "->", "onClick", "(", "pos", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMenu", "View", "::", "render", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġsw", "i", "WaitFor", "V", "Blank", "();", "Ċ", "ĠĠĠ", "Ġdma", "Copy", "(", "this", "->", "menu", "->", "bg", "Src", ",", "Ġbg", "Get", "Gfx", "Ptr", "(", "this", "->", "get", "Screen", "().", "bg", "),", "Ġthis", "->", "menu", "->", "bg", "Size", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMenu", "View", "::", "set", "Menu", "(", "Menu", "Ġ*", "menu", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "menu", "Ġ!=", "Ġnullptr", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġmenu", "->", "setView", "(", "this", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠMenu", "Ġ*", "old", "Ġ=", "Ġthis", "->", "menu", ";", "Ċ", "ĠĠĠ", "ĠB", "om", "ber", "man", "::", "getInstance", "().", "nextTick", "([", "old", "]()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdelete", "Ġold", ";", "Ċ", "ĠĠĠ", "Ġ});", "Ċ", "ĠĠĠ", "Ġthis", "->", "menu", "Ġ=", "Ġmenu", ";", "Ċ", "}", "Ċ", "Ċ", "Menu", "Ġ&", "Menu", "View", "::", "get", "Menu", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ*", "this", "->", "menu", ";", "Ċ", "}", "Ċ", "Ċ", "const", "ĠMenu", "Ġ&", "Menu", "View", "::", "get", "Menu", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ*", "this", "->", "menu", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::48", "code": "#include \"abstract_serializable.h\"\n\nusing namespace json;\n\njson::__abstract_serializable__::__abstract_serializable__() {}\n\nstd::map<std::string, std::function<json::__abstract_serializable__*()> > json::__abstract_serializable__::dictionary;\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "abstract", "_", "ser", "ializable", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġjson", ";", "Ċ", "Ċ", "json", "::__", "abstract", "_", "ser", "ializable", "__", "::__", "abstract", "_", "ser", "ializable", "__()", "Ġ{}", "Ċ", "Ċ", "std", "::", "map", "<", "std", "::", "string", ",", "Ġstd", "::", "function", "<", "json", "::__", "abstract", "_", "ser", "ializable", "__", "*", "()>", "Ġ>", "Ġjson", "::__", "abstract", "_", "ser", "ializable", "__", "::", "dictionary", ";", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::49", "code": "#include \"FunctionCallOperatorNode.h\"\n#include \"compiler/Parser/Parser.h\"\n#include \"compiler/AST/Variables/VariableNode.h\"\n\n#include <assert.h>\n\nnamespace Three {\n    FunctionCallOperatorNode* FunctionCallOperatorNode::parse(Parser& parser, ASTNode* receiver, ASTNode* firstArg) {\n        assert(parser.helper()->peek().type() == Token::Type::PunctuationOpenParen);\n        assert(receiver);\n\n        FunctionCallOperatorNode* node = new FunctionCallOperatorNode();\n\n        node->setReceiver(receiver);\n\n        if (!CallableOperatorNode::parseArguments(parser, node)) {\n            assert(0 && \"Message: Unable to parse function arguments\");\n        }\n\n        return node;\n    }\n\n    std::string FunctionCallOperatorNode::nodeName() const {\n        return \"Function Call Operator\";\n    }\n\n    void FunctionCallOperatorNode::accept(ASTVisitor& visitor) {\n        visitor.visit(*this);\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "FunctionCall", "Operator", "Node", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "compiler", "/", "Parser", "/", "Parser", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "compiler", "/", "AST", "/", "Variables", "/", "Variable", "Node", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "Ċ", "namespace", "ĠThree", "Ġ{", "Ċ", "ĠĠĠ", "ĠFunction", "Call", "Operator", "Node", "*", "ĠFunction", "Call", "Operator", "Node", "::", "parse", "(", "Parser", "&", "Ġparser", ",", "ĠASTNode", "*", "Ġreceiver", ",", "ĠASTNode", "*", "Ġfirst", "Arg", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġassert", "(", "parser", ".", "helper", "()->", "peek", "().", "type", "()", "Ġ==", "ĠToken", "::", "Type", "::", "P", "unctuation", "Open", "Paren", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġassert", "(", "receiver", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠFunction", "Call", "Operator", "Node", "*", "Ġnode", "Ġ=", "Ġnew", "ĠFunction", "Call", "Operator", "Node", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġnode", "->", "set", "Receiver", "(", "receiver", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "Callable", "Operator", "Node", "::", "parse", "Arguments", "(", "parser", ",", "Ġnode", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġassert", "(", "0", "Ġ&&", "Ġ\"", "Message", ":", "ĠUnable", "Ġto", "Ġparse", "Ġfunction", "Ġarguments", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnode", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "ĠFunction", "Call", "Operator", "Node", "::", "nodeName", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ\"", "Function", "ĠCall", "ĠOperator", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠFunction", "Call", "Operator", "Node", "::", "accept", "(", "AST", "Visitor", "&", "Ġvisitor", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvisitor", ".", "visit", "(*", "this", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::50", "code": "#include <iostream>\n#include <string>\n\n// time complexity O(1) - constant\n// space complexity O(1) - constant\n\nbool is_unique (std::string s) {\n\tif (s.length() > 128) return false;\n\n\tbool char_list[128] = {0};\n\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (char_list[s[i]])\treturn false;\n\t\tchar_list[s[i]] = true;\n\t}\n\treturn true;\n}\n\nint main () {\n\tstd::cout << is_unique(\"ABCDEFGA\") << std::endl;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "//", "Ġtime", "Ġcomplexity", "ĠO", "(", "1", ")", "Ġ-", "Ġconstant", "Ċ", "//", "Ġspace", "Ġcomplexity", "ĠO", "(", "1", ")", "Ġ-", "Ġconstant", "Ċ", "Ċ", "bool", "Ġis", "_", "unique", "Ġ(", "std", "::", "string", "Ġs", ")", "Ġ{", "Ċ", "ĉ", "if", "Ġ(", "s", ".", "length", "()", "Ġ>", "Ġ128", ")", "Ġreturn", "Ġfalse", ";", "Ċ", "Ċ", "ĉ", "bool", "Ġchar", "_", "list", "[", "128", "]", "Ġ=", "Ġ{", "0", "};", "Ċ", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġs", ".", "length", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "char", "_", "list", "[", "s", "[", "i", "]])", "ĉ", "return", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "char", "_", "list", "[", "s", "[", "i", "]]", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġis", "_", "unique", "(\"", "ABCDEF", "GA", "\")", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::51", "code": "#pragma once\n\n#include <obs.hpp>\n\n#include <map>\n\nconst std::map<int, const char*> &GetAACEncoderBitrateMap();\nconst char *GetAACEncoderForBitrate(int bitrate);\nint FindClosestAvailableAACBitrate(int bitrate);\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "obs", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "const", "Ġstd", "::", "map", "<", "int", ",", "Ġconst", "Ġchar", "*>", "Ġ&", "Get", "AAC", "Encoder", "Bitrate", "Map", "();", "Ċ", "const", "Ġchar", "Ġ*", "Get", "AAC", "Encoder", "For", "Bitrate", "(", "int", "Ġbitrate", ");", "Ċ", "int", "ĠFind", "Closest", "Available", "AA", "CB", "it", "rate", "(", "int", "Ġbitrate", ");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::52", "code": "#include \"config.h\"\n\n#include <arki/tests/tests.h>\n#include <arki/iotrace.h>\n\nnamespace {\nusing namespace std;\nusing namespace arki;\nusing namespace arki::tests;\n\nclass Tests : public TestCase\n{\n    using TestCase::TestCase;\n    void register_tests() override;\n} test(\"arki_iotrace\");\n\nvoid Tests::register_tests() {\n\nadd_method(\"empty\", [] {\n});\n\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "config", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "ark", "i", "/", "tests", "/", "tests", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "ark", "i", "/", "io", "trace", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "Ġar", "ki", ";", "Ċ", "using", "Ġnamespace", "Ġar", "ki", "::", "tests", ";", "Ċ", "Ċ", "class", "ĠTests", "Ġ:", "Ġpublic", "ĠTestCase", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġusing", "ĠTestCase", "::", "TestCase", ";", "Ċ", "ĠĠĠ", "Ġvoid", "Ġregister", "_", "tests", "()", "Ġoverride", ";", "Ċ", "}", "Ġtest", "(\"", "ark", "i", "_", "io", "trace", "\");", "Ċ", "Ċ", "void", "ĠTests", "::", "register", "_", "tests", "()", "Ġ{", "Ċ", "Ċ", "add", "_", "method", "(\"", "empty", "\",", "Ġ[]", "Ġ{", "Ċ", "});", "Ċ", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::53", "code": "// **********************************************************************\n//\n// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.\n//\n// This copy of Ice is licensed to you under the terms described in the\n// ICE_LICENSE file included in this distribution.\n//\n// **********************************************************************\n\n#include <Ice/Ice.h>\n#include <ThroughputI.h>\n\nusing namespace std;\n\nclass ThroughputServer : public Ice::Application\n{\npublic:\n\n    virtual int run(int, char*[]);\n};\n\nint\nmain(int argc, char* argv[])\n{\n    ThroughputServer app;\n    return app.main(argc, argv, \"config.server\");\n}\n\nint\nThroughputServer::run(int argc, char*[])\n{\n    if(argc > 1)\n    {\n        cerr << appName() << \": too many arguments\" << endl;\n        return EXIT_FAILURE;\n    }\n\n    Ice::ObjectAdapterPtr adapter = communicator()->createObjectAdapter(\"Throughput\");\n    Demo::ThroughputPtr servant = new ThroughputI;\n    adapter->add(servant, communicator()->stringToIdentity(\"throughput\"));\n    adapter->activate();\n    communicator()->waitForShutdown();\n    return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ġ//", "Ġ*****************************************************************", "*****", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", "-", "2014", "ĠZero", "C", ",", "ĠInc", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġcopy", "Ġof", "ĠI", "ce", "Ġis", "Ġlicensed", "Ġto", "Ġyou", "Ġunder", "Ġthe", "Ġterms", "Ġdescribed", "Ġin", "Ġthe", "Ċ", "//", "ĠICE", "_", "LICENSE", "Ġfile", "Ġincluded", "Ġin", "Ġthis", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ*****************************************************************", "*****", "Ċ", "Ċ", "#", "include", "Ġ<", "Ice", "/", "Ice", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Through", "put", "I", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠTh", "rough", "put", "Server", "Ġ:", "Ġpublic", "ĠI", "ce", "::", "Application", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġint", "Ġrun", "(", "int", ",", "Ġchar", "*", "[]", ");", "Ċ", "};", "Ċ", "Ċ", "int", "Ċ", "main", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠTh", "rough", "put", "Server", "Ġapp", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġapp", ".", "main", "(", "argc", ",", "Ġargv", ",", "Ġ\"", "config", ".", "server", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "Ċ", "Through", "put", "Server", "::", "run", "(", "int", "Ġargc", ",", "Ġchar", "*", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(", "argc", "Ġ>", "Ġ1", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcerr", "Ġ<<", "ĠappName", "()", "Ġ<<", "Ġ\":", "Ġtoo", "Ġmany", "Ġarguments", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠEXIT", "_", "FAILURE", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠI", "ce", "::", "Object", "Adapter", "Ptr", "Ġadapter", "Ġ=", "Ġcomm", "unicator", "()->", "createObject", "Adapter", "(\"", "Through", "put", "\");", "Ċ", "ĠĠĠ", "ĠDemo", "::", "Through", "put", "Ptr", "Ġserv", "ant", "Ġ=", "Ġnew", "ĠTh", "rough", "put", "I", ";", "Ċ", "ĠĠĠ", "Ġadapter", "->", "add", "(", "serv", "ant", ",", "Ġcomm", "unicator", "()->", "stringTo", "Identity", "(\"", "through", "put", "\"));", "Ċ", "ĠĠĠ", "Ġadapter", "->", "activate", "();", "Ċ", "ĠĠĠ", "Ġcomm", "unicator", "()->", "waitFor", "Shutdown", "();", "Ċ", "ĠĠĠ", "Ġreturn", "ĠEXIT", "_", "SUCCESS", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::54", "code": "#include \"StdInc.h\"\n#include <ShellAPI.h>\n\nunsigned int _gameFlags;\n\ntypedef struct  \n{\n\tconst wchar_t* argument;\n\tunsigned int flag;\n} flagDef_t;\n\nflagDef_t flags[] =\n{\n\t{ L\"offline\", GAME_FLAG_OFFLINE },\n\t{ L\"console\", GAME_FLAG_CONSOLE },\n\t{ 0, 0 }\n};\n\nvoid DetermineGameFlags()\n{\n\tint numArgs;\n\tLPCWSTR commandLine = GetCommandLineW();\n\tLPWSTR* argv = CommandLineToArgvW(commandLine, &numArgs);\n\n\tfor (int i = 0; i < numArgs; i++)\n\t{\n\t\tif (argv[i][0] != L'-') continue;\n\n\t\tfor (wchar_t* c = argv[i]; *c != L'\\0'; c++)\n\t\t{\n\t\t\tif (*c != L'-')\n\t\t\t{\n\t\t\t\tfor (flagDef_t* flag = flags; flag->argument; flag++)\n\t\t\t\t{\n\t\t\t\t\tif (!wcscmp(c, flag->argument))\n\t\t\t\t\t{\n\t\t\t\t\t\t_gameFlags |= flag->flag;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Std", "Inc", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Shell", "API", ".", "h", ">", "Ċ", "Ċ", "unsigned", "Ġint", "Ġ_", "game", "Flags", ";", "Ċ", "Ċ", "typedef", "Ġstruct", "ĠĠ", "Ċ", "{", "Ċ", "ĉ", "const", "Ġwchar", "_", "t", "*", "Ġargument", ";", "Ċ", "ĉ", "unsigned", "Ġint", "Ġflag", ";", "Ċ", "}", "Ġflag", "Def", "_", "t", ";", "Ċ", "Ċ", "flag", "Def", "_", "t", "Ġflags", "[]", "Ġ=", "Ċ", "{", "Ċ", "ĉ", "{", "ĠL", "\"", "offline", "\",", "ĠGAME", "_", "FLAG", "_", "OFFLINE", "Ġ},", "Ċ", "ĉ", "{", "ĠL", "\"", "console", "\",", "ĠGAME", "_", "FLAG", "_", "CONSOLE", "Ġ},", "Ċ", "ĉ", "{", "Ġ0", ",", "Ġ0", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "void", "ĠDetermine", "Game", "Flags", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġnum", "Args", ";", "Ċ", "ĉ", "LPC", "WSTR", "ĠcommandLine", "Ġ=", "ĠGet", "CommandLine", "W", "();", "Ċ", "ĉ", "LP", "WSTR", "*", "Ġargv", "Ġ=", "ĠCommandLine", "To", "Argv", "W", "(", "command", "Line", ",", "Ġ&", "num", "Args", ");", "Ċ", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnum", "Args", ";", "Ġi", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "argv", "[", "i", "][", "0", "]", "Ġ!=", "ĠL", "'-", "')", "Ġcontinue", ";", "Ċ", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "wchar", "_", "t", "*", "Ġc", "Ġ=", "Ġargv", "[", "i", "];", "Ġ*", "c", "Ġ!=", "ĠL", "'\\", "0", "';", "Ġc", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "if", "Ġ(*", "c", "Ġ!=", "ĠL", "'-", "')", "Ċ", "ĉĉ", "ĉ", "{", "Ċ", "ĉĉĉ", "ĉ", "for", "Ġ(", "flag", "Def", "_", "t", "*", "Ġflag", "Ġ=", "Ġflags", ";", "Ġflag", "->", "argument", ";", "Ġflag", "++)", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉ", "ĉ", "if", "Ġ(!", "wc", "sc", "mp", "(", "c", ",", "Ġflag", "->", "argument", "))", "Ċ", "ĉĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉĉ", "ĉ", "_", "game", "Flags", "Ġ|=", "Ġflag", "->", "flag", ";", "Ċ", "ĉĉĉĉĉ", "ĉ", "break", ";", "Ċ", "ĉĉĉĉ", "ĉ", "}", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "ĉĉĉ", "ĉ", "break", ";", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::55", "code": "/* HexChat\n * Copyright (C) 1998-2010 Peter Zelezny.\n * Copyright (C) 2009-2013 Berke Viktor.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA\n */\n\n#ifndef HEXCHAT_ASCII_HPP\n#define HEXCHAT_ASCII_HPP\n\nvoid ascii_open (void);\n\n#endif\n", "code_tokens": ["Ġ/*", "ĠHex", "Chat", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ199", "8", "-", "2010", "ĠP", "eter", "ĠZ", "ele", "z", "ny", ".", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2009", "-", "2013", "ĠBer", "ke", "ĠV", "ik", "tor", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠHEX", "CHAT", "_", "ASCII", "_", "HP", "P", "Ċ", "#", "define", "ĠHEX", "CHAT", "_", "ASCII", "_", "HP", "P", "Ċ", "Ċ", "void", "Ġascii", "_", "open", "Ġ(", "void", ");", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::56", "code": "#pragma once\n// Description:\n//   Notification interface for loading and saving configuration.\n//\n// Copyright (C) 2001 Frank Becker\n//\n// This program is free software; you can redistribute it and/or modify it under\n// the terms of the GNU General Public License as published by the Free Software\n// Foundation;  either version 2 of the License,  or (at your option) any  later\n// version.\n//\n// This program is distributed in the hope that it will be useful,  but  WITHOUT\n// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n// FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details\n//\n#include <string>\n#include <fstream>\n\nclass ConfigHandler\n{\npublic:\n    //when reading the config file, registered ConfigHandlers\n    //will be notified for each line read.\n    virtual void handleLine( const std::string line) = 0;\n\n    //when writing the config file, registered ConfigHandlers\n    //will be notified with the out file stream\n    virtual void save( std::ofstream &of) = 0;\n\n\tvirtual ~ConfigHandler() {}\n};\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "//", "ĠDescription", ":", "Ċ", "//", "ĠĠ", "ĠNotification", "Ġinterface", "Ġfor", "Ġloading", "Ġand", "Ġsaving", "Ġconfiguration", ".", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ200", "1", "ĠF", "rank", "ĠBe", "ck", "er", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ċ", "//", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "//", "ĠFoundation", ";", "Ġ", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġ", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġ", "Ġlater", "Ċ", "//", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġ", "Ġbut", "Ġ", "ĠWITHOUT", "Ċ", "//", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "Ċ", "//", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", "Ċ", "//", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "class", "ĠConfig", "Handler", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġ//", "when", "Ġreading", "Ġthe", "Ġconfig", "Ġfile", ",", "Ġregistered", "ĠConfig", "Handlers", "Ċ", "ĠĠĠ", "Ġ//", "will", "Ġbe", "Ġnotified", "Ġfor", "Ġeach", "Ġline", "Ġread", ".", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġhandle", "Line", "(", "Ġconst", "Ġstd", "::", "string", "Ġline", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "when", "Ġwriting", "Ġthe", "Ġconfig", "Ġfile", ",", "Ġregistered", "ĠConfig", "Handlers", "Ċ", "ĠĠĠ", "Ġ//", "will", "Ġbe", "Ġnotified", "Ġwith", "Ġthe", "Ġout", "Ġfile", "Ġstream", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġsave", "(", "Ġstd", "::", "ofstream", "Ġ&", "of", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĉ", "virtual", "Ġ~", "Config", "Handler", "()", "Ġ{}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::57", "code": "/*\n * blockio.cc\n *\n *\n */\n\n#define _LARGEFILE_SOURCE\n#define _FILE_OFFSET_BITS 64\n\n#include \"version.h\"\n#include \"blockio.h\"\n#include \"osutils.h\"\n#include <stdio.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <stdint.h>\n\n__ID(\"@(#) $Id: blockio.cc 2069 2009-02-12 22:53:09Z lyonel $\");\n\nssize_t readlogicalblocks(source & s,\nvoid * buffer,\nlong long pos, long long count)\n{\n  long long result = 0;\n\n  memset(buffer, 0, count*s.blocksize);\n\n                                                  /* attempt to read past the end of the section */\n  if((s.size>0) && ((pos+count)*s.blocksize>s.size)) return 0;\n\n  result = lseek(s.fd, s.offset + pos*s.blocksize, SEEK_SET);\n\n  if(result == -1) return 0;\n\n  result = read(s.fd, buffer, count*s.blocksize);\n\n  if(result!=count*s.blocksize)\n    return 0;\n  else\n    return count;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġblock", "io", ".", "cc", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "define", "Ġ_", "LARGE", "FILE", "_", "SOURCE", "Ċ", "#", "define", "Ġ_", "FILE", "_", "OFFSET", "_", "BITS", "Ġ64", "Ċ", "Ċ", "#", "include", "Ġ\"", "version", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "block", "io", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "os", "utils", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "types", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "stat", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "fcntl", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "Ċ", "__", "ID", "(\"@", "(#", ")", "Ġ$", "Id", ":", "Ġblock", "io", ".", "cc", "Ġ2", "069", "Ġ2009", "-", "02", "-", "12", "Ġ22", ":", "53", ":", "09", "Z", "Ġly", "on", "el", "Ġ$", "\");", "Ċ", "Ċ", "ssize", "_", "t", "Ġread", "logical", "blocks", "(", "source", "Ġ&", "Ġs", ",", "Ċ", "void", "Ġ*", "Ġbuffer", ",", "Ċ", "long", "Ġlong", "Ġpos", ",", "Ġlong", "Ġlong", "Ġcount", ")", "Ċ", "{", "Ċ", "Ġ", "Ġlong", "Ġlong", "Ġresult", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "Ġ", "Ġmemset", "(", "buffer", ",", "Ġ0", ",", "Ġcount", "*", "s", ".", "blocksize", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ/*", "Ġattempt", "Ġto", "Ġread", "Ġpast", "Ġthe", "Ġend", "Ġof", "Ġthe", "Ġsection", "Ġ*/", "Ċ", "Ġ", "Ġif", "((", "s", ".", "size", ">", "0", ")", "Ġ&&", "Ġ((", "pos", "+", "count", ")*", "s", ".", "blocksize", ">", "s", ".", "size", "))", "Ġreturn", "Ġ0", ";", "Ċ", "Ċ", "Ġ", "Ġresult", "Ġ=", "Ġl", "seek", "(", "s", ".", "fd", ",", "Ġs", ".", "offset", "Ġ+", "Ġpos", "*", "s", ".", "blocksize", ",", "ĠSEEK", "_", "SET", ");", "Ċ", "Ċ", "Ġ", "Ġif", "(", "result", "Ġ==", "Ġ-", "1", ")", "Ġreturn", "Ġ0", ";", "Ċ", "Ċ", "Ġ", "Ġresult", "Ġ=", "Ġread", "(", "s", ".", "fd", ",", "Ġbuffer", ",", "Ġcount", "*", "s", ".", "blocksize", ");", "Ċ", "Ċ", "Ġ", "Ġif", "(", "result", "!=", "count", "*", "s", ".", "blocksize", ")", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "ĠĠĠ", "Ġreturn", "Ġcount", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::58", "code": "/*\n * MATRIX COMPUTATION FOR RESERVATION BASED SYSTEMS\n *\n * Copyright (C) 2013, University of Trento\n * Authors: Luigi Palopoli <palopoli@disi.unitn.it>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n */\n#ifndef MATRIX_HPP\n#define MATRIX_HPP\n\n\ndouble matrix_prob_ts(int i, int j, int q, const cdf &p, \n\t\t      const pmf &u);\ndouble matrix_prob_ts_compressed(int i, int j, int q, const cdf &p, \n\t\t      const pmf &u);\n\nvoid compute_matrixes(const MatrixXd & mat, int dim, MatrixXd & B, MatrixXd & A0,\n\t\t      MatrixXd & A1, MatrixXd & A2);\n\n\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠMAT", "RIX", "ĠCOM", "PUT", "ATION", "ĠFOR", "ĠRE", "SERV", "ATION", "ĠBASE", "D", "ĠSY", "STE", "MS", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2013", ",", "ĠUn", "ivers", "ity", "Ġof", "ĠT", "ren", "to", "Ċ", "Ġ*", "ĠAuth", "ors", ":", "ĠL", "u", "ig", "i", "ĠP", "al", "op", "ol", "i", "Ġ<", "pal", "op", "ol", "i", "@", "dis", "i", ".", "unit", "n", ".", "it", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ġ2", "Ġas", "Ċ", "Ġ*", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ".", "Ċ", "Ġ*/", "Ċ", "#", "ifndef", "ĠMAT", "RIX", "_", "HP", "P", "Ċ", "#", "define", "ĠMAT", "RIX", "_", "HP", "P", "Ċ", "Ċ", "Ċ", "double", "Ġmatrix", "_", "prob", "_", "ts", "(", "int", "Ġi", ",", "Ġint", "Ġj", ",", "Ġint", "Ġq", ",", "Ġconst", "Ġcdf", "Ġ&", "p", ",", "ĠĊ", "ĉĉĠĠĠĠĠ", "Ġconst", "Ġpmf", "Ġ&", "u", ");", "Ċ", "double", "Ġmatrix", "_", "prob", "_", "ts", "_", "compressed", "(", "int", "Ġi", ",", "Ġint", "Ġj", ",", "Ġint", "Ġq", ",", "Ġconst", "Ġcdf", "Ġ&", "p", ",", "ĠĊ", "ĉĉĠĠĠĠĠ", "Ġconst", "Ġpmf", "Ġ&", "u", ");", "Ċ", "Ċ", "void", "Ġcompute", "_", "matrix", "es", "(", "const", "ĠMatrix", "Xd", "Ġ&", "Ġmat", ",", "Ġint", "Ġdim", ",", "ĠMatrix", "Xd", "Ġ&", "ĠB", ",", "ĠMatrix", "Xd", "Ġ&", "ĠA", "0", ",", "Ċ", "ĉĉĠĠĠĠĠ", "ĠMatrix", "Xd", "Ġ&", "ĠA", "1", ",", "ĠMatrix", "Xd", "Ġ&", "ĠA", "2", ");", "Ċ", "Ċ", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::59", "code": "#include <iomanip>\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int n, p_i;\n  cin >> n;\n  double total = 0.0;\n  for (size_t i = 0; i < n; i++) {\n    cin >> p_i;\n    total += p_i;\n  }\n  cout << setprecision(12) << fixed << (total / n) << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "iom", "an", "ip", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġios", "_", "base", "::", "sync", "_", "with", "_", "stdio", "(", "false", ");", "Ċ", "Ġ", "Ġcin", ".", "tie", "(", "nullptr", ");", "Ċ", "Ġ", "Ġint", "Ġn", ",", "Ġp", "_", "i", ";", "Ċ", "Ġ", "Ġcin", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġdouble", "Ġtotal", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġp", "_", "i", ";", "Ċ", "ĠĠĠ", "Ġtotal", "Ġ+=", "Ġp", "_", "i", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġset", "precision", "(", "12", ")", "Ġ<<", "Ġfixed", "Ġ<<", "Ġ(", "total", "Ġ/", "Ġn", ")", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::60", "code": "/* \n * Copyright (C) 2004\n * Swiss Federal Institute of Technology, Lausanne. All rights reserved.\n * \n * Developed at the Autonomous Systems Lab.\n * Visit our homepage at http://asl.epfl.ch/\n * \n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307\n * USA\n */\n\n\n#ifndef NPM_TRAJECTORYDRAWING_HPP\n#define NPM_TRAJECTORYDRAWING_HPP\n\n\n#include <npm/gfx/Drawing.hpp>\n\n\nnamespace npm {\n  \n  class RobotServer;\n  \n  class TrajectoryDrawing\n    : public Drawing\n  {\n  public:\n    TrajectoryDrawing(const RobotServer * owner);\n    virtual void Draw();\n    \n  private:\n    const RobotServer * m_owner;\n  };\n\n}\n\n#endif // NPM_TRAJECTORYDRAWING_HPP\n", "code_tokens": ["Ġ/*", "ĠĊ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2004", "Ċ", "Ġ*", "ĠSw", "iss", "ĠF", "eder", "al", "ĠIn", "stitute", "Ġof", "ĠTech", "nology", ",", "ĠLa", "us", "an", "ne", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠDe", "veloped", "Ġat", "Ġthe", "ĠAut", "onom", "ous", "ĠSystems", "ĠL", "ab", ".", "Ċ", "Ġ*", "ĠVisit", "Ġour", "Ġhom", "epage", "Ġat", "Ġhttp", "://", "asl", ".", "ep", "fl", ".", "ch", "/", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", ",", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ02", "111", "-", "13", "07", "Ċ", "Ġ*", "ĠUSA", "Ċ", "Ġ*/", "Ċ", "Ċ", "Ċ", "#", "ifndef", "ĠN", "PM", "_", "TRA", "JECT", "ORY", "DRAW", "ING", "_", "HP", "P", "Ċ", "#", "define", "ĠN", "PM", "_", "TRA", "JECT", "ORY", "DRAW", "ING", "_", "HP", "P", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ<", "npm", "/", "gfx", "/", "Drawing", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "namespace", "Ġnpm", "Ġ{", "Ċ", "ĠĠĊ", "Ġ", "Ġclass", "ĠRob", "ot", "Server", ";", "Ċ", "ĠĠĊ", "Ġ", "Ġclass", "ĠTra", "jectory", "Drawing", "Ċ", "ĠĠĠ", "Ġ:", "Ġpublic", "ĠDrawing", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "ĠTra", "jectory", "Drawing", "(", "const", "ĠRob", "ot", "Server", "Ġ*", "Ġowner", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "ĠDraw", "();", "Ċ", "ĠĠĠĠĊ", "Ġ", "Ġprivate", ":", "Ċ", "ĠĠĠ", "Ġconst", "ĠRob", "ot", "Server", "Ġ*", "Ġm", "_", "owner", ";", "Ċ", "Ġ", "Ġ};", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠN", "PM", "_", "TRA", "JECT", "ORY", "DRAW", "ING", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::61", "code": "#pragma once\n\n#include <MellowPlayer/Presentation/Notifications/ISystemTrayIcon.hpp>\n#include <QMenu>\n#include <QSystemTrayIcon>\n\nnamespace MellowPlayer::Domain\n{\n    class ILogger;\n    class IPlayer;\n    class Setting;\n    class Settings;\n}\n\nclass SystemTrayIconStrings : public QObject\n{\n    Q_OBJECT\npublic:\n    QString playPause() const;\n    QString next() const;\n    QString previous() const;\n    QString restoreWindow() const;\n    QString quit() const;\n};\n\nnamespace MellowPlayer::Infrastructure\n{\n    class IApplication;\n}\n\nnamespace MellowPlayer::Presentation\n{\n    class IMainWindow;\n\n    class SystemTrayIcon : public QObject, public ISystemTrayIcon\n    {\n        Q_OBJECT\n    public:\n        SystemTrayIcon(Domain::IPlayer& player, IMainWindow& mainWindow, Domain::Settings& settings);\n\n        void show() override;\n        void hide() override;\n        void showMessage(const QString& title, const QString& message) override;\n\n    public slots:\n        void onActivated(QSystemTrayIcon::ActivationReason reason);\n        void togglePlayPause();\n        void next();\n        void previous();\n        void restoreWindow();\n        void quit();\n\n    private slots:\n        void onShowTrayIconSettingValueChanged();\n\n    private:\n        void setUpMenu();\n\n        Domain::ILogger& logger_;\n        Domain::IPlayer& player_;\n        IMainWindow& mainWindow_;\n        Domain::Settings& settings_;\n        Domain::Setting& showTrayIconSetting_;\n\n        QSystemTrayIcon qSystemTrayIcon_;\n        QMenu menu_;\n        QAction* playPauseAction_;\n        QAction* previousSongAction_;\n        QAction* nextSongAction_;\n        QAction* restoreWindowAction_;\n        QAction* quitApplicationAction_;\n    };\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "M", "ellow", "Player", "/", "Presentation", "/", "Notifications", "/", "IS", "ystem", "Tray", "Icon", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "Q", "Menu", ">", "Ċ", "#", "include", "Ġ<", "Q", "System", "Tray", "Icon", ">", "Ċ", "Ċ", "namespace", "ĠM", "ellow", "Player", "::", "Domain", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclass", "ĠI", "Logger", ";", "Ċ", "ĠĠĠ", "Ġclass", "ĠI", "Player", ";", "Ċ", "ĠĠĠ", "Ġclass", "ĠSetting", ";", "Ċ", "ĠĠĠ", "Ġclass", "ĠSettings", ";", "Ċ", "}", "Ċ", "Ċ", "class", "ĠSystem", "Tray", "Icon", "Strings", "Ġ:", "Ġpublic", "ĠQObject", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠQString", "Ġplay", "Pause", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "ĠQString", "Ġnext", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "ĠQString", "Ġprevious", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "ĠQString", "Ġrestore", "Window", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "ĠQString", "Ġquit", "()", "Ġconst", ";", "Ċ", "};", "Ċ", "Ċ", "namespace", "ĠM", "ellow", "Player", "::", "Inf", "rastructure", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclass", "ĠI", "Application", ";", "Ċ", "}", "Ċ", "Ċ", "namespace", "ĠM", "ellow", "Player", "::", "Presentation", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclass", "ĠI", "MainWindow", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġclass", "ĠSystem", "Tray", "Icon", "Ġ:", "Ġpublic", "ĠQObject", ",", "Ġpublic", "ĠIS", "ystem", "Tray", "Icon", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSystem", "Tray", "Icon", "(", "Domain", "::", "IP", "layer", "&", "Ġplayer", ",", "ĠI", "MainWindow", "&", "Ġmain", "Window", ",", "ĠDomain", "::", "Settings", "&", "Ġsettings", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġshow", "()", "Ġoverride", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġhide", "()", "Ġoverride", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġshow", "Message", "(", "const", "ĠQString", "&", "Ġtitle", ",", "Ġconst", "ĠQString", "&", "Ġmessage", ")", "Ġoverride", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġpublic", "Ġslots", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġon", "Activated", "(", "Q", "System", "Tray", "Icon", "::", "Activation", "Reason", "Ġreason", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġtoggle", "Play", "Pause", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġnext", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġprevious", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġrestore", "Window", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġquit", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", "Ġslots", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġon", "Show", "Tray", "Icon", "Setting", "ValueChanged", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "ĠsetUp", "Menu", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠDomain", "::", "I", "Logger", "&", "Ġlogger", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠDomain", "::", "IP", "layer", "&", "Ġplayer", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠI", "MainWindow", "&", "Ġmain", "Window", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠDomain", "::", "Settings", "&", "Ġsettings", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠDomain", "::", "Setting", "&", "Ġshow", "Tray", "Icon", "Setting", "_;", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQ", "System", "Tray", "Icon", "Ġq", "System", "Tray", "Icon", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQ", "Menu", "Ġmenu", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQAction", "*", "Ġplay", "Pause", "Action", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQAction", "*", "Ġprevious", "Song", "Action", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQAction", "*", "Ġnext", "Song", "Action", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQAction", "*", "Ġrestore", "Window", "Action", "_;", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQAction", "*", "Ġquit", "Application", "Action", "_;", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::62", "code": "// STLport regression testsuite component.\n// To compile as a separate example, please #define MAIN.\n#include <iterator>\n\n#include <vector>\n#include <algorithm>\n#include <iostream>\n#include <numeric>\n#include <iterator>\n\n#ifdef MAIN \n#define partsum1_test main\n#endif\n\n#if !defined (STLPORT) || defined(__STL_USE_NAMESPACES)\nusing namespace std;\n#endif\nint partsum1_test(int, char**)\n{\n  cout<<\"Results of partsum1_test:\"<<endl;\n  vector <int> v1(10);\n  iota(v1.begin(), v1.end(), 0);\n  vector <int> v2(v1.size());\n  partial_sum(v1.begin(), v1.end(), v2.begin());\n  ostream_iterator <int> iter(cout, \" \");\n  copy(v1.begin(), v1.end(), iter);\n  cout << endl;\n  copy(v2.begin(), v2.end(), iter);\n  cout << endl;\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠST", "L", "port", "Ġregression", "Ġtests", "uite", "Ġcomponent", ".", "Ċ", "//", "ĠTo", "Ġcompile", "Ġas", "Ġa", "Ġseparate", "Ġexample", ",", "Ġplease", "Ġ#", "define", "ĠM", "AIN", ".", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "numeric", ">", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "Ċ", "#", "ifdef", "ĠM", "AIN", "Ġ", "Ċ", "#", "define", "Ġpart", "sum", "1", "_", "test", "Ġmain", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "if", "Ġ!", "defined", "Ġ(", "ST", "L", "PORT", ")", "Ġ||", "Ġdefined", "(__", "ST", "L", "_", "USE", "_", "NAMESPACE", "S", ")", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "endif", "Ċ", "int", "Ġpart", "sum", "1", "_", "test", "(", "int", ",", "Ġchar", "**)", "Ċ", "{", "Ċ", "Ġ", "Ġcout", "<<\"", "Results", "Ġof", "Ġpart", "sum", "1", "_", "test", ":\"", "<<", "endl", ";", "Ċ", "Ġ", "Ġvector", "Ġ<", "int", ">", "Ġv", "1", "(", "10", ");", "Ċ", "Ġ", "Ġi", "ota", "(", "v", "1", ".", "begin", "(),", "Ġv", "1", ".", "end", "(),", "Ġ0", ");", "Ċ", "Ġ", "Ġvector", "Ġ<", "int", ">", "Ġv", "2", "(", "v", "1", ".", "size", "());", "Ċ", "Ġ", "Ġpartial", "_", "sum", "(", "v", "1", ".", "begin", "(),", "Ġv", "1", ".", "end", "(),", "Ġv", "2", ".", "begin", "());", "Ċ", "Ġ", "Ġo", "stream", "_", "iterator", "Ġ<", "int", ">", "Ġiter", "(", "cout", ",", "Ġ\"", "Ġ\");", "Ċ", "Ġ", "Ġcopy", "(", "v", "1", ".", "begin", "(),", "Ġv", "1", ".", "end", "(),", "Ġiter", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġcopy", "(", "v", "2", ".", "begin", "(),", "Ġv", "2", ".", "end", "(),", "Ġiter", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::63", "code": "#include \"Converter.h\"\n#include <TFormula.h>\n#include <iomanip>\n#include <sstream>\nstd::string Converter::doubleToString(double x,int precision,bool scientifiStyle)\n{\n  std::stringstream xs;\n  if(scientifiStyle)\n    xs<<std::scientific;\n  else\n    xs<<std::fixed;\n  xs<<std::setprecision(precision)<<x;\n  return xs.str();\n};\nstd::string Converter::intToString(int x)\n{\n  return doubleToString(x,0);\n};\ndouble Converter::stringToDouble(std::string formula)\n{\n  TFormula myf(\"myf\",formula.c_str());\n  return myf.Eval(0);\n}\nint Converter::stringToInt(std::string formula)\n{\n  return (int)(stringToDouble(formula));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Converter", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "T", "Formula", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "std", "::", "string", "ĠConverter", "::", "double", "ToString", "(", "double", "Ġx", ",", "int", "Ġprecision", ",", "bool", "Ġsc", "ient", "ifi", "Style", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "stringstream", "Ġxs", ";", "Ċ", "Ġ", "Ġif", "(", "sc", "ient", "ifi", "Style", ")", "Ċ", "ĠĠĠ", "Ġxs", "<<", "std", "::", "sc", "ient", "ific", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "ĠĠĠ", "Ġxs", "<<", "std", "::", "fixed", ";", "Ċ", "Ġ", "Ġxs", "<<", "std", "::", "set", "precision", "(", "precision", ")<<", "x", ";", "Ċ", "Ġ", "Ġreturn", "Ġxs", ".", "str", "();", "Ċ", "};", "Ċ", "std", "::", "string", "ĠConverter", "::", "int", "ToString", "(", "int", "Ġx", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġdouble", "ToString", "(", "x", ",", "0", ");", "Ċ", "};", "Ċ", "double", "ĠConverter", "::", "string", "ToDouble", "(", "std", "::", "string", "Ġformula", ")", "Ċ", "{", "Ċ", "Ġ", "ĠT", "Formula", "Ġmy", "f", "(\"", "my", "f", "\",", "formula", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġreturn", "Ġmy", "f", ".", "Eval", "(", "0", ");", "Ċ", "}", "Ċ", "int", "ĠConverter", "::", "string", "ToInt", "(", "std", "::", "string", "Ġformula", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ(", "int", ")(", "string", "ToDouble", "(", "formula", "));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::64", "code": "/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n */\n\n/* ScriptData\nSDName: boss_lord_marrowgar\nSD%Complete: 0%\nSDComment:\nSDCategory: Icecrown Citadel\nEndScriptData */\n\n#include \"precompiled.h\"\n\nenum\n{\n    SAY_INTRO                   = -1631001,\n    SAY_AGGRO                   = -1631002,\n    SAY_BONE_STORM              = -1631003,\n    SAY_BONE_SPIKE_1            = -1631004,\n    SAY_BONE_SPIKE_2            = -1631005,\n    SAY_BONE_SPIKE_3            = -1631006,\n    SAY_SLAY_1                  = -1631007,\n    SAY_SLAY_2                  = -1631008,\n    SAY_DEATH                   = -1631009,\n    SAY_BERSERK                 = -1631010,\n};\n\nvoid AddSC_boss_lord_marrowgar()\n{\n}\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "Ġ-", "Ġ2012", "ĠScript", "Dev", "2", "Ġ<", "http", "://", "www", ".", "script", "dev", "2", ".", "com", "/>", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", ",", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", "Ġ", "ĠUSA", "Ċ", "Ġ*/", "Ċ", "Ċ", "/*", "ĠScript", "Data", "Ċ", "SD", "Name", ":", "Ġbo", "ss", "_", "l", "ord", "_", "mar", "row", "gar", "Ċ", "SD", "%", "Complete", ":", "Ġ0", "%", "Ċ", "SD", "Comment", ":", "Ċ", "SD", "Category", ":", "ĠI", "cec", "rown", "ĠC", "it", "ade", "l", "Ċ", "End", "Script", "Data", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "pre", "compiled", ".", "h", "\"", "Ċ", "Ċ", "enum", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "INTR", "O", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "1001", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "AG", "GRO", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "1002", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "B", "ONE", "_", "ST", "ORM", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "100", "3", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "B", "ONE", "_", "SPI", "KE", "_", "1", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "1004", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "B", "ONE", "_", "SPI", "KE", "_", "2", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "100", "5", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "B", "ONE", "_", "SPI", "KE", "_", "3", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "100", "6", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "S", "LAY", "_", "1", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "100", "7", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "S", "LAY", "_", "2", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "100", "8", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "DE", "ATH", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "100", "9", ",", "Ċ", "ĠĠĠ", "ĠS", "AY", "_", "BER", "SER", "K", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ=", "Ġ-", "163", "1010", ",", "Ċ", "};", "Ċ", "Ċ", "void", "ĠAddSC", "_", "boss", "_", "l", "ord", "_", "mar", "row", "gar", "()", "Ċ", "{", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::65", "code": "/*\n    This file is a part of the Depecher (Telegram client)\n    Copyright (C) 2017 Alexandr Akulich <akulichalexander@gmail.com>\n\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n#include <QGuiApplication>\n#include <QQuickView>\n#include <sailfishapp.h>\n\nint main(int argc, char *argv[])\n{\n    QScopedPointer<QGuiApplication> application(SailfishApp::application(argc, argv));\n    application->setApplicationName(QStringLiteral(\"depecher\"));\n    application->setApplicationDisplayName(QStringLiteral(\"Depecher\"));\n\n    QScopedPointer<QQuickView> view(SailfishApp::createView());\n    view->setSource(SailfishApp::pathTo(QStringLiteral(\"qml/main.qml\")));\n    view->setTitle(application->applicationDisplayName());\n    view->setResizeMode(QQuickView::SizeRootObjectToView);\n    view->show();\n\n    return application->exec();\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠĠ", "ĠThis", "Ġfile", "Ġis", "Ġa", "Ġpart", "Ġof", "Ġthe", "ĠDe", "pe", "cher", "Ġ(", "Tele", "gram", "Ġclient", ")", "Ċ", "ĠĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2017", "ĠA", "lex", "and", "r", "ĠA", "k", "ul", "ich", "Ġ<", "ak", "ul", "ich", "alex", "ander", "@", "gmail", ".", "com", ">", "Ċ", "Ċ", "ĠĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "ĠĠĠ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠĠ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "ĠĠĠ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "ĠĠĠ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Gui", "Application", ">", "Ċ", "#", "include", "Ġ<", "QQuick", "View", ">", "Ċ", "#", "include", "Ġ<", "s", "ail", "fish", "app", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "Scoped", "Pointer", "<", "Q", "Gui", "Application", ">", "Ġapplication", "(", "S", "ail", "fish", "App", "::", "application", "(", "argc", ",", "Ġargv", "));", "Ċ", "ĠĠĠ", "Ġapplication", "->", "set", "ApplicationName", "(", "QStringLiteral", "(\"", "de", "pe", "cher", "\"));", "Ċ", "ĠĠĠ", "Ġapplication", "->", "set", "Application", "DisplayName", "(", "QStringLiteral", "(\"", "De", "pe", "cher", "\"));", "Ċ", "Ċ", "ĠĠĠ", "ĠQ", "Scoped", "Pointer", "<", "QQuick", "View", ">", "Ġview", "(", "S", "ail", "fish", "App", "::", "create", "View", "());", "Ċ", "ĠĠĠ", "Ġview", "->", "setSource", "(", "S", "ail", "fish", "App", "::", "pathTo", "(", "QStringLiteral", "(\"", "qml", "/", "main", ".", "qml", "\")));", "Ċ", "ĠĠĠ", "Ġview", "->", "setTitle", "(", "application", "->", "application", "DisplayName", "());", "Ċ", "ĠĠĠ", "Ġview", "->", "set", "Resize", "Mode", "(", "QQuick", "View", "::", "Size", "Root", "Object", "To", "View", ");", "Ċ", "ĠĠĠ", "Ġview", "->", "show", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġapplication", "->", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::66", "code": "/*\r\n* Turbo Sliders++\r\n* Copyright (C) 2013-2014 Martin Newhouse\r\n*\r\n* This program is free software; you can redistribute it and/or modify\r\n* it under the terms of the GNU General Public License as published by\r\n* the Free Software Foundation; either version 2 of the License, or\r\n* (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU General Public License along\r\n* with this program; if not, write to the Free Software Foundation, Inc.,\r\n* 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\r\n*/\r\n\r\n#pragma once\r\n\r\n#ifndef TRACK_METADATA_HPP\r\n#define TRACK_METADATA_HPP\r\n\r\n#include \"track_identifier.hpp\"\r\n\r\nnamespace ts\r\n{\r\n    namespace resources\r\n    {\r\n        class Track_handle;\r\n\r\n        struct Track_metadata\r\n        {\r\n            Track_identifier identifier;\r\n            utf8_string gamemode;\r\n        };\r\n\r\n        Track_metadata load_track_metadata(const resources::Track_handle& track_handle);\r\n    }\r\n}\r\n\r\n#endif", "code_tokens": ["Ġ/*", "č", "Ċ", "*", "ĠTur", "bo", "ĠS", "lid", "ers", "++", "č", "Ċ", "*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2013", "-", "2014", "ĠM", "art", "in", "ĠNew", "house", "č", "Ċ", "*", "č", "Ċ", "*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "č", "Ċ", "*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "č", "Ċ", "*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "č", "Ċ", "*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "č", "Ċ", "*", "č", "Ċ", "*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "č", "Ċ", "*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "č", "Ċ", "*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "č", "Ċ", "*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "č", "Ċ", "*", "č", "Ċ", "*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "č", "Ċ", "*", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "č", "Ċ", "*", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", "ĠUSA", ".", "č", "Ċ", "*/", "č", "Ċ", "č", "Ċ", "#", "pragma", "Ġonce", "č", "Ċ", "č", "Ċ", "#", "ifndef", "ĠTRACK", "_", "METADATA", "_", "HP", "P", "č", "Ċ", "#", "define", "ĠTRACK", "_", "METADATA", "_", "HP", "P", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "track", "_", "identifier", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "namespace", "Ġts", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġnamespace", "Ġresources", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġclass", "ĠTrack", "_", "handle", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstruct", "ĠTrack", "_", "metadata", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠTrack", "_", "identifier", "Ġidentifier", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġutf", "8", "_", "string", "Ġgame", "mode", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ};", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠTrack", "_", "metadata", "Ġload", "_", "track", "_", "metadata", "(", "const", "Ġresources", "::", "Track", "_", "handle", "&", "Ġtrack", "_", "handle", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "endif"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::67", "code": "// RUN: %clang_cc1 %s -triple=x86_64-apple-darwin10 -emit-llvm -o - | FileCheck %s\n\n// CHECK: ; ModuleID\nstruct A {\n  template<typename T>\n  A(T);\n};\n\ntemplate<typename T> A::A(T) {}\n\nstruct B {\n  template<typename T>\n  B(T);\n};\n\ntemplate<typename T> B::B(T) {}\n\n// CHECK: define void @_ZN1BC1IiEET_(%struct.B* %this, i32)\n// CHECK: define void @_ZN1BC2IiEET_(%struct.B* %this, i32)\ntemplate B::B(int);\n\ntemplate<typename T>\nstruct C {\n  void f() {\n    int a[] = { 1, 2, 3 };\n  }\n};\n\nvoid f(C<int>& c) {\n  c.f();\n}\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ%", "s", "Ġ-", "triple", "=", "x", "86", "_", "64", "-", "apple", "-", "darwin", "10", "Ġ-", "emit", "-", "llvm", "Ġ-", "o", "Ġ-", "Ġ|", "ĠFile", "Check", "Ġ%", "s", "Ċ", "Ċ", "//", "ĠCHECK", ":", "Ġ;", "ĠModule", "ID", "Ċ", "struct", "ĠA", "Ġ{", "Ċ", "Ġ", "Ġtemplate", "<", "typename", "ĠT", ">", "Ċ", "Ġ", "ĠA", "(", "T", ");", "Ċ", "};", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "ĠA", "::", "A", "(", "T", ")", "Ġ{}", "Ċ", "Ċ", "struct", "ĠB", "Ġ{", "Ċ", "Ġ", "Ġtemplate", "<", "typename", "ĠT", ">", "Ċ", "Ġ", "ĠB", "(", "T", ");", "Ċ", "};", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "ĠB", "::", "B", "(", "T", ")", "Ġ{}", "Ċ", "Ċ", "//", "ĠCHECK", ":", "Ġdefine", "Ġvoid", "Ġ@_", "ZN", "1", "BC", "1", "Ii", "E", "ET", "_", "(%", "struct", ".", "B", "*", "Ġ%", "this", ",", "Ġi", "32", ")", "Ċ", "//", "ĠCHECK", ":", "Ġdefine", "Ġvoid", "Ġ@_", "ZN", "1", "BC", "2", "Ii", "E", "ET", "_", "(%", "struct", ".", "B", "*", "Ġ%", "this", ",", "Ġi", "32", ")", "Ċ", "template", "ĠB", "::", "B", "(", "int", ");", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "Ċ", "struct", "ĠC", "Ġ{", "Ċ", "Ġ", "Ġvoid", "Ġf", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġa", "[]", "Ġ=", "Ġ{", "Ġ1", ",", "Ġ2", ",", "Ġ3", "Ġ};", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "void", "Ġf", "(", "C", "<", "int", ">&", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġc", ".", "f", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::68", "code": "class Extended_GetIn_EventHandlers\n{\n\tclass StaticMGWeapon\n\t{\n\t\tclass ace_ifa3staticweapon\n\t\t{\n\t\t\tgetIn = \"_this call ace_ifa3staticweapon_fnc_getIn\";\n\t\t};\n\t};\n\tclass StaticMortar\n\t{\n\t\tclass ace_ifa3staticweapon\n\t\t{\n\t\t\tgetIn = \"_this call ace_ifa3staticweapon_fnc_getIn\";\n\t\t};\n\t};\n};", "code_tokens": ["Ġclass", "ĠExtended", "_", "Get", "In", "_", "Event", "Handlers", "Ċ", "{", "Ċ", "ĉ", "class", "ĠStatic", "MG", "Weapon", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "class", "Ġace", "_", "ifa", "3", "static", "weapon", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "getIn", "Ġ=", "Ġ\"_", "this", "Ġcall", "Ġace", "_", "ifa", "3", "static", "weapon", "_", "fn", "c", "_", "getIn", "\";", "Ċ", "ĉ", "ĉ", "};", "Ċ", "ĉ", "};", "Ċ", "ĉ", "class", "ĠStatic", "M", "ort", "ar", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "class", "Ġace", "_", "ifa", "3", "static", "weapon", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "getIn", "Ġ=", "Ġ\"_", "this", "Ġcall", "Ġace", "_", "ifa", "3", "static", "weapon", "_", "fn", "c", "_", "getIn", "\";", "Ċ", "ĉ", "ĉ", "};", "Ċ", "ĉ", "};", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::69", "code": "/*++\n *\n *  Kafka Message Queue\n *\n *  DESCRIPTION: \n *  AUTHOR: NickeyWoo\n *  DATE: 2014/8/15\n *\n--*/\n#ifndef __KAFKA_PRODUCER_HH__\n#define __KAFKA_PRODUCER_HH__\n\n#include <boost/nocopyable.hpp>\n\n#include <google/protobuf/message_lite.h>\n#include <google/protobuf/message.h>\n#include <google/protobuf/descriptor.h>\n\nclass KafkaProducer\t:\n\tpublic boost::nocopyable\n{\npublic:\n\n\ttemplate<typename MessageT>\n\tvoid Push(std::string strTopic, std::string strGroupId, MessageT* pstMessage)\n\t{\n\t}\n\nprivate:\n\n};\n\n\n#endif // define __KAFKA_PRODUCER_HH__\n", "code_tokens": ["Ġ/*", "++", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠK", "afka", "ĠMessage", "ĠQueue", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠDESCRIPTION", ":", "ĠĊ", "Ġ*", "Ġ", "ĠAUT", "HOR", ":", "ĠN", "ic", "key", "W", "oo", "Ċ", "Ġ*", "Ġ", "ĠDATE", ":", "Ġ2014", "/", "8", "/", "15", "Ċ", "Ġ*", "Ċ", "--*/", "Ċ", "#", "ifndef", "Ġ__", "K", "AF", "KA", "_", "PROD", "UC", "ER", "_", "HH", "__", "Ċ", "#", "define", "Ġ__", "K", "AF", "KA", "_", "PROD", "UC", "ER", "_", "HH", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "no", "copy", "able", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "google", "/", "protobuf", "/", "message", "_", "lite", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "google", "/", "protobuf", "/", "message", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "google", "/", "protobuf", "/", "descriptor", ".", "h", ">", "Ċ", "Ċ", "class", "ĠK", "afka", "Producer", "ĉ", ":", "Ċ", "ĉ", "public", "Ġboost", "::", "no", "copy", "able", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ċ", "ĉ", "template", "<", "typename", "ĠMessage", "T", ">", "Ċ", "ĉ", "void", "ĠPush", "(", "std", "::", "string", "Ġstr", "Topic", ",", "Ġstd", "::", "string", "Ġstr", "GroupId", ",", "ĠMessage", "T", "*", "Ġp", "st", "Message", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "private", ":", "Ċ", "Ċ", "};", "Ċ", "Ċ", "Ċ", "#", "endif", "Ġ//", "Ġdefine", "Ġ__", "K", "AF", "KA", "_", "PROD", "UC", "ER", "_", "HH", "__", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::70", "code": "#ifndef AnalysisTool_h\n#define AnalysisTool_h 1\n\n#include \"StackingTool.hh\"\n\n#include <sstream>   // stringstream\n\nusing namespace std;\n\nclass AnalysisTool {\n  public:\n    AnalysisTool();\n    virtual ~AnalysisTool();\n\n    virtual void PrintTool();\n\n    virtual bool getInterest();\n    virtual bool getInterest(int particle, int sturface);\n    virtual bool getInterest(int particle,\n\t\t\t     int sturface,\n\t\t\t     int creationProcess,\n\t\t\t     int flagPhotoElectron);\n    virtual bool getInterest(int particle,\n\t\t\t     int sturface,\n\t\t\t     int volume);\n    virtual bool getInterest(int particle,\n\t\t\t     int surface,\n\t\t\t     double energy);\n  \n    virtual string processData();\n    virtual string processData(int id, float energy);\n    virtual string processData(int creation_process);\n  \n  private:\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠAnalysis", "Tool", "_", "h", "Ċ", "#", "define", "ĠAnalysis", "Tool", "_", "h", "Ġ1", "Ċ", "Ċ", "#", "include", "Ġ\"", "Stack", "ing", "Tool", ".", "hh", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "ĠĠ", "Ġ//", "Ġstring", "stream", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠAnalysis", "Tool", "Ġ{", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "ĠAnalysis", "Tool", "();", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "Analysis", "Tool", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "ĠPrint", "Tool", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "Ġget", "Interest", "();", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "Ġget", "Interest", "(", "int", "Ġparticle", ",", "Ġint", "Ġst", "urface", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "Ġget", "Interest", "(", "int", "Ġparticle", ",", "Ċ", "ĉĉĉĠĠĠĠ", "Ġint", "Ġst", "urface", ",", "Ċ", "ĉĉĉĠĠĠĠ", "Ġint", "Ġcreation", "Process", ",", "Ċ", "ĉĉĉĠĠĠĠ", "Ġint", "Ġflag", "Photo", "Elect", "ron", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "Ġget", "Interest", "(", "int", "Ġparticle", ",", "Ċ", "ĉĉĉĠĠĠĠ", "Ġint", "Ġst", "urface", ",", "Ċ", "ĉĉĉĠĠĠĠ", "Ġint", "Ġvolume", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "Ġget", "Interest", "(", "int", "Ġparticle", ",", "Ċ", "ĉĉĉĠĠĠĠ", "Ġint", "Ġsurface", ",", "Ċ", "ĉĉĉĠĠĠĠ", "Ġdouble", "Ġenergy", ");", "Ċ", "ĠĠĊ", "ĠĠĠ", "Ġvirtual", "Ġstring", "Ġprocess", "Data", "();", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġstring", "Ġprocess", "Data", "(", "int", "Ġid", ",", "Ġfloat", "Ġenergy", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġstring", "Ġprocess", "Data", "(", "int", "Ġcreation", "_", "process", ");", "Ċ", "ĠĠĊ", "Ġ", "Ġprivate", ":", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::71", "code": "\n#include \"db/db.h\"\n\nDatabase::Database() { this->records_tree_ = nullptr; }\n\nvoid Database::Read(DatabaseReader &reader) {\n  this->records_tree_ = reader.ReadIndex();\n}\n\nRecord *Database::GetRecordsTree() const { return this->records_tree_; }\n\nvoid Database::SetRecordsTree(Record *records_tree) {\n  this->records_tree_ = records_tree;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "db", "/", "db", ".", "h", "\"", "Ċ", "Ċ", "Database", "::", "Database", "()", "Ġ{", "Ġthis", "->", "records", "_", "tree", "_", "Ġ=", "Ġnullptr", ";", "Ġ}", "Ċ", "Ċ", "void", "ĠDatabase", "::", "Read", "(", "Database", "Reader", "Ġ&", "reader", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "records", "_", "tree", "_", "Ġ=", "Ġreader", ".", "Read", "Index", "();", "Ċ", "}", "Ċ", "Ċ", "Record", "Ġ*", "Database", "::", "Get", "Records", "Tree", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġthis", "->", "records", "_", "tree", "_;", "Ġ}", "Ċ", "Ċ", "void", "ĠDatabase", "::", "Set", "Records", "Tree", "(", "Record", "Ġ*", "records", "_", "tree", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "records", "_", "tree", "_", "Ġ=", "Ġrecords", "_", "tree", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::72", "code": "\n#include \"logging.hpp\"\n#include <fstream>\n#include <boost/log/sinks/text_file_backend.hpp>\n#include <boost/log/utility/setup/file.hpp>\n#include <boost/log/utility/setup/common_attributes.hpp>\n#include <boost/log/sinks.hpp>\n\nnamespace p2l { namespace common {\n\n    //=====================================================================\n\n    void _init_logging()\n    {\n      boost::log::add_common_attributes();\n      boost::log::core::get()->set_filter\n\t(\n\t boost::log::trivial::severity >= boost::log::trivial::trace\n\t );\n   \n      typedef boost::log::sinks::synchronous_sink< boost::log::sinks::text_ostream_backend > text_sink;\n\n      // the file sink for hte default logger\n      boost::shared_ptr< text_sink > default_sink = boost::make_shared< text_sink >();\n      default_sink->locked_backend()->add_stream\n\t( boost::make_shared< std::ofstream >( \"default_log.log\" ) );\n      boost::log::core::get()->add_sink( default_sink );\n\n      // the file sink for hte stat logger\n      boost::shared_ptr< text_sink > stat_sink = boost::make_shared< text_sink >();\n      stat_sink->locked_backend()->add_stream\n\t( boost::make_shared< std::ofstream >( \"stat_log.log\" ) );\n      boost::log::core::get()->add_sink( stat_sink );\n    }\n\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    //=====================================================================\n    \n\n  }\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "logging", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "log", "/", "sink", "s", "/", "text", "_", "file", "_", "backend", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "log", "/", "utility", "/", "setup", "/", "file", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "log", "/", "utility", "/", "setup", "/", "common", "_", "attributes", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "log", "/", "sink", "s", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġp", "2", "l", "Ġ{", "Ġnamespace", "Ġcommon", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġ_", "init", "_", "logging", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġboost", "::", "log", "::", "add", "_", "common", "_", "attributes", "();", "Ċ", "ĠĠĠĠĠ", "Ġboost", "::", "log", "::", "core", "::", "get", "()->", "set", "_", "filter", "Ċ", "ĉ", "(", "Ċ", "ĉ", "Ġboost", "::", "log", "::", "trivial", "::", "severity", "Ġ>=", "Ġboost", "::", "log", "::", "trivial", "::", "trace", "Ċ", "ĉ", "Ġ);", "Ċ", "ĠĠĠĊ", "ĠĠĠĠĠ", "Ġtypedef", "Ġboost", "::", "log", "::", "sink", "s", "::", "s", "ynchronous", "_", "sink", "<", "Ġboost", "::", "log", "::", "sink", "s", "::", "text", "_", "ostream", "_", "backend", "Ġ>", "Ġtext", "_", "sink", ";", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġ//", "Ġthe", "Ġfile", "Ġsink", "Ġfor", "Ġh", "te", "Ġdefault", "Ġlogger", "Ċ", "ĠĠĠĠĠ", "Ġboost", "::", "shared", "_", "ptr", "<", "Ġtext", "_", "sink", "Ġ>", "Ġdefault", "_", "sink", "Ġ=", "Ġboost", "::", "make", "_", "shared", "<", "Ġtext", "_", "sink", "Ġ>();", "Ċ", "ĠĠĠĠĠ", "Ġdefault", "_", "sink", "->", "locked", "_", "backend", "()->", "add", "_", "stream", "Ċ", "ĉ", "(", "Ġboost", "::", "make", "_", "shared", "<", "Ġstd", "::", "ofstream", "Ġ>(", "Ġ\"", "default", "_", "log", ".", "log", "\"", "Ġ)", "Ġ);", "Ċ", "ĠĠĠĠĠ", "Ġboost", "::", "log", "::", "core", "::", "get", "()->", "add", "_", "sink", "(", "Ġdefault", "_", "sink", "Ġ);", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġ//", "Ġthe", "Ġfile", "Ġsink", "Ġfor", "Ġh", "te", "Ġstat", "Ġlogger", "Ċ", "ĠĠĠĠĠ", "Ġboost", "::", "shared", "_", "ptr", "<", "Ġtext", "_", "sink", "Ġ>", "Ġstat", "_", "sink", "Ġ=", "Ġboost", "::", "make", "_", "shared", "<", "Ġtext", "_", "sink", "Ġ>();", "Ċ", "ĠĠĠĠĠ", "Ġstat", "_", "sink", "->", "locked", "_", "backend", "()->", "add", "_", "stream", "Ċ", "ĉ", "(", "Ġboost", "::", "make", "_", "shared", "<", "Ġstd", "::", "ofstream", "Ġ>(", "Ġ\"", "stat", "_", "log", ".", "log", "\"", "Ġ)", "Ġ);", "Ċ", "ĠĠĠĠĠ", "Ġboost", "::", "log", "::", "core", "::", "get", "()->", "add", "_", "sink", "(", "Ġstat", "_", "sink", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠ", "Ġ//", "================================================================", "=====", "Ċ", "ĠĠĠĠĊ", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::73", "code": "#include \"shader.h\"\n\n#include <iostream>\n\nShader::Shader(GLuint shader_id)\n    : shader_id(shader_id) {}\n\nvoid Shader::use()\n{\n    glUseProgram(shader_id);\n}\n\nvoid Shader::send_cam_pos(glm::vec3 cam_pos)\n{\n\tthis->cam_pos = cam_pos;\n}\n\nvoid Shader::set_VP(glm::mat4 V, glm::mat4 P)\n{\n    this->V = V;\n    this->P = P;\n}\n\nvoid Shader::send_mesh_model(glm::mat4 mesh_model)\n{\n\tthis->mesh_model = mesh_model;\n}\n\nvoid Shader::set_material(Material m) {}\n\nvoid Shader::draw(Geometry *g, glm::mat4 to_world) {}", "code_tokens": ["Ġ#", "include", "Ġ\"", "shader", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "Shader", "::", "Shader", "(", "GLuint", "Ġshader", "_", "id", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġshader", "_", "id", "(", "shader", "_", "id", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠShader", "::", "use", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġgl", "Use", "Program", "(", "shader", "_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠShader", "::", "send", "_", "cam", "_", "pos", "(", "glm", "::", "vec", "3", "Ġcam", "_", "pos", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "cam", "_", "pos", "Ġ=", "Ġcam", "_", "pos", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠShader", "::", "set", "_", "VP", "(", "glm", "::", "mat", "4", "ĠV", ",", "Ġglm", "::", "mat", "4", "ĠP", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġthis", "->", "V", "Ġ=", "ĠV", ";", "Ċ", "ĠĠĠ", "Ġthis", "->", "P", "Ġ=", "ĠP", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠShader", "::", "send", "_", "mesh", "_", "model", "(", "glm", "::", "mat", "4", "Ġmesh", "_", "model", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "mesh", "_", "model", "Ġ=", "Ġmesh", "_", "model", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠShader", "::", "set", "_", "material", "(", "Material", "Ġm", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠShader", "::", "draw", "(", "Geometry", "Ġ*", "g", ",", "Ġglm", "::", "mat", "4", "Ġto", "_", "world", ")", "Ġ{}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::74", "code": "/** File errors.cc author Vladislav Tcendrovskii\n *  Copyright (c) 2013\n *  This source subjected to the Gnu General Public License v3 or later (see LICENSE)\n *  All other rights reserved\n *  THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY \n *  OF ANY  KIND, EITHER EXPRESSED OR IMPLIED, \n *  INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES \n *  OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n * */\n\n\n\n#include \"errors.h\"\n\nstd::string error_str(int errnum)\n{\n  std::string ans;\n  switch(errnum)\n  {\n    case ENO:\n      ans = \"No error\";\n      break;\n    case EZERO:\n      ans = \"Division by zero\";\n      break;\n    case EDIM:\n      ans = \"Dimension mismatch\";\n      break;\n    case EMEM:\n      ans = \"Memory allocation fail\";\n      break;\n    case ETYPE:\n      ans = \"Wrong object type/form\";\n      break;\n    case EIND:\n      ans = \"Index out of range\";\n      break;\n    default:\n      ans = \"Error number \" + errnum;\n      break;\n  }\n  \n  return ans;\n}", "code_tokens": ["Ġ/**", "ĠFile", "Ġerrors", ".", "cc", "Ġauthor", "ĠV", "l", "adis", "la", "v", "ĠT", "cend", "ro", "v", "sk", "ii", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2013", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġsource", "Ġsubject", "ed", "Ġto", "Ġthe", "ĠG", "nu", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġv", "3", "Ġor", "Ġlater", "Ġ(", "see", "ĠLICENSE", ")", "Ċ", "Ġ*", "Ġ", "ĠAll", "Ġother", "Ġrights", "Ġreserved", "Ċ", "Ġ*", "Ġ", "ĠTHIS", "ĠCODE", "ĠAND", "ĠIN", "FORMATION", "ĠA", "RE", "ĠPRO", "VID", "ED", "Ġ\"", "AS", "ĠIS", "\"", "ĠWITHOUT", "ĠWARR", "AN", "TY", "ĠĊ", "Ġ*", "Ġ", "ĠOF", "ĠANY", "Ġ", "ĠK", "IND", ",", "ĠE", "IT", "HER", "ĠEX", "PRE", "SSED", "ĠOR", "ĠIMP", "LIED", ",", "ĠĊ", "Ġ*", "Ġ", "ĠIN", "CL", "UDING", "ĠBUT", "ĠNOT", "ĠLIMIT", "ED", "ĠTO", "ĠTHE", "ĠIMP", "LIED", "ĠWARRANTIES", "ĠĊ", "Ġ*", "Ġ", "ĠOF", "ĠMER", "CHAN", "TAB", "ILITY", "ĠAND", "/", "OR", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ċ", "Ġ*", "Ġ*/", "Ċ", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "errors", ".", "h", "\"", "Ċ", "Ċ", "std", "::", "string", "Ġerror", "_", "str", "(", "int", "Ġerr", "num", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġans", ";", "Ċ", "Ġ", "Ġswitch", "(", "err", "num", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġcase", "ĠENO", ":", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ=", "Ġ\"", "No", "Ġerror", "\";", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠE", "ZERO", ":", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ=", "Ġ\"", "Division", "Ġby", "Ġzero", "\";", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠE", "DIM", ":", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ=", "Ġ\"", "Dimension", "Ġmismatch", "\";", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠE", "MEM", ":", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ=", "Ġ\"", "Memory", "Ġallocation", "Ġfail", "\";", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠE", "TYPE", ":", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ=", "Ġ\"", "Wrong", "Ġobject", "Ġtype", "/", "form", "\";", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠE", "IND", ":", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ=", "Ġ\"", "Index", "Ġout", "Ġof", "Ġrange", "\";", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġdefault", ":", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ=", "Ġ\"", "Error", "Ġnumber", "Ġ\"", "Ġ+", "Ġerr", "num", ";", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "ĠĠĊ", "Ġ", "Ġreturn", "Ġans", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::75", "code": "/**\n * dfs 找 LCA. 只有一次查询，所以不需要 tarjan 或者 rmq\n * 个人感觉 rmq 好理解一些，dfs标号一下然后转化成区间最小值。( u v 之间最短路径上深度最小的节点)\n */\n\n\nusing namespace std;\n\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n\n    TreeNode *dfs(TreeNode *root, TreeNode* p, TreeNode *q) {\n        if(!root)\n            return NULL;\n        if(root == p)\n            return root;\n        if(root == q)\n            return root;\n        TreeNode *u = dfs(root->left, p, q);\n        TreeNode *v = dfs(root->right, p, q);\n        if(u == NULL) {\n            u = v; v = NULL;\n        }\n        if(v)\n            return root;\n        return u;\n    }\n\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        return dfs(root, p, q);\n    }\n};\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġdfs", "Ġ", "æī¾", "ĠL", "CA", ".", "Ġ", "åıª", "æľī", "ä¸Ģ", "æ¬¡", "æŁ¥è¯¢", "ï¼Į", "æīĢ", "ä»¥", "ä¸į", "éľĢè¦ģ", "Ġtar", "jan", "Ġ", "æĪĸèĢħ", "Ġr", "mq", "Ċ", "Ġ*", "Ġ", "ä¸ª", "äºº", "æĦ", "Ł", "è§", "ī", "Ġr", "mq", "Ġ", "å¥½", "çĲĨ", "è§£", "ä¸Ģ", "äº", "Ľ", "ï¼Į", "dfs", "æłĩ", "åı·", "ä¸Ģ", "ä¸ĭ", "çĦ¶", "åĲİ", "è½¬", "åĮĸ", "æĪĲ", "åĮº", "éĹ´", "æľĢ", "å°ı", "åĢ¼", "ãĢĤ", "(", "Ġu", "Ġv", "Ġ", "ä¹ĭ", "éĹ´", "æľĢ", "çŁ", "Ń", "è·¯å¾Ħ", "ä¸Ĭ", "æ·", "±", "åº¦", "æľĢ", "å°ı", "çļĦ", "èĬĤçĤ¹", ")", "Ċ", "Ġ*/", "Ċ", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠDefinition", "Ġfor", "Ġa", "Ġbinary", "Ġtree", "Ġnode", ".", "Ċ", "Ġ*", "Ġstruct", "ĠTreeNode", "Ġ{", "Ċ", "Ġ*", "ĠĠĠĠ", "Ġint", "Ġval", ";", "Ċ", "Ġ*", "ĠĠĠĠ", "ĠTreeNode", "Ġ*", "left", ";", "Ċ", "Ġ*", "ĠĠĠĠ", "ĠTreeNode", "Ġ*", "right", ";", "Ċ", "Ġ*", "ĠĠĠĠ", "ĠTreeNode", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġleft", "(", "NULL", "),", "Ġright", "(", "NULL", ")", "Ġ{}", "Ċ", "Ġ*", "Ġ};", "Ċ", "Ġ*/", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ċ", "ĠĠĠ", "ĠTreeNode", "Ġ*", "dfs", "(", "TreeNode", "Ġ*", "root", ",", "ĠTreeNode", "*", "Ġp", ",", "ĠTreeNode", "Ġ*", "q", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(!", "root", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "ĠNULL", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "root", "Ġ==", "Ġp", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġroot", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "root", "Ġ==", "Ġq", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġroot", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠTreeNode", "Ġ*", "u", "Ġ=", "Ġdfs", "(", "root", "->", "left", ",", "Ġp", ",", "Ġq", ");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠTreeNode", "Ġ*", "v", "Ġ=", "Ġdfs", "(", "root", "->", "right", ",", "Ġp", ",", "Ġq", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "u", "Ġ==", "ĠNULL", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġu", "Ġ=", "Ġv", ";", "Ġv", "Ġ=", "ĠNULL", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "v", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġroot", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġu", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠTreeNode", "*", "Ġlowest", "Common", "Ancestor", "(", "TreeNode", "*", "Ġroot", ",", "ĠTreeNode", "*", "Ġp", ",", "ĠTreeNode", "*", "Ġq", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġdfs", "(", "root", ",", "Ġp", ",", "Ġq", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::76", "code": "#include \"disablenonworkingunits.h\"\n#include \"wololo/datPatch.h\"\n\nnamespace wololo {\n\nvoid disableNonWorkingUnitsPatch(genie::DatFile *aocDat, std::map<int, std::string> *langReplacement) {\n\t/*\n\t * Disabling units that are not supposed to show in the scenario editor\n\t */\n\n\tfor (size_t civIndex = 0; civIndex < aocDat->Civs.size(); civIndex++) {\n\t\taocDat->Civs[civIndex].Units[1119].HideInEditor = 1;\n\t\taocDat->Civs[civIndex].Units[1145].HideInEditor = 1;\n\t\taocDat->Civs[civIndex].Units[1147].HideInEditor = 1;\n\t\taocDat->Civs[civIndex].Units[1221].HideInEditor = 1;\t\t\n\t\taocDat->Civs[civIndex].Units[1401].HideInEditor = 1;\n\t\tfor (size_t unitIndex = 1224; unitIndex <= 1390; unitIndex++) {\n\t\t\taocDat->Civs[civIndex].Units[unitIndex].HideInEditor = 1;\n\t\t}\n\t}\n\n}\n\nDatPatch disableNonWorkingUnits = {\n\t&disableNonWorkingUnitsPatch,\n\t\"Hide units in the scenario editor\"\n};\n\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "dis", "ab", "len", "on", "working", "units", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "wo", "lo", "lo", "/", "dat", "Patch", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġwo", "lo", "lo", "Ġ{", "Ċ", "Ċ", "void", "Ġdisable", "Non", "Working", "Units", "Patch", "(", "gen", "ie", "::", "Dat", "File", "Ġ*", "a", "oc", "Dat", ",", "Ġstd", "::", "map", "<", "int", ",", "Ġstd", "::", "string", ">", "Ġ*", "lang", "Replacement", ")", "Ġ{", "Ċ", "ĉ", "/*", "Ċ", "ĉ", "Ġ*", "ĠDis", "abling", "Ġunits", "Ġthat", "Ġare", "Ġnot", "Ġsupposed", "Ġto", "Ġshow", "Ġin", "Ġthe", "Ġscenario", "Ġeditor", "Ċ", "ĉ", "Ġ*/", "Ċ", "Ċ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġc", "iv", "Index", "Ġ=", "Ġ0", ";", "Ġc", "iv", "Index", "Ġ<", "Ġa", "oc", "Dat", "->", "C", "iv", "s", ".", "size", "();", "Ġc", "iv", "Index", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Units", "[", "11", "19", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Units", "[", "11", "45", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Units", "[", "11", "47", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Units", "[", "12", "21", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "ĉĉĊ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Units", "[", "14", "01", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġunit", "Index", "Ġ=", "Ġ12", "24", ";", "Ġunit", "Index", "Ġ<=", "Ġ1", "390", ";", "Ġunit", "Index", "++)", "Ġ{", "Ċ", "ĉĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Units", "[", "unit", "Index", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Dat", "Patch", "Ġdisable", "Non", "Working", "Units", "Ġ=", "Ġ{", "Ċ", "ĉ", "&", "disable", "Non", "Working", "Units", "Patch", ",", "Ċ", "ĉ", "\"", "Hide", "Ġunits", "Ġin", "Ġthe", "Ġscenario", "Ġeditor", "\"", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::77", "code": "/*\n This file is part of SpatGRIS.\n\n Developers: Samuel Béland, Olivier Bélanger, Nicolas Masson\n\n SpatGRIS is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n SpatGRIS is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with SpatGRIS.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include \"sg_AbstractSliceComponent.hpp\"\n\n//==============================================================================\nAbstractSliceComponent::AbstractSliceComponent(GrisLookAndFeel & lookAndFeel, SmallGrisLookAndFeel & smallLookAndFeel)\n    : mLayout(LayoutComponent::Orientation::vertical, false, false, lookAndFeel)\n    , mVuMeter(smallLookAndFeel)\n    , mMuteSoloComponent(*this, lookAndFeel, smallLookAndFeel)\n{\n    JUCE_ASSERT_MESSAGE_THREAD;\n\n    addAndMakeVisible(mLayout);\n}\n\n//==============================================================================\nvoid AbstractSliceComponent::setState(PortState const state, bool const soloMode)\n{\n    JUCE_ASSERT_MESSAGE_THREAD;\n\n    mMuteSoloComponent.setPortState(state);\n    mVuMeter.setMuted(soloMode ? state != PortState::solo : state == PortState::muted);\n\n    repaint();\n}", "code_tokens": ["Ġ/*", "Ċ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠSp", "at", "GR", "IS", ".", "Ċ", "Ċ", "ĠDe", "velopers", ":", "ĠSam", "uel", "ĠB", "Ã©", "land", ",", "ĠO", "li", "vier", "ĠB", "Ã©", "lang", "er", ",", "ĠN", "icol", "as", "ĠM", "ass", "on", "Ċ", "Ċ", "ĠSp", "at", "GR", "IS", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠSp", "at", "GR", "IS", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġalong", "Ġwith", "ĠSp", "at", "GR", "IS", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "sg", "_", "Abstract", "Slice", "Component", ".", "hpp", "\"", "Ċ", "Ċ", "//==============================================================================", "Ċ", "Abstract", "Slice", "Component", "::", "Abstract", "Slice", "Component", "(", "Gr", "is", "LookAndFeel", "Ġ&", "Ġlook", "AndFeel", ",", "ĠSmall", "Gr", "is", "LookAndFeel", "Ġ&", "Ġsmall", "LookAndFeel", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġm", "Layout", "(", "Layout", "Component", "::", "Orientation", "::", "vertical", ",", "Ġfalse", ",", "Ġfalse", ",", "Ġlook", "AndFeel", ")", "Ċ", "ĠĠĠ", "Ġ,", "Ġm", "Vu", "Meter", "(", "small", "LookAndFeel", ")", "Ċ", "ĠĠĠ", "Ġ,", "Ġm", "Mute", "So", "lo", "Component", "(*", "this", ",", "Ġlook", "AndFeel", ",", "Ġsmall", "LookAndFeel", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠJUCE", "_", "ASSERT", "_", "MESSAGE", "_", "THREAD", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġadd", "And", "Make", "Visible", "(", "m", "Layout", ");", "Ċ", "}", "Ċ", "Ċ", "//==============================================================================", "Ċ", "void", "ĠAbstract", "Slice", "Component", "::", "setState", "(", "Port", "State", "Ġconst", "Ġstate", ",", "Ġbool", "Ġconst", "Ġsolo", "Mode", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠJUCE", "_", "ASSERT", "_", "MESSAGE", "_", "THREAD", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġm", "Mute", "So", "lo", "Component", ".", "set", "Port", "State", "(", "state", ");", "Ċ", "ĠĠĠ", "Ġm", "Vu", "Meter", ".", "set", "M", "uted", "(", "solo", "Mode", "Ġ?", "Ġstate", "Ġ!=", "ĠPort", "State", "::", "solo", "Ġ:", "Ġstate", "Ġ==", "ĠPort", "State", "::", "muted", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġrepaint", "();", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::78", "code": "#include \"inventorypage.h\"\n#include \"ui_inventorypage.h\"\n#include \"fak.h\"\n#include \"inventorypage.h\"\n#include <QtDebug>\n#include \"QtDebug\"\n#include <QSqlQuery>\n#include <QSqlError>\n#include <QSqlRecord>\n\nstatic const QString path = \"C:/Sr.GUI/FAKKIT/db/fakdb4.db\";\n\nInventoryPage::InventoryPage(QWidget *parent) :\n    QDialog(parent),\n    ui(new Ui::InventoryPage)\n{\n    ui->setupUi(this);\n    this->setStyleSheet(\"background-color:#626065;\");\n\n    DbManager db(path);\n    qDebug() << \"Stuff in db:\";\n    QSqlQuery query;\n    query.exec(\"SELECT * FROM codes\");\n    int idName = query.record().indexOf(\"name\");\n    while (query.next())\n        {\n            QString name = query.value(idName).toString();\n            qDebug() << \"===\" << name;\n            //ui->dbOutput->setPlainText(name);\n            ui->dbOutput->append(name);\n        }\n}\n\nDbManager::DbManager(const QString &path)\n{\n   m_db = QSqlDatabase::addDatabase(\"QSQLITE\");\n   m_db.setDatabaseName(path);\n\n   if (!m_db.open())\n   {\n      qDebug() << \"Error: connection with database fail\";\n   }\n   else\n   {\n      qDebug() << \"Database: connection ok\";\n   }\n}\n\nInventoryPage::~InventoryPage()\n{\n    delete ui;\n}\n\nvoid InventoryPage::on_HomeButton_clicked()\n{\n\n}\n\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "inventory", "page", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "inventory", "page", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "fa", "k", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "inventory", "page", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Qt", "Debug", ">", "Ċ", "#", "include", "Ġ\"", "Qt", "Debug", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Sql", "Query", ">", "Ċ", "#", "include", "Ġ<", "Q", "Sql", "Error", ">", "Ċ", "#", "include", "Ġ<", "Q", "Sql", "Record", ">", "Ċ", "Ċ", "static", "Ġconst", "ĠQString", "Ġpath", "Ġ=", "Ġ\"", "C", ":/", "Sr", ".", "GUI", "/", "FA", "KK", "IT", "/", "db", "/", "fa", "kdb", "4", ".", "db", "\";", "Ċ", "Ċ", "Inventory", "Page", "::", "Inventory", "Page", "(", "QWidget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠQDialog", "(", "parent", "),", "Ċ", "ĠĠĠ", "Ġui", "(", "new", "ĠUi", "::", "Inventory", "Page", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "setup", "Ui", "(", "this", ");", "Ċ", "ĠĠĠ", "Ġthis", "->", "setStyle", "Sheet", "(\"", "background", "-", "color", ":#", "626", "065", ";\");", "Ċ", "Ċ", "ĠĠĠ", "ĠDb", "Manager", "Ġdb", "(", "path", ");", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "Stuff", "Ġin", "Ġdb", ":\";", "Ċ", "ĠĠĠ", "ĠQSql", "Query", "Ġquery", ";", "Ċ", "ĠĠĠ", "Ġquery", ".", "exec", "(\"", "SELECT", "Ġ*", "ĠFROM", "Ġcodes", "\");", "Ċ", "ĠĠĠ", "Ġint", "Ġid", "Name", "Ġ=", "Ġquery", ".", "record", "().", "indexOf", "(\"", "name", "\");", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "query", ".", "next", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠQString", "Ġname", "Ġ=", "Ġquery", ".", "value", "(", "id", "Name", ").", "toString", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "===\"", "Ġ<<", "Ġname", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ui", "->", "db", "Output", "->", "set", "PlainText", "(", "name", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġui", "->", "db", "Output", "->", "append", "(", "name", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Db", "Manager", "::", "Db", "Manager", "(", "const", "ĠQString", "Ġ&", "path", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġm", "_", "db", "Ġ=", "ĠQSql", "Database", "::", "add", "Database", "(\"", "Q", "SQLITE", "\");", "Ċ", "ĠĠ", "Ġm", "_", "db", ".", "set", "Database", "Name", "(", "path", ");", "Ċ", "Ċ", "ĠĠ", "Ġif", "Ġ(!", "m", "_", "db", ".", "open", "())", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "Error", ":", "Ġconnection", "Ġwith", "Ġdatabase", "Ġfail", "\";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġelse", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "Database", ":", "Ġconnection", "Ġok", "\";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Inventory", "Page", "::~", "Inventory", "Page", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġui", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠInventory", "Page", "::", "on", "_", "Home", "Button", "_", "clicked", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::79", "code": "#include \"relativelayout.h\"\n#include <QDebug>\n\nRelativeLayout::RelativeLayout(View *parent) :\n    View(parent)\n{\n    // By default, QQuickItem does not draw anything. If you subclass\n    // QQuickItem to create a visual item, you will need to uncomment the\n    // following line and re-implement updatePaintNode()\n\n    // setFlag(ItemHasContents, true);\n}\n\nRelativeLayout::~RelativeLayout()\n{\n}\n\nvoid RelativeLayout::inflate()\n{\n    View::inflate();\n    qDebug() << \"Start rellayout inflate\";\n    if (m_context != NULL && m_context->isValid()) {\n        m_object = new QAndroidJniObject(\"android/widget/RelativeLayout\", \"(Landroid/content/Context;)V\", m_context->object());\n        qDebug() << m_object->isValid();\n        qDebug() << m_object->toString();\n        foreach (QObject *child, m_children) {\n            qDebug() << \"add children to layout\";\n            if (child != NULL) {\n                qDebug() << child->metaObject()->className();\n                child->dumpObjectInfo();\n                if (child->inherits(\"View\"))\n                    m_object->callMethod<void>(\"addView\", \"(Landroid/view/View;)V\", qobject_cast<View*>(child)->object()->object());\n            }\n        }\n    } else\n        qDebug() << \"No context, cannot inflate!\";\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "relat", "iv", "el", "ay", "out", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "Ċ", "Relative", "Layout", "::", "Relative", "Layout", "(", "View", "Ġ*", "parent", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠView", "(", "parent", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠBy", "Ġdefault", ",", "ĠQQuick", "Item", "Ġdoes", "Ġnot", "Ġdraw", "Ġanything", ".", "ĠIf", "Ġyou", "Ġsubclass", "Ċ", "ĠĠĠ", "Ġ//", "ĠQQuick", "Item", "Ġto", "Ġcreate", "Ġa", "Ġvisual", "Ġitem", ",", "Ġyou", "Ġwill", "Ġneed", "Ġto", "Ġun", "comment", "Ġthe", "Ċ", "ĠĠĠ", "Ġ//", "Ġfollowing", "Ġline", "Ġand", "Ġre", "-", "implement", "Ġupdate", "Paint", "Node", "()", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Flag", "(", "Item", "Has", "Contents", ",", "Ġtrue", ");", "Ċ", "}", "Ċ", "Ċ", "Relative", "Layout", "::~", "Relative", "Layout", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRelative", "Layout", "::", "inflate", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠView", "::", "inflate", "();", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "Start", "Ġrel", "layout", "Ġinflate", "\";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "_", "context", "Ġ!=", "ĠNULL", "Ġ&&", "Ġm", "_", "context", "->", "isValid", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "_", "object", "Ġ=", "Ġnew", "ĠQ", "Android", "Jni", "Object", "(\"", "android", "/", "widget", "/", "Relative", "Layout", "\",", "Ġ\"(", "L", "android", "/", "content", "/", "Context", ";)", "V", "\",", "Ġm", "_", "context", "->", "object", "());", "Ċ", "ĠĠĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġm", "_", "object", "->", "isValid", "();", "Ċ", "ĠĠĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġm", "_", "object", "->", "toString", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġforeach", "Ġ(", "QObject", "Ġ*", "child", ",", "Ġm", "_", "children", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "add", "Ġchildren", "Ġto", "Ġlayout", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "child", "Ġ!=", "ĠNULL", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġchild", "->", "meta", "Object", "()->", "className", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġchild", "->", "dump", "Object", "Info", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "child", "->", "inherits", "(\"", "View", "\"))", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "_", "object", "->", "call", "Method", "<", "void", ">(\"", "addView", "\",", "Ġ\"(", "L", "android", "/", "view", "/", "View", ";)", "V", "\",", "Ġqobject", "_", "cast", "<", "View", "*>(", "child", ")->", "object", "()->", "object", "());", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "No", "Ġcontext", ",", "Ġcannot", "Ġinflate", "!\";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::80", "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nLL n,m,A,B,C;\n\nLL solve1(LL x,LL y){\n\tLL ans=0;\n\tans+=y*max(max(A,B),C);\n\tif(x%2==1){\n\t\tans+=max((x-1)*(A+C)/2,(x-1)*B);\n\t}else{\n\t\tans+=max((x-2)*(A+C)/2,(x-2)*B);\n\t\tans+=max(B,min(A,C));\n\t}\n\treturn ans;\n}\nLL solve2(LL x,LL y){\n\tLL ans=0;\n\tans+=x*min(min(A,B),C);\n\tif(y%2==1){\n\t\tans+=min((y-1)*(A+C)/2,(y-1)*B);\n\t}else{\n\t\tans+=min((y-2)*(A+C)/2,(y-2)*B);\n\t\tans+=min(B,max(A,C));\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint T;cin>>T;\n\tfor(int t=1;t<=T;t++){\n\t\tcin>>n>>m;\n\t\tcin>>A>>B>>C;\n\t\tprintf(\"Case #%d: %lld %lld\\n\",t,solve1(m+1,n-m-1),solve2(m-1,n-m+1));\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "typedef", "Ġlong", "Ġlong", "ĠLL", ";", "Ċ", "LL", "Ġn", ",", "m", ",", "A", ",", "B", ",", "C", ";", "Ċ", "Ċ", "LL", "Ġsolve", "1", "(", "LL", "Ġx", ",", "LL", "Ġy", "){", "Ċ", "ĉ", "LL", "Ġans", "=", "0", ";", "Ċ", "ĉ", "ans", "+=", "y", "*", "max", "(", "max", "(", "A", ",", "B", "),", "C", ");", "Ċ", "ĉ", "if", "(", "x", "%", "2", "==", "1", "){", "Ċ", "ĉ", "ĉ", "ans", "+=", "max", "((", "x", "-", "1", ")*(", "A", "+", "C", ")/", "2", ",(", "x", "-", "1", ")*", "B", ");", "Ċ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "ans", "+=", "max", "((", "x", "-", "2", ")*(", "A", "+", "C", ")/", "2", ",(", "x", "-", "2", ")*", "B", ");", "Ċ", "ĉ", "ĉ", "ans", "+=", "max", "(", "B", ",", "min", "(", "A", ",", "C", "));", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġans", ";", "Ċ", "}", "Ċ", "LL", "Ġsolve", "2", "(", "LL", "Ġx", ",", "LL", "Ġy", "){", "Ċ", "ĉ", "LL", "Ġans", "=", "0", ";", "Ċ", "ĉ", "ans", "+=", "x", "*", "min", "(", "min", "(", "A", ",", "B", "),", "C", ");", "Ċ", "ĉ", "if", "(", "y", "%", "2", "==", "1", "){", "Ċ", "ĉ", "ĉ", "ans", "+=", "min", "((", "y", "-", "1", ")*(", "A", "+", "C", ")/", "2", ",(", "y", "-", "1", ")*", "B", ");", "Ċ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "ans", "+=", "min", "((", "y", "-", "2", ")*(", "A", "+", "C", ")/", "2", ",(", "y", "-", "2", ")*", "B", ");", "Ċ", "ĉ", "ĉ", "ans", "+=", "min", "(", "B", ",", "max", "(", "A", ",", "C", "));", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġans", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "int", "ĠT", ";", "cin", ">>", "T", ";", "Ċ", "ĉ", "for", "(", "int", "Ġt", "=", "1", ";", "t", "<=", "T", ";", "t", "++){", "Ċ", "ĉ", "ĉ", "cin", ">>", "n", ">>", "m", ";", "Ċ", "ĉ", "ĉ", "cin", ">>", "A", ">>", "B", ">>", "C", ";", "Ċ", "ĉ", "ĉ", "printf", "(\"", "Case", "Ġ#%", "d", ":", "Ġ%", "lld", "Ġ%", "lld", "\\", "n", "\",", "t", ",", "solve", "1", "(", "m", "+", "1", ",", "n", "-", "m", "-", "1", "),", "solve", "2", "(", "m", "-", "1", ",", "n", "-", "m", "+", "1", "));", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::81", "code": "#ifndef SHRIMPS_EVENT_GENERATOR_BASE_H\n#define SHRIMPS_EVENT_GENERATOR_BASE_H\n#include \"SHRiMPS/Eikonals/Omega_ik.H\"\n\nnamespace SHRIMPS {\n  class Event_Generator_Base {\n  protected:\n    Omega_ik * p_eikonal;\n    double     m_smin;\n  public:\n    Event_Generator_Base(): p_eikonal(NULL),m_smin(0.) {} \n    ~Event_Generator_Base() {};\n    virtual Omega_ik * GetEikonal() const { return p_eikonal;}\n    virtual double Smin()           const { return m_smin;}\n    virtual bool IsLastRescatter()  const { return false; }\n    virtual double TMax()     const { return 0.; }\n    virtual int NLadders()    const { return 1; }\n  };\n}\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠSH", "RI", "MPS", "_", "EVENT", "_", "GEN", "ERATOR", "_", "BASE", "_", "H", "Ċ", "#", "define", "ĠSH", "RI", "MPS", "_", "EVENT", "_", "GEN", "ERATOR", "_", "BASE", "_", "H", "Ċ", "#", "include", "Ġ\"", "SH", "Ri", "MPS", "/", "E", "ik", "on", "als", "/", "Omega", "_", "ik", ".", "H", "\"", "Ċ", "Ċ", "namespace", "ĠSH", "RI", "MPS", "Ġ{", "Ċ", "Ġ", "Ġclass", "ĠEvent", "_", "Generator", "_", "Base", "Ġ{", "Ċ", "Ġ", "Ġprotected", ":", "Ċ", "ĠĠĠ", "ĠO", "mega", "_", "ik", "Ġ*", "Ġp", "_", "e", "ik", "onal", ";", "Ċ", "ĠĠĠ", "Ġdouble", "ĠĠĠĠ", "Ġm", "_", "s", "min", ";", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "ĠEvent", "_", "Generator", "_", "Base", "():", "Ġp", "_", "e", "ik", "onal", "(", "NULL", "),", "m", "_", "s", "min", "(", "0", ".)", "Ġ{}", "ĠĊ", "ĠĠĠ", "Ġ~", "Event", "_", "Generator", "_", "Base", "()", "Ġ{};", "Ċ", "ĠĠĠ", "Ġvirtual", "ĠO", "mega", "_", "ik", "Ġ*", "ĠGet", "E", "ik", "onal", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġp", "_", "e", "ik", "onal", ";}", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġdouble", "ĠS", "min", "()", "ĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġ{", "Ġreturn", "Ġm", "_", "s", "min", ";}", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "ĠIs", "Last", "Res", "cat", "ter", "()", "Ġ", "Ġconst", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġdouble", "ĠT", "Max", "()", "ĠĠĠĠ", "Ġconst", "Ġ{", "Ġreturn", "Ġ0", ".;", "Ġ}", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġint", "ĠNL", "add", "ers", "()", "ĠĠĠ", "Ġconst", "Ġ{", "Ġreturn", "Ġ1", ";", "Ġ}", "Ċ", "Ġ", "Ġ};", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::82", "code": "/*\n * Qt REST Client\n * Copyright (C) 2014 Emílio Simões\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n#include <QDebug>\n\n#include \"autotest.h\"\n\n#if 1\n// This is all you need to run all the tests\nTEST_MAIN\n#else\n// Or supply your own main function\nint main(int argc, char* argv[]) {\n    int failures = AutoTest::run(argc, argv);\n    if (failures == 0) {\n        qDebug() << \"ALL TESTS PASSED\";\n    } else {\n        qDebug() << failures << \" TESTS FAILED!\";\n    }\n    return failures;\n}\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠQt", "ĠREST", "ĠClient", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "ĠEm", "ÃŃ", "lio", "ĠSim", "Ã", "µ", "es", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "auto", "test", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "Ġ1", "Ċ", "//", "ĠThis", "Ġis", "Ġall", "Ġyou", "Ġneed", "Ġto", "Ġrun", "Ġall", "Ġthe", "Ġtests", "Ċ", "TEST", "_", "MAIN", "Ċ", "#", "else", "Ċ", "//", "ĠOr", "Ġsupply", "Ġyour", "Ġown", "Ġmain", "Ġfunction", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġfailures", "Ġ=", "ĠAuto", "Test", "::", "run", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "failures", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "ALL", "ĠTEST", "S", "ĠPAS", "SED", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġfailures", "Ġ<<", "Ġ\"", "ĠTEST", "S", "ĠFAILED", "!\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfailures", ";", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::83", "code": "/**\n *\n * This file is part of Tulip (www.tulip-software.org)\n *\n * Authors: David Auber and the Tulip development Team\n * from LaBRI, University of Bordeaux\n *\n * Tulip is free software; you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License\n * as published by the Free Software Foundation, either version 3\n * of the License, or (at your option) any later version.\n *\n * Tulip is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n */\n#include <stdio.h>\n#include <string>\n#include <iostream>\n#include <cppunit/TestCase.h>\n#include <tulip/TulipPluginHeaders.h>\n\nusing namespace std;\n\nclass Test2 : public tlp::BooleanAlgorithm {\npublic:\n  PLUGININFORMATION(\"Test2\",\"Jezequel\",\"03/11/2004\",\"0\",\"1.0\", \"\")\n  Test2(tlp::PluginContext* context) : tlp::BooleanAlgorithm(context) {}\n  ~Test2() {}\n  bool run() {\n    return true;\n  }\n};\nPLUGIN(Test2)\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠT", "ulip", "Ġ(", "www", ".", "tulip", "-", "software", ".", "org", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠAuth", "ors", ":", "ĠD", "av", "id", "ĠA", "uber", "Ġand", "Ġthe", "ĠT", "ulip", "Ġdevelopment", "ĠTeam", "Ċ", "Ġ*", "Ġfrom", "ĠLa", "B", "RI", ",", "ĠUn", "ivers", "ity", "Ġof", "ĠB", "or", "de", "aux", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠT", "ulip", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ċ", "Ġ*", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠT", "ulip", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "TestCase", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "tulip", "/", "T", "ulip", "Plugin", "Headers", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠTest", "2", "Ġ:", "Ġpublic", "Ġt", "lp", "::", "Boolean", "Algorithm", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠPLUGIN", "INFORMATION", "(\"", "Test", "2", "\",\"", "Je", "ze", "quel", "\",\"", "03", "/", "11", "/", "2004", "\",\"", "0", "\",\"", "1", ".", "0", "\",", "Ġ\"\")", "Ċ", "Ġ", "ĠTest", "2", "(", "tl", "p", "::", "Plugin", "Context", "*", "Ġcontext", ")", "Ġ:", "Ġt", "lp", "::", "Boolean", "Algorithm", "(", "context", ")", "Ġ{}", "Ċ", "Ġ", "Ġ~", "Test", "2", "()", "Ġ{}", "Ċ", "Ġ", "Ġbool", "Ġrun", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "PLUGIN", "(", "Test", "2", ")", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::84", "code": "#include <iostream>\n#include <string>\n\nclass Shape {\n\tpublic :\n\t\tvirtual void draw (void) = 0;\n\t\tstatic Shape *Create (std::string type);\n};\n\nclass circle : public Shape {\n\tpublic :\n\t\tvoid draw(void){\n\t\t\tstd::cout << \"circle\" << std::endl;\n\t\t}\n};\n\nclass square : public Shape {\n\tpublic :\n\t\tvoid draw(void){\n\t\t\tstd::cout << \"square\" << std::endl;\n\t\t}\n};\n\nShape * Shape::Create (std::string type){\n\tif(type == \"circle\"){\n\t\tstd::cout << \"creating circle\" << std::endl;\n\t\treturn new circle();\n\t}\n\n\tif(type == \"square\") {\n\t\tstd::cout << \"creating circle\" << std::endl;\n\t\treturn new square();\n\t}\n\n\treturn NULL;\n};\n\n\nint main (){\n\n\tShape *cir = Shape::Create(\"circle\");\n\tif ( cir != NULL ) cir->draw();\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "class", "ĠShape", "Ġ{", "Ċ", "ĉ", "public", "Ġ:", "Ċ", "ĉ", "ĉ", "virtual", "Ġvoid", "Ġdraw", "Ġ(", "void", ")", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "static", "ĠShape", "Ġ*", "Create", "Ġ(", "std", "::", "string", "Ġtype", ");", "Ċ", "};", "Ċ", "Ċ", "class", "Ġcircle", "Ġ:", "Ġpublic", "ĠShape", "Ġ{", "Ċ", "ĉ", "public", "Ġ:", "Ċ", "ĉ", "ĉ", "void", "Ġdraw", "(", "void", "){", "Ċ", "ĉĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "circle", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "class", "Ġsquare", "Ġ:", "Ġpublic", "ĠShape", "Ġ{", "Ċ", "ĉ", "public", "Ġ:", "Ċ", "ĉ", "ĉ", "void", "Ġdraw", "(", "void", "){", "Ċ", "ĉĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "square", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "Shape", "Ġ*", "ĠShape", "::", "Create", "Ġ(", "std", "::", "string", "Ġtype", "){", "Ċ", "ĉ", "if", "(", "type", "Ġ==", "Ġ\"", "circle", "\"){", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "creating", "Ġcircle", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "Ġcircle", "();", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "if", "(", "type", "Ġ==", "Ġ\"", "square", "\")", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "creating", "Ġcircle", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "Ġsquare", "();", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "ĠNULL", ";", "Ċ", "};", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "Ġ(){", "Ċ", "Ċ", "ĉ", "Shape", "Ġ*", "c", "ir", "Ġ=", "ĠShape", "::", "Create", "(\"", "circle", "\");", "Ċ", "ĉ", "if", "Ġ(", "Ġc", "ir", "Ġ!=", "ĠNULL", "Ġ)", "Ġc", "ir", "->", "draw", "();", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::85", "code": "/*\n Author: Juan Rada-Vilela, Ph.D.\n Copyright (C) 2010-2014 FuzzyLite Limited\n All rights reserved\n\n This file is part of fuzzylite.\n\n fuzzylite is free software: you can redistribute it and/or modify it under\n the terms of the GNU Lesser General Public License as published by the Free\n Software Foundation, either version 3 of the License, or (at your option)\n any later version.\n\n fuzzylite is distributed in the hope that it will be useful, but WITHOUT\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with fuzzylite.  If not, see <http://www.gnu.org/licenses/>.\n\n fuzzylite™ is a trademark of FuzzyLite Limited.\n\n */\n\n#include \"../../fl/defuzzifier/IntegralDefuzzifier.h\"\n\nnamespace fl {\n\n    int IntegralDefuzzifier::_defaultResolution = 200;\n\n    void IntegralDefuzzifier::setDefaultResolution(int defaultResolution) {\n        _defaultResolution = defaultResolution;\n    }\n\n    int IntegralDefuzzifier::defaultResolution() {\n        return _defaultResolution;\n    }\n\n    IntegralDefuzzifier::IntegralDefuzzifier(int resolution)\n    : Defuzzifier(), _resolution(resolution) {\n    }\n\n    IntegralDefuzzifier::~IntegralDefuzzifier() {\n    }\n\n    void IntegralDefuzzifier::setResolution(int resolution) {\n        this->_resolution = resolution;\n    }\n\n    int IntegralDefuzzifier::getResolution() const {\n        return this->_resolution;\n    }\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĠAuthor", ":", "ĠJ", "uan", "ĠR", "ada", "-", "V", "ile", "la", ",", "ĠPh", ".", "D", ".", "Ċ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "-", "2014", "ĠFuzz", "y", "Lite", "ĠLim", "ited", "Ċ", "ĠAll", "Ġrights", "Ġreserved", "Ċ", "Ċ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġfuzzy", "lite", ".", "Ċ", "Ċ", "Ġfuzzy", "lite", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ċ", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "Ċ", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġfuzzy", "lite", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "Ċ", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "Ċ", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġalong", "Ġwith", "Ġfuzzy", "lite", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "Ġfuzzy", "lite", "â", "Ħ", "¢", "Ġis", "Ġa", "Ġtrade", "mark", "Ġof", "ĠFuzz", "y", "Lite", "ĠLim", "ited", ".", "Ċ", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "../../", "fl", "/", "def", "uzz", "ifier", "/", "Integral", "Def", "uzz", "ifier", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġfl", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġint", "ĠIntegr", "al", "Def", "uzz", "ifier", "::_", "default", "Resolution", "Ġ=", "Ġ200", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠIntegr", "al", "Def", "uzz", "ifier", "::", "setDefault", "Resolution", "(", "int", "Ġdefault", "Resolution", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "default", "Resolution", "Ġ=", "Ġdefault", "Resolution", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġint", "ĠIntegr", "al", "Def", "uzz", "ifier", "::", "default", "Resolution", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ_", "default", "Resolution", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠIntegr", "al", "Def", "uzz", "ifier", "::", "Integral", "Def", "uzz", "ifier", "(", "int", "Ġresolution", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠDef", "uzz", "ifier", "(),", "Ġ_", "resolution", "(", "resolution", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠIntegr", "al", "Def", "uzz", "ifier", "::~", "Integral", "Def", "uzz", "ifier", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠIntegr", "al", "Def", "uzz", "ifier", "::", "set", "Resolution", "(", "int", "Ġresolution", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthis", "->_", "resolution", "Ġ=", "Ġresolution", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġint", "ĠIntegr", "al", "Def", "uzz", "ifier", "::", "get", "Resolution", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġthis", "->_", "resolution", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::86", "code": "#include \"component.h\"\r\n#include \"entity.h\"\r\n\r\nnamespace entity {\r\n\r\nComponent::Component(Entity* parent) : QObject(parent) {\r\n    if (parent != NULL) {\r\n        parent->addComponent(this);\r\n    }\r\n}\r\n\r\n}\r\n\r\nuint qHash(entity::HashableComponent* key, uint seed) {\r\n    return key == 0 ? 0 : key->hash(seed);\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "component", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "entity", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "Ġentity", "Ġ{", "č", "Ċ", "č", "Ċ", "Component", "::", "Component", "(", "Entity", "*", "Ġparent", ")", "Ġ:", "ĠQObject", "(", "parent", ")", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "parent", "Ġ!=", "ĠNULL", ")", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġparent", "->", "addComponent", "(", "this", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "uint", "Ġq", "Hash", "(", "entity", "::", "Hash", "able", "Component", "*", "Ġkey", ",", "Ġuint", "Ġseed", ")", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġkey", "Ġ==", "Ġ0", "Ġ?", "Ġ0", "Ġ:", "Ġkey", "->", "hash", "(", "seed", ");", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::87", "code": "/*\n * Copyright (C) 2010-2019 The ESPResSo project\n * Copyright (C) 2002,2003,2004,2005,2006,2007,2008,2009,2010\n *   Max-Planck-Institute for Polymer Research, Theory Group\n *\n * This file is part of ESPResSo.\n *\n * ESPResSo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ESPResSo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#ifndef SCRIPT_INTERFACE_COM_FIXED_HPP\n#define SCRIPT_INTERFACE_COM_FIXED_HPP\n\n#include \"script_interface/ScriptInterface.hpp\"\n\n#include \"core/comfixed_global.hpp\"\n\nnamespace ScriptInterface {\n\nclass ComFixed : public AutoParameters<ComFixed> {\npublic:\n  ComFixed() {\n    add_parameters({{\"types\",\n                     [](Variant const &v) {\n                       comfixed.set_fixed_types(get_value<std::vector<int>>(v));\n                     },\n                     []() { return comfixed.get_fixed_types(); }}});\n  }\n};\n} // namespace ScriptInterface\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "-", "2019", "ĠThe", "ĠESP", "Res", "So", "Ġproject", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ200", "2", ",", "2003", ",", "2004", ",", "2005", ",", "2006", ",", "2007", ",", "2008", ",", "2009", ",", "2010", "Ċ", "Ġ*", "ĠĠ", "ĠMax", "-", "Plan", "ck", "-", "Inst", "it", "ute", "Ġfor", "ĠPol", "ymer", "ĠRe", "search", ",", "ĠThe", "ory", "ĠGroup", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠESP", "Res", "So", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠESP", "Res", "So", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠESP", "Res", "So", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠSCRIPT", "_", "INTERFACE", "_", "COM", "_", "FIXED", "_", "HP", "P", "Ċ", "#", "define", "ĠSCRIPT", "_", "INTERFACE", "_", "COM", "_", "FIXED", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "script", "_", "interface", "/", "Script", "Interface", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "core", "/", "com", "fixed", "_", "global", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "ĠScript", "Interface", "Ġ{", "Ċ", "Ċ", "class", "ĠCom", "Fixed", "Ġ:", "Ġpublic", "ĠAuto", "Parameters", "<", "Com", "Fixed", ">", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠCom", "Fixed", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġadd", "_", "parameters", "({", "{\"", "types", "\",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ[](", "Variant", "Ġconst", "Ġ&", "v", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcom", "fixed", ".", "set", "_", "fixed", "_", "types", "(", "get", "_", "value", "<", "std", "::", "vector", "<", "int", ">>(", "v", "));", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ[]", "()", "Ġ{", "Ġreturn", "Ġcom", "fixed", ".", "get", "_", "fixed", "_", "types", "();", "Ġ}", "}});", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠScript", "Interface", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::88", "code": "#ifndef __PLATFORM_H_\n#define __PLATFORM_H_\n\n\n#define STDOUT_IS_PS7_UART\n#define UART_DEVICE_ID 0\n\n#include \"xil_io.h\"\n#include \"xtmrctr.h\"\n#include \"assert.h\"\n/* Write to memory location or register */\n#define X_mWriteReg(BASE_ADDRESS, RegOffset, data) \\\n           *(unsigned volatile int *)(BASE_ADDRESS + RegOffset) =  ((unsigned volatile int) data);\n/* Read from memory location or register */\n#define X_mReadReg(BASE_ADDRESS, RegOffset) \\\n           *(unsigned volatile int *)(volatile)(BASE_ADDRESS + RegOffset);\n\n\n#define XUartChanged_IsTransmitFull(BaseAddress)\t\t\t \\\n\t((Xil_In32((BaseAddress) + 0x2C) & \t\\\n\t 0x10) == 0x10)\n\n\nvoid wait_ms(unsigned int time);\nvoid init_platform();\nvoid cleanup_platform();\nvoid ChangedPrint(char *ptr);\nvoid timer_init();\nvoid tic();\nvoid toc();\nu64 elapsed_time_us();\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "Ġ__", "PLATFORM", "_", "H", "_", "Ċ", "#", "define", "Ġ__", "PLATFORM", "_", "H", "_", "Ċ", "Ċ", "Ċ", "#", "define", "ĠSTDOUT", "_", "IS", "_", "PS", "7", "_", "UART", "Ċ", "#", "define", "ĠUART", "_", "DEVICE", "_", "ID", "Ġ0", "Ċ", "Ċ", "#", "include", "Ġ\"", "x", "il", "_", "io", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "x", "tmr", "ctr", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "assert", ".", "h", "\"", "Ċ", "/*", "ĠWrite", "Ġto", "Ġmemory", "Ġlocation", "Ġor", "Ġregister", "Ġ*/", "Ċ", "#", "define", "ĠX", "_", "m", "WriteReg", "(", "BASE", "_", "ADDRESS", ",", "ĠReg", "Offset", ",", "Ġdata", ")", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "Ġ*(", "unsigned", "Ġvolatile", "Ġint", "Ġ*)(", "BASE", "_", "ADDRESS", "Ġ+", "ĠReg", "Offset", ")", "Ġ=", "Ġ", "Ġ((", "unsigned", "Ġvolatile", "Ġint", ")", "Ġdata", ");", "Ċ", "/*", "ĠRead", "Ġfrom", "Ġmemory", "Ġlocation", "Ġor", "Ġregister", "Ġ*/", "Ċ", "#", "define", "ĠX", "_", "m", "Read", "Reg", "(", "BASE", "_", "ADDRESS", ",", "ĠReg", "Offset", ")", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "Ġ*(", "unsigned", "Ġvolatile", "Ġint", "Ġ*)(", "volatile", ")(", "BASE", "_", "ADDRESS", "Ġ+", "ĠReg", "Offset", ");", "Ċ", "Ċ", "Ċ", "#", "define", "ĠX", "U", "art", "Changed", "_", "Is", "Transmit", "Full", "(", "BaseAddress", ")", "ĉĉĉ", "Ġ\\", "Ċ", "ĉ", "((", "Xil", "_", "In", "32", "((", "BaseAddress", ")", "Ġ+", "Ġ0", "x", "2", "C", ")", "Ġ&", "Ġ", "ĉ", "\\", "Ċ", "ĉ", "Ġ0", "x", "10", ")", "Ġ==", "Ġ0", "x", "10", ")", "Ċ", "Ċ", "Ċ", "void", "Ġwait", "_", "ms", "(", "unsigned", "Ġint", "Ġtime", ");", "Ċ", "void", "Ġinit", "_", "platform", "();", "Ċ", "void", "Ġcleanup", "_", "platform", "();", "Ċ", "void", "ĠChanged", "Print", "(", "char", "Ġ*", "ptr", ");", "Ċ", "void", "Ġtimer", "_", "init", "();", "Ċ", "void", "Ġt", "ic", "();", "Ċ", "void", "Ġtoc", "();", "Ċ", "u", "64", "Ġelapsed", "_", "time", "_", "us", "();", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::89", "code": "#include <iostream>\nusing namespace std;\nint main() {\n  int n, x, y;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  x = a[1] - a[0];\n  y = a[2] - a[0];\n  for (int i = 2; i < n; ++i) {\n    x = max(a[i] - a[i - 1], x);\n    y = min(a[i] - a[i - 2], y);\n  }\n  cout << max(x, y);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġn", ",", "Ġx", ",", "Ġy", ";", "Ċ", "Ġ", "Ġcin", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġint", "Ġa", "[", "n", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġa", "[", "i", "];", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġx", "Ġ=", "Ġa", "[", "1", "]", "Ġ-", "Ġa", "[", "0", "];", "Ċ", "Ġ", "Ġy", "Ġ=", "Ġa", "[", "2", "]", "Ġ-", "Ġa", "[", "0", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġx", "Ġ=", "Ġmax", "(", "a", "[", "i", "]", "Ġ-", "Ġa", "[", "i", "Ġ-", "Ġ1", "],", "Ġx", ");", "Ċ", "ĠĠĠ", "Ġy", "Ġ=", "Ġmin", "(", "a", "[", "i", "]", "Ġ-", "Ġa", "[", "i", "Ġ-", "Ġ2", "],", "Ġy", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġmax", "(", "x", ",", "Ġy", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::90", "code": "#include <QtGui/QApplication>\r\n#include \"xmlparser.h\"\r\n#include \"myfiledialog.h\"\r\n#include <iostream>\r\n#include <QMessageBox>\r\nusing namespace std;\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n    QApplication a(argc, argv);/*\r\n    MainWindow w;\r\n    w.show();*/\r\n\r\n      MyFileDialog my;//Create dialog\r\n\r\n      QString name=my.openFile();//Open dialog, and chose file. We get file path and file name as result\r\n\r\n      cout<<name.toUtf8().constData()<<\"Podaci uspjeno uèitani!\";\r\n\r\n\r\n\r\n\r\n    return 0;\r\n    \r\n\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Qt", "Gui", "/", "Q", "Application", ">", "č", "Ċ", "#", "include", "Ġ\"", "xml", "parser", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "my", "file", "dialog", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "#", "include", "Ġ<", "QMessageBox", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "ĠQApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "/*", "č", "Ċ", "ĠĠĠ", "ĠMainWindow", "Ġw", ";", "č", "Ċ", "ĠĠĠ", "Ġw", ".", "show", "();", "*/", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠ", "ĠMy", "FileDialog", "Ġmy", ";//", "Create", "Ġdialog", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠ", "ĠQString", "Ġname", "=", "my", ".", "open", "File", "();//", "Open", "Ġdialog", ",", "Ġand", "Ġch", "ose", "Ġfile", ".", "ĠWe", "Ġget", "Ġfile", "Ġpath", "Ġand", "Ġfile", "Ġname", "Ġas", "Ġresult", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠ", "Ġcout", "<<", "name", ".", "toUtf", "8", "().", "constData", "()", "<<\"", "Pod", "aci", "Ġus", "p", "je", "Âļ", "no", "Ġu", "Ã¨", "it", "ani", "!\";", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "ĠĠĠĠ", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::91", "code": "// ArduinoJson - arduinojson.org\n// Copyright Benoit Blanchon 2014-2019\n// MIT License\n\n#pragma once\n\n#include \"../Array/ArrayShortcuts.hpp\"\n#include \"../Object/ObjectShortcuts.hpp\"\n\nnamespace ARDUINOJSON_NAMESPACE {\n\ntemplate <typename TVariant>\nclass VariantShortcuts : public ObjectShortcuts<TVariant>,\n                         public ArrayShortcuts<TVariant> {\n public:\n  using ArrayShortcuts<TVariant>::createNestedArray;\n  using ArrayShortcuts<TVariant>::createNestedObject;\n  using ArrayShortcuts<TVariant>::operator[];\n  using ObjectShortcuts<TVariant>::createNestedArray;\n  using ObjectShortcuts<TVariant>::createNestedObject;\n  using ObjectShortcuts<TVariant>::operator[];\n};\n}  // namespace ARDUINOJSON_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠAr", "duino", "Json", "Ġ-", "Ġar", "duino", "json", ".", "org", "Ċ", "//", "ĠCopyright", "ĠB", "eno", "it", "ĠBl", "anch", "on", "Ġ2014", "-", "2019", "Ċ", "//", "ĠMIT", "ĠLicense", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"../", "Array", "/", "Array", "Shortcuts", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "Object", "/", "Object", "Shortcuts", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "ĠAR", "DU", "INO", "JSON", "_", "NAMESPACE", "Ġ{", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", "Variant", ">", "Ċ", "class", "ĠVariant", "Shortcuts", "Ġ:", "Ġpublic", "ĠObject", "Shortcuts", "<", "T", "Variant", ">,", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġpublic", "ĠArray", "Shortcuts", "<", "T", "Variant", ">", "Ġ{", "Ċ", "Ġpublic", ":", "Ċ", "Ġ", "Ġusing", "ĠArray", "Shortcuts", "<", "T", "Variant", ">::", "create", "Nested", "Array", ";", "Ċ", "Ġ", "Ġusing", "ĠArray", "Shortcuts", "<", "T", "Variant", ">::", "create", "Nested", "Object", ";", "Ċ", "Ġ", "Ġusing", "ĠArray", "Shortcuts", "<", "T", "Variant", ">::", "operator", "[];", "Ċ", "Ġ", "Ġusing", "ĠObject", "Shortcuts", "<", "T", "Variant", ">::", "create", "Nested", "Array", ";", "Ċ", "Ġ", "Ġusing", "ĠObject", "Shortcuts", "<", "T", "Variant", ">::", "create", "Nested", "Object", ";", "Ċ", "Ġ", "Ġusing", "ĠObject", "Shortcuts", "<", "T", "Variant", ">::", "operator", "[];", "Ċ", "};", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "ĠAR", "DU", "INO", "JSON", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::92", "code": "// opening-tag.hpp\n// Started 14 Aug 2018\n#pragma once\n#include <string>\n#include <boost/spirit/include/qi.hpp>\n\nnamespace client {\n\t// namespace fusion = boost::fusion;\n\t// namespace phoenix = boost::phoenix;\n\tnamespace qi = boost::spirit::qi;\n\tnamespace ascii = boost::spirit::ascii;\n\n\ttemplate<typename Iterator>\n\tstruct opening_tag : qi::grammar<Iterator, mini_xml_tag(), ascii::space_type>\n\t{\n\t\tqi::rule<Iterator, mini_xml_tag(), ascii::space_type> start;\n\t\tqi::rule<Iterator, std::string(), ascii::space_type> head;\n\t\tqi::rule<Iterator, std::string(), ascii::space_type> tail;\n\n\t\topening_tag()\n\t\t\t: base_type{ start }\n\t\t{\n\t\t\thead %= qi::lexeme[+ascii::alnum];\n\t\t\ttail %= qi::no_skip[*(qi::char_ - '>')];\n\t\t\tstart %= qi::lit('<') >> head >> tail >> qi::lit('>');\n\t\t}\n\t};\n}\n", "code_tokens": ["Ġ//", "Ġopening", "-", "tag", ".", "hpp", "Ċ", "//", "ĠSt", "arted", "Ġ14", "ĠAug", "Ġ201", "8", "Ċ", "#", "pragma", "Ġonce", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "spir", "it", "/", "include", "/", "qi", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġclient", "Ġ{", "Ċ", "ĉ", "//", "Ġnamespace", "Ġf", "usion", "Ġ=", "Ġboost", "::", "fusion", ";", "Ċ", "ĉ", "//", "Ġnamespace", "Ġph", "o", "en", "ix", "Ġ=", "Ġboost", "::", "ph", "o", "en", "ix", ";", "Ċ", "ĉ", "namespace", "Ġq", "i", "Ġ=", "Ġboost", "::", "spir", "it", "::", "qi", ";", "Ċ", "ĉ", "namespace", "Ġascii", "Ġ=", "Ġboost", "::", "spir", "it", "::", "ascii", ";", "Ċ", "Ċ", "ĉ", "template", "<", "typename", "ĠIterator", ">", "Ċ", "ĉ", "struct", "Ġopening", "_", "tag", "Ġ:", "Ġq", "i", "::", "grammar", "<", "Iterator", ",", "Ġmini", "_", "xml", "_", "tag", "(),", "Ġascii", "::", "space", "_", "type", ">", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "qi", "::", "rule", "<", "Iterator", ",", "Ġmini", "_", "xml", "_", "tag", "(),", "Ġascii", "::", "space", "_", "type", ">", "Ġstart", ";", "Ċ", "ĉ", "ĉ", "qi", "::", "rule", "<", "Iterator", ",", "Ġstd", "::", "string", "(),", "Ġascii", "::", "space", "_", "type", ">", "Ġhead", ";", "Ċ", "ĉ", "ĉ", "qi", "::", "rule", "<", "Iterator", ",", "Ġstd", "::", "string", "(),", "Ġascii", "::", "space", "_", "type", ">", "Ġtail", ";", "Ċ", "Ċ", "ĉ", "ĉ", "opening", "_", "tag", "()", "Ċ", "ĉĉ", "ĉ", ":", "Ġbase", "_", "type", "{", "Ġstart", "Ġ}", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "head", "Ġ%=", "Ġq", "i", "::", "lex", "eme", "[", "+", "ascii", "::", "alnum", "];", "Ċ", "ĉĉ", "ĉ", "tail", "Ġ%=", "Ġq", "i", "::", "no", "_", "skip", "[", "*(", "qi", "::", "char", "_", "Ġ-", "Ġ'>')", "];", "Ċ", "ĉĉ", "ĉ", "start", "Ġ%=", "Ġq", "i", "::", "lit", "('<", "')", "Ġ>>", "Ġhead", "Ġ>>", "Ġtail", "Ġ>>", "Ġq", "i", "::", "lit", "('", ">');", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "};", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::93", "code": "#include \"RocksIndex.hh\"\n#include <stdlib.h>\n#include <iostream>\n\n\n// Get command line arguments for array size (100M) and number of trials (1M)\nvoid arrayArgs(int argc, char* argv[], objectId_t& asize, int& reps) {\n  asize = (argc>1) ? strtoull(argv[1], 0, 0) : 100000000;\n  reps  = (argc>2) ? strtol(argv[2], 0, 0)   : 1000000;\n}\n\n\n// Main program goes here\n\nint main(int argc, char* argv[]) {\n  objectId_t arraySize;\n  int queryTrials;\n  arrayArgs(argc, argv, arraySize, queryTrials);\n\n  std::cout << \"RocksDB Table \" << arraySize << \" elements, \" << queryTrials\n\t    << \" trials\" << std::endl;\n\n  RocksIndex rocks(2);\t\t// Verbosity\n  rocks.CreateTable(arraySize);\n  rocks.ExerciseTable(queryTrials);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Rock", "s", "Index", ".", "hh", "\"", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "Ċ", "//", "ĠGet", "Ġcommand", "Ġline", "Ġarguments", "Ġfor", "Ġarray", "Ġsize", "Ġ(", "100", "M", ")", "Ġand", "Ġnumber", "Ġof", "Ġtri", "als", "Ġ(", "1", "M", ")", "Ċ", "void", "Ġarray", "Args", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[],", "Ġobject", "Id", "_", "t", "&", "Ġa", "size", ",", "Ġint", "&", "Ġre", "ps", ")", "Ġ{", "Ċ", "Ġ", "Ġa", "size", "Ġ=", "Ġ(", "argc", ">", "1", ")", "Ġ?", "Ġstr", "to", "ull", "(", "argv", "[", "1", "],", "Ġ0", ",", "Ġ0", ")", "Ġ:", "Ġ1", "00000000", ";", "Ċ", "Ġ", "Ġre", "ps", "Ġ", "Ġ=", "Ġ(", "argc", ">", "2", ")", "Ġ?", "Ġstrtol", "(", "argv", "[", "2", "],", "Ġ0", ",", "Ġ0", ")", "ĠĠ", "Ġ:", "Ġ1000000", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "ĠMain", "Ġprogram", "Ġgoes", "Ġhere", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ġ{", "Ċ", "Ġ", "Ġobject", "Id", "_", "t", "Ġarray", "Size", ";", "Ċ", "Ġ", "Ġint", "Ġquery", "Tri", "als", ";", "Ċ", "Ġ", "Ġarray", "Args", "(", "argc", ",", "Ġargv", ",", "Ġarray", "Size", ",", "Ġquery", "Tri", "als", ");", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Rock", "s", "DB", "ĠTable", "Ġ\"", "Ġ<<", "Ġarray", "Size", "Ġ<<", "Ġ\"", "Ġelements", ",", "Ġ\"", "Ġ<<", "Ġquery", "Tri", "als", "Ċ", "ĉĠĠĠ", "Ġ<<", "Ġ\"", "Ġtri", "als", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "Ġ", "ĠRock", "s", "Index", "Ġrock", "s", "(", "2", ");", "ĉ", "ĉ", "//", "ĠVer", "bosity", "Ċ", "Ġ", "Ġrock", "s", ".", "CreateTable", "(", "array", "Size", ");", "Ċ", "Ġ", "Ġrock", "s", ".", "Ex", "ercise", "Table", "(", "query", "Tri", "als", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::94", "code": "/*\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\nany later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n*/\n#include \"unit_vector.h\"\n\nnamespace geometry\n{\n\ntemplate class UnitVector<double>;\n\ntemplate const UnitVector<double> operator-(const UnitVector<double> &rhs);\n\n}", "code_tokens": ["Ġ/*", "Ċ", "This", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "any", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "This", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "but", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "MER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "Ċ", "GNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "al", "ong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġhttp", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/.", "Ċ", "*/", "Ċ", "#", "include", "Ġ\"", "unit", "_", "vector", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġgeometry", "Ċ", "{", "Ċ", "Ċ", "template", "Ġclass", "ĠUnit", "Vector", "<", "double", ">;", "Ċ", "Ċ", "template", "Ġconst", "ĠUnit", "Vector", "<", "double", ">", "Ġoperator", "-(", "const", "ĠUnit", "Vector", "<", "double", ">", "Ġ&", "rhs", ");", "Ċ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::95", "code": "/*\n    _\n   /_\\  _ _ ___ ___\n  / _ \\| '_/ -_|_-<\n /_/ \\_\\_| \\___/__/\n\n*/\n#include \"Ares.h\"\n\n/*\nDescription:\nFunction that is called when the library is loaded, use this as an entry point.\n*/\nint __attribute__((constructor)) Ares() {\n\n  SDL2::SetupSwapWindow();\n\n  return 0;\n\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠĠ", "Ġ_", "Ċ", "ĠĠ", "Ġ/", "_\\", "Ġ", "Ġ_", "Ġ_", "Ġ___", "Ġ___", "Ċ", "Ġ", "Ġ/", "Ġ_", "Ġ\\", "|", "Ġ'_", "/", "Ġ-", "_", "|_", "-", "<", "Ċ", "Ġ/", "_/", "Ġ\\", "_\\", "_", "|", "Ġ\\", "___", "/", "__", "/", "Ċ", "Ċ", "*/", "Ċ", "#", "include", "Ġ\"", "A", "res", ".", "h", "\"", "Ċ", "Ċ", "/*", "Ċ", "Description", ":", "Ċ", "Function", "Ġthat", "Ġis", "Ġcalled", "Ġwhen", "Ġthe", "Ġlibrary", "Ġis", "Ġloaded", ",", "Ġuse", "Ġthis", "Ġas", "Ġan", "Ġentry", "Ġpoint", ".", "Ċ", "*/", "Ċ", "int", "Ġ__", "attribute", "__((", "constructor", "))", "ĠA", "res", "()", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠSDL", "2", "::", "Setup", "Swap", "Window", "();", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::96", "code": "/*\n * The basic test codes to check the AnglogIn.\n */\n\n#include \"mbed.h\"\n\nstatic AnalogIn ain_x(A6); // connect joistics' x axis to A6 pin of mbed\nstatic AnalogIn ain_y(A5); // connect joistics' y axis to A5 pin of mbed\n\nstatic void printAnalogInput(AnalogIn *xin, AnalogIn *yin)\n{\n  uint8_t point[2] = { 0 };\n  point[0] = (uint8_t)(xin->read()*100.0f + 0.5);\n  point[1] = (uint8_t)(yin->read()*100.0f + 0.5);\n  printf(\"x: %d, y: %d\\n\", point[0], point[1]);\n}\n\nint main()\n{\n    while(1)\n    {\n        printAnalogInput(&ain_x, &ain_y);\n        wait(0.2f);\n    }\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠThe", "Ġbasic", "Ġtest", "Ġcodes", "Ġto", "Ġcheck", "Ġthe", "ĠAng", "log", "In", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "mbed", ".", "h", "\"", "Ċ", "Ċ", "static", "ĠAnal", "og", "In", "Ġa", "in", "_", "x", "(", "A", "6", ");", "Ġ//", "Ġconnect", "Ġjo", "istics", "'", "Ġx", "Ġaxis", "Ġto", "ĠA", "6", "Ġpin", "Ġof", "Ġm", "bed", "Ċ", "static", "ĠAnal", "og", "In", "Ġa", "in", "_", "y", "(", "A", "5", ");", "Ġ//", "Ġconnect", "Ġjo", "istics", "'", "Ġy", "Ġaxis", "Ġto", "ĠA", "5", "Ġpin", "Ġof", "Ġm", "bed", "Ċ", "Ċ", "static", "Ġvoid", "Ġprint", "Analog", "Input", "(", "Analog", "In", "Ġ*", "x", "in", ",", "ĠAnal", "og", "In", "Ġ*", "yin", ")", "Ċ", "{", "Ċ", "Ġ", "Ġuint", "8", "_", "t", "Ġpoint", "[", "2", "]", "Ġ=", "Ġ{", "Ġ0", "Ġ};", "Ċ", "Ġ", "Ġpoint", "[", "0", "]", "Ġ=", "Ġ(", "uint", "8", "_", "t", ")(", "x", "in", "->", "read", "()*", "100", ".", "0", "f", "Ġ+", "Ġ0", ".", "5", ");", "Ċ", "Ġ", "Ġpoint", "[", "1", "]", "Ġ=", "Ġ(", "uint", "8", "_", "t", ")(", "yin", "->", "read", "()*", "100", ".", "0", "f", "Ġ+", "Ġ0", ".", "5", ");", "Ċ", "Ġ", "Ġprintf", "(\"", "x", ":", "Ġ%", "d", ",", "Ġy", ":", "Ġ%", "d", "\\", "n", "\",", "Ġpoint", "[", "0", "],", "Ġpoint", "[", "1", "]);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġwhile", "(", "1", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprint", "Analog", "Input", "(&", "ain", "_", "x", ",", "Ġ&", "ain", "_", "y", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwait", "(", "0", ".", "2", "f", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::97", "code": "#include \"../../VM/Handler/Opcode8030Handler.h\"\n#include \"../../VM/Script.h\"\n\nnamespace Falltergeist\n{\n    namespace VM\n    {\n        namespace Handler\n        {\n            Opcode8030::Opcode8030(VM::Script *script, std::shared_ptr<ILogger> logger) : OpcodeHandler(script)\n            {\n                this->logger = std::move(logger);\n            }\n\n            void Opcode8030::_run()\n            {\n                logger->debug() << \"[8030] [*] op_while(address, condition)\" << std::endl;\n                auto condition = _script->dataStack()->popLogical();\n                if (!condition) {\n                    _script->setProgramCounter(_script->dataStack()->popInteger());\n                }\n            }\n        }\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "../../", "VM", "/", "Handler", "/", "Opcode", "80", "30", "Handler", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../../", "VM", "/", "Script", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠFall", "ter", "ge", "ist", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġnamespace", "ĠVM", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġnamespace", "ĠHandler", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠOpcode", "80", "30", "::", "Opcode", "80", "30", "(", "VM", "::", "Script", "Ġ*", "script", ",", "Ġstd", "::", "shared", "_", "ptr", "<", "I", "Logger", ">", "Ġlogger", ")", "Ġ:", "ĠOpcode", "Handler", "(", "script", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "logger", "Ġ=", "Ġstd", "::", "move", "(", "logger", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġvoid", "ĠOpcode", "80", "30", "::_", "run", "()", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġlogger", "->", "debug", "()", "Ġ<<", "Ġ\"[", "80", "30", "]", "Ġ[", "*]", "Ġop", "_", "while", "(", "address", ",", "Ġcondition", ")\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "Ġcondition", "Ġ=", "Ġ_", "script", "->", "data", "Stack", "()->", "pop", "Logical", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "condition", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "script", "->", "set", "Program", "Counter", "(_", "script", "->", "data", "Stack", "()->", "pop", "Integer", "());", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::98", "code": "#include \"house2.h\"\n\nint House2::objCount = 0;\nGImage *House2::image = nullptr;\nHouse2::House2(int x, int y)\n{\n    posx = x;\n    posy = y;\n    width = 336;\n    height = 366;\n    if(!objCount)\n        image = new GImage(\"./assets/house-a.gif\",width,height,GImage::IS_TRANSPARENT,0);\n    objCount++;\n    if(Debug::debug_enable())\n        std::cout << \"House2 \" << objCount-1 << \" created\" << std::endl;\n}\nHouse2::~House2()\n{\n    objCount--;\n    if(!objCount)\n        delete image;\n    if(Debug::debug_enable())\n        std::cout << \"House2 \" << objCount << \" destroyed\" << std::endl;\n}\nbool House2::show(int x)\n{\n    if(posx-x+width >= 0 && posx-x <= 800)\n    {\n      image->show(posx-x,posy);\n      return 1;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "house", "2", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠH", "ouse", "2", "::", "obj", "Count", "Ġ=", "Ġ0", ";", "Ċ", "G", "Image", "Ġ*", "House", "2", "::", "image", "Ġ=", "Ġnullptr", ";", "Ċ", "House", "2", "::", "House", "2", "(", "int", "Ġx", ",", "Ġint", "Ġy", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġpos", "x", "Ġ=", "Ġx", ";", "Ċ", "ĠĠĠ", "Ġpos", "y", "Ġ=", "Ġy", ";", "Ċ", "ĠĠĠ", "Ġwidth", "Ġ=", "Ġ3", "36", ";", "Ċ", "ĠĠĠ", "Ġheight", "Ġ=", "Ġ3", "66", ";", "Ċ", "ĠĠĠ", "Ġif", "(!", "obj", "Count", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġimage", "Ġ=", "Ġnew", "ĠG", "Image", "(\"./", "assets", "/", "house", "-", "a", ".", "gif", "\",", "width", ",", "height", ",", "G", "Image", "::", "IS", "_", "TRANSPARENT", ",", "0", ");", "Ċ", "ĠĠĠ", "Ġobj", "Count", "++;", "Ċ", "ĠĠĠ", "Ġif", "(", "Debug", "::", "debug", "_", "enable", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "House", "2", "Ġ\"", "Ġ<<", "Ġobj", "Count", "-", "1", "Ġ<<", "Ġ\"", "Ġcreated", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "House", "2", "::~", "House", "2", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġobj", "Count", "--;", "Ċ", "ĠĠĠ", "Ġif", "(!", "obj", "Count", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdelete", "Ġimage", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "Debug", "::", "debug", "_", "enable", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "House", "2", "Ġ\"", "Ġ<<", "Ġobj", "Count", "Ġ<<", "Ġ\"", "Ġdestroyed", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "bool", "ĠH", "ouse", "2", "::", "show", "(", "int", "Ġx", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(", "pos", "x", "-", "x", "+", "width", "Ġ>=", "Ġ0", "Ġ&&", "Ġpos", "x", "-", "x", "Ġ<=", "Ġ800", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġimage", "->", "show", "(", "pos", "x", "-", "x", ",", "pos", "y", ");", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::99", "code": "/**********************************************************\n * Filename:    MDBRow.cpp\n * Text Encoding: utf-8\n *\n * Description:\n *              \n *\n * Author: moxichang (ishego@gmail.com)\n *         Harbin Engineering University \n *         Information Security Research Center\n *\n *********************************************************/\n\n#include \"Exception.h\"\n#include \"MDB/MDBRow.h\"\n\nMDB::MDBRow:: MDBRow(MDBField** fields_, int numcols_ )\n\t: field_m(fields_), numcols_m(numcols_)\n{\n\n}\n\nMDB::MDBRow:: ~MDBRow()\n{\n\tfor(int i=0; i< numcols_m; i++)\n\t{\n\t\tdelete field_m[i];\t\n\t}\n\n\tdelete [] field_m;\n}\n\n\nMDB::MDBField& MDB::MDBRow:: operator [] (int index_)\n{\n\tif(index_ >= numcols_m || index_ < 0)\n\t{\n\t\tThrow(\"Row index out of range\", MException::ME_OUTRANGE);\n\t}\n\n\treturn **(field_m + index_);\n}\n", "code_tokens": ["Ġ/", "********************************************************", "**", "Ċ", "Ġ*", "ĠFilename", ":", "ĠĠĠ", "ĠM", "DB", "Row", ".", "cpp", "Ċ", "Ġ*", "ĠText", "ĠEncoding", ":", "Ġutf", "-", "8", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠDescription", ":", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĊ", "Ġ*", "Ċ", "Ġ*", "ĠAuthor", ":", "Ġmo", "x", "ich", "ang", "Ġ(", "is", "he", "go", "@", "gmail", ".", "com", ")", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠ", "ĠH", "ar", "bin", "ĠEngine", "ering", "ĠUn", "ivers", "ity", "ĠĊ", "Ġ*", "ĠĠĠĠĠĠĠĠ", "ĠInformation", "ĠSecurity", "ĠRe", "search", "ĠCenter", "Ċ", "Ġ*", "Ċ", "Ġ*********************************************************", "/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Exception", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "MDB", "/", "MDB", "Row", ".", "h", "\"", "Ċ", "Ċ", "MDB", "::", "MDB", "Row", "::", "ĠM", "DB", "Row", "(", "MDB", "Field", "**", "Ġfields", "_,", "Ġint", "Ġnum", "cols", "_", "Ġ)", "Ċ", "ĉ", ":", "Ġfield", "_", "m", "(", "fields", "_),", "Ġnum", "cols", "_", "m", "(", "num", "cols", "_)", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "MDB", "::", "MDB", "Row", "::", "Ġ~", "MDB", "Row", "()", "Ċ", "{", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "Ġnum", "cols", "_", "m", ";", "Ġi", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "delete", "Ġfield", "_", "m", "[", "i", "];", "ĉĊ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "delete", "Ġ[]", "Ġfield", "_", "m", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "MDB", "::", "MDB", "Field", "&", "ĠM", "DB", "::", "MDB", "Row", "::", "Ġoperator", "Ġ[]", "Ġ(", "int", "Ġindex", "_)", "Ċ", "{", "Ċ", "ĉ", "if", "(", "index", "_", "Ġ>=", "Ġnum", "cols", "_", "m", "Ġ||", "Ġindex", "_", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Throw", "(\"", "Row", "Ġindex", "Ġout", "Ġof", "Ġrange", "\",", "ĠM", "Exception", "::", "ME", "_", "OU", "TRAN", "GE", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġ**", "(", "field", "_", "m", "Ġ+", "Ġindex", "_);", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::100", "code": "/* \n * File:   Worker2.cpp\n * Author: saulario\n * \n * Created on 15 de septiembre de 2016, 6:40\n */\n\n#include \"Worker2.h\"\n#include \"Csoft.h\"\n\nusing namespace csoft::mod2;\n\nWorker2::Worker2(const csoft::Csoft * csoft) {\n}\n\nWorker2::Worker2(const Worker2& orig) {\n}\n\nWorker2::~Worker2() {\n}\n\nvoid Worker2::doIt(void) {\n    BOOST_LOG_SEV(lg, boost::log::trivial::info) << __PRETTY_FUNCTION__ << \"---> Begin\";\n\n    BOOST_LOG_SEV(lg, boost::log::trivial::info) << __PRETTY_FUNCTION__ << \"<--- End\";    \n}", "code_tokens": ["Ġ/*", "ĠĊ", "Ġ*", "ĠFile", ":", "ĠĠ", "ĠWorker", "2", ".", "cpp", "Ċ", "Ġ*", "ĠAuthor", ":", "Ġsa", "ular", "io", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠCreated", "Ġon", "Ġ15", "Ġde", "Ġse", "pti", "embre", "Ġde", "Ġ2016", ",", "Ġ6", ":", "40", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Worker", "2", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "C", "soft", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġc", "soft", "::", "mod", "2", ";", "Ċ", "Ċ", "Worker", "2", "::", "Worker", "2", "(", "const", "Ġc", "soft", "::", "C", "soft", "Ġ*", "Ġc", "soft", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Worker", "2", "::", "Worker", "2", "(", "const", "ĠWorker", "2", "&", "Ġorig", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Worker", "2", "::~", "Worker", "2", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWorker", "2", "::", "do", "It", "(", "void", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "LOG", "_", "SE", "V", "(", "lg", ",", "Ġboost", "::", "log", "::", "trivial", "::", "info", ")", "Ġ<<", "Ġ__", "PRETTY", "_", "FUNCTION", "__", "Ġ<<", "Ġ\"--", "->", "ĠBegin", "\";", "Ċ", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "LOG", "_", "SE", "V", "(", "lg", ",", "Ġboost", "::", "log", "::", "trivial", "::", "info", ")", "Ġ<<", "Ġ__", "PRETTY", "_", "FUNCTION", "__", "Ġ<<", "Ġ\"<", "---", "ĠEnd", "\";", "ĠĠĠĠ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::101", "code": "#include \"hal/time/time.hpp\"\r\n\r\nnamespace hal\r\n{\r\nnamespace time\r\n{\r\n\r\nstatic u64 currentTime = 0;\r\n\r\n\r\nu64 milliseconds()\r\n{\r\n    return currentTime;\r\n}\r\n\r\n} // namespace time\r\n} // namespace hal\r\n\r\n\r\nnamespace stub\r\n{\r\nnamespace time\r\n{\r\n\r\nvoid setCurrentTime(u64 milliseconds)\r\n{\r\n    hal::time::currentTime = milliseconds;\r\n}\r\n\r\nvoid forwardTime(u64 milliseconds)\r\n{\r\n    hal::time::currentTime += milliseconds;\r\n}\r\n\r\n} // namespace time\r\n} // namespace stub\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "hal", "/", "time", "/", "time", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "namespace", "Ġhal", "č", "Ċ", "{", "č", "Ċ", "namespace", "Ġtime", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "static", "Ġu", "64", "ĠcurrentTime", "Ġ=", "Ġ0", ";", "č", "Ċ", "č", "Ċ", "č", "Ċ", "u", "64", "Ġmilliseconds", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġreturn", "ĠcurrentTime", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġtime", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġhal", "č", "Ċ", "č", "Ċ", "č", "Ċ", "namespace", "Ġstub", "č", "Ċ", "{", "č", "Ċ", "namespace", "Ġtime", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "Ġset", "CurrentTime", "(", "u", "64", "Ġmilliseconds", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġhal", "::", "time", "::", "currentTime", "Ġ=", "Ġmilliseconds", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġforward", "Time", "(", "u", "64", "Ġmilliseconds", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġhal", "::", "time", "::", "currentTime", "Ġ+=", "Ġmilliseconds", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġtime", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġstub", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::102", "code": "#include <cstdio>\n\ntemplate<typename T>\nauto kitten(T x) __attribute__((noinline));\n\ntemplate<class T>\nauto kitten(T t)\n{\n\tstatic T x = 0;\n\treturn (x += 1) + t;\n}\n\nint main()\n{\n\tprintf(\"%d\\n\", kitten(1));\n\tprintf(\"%g\\n\", kitten(3.14));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "Ċ", "auto", "Ġk", "it", "ten", "(", "T", "Ġx", ")", "Ġ__", "attribute", "__((", "no", "inline", "));", "Ċ", "Ċ", "template", "<", "class", "ĠT", ">", "Ċ", "auto", "Ġk", "it", "ten", "(", "T", "Ġt", ")", "Ċ", "{", "Ċ", "ĉ", "static", "ĠT", "Ġx", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "return", "Ġ(", "x", "Ġ+=", "Ġ1", ")", "Ġ+", "Ġt", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "printf", "(\"%", "d", "\\", "n", "\",", "Ġk", "it", "ten", "(", "1", "));", "Ċ", "ĉ", "printf", "(\"%", "g", "\\", "n", "\",", "Ġk", "it", "ten", "(", "3", ".", "14", "));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::103", "code": "/*\n    Buffer.cpp - This file is part of Element\n    Copyright (C) 2014  Kushview, LLC.  All rights reserved.\n*/\n\n#if ELEMENT_BUFFER_FACTORY\n\nBuffer::Buffer (DataType dataType_, uint32 subType_)\n    : factory (nullptr),\n      refs (0),\n      dataType (dataType_),\n      subType (subType_),\n      capacity (0),\n      next (nullptr)\n{ }\n\nBuffer::~Buffer() { }\n\nvoid Buffer::attach (BufferFactory* owner)\n{\n    jassert (factory == nullptr && owner != nullptr);\n    factory = owner;\n}\n\nvoid Buffer::recycle()\n{\n    if (isManaged())\n        factory->recycle (this);\n}\n\nvoid intrusive_ptr_add_ref (Buffer* b)\n{\n    if (b->isManaged())\n        ++b->refs;\n}\n\nvoid intrusive_ptr_release (Buffer* b)\n{\n    if (b->isManaged())\n        if (--b->refs == 0)\n            b->recycle();\n}\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠĠ", "ĠBuffer", ".", "cpp", "Ġ-", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠElement", "Ċ", "ĠĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "Ġ", "ĠK", "ush", "view", ",", "ĠLLC", ".", "Ġ", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "if", "ĠELEMENT", "_", "BUFFER", "_", "FACTORY", "Ċ", "Ċ", "Buffer", "::", "Buffer", "Ġ(", "DataType", "ĠdataType", "_,", "Ġuint", "32", "Ġsub", "Type", "_)", "Ċ", "ĠĠĠ", "Ġ:", "Ġfactory", "Ġ(", "nullptr", "),", "Ċ", "ĠĠĠĠĠ", "Ġrefs", "Ġ(", "0", "),", "Ċ", "ĠĠĠĠĠ", "ĠdataType", "Ġ(", "dataType", "_),", "Ċ", "ĠĠĠĠĠ", "Ġsub", "Type", "Ġ(", "sub", "Type", "_),", "Ċ", "ĠĠĠĠĠ", "Ġcapacity", "Ġ(", "0", "),", "Ċ", "ĠĠĠĠĠ", "Ġnext", "Ġ(", "nullptr", ")", "Ċ", "{", "Ġ}", "Ċ", "Ċ", "Buffer", "::~", "Buffer", "()", "Ġ{", "Ġ}", "Ċ", "Ċ", "void", "ĠBuffer", "::", "attach", "Ġ(", "Buffer", "Factory", "*", "Ġowner", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġjassert", "Ġ(", "factory", "Ġ==", "Ġnullptr", "Ġ&&", "Ġowner", "Ġ!=", "Ġnullptr", ");", "Ċ", "ĠĠĠ", "Ġfactory", "Ġ=", "Ġowner", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBuffer", "::", "recycle", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "is", "Managed", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfactory", "->", "recycle", "Ġ(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġintr", "usive", "_", "ptr", "_", "add", "_", "ref", "Ġ(", "Buffer", "*", "Ġb", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "b", "->", "is", "Managed", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ++", "b", "->", "refs", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġintr", "usive", "_", "ptr", "_", "release", "Ġ(", "Buffer", "*", "Ġb", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "b", "->", "is", "Managed", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(--", "b", "->", "refs", "Ġ==", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġb", "->", "recycle", "();", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::104", "code": "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"services/video_capture/device_mojo_mock_to_media_adapter.h\"\n\n#include \"services/video_capture/device_client_media_to_mojo_mock_adapter.h\"\n\nnamespace video_capture {\n\nDeviceMojoMockToMediaAdapter::DeviceMojoMockToMediaAdapter(\n    mojom::MockMediaDevicePtr* device)\n    : device_(device) {}\n\nDeviceMojoMockToMediaAdapter::~DeviceMojoMockToMediaAdapter() = default;\n\nvoid DeviceMojoMockToMediaAdapter::AllocateAndStart(\n    const media::VideoCaptureParams& params,\n    std::unique_ptr<Client> client) {\n  mojom::MockDeviceClientPtr client_proxy;\n  auto client_request = mojo::GetProxy(&client_proxy);\n\n  mojo::MakeStrongBinding(\n      base::MakeUnique<DeviceClientMediaToMojoMockAdapter>(std::move(client)),\n      std::move(client_request));\n\n  (*device_)->AllocateAndStart(std::move(client_proxy));\n}\n\nvoid DeviceMojoMockToMediaAdapter::RequestRefreshFrame() {}\n\nvoid DeviceMojoMockToMediaAdapter::StopAndDeAllocate() {\n  (*device_)->StopAndDeAllocate();\n}\n\nvoid DeviceMojoMockToMediaAdapter::GetPhotoCapabilities(\n    GetPhotoCapabilitiesCallback callback) {}\n\nvoid DeviceMojoMockToMediaAdapter::SetPhotoOptions(\n    media::mojom::PhotoSettingsPtr settings,\n    SetPhotoOptionsCallback callback) {}\n\nvoid DeviceMojoMockToMediaAdapter::TakePhoto(TakePhotoCallback callback) {}\n\n}  // namespace video_capture\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2016", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "services", "/", "video", "_", "capture", "/", "device", "_", "mo", "jo", "_", "mock", "_", "to", "_", "media", "_", "adapter", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "services", "/", "video", "_", "capture", "/", "device", "_", "client", "_", "media", "_", "to", "_", "mo", "jo", "_", "mock", "_", "adapter", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġvideo", "_", "capture", "Ġ{", "Ċ", "Ċ", "Device", "Mo", "jo", "Mock", "To", "Media", "Adapter", "::", "Device", "Mo", "jo", "Mock", "To", "Media", "Adapter", "(", "Ċ", "ĠĠĠ", "Ġmo", "j", "om", "::", "Mock", "Media", "Device", "Ptr", "*", "Ġdevice", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġdevice", "_(", "device", ")", "Ġ{}", "Ċ", "Ċ", "Device", "Mo", "jo", "Mock", "To", "Media", "Adapter", "::~", "Device", "Mo", "jo", "Mock", "To", "Media", "Adapter", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "void", "ĠDevice", "Mo", "jo", "Mock", "To", "Media", "Adapter", "::", "Allocate", "And", "Start", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġmedia", "::", "Video", "Capture", "Params", "&", "Ġparams", ",", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "ptr", "<", "Client", ">", "Ġclient", ")", "Ġ{", "Ċ", "Ġ", "Ġmo", "j", "om", "::", "Mock", "Device", "Client", "Ptr", "Ġclient", "_", "proxy", ";", "Ċ", "Ġ", "Ġauto", "Ġclient", "_", "request", "Ġ=", "Ġmo", "jo", "::", "Get", "Proxy", "(&", "client", "_", "proxy", ");", "Ċ", "Ċ", "Ġ", "Ġmo", "jo", "::", "Make", "Strong", "Binding", "(", "Ċ", "ĠĠĠĠĠ", "Ġbase", "::", "Make", "Unique", "<", "Device", "Client", "Media", "To", "Mo", "jo", "Mock", "Adapter", ">(", "std", "::", "move", "(", "client", ")),", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "move", "(", "client", "_", "request", "));", "Ċ", "Ċ", "Ġ", "Ġ(*", "device", "_", ")->", "Allocate", "And", "Start", "(", "std", "::", "move", "(", "client", "_", "proxy", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDevice", "Mo", "jo", "Mock", "To", "Media", "Adapter", "::", "Request", "Refresh", "Frame", "()", "Ġ{}", "Ċ", "Ċ", "void", "ĠDevice", "Mo", "jo", "Mock", "To", "Media", "Adapter", "::", "Stop", "And", "De", "Allocate", "()", "Ġ{", "Ċ", "Ġ", "Ġ(*", "device", "_", ")->", "Stop", "And", "De", "Allocate", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDevice", "Mo", "jo", "Mock", "To", "Media", "Adapter", "::", "Get", "Photo", "Capabilities", "(", "Ċ", "ĠĠĠ", "ĠGet", "Photo", "Capabilities", "Callback", "Ġcallback", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠDevice", "Mo", "jo", "Mock", "To", "Media", "Adapter", "::", "Set", "Photo", "Options", "(", "Ċ", "ĠĠĠ", "Ġmedia", "::", "mo", "j", "om", "::", "Photo", "Settings", "Ptr", "Ġsettings", ",", "Ċ", "ĠĠĠ", "ĠSet", "Photo", "Options", "Callback", "Ġcallback", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠDevice", "Mo", "jo", "Mock", "To", "Media", "Adapter", "::", "Take", "Photo", "(", "Take", "Photo", "Callback", "Ġcallback", ")", "Ġ{}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġvideo", "_", "capture", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::105", "code": "/*\n *  This file is part of the command-line tool sosicon.\n *  Copyright (C) 2014  Espen Andersen, Norwegian Broadcast Corporation (NRK)\n *\n *  This is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n#include \"converter_sosi2tsv.h\"\n\nvoid sosicon::ConverterSosi2tsv::\nrun( bool* ) {\n\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġcommand", "-", "line", "Ġtool", "Ġs", "os", "icon", ".", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "Ġ", "ĠE", "sp", "en", "ĠAnd", "ers", "en", ",", "ĠN", "or", "we", "g", "ian", "ĠBroadcast", "ĠCor", "poration", "Ġ(", "NR", "K", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "converter", "_", "s", "os", "i", "2", "tsv", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġs", "os", "icon", "::", "Converter", "S", "os", "i", "2", "tsv", "::", "Ċ", "run", "(", "Ġbool", "*", "Ġ)", "Ġ{", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::106", "code": "class Solution {\npublic:\n        string addBinary(string a, string b) {\n                string sum = \"\";\n                int carry = 0;\n                for (int i = a.size() - 1, j = b.size() - 1; i >= 0 || j >= 0; i--, j--) {\n                        int m = (i >= 0 && a[i] == '1');\n                        int n = (j >= 0 && b[j] == '1');\n                        sum += to_string((m + n + carry) & 0x1); // &0x1 only get the last binary digit\n                                                                                           //It's better to avoid pattern string = char + string in loop. Use s[i] to alter string.\n                                                                                           //just directly writing the output string and reversing it at last.\n                        carry = (m + n + carry) >> 1; // >>1 is /2\n                }\n                reverse(sum.begin(), sum.end());\n                if(carry)  sum = '1' + sum;\n                else sum = '0' + sum; //in case of two null input string \n                size_t i=0;\n                while(sum[i] == '0' && i < sum.length()-1) i++; \n                sum = sum.substr(i);\n                return sum;\n        }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstring", "Ġadd", "Binary", "(", "string", "Ġa", ",", "Ġstring", "Ġb", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstring", "Ġsum", "Ġ=", "Ġ\"\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġcarry", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġa", ".", "size", "()", "Ġ-", "Ġ1", ",", "Ġj", "Ġ=", "Ġb", ".", "size", "()", "Ġ-", "Ġ1", ";", "Ġi", "Ġ>=", "Ġ0", "Ġ||", "Ġj", "Ġ>=", "Ġ0", ";", "Ġi", "--,", "Ġj", "--)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġm", "Ġ=", "Ġ(", "i", "Ġ>=", "Ġ0", "Ġ&&", "Ġa", "[", "i", "]", "Ġ==", "Ġ'", "1", "');", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġn", "Ġ=", "Ġ(", "j", "Ġ>=", "Ġ0", "Ġ&&", "Ġb", "[", "j", "]", "Ġ==", "Ġ'", "1", "');", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "Ġ+=", "Ġto", "_", "string", "((", "m", "Ġ+", "Ġn", "Ġ+", "Ġcarry", ")", "Ġ&", "Ġ0", "x", "1", ");", "Ġ//", "Ġ&", "0", "x", "1", "Ġonly", "Ġget", "Ġthe", "Ġlast", "Ġbinary", "Ġdigit", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "It", "'s", "Ġbetter", "Ġto", "Ġavoid", "Ġpattern", "Ġstring", "Ġ=", "Ġchar", "Ġ+", "Ġstring", "Ġin", "Ġloop", ".", "ĠUse", "Ġs", "[", "i", "]", "Ġto", "Ġalter", "Ġstring", ".", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "just", "Ġdirectly", "Ġwriting", "Ġthe", "Ġoutput", "Ġstring", "Ġand", "Ġre", "versing", "Ġit", "Ġat", "Ġlast", ".", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcarry", "Ġ=", "Ġ(", "m", "Ġ+", "Ġn", "Ġ+", "Ġcarry", ")", "Ġ>>", "Ġ1", ";", "Ġ//", "Ġ>>", "1", "Ġis", "Ġ/", "2", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreverse", "(", "sum", ".", "begin", "(),", "Ġsum", ".", "end", "());", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "carry", ")", "Ġ", "Ġsum", "Ġ=", "Ġ'", "1", "'", "Ġ+", "Ġsum", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġsum", "Ġ=", "Ġ'", "0", "'", "Ġ+", "Ġsum", ";", "Ġ//", "in", "Ġcase", "Ġof", "Ġtwo", "Ġnull", "Ġinput", "Ġstring", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġsize", "_", "t", "Ġi", "=", "0", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġwhile", "(", "sum", "[", "i", "]", "Ġ==", "Ġ'", "0", "'", "Ġ&&", "Ġi", "Ġ<", "Ġsum", ".", "length", "()-", "1", ")", "Ġi", "++;", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "Ġ=", "Ġsum", ".", "substr", "(", "i", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġsum", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::107", "code": "/** Author: Sharmin Akter **/\r\n/** Created at: 4/30/2012 12:07:26 AM **/\r\n\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int i,j,k,p,m,n,t;\r\n\r\n    while(scanf(\"%d\",&t)==1)\r\n    {\r\n        for(i=1;i<=t;i++)\r\n        {\r\n            scanf(\"%d\",&p);\r\n            if(p==2||p==3||p==5||p==7||p==13||p==17)\r\n                printf(\"Yes\\n\");\r\n            else\r\n                printf(\"No\\n\");\r\n            getchar();\r\n        }\r\n    }\r\nreturn 0;\r\n}\r\n", "code_tokens": ["Ġ/**", "ĠAuthor", ":", "ĠSh", "ar", "min", "ĠA", "k", "ter", "Ġ**/", "č", "Ċ", "/**", "ĠCreated", "Ġat", ":", "Ġ4", "/", "30", "/", "2012", "Ġ12", ":", "07", ":", "26", "ĠAM", "Ġ**/", "č", "Ċ", "č", "Ċ", "#", "include", "<", "stdio", ".", "h", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġint", "Ġi", ",", "j", ",", "k", ",", "p", ",", "m", ",", "n", ",", "t", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġwhile", "(", "scanf", "(\"%", "d", "\",&", "t", ")==", "1", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "i", "=", "1", ";", "i", "<=", "t", ";", "i", "++)", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "p", ");", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "p", "==", "2", "||", "p", "==", "3", "||", "p", "==", "5", "||", "p", "==", "7", "||", "p", "==", "13", "||", "p", "==", "17", ")", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"", "Yes", "\\", "n", "\");", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"", "No", "\\", "n", "\");", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġget", "char", "();", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::108", "code": "#include \"Data/datadescriptor.h\"\n#include <type_traits>\n#include <QDebug>\n\nunsigned int DataDescriptor::_uid_ctr = 0;\n\nDataDescriptor::DataDescriptor(QString name, QString unit, double factor, Type t) :\n\t_name(name), _unit(unit), _factor(factor), _type(t)\n{\n\t_uuid = getUUID();\n}\n\nDataDescriptor::DataDescriptor(const QJsonObject &jo) {\n\t_uuid = getUUID();\n\t_name = jo[\"name\"].toString();\n\t_unit = jo[\"unit\"].toString();\n\t_factor = jo[\"factor\"].toDouble();\n\t_type = static_cast<Type>(jo[\"type\"].toInt());\n}\n\nDataDescriptor::Type DataDescriptor::typeFromId(quint8 id) {\n\tswitch (id) {\n\t\tcase 0: return Type::CHAR;\n\t\tcase 1: return Type::FLOAT;\n\t\tcase 2: return Type::UINT16T;\n\t\tcase 3: return Type::BIGLITTLE;\n\t\tdefault: return Type::UINT32T;\n\t}\n}\n\nQString DataDescriptor::str() const {\n\tQString test(\"%1 [%2] * %3\");\n\treturn test.arg(_name,_unit,QString::number(_factor));\n}\n\nunsigned int DataDescriptor::getUUID() {\n\treturn _uid_ctr++;\n}\n\nQJsonObject DataDescriptor::json() const {\n\tQJsonObject json;\n\tjson[\"name\"] = _name;\n\tjson[\"unit\"] = _unit;\n\tjson[\"factor\"] = _factor;\n\tjson[\"type\"] = static_cast<std::underlying_type<Type>::type>(_type);\n\treturn json;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Data", "/", "data", "descriptor", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "type", "_", "traits", ">", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "Ċ", "unsigned", "Ġint", "ĠData", "Descriptor", "::_", "uid", "_", "ctr", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "Data", "Descriptor", "::", "Data", "Descriptor", "(", "QString", "Ġname", ",", "ĠQString", "Ġunit", ",", "Ġdouble", "Ġfactor", ",", "ĠType", "Ġt", ")", "Ġ:", "Ċ", "ĉ", "_", "name", "(", "name", "),", "Ġ_", "unit", "(", "unit", "),", "Ġ_", "factor", "(", "factor", "),", "Ġ_", "type", "(", "t", ")", "Ċ", "{", "Ċ", "ĉ", "_", "uuid", "Ġ=", "Ġget", "UUID", "();", "Ċ", "}", "Ċ", "Ċ", "Data", "Descriptor", "::", "Data", "Descriptor", "(", "const", "ĠQ", "JsonObject", "Ġ&", "jo", ")", "Ġ{", "Ċ", "ĉ", "_", "uuid", "Ġ=", "Ġget", "UUID", "();", "Ċ", "ĉ", "_", "name", "Ġ=", "Ġjo", "[\"", "name", "\"].", "toString", "();", "Ċ", "ĉ", "_", "unit", "Ġ=", "Ġjo", "[\"", "unit", "\"].", "toString", "();", "Ċ", "ĉ", "_", "factor", "Ġ=", "Ġjo", "[\"", "factor", "\"].", "toDouble", "();", "Ċ", "ĉ", "_", "type", "Ġ=", "Ġstatic", "_", "cast", "<", "Type", ">(", "jo", "[\"", "type", "\"].", "toInt", "());", "Ċ", "}", "Ċ", "Ċ", "Data", "Descriptor", "::", "Type", "ĠData", "Descriptor", "::", "type", "From", "Id", "(", "quint", "8", "Ġid", ")", "Ġ{", "Ċ", "ĉ", "switch", "Ġ(", "id", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "case", "Ġ0", ":", "Ġreturn", "ĠType", "::", "CHAR", ";", "Ċ", "ĉ", "ĉ", "case", "Ġ1", ":", "Ġreturn", "ĠType", "::", "FLOAT", ";", "Ċ", "ĉ", "ĉ", "case", "Ġ2", ":", "Ġreturn", "ĠType", "::", "UINT", "16", "T", ";", "Ċ", "ĉ", "ĉ", "case", "Ġ3", ":", "Ġreturn", "ĠType", "::", "BIG", "LITTLE", ";", "Ċ", "ĉ", "ĉ", "default", ":", "Ġreturn", "ĠType", "::", "UINT", "32", "T", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "QString", "ĠData", "Descriptor", "::", "str", "()", "Ġconst", "Ġ{", "Ċ", "ĉ", "QString", "Ġtest", "(\"%", "1", "Ġ[%", "2", "]", "Ġ*", "Ġ%", "3", "\");", "Ċ", "ĉ", "return", "Ġtest", ".", "arg", "(_", "name", ",_", "unit", ",", "QString", "::", "number", "(_", "factor", "));", "Ċ", "}", "Ċ", "Ċ", "unsigned", "Ġint", "ĠData", "Descriptor", "::", "get", "UUID", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġ_", "uid", "_", "ctr", "++;", "Ċ", "}", "Ċ", "Ċ", "Q", "JsonObject", "ĠData", "Descriptor", "::", "json", "()", "Ġconst", "Ġ{", "Ċ", "ĉ", "Q", "JsonObject", "Ġjson", ";", "Ċ", "ĉ", "json", "[\"", "name", "\"]", "Ġ=", "Ġ_", "name", ";", "Ċ", "ĉ", "json", "[\"", "unit", "\"]", "Ġ=", "Ġ_", "unit", ";", "Ċ", "ĉ", "json", "[\"", "factor", "\"]", "Ġ=", "Ġ_", "factor", ";", "Ċ", "ĉ", "json", "[\"", "type", "\"]", "Ġ=", "Ġstatic", "_", "cast", "<", "std", "::", "underlying", "_", "type", "<", "Type", ">::", "type", ">(_", "type", ");", "Ċ", "ĉ", "return", "Ġjson", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::109", "code": "//Copyright (c) 2017 Finjin\n//\n//This file is part of Finjin Engine (finjin-engine).\n//\n//Finjin Engine is distributed in the hope that it will be useful,\n//but WITHOUT ANY WARRANTY; without even the implied warranty of\n//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n//\n//This Source Code Form is subject to the terms of the Mozilla Public\n//License, v. 2.0. If a copy of the MPL was not distributed with this\n//file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n\n#pragma once\n\n\n//Includes----------------------------------------------------------------------\n#include \"finjin/engine/GenericInputDevice.hpp\"\n\n\n//Types-------------------------------------------------------------------------\nnamespace Finjin { namespace Engine {\n\n    using namespace Finjin::Common;\n\n    class WindowsUWPInputContext;\n\n} }\n", "code_tokens": ["Ġ//", "Copyright", "Ġ(", "c", ")", "Ġ2017", "ĠF", "in", "j", "in", "Ċ", "//", "Ċ", "//", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠF", "in", "j", "in", "ĠEngine", "Ġ(", "fin", "j", "in", "-", "engine", ").", "Ċ", "//", "Ċ", "//", "Fin", "j", "in", "ĠEngine", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "but", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "MER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ċ", "//", "Ċ", "//", "This", "ĠSource", "ĠCode", "ĠForm", "Ġis", "Ġsubject", "Ġto", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠMo", "zilla", "ĠPublic", "Ċ", "//", "License", ",", "Ġv", ".", "Ġ2", ".", "0", ".", "ĠIf", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠM", "PL", "Ġwas", "Ġnot", "Ġdistributed", "Ġwith", "Ġthis", "Ċ", "//", "file", ",", "ĠYou", "Ġcan", "Ġobtain", "Ġone", "Ġat", "Ġhttp", "://", "mozilla", ".", "org", "/", "MP", "L", "/", "2", ".", "0", "/.", "Ċ", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "Ċ", "//", "Includes", "----------------------------------------------------------------------", "Ċ", "#", "include", "Ġ\"", "fin", "j", "in", "/", "engine", "/", "Generic", "InputDevice", ".", "hpp", "\"", "Ċ", "Ċ", "Ċ", "//", "Types", "-------------------------------------------------------------------------", "Ċ", "namespace", "ĠF", "in", "j", "in", "Ġ{", "Ġnamespace", "ĠEngine", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġusing", "Ġnamespace", "ĠF", "in", "j", "in", "::", "Common", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġclass", "ĠWindows", "U", "WP", "Input", "Context", ";", "Ċ", "Ċ", "}", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::110", "code": "#include <cstdarg>\n#include <cstdint>\n#include <cstdlib>\n#include <ostream>\n#include <new>\n\nstatic const int32_t EXT_CONST = 0;\n\nstruct ExtType {\n  uint32_t data;\n};\n\nextern \"C\" {\n\nvoid consume_ext(ExtType _ext);\n\n} // extern \"C\"\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "arg", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "int", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "#", "include", "Ġ<", "ostream", ">", "Ċ", "#", "include", "Ġ<", "new", ">", "Ċ", "Ċ", "static", "Ġconst", "Ġint", "32", "_", "t", "ĠEXT", "_", "CONST", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "struct", "ĠExt", "Type", "Ġ{", "Ċ", "Ġ", "Ġuint", "32", "_", "t", "Ġdata", ";", "Ċ", "};", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġ{", "Ċ", "Ċ", "void", "Ġconsume", "_", "ext", "(", "Ext", "Type", "Ġ_", "ext", ");", "Ċ", "Ċ", "}", "Ġ//", "Ġextern", "Ġ\"", "C", "\"", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::111", "code": "#include <minizinc/solvers/gecode_solverfactory.hh>\n#include <minizinc/solvers/gecode_solverinstance.hh>\n\nnamespace MiniZinc {\nnamespace {\nvoid get_wrapper() { static GecodeSolverFactory _gecode_solverfactory; }\n}  // namespace\nGecodeSolverFactoryInitialiser::GecodeSolverFactoryInitialiser() { get_wrapper(); }\n}  // namespace MiniZinc\n", "code_tokens": ["Ġ#", "include", "Ġ<", "min", "iz", "inc", "/", "sol", "vers", "/", "ge", "code", "_", "solver", "factory", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "min", "iz", "inc", "/", "sol", "vers", "/", "ge", "code", "_", "solver", "instance", ".", "hh", ">", "Ċ", "Ċ", "namespace", "ĠMini", "Z", "inc", "Ġ{", "Ċ", "namespace", "Ġ{", "Ċ", "void", "Ġget", "_", "wrapper", "()", "Ġ{", "Ġstatic", "ĠGe", "code", "Solver", "Factory", "Ġ_", "ge", "code", "_", "solver", "factory", ";", "Ġ}", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ge", "code", "Solver", "Factory", "Initial", "iser", "::", "Ge", "code", "Solver", "Factory", "Initial", "iser", "()", "Ġ{", "Ġget", "_", "wrapper", "();", "Ġ}", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "ĠMini", "Z", "inc", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::112", "code": "/*\n\tCopyright (C) 1999 Claude SIMON (http://q37.info/contact/).\n\n\tThis file is part of the Epeios framework.\n\n\tThe Epeios framework is free software: you can redistribute it and/or\n\tmodify it under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThe Epeios framework is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\tAffero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with the Epeios framework.  If not, see <http://www.gnu.org/licenses/>\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include \"rgstry.h\"\n\n#include \"err.h\"\n#include \"cio.h\"\n\nusing cio::CIn;\nusing cio::COut;\nusing cio::CErr;\n\nvoid Generic( int argc, char *argv[] )\n{\nqRH\nqRB\nqRR\nqRT\nqRE\n}\n\nint main( int argc, char *argv[] )\n{\nqRFH\nqRFB\n\tCOut << \"Test of library \" << RGSTRY_NAME << ' ' << __DATE__\" \"__TIME__\"\\n\";\n\nqRFR\nqRFT\nqRFE\n\treturn ERRExitValue;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĉ", "Copyright", "Ġ(", "C", ")", "Ġ1", "999", "ĠC", "la", "ude", "ĠSIM", "ON", "Ġ(", "http", "://", "q", "37", ".", "info", "/", "contact", "/).", "Ċ", "Ċ", "ĉ", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠE", "pe", "ios", "Ġframework", ".", "Ċ", "Ċ", "ĉ", "The", "ĠE", "pe", "ios", "Ġframework", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "ĉ", "modify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠA", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ċ", "ĉ", "published", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "Ċ", "ĉ", "License", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĉ", "The", "ĠE", "pe", "ios", "Ġframework", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĉ", "but", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĉ", "MER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "ĉ", "A", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĉ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠA", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĉ", "al", "ong", "Ġwith", "Ġthe", "ĠE", "pe", "ios", "Ġframework", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "rg", "stry", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "err", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "c", "io", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġc", "io", "::", "C", "In", ";", "Ċ", "using", "Ġc", "io", "::", "C", "Out", ";", "Ċ", "using", "Ġc", "io", "::", "C", "Err", ";", "Ċ", "Ċ", "void", "ĠGeneric", "(", "Ġint", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[]", "Ġ)", "Ċ", "{", "Ċ", "q", "RH", "Ċ", "q", "RB", "Ċ", "q", "RR", "Ċ", "q", "RT", "Ċ", "q", "RE", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[]", "Ġ)", "Ċ", "{", "Ċ", "q", "RF", "H", "Ċ", "q", "R", "FB", "Ċ", "ĉ", "C", "Out", "Ġ<<", "Ġ\"", "Test", "Ġof", "Ġlibrary", "Ġ\"", "Ġ<<", "ĠRG", "STR", "Y", "_", "NAME", "Ġ<<", "Ġ'", "Ġ'", "Ġ<<", "Ġ__", "DATE", "__", "\"", "Ġ\"__", "TIME", "__", "\"\\", "n", "\";", "Ċ", "Ċ", "q", "R", "FR", "Ċ", "q", "R", "FT", "Ċ", "q", "R", "FE", "Ċ", "ĉ", "return", "ĠERR", "Exit", "Value", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::113", "code": "#ifndef HIGHSCORE_HPP\r\n#define HIGHSCORE_HPP\r\n\r\n  #include <cassert>\r\n  #include <sstream>\r\n  #include \"framework.hpp\"\r\n\r\n  #include \"./config.hpp\"\r\n  #include \"./media.hpp\"\r\n\r\n  class Highscore\r\n  {\r\n    public:\r\n\r\n      Highscore();\r\n      ~Highscore();\r\n\r\n\r\n      /* Load/Save */\r\n        void load();\r\n        void save();\r\n\r\n\r\n      /* Access particular difficulties */\r\n        util::Highscore &getHighscore(LEVEL_DIFFICULTY difficulty);\r\n\r\n\r\n      /* Draw */\r\n        void draw();\r\n\r\n\r\n    private:\r\n\r\n      /* Data */\r\n        util::Timer timer;\r\n        util::Highscore highscore[LEVEL_DIFFICULTY_END];\r\n\r\n        double offset;\r\n        int haltstart;\r\n        int difficulty;\r\n        bool shifting;\r\n\r\n        struct\r\n        {\r\n          font::TtfLabel difficulty[LEVEL_DIFFICULTY_END];\r\n          font::TtfLabel place[3/*HIGHSCORE_PLACECOUNT*/];\r\n          font::TtfLabel score[LEVEL_DIFFICULTY_END][3/*HIGHSCORE_PLACECOUNT*/];\r\n          font::TtfLabel prescore[LEVEL_DIFFICULTY_END][3/*HIGHSCORE_PLACECOUNT*/];\r\n        }label;\r\n\r\n  };\r\n\r\n#endif // HIGHSCORE_HPP\r\n", "code_tokens": ["Ġ#", "ifndef", "ĠHIGH", "SCORE", "_", "HP", "P", "č", "Ċ", "#", "define", "ĠHIGH", "SCORE", "_", "HP", "P", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ#", "include", "Ġ<", "c", "assert", ">", "č", "Ċ", "Ġ", "Ġ#", "include", "Ġ<", "s", "stream", ">", "č", "Ċ", "Ġ", "Ġ#", "include", "Ġ\"", "framework", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ#", "include", "Ġ\"./", "config", ".", "hpp", "\"", "č", "Ċ", "Ġ", "Ġ#", "include", "Ġ\"./", "media", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "Ġ", "Ġclass", "ĠHigh", "score", "č", "Ċ", "Ġ", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġpublic", ":", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠ", "ĠHigh", "score", "();", "č", "Ċ", "ĠĠĠĠĠ", "Ġ~", "High", "score", "();", "č", "Ċ", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠ", "Ġ/*", "ĠLoad", "/", "Save", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġload", "();", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġsave", "();", "č", "Ċ", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠ", "Ġ/*", "ĠAccess", "Ġparticular", "Ġdifficult", "ies", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġutil", "::", "High", "score", "Ġ&", "get", "High", "score", "(", "LEVEL", "_", "DIFF", "IC", "UL", "TY", "Ġdifficulty", ");", "č", "Ċ", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠ", "Ġ/*", "ĠDraw", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġdraw", "();", "č", "Ċ", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġprivate", ":", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠ", "Ġ/*", "ĠData", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġutil", "::", "Timer", "Ġtimer", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġutil", "::", "High", "score", "Ġhigh", "score", "[", "LEVEL", "_", "DIFF", "IC", "UL", "TY", "_", "END", "];", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġoffset", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġhalt", "start", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġdifficulty", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġsh", "ifting", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstruct", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġfont", "::", "T", "tf", "Label", "Ġdifficulty", "[", "LEVEL", "_", "DIFF", "IC", "UL", "TY", "_", "END", "];", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġfont", "::", "T", "tf", "Label", "Ġplace", "[", "3", "/*", "HIGH", "SCORE", "_", "PLACE", "COUNT", "*/", "];", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġfont", "::", "T", "tf", "Label", "Ġscore", "[", "LEVEL", "_", "DIFF", "IC", "UL", "TY", "_", "END", "][", "3", "/*", "HIGH", "SCORE", "_", "PLACE", "COUNT", "*/", "];", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġfont", "::", "T", "tf", "Label", "Ġpres", "core", "[", "LEVEL", "_", "DIFF", "IC", "UL", "TY", "_", "END", "][", "3", "/*", "HIGH", "SCORE", "_", "PLACE", "COUNT", "*/", "];", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "label", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ};", "č", "Ċ", "č", "Ċ", "#", "endif", "Ġ//", "ĠHIGH", "SCORE", "_", "HP", "P", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::114", "code": "// LICENSE: (Please see the file COPYING for details)\n//\n// NUS - Nemesis Utilities System: A C++ application development framework \n// Copyright (C) 2006, 2007 Otavio Rodolfo Piske\n//\n//  This file is part of NUS\n//\n//  This library is free software; you can redistribute it and/or\n//  modify it under the terms of the GNU Lesser General Public\n//  License as published by the Free Software Foundation version 2.1\n//  of the License.\n//\n//  This library is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n//  Lesser General Public License for more details.\n//\n//  You should have received a copy of the GNU Lesser General Public\n//  License along with this library; if not, write to the Free Software\n//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n//\n#include \"nthread.h\"\n\n\nvoid *nthread_start_routine(void *data) { \n\tNThread *thread = static_cast<NThread *>(data);\n\t\n\tthread->threadStart();\n\n\treturn NULL;\n}\n\nNThread::NThread(void)\n\t: NObject()\n{\n\n}\n\n\nvoid NThread::threadCreate() {\n\tint ret = 0; \n\tpthread_t a_thread;\n\n\tret = pthread_create(&a_thread, NULL, nthread_start_routine, (void *) this);\n\t\n}\n", "code_tokens": ["Ġ//", "ĠLICENSE", ":", "Ġ(", "Please", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "Ġfor", "Ġdetails", ")", "Ċ", "//", "Ċ", "//", "ĠN", "US", "Ġ-", "ĠN", "em", "esis", "ĠUtilities", "ĠSystem", ":", "ĠA", "ĠC", "++", "Ġapplication", "Ġdevelopment", "Ġframework", "Ġ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", ",", "Ġ2007", "ĠO", "ta", "vio", "ĠR", "od", "ol", "fo", "ĠP", "is", "ke", "Ċ", "//", "Ċ", "//", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠN", "US", "Ċ", "//", "Ċ", "//", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "//", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "//", "Ġ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", "Ġversion", "Ġ2", ".", "1", "Ċ", "//", "Ġ", "Ġof", "Ġthe", "ĠLicense", ".", "Ċ", "//", "Ċ", "//", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "//", "Ġ", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "//", "Ġ", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "//", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", "Ġ", "ĠUSA", "Ċ", "//", "Ċ", "#", "include", "Ġ\"", "n", "thread", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "void", "Ġ*", "n", "thread", "_", "start", "_", "routine", "(", "void", "Ġ*", "data", ")", "Ġ{", "ĠĊ", "ĉ", "N", "Thread", "Ġ*", "thread", "Ġ=", "Ġstatic", "_", "cast", "<", "N", "Thread", "Ġ*>(", "data", ");", "Ċ", "ĉĊ", "ĉ", "thread", "->", "thread", "Start", "();", "Ċ", "Ċ", "ĉ", "return", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "N", "Thread", "::", "N", "Thread", "(", "void", ")", "Ċ", "ĉ", ":", "ĠN", "Object", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ċ", "void", "ĠN", "Thread", "::", "thread", "Create", "()", "Ġ{", "Ċ", "ĉ", "int", "Ġret", "Ġ=", "Ġ0", ";", "ĠĊ", "ĉ", "pthread", "_", "t", "Ġa", "_", "thread", ";", "Ċ", "Ċ", "ĉ", "ret", "Ġ=", "Ġpthread", "_", "create", "(&", "a", "_", "thread", ",", "ĠNULL", ",", "Ġn", "thread", "_", "start", "_", "routine", ",", "Ġ(", "void", "Ġ*)", "Ġthis", ");", "Ċ", "ĉ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::115", "code": "#include <QtGui>\n\n#include \"btglobal.h\"\n#include \"btqlistdelegate.h\"\n//#include <QMetaType>\n\nbtQListDeletgate::btQListDeletgate(QObject *parent)\n: QItemDelegate(parent)\n{\n}\n\nQWidget *btQListDeletgate::createEditor(QWidget *parent, const QStyleOptionViewItem &option, const QModelIndex &index) const\n{\n    //qRegisterMetaType<btChildWeights>(\"btChildWeights\");\n\t//qRegisterMetaType<btParallelConditions>(\"btParallelConditions\");\n    \n    QComboBox *comboBox = new QComboBox(parent);\n    comboBox->addItem(\"int\", QVariant(\"int\"));\n    comboBox->addItem(\"QString\", QVariant(\"QString\"));\n    comboBox->addItem(\"double\", QVariant(\"double\"));\n    comboBox->addItem(\"QVariantList\", QVariant(\"QVariantList\"));\n    //comboBox->addItem(\"btChildWeights\", QVariant(\"btChildWeights\"));\n    comboBox->setCurrentIndex(comboBox->findData(index.data()));\n    return comboBox;\n}\n\nvoid btQListDeletgate::setEditorData(QWidget *editor, const QModelIndex &index) const\n{\n    QString value = index.model()->data(index, Qt::EditRole).toString();\n    \n    QComboBox *comboBox = static_cast<QComboBox*>(editor);\n    comboBox->setCurrentIndex(comboBox->findText(value));//comboBox->findData(value));\n}\n\nvoid btQListDeletgate::setModelData(QWidget *editor, QAbstractItemModel *model, const QModelIndex &index) const\n{\n    QComboBox *comboBox = static_cast<QComboBox*>(editor);\n    QString value = comboBox->currentText();\n    model->setData(index, value, Qt::EditRole);\n}\n\nvoid btQListDeletgate::updateEditorGeometry(QWidget *editor, const QStyleOptionViewItem &option, const QModelIndex &/* index */) const\n{\n    editor->setGeometry(option.rect);\n}\n\n#include \"btqlistdelegate.moc\"\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Qt", "Gui", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "bt", "global", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "bt", "q", "list", "delegate", ".", "h", "\"", "Ċ", "//#", "include", "Ġ<", "Q", "MetaType", ">", "Ċ", "Ċ", "bt", "QList", "De", "let", "gate", "::", "bt", "QList", "De", "let", "gate", "(", "QObject", "Ġ*", "parent", ")", "Ċ", ":", "ĠQ", "Item", "Delegate", "(", "parent", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "QWidget", "Ġ*", "bt", "QList", "De", "let", "gate", "::", "create", "Editor", "(", "QWidget", "Ġ*", "parent", ",", "Ġconst", "ĠQStyleOption", "ViewItem", "Ġ&", "option", ",", "Ġconst", "ĠQModelIndex", "Ġ&", "index", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "q", "Register", "MetaType", "<", "bt", "Child", "Weights", ">(\"", "bt", "Child", "Weights", "\");", "Ċ", "ĉ", "//", "q", "Register", "MetaType", "<", "bt", "Parallel", "Conditions", ">(\"", "bt", "Parallel", "Conditions", "\");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "ĠQ", "ComboBox", "Ġ*", "comboBox", "Ġ=", "Ġnew", "ĠQ", "ComboBox", "(", "parent", ");", "Ċ", "ĠĠĠ", "ĠcomboBox", "->", "addItem", "(\"", "int", "\",", "ĠQVariant", "(\"", "int", "\"));", "Ċ", "ĠĠĠ", "ĠcomboBox", "->", "addItem", "(\"", "QString", "\",", "ĠQVariant", "(\"", "QString", "\"));", "Ċ", "ĠĠĠ", "ĠcomboBox", "->", "addItem", "(\"", "double", "\",", "ĠQVariant", "(\"", "double", "\"));", "Ċ", "ĠĠĠ", "ĠcomboBox", "->", "addItem", "(\"", "QVariant", "List", "\",", "ĠQVariant", "(\"", "QVariant", "List", "\"));", "Ċ", "ĠĠĠ", "Ġ//", "comboBox", "->", "addItem", "(\"", "bt", "Child", "Weights", "\",", "ĠQVariant", "(\"", "bt", "Child", "Weights", "\"));", "Ċ", "ĠĠĠ", "ĠcomboBox", "->", "setCurrentIndex", "(", "comboBox", "->", "find", "Data", "(", "index", ".", "data", "()));", "Ċ", "ĠĠĠ", "Ġreturn", "ĠcomboBox", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbt", "QList", "De", "let", "gate", "::", "set", "Editor", "Data", "(", "QWidget", "Ġ*", "editor", ",", "Ġconst", "ĠQModelIndex", "Ġ&", "index", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQString", "Ġvalue", "Ġ=", "Ġindex", ".", "model", "()->", "data", "(", "index", ",", "ĠQt", "::", "Edit", "Role", ").", "toString", "();", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "ĠQ", "ComboBox", "Ġ*", "comboBox", "Ġ=", "Ġstatic", "_", "cast", "<", "Q", "ComboBox", "*>(", "editor", ");", "Ċ", "ĠĠĠ", "ĠcomboBox", "->", "setCurrentIndex", "(", "comboBox", "->", "find", "Text", "(", "value", "));", "//", "comboBox", "->", "find", "Data", "(", "value", "));", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbt", "QList", "De", "let", "gate", "::", "setModel", "Data", "(", "QWidget", "Ġ*", "editor", ",", "ĠQAbstract", "Item", "Model", "Ġ*", "model", ",", "Ġconst", "ĠQModelIndex", "Ġ&", "index", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "ComboBox", "Ġ*", "comboBox", "Ġ=", "Ġstatic", "_", "cast", "<", "Q", "ComboBox", "*>(", "editor", ");", "Ċ", "ĠĠĠ", "ĠQString", "Ġvalue", "Ġ=", "ĠcomboBox", "->", "currentText", "();", "Ċ", "ĠĠĠ", "Ġmodel", "->", "setData", "(", "index", ",", "Ġvalue", ",", "ĠQt", "::", "Edit", "Role", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbt", "QList", "De", "let", "gate", "::", "update", "Editor", "Geometry", "(", "QWidget", "Ġ*", "editor", ",", "Ġconst", "ĠQStyleOption", "ViewItem", "Ġ&", "option", ",", "Ġconst", "ĠQModelIndex", "Ġ&", "/*", "Ġindex", "Ġ*/)", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġeditor", "->", "set", "Geometry", "(", "option", ".", "rect", ");", "Ċ", "}", "Ċ", "Ċ", "#", "include", "Ġ\"", "bt", "q", "list", "delegate", ".", "m", "oc", "\"", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::116", "code": "/* optiondialog.hpp\n *\n * Copyright (C) 2010 Martin Skowronski\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 2 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along with\n * this program; if not, write to the Free Software Foundation, Inc., 51\n * Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n \n#ifndef OPTIONDIALOG_HPP\n#define OPTIONDIALOG_HPP\n\n#include <QDialog>\n\nnamespace Ui {\n    class OptionDialog;\n}\n\nclass OptionDialog : public QDialog\n{\n    Q_OBJECT\n\npublic:\n    explicit OptionDialog(QWidget *parent = 0);\n    ~OptionDialog();\n\nprivate:\n    Ui::OptionDialog *ui;\n};\n\n#endif // OPTIONDIALOG_HPP\n", "code_tokens": ["Ġ/*", "Ġoption", "dialog", ".", "hpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠM", "art", "in", "ĠSk", "ow", "ron", "ski", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ċ", "Ġ*", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "Ċ", "Ġ*", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "Ġ*", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "Ċ", "Ġ*", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "Ċ", "Ġ*", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ċ", "Ġ*", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ġwith", "Ċ", "Ġ*", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "Ċ", "Ġ*", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "Ġ*/", "Ċ", "Ġ", "Ċ", "#", "ifndef", "ĠOPTION", "DIALOG", "_", "HP", "P", "Ċ", "#", "define", "ĠOPTION", "DIALOG", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Dialog", ">", "Ċ", "Ċ", "namespace", "ĠUi", "Ġ{", "Ċ", "ĠĠĠ", "Ġclass", "ĠOption", "Dialog", ";", "Ċ", "}", "Ċ", "Ċ", "class", "ĠOption", "Dialog", "Ġ:", "Ġpublic", "ĠQDialog", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġexplicit", "ĠOption", "Dialog", "(", "QWidget", "Ġ*", "parent", "Ġ=", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġ~", "Option", "Dialog", "();", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "ĠUi", "::", "Option", "Dialog", "Ġ*", "ui", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠOPTION", "DIALOG", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::117", "code": "// Copyright Benoit Blanchon 2014-2015\r\n// MIT License\r\n//\r\n// Arduino JSON library\r\n// https://github.com/bblanchon/ArduinoJson\r\n\r\n#pragma once\r\n\r\n#include \"../Arduino/Print.hpp\"\r\n\r\nnamespace ArduinoJson {\r\nnamespace Internals {\r\n\r\nclass Encoding {\r\n public:\r\n  // Optimized for code size on a 8-bit AVR\r\n  static char escapeChar(char c) {\r\n    const char *p = _escapeTable;\r\n    while (p[0] && p[1] != c) {\r\n      p += 2;\r\n    }\r\n    return p[0];\r\n  }\r\n\r\n  // Optimized for code size on a 8-bit AVR\r\n  static char unescapeChar(char c) {\r\n    const char *p = _escapeTable + 4;\r\n    for (;;) {\r\n      if (p[0] == '\\0') return c;\r\n      if (p[0] == c) return p[1];\r\n      p += 2;\r\n    }\r\n  }\r\n\r\nprivate:\r\n\tstatic const char _escapeTable[];\r\n};\r\n}\r\n}\r\n", "code_tokens": ["Ġ//", "ĠCopyright", "ĠB", "eno", "it", "ĠBl", "anch", "on", "Ġ2014", "-", "2015", "č", "Ċ", "//", "ĠMIT", "ĠLicense", "č", "Ċ", "//", "č", "Ċ", "//", "ĠAr", "duino", "ĠJSON", "Ġlibrary", "č", "Ċ", "//", "Ġhttps", "://", "github", ".", "com", "/", "bb", "l", "anch", "on", "/", "Ar", "duino", "Json", "č", "Ċ", "č", "Ċ", "#", "pragma", "Ġonce", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"../", "Ar", "duino", "/", "Print", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "namespace", "ĠAr", "duino", "Json", "Ġ{", "č", "Ċ", "namespace", "ĠInternal", "s", "Ġ{", "č", "Ċ", "č", "Ċ", "class", "ĠEncoding", "Ġ{", "č", "Ċ", "Ġpublic", ":", "č", "Ċ", "Ġ", "Ġ//", "ĠOpt", "imized", "Ġfor", "Ġcode", "Ġsize", "Ġon", "Ġa", "Ġ8", "-", "bit", "ĠA", "VR", "č", "Ċ", "Ġ", "Ġstatic", "Ġchar", "Ġescape", "Char", "(", "char", "Ġc", ")", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġconst", "Ġchar", "Ġ*", "p", "Ġ=", "Ġ_", "escape", "Table", ";", "č", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "p", "[", "0", "]", "Ġ&&", "Ġp", "[", "1", "]", "Ġ!=", "Ġc", ")", "Ġ{", "č", "Ċ", "ĠĠĠĠĠ", "Ġp", "Ġ+=", "Ġ2", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġp", "[", "0", "];", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ//", "ĠOpt", "imized", "Ġfor", "Ġcode", "Ġsize", "Ġon", "Ġa", "Ġ8", "-", "bit", "ĠA", "VR", "č", "Ċ", "Ġ", "Ġstatic", "Ġchar", "Ġunescape", "Char", "(", "char", "Ġc", ")", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġconst", "Ġchar", "Ġ*", "p", "Ġ=", "Ġ_", "escape", "Table", "Ġ+", "Ġ4", ";", "č", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(;;)", "Ġ{", "č", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "p", "[", "0", "]", "Ġ==", "Ġ'\\", "0", "')", "Ġreturn", "Ġc", ";", "č", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "p", "[", "0", "]", "Ġ==", "Ġc", ")", "Ġreturn", "Ġp", "[", "1", "];", "č", "Ċ", "ĠĠĠĠĠ", "Ġp", "Ġ+=", "Ġ2", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "private", ":", "č", "Ċ", "ĉ", "static", "Ġconst", "Ġchar", "Ġ_", "escape", "Table", "[];", "č", "Ċ", "};", "č", "Ċ", "}", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::118", "code": "#include \"rendertarget.h\"\n#include <system/engine.h>\n#include <renderer/renderer.h>\n#include <renderer/forms.h>\n\nusing namespace CGE;\n\nRenderTarget* RenderTarget::mCurrTarget = NULL;\n\nvoid RenderTarget::drawFullscreen(bool transform){\n  Renderer* rend = Engine::instance()->getRenderer();\n  if (transform){\n    rend->ortho(1, 1);\n    rend->resetModelView();\n  }\n  rend->enableDepthTest(false);\n  CGE::Forms& forms = *CGE::Engine::instance()->getForms();\n  forms.activateQuad();\n  rend->enableTexturing(true);\n  rend->setColor(1, 1, 1, 1);\n  if (transform){\n    if (rend->getRenderType() != DirectX){\n      rend->switchMatrixStack(CGE::MatTexture);\n      rend->resetModelView();\n      rend->scale(1, -1, 1);\n    }\n  }\n  for (unsigned i = 0; i < getNumTextures(); ++i){\n    getTexture(i)->activate(i);\n  }\n  forms.drawQuad(Vec2f(), Vec2f(1, 1));\n  if (transform){\n    if (rend->getRenderType() != DirectX){\n      rend->resetModelView();\n      rend->switchMatrixStack(CGE::Modelview);\n    }\n  }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "rend", "ert", "arget", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "system", "/", "engine", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "renderer", "/", "renderer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "renderer", "/", "forms", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠC", "GE", ";", "Ċ", "Ċ", "RenderTarget", "*", "ĠRender", "Target", "::", "m", "Curr", "Target", "Ġ=", "ĠNULL", ";", "Ċ", "Ċ", "void", "ĠRender", "Target", "::", "draw", "Fullscreen", "(", "bool", "Ġtransform", "){", "Ċ", "Ġ", "ĠRenderer", "*", "Ġrend", "Ġ=", "ĠEngine", "::", "instance", "()->", "get", "Renderer", "();", "Ċ", "Ġ", "Ġif", "Ġ(", "transform", "){", "Ċ", "ĠĠĠ", "Ġrend", "->", "orth", "o", "(", "1", ",", "Ġ1", ");", "Ċ", "ĠĠĠ", "Ġrend", "->", "reset", "Model", "View", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġrend", "->", "enable", "Depth", "Test", "(", "false", ");", "Ċ", "Ġ", "ĠC", "GE", "::", "Forms", "&", "Ġforms", "Ġ=", "Ġ*", "C", "GE", "::", "Engine", "::", "instance", "()->", "get", "Forms", "();", "Ċ", "Ġ", "Ġforms", ".", "activate", "Quad", "();", "Ċ", "Ġ", "Ġrend", "->", "enable", "Text", "uring", "(", "true", ");", "Ċ", "Ġ", "Ġrend", "->", "setColor", "(", "1", ",", "Ġ1", ",", "Ġ1", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "transform", "){", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "rend", "->", "get", "Render", "Type", "()", "Ġ!=", "ĠDirect", "X", "){", "Ċ", "ĠĠĠĠĠ", "Ġrend", "->", "switch", "Matrix", "Stack", "(", "C", "GE", "::", "Mat", "Texture", ");", "Ċ", "ĠĠĠĠĠ", "Ġrend", "->", "reset", "Model", "View", "();", "Ċ", "ĠĠĠĠĠ", "Ġrend", "->", "scale", "(", "1", ",", "Ġ-", "1", ",", "Ġ1", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠgetNum", "Textures", "();", "Ġ++", "i", "){", "Ċ", "ĠĠĠ", "Ġget", "Texture", "(", "i", ")->", "activate", "(", "i", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġforms", ".", "draw", "Quad", "(", "Vec", "2", "f", "(),", "ĠVec", "2", "f", "(", "1", ",", "Ġ1", "));", "Ċ", "Ġ", "Ġif", "Ġ(", "transform", "){", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "rend", "->", "get", "Render", "Type", "()", "Ġ!=", "ĠDirect", "X", "){", "Ċ", "ĠĠĠĠĠ", "Ġrend", "->", "reset", "Model", "View", "();", "Ċ", "ĠĠĠĠĠ", "Ġrend", "->", "switch", "Matrix", "Stack", "(", "C", "GE", "::", "Model", "view", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::119", "code": "#include \"GAPhysicsBaseTemp.h\"\n\n\n//------------------------------GAPhysicsBase------------------------------------------\nGAPhysicsBase::GAPhysicsBase()\n{\n\n}\n\nint GAPhysicsBase::testCollideWith(GAPhysicsBase* object2,GAVector3& collidePoint)\n{\n\treturn 0;\n}\n\n\n//--------------------------------GALine-----------------------------------------------\nGALine::GALine()\n{\n\tp1=GAVector3(0,0,0);\n\tp2=GAVector3(1,1,1);\n}\n\nGALine::GALine(GAVector3 p1_,GAVector3 p2_)\n{\n\tp1=p1_;\n\tp2=p2_;\n}\n\n\n//-------------------------------GASegment---------------------------------------------\nGASegment::GASegment()\n{\n\tpstart=GAVector3(0,0,0);\n\tpend=GAVector3(1,1,1);\n}\nGASegment::GASegment(GAVector3 pstart_,GAVector3 pend_)\n{\n\tpstart=pstart_;\n\tpend=pend_;\n}\n\n\n//-------------------------------GAPlane-----------------------------------------------\nGAPlane::GAPlane()\n{\n\n}\n\n\nint GAPlane::testCollideWith(GAPhysicsBase* object2,GAVector3& collidePoint)\n{\n\treturn 0;\n}\n\n//-----------------------------------GACube--------------------------------------------\n\nGACube::GACube()\n{\n\n}\n\nint GACube::testCollideWith(GAPhysicsBase* object2,GAVector3& collidePoint)\n{\n\treturn 0;\n}\n\nint GACube::testCollideWithCube(GACube* object2,GAVector3& collidePoint)\n{\n\treturn 0;\n}\n\n//--------------------------------GACylinder-------------------------------------------\n\n\n\n//--------------------------------GASphere---------------------------------------------\n\n\n\n//--------------------------------GACapsule--------------------------------------------", "code_tokens": ["Ġ#", "include", "Ġ\"", "GAP", "hys", "ics", "Base", "Temp", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "//", "------------------------------", "GAP", "hys", "ics", "Base", "----------------------------------------", "--", "Ċ", "GAP", "hys", "ics", "Base", "::", "GAP", "hys", "ics", "Base", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "int", "ĠG", "AP", "hys", "ics", "Base", "::", "test", "Collide", "With", "(", "GAP", "hys", "ics", "Base", "*", "Ġobject", "2", ",", "GA", "Vector", "3", "&", "Ġcollide", "Point", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "--------------------------------", "G", "AL", "ine", "----------------------------------------", "-------", "Ċ", "G", "AL", "ine", "::", "G", "AL", "ine", "()", "Ċ", "{", "Ċ", "ĉ", "p", "1", "=", "GA", "Vector", "3", "(", "0", ",", "0", ",", "0", ");", "Ċ", "ĉ", "p", "2", "=", "GA", "Vector", "3", "(", "1", ",", "1", ",", "1", ");", "Ċ", "}", "Ċ", "Ċ", "G", "AL", "ine", "::", "G", "AL", "ine", "(", "GA", "Vector", "3", "Ġp", "1", "_,", "GA", "Vector", "3", "Ġp", "2", "_)", "Ċ", "{", "Ċ", "ĉ", "p", "1", "=", "p", "1", "_;", "Ċ", "ĉ", "p", "2", "=", "p", "2", "_;", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "------------------------", "-------", "GA", "Segment", "----------------------------------------", "-----", "Ċ", "GA", "Segment", "::", "GA", "Segment", "()", "Ċ", "{", "Ċ", "ĉ", "p", "start", "=", "GA", "Vector", "3", "(", "0", ",", "0", ",", "0", ");", "Ċ", "ĉ", "pend", "=", "GA", "Vector", "3", "(", "1", ",", "1", ",", "1", ");", "Ċ", "}", "Ċ", "GA", "Segment", "::", "GA", "Segment", "(", "GA", "Vector", "3", "Ġp", "start", "_,", "GA", "Vector", "3", "Ġpend", "_)", "Ċ", "{", "Ċ", "ĉ", "p", "start", "=", "p", "start", "_;", "Ċ", "ĉ", "pend", "=", "pend", "_;", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "------------------------", "-------", "GAP", "lane", "----------------------------------------", "-------", "Ċ", "GAP", "lane", "::", "GAP", "lane", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ċ", "int", "ĠG", "AP", "lane", "::", "test", "Collide", "With", "(", "GAP", "hys", "ics", "Base", "*", "Ġobject", "2", ",", "GA", "Vector", "3", "&", "Ġcollide", "Point", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "//", "--------------------------------", "---", "GAC", "ube", "----------------------------------------", "----", "Ċ", "Ċ", "GAC", "ube", "::", "GAC", "ube", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "int", "ĠG", "AC", "ube", "::", "test", "Collide", "With", "(", "GAP", "hys", "ics", "Base", "*", "Ġobject", "2", ",", "GA", "Vector", "3", "&", "Ġcollide", "Point", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠG", "AC", "ube", "::", "test", "Collide", "With", "Cube", "(", "GAC", "ube", "*", "Ġobject", "2", ",", "GA", "Vector", "3", "&", "Ġcollide", "Point", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "//", "--------------------------------", "GAC", "yl", "inder", "----------------------------------------", "---", "Ċ", "Ċ", "Ċ", "Ċ", "//", "--------------------------------", "G", "AS", "p", "here", "----------------------------------------", "-----", "Ċ", "Ċ", "Ċ", "Ċ", "//", "--------------------------------", "GAC", "aps", "ule", "----------------------------------------", "----"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::120", "code": "/*\n * Copyright 2016 - 2021 Marcin Matula\n *\n * This file is part of Oap.\n *\n * Oap is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Oap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Oap.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"gtest/gtest.h\"\n#include \"oapHostMemoryApi.h\"\n\nclass OapMemoryApiTests : public testing::Test\n{\n public:\n\n  virtual void SetUp() {}\n\n  virtual void TearDown() {}\n};\n\nTEST_F(OapMemoryApiTests, Test_1)\n{\n  oap::Memory memory = oap::host::NewMemory ({1, 1});\n  oap::Memory memory1 = oap::host::ReuseMemory (memory);\n  oap::Memory memory2 = oap::host::ReuseMemory (memory);\n\n  oap::host::DeleteMemory (memory);\n  oap::host::DeleteMemory (memory1);\n  oap::host::DeleteMemory (memory2);\n}\n\nTEST_F(OapMemoryApiTests, Test_2)\n{\n  oap::Memory memory = oap::host::NewMemoryWithValues ({2, 1}, 2.f);\n  oap::host::DeleteMemory (memory);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2016", "Ġ-", "Ġ2", "021", "ĠM", "arc", "in", "ĠMat", "ula", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠO", "ap", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠO", "ap", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠO", "ap", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠO", "ap", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "gtest", "/", "gtest", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "o", "ap", "Host", "Memory", "Api", ".", "h", "\"", "Ċ", "Ċ", "class", "ĠO", "ap", "Memory", "Api", "Tests", "Ġ:", "Ġpublic", "Ġtesting", "::", "Test", "Ċ", "{", "Ċ", "Ġpublic", ":", "Ċ", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "ĠSetUp", "()", "Ġ{}", "Ċ", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "ĠT", "earDown", "()", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "TEST", "_", "F", "(", "O", "ap", "Memory", "Api", "Tests", ",", "ĠTest", "_", "1", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "ap", "::", "Memory", "Ġmemory", "Ġ=", "Ġo", "ap", "::", "host", "::", "New", "Memory", "Ġ({", "1", ",", "Ġ1", "});", "Ċ", "Ġ", "Ġo", "ap", "::", "Memory", "Ġmemory", "1", "Ġ=", "Ġo", "ap", "::", "host", "::", "Reuse", "Memory", "Ġ(", "memory", ");", "Ċ", "Ġ", "Ġo", "ap", "::", "Memory", "Ġmemory", "2", "Ġ=", "Ġo", "ap", "::", "host", "::", "Reuse", "Memory", "Ġ(", "memory", ");", "Ċ", "Ċ", "Ġ", "Ġo", "ap", "::", "host", "::", "Delete", "Memory", "Ġ(", "memory", ");", "Ċ", "Ġ", "Ġo", "ap", "::", "host", "::", "Delete", "Memory", "Ġ(", "memory", "1", ");", "Ċ", "Ġ", "Ġo", "ap", "::", "host", "::", "Delete", "Memory", "Ġ(", "memory", "2", ");", "Ċ", "}", "Ċ", "Ċ", "TEST", "_", "F", "(", "O", "ap", "Memory", "Api", "Tests", ",", "ĠTest", "_", "2", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "ap", "::", "Memory", "Ġmemory", "Ġ=", "Ġo", "ap", "::", "host", "::", "New", "Memory", "With", "Values", "Ġ({", "2", ",", "Ġ1", "},", "Ġ2", ".", "f", ");", "Ċ", "Ġ", "Ġo", "ap", "::", "host", "::", "Delete", "Memory", "Ġ(", "memory", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::121", "code": "// https://github.com/KubaO/stackoverflown/tree/master/questions/html-get-24965972\n#include <QtNetwork>\n#include <functional>\n\nvoid htmlGet(const QUrl &url, const std::function<void(const QString&)> &fun) {\n   QScopedPointer<QNetworkAccessManager> manager(new QNetworkAccessManager);\n   QNetworkReply *response = manager->get(QNetworkRequest(QUrl(url)));\n   QObject::connect(response, &QNetworkReply::finished, [response, fun]{\n      response->deleteLater();\n      response->manager()->deleteLater();\n      if (response->error() != QNetworkReply::NoError) return;\n      auto const contentType =\n            response->header(QNetworkRequest::ContentTypeHeader).toString();\n      static QRegularExpression re(\"charset=([!-~]+)\");\n      auto const match = re.match(contentType);\n      if (!match.hasMatch() || 0 != match.captured(1).compare(\"utf-8\", Qt::CaseInsensitive)) {\n         qWarning() << \"Content charsets other than utf-8 are not implemented yet:\" << contentType;\n         return;\n      }\n      auto const html = QString::fromUtf8(response->readAll());\n      fun(html); // do something with the data\n   }) && manager.take();\n}\n\nint main(int argc, char *argv[])\n{\n   QCoreApplication app(argc, argv);\n   htmlGet({\"http://www.google.com\"}, [](const QString &body){ qDebug() << body; qApp->quit(); });\n   return app.exec();\n}\n", "code_tokens": ["Ġ//", "Ġhttps", "://", "github", ".", "com", "/", "K", "ub", "a", "O", "/", "stackoverflow", "n", "/", "tree", "/", "master", "/", "questions", "/", "html", "-", "get", "-", "24", "96", "59", "72", "Ċ", "#", "include", "Ġ<", "Qt", "Network", ">", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "Ċ", "void", "Ġhtml", "Get", "(", "const", "ĠQUrl", "Ġ&", "url", ",", "Ġconst", "Ġstd", "::", "function", "<", "void", "(", "const", "ĠQString", "&", ")>", "Ġ&", "fun", ")", "Ġ{", "Ċ", "ĠĠ", "ĠQ", "Scoped", "Pointer", "<", "QNetwork", "Access", "Manager", ">", "Ġmanager", "(", "new", "ĠQNetwork", "Access", "Manager", ");", "Ċ", "ĠĠ", "ĠQNetwork", "Reply", "Ġ*", "response", "Ġ=", "Ġmanager", "->", "get", "(", "QNetwork", "Request", "(", "QUrl", "(", "url", ")));", "Ċ", "ĠĠ", "ĠQObject", "::", "connect", "(", "response", ",", "Ġ&", "QNetwork", "Reply", "::", "finished", ",", "Ġ[", "response", ",", "Ġfun", "]{", "Ċ", "ĠĠĠĠĠ", "Ġresponse", "->", "delete", "Later", "();", "Ċ", "ĠĠĠĠĠ", "Ġresponse", "->", "manager", "()->", "delete", "Later", "();", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "response", "->", "error", "()", "Ġ!=", "ĠQNetwork", "Reply", "::", "NoError", ")", "Ġreturn", ";", "Ċ", "ĠĠĠĠĠ", "Ġauto", "Ġconst", "ĠcontentType", "Ġ=", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġresponse", "->", "header", "(", "QNetwork", "Request", "::", "ContentType", "Header", ").", "toString", "();", "Ċ", "ĠĠĠĠĠ", "Ġstatic", "ĠQ", "RegularExpression", "Ġre", "(\"", "charset", "=", "([", "!", "-", "~", "]+", ")\");", "Ċ", "ĠĠĠĠĠ", "Ġauto", "Ġconst", "Ġmatch", "Ġ=", "Ġre", ".", "match", "(", "contentType", ");", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(!", "match", ".", "has", "Match", "()", "Ġ||", "Ġ0", "Ġ!=", "Ġmatch", ".", "captured", "(", "1", ").", "compare", "(\"", "utf", "-", "8", "\",", "ĠQt", "::", "CaseInsensitive", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĠqWarning", "()", "Ġ<<", "Ġ\"", "Content", "Ġchar", "sets", "Ġother", "Ġthan", "Ġutf", "-", "8", "Ġare", "Ġnot", "Ġimplemented", "Ġyet", ":\"", "Ġ<<", "ĠcontentType", ";", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġauto", "Ġconst", "Ġhtml", "Ġ=", "ĠQString", "::", "fromUtf", "8", "(", "response", "->", "readAll", "());", "Ċ", "ĠĠĠĠĠ", "Ġfun", "(", "html", ");", "Ġ//", "Ġdo", "Ġsomething", "Ġwith", "Ġthe", "Ġdata", "Ċ", "ĠĠ", "Ġ})", "Ġ&&", "Ġmanager", ".", "take", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠ", "ĠQCoreApplication", "Ġapp", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠ", "Ġhtml", "Get", "({\"", "http", "://", "www", ".", "google", ".", "com", "\"},", "Ġ[](", "const", "ĠQString", "Ġ&", "body", "){", "ĠqDebug", "()", "Ġ<<", "Ġbody", ";", "Ġq", "App", "->", "quit", "();", "Ġ});", "Ċ", "ĠĠ", "Ġreturn", "Ġapp", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::122", "code": "#include \"serverBase.h\"\n\nint main(int argc, char** argv)\n{\n   unsigned portNumber = 12943;\n   if(argc >= 2)\n   {\n      portNumber = atoi(argv[1]);\n   }\n   try\n   {\n      asio::io_service io_service;\n      asio::ip::tcp::endpoint endpoint(asio::ip::tcp::v4(), portNumber);\n      TCPServer server(io_service, endpoint);\n      io_service.run();\n   }\n   catch (std::exception& e)\n   {\n      std::cerr << e.what() << std::endl;\n   }\n\n   return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "server", "Base", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġunsigned", "Ġport", "Number", "Ġ=", "Ġ129", "43", ";", "Ċ", "ĠĠ", "Ġif", "(", "argc", "Ġ>=", "Ġ2", ")", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġport", "Number", "Ġ=", "Ġatoi", "(", "argv", "[", "1", "]);", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġtry", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġasio", "::", "io", "_", "service", "Ġio", "_", "service", ";", "Ċ", "ĠĠĠĠĠ", "Ġasio", "::", "ip", "::", "tcp", "::", "endpoint", "Ġendpoint", "(", "asio", "::", "ip", "::", "tcp", "::", "v", "4", "(),", "Ġport", "Number", ");", "Ċ", "ĠĠĠĠĠ", "ĠTCP", "Server", "Ġserver", "(", "io", "_", "service", ",", "Ġendpoint", ");", "Ċ", "ĠĠĠĠĠ", "Ġio", "_", "service", ".", "run", "();", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġcatch", "Ġ(", "std", "::", "exception", "&", "Ġe", ")", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġe", ".", "what", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::123", "code": "#ifndef __NETWORKBALANCER_HPP\n#define __NETWORKBALANCER_HPP\n\n#include <stdlib.h>\n\nnamespace Network\n{\n    class NetworkBalancer\n    {\n    public:\n\n        /**\n         * @brief NetworkBalancer Class constructor\n         */\n        NetworkBalancer();\n\n        /**\n         * @brief sendTroughBalancer Sends a buffer through an automatically chosen output channel,\n         * trying to balance the output\n         * @param Buffer Reference to buffer to be sent\n         * @param length Length of buffer\n         * @return Output channel chosen\n         */\n        int sendTroughBalancer( const char *Buffer, int length );\n\n        /* @brief Total number of output channels */\n        const static int MAX_OUTPUTS = 4;\n\n    private:\n\n        /**\n         * @brief calculateOutputChannel Calculates an output channel following the strategy\n         * stated in this class\n         * @return Calculated output channel, a number between 1 and 4\n         */\n        int calculateOutputChannel();\n\n    private:\n\n        /**\n         * @brief The BALANCE_STRATEGY enum Enumerated class containing the strategies that can be\n         * chosen for this class to produce the output\n         */\n        enum class BALANCE_STRATEGY { ROUNDROBIN4, RANDOM };\n\n        /* @brief theLastOutput Contains the last chosen channel */\n        int theLastOutput;\n\n        /* @brief theChosenStrategy Currently chosen strategy  */\n        BALANCE_STRATEGY theChosenStrategy;\n    };\n}\n\n#endif // __NETWORKBALANCER_HPP\n", "code_tokens": ["Ġ#", "ifndef", "Ġ__", "NETWORK", "BAL", "AN", "C", "ER", "_", "HP", "P", "Ċ", "#", "define", "Ġ__", "NETWORK", "BAL", "AN", "C", "ER", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "Ċ", "namespace", "ĠNetwork", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclass", "ĠNetwork", "Balancer", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġ@", "brief", "ĠNetwork", "Balancer", "ĠClass", "Ġconstructor", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠĠĠĠĠ", "ĠNetwork", "Balancer", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġ@", "brief", "Ġsend", "T", "rough", "Balancer", "ĠSends", "Ġa", "Ġbuffer", "Ġthrough", "Ġan", "Ġautomatically", "Ġchosen", "Ġoutput", "Ġchannel", ",", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġtrying", "Ġto", "Ġbalance", "Ġthe", "Ġoutput", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġ@", "param", "ĠBuffer", "ĠReference", "Ġto", "Ġbuffer", "Ġto", "Ġbe", "Ġsent", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġ@", "param", "Ġlength", "ĠLength", "Ġof", "Ġbuffer", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġ@", "return", "ĠOutput", "Ġchannel", "Ġchosen", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġsend", "T", "rough", "Balancer", "(", "Ġconst", "Ġchar", "Ġ*", "Buffer", ",", "Ġint", "Ġlength", "Ġ);", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "Ġ@", "brief", "ĠTotal", "Ġnumber", "Ġof", "Ġoutput", "Ġchannels", "Ġ*/", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstatic", "Ġint", "ĠMAX", "_", "OUTPUT", "S", "Ġ=", "Ġ4", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġ@", "brief", "Ġcalculate", "Output", "Channel", "ĠCalculates", "Ġan", "Ġoutput", "Ġchannel", "Ġfollowing", "Ġthe", "Ġstrategy", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġst", "ated", "Ġin", "Ġthis", "Ġclass", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġ@", "return", "ĠCalcul", "ated", "Ġoutput", "Ġchannel", ",", "Ġa", "Ġnumber", "Ġbetween", "Ġ1", "Ġand", "Ġ4", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġcalculate", "Output", "Channel", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġ@", "brief", "ĠThe", "ĠB", "AL", "ANCE", "_", "STR", "ATE", "GY", "Ġenum", "Ġ", "Enumer", "ated", "Ġclass", "Ġcontaining", "Ġthe", "Ġstr", "ategies", "Ġthat", "Ġcan", "Ġbe", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġchosen", "Ġfor", "Ġthis", "Ġclass", "Ġto", "Ġproduce", "Ġthe", "Ġoutput", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠĠĠĠĠ", "Ġenum", "Ġclass", "ĠB", "AL", "ANCE", "_", "STR", "ATE", "GY", "Ġ{", "ĠROUND", "RO", "BIN", "4", ",", "ĠRANDOM", "Ġ};", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "Ġ@", "brief", "Ġthe", "Last", "Output", "ĠContains", "Ġthe", "Ġlast", "Ġchosen", "Ġchannel", "Ġ*/", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġthe", "Last", "Output", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "Ġ@", "brief", "Ġthe", "Chosen", "Strategy", "ĠCurrently", "Ġchosen", "Ġstrategy", "Ġ", "Ġ*/", "Ċ", "ĠĠĠĠĠĠĠ", "ĠB", "AL", "ANCE", "_", "STR", "ATE", "GY", "Ġthe", "Chosen", "Strategy", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "Ġ__", "NETWORK", "BAL", "AN", "C", "ER", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::124", "code": "#include \"Union.h\"\n\nbool Union::contains(const Vector2D& point) const\n{\n    for (auto&& figure : figures)\n        if (figure->contains(point))\n            return true;\n\n    return false;\n}\n\nFigure* Union::createCopy() const {\n    return new Union(*this);\n}\n\nstd::ostream &operator<<(std::ostream& os, const Union* un)\n{\n    return un->serializeFigures(os);\n}\n\nstd::istream &operator>>(std::istream& is, Union*& un)\n{\n    std::vector<Figure*> figures = FigureGroup::unserializeFigures(is);\n    un = new Union(figures);\n    return is;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Union", ".", "h", "\"", "Ċ", "Ċ", "bool", "ĠUnion", "::", "contains", "(", "const", "ĠVector", "2", "D", "&", "Ġpoint", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "&&", "Ġfigure", "Ġ:", "Ġfig", "ures", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "figure", "->", "contains", "(", "point", "))", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "Figure", "*", "ĠUnion", "::", "create", "Copy", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnew", "ĠUnion", "(*", "this", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "ostream", "Ġ&", "operator", "<<(", "std", "::", "ostream", "&", "Ġos", ",", "Ġconst", "ĠUnion", "*", "Ġun", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġun", "->", "serialize", "Fig", "ures", "(", "os", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "istream", "Ġ&", "operator", ">>(", "std", "::", "istream", "&", "Ġis", ",", "ĠUnion", "*&", "Ġun", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "Figure", "*>", "Ġfig", "ures", "Ġ=", "ĠFigure", "Group", "::", "unserialize", "Fig", "ures", "(", "is", ");", "Ċ", "ĠĠĠ", "Ġun", "Ġ=", "Ġnew", "ĠUnion", "(", "fig", "ures", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġis", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::125", "code": "// Fill out your copyright notice in the Description page of Project Settings.\n\n#include \"Projectile.h\"\n\n\n// Sets default values\nAProjectile::AProjectile()\n{\n\t// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.\n\tPrimaryActorTick.bCanEverTick = true;\n\tProjectileMovement = CreateDefaultSubobject<UProjectileMovementComponent>(FName(\"Projectile Movement\"));\n\tProjectileMovement->bAutoActivate = false;\n}\n\n// Called when the game starts or when spawned\nvoid AProjectile::BeginPlay()\n{\n\tSuper::BeginPlay();\n\t\n}\n\n// Called every frame\nvoid AProjectile::Tick(float DeltaTime)\n{\n\tSuper::Tick(DeltaTime);\n\n}\n\nvoid AProjectile::LaunchProjectile(float Speed)\n{\n\tProjectileMovement->SetVelocityInLocalSpace(FVector::ForwardVector * Speed);\n\tProjectileMovement->Activate();\n}\n", "code_tokens": ["Ġ//", "ĠFill", "Ġout", "Ġyour", "Ġcopyright", "Ġnotice", "Ġin", "Ġthe", "ĠDescription", "Ġpage", "Ġof", "ĠProject", "ĠSettings", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "Projectile", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "//", "ĠSets", "Ġdefault", "Ġvalues", "Ċ", "A", "Projectile", "::", "A", "Projectile", "()", "Ċ", "{", "Ċ", "ĉ", "//", "ĠSet", "Ġthis", "Ġactor", "Ġto", "Ġcall", "ĠTick", "()", "Ġevery", "Ġframe", ".", "Ġ", "ĠYou", "Ġcan", "Ġturn", "Ġthis", "Ġoff", "Ġto", "Ġimprove", "Ġperformance", "Ġif", "Ġyou", "Ġdon", "'t", "Ġneed", "Ġit", ".", "Ċ", "ĉ", "Primary", "Actor", "Tick", ".", "b", "Can", "E", "ver", "Tick", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "Projectile", "Movement", "Ġ=", "ĠCreate", "Default", "Sub", "object", "<", "U", "Projectile", "Movement", "Component", ">(", "F", "Name", "(\"", "Projectile", "ĠMove", "ment", "\"));", "Ċ", "ĉ", "Projectile", "Movement", "->", "b", "Auto", "Activate", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "//", "ĠCalled", "Ġwhen", "Ġthe", "Ġgame", "Ġstarts", "Ġor", "Ġwhen", "Ġspawn", "ed", "Ċ", "void", "ĠA", "Projectile", "::", "Begin", "Play", "()", "Ċ", "{", "Ċ", "ĉ", "Super", "::", "Begin", "Play", "();", "Ċ", "ĉ", "Ċ", "}", "Ċ", "Ċ", "//", "ĠCalled", "Ġevery", "Ġframe", "Ċ", "void", "ĠA", "Projectile", "::", "Tick", "(", "float", "ĠDelta", "Time", ")", "Ċ", "{", "Ċ", "ĉ", "Super", "::", "Tick", "(", "Delta", "Time", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠA", "Projectile", "::", "Launch", "Projectile", "(", "float", "ĠSpeed", ")", "Ċ", "{", "Ċ", "ĉ", "Projectile", "Movement", "->", "Set", "Velocity", "In", "Local", "Space", "(", "F", "Vector", "::", "Forward", "Vector", "Ġ*", "ĠSpeed", ");", "Ċ", "ĉ", "Projectile", "Movement", "->", "Activate", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::126", "code": "#include <iostream>\n#include <fstream>\n\n#include \"disassembly/flowgraph.hpp\"\n#include \"disassembly/functionfeaturegenerator.hpp\"\n#include \"searchbackend/functionsimhashfeaturedump.hpp\"\n\n// Writes a DOT file for a given graphlet.\nvoid WriteFeatureDictionaryEntry(uint64_t hashA, uint64_t hashB,\n  const Flowgraph& graphlet) {\n  char buf[256];\n  sprintf(buf, \"/var/tmp/%16.16lx%16.16lx.dot\", hashA, hashB);\n  graphlet.WriteDot(std::string(buf));\n}\n\n// Writes a JSON file for a given MnemTuple.\nvoid WriteFeatureDictionaryEntry(uint64_t hashA, uint64_t hashB,\n  const MnemTuple& tuple) {\n  char buf[256];\n  sprintf(buf, \"/var/tmp/%16.16lx%16.16lx.json\", hashA, hashB);\n  std::ofstream jsonfile;\n  jsonfile.open(std::string(buf));\n  jsonfile << \"[ \" << std::get<0>(tuple) << \", \" << std::get<1>(tuple) << \", \"\n    << std::get<2>(tuple) << \" ]\" << std::endl;\n}\n\n// Writes an immediate that was encountered.\nvoid WriteFeatureDictionaryEntry(uint64_t hashA, uint64_t hashB, uint64_t\n  immediate) {\n  std::ofstream immediates;\n  immediates.open(\"/var/tmp/immediates.txt\",\n    std::ofstream::out | std::ofstream::app);\n  immediates << std::hex << hashA << \" \" << hashB << \" \" << immediate\n    << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "dis", "assembly", "/", "flow", "graph", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "dis", "assembly", "/", "function", "feature", "generator", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "search", "backend", "/", "function", "sim", "hash", "feature", "dump", ".", "hpp", "\"", "Ċ", "Ċ", "//", "ĠWrites", "Ġa", "ĠDOT", "Ġfile", "Ġfor", "Ġa", "Ġgiven", "Ġgraph", "let", ".", "Ċ", "void", "ĠWrite", "Feature", "Dictionary", "Entry", "(", "uint", "64", "_", "t", "Ġhash", "A", ",", "Ġuint", "64", "_", "t", "Ġhash", "B", ",", "Ċ", "Ġ", "Ġconst", "ĠFlow", "graph", "&", "Ġgraph", "let", ")", "Ġ{", "Ċ", "Ġ", "Ġchar", "Ġbuf", "[", "256", "];", "Ċ", "Ġ", "Ġsprintf", "(", "buf", ",", "Ġ\"/", "var", "/", "tmp", "/%", "16", ".", "16", "lx", "%", "16", ".", "16", "lx", ".", "dot", "\",", "Ġhash", "A", ",", "Ġhash", "B", ");", "Ċ", "Ġ", "Ġgraph", "let", ".", "Write", "Dot", "(", "std", "::", "string", "(", "buf", "));", "Ċ", "}", "Ċ", "Ċ", "//", "ĠWrites", "Ġa", "ĠJSON", "Ġfile", "Ġfor", "Ġa", "Ġgiven", "ĠMn", "em", "Tuple", ".", "Ċ", "void", "ĠWrite", "Feature", "Dictionary", "Entry", "(", "uint", "64", "_", "t", "Ġhash", "A", ",", "Ġuint", "64", "_", "t", "Ġhash", "B", ",", "Ċ", "Ġ", "Ġconst", "ĠMn", "em", "Tuple", "&", "Ġtuple", ")", "Ġ{", "Ċ", "Ġ", "Ġchar", "Ġbuf", "[", "256", "];", "Ċ", "Ġ", "Ġsprintf", "(", "buf", ",", "Ġ\"/", "var", "/", "tmp", "/%", "16", ".", "16", "lx", "%", "16", ".", "16", "lx", ".", "json", "\",", "Ġhash", "A", ",", "Ġhash", "B", ");", "Ċ", "Ġ", "Ġstd", "::", "ofstream", "Ġjson", "file", ";", "Ċ", "Ġ", "Ġjson", "file", ".", "open", "(", "std", "::", "string", "(", "buf", "));", "Ċ", "Ġ", "Ġjson", "file", "Ġ<<", "Ġ\"[", "Ġ\"", "Ġ<<", "Ġstd", "::", "get", "<", "0", ">(", "tuple", ")", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġstd", "::", "get", "<", "1", ">(", "tuple", ")", "Ġ<<", "Ġ\",", "Ġ\"", "Ċ", "ĠĠĠ", "Ġ<<", "Ġstd", "::", "get", "<", "2", ">(", "tuple", ")", "Ġ<<", "Ġ\"", "Ġ]", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "//", "ĠWrites", "Ġan", "Ġimmediate", "Ġthat", "Ġwas", "Ġencountered", ".", "Ċ", "void", "ĠWrite", "Feature", "Dictionary", "Entry", "(", "uint", "64", "_", "t", "Ġhash", "A", ",", "Ġuint", "64", "_", "t", "Ġhash", "B", ",", "Ġuint", "64", "_", "t", "Ċ", "Ġ", "Ġimmediate", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "ofstream", "Ġim", "medi", "ates", ";", "Ċ", "Ġ", "Ġim", "medi", "ates", ".", "open", "(\"/", "var", "/", "tmp", "/", "im", "medi", "ates", ".", "txt", "\",", "Ċ", "ĠĠĠ", "Ġstd", "::", "ofstream", "::", "out", "Ġ|", "Ġstd", "::", "ofstream", "::", "app", ");", "Ċ", "Ġ", "Ġim", "medi", "ates", "Ġ<<", "Ġstd", "::", "hex", "Ġ<<", "Ġhash", "A", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġhash", "B", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġimmediate", "Ċ", "ĠĠĠ", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::127", "code": "// Generated by esidl 0.3.0.\n// This file is expected to be modified for the Web IDL interface\n// implementation.  Permission to use, copy, modify and distribute\n// this file in any software license is hereby granted.\n\n#include \"AudioTrackListImp.h\"\n\nnamespace org\n{\nnamespace w3c\n{\nnamespace dom\n{\nnamespace bootstrap\n{\n\nunsigned int AudioTrackListImp::getLength()\n{\n    // TODO: implement me!\n    return 0;\n}\n\nhtml::AudioTrack AudioTrackListImp::getElement(unsigned int index)\n{\n    // TODO: implement me!\n    return nullptr;\n}\n\nhtml::AudioTrack AudioTrackListImp::getTrackById(const std::u16string& id)\n{\n    // TODO: implement me!\n    return nullptr;\n}\n\nevents::EventHandlerNonNull AudioTrackListImp::getOnchange()\n{\n    // TODO: implement me!\n    return nullptr;\n}\n\nvoid AudioTrackListImp::setOnchange(events::EventHandlerNonNull onchange)\n{\n    // TODO: implement me!\n}\n\nevents::EventHandlerNonNull AudioTrackListImp::getOnaddtrack()\n{\n    // TODO: implement me!\n    return nullptr;\n}\n\nvoid AudioTrackListImp::setOnaddtrack(events::EventHandlerNonNull onaddtrack)\n{\n    // TODO: implement me!\n}\n\nevents::EventHandlerNonNull AudioTrackListImp::getOnremovetrack()\n{\n    // TODO: implement me!\n    return nullptr;\n}\n\nvoid AudioTrackListImp::setOnremovetrack(events::EventHandlerNonNull onremovetrack)\n{\n    // TODO: implement me!\n}\n\n}\n}\n}\n}\n", "code_tokens": ["Ġ//", "ĠGenerated", "Ġby", "Ġes", "idl", "Ġ0", ".", "3", ".", "0", ".", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġexpected", "Ġto", "Ġbe", "Ġmodified", "Ġfor", "Ġthe", "ĠWeb", "ĠID", "L", "Ġinterface", "Ċ", "//", "Ġimplementation", ".", "Ġ", "ĠPermission", "Ġto", "Ġuse", ",", "Ġcopy", ",", "Ġmodify", "Ġand", "Ġdistribute", "Ċ", "//", "Ġthis", "Ġfile", "Ġin", "Ġany", "Ġsoftware", "Ġlicense", "Ġis", "Ġhere", "by", "Ġgranted", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "Audio", "Track", "List", "Imp", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġorg", "Ċ", "{", "Ċ", "namespace", "Ġw", "3", "c", "Ċ", "{", "Ċ", "namespace", "Ġdom", "Ċ", "{", "Ċ", "namespace", "Ġbootstrap", "Ċ", "{", "Ċ", "Ċ", "unsigned", "Ġint", "ĠAudio", "Track", "List", "Imp", "::", "getLength", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "html", "::", "Audio", "Track", "ĠAudio", "Track", "List", "Imp", "::", "getElement", "(", "unsigned", "Ġint", "Ġindex", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "Ċ", "html", "::", "Audio", "Track", "ĠAudio", "Track", "List", "Imp", "::", "get", "Track", "ById", "(", "const", "Ġstd", "::", "u", "16", "string", "&", "Ġid", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "Ċ", "events", "::", "EventHandler", "NonNull", "ĠAudio", "Track", "List", "Imp", "::", "get", "On", "change", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAudio", "Track", "List", "Imp", "::", "setOn", "change", "(", "events", "::", "EventHandler", "NonNull", "Ġon", "change", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "}", "Ċ", "Ċ", "events", "::", "EventHandler", "NonNull", "ĠAudio", "Track", "List", "Imp", "::", "get", "On", "add", "track", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAudio", "Track", "List", "Imp", "::", "setOn", "add", "track", "(", "events", "::", "EventHandler", "NonNull", "Ġon", "add", "track", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "}", "Ċ", "Ċ", "events", "::", "EventHandler", "NonNull", "ĠAudio", "Track", "List", "Imp", "::", "get", "On", "re", "mov", "et", "rack", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAudio", "Track", "List", "Imp", "::", "setOn", "re", "mov", "et", "rack", "(", "events", "::", "EventHandler", "NonNull", "Ġon", "re", "mov", "et", "rack", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġimplement", "Ġme", "!", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "}", "Ċ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::128", "code": "#ifdef WINDOWS_PLATFORM\n\n#include \"WindowsInputService.hpp\"\n\n#include \"WindowsMouseInterface.hpp\"\n#include \"WindowsKeyboardInterface.hpp\"\n\nnamespace MPACK\n{\n\tnamespace Input\n\t{\n\t\tWindowsInputService::WindowsInputService()\n\t\t{\n\t\t\tm_pMouse = new WindowsMouseInterface;\n\t\t\tm_pKeyboard = new WindowsKeyboardInterface;\n\t\t\tReset();\n\t\t}\n\n\t\tWindowsInputService::~WindowsInputService()\n\t\t{\n\t\t}\n\n\t\tvoid WindowsInputService::Update()\n\t\t{\n\t\t\tm_pMouse->Update();\n\t\t\tm_pKeyboard->Update();\n\t\t}\n\n\t\tvoid WindowsInputService::Reset()\n\t\t{\n\t\t\tm_pMouse->Reset();\n\t\t\tm_pKeyboard->Reset();\n\t\t}\n\n\t\tMouseInterface* WindowsInputService::GetMouse() const\n\t\t{\n\t\t\treturn m_pMouse;\n\t\t}\n\n\t\tKeyboardInterface* WindowsInputService::GetKeyboard() const\n\t\t{\n\t\t\treturn m_pKeyboard;\n\t\t}\n\t}\n}\n\n#endif\n", "code_tokens": ["Ġ#", "ifdef", "ĠWINDO", "WS", "_", "PLATFORM", "Ċ", "Ċ", "#", "include", "Ġ\"", "Windows", "InputService", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Windows", "Mouse", "Interface", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Windows", "Keyboard", "Interface", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "ĠMP", "ACK", "Ċ", "{", "Ċ", "ĉ", "namespace", "ĠInput", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Windows", "InputService", "::", "Windows", "InputService", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "m", "_", "p", "Mouse", "Ġ=", "Ġnew", "ĠWindows", "Mouse", "Interface", ";", "Ċ", "ĉĉ", "ĉ", "m", "_", "p", "Keyboard", "Ġ=", "Ġnew", "ĠWindows", "Keyboard", "Interface", ";", "Ċ", "ĉĉ", "ĉ", "Reset", "();", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "Windows", "InputService", "::~", "Windows", "InputService", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "void", "ĠWindows", "InputService", "::", "Update", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "m", "_", "p", "Mouse", "->", "Update", "();", "Ċ", "ĉĉ", "ĉ", "m", "_", "p", "Keyboard", "->", "Update", "();", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "void", "ĠWindows", "InputService", "::", "Reset", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "m", "_", "p", "Mouse", "->", "Reset", "();", "Ċ", "ĉĉ", "ĉ", "m", "_", "p", "Keyboard", "->", "Reset", "();", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "Mouse", "Interface", "*", "ĠWindows", "InputService", "::", "Get", "Mouse", "()", "Ġconst", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "return", "Ġm", "_", "p", "Mouse", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "Keyboard", "Interface", "*", "ĠWindows", "InputService", "::", "Get", "Keyboard", "()", "Ġconst", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "return", "Ġm", "_", "p", "Keyboard", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::129", "code": "// STLport regression testsuite component.\r\n// To compile as a separate example, please #define MAIN.\r\n\r\n#include <algorithm>\r\n#include <iostream>\r\n\r\n#include \"unary.h\"\r\n\r\n\r\n#ifdef MAIN \r\n#define bcompos1_test main\r\n#endif\r\n\r\n#if !defined (STLPORT) || defined(__STL_USE_NAMESPACES)\r\nusing namespace std;\r\n#endif\r\nint bcompos1_test(int, char**)\r\n{\r\n  cout<<\"Results of bcompos1_test:\"<<endl;\r\n\r\nint array [6] = { -2, -1, 0, 1, 2, 3 };\r\n\r\n  binary_compose<logical_and<bool>, odd, positive> \r\n    b = binary_compose<logical_and<bool>, odd, positive>\r\n(logical_and<bool>(), odd(), positive());\r\n  int* p = find_if((int*)array, (int*)array + 6, b);\r\n  if(p != array + 6)\r\n    cout << *p << \" is odd and positive\" << endl;\r\n\r\n  return 0;\r\n}\r\n", "code_tokens": ["Ġ//", "ĠST", "L", "port", "Ġregression", "Ġtests", "uite", "Ġcomponent", ".", "č", "Ċ", "//", "ĠTo", "Ġcompile", "Ġas", "Ġa", "Ġseparate", "Ġexample", ",", "Ġplease", "Ġ#", "define", "ĠM", "AIN", ".", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "č", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "unary", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "č", "Ċ", "#", "ifdef", "ĠM", "AIN", "Ġ", "č", "Ċ", "#", "define", "Ġb", "compos", "1", "_", "test", "Ġmain", "č", "Ċ", "#", "endif", "č", "Ċ", "č", "Ċ", "#", "if", "Ġ!", "defined", "Ġ(", "ST", "L", "PORT", ")", "Ġ||", "Ġdefined", "(__", "ST", "L", "_", "USE", "_", "NAMESPACE", "S", ")", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "#", "endif", "č", "Ċ", "int", "Ġb", "compos", "1", "_", "test", "(", "int", ",", "Ġchar", "**)", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġcout", "<<\"", "Results", "Ġof", "Ġb", "compos", "1", "_", "test", ":\"", "<<", "endl", ";", "č", "Ċ", "č", "Ċ", "int", "Ġarray", "Ġ[", "6", "]", "Ġ=", "Ġ{", "Ġ-", "2", ",", "Ġ-", "1", ",", "Ġ0", ",", "Ġ1", ",", "Ġ2", ",", "Ġ3", "Ġ};", "č", "Ċ", "č", "Ċ", "Ġ", "Ġbinary", "_", "compose", "<", "logical", "_", "and", "<", "bool", ">,", "Ġodd", ",", "Ġpositive", ">", "Ġ", "č", "Ċ", "ĠĠĠ", "Ġb", "Ġ=", "Ġbinary", "_", "compose", "<", "logical", "_", "and", "<", "bool", ">,", "Ġodd", ",", "Ġpositive", ">", "č", "Ċ", "(", "logical", "_", "and", "<", "bool", ">(),", "Ġodd", "(),", "Ġpositive", "());", "č", "Ċ", "Ġ", "Ġint", "*", "Ġp", "Ġ=", "Ġfind", "_", "if", "((", "int", "*)", "array", ",", "Ġ(", "int", "*)", "array", "Ġ+", "Ġ6", ",", "Ġb", ");", "č", "Ċ", "Ġ", "Ġif", "(", "p", "Ġ!=", "Ġarray", "Ġ+", "Ġ6", ")", "č", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ*", "p", "Ġ<<", "Ġ\"", "Ġis", "Ġodd", "Ġand", "Ġpositive", "\"", "Ġ<<", "Ġendl", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::130", "code": "// Generated from /POI/java/org/apache/poi/hpsf/VariantBool.java\n\n#pragma once\n\n#include <fwd-POI.hpp>\n#include <org/apache/poi/hpsf/fwd-POI.hpp>\n#include <org/apache/poi/util/fwd-POI.hpp>\n#include <java/lang/Object.hpp>\n\nstruct default_init_tag;\n\nclass poi::hpsf::VariantBool\n    : public virtual ::java::lang::Object\n{\n\npublic:\n    typedef ::java::lang::Object super;\n\nprivate:\n    static ::poi::util::POILogger* LOG_;\n\npublic: /* package */\n    static constexpr int32_t SIZE { int32_t(2) };\n\nprivate:\n    bool _value {  };\nprotected:\n    void ctor();\n\npublic: /* package */\n    virtual void read(::poi::util::LittleEndianByteArrayInputStream* lei);\n    virtual bool getValue();\n    virtual void setValue(bool value);\n\n    // Generated\n    VariantBool();\nprotected:\n    VariantBool(const ::default_init_tag&);\n\n\npublic:\n    static ::java::lang::Class *class_();\n    static void clinit();\n\nprivate:\n    static ::poi::util::POILogger*& LOG();\n    virtual ::java::lang::Class* getClass0();\n};\n", "code_tokens": ["Ġ//", "ĠGenerated", "Ġfrom", "Ġ/", "PO", "I", "/", "java", "/", "org", "/", "apache", "/", "poi", "/", "h", "psf", "/", "Variant", "Bool", ".", "java", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "fwd", "-", "PO", "I", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "org", "/", "apache", "/", "poi", "/", "h", "psf", "/", "fwd", "-", "PO", "I", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "org", "/", "apache", "/", "poi", "/", "util", "/", "fwd", "-", "PO", "I", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "java", "/", "lang", "/", "Object", ".", "hpp", ">", "Ċ", "Ċ", "struct", "Ġdefault", "_", "init", "_", "tag", ";", "Ċ", "Ċ", "class", "Ġpo", "i", "::", "h", "psf", "::", "Variant", "Bool", "Ċ", "ĠĠĠ", "Ġ:", "Ġpublic", "Ġvirtual", "Ġ::", "java", "::", "lang", "::", "Object", "Ċ", "{", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġ::", "java", "::", "lang", "::", "Object", "Ġsuper", ";", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġstatic", "Ġ::", "poi", "::", "util", "::", "PO", "I", "Logger", "*", "ĠLOG", "_;", "Ċ", "Ċ", "public", ":", "Ġ/*", "Ġpackage", "Ġ*/", "Ċ", "ĠĠĠ", "Ġstatic", "Ġconstexpr", "Ġint", "32", "_", "t", "ĠSIZE", "Ġ{", "Ġint", "32", "_", "t", "(", "2", ")", "Ġ};", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġbool", "Ġ_", "value", "Ġ{", "Ġ", "Ġ};", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġctor", "();", "Ċ", "Ċ", "public", ":", "Ġ/*", "Ġpackage", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġread", "(::", "poi", "::", "util", "::", "LittleEndian", "ByteArray", "InputStream", "*", "Ġle", "i", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "ĠgetValue", "();", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "ĠsetValue", "(", "bool", "Ġvalue", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠGenerated", "Ċ", "ĠĠĠ", "ĠVariant", "Bool", "();", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "ĠVariant", "Bool", "(", "const", "Ġ::", "default", "_", "init", "_", "tag", "&", ");", "Ċ", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġstatic", "Ġ::", "java", "::", "lang", "::", "Class", "Ġ*", "class", "_();", "Ċ", "ĠĠĠ", "Ġstatic", "Ġvoid", "Ġcl", "init", "();", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġstatic", "Ġ::", "poi", "::", "util", "::", "PO", "I", "Logger", "*&", "ĠLOG", "();", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ::", "java", "::", "lang", "::", "Class", "*", "ĠgetClass", "0", "();", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::131", "code": "/**\n* Copyright [2013-2014] [OHsystem]\n*\n* We spent a lot of time writing this code, so show some respect:\n* - Do not remove this copyright notice anywhere (bot, website etc.)\n* - We do not provide support to those who removed copyright notice\n*\n* OHSystem is free software: You can redistribute it and/or modify\n* it under the terms of the GNU General Public License as published by\n* the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n*\n* You can contact the developers on: admin@ohsystem.net\n* or join us directly here: http://forum.ohsystem.net/\n*\n* Visit us also on http://ohsystem.net/ and keep track always of the latest\n* features and changes.\n*\n*\n* This is modified from GHOST++: http://ohbotplusplus.googlecode.com/\n*/\n\n#include \"../ohbot.h\"\n#include \"stats.h\"\n\n//\n// CStats\n//\n\nCStats :: CStats( CBaseGame *nGame ) : m_Game( nGame ), m_Locked( false )\n{\n\n}\n\nCStats :: ~CStats( )\n{\n\n}\n\nbool CStats :: ProcessAction( CIncomingAction *Action )\n{\n    return false;\n}\n\nvoid CStats :: Save( COHBot *GHost, COHBotDB *DB, uint32_t GameID )\n{\n\n}\n", "code_tokens": ["Ġ/**", "Ċ", "*", "ĠCopyright", "Ġ[", "2013", "-", "2014", "]", "Ġ[", "OH", "system", "]", "Ċ", "*", "Ċ", "*", "ĠWe", "Ġspent", "Ġa", "Ġlot", "Ġof", "Ġtime", "Ġwriting", "Ġthis", "Ġcode", ",", "Ġso", "Ġshow", "Ġsome", "Ġrespect", ":", "Ċ", "*", "Ġ-", "ĠDo", "Ġnot", "Ġremove", "Ġthis", "Ġcopyright", "Ġnotice", "Ġanywhere", "Ġ(", "bot", ",", "Ġwebsite", "Ġetc", ".)", "Ċ", "*", "Ġ-", "ĠWe", "Ġdo", "Ġnot", "Ġprovide", "Ġsupport", "Ġto", "Ġthose", "Ġwho", "Ġremoved", "Ġcopyright", "Ġnotice", "Ċ", "*", "Ċ", "*", "ĠO", "H", "System", "Ġis", "Ġfree", "Ġsoftware", ":", "ĠYou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "*", "Ċ", "*", "ĠYou", "Ġcan", "Ġcontact", "Ġthe", "Ġdevelopers", "Ġon", ":", "Ġadmin", "@", "o", "hs", "ystem", ".", "net", "Ċ", "*", "Ġor", "Ġjoin", "Ġus", "Ġdirectly", "Ġhere", ":", "Ġhttp", "://", "forum", ".", "o", "hs", "ystem", ".", "net", "/", "Ċ", "*", "Ċ", "*", "ĠVisit", "Ġus", "Ġalso", "Ġon", "Ġhttp", "://", "o", "hs", "ystem", ".", "net", "/", "Ġand", "Ġkeep", "Ġtrack", "Ġalways", "Ġof", "Ġthe", "Ġlatest", "Ċ", "*", "Ġfeatures", "Ġand", "Ġchanges", ".", "Ċ", "*", "Ċ", "*", "Ċ", "*", "ĠThis", "Ġis", "Ġmodified", "Ġfrom", "ĠGHOST", "++:", "Ġhttp", "://", "o", "hb", "ot", "plus", "plus", ".", "google", "code", ".", "com", "/", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"../", "o", "hb", "ot", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "stats", ".", "h", "\"", "Ċ", "Ċ", "//", "Ċ", "//", "ĠC", "Stats", "Ċ", "//", "Ċ", "Ċ", "C", "Stats", "Ġ::", "ĠC", "Stats", "(", "ĠCBase", "Game", "Ġ*", "n", "Game", "Ġ)", "Ġ:", "Ġm", "_", "Game", "(", "Ġn", "Game", "Ġ),", "Ġm", "_", "Locked", "(", "Ġfalse", "Ġ)", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "C", "Stats", "Ġ::", "Ġ~", "C", "Stats", "(", "Ġ)", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠC", "Stats", "Ġ::", "ĠProcess", "Action", "(", "ĠC", "Incoming", "Action", "Ġ*", "Action", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Stats", "Ġ::", "ĠSave", "(", "ĠCO", "HB", "ot", "Ġ*", "G", "Host", ",", "ĠCO", "HB", "ot", "DB", "Ġ*", "DB", ",", "Ġuint", "32", "_", "t", "ĠGame", "ID", "Ġ)", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::132", "code": "#include <iostream>\r\n#include <iomanip>\r\n#include <cstdint>\r\n#include <typeinfo>\r\n\r\n#include \"color/color.hpp\"\r\n\r\nint main( int argc, char *argv[] )\r\n {\r\n  using namespace color;\r\n  using namespace std;\r\n\r\n  cout << \"gray<std::uint8_t > is: \" << typeid( trait::component< gray< std::uint8_t  >::category_type >::instance_type ).name() << endl;\r\n  cout << \"gray<std::uint32_t> is: \" << typeid( trait::component< gray< std::uint32_t >::category_type >::instance_type ).name() << endl;\r\n  cout << \"gray<float        > is: \" << typeid( trait::component< gray< float         >::category_type >::instance_type ).name() << endl;\r\n  cout << \"gray<double       > is: \" << typeid( trait::component< gray< double        >::category_type >::instance_type ).name() << endl;\r\n  cout << \"gray<long double  > is: \" << typeid( trait::component< gray< long double   >::category_type >::instance_type ).name() << endl;\r\n  return EXIT_SUCCESS;\r\n } ", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "int", ">", "č", "Ċ", "#", "include", "Ġ<", "type", "info", ">", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "color", "/", "color", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[]", "Ġ)", "č", "Ċ", "Ġ{", "č", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġcolor", ";", "č", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "gray", "<", "std", "::", "uint", "8", "_", "t", "Ġ>", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġtype", "id", "(", "Ġtrait", "::", "component", "<", "Ġgray", "<", "Ġstd", "::", "uint", "8", "_", "t", "Ġ", "Ġ>::", "category", "_", "type", "Ġ>::", "instance", "_", "type", "Ġ).", "name", "()", "Ġ<<", "Ġendl", ";", "č", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "gray", "<", "std", "::", "uint", "32", "_", "t", ">", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġtype", "id", "(", "Ġtrait", "::", "component", "<", "Ġgray", "<", "Ġstd", "::", "uint", "32", "_", "t", "Ġ>::", "category", "_", "type", "Ġ>::", "instance", "_", "type", "Ġ).", "name", "()", "Ġ<<", "Ġendl", ";", "č", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "gray", "<", "float", "ĠĠĠĠĠĠĠ", "Ġ>", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġtype", "id", "(", "Ġtrait", "::", "component", "<", "Ġgray", "<", "Ġfloat", "ĠĠĠĠĠĠĠĠ", "Ġ>::", "category", "_", "type", "Ġ>::", "instance", "_", "type", "Ġ).", "name", "()", "Ġ<<", "Ġendl", ";", "č", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "gray", "<", "double", "ĠĠĠĠĠĠ", "Ġ>", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġtype", "id", "(", "Ġtrait", "::", "component", "<", "Ġgray", "<", "Ġdouble", "ĠĠĠĠĠĠĠ", "Ġ>::", "category", "_", "type", "Ġ>::", "instance", "_", "type", "Ġ).", "name", "()", "Ġ<<", "Ġendl", ";", "č", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "gray", "<", "long", "Ġdouble", "Ġ", "Ġ>", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġtype", "id", "(", "Ġtrait", "::", "component", "<", "Ġgray", "<", "Ġlong", "Ġdouble", "ĠĠ", "Ġ>::", "category", "_", "type", "Ġ>::", "instance", "_", "type", "Ġ).", "name", "()", "Ġ<<", "Ġendl", ";", "č", "Ċ", "Ġ", "Ġreturn", "ĠEXIT", "_", "SUCCESS", ";", "č", "Ċ", "Ġ}", "Ġ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::133", "code": "#include \"common/common/version.h\"\n\nstd::string VersionInfo::version() {\n  return fmt::format(\"{}/{}\", GIT_SHA.substr(0, 6),\n#ifdef NDEBUG\n                     \"RELEASE\"\n#else\n                     \"DEBUG\"\n#endif\n                     );\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "common", "/", "common", "/", "version", ".", "h", "\"", "Ċ", "Ċ", "std", "::", "string", "ĠVersion", "Info", "::", "version", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġfmt", "::", "format", "(\"{}", "/", "{}", "\",", "ĠG", "IT", "_", "SHA", ".", "substr", "(", "0", ",", "Ġ6", "),", "Ċ", "#", "ifdef", "ĠNDEBUG", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\"", "RELEASE", "\"", "Ċ", "#", "else", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\"", "DEBUG", "\"", "Ċ", "#", "endif", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ);", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::134", "code": "#include <mscorlib/System/Runtime/Serialization/mscorlib_System_Runtime_Serialization_SerializationObjectManager.h>\n#include <mscorlib/System/mscorlib_System_Type.h>\n#include <mscorlib/System/mscorlib_System_String.h>\n\n\n\nnamespace mscorlib\n{\n\tnamespace System\n\t{\n\t\tnamespace Runtime\n\t\t{\n\t\t\tnamespace Serialization\n\t\t\t{\n\n\t\t\t\t//Public Methods\n\t\t\t\tvoid SerializationObjectManager::RegisterObject(mscorlib::System::Object obj)\n\t\t\t\t{\n\t\t\t\t\t\tMonoType *__parameter_types__[1];\n\t\t\t\t\t\tvoid *__parameters__[1];\n\t\t\t\t\t\t__parameter_types__[0] = Global::GetType(typeid(obj).name());\n\t\t\t\t\t\t__parameters__[0] = (MonoObject*)obj;\n\t\t\t\t\t\tGlobal::InvokeMethod(\"mscorlib\", \"System.Runtime.Serialization\", \"SerializationObjectManager\", 0, NULL, \"RegisterObject\", __native_object__, 1, __parameter_types__, __parameters__, NULL);\n\t\t\t\t}\n\n\t\t\t\tvoid SerializationObjectManager::RaiseOnSerializedEvent()\n\t\t\t\t{\n\t\t\t\t\t\tGlobal::InvokeMethod(\"mscorlib\", \"System.Runtime.Serialization\", \"SerializationObjectManager\", 0, NULL, \"RaiseOnSerializedEvent\", __native_object__, 0, NULL, NULL, NULL);\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t}\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "msc", "orlib", "/", "System", "/", "Runtime", "/", "Serialization", "/", "msc", "orlib", "_", "System", "_", "Runtime", "_", "Serialization", "_", "Serialization", "ObjectManager", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "msc", "orlib", "/", "System", "/", "msc", "orlib", "_", "System", "_", "Type", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "msc", "orlib", "/", "System", "/", "msc", "orlib", "_", "System", "_", "String", ".", "h", ">", "Ċ", "Ċ", "Ċ", "Ċ", "namespace", "Ġmsc", "orlib", "Ċ", "{", "Ċ", "ĉ", "namespace", "ĠSystem", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "namespace", "ĠRuntime", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "namespace", "ĠSerialization", "Ċ", "ĉĉ", "ĉ", "{", "Ċ", "Ċ", "ĉĉĉ", "ĉ", "//", "Public", "ĠMethods", "Ċ", "ĉĉĉ", "ĉ", "void", "ĠSerialization", "ObjectManager", "::", "Register", "Object", "(", "msc", "orlib", "::", "System", "::", "Object", "Ġobj", ")", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉĉ", "ĉ", "Mono", "Type", "Ġ*__", "parameter", "_", "types", "__[", "1", "];", "Ċ", "ĉĉĉĉĉ", "ĉ", "void", "Ġ*__", "parameters", "__[", "1", "];", "Ċ", "ĉĉĉĉĉ", "ĉ", "__", "parameter", "_", "types", "__[", "0", "]", "Ġ=", "ĠGlobal", "::", "GetType", "(", "typeid", "(", "obj", ").", "name", "());", "Ċ", "ĉĉĉĉĉ", "ĉ", "__", "parameters", "__[", "0", "]", "Ġ=", "Ġ(", "Mono", "Object", "*)", "obj", ";", "Ċ", "ĉĉĉĉĉ", "ĉ", "Global", "::", "Invoke", "Method", "(\"", "msc", "orlib", "\",", "Ġ\"", "System", ".", "Runtime", ".", "Serialization", "\",", "Ġ\"", "Serialization", "ObjectManager", "\",", "Ġ0", ",", "ĠNULL", ",", "Ġ\"", "Register", "Object", "\",", "Ġ__", "native", "_", "object", "__,", "Ġ1", ",", "Ġ__", "parameter", "_", "types", "__,", "Ġ__", "parameters", "__,", "ĠNULL", ");", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "Ċ", "ĉĉĉ", "ĉ", "void", "ĠSerialization", "ObjectManager", "::", "Raise", "On", "Serialized", "Event", "()", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉĉ", "ĉ", "Global", "::", "Invoke", "Method", "(\"", "msc", "orlib", "\",", "Ġ\"", "System", ".", "Runtime", ".", "Serialization", "\",", "Ġ\"", "Serialization", "ObjectManager", "\",", "Ġ0", ",", "ĠNULL", ",", "Ġ\"", "Raise", "On", "Serialized", "Event", "\",", "Ġ__", "native", "_", "object", "__,", "Ġ0", ",", "ĠNULL", ",", "ĠNULL", ",", "ĠNULL", ");", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "Ċ", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::135", "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <unistd.h>\n#include <utility>\n#include <sstream>\n\n#include \"./patricia-tree.hpp\"\n\n\nint main(void) {\n    std::cout << \"Add new command!\\n\";\n    PatriciaTree<Node<std::string, StringKeySpec>> pt;\n\n    std::string command = \"command\";\n    std::string key;\n\n    while(command != \"exit\") {\n        getline(std::cin, key);\n        pt.insertNode(key, command);\n        std::cout << pt << \"\\n\";\n    }\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"./", "pat", "ric", "ia", "-", "tree", ".", "hpp", "\"", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Add", "Ġnew", "Ġcommand", "!\\", "n", "\";", "Ċ", "ĠĠĠ", "ĠP", "at", "ric", "ia", "Tree", "<", "Node", "<", "std", "::", "string", ",", "ĠString", "KeySpec", ">>", "Ġpt", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġcommand", "Ġ=", "Ġ\"", "command", "\";", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġkey", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "(", "command", "Ġ!=", "Ġ\"", "exit", "\")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġget", "line", "(", "std", "::", "cin", ",", "Ġkey", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġpt", ".", "insert", "Node", "(", "key", ",", "Ġcommand", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġpt", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::136", "code": "#ifndef SOBER_NETWORK_HTTP_EXTRA_SUCCESS_HANDLER_HPP_\n#define SOBER_NETWORK_HTTP_EXTRA_SUCCESS_HANDLER_HPP_\n\n// Copyright (c) 2014, Ruslan Baratov\n// All rights reserved.\n\n#include <functional> // std::function\n\nnamespace sober {\nnamespace network {\nnamespace http {\n\nusing ExtraSuccessHandler = std::function<void()>;\n\n} // namespace http\n} // namespace network\n} // namespace sober\n\n#endif // SOBER_NETWORK_HTTP_EXTRA_SUCCESS_HANDLER_HPP_\n", "code_tokens": ["Ġ#", "ifndef", "ĠS", "OB", "ER", "_", "NETWORK", "_", "HTTP", "_", "EXTRA", "_", "SUCCESS", "_", "HANDLER", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠS", "OB", "ER", "_", "NETWORK", "_", "HTTP", "_", "EXTRA", "_", "SUCCESS", "_", "HANDLER", "_", "HP", "P", "_", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", ",", "ĠR", "us", "lan", "ĠBar", "at", "ov", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ġ//", "Ġstd", "::", "function", "Ċ", "Ċ", "namespace", "Ġso", "ber", "Ġ{", "Ċ", "namespace", "Ġnetwork", "Ġ{", "Ċ", "namespace", "Ġhttp", "Ġ{", "Ċ", "Ċ", "using", "ĠExtra", "Success", "Handler", "Ġ=", "Ġstd", "::", "function", "<", "void", "()", ">;", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġhttp", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġnetwork", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġso", "ber", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠS", "OB", "ER", "_", "NETWORK", "_", "HTTP", "_", "EXTRA", "_", "SUCCESS", "_", "HANDLER", "_", "HP", "P", "_", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::137", "code": "#include <iostream>\n#include <stdlib.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <fcntl.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <dirent.h>\n#include <errno.h>\n\nusing namespace std;\n\nint main(int argc, char** argv)\n{\n    if(argc <= 1)\n    {\n        cout << \"Nothing passed in to argv.\" << endl;\n        exit(1);\n    }\n    else\n    {\n        DIR *dirp;\n        if(NULL == (dirp = opendir(argv[1])))\n        {\n            perror(\"There was an error with opendir(). \");\n            exit(1);\n        }\n        struct dirent *filespecs;\n        errno = 0;\n        while(NULL != (filespecs = readdir(dirp)))\n        {\n            cout << filespecs->d_name << \" \";\n        }\n        if(errno != 0)\n        {\n            perror(\"There was an error with readdir(). \");\n            exit(1);\n        }\n        cout << endl;\n        if(-1 == closedir(dirp))\n        {\n            perror(\"There was an error with closedir(). \");\n            exit(1);\n        }\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "fcntl", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "types", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "stat", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "dirent", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "errno", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(", "argc", "Ġ<=", "Ġ1", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "Nothing", "Ġpassed", "Ġin", "Ġto", "Ġargv", ".\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġexit", "(", "1", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠDIR", "Ġ*", "dir", "p", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "NULL", "Ġ==", "Ġ(", "dir", "p", "Ġ=", "Ġopendir", "(", "argv", "[", "1", "])))", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġperror", "(\"", "There", "Ġwas", "Ġan", "Ġerror", "Ġwith", "Ġopendir", "().", "Ġ\");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġexit", "(", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstruct", "Ġdirent", "Ġ*", "file", "specs", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġerrno", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "NULL", "Ġ!=", "Ġ(", "file", "specs", "Ġ=", "Ġreaddir", "(", "dir", "p", ")))", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġfile", "specs", "->", "d", "_", "name", "Ġ<<", "Ġ\"", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "errno", "Ġ!=", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġperror", "(\"", "There", "Ġwas", "Ġan", "Ġerror", "Ġwith", "Ġreaddir", "().", "Ġ\");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġexit", "(", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(-", "1", "Ġ==", "Ġclosed", "ir", "(", "dir", "p", "))", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġperror", "(\"", "There", "Ġwas", "Ġan", "Ġerror", "Ġwith", "Ġclosed", "ir", "().", "Ġ\");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġexit", "(", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::138", "code": "// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"sky/engine/tonic/dart_dependency_catcher.h\"\n\n#include \"sky/engine/tonic/dart_library_loader.h\"\n\nnamespace blink {\n\nDartDependencyCatcher::DartDependencyCatcher(DartLibraryLoader& loader)\n    : loader_(loader) {\n  loader_.set_dependency_catcher(this);\n}\n\nDartDependencyCatcher::~DartDependencyCatcher() {\n  loader_.set_dependency_catcher(nullptr);\n}\n\nvoid DartDependencyCatcher::AddDependency(DartDependency* dependency) {\n  dependencies_.add(dependency);\n}\n\n}  // namespace blink\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2015", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "sky", "/", "engine", "/", "ton", "ic", "/", "dart", "_", "dependency", "_", "catch", "er", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "sky", "/", "engine", "/", "ton", "ic", "/", "dart", "_", "library", "_", "loader", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġblink", "Ġ{", "Ċ", "Ċ", "D", "art", "Dependency", "Catch", "er", "::", "D", "art", "Dependency", "Catch", "er", "(", "D", "art", "Library", "Loader", "&", "Ġloader", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġloader", "_(", "loader", ")", "Ġ{", "Ċ", "Ġ", "Ġloader", "_.", "set", "_", "dependency", "_", "catch", "er", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "D", "art", "Dependency", "Catch", "er", "::~", "D", "art", "Dependency", "Catch", "er", "()", "Ġ{", "Ċ", "Ġ", "Ġloader", "_.", "set", "_", "dependency", "_", "catch", "er", "(", "nullptr", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠD", "art", "Dependency", "Catch", "er", "::", "Add", "Dependency", "(", "D", "art", "Dependency", "*", "Ġdependency", ")", "Ġ{", "Ċ", "Ġ", "Ġdependencies", "_.", "add", "(", "dependency", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġblink", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::139", "code": "/******************************************************************************\n *                       ____    _    _____                                   *\n *                      / ___|  / \\  |  ___|    C++                           *\n *                     | |     / _ \\ | |_       Actor                         *\n *                     | |___ / ___ \\|  _|      Framework                     *\n *                      \\____/_/   \\_|_|                                      *\n *                                                                            *\n * Copyright (C) 2011 - 2015                                                  *\n * Dominik Charousset <dominik.charousset (at) haw-hamburg.de>                *\n *                                                                            *\n * Distributed under the terms and conditions of the BSD 3-Clause License or  *\n * (at your option) under the terms and conditions of the Boost Software      *\n * License 1.0. See accompanying files LICENSE and LICENSE_ALTERNATIVE.       *\n *                                                                            *\n * If you did not receive a copy of the license files, see                    *\n * http://opensource.org/licenses/BSD-3-Clause and                            *\n * http://www.boost.org/LICENSE_1_0.txt.                                      *\n ******************************************************************************/\n\n#ifndef SOURCE_HPP\n#define SOURCE_HPP\n\n#include <QSpinBox>\n#include <QProgressBar>\n\n#include \"entity.hpp\"\n#include \"mainwindow.hpp\"\n\nclass source : virtual public entity {\npublic:\n  source(environment* env, QWidget* parent, QString name);\n\n  ~source() override;\n\n  void start() override;\n\n  void add_consumer(caf::actor consumer);\n\nprotected:\n  // Pointer to the next stage in the pipeline.\n  std::vector<caf::actor> consumers_;\n\n  // Pointer to the CAF stream handler to advance the stream manually.\n  caf::stream_manager_ptr stream_manager_;\n};\n\n#endif // SOURCE_HPP\n", "code_tokens": ["Ġ/", "************************************************************************", "******", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "___", "ĠĠĠ", "Ġ_", "ĠĠĠ", "Ġ_", "____", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ/", "Ġ___", "|", "Ġ", "Ġ/", "Ġ\\", "Ġ", "Ġ|", "Ġ", "Ġ___", "|", "ĠĠĠ", "ĠC", "++", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "Ġ|", "ĠĠĠĠ", "Ġ/", "Ġ_", "Ġ\\", "Ġ|", "Ġ|", "_", "ĠĠĠĠĠĠ", "ĠActor", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "Ġ|", "___", "Ġ/", "Ġ___", "Ġ\\", "|", "Ġ", "Ġ_", "|", "ĠĠĠĠĠ", "ĠFramework", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "____", "/_", "/", "ĠĠ", "Ġ\\", "_", "|_", "|", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "Ġ-", "Ġ2015", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠDom", "in", "ik", "ĠChar", "ous", "set", "Ġ<", "dom", "in", "ik", ".", "char", "ous", "set", "Ġ(", "at", ")", "Ġh", "aw", "-", "h", "amb", "ur", "g", ".", "de", ">", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠD", "istributed", "Ġunder", "Ġthe", "Ġterms", "Ġand", "Ġconditions", "Ġof", "Ġthe", "ĠBSD", "Ġ3", "-", "Clause", "ĠLicense", "Ġor", "Ġ", "Ġ*", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġunder", "Ġthe", "Ġterms", "Ġand", "Ġconditions", "Ġof", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠLicense", "Ġ1", ".", "0", ".", "ĠSee", "Ġac", "company", "ing", "Ġfiles", "ĠLICENSE", "Ġand", "ĠLICENSE", "_", "ALTER", "NATIVE", ".", "ĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠIf", "Ġyou", "Ġdid", "Ġnot", "Ġreceive", "Ġa", "Ġcopy", "Ġof", "Ġthe", "Ġlicense", "Ġfiles", ",", "Ġsee", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġhttp", "://", "opens", "ource", ".", "org", "/", "licenses", "/", "BSD", "-", "3", "-", "Clause", "Ġand", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ******************************************************************************/", "Ċ", "Ċ", "#", "ifndef", "ĠSO", "URCE", "_", "HP", "P", "Ċ", "#", "define", "ĠSO", "URCE", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "SpinBox", ">", "Ċ", "#", "include", "Ġ<", "Q", "ProgressBar", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "entity", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "main", "window", ".", "hpp", "\"", "Ċ", "Ċ", "class", "Ġsource", "Ġ:", "Ġvirtual", "Ġpublic", "Ġentity", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġsource", "(", "environment", "*", "Ġenv", ",", "ĠQWidget", "*", "Ġparent", ",", "ĠQString", "Ġname", ");", "Ċ", "Ċ", "Ġ", "Ġ~", "source", "()", "Ġoverride", ";", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġstart", "()", "Ġoverride", ";", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġadd", "_", "consumer", "(", "ca", "f", "::", "actor", "Ġconsumer", ");", "Ċ", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġ//", "ĠPointer", "Ġto", "Ġthe", "Ġnext", "Ġstage", "Ġin", "Ġthe", "Ġpipeline", ".", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "ca", "f", "::", "actor", ">", "Ġconsumers", "_;", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠPointer", "Ġto", "Ġthe", "ĠC", "AF", "Ġstream", "Ġhandler", "Ġto", "Ġadvance", "Ġthe", "Ġstream", "Ġmanually", ".", "Ċ", "Ġ", "Ġc", "af", "::", "stream", "_", "manager", "_", "ptr", "Ġstream", "_", "manager", "_;", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠSO", "URCE", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::140", "code": "#include <stdio.h>\n#include <stdlib.h>\n\nstatic void foo()\n{\n  throw 123;\n}\n\nint main(int argc, char *argv[])\n{\n  int count = argc == 1 ? 10000 : atoi(argv[ 1 ]);\n  int n = 0;\n\n  for(int i = 0; i < count; ++i) {\n    try {\n      foo();\n    }\n    catch(...) {\n      ++n;\n    }\n  }\n\n  printf(\"%d\\n\", n);\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "Ċ", "static", "Ġvoid", "Ġfoo", "()", "Ċ", "{", "Ċ", "Ġ", "Ġthrow", "Ġ123", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġcount", "Ġ=", "Ġargc", "Ġ==", "Ġ1", "Ġ?", "Ġ10000", "Ġ:", "Ġatoi", "(", "argv", "[", "Ġ1", "Ġ]);", "Ċ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġcount", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġtry", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġfoo", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcatch", "(...)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ++", "n", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "Ġn", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::141", "code": "#include \"Shape.h\"\n#include \"DynBase.h\"\n//#include <iostream>\nusing std::cout;\nusing std::endl;\n\nShape::~Shape() \n{\n\tcout << \"~Shape ...\" << endl;\n}\n\nvoid Circle::Draw()\n{\n\tcout << \"Circle::Draw() ...\" << endl;\n}\n\nCircle::~Circle()\n{\n\tcout << \"~Circle ...\" << endl;\n}\n\nvoid Square::Draw()\n{\n\tcout << \"Square::Draw() ...\" << endl;\n}\n\nSquare::~Square()\n{\n\tcout << \"~Square ...\" << endl;\n}\n\nvoid Rectangle::Draw()\n{\n\tcout << \"Rectangle::Draw() ...\" << endl;\n}\n\nRectangle::~Rectangle()\n{\n\tcout << \"~Rectangle ...\" << endl;\n}\n\nREGISTER_CLASS(Circle);\nREGISTER_CLASS(Square);\nREGISTER_CLASS(Rectangle);\n\n/*class CircleRegister\n{\npublic: \n\tstatic void* NewInstance()\n\t{\n\t\treturn new Rectangle;\n\t}\nprivate:\n\tstatic Register reg_;\n};\nRegister CircleRegister::reg_(\"Circle\", CircleRegister::NewInstance);*/", "code_tokens": ["Ġ#", "include", "Ġ\"", "Shape", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Dyn", "Base", ".", "h", "\"", "Ċ", "//#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġstd", "::", "cout", ";", "Ċ", "using", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "Shape", "::~", "Shape", "()", "Ġ", "Ċ", "{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"~", "Shape", "Ġ...", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCircle", "::", "Draw", "()", "Ċ", "{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Circle", "::", "Draw", "()", "Ġ...", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "Circle", "::~", "Circle", "()", "Ċ", "{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"~", "Circle", "Ġ...", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSquare", "::", "Draw", "()", "Ċ", "{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Square", "::", "Draw", "()", "Ġ...", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "Square", "::~", "Square", "()", "Ċ", "{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"~", "Square", "Ġ...", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRectangle", "::", "Draw", "()", "Ċ", "{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Rectangle", "::", "Draw", "()", "Ġ...", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "Rectangle", "::~", "Rectangle", "()", "Ċ", "{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"~", "Rectangle", "Ġ...", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "REGISTER", "_", "CLASS", "(", "Circle", ");", "Ċ", "REGISTER", "_", "CLASS", "(", "Square", ");", "Ċ", "REGISTER", "_", "CLASS", "(", "Rectangle", ");", "Ċ", "Ċ", "/*", "class", "ĠCircle", "Register", "Ċ", "{", "Ċ", "public", ":", "ĠĊ", "ĉ", "static", "Ġvoid", "*", "ĠNew", "Instance", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "ĠRectangle", ";", "Ċ", "ĉ", "}", "Ċ", "private", ":", "Ċ", "ĉ", "static", "ĠRegister", "Ġreg", "_;", "Ċ", "};", "Ċ", "Register", "ĠCircle", "Register", "::", "reg", "_(\"", "Circle", "\",", "ĠCircle", "Register", "::", "New", "Instance", ");*/"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::142", "code": "\n\n#include \"stdfx.h\"\n//#include \"tfxparam.h\"\n#include \"trop.h\"\n//===================================================================\n\nclass PremultiplyFx : public TStandardRasterFx {\n  FX_PLUGIN_DECLARATION(PremultiplyFx)\n  TRasterFxPort m_input;\n\npublic:\n  PremultiplyFx() { addInputPort(\"Source\", m_input); }\n  ~PremultiplyFx(){};\n\n  bool doGetBBox(double frame, TRectD &bBox, const TRenderSettings &info) {\n    if (m_input.isConnected())\n      return m_input->doGetBBox(frame, bBox, info);\n    else {\n      bBox = TRectD();\n      return false;\n    }\n  }\n\n  void doCompute(TTile &tile, double frame, const TRenderSettings &ri);\n  bool canHandle(const TRenderSettings &info, double frame) { return true; }\n};\n\n//------------------------------------------------------------------------------\n\nvoid PremultiplyFx::doCompute(TTile &tile, double frame,\n                              const TRenderSettings &ri) {\n  if (!m_input.isConnected()) return;\n\n  m_input->compute(tile, frame, ri);\n\n  TRop::premultiply(tile.getRaster());\n}\n\nFX_PLUGIN_IDENTIFIER(PremultiplyFx, \"premultiplyFx\");\n", "code_tokens": ["Ċ", "Ċ", "#", "include", "Ġ\"", "std", "fx", ".", "h", "\"", "Ċ", "//#", "include", "Ġ\"", "t", "fx", "param", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "t", "rop", ".", "h", "\"", "Ċ", "//================================================================", "===", "Ċ", "Ċ", "class", "ĠPre", "multiply", "Fx", "Ġ:", "Ġpublic", "ĠT", "Standard", "Raster", "Fx", "Ġ{", "Ċ", "Ġ", "ĠFX", "_", "PLUGIN", "_", "DECL", "AR", "ATION", "(", "Pre", "multiply", "Fx", ")", "Ċ", "Ġ", "ĠTR", "aster", "Fx", "Port", "Ġm", "_", "input", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "ĠPre", "multiply", "Fx", "()", "Ġ{", "Ġadd", "Input", "Port", "(\"", "Source", "\",", "Ġm", "_", "input", ");", "Ġ}", "Ċ", "Ġ", "Ġ~", "Pre", "multiply", "Fx", "(){};", "Ċ", "Ċ", "Ġ", "Ġbool", "Ġdo", "Get", "BBox", "(", "double", "Ġframe", ",", "ĠT", "Rect", "D", "Ġ&", "b", "Box", ",", "Ġconst", "ĠTR", "ender", "Settings", "Ġ&", "info", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "_", "input", ".", "isConnected", "())", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġm", "_", "input", "->", "do", "Get", "BBox", "(", "frame", ",", "Ġb", "Box", ",", "Ġinfo", ");", "Ċ", "ĠĠĠ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġb", "Box", "Ġ=", "ĠT", "Rect", "D", "();", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġdo", "Compute", "(", "T", "Tile", "Ġ&", "tile", ",", "Ġdouble", "Ġframe", ",", "Ġconst", "ĠTR", "ender", "Settings", "Ġ&", "ri", ");", "Ċ", "Ġ", "Ġbool", "Ġcan", "Handle", "(", "const", "ĠTR", "ender", "Settings", "Ġ&", "info", ",", "Ġdouble", "Ġframe", ")", "Ġ{", "Ġreturn", "Ġtrue", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "//------------------------------------------------------------------------------", "Ċ", "Ċ", "void", "ĠPre", "multiply", "Fx", "::", "do", "Compute", "(", "T", "Tile", "Ġ&", "tile", ",", "Ġdouble", "Ġframe", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "ĠTR", "ender", "Settings", "Ġ&", "ri", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "m", "_", "input", ".", "isConnected", "())", "Ġreturn", ";", "Ċ", "Ċ", "Ġ", "Ġm", "_", "input", "->", "compute", "(", "tile", ",", "Ġframe", ",", "Ġri", ");", "Ċ", "Ċ", "Ġ", "ĠTR", "op", "::", "pre", "multiply", "(", "tile", ".", "get", "Raster", "());", "Ċ", "}", "Ċ", "Ċ", "FX", "_", "PLUGIN", "_", "IDENTIFIER", "(", "Pre", "multiply", "Fx", ",", "Ġ\"", "pre", "multiply", "Fx", "\");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::143", "code": "// GLFW Engine.\n// -----------------------------------------------------------------------------\n// Copyright (C) 2011, ZEUS project (See authors)\n//\n// This program is open source and distributed under the New BSD License. See\n// license for more detail.\n// -----------------------------------------------------------------------------\n\n#include <Core/GLFWEngine.h>\n#include <Devices/GLFWKeyboard.h>\n#include <Devices/GLFWMouse.h>\n#include <Display/Camera.h>\n#include <Display/GLFWWindow.h>\n#include <Math/Vector.h>\n\n#include <GL/glfw.h>\n\n#include <stdlib.h>\n\nusing namespace ZEUS::Display;\nusing namespace ZEUS::Devices;\nusing namespace ZEUS::Math;\n\nnamespace ZEUS {\n    namespace Core {\n\n        GLFWEngine::GLFWEngine()\n            : IEngine() {\n            if (!glfwInit()) exit(EXIT_FAILURE);\n\n            Vector<2, unsigned int> res(800, 600);\n            window = new Display::GLFWWindow(res);\n\n            IKeyboard::Add<GLFWKeyboard>();\n            IMouse::Add<GLFWMouse>();\n        }\n        \n        GLFWEngine::~GLFWEngine(){\n            glfwTerminate();\n        }\n        \n        GLFWEngine* GLFWEngine::CreateEngine(){\n            GLFWEngine* tmp = new GLFWEngine();\n            engine = tmp;\n            return tmp;\n        }\n        \n        void GLFWEngine::Initialize(){\n            glfwSetTime(0.0);\n        }\n\n        double GLFWEngine::GetImplTime(){\n            return glfwGetTime();\n        }\n\n    }\n}\n", "code_tokens": ["Ġ//", "ĠGLFW", "ĠEngine", ".", "Ċ", "//", "Ġ-----------------------------------------------------------------------------", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", ",", "Ġ", "ZE", "US", "Ġproject", "Ġ(", "See", "Ġauthors", ")", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġopen", "Ġsource", "Ġand", "Ġdistributed", "Ġunder", "Ġthe", "ĠNew", "ĠBSD", "ĠLicense", ".", "ĠSee", "Ċ", "//", "Ġlicense", "Ġfor", "Ġmore", "Ġdetail", ".", "Ċ", "//", "Ġ-----------------------------------------------------------------------------", "Ċ", "Ċ", "#", "include", "Ġ<", "Core", "/", "GLFW", "Engine", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Devices", "/", "GLFW", "Keyboard", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Devices", "/", "GLFW", "Mouse", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Display", "/", "Camera", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Display", "/", "GLFW", "Window", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Math", "/", "Vector", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "GL", "/", "glfw", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġ", "ZE", "US", "::", "Display", ";", "Ċ", "using", "Ġnamespace", "Ġ", "ZE", "US", "::", "Devices", ";", "Ċ", "using", "Ġnamespace", "Ġ", "ZE", "US", "::", "Math", ";", "Ċ", "Ċ", "namespace", "Ġ", "ZE", "US", "Ġ{", "Ċ", "ĠĠĠ", "Ġnamespace", "ĠCore", "Ġ{", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠGLFW", "Engine", "::", "GLFW", "Engine", "()", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ:", "ĠI", "Engine", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "glfw", "Init", "())", "Ġexit", "(", "EXIT", "_", "FAILURE", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠVector", "<", "2", ",", "Ġunsigned", "Ġint", ">", "Ġres", "(", "800", ",", "Ġ600", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġwindow", "Ġ=", "Ġnew", "ĠDisplay", "::", "GLFW", "Window", "(", "res", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠI", "Keyboard", "::", "Add", "<", "GLFW", "Keyboard", ">();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠI", "Mouse", "::", "Add", "<", "GLFW", "Mouse", ">();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "ĠGLFW", "Engine", "::~", "GLFW", "Engine", "(){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġglfw", "Terminate", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "ĠGLFW", "Engine", "*", "ĠGLFW", "Engine", "::", "Create", "Engine", "(){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠGLFW", "Engine", "*", "Ġtmp", "Ġ=", "Ġnew", "ĠGLFW", "Engine", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġengine", "Ġ=", "Ġtmp", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġtmp", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġvoid", "ĠGLFW", "Engine", "::", "Initialize", "(){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġglfw", "Set", "Time", "(", "0", ".", "0", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "ĠGLFW", "Engine", "::", "Get", "Impl", "Time", "(){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġglfw", "GetTime", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::144", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_82_bad.cpp\r\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__CWE805.label.xml\r\nTemplate File: sources-sink-82_bad.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 121 Stack Based Buffer Overflow\r\n * BadSource:  Set data pointer to the bad buffer\r\n * GoodSource: Set data pointer to the good buffer\r\n * Sinks: memcpy\r\n *    BadSink : Copy twoIntsStruct array to data using memcpy\r\n * Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer\r\n *\r\n * */\r\n#ifndef OMITBAD\r\n\r\n#include \"std_testcase.h\"\r\n#include \"CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_82.h\"\r\n\r\nnamespace CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_82\r\n{\r\n\r\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_82_bad::action(twoIntsStruct * data)\r\n{\r\n    {\r\n        twoIntsStruct source[100];\r\n        {\r\n            size_t i;\r\n            /* Initialize array */\r\n            for (i = 0; i < 100; i++)\r\n            {\r\n                source[i].intOne = 0;\r\n                source[i].intTwo = 0;\r\n            }\r\n        }\r\n        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */\r\n        memcpy(data, source, 100*sizeof(twoIntsStruct));\r\n        printStructLine(&data[0]);\r\n    }\r\n}\r\n\r\n}\r\n#endif /* OMITBAD */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "121", "_", "Stack", "_", "Based", "_", "Buffer", "_", "Overflow", "__", "CWE", "805", "_", "struct", "_", "alloca", "_", "memcpy", "_", "82", "_", "bad", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "121", "_", "Stack", "_", "Based", "_", "Buffer", "_", "Overflow", "__", "CWE", "805", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "-", "82", "_", "bad", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ121", "ĠStack", "ĠBased", "ĠBuffer", "ĠOverflow", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġ", "ĠSet", "Ġdata", "Ġpointer", "Ġto", "Ġthe", "Ġbad", "Ġbuffer", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠSet", "Ġdata", "Ġpointer", "Ġto", "Ġthe", "Ġgood", "Ġbuffer", "č", "Ċ", "Ġ*", "ĠSink", "s", ":", "Ġmemcpy", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "ĠCopy", "Ġtwo", "Ints", "Struct", "Ġarray", "Ġto", "Ġdata", "Ġusing", "Ġmemcpy", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ82", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġin", "Ġa", "Ġparameter", "Ġto", "Ġan", "Ġvirtual", "Ġmethod", "Ġcalled", "Ġvia", "Ġa", "Ġpointer", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "BAD", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "CWE", "121", "_", "Stack", "_", "Based", "_", "Buffer", "_", "Overflow", "__", "CWE", "805", "_", "struct", "_", "alloca", "_", "memcpy", "_", "82", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "121", "_", "Stack", "_", "Based", "_", "Buffer", "_", "Overflow", "__", "CWE", "805", "_", "struct", "_", "alloca", "_", "memcpy", "_", "82", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "ĠCWE", "121", "_", "Stack", "_", "Based", "_", "Buffer", "_", "Overflow", "__", "CWE", "805", "_", "struct", "_", "alloca", "_", "memcpy", "_", "82", "_", "bad", "::", "action", "(", "two", "Ints", "Struct", "Ġ*", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtwo", "Ints", "Struct", "Ġsource", "[", "100", "];", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsize", "_", "t", "Ġi", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ/*", "ĠInitialize", "Ġarray", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100", ";", "Ġi", "++)", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġsource", "[", "i", "].", "int", "One", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġsource", "[", "i", "].", "int", "Two", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "ĠP", "OT", "ENTIAL", "ĠF", "LA", "W", ":", "ĠPossible", "Ġbuffer", "Ġoverflow", "Ġif", "Ġdata", "Ġ<", "Ġ100", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġmemcpy", "(", "data", ",", "Ġsource", ",", "Ġ100", "*", "sizeof", "(", "two", "Ints", "Struct", "));", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprint", "Struct", "Line", "(&", "data", "[", "0", "]);", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "BAD", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::145", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"chrome/browser/chromeos/set_time_dialog.h\"\n\n#include \"base/metrics/user_metrics.h\"\n#include \"base/strings/string16.h\"\n#include \"chrome/common/url_constants.h\"\n#include \"chromeos/login/login_state/login_state.h\"\n#include \"ui/gfx/geometry/size.h\"\n\nnamespace chromeos {\n\nnamespace {\n\n// Dialog width and height in DIPs.\nconst int kDefaultWidth = 530;\nconst int kDefaultHeightWithTimezone = 286;\nconst int kDefaultHeightWithoutTimezone = 228;\n\n}  // namespace\n\n// static\nvoid SetTimeDialog::ShowDialog(gfx::NativeWindow parent) {\n  base::RecordAction(base::UserMetricsAction(\"Options_SetTimeDialog_Show\"));\n  auto* dialog = new SetTimeDialog();\n  dialog->ShowSystemDialog(parent);\n}\n\n// static\nbool SetTimeDialog::ShouldShowTimezone() {\n  // After login the user should set the timezone via Settings, which applies\n  // additional restrictions.\n  return !LoginState::Get()->IsUserLoggedIn();\n}\n\nSetTimeDialog::SetTimeDialog()\n    : SystemWebDialogDelegate(GURL(chrome::kChromeUISetTimeURL),\n                              base::string16() /* title */) {}\n\nSetTimeDialog::~SetTimeDialog() = default;\n\nvoid SetTimeDialog::GetDialogSize(gfx::Size* size) const {\n  size->SetSize(kDefaultWidth, ShouldShowTimezone()\n                                   ? kDefaultHeightWithTimezone\n                                   : kDefaultHeightWithoutTimezone);\n}\n\n}  // namespace chromeos\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "browser", "/", "chrome", "os", "/", "set", "_", "time", "_", "dialog", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "metrics", "/", "user", "_", "metrics", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "strings", "/", "string", "16", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "common", "/", "url", "_", "constants", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "chrome", "os", "/", "login", "/", "login", "_", "state", "/", "login", "_", "state", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "/", "gfx", "/", "geometry", "/", "size", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġchrome", "os", "Ġ{", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "//", "ĠDialog", "Ġwidth", "Ġand", "Ġheight", "Ġin", "ĠD", "IPs", ".", "Ċ", "const", "Ġint", "Ġk", "Default", "Width", "Ġ=", "Ġ5", "30", ";", "Ċ", "const", "Ġint", "Ġk", "Default", "Height", "With", "Timezone", "Ġ=", "Ġ2", "86", ";", "Ċ", "const", "Ġint", "Ġk", "Default", "Height", "Without", "Timezone", "Ġ=", "Ġ2", "28", ";", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "//", "Ġstatic", "Ċ", "void", "ĠSet", "Time", "Dialog", "::", "ShowDialog", "(", "gfx", "::", "Native", "Window", "Ġparent", ")", "Ġ{", "Ċ", "Ġ", "Ġbase", "::", "Record", "Action", "(", "base", "::", "User", "Metrics", "Action", "(\"", "Options", "_", "Set", "Time", "Dialog", "_", "Show", "\"));", "Ċ", "Ġ", "Ġauto", "*", "Ġdialog", "Ġ=", "Ġnew", "ĠSet", "Time", "Dialog", "();", "Ċ", "Ġ", "Ġdialog", "->", "Show", "System", "Dialog", "(", "parent", ");", "Ċ", "}", "Ċ", "Ċ", "//", "Ġstatic", "Ċ", "bool", "ĠSet", "Time", "Dialog", "::", "Should", "Show", "Timezone", "()", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠAfter", "Ġlogin", "Ġthe", "Ġuser", "Ġshould", "Ġset", "Ġthe", "Ġtimezone", "Ġvia", "ĠSettings", ",", "Ġwhich", "Ġapplies", "Ċ", "Ġ", "Ġ//", "Ġadditional", "Ġrestrictions", ".", "Ċ", "Ġ", "Ġreturn", "Ġ!", "Login", "State", "::", "Get", "()->", "Is", "User", "LoggedIn", "();", "Ċ", "}", "Ċ", "Ċ", "Set", "Time", "Dialog", "::", "Set", "Time", "Dialog", "()", "Ċ", "ĠĠĠ", "Ġ:", "ĠSystem", "Web", "Dialog", "Delegate", "(", "G", "URL", "(", "chrome", "::", "k", "Chrome", "UI", "Set", "Time", "URL", "),", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbase", "::", "string", "16", "()", "Ġ/*", "Ġtitle", "Ġ*/)", "Ġ{}", "Ċ", "Ċ", "Set", "Time", "Dialog", "::~", "Set", "Time", "Dialog", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "void", "ĠSet", "Time", "Dialog", "::", "Get", "Dialog", "Size", "(", "gfx", "::", "Size", "*", "Ġsize", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġsize", "->", "SetSize", "(", "k", "Default", "Width", ",", "ĠShould", "Show", "Timezone", "()", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ?", "Ġk", "Default", "Height", "With", "Timezone", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ:", "Ġk", "Default", "Height", "Without", "Timezone", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġchrome", "os", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::146", "code": "/* -*- mode: c++; fill-column: 132; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n\n#include \"irods_auth_object.hpp\"\n\nnamespace irods {\n\n    auth_object::auth_object(\n        rError_t* _r_error ) : r_error_( _r_error ) {\n        // TODO - stub\n    }\n\n    auth_object::~auth_object() {\n        // TODO - stub\n    }\n\n    auth_object::auth_object(\n        const auth_object& _rhs ) {\n        r_error_        = _rhs.r_error();\n        request_result_ = _rhs.request_result();\n        context_        = _rhs.context();\n    }\n\n    auth_object& auth_object::operator=(\n        const auth_object& _rhs ) {\n        r_error_        = _rhs.r_error();\n        request_result_ = _rhs.request_result();\n        context_        = _rhs.context();\n        return *this;\n    }\n\n    bool auth_object::operator==(\n        const auth_object& _rhs ) const {\n        // For the base class just always return true\n        return ( r_error_        == _rhs.r_error()        &&\n                 request_result_ == _rhs.request_result() &&\n                 context_        == _rhs.context() );\n    }\n\n}; // namespace irods\n", "code_tokens": ["Ġ/*", "Ġ-", "*-", "Ġmode", ":", "Ġc", "++;", "Ġfill", "-", "column", ":", "Ġ132", ";", "Ġc", "-", "basic", "-", "offset", ":", "Ġ4", ";", "Ġindent", "-", "tabs", "-", "mode", ":", "Ġnil", "Ġ-", "*-", "Ġ*/", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "iro", "ds", "_", "auth", "_", "object", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġi", "ro", "ds", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġauth", "_", "object", "::", "auth", "_", "object", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġr", "Error", "_", "t", "*", "Ġ_", "r", "_", "error", "Ġ)", "Ġ:", "Ġr", "_", "error", "_(", "Ġ_", "r", "_", "error", "Ġ)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠTODO", "Ġ-", "Ġstub", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġauth", "_", "object", "::~", "auth", "_", "object", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠTODO", "Ġ-", "Ġstub", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġauth", "_", "object", "::", "auth", "_", "object", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġauth", "_", "object", "&", "Ġ_", "rhs", "Ġ)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġr", "_", "error", "_", "ĠĠĠĠĠĠĠ", "Ġ=", "Ġ_", "rhs", ".", "r", "_", "error", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġrequest", "_", "result", "_", "Ġ=", "Ġ_", "rhs", ".", "request", "_", "result", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcontext", "_", "ĠĠĠĠĠĠĠ", "Ġ=", "Ġ_", "rhs", ".", "context", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġauth", "_", "object", "&", "Ġauth", "_", "object", "::", "operator", "=(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġauth", "_", "object", "&", "Ġ_", "rhs", "Ġ)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġr", "_", "error", "_", "ĠĠĠĠĠĠĠ", "Ġ=", "Ġ_", "rhs", ".", "r", "_", "error", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġrequest", "_", "result", "_", "Ġ=", "Ġ_", "rhs", ".", "request", "_", "result", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcontext", "_", "ĠĠĠĠĠĠĠ", "Ġ=", "Ġ_", "rhs", ".", "context", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ*", "this", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġbool", "Ġauth", "_", "object", "::", "operator", "==(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġauth", "_", "object", "&", "Ġ_", "rhs", "Ġ)", "Ġconst", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠFor", "Ġthe", "Ġbase", "Ġclass", "Ġjust", "Ġalways", "Ġreturn", "Ġtrue", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ(", "Ġr", "_", "error", "_", "ĠĠĠĠĠĠĠ", "Ġ==", "Ġ_", "rhs", ".", "r", "_", "error", "()", "ĠĠĠĠĠĠĠ", "Ġ&&", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġrequest", "_", "result", "_", "Ġ==", "Ġ_", "rhs", ".", "request", "_", "result", "()", "Ġ&&", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontext", "_", "ĠĠĠĠĠĠĠ", "Ġ==", "Ġ_", "rhs", ".", "context", "()", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "};", "Ġ//", "Ġnamespace", "Ġi", "ro", "ds", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::147", "code": "#include <iostream>\nusing namespace std;\n#include <omp.h>\n\n#define SIZE 8\nint main(void){\n\tint x[SIZE];\n\tint sum=0;\n\tfor(int i=0;i<SIZE;i++){\n\t\tx[i]=i;\n\t}\n\t#pragma omp parallel for reduction (+:sum)\n\tfor(int i=0;i<SIZE;i++){\n                sum+=x[i];\n        }\n\tcout<<sum<<std::endl;\n\treturn 0; \n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "include", "Ġ<", "omp", ".", "h", ">", "Ċ", "Ċ", "#", "define", "ĠSIZE", "Ġ8", "Ċ", "int", "Ġmain", "(", "void", "){", "Ċ", "ĉ", "int", "Ġx", "[", "SIZE", "];", "Ċ", "ĉ", "int", "Ġsum", "=", "0", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "SIZE", ";", "i", "++){", "Ċ", "ĉ", "ĉ", "x", "[", "i", "]=", "i", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "#", "pragma", "Ġomp", "Ġparallel", "Ġfor", "Ġreduction", "Ġ(+", ":", "sum", ")", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "SIZE", ";", "i", "++){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "+=", "x", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĉ", "cout", "<<", "sum", "<<", "std", "::", "endl", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ġ", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::148", "code": "#include \"arrow.h\"\n\n/**\n * @brief Arrow::Arrow\n */\nArrow::Arrow() : Shape(SHAPES::ARROW) {\n}\n\n/**\n * @brief Arrow::Arrow\n * @param col Colour of the new object\n * @param pos Starting point for the new object\n */\nArrow::Arrow(QColor col, QPoint pos) : Shape(SHAPES::ARROW, col, pos) {\n}\n\n/**\n * @brief Arrow::draw\n * Draws the object on top of the specified frame.\n * @param frame Frame to draw on.\n * @return Returns the frame with drawing.\n */\ncv::Mat Arrow::draw(cv::Mat &frame) {\n    cv::arrowedLine(frame, draw_start, draw_end, colour, LINE_THICKNESS);\n    return frame;\n}\n\n/**\n * @brief Arrow::handle_new_pos\n * Function to handle the new position of the mouse.\n * Does not need to store the new position.\n * @param pos\n */\nvoid Arrow::handle_new_pos(QPoint pos) {\n}\n\n/**\n * @brief Arrow::write\n * @param json\n * Writes to a Json object.\n */\nvoid Arrow::write(QJsonObject& json) {\n    write_shape(json);\n}\n\n/**\n * @brief Arrow::read\n * @param json\n * Reads from a Json object.\n */\nvoid Arrow::read(const QJsonObject& json) {\n    read_shape(json);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "arrow", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠAr", "row", "::", "Arrow", "Ċ", "Ġ*/", "Ċ", "Arrow", "::", "Arrow", "()", "Ġ:", "ĠShape", "(", "SHAPE", "S", "::", "ARROW", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠAr", "row", "::", "Arrow", "Ċ", "Ġ*", "Ġ@", "param", "Ġcol", "ĠColour", "Ġof", "Ġthe", "Ġnew", "Ġobject", "Ċ", "Ġ*", "Ġ@", "param", "Ġpos", "ĠStarting", "Ġpoint", "Ġfor", "Ġthe", "Ġnew", "Ġobject", "Ċ", "Ġ*/", "Ċ", "Arrow", "::", "Arrow", "(", "QColor", "Ġcol", ",", "ĠQPoint", "Ġpos", ")", "Ġ:", "ĠShape", "(", "SHAPE", "S", "::", "ARROW", ",", "Ġcol", ",", "Ġpos", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠAr", "row", "::", "draw", "Ċ", "Ġ*", "ĠDraw", "s", "Ġthe", "Ġobject", "Ġon", "Ġtop", "Ġof", "Ġthe", "Ġspecified", "Ġframe", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġframe", "ĠFrame", "Ġto", "Ġdraw", "Ġon", ".", "Ċ", "Ġ*", "Ġ@", "return", "ĠReturns", "Ġthe", "Ġframe", "Ġwith", "Ġdrawing", ".", "Ċ", "Ġ*/", "Ċ", "cv", "::", "Mat", "ĠAr", "row", "::", "draw", "(", "cv", "::", "Mat", "Ġ&", "frame", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġcv", "::", "arrow", "ed", "Line", "(", "frame", ",", "Ġdraw", "_", "start", ",", "Ġdraw", "_", "end", ",", "Ġcolour", ",", "ĠLINE", "_", "TH", "ICK", "NESS", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġframe", ";", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠAr", "row", "::", "handle", "_", "new", "_", "pos", "Ċ", "Ġ*", "ĠFunction", "Ġto", "Ġhandle", "Ġthe", "Ġnew", "Ġposition", "Ġof", "Ġthe", "Ġmouse", ".", "Ċ", "Ġ*", "ĠDoes", "Ġnot", "Ġneed", "Ġto", "Ġstore", "Ġthe", "Ġnew", "Ġposition", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġpos", "Ċ", "Ġ*/", "Ċ", "void", "ĠAr", "row", "::", "handle", "_", "new", "_", "pos", "(", "QPoint", "Ġpos", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠAr", "row", "::", "write", "Ċ", "Ġ*", "Ġ@", "param", "Ġjson", "Ċ", "Ġ*", "ĠWrites", "Ġto", "Ġa", "ĠJson", "Ġobject", ".", "Ċ", "Ġ*/", "Ċ", "void", "ĠAr", "row", "::", "write", "(", "Q", "JsonObject", "&", "Ġjson", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġwrite", "_", "shape", "(", "json", ");", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠAr", "row", "::", "read", "Ċ", "Ġ*", "Ġ@", "param", "Ġjson", "Ċ", "Ġ*", "ĠReads", "Ġfrom", "Ġa", "ĠJson", "Ġobject", ".", "Ċ", "Ġ*/", "Ċ", "void", "ĠAr", "row", "::", "read", "(", "const", "ĠQ", "JsonObject", "&", "Ġjson", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġread", "_", "shape", "(", "json", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::149", "code": "#include \"macros.h\"\n#include \"thread.h\"\n\nusing namespace std;\n\nndb_thread::~ndb_thread()\n{\n}\n\nvoid\nndb_thread::start()\n{\n  thd_ = std::move(thread(&ndb_thread::run, this));\n  if (daemon_)\n    thd_.detach();\n}\n\nvoid\nndb_thread::join()\n{\n  ALWAYS_ASSERT(!daemon_);\n  thd_.join();\n}\n\n// can be overloaded by subclasses\nvoid\nndb_thread::run()\n{\n  ALWAYS_ASSERT(body_);\n  body_();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "macros", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "thread", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "ndb", "_", "thread", "::~", "ndb", "_", "thread", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "Ċ", "ndb", "_", "thread", "::", "start", "()", "Ċ", "{", "Ċ", "Ġ", "Ġth", "d", "_", "Ġ=", "Ġstd", "::", "move", "(", "thread", "(&", "ndb", "_", "thread", "::", "run", ",", "Ġthis", "));", "Ċ", "Ġ", "Ġif", "Ġ(", "daemon", "_)", "Ċ", "ĠĠĠ", "Ġth", "d", "_.", "detach", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ċ", "ndb", "_", "thread", "::", "join", "()", "Ċ", "{", "Ċ", "Ġ", "ĠAL", "WAYS", "_", "ASSERT", "(!", "daemon", "_);", "Ċ", "Ġ", "Ġth", "d", "_.", "join", "();", "Ċ", "}", "Ċ", "Ċ", "//", "Ġcan", "Ġbe", "Ġoverloaded", "Ġby", "Ġsubclasses", "Ċ", "void", "Ċ", "ndb", "_", "thread", "::", "run", "()", "Ċ", "{", "Ċ", "Ġ", "ĠAL", "WAYS", "_", "ASSERT", "(", "body", "_);", "Ċ", "Ġ", "Ġbody", "_();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::150", "code": "#include <seqan/sequence.h>\n#include <seqan/basic.h>\n#include <seqan/find_motif.h>\n#include <seqan/file.h>\n#include <iostream>\n\nusing namespace seqan;\n\ntemplate<typename TString>//String<char>\nvoid countOneMers(TString const& str){\n\tIterator<TString>::Type StringIterator = begin(str);\n\t\n\tIterator<TString>::Type EndIterator = end(str);\n\tString<unsigned int> counter;\n\tresize(counter, 26,0);//26 = AlphSize\n\tunsigned int normalize =ordValue('a');\n\tunsigned int a=0;\n\twhile(StringIterator != EndIterator){\n\t\ta=  ordValue(*StringIterator);\n\t\tstd::cout<<a-normalize<<std::endl;\n\t\t++value(counter,(a-normalize));\n\t\t++StringIterator;\n\t}\n\tStringIterator = begin(str);\n\t//Iterator<String<unsigned int> >::Type countIterator = begin(counter);\n\tint i=0;\n\twhile(i<26){\n\t\tif(counter[i]>0)\n\t\t\tstd::cout<<char(i+'a')<<\" \"<<counter[i]<<std::endl;\n\t\t++i;\n\t\t\n\t}\n}\nvoid replaceAs(String<char>& str){\n\tstr=\"hi\";\n\n\n}\n\nint main(){\n\n\tString<char> str = \"helloworld\";\n\t//countOneMers(str);\n\treplaceAs(str);\n\tstd::cout<<str;\n\n\n\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "basic", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "find", "_", "mot", "if", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "template", "<", "typename", "ĠT", "String", ">", "//", "String", "<", "char", ">", "Ċ", "void", "Ġcount", "One", "M", "ers", "(", "T", "String", "Ġconst", "&", "Ġstr", "){", "Ċ", "ĉ", "Iterator", "<", "T", "String", ">::", "Type", "ĠString", "Iterator", "Ġ=", "Ġbegin", "(", "str", ");", "Ċ", "ĉĊ", "ĉ", "Iterator", "<", "T", "String", ">::", "Type", "ĠEnd", "Iterator", "Ġ=", "Ġend", "(", "str", ");", "Ċ", "ĉ", "String", "<", "unsigned", "Ġint", ">", "Ġcounter", ";", "Ċ", "ĉ", "resize", "(", "counter", ",", "Ġ26", ",", "0", ");//", "26", "Ġ=", "ĠAl", "ph", "Size", "Ċ", "ĉ", "unsigned", "Ġint", "Ġnormalize", "Ġ=", "ord", "Value", "('", "a", "');", "Ċ", "ĉ", "unsigned", "Ġint", "Ġa", "=", "0", ";", "Ċ", "ĉ", "while", "(", "String", "Iterator", "Ġ!=", "ĠEnd", "Iterator", "){", "Ċ", "ĉ", "ĉ", "a", "=", "Ġ", "Ġord", "Value", "(*", "String", "Iterator", ");", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "<<", "a", "-", "normalize", "<<", "std", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "++", "value", "(", "counter", ",(", "a", "-", "normalize", "));", "Ċ", "ĉ", "ĉ", "++", "String", "Iterator", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "String", "Iterator", "Ġ=", "Ġbegin", "(", "str", ");", "Ċ", "ĉ", "//", "Iterator", "<", "String", "<", "unsigned", "Ġint", ">", "Ġ>::", "Type", "Ġcount", "Iterator", "Ġ=", "Ġbegin", "(", "counter", ");", "Ċ", "ĉ", "int", "Ġi", "=", "0", ";", "Ċ", "ĉ", "while", "(", "i", "<", "26", "){", "Ċ", "ĉ", "ĉ", "if", "(", "counter", "[", "i", "]>", "0", ")", "Ċ", "ĉĉ", "ĉ", "std", "::", "cout", "<<", "char", "(", "i", "+'", "a", "')", "<<\"", "Ġ\"<<", "counter", "[", "i", "]<<", "std", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "++", "i", ";", "Ċ", "ĉĉĊ", "ĉ", "}", "Ċ", "}", "Ċ", "void", "Ġreplace", "As", "(", "String", "<", "char", ">&", "Ġstr", "){", "Ċ", "ĉ", "str", "=\"", "hi", "\";", "Ċ", "Ċ", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ċ", "ĉ", "String", "<", "char", ">", "Ġstr", "Ġ=", "Ġ\"", "h", "ellow", "orld", "\";", "Ċ", "ĉ", "//", "count", "One", "M", "ers", "(", "str", ");", "Ċ", "ĉ", "replace", "As", "(", "str", ");", "Ċ", "ĉ", "std", "::", "cout", "<<", "str", ";", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::151", "code": "#include \"UniformBuffer.hpp\"\n\n#include <iostream>\n#include <cstring>\n\nUniformBuffer::UniformBuffer(const void* data, unsigned int size, VkDevice device, VkPhysicalDevice physicalDevice, VkDescriptorPool descriptorPool, VkShaderStageFlags flags) : Buffer(device, physicalDevice, descriptorPool) {\n    this->device = device;\n    this->physicalDevice = physicalDevice;\n    this->descriptorPool = descriptorPool;\n    \n    createBuffer(size, VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT, VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT, &buffer, &bufferMemory);\n    \n    // Copy data to mapped memory.\n    setData(data, size);\n    \n    // Create descriptor set.\n    createDescriptorSetLayout(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER, flags);\n    createDescriptorSet(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER, buffer, size);\n}\n\nUniformBuffer::~UniformBuffer() {\n    vkDestroyBuffer(device, buffer, nullptr);\n    vkFreeMemory(device, bufferMemory, nullptr);\n}\n\nvoid UniformBuffer::setData(const void* data, unsigned int size) {\n    void* mappedMemory;\n    vkMapMemory(device, bufferMemory, 0, size, 0, &mappedMemory);\n    memcpy(mappedMemory, data, size);\n    vkUnmapMemory(device, bufferMemory);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Uniform", "Buffer", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "Ċ", "Uniform", "Buffer", "::", "Uniform", "Buffer", "(", "const", "Ġvoid", "*", "Ġdata", ",", "Ġunsigned", "Ġint", "Ġsize", ",", "ĠVk", "Device", "Ġdevice", ",", "ĠVk", "PhysicalDevice", "Ġphysical", "Device", ",", "ĠVk", "Descriptor", "Pool", "Ġdescriptor", "Pool", ",", "ĠVk", "Shader", "Stage", "Flags", "Ġflags", ")", "Ġ:", "ĠBuffer", "(", "device", ",", "Ġphysical", "Device", ",", "Ġdescriptor", "Pool", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "device", "Ġ=", "Ġdevice", ";", "Ċ", "ĠĠĠ", "Ġthis", "->", "physical", "Device", "Ġ=", "Ġphysical", "Device", ";", "Ċ", "ĠĠĠ", "Ġthis", "->", "descriptor", "Pool", "Ġ=", "Ġdescriptor", "Pool", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġcreate", "Buffer", "(", "size", ",", "ĠVK", "_", "BUFFER", "_", "USAGE", "_", "UNIFORM", "_", "BUFFER", "_", "BIT", ",", "ĠVK", "_", "MEMORY", "_", "PROPERTY", "_", "HOST", "_", "VISIBLE", "_", "BIT", "Ġ|", "ĠVK", "_", "MEMORY", "_", "PROPERTY", "_", "HOST", "_", "CO", "HER", "ENT", "_", "BIT", ",", "Ġ&", "buffer", ",", "Ġ&", "buffer", "Memory", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ//", "ĠCopy", "Ġdata", "Ġto", "Ġmapped", "Ġmemory", ".", "Ċ", "ĠĠĠ", "ĠsetData", "(", "data", ",", "Ġsize", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ//", "ĠCreate", "Ġdescriptor", "Ġset", ".", "Ċ", "ĠĠĠ", "Ġcreate", "Descriptor", "Set", "Layout", "(", "VK", "_", "DESCRIPTOR", "_", "TYPE", "_", "UNIFORM", "_", "BUFFER", ",", "Ġflags", ");", "Ċ", "ĠĠĠ", "Ġcreate", "Descriptor", "Set", "(", "VK", "_", "DESCRIPTOR", "_", "TYPE", "_", "UNIFORM", "_", "BUFFER", ",", "Ġbuffer", ",", "Ġsize", ");", "Ċ", "}", "Ċ", "Ċ", "Uniform", "Buffer", "::~", "Uniform", "Buffer", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġvk", "Destroy", "Buffer", "(", "device", ",", "Ġbuffer", ",", "Ġnullptr", ");", "Ċ", "ĠĠĠ", "Ġvk", "Free", "Memory", "(", "device", ",", "Ġbuffer", "Memory", ",", "Ġnullptr", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠUniform", "Buffer", "::", "setData", "(", "const", "Ġvoid", "*", "Ġdata", ",", "Ġunsigned", "Ġint", "Ġsize", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġvoid", "*", "Ġmapped", "Memory", ";", "Ċ", "ĠĠĠ", "Ġvk", "Map", "Memory", "(", "device", ",", "Ġbuffer", "Memory", ",", "Ġ0", ",", "Ġsize", ",", "Ġ0", ",", "Ġ&", "mapped", "Memory", ");", "Ċ", "ĠĠĠ", "Ġmemcpy", "(", "mapped", "Memory", ",", "Ġdata", ",", "Ġsize", ");", "Ċ", "ĠĠĠ", "Ġvk", "Unmap", "Memory", "(", "device", ",", "Ġbuffer", "Memory", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::152", "code": "#include <iostream>\n#include <map>\n#include <stdexcept>\n\nusing namespace std;\n\n\nint main(int argc, char* argv[]){\n\n\tmap<string, int> m;\n\t\n\tm[\"bob\"] = 56;\n\tm[\"alice\"] = 89;\n\tm[\"billy\"] = 3;\n\t\n\t// print it out\n\tmap<string,int>::iterator i;\n\tfor(i = m.begin(); i != m.end(); i++){\n\t\tcout << i->first << \": \" << i->second << endl;\n\t}\n\t\n\tcout << \"size: \" << m.size() << endl << endl;\n\t\n\ti = m.find(\"billy\");\n\tif(i == m.end()){ \n\t\tcout << \"No billy!\\n\";\n\t}else{\n\t\tcout << i->first << \": \" << i->second << endl;\n\t}\n\t\n\t\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "st", "dex", "cept", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[]", "){", "Ċ", "Ċ", "ĉ", "map", "<", "string", ",", "Ġint", ">", "Ġm", ";", "Ċ", "ĉĊ", "ĉ", "m", "[\"", "bob", "\"]", "Ġ=", "Ġ56", ";", "Ċ", "ĉ", "m", "[\"", "alice", "\"]", "Ġ=", "Ġ89", ";", "Ċ", "ĉ", "m", "[\"", "b", "il", "ly", "\"]", "Ġ=", "Ġ3", ";", "Ċ", "ĉĊ", "ĉ", "//", "Ġprint", "Ġit", "Ġout", "Ċ", "ĉ", "map", "<", "string", ",", "int", ">::", "iterator", "Ġi", ";", "Ċ", "ĉ", "for", "(", "i", "Ġ=", "Ġm", ".", "begin", "();", "Ġi", "Ġ!=", "Ġm", ".", "end", "();", "Ġi", "++){", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġi", "->", "first", "Ġ<<", "Ġ\":", "Ġ\"", "Ġ<<", "Ġi", "->", "second", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉ", "cout", "Ġ<<", "Ġ\"", "size", ":", "Ġ\"", "Ġ<<", "Ġm", ".", "size", "()", "Ġ<<", "Ġendl", "Ġ<<", "Ġendl", ";", "Ċ", "ĉĊ", "ĉ", "i", "Ġ=", "Ġm", ".", "find", "(\"", "b", "il", "ly", "\");", "Ċ", "ĉ", "if", "(", "i", "Ġ==", "Ġm", ".", "end", "()){", "ĠĊ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "No", "Ġb", "il", "ly", "!\\", "n", "\";", "Ċ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġi", "->", "first", "Ġ<<", "Ġ\":", "Ġ\"", "Ġ<<", "Ġi", "->", "second", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::153", "code": "#include \"machineoperand.h\"\n\n#include \"basicblock.h\"\n\n#include <cassert>\n#include <iostream>\n#include <new>\n\nusing namespace TosLang::BackEnd;\n\nMachineOperand::MachineOperand() : mKind{ OperandKind::UNKNOWN } { }\n\nMachineOperand::MachineOperand(const unsigned op, const OperandKind kind)\n{\n    assert((kind == OperandKind::IMMEDIATE) \n            || (kind == OperandKind::STACK_SLOT)\n            || (kind == OperandKind::REGISTER));\n    mKind = kind;\n\n    switch (kind)\n    {\n    case OperandKind::IMMEDIATE:\n        imm = op;\n        break;\n    case OperandKind::STACK_SLOT:\n        stackslot = op;\n        break;\n    case OperandKind::REGISTER:\n        reg = op;\n        break;\n    default:\n        assert(false && \"Unexpected error while building a virtual instruction\");\n        break;\n    }\n}\n\nstd::ostream& TosLang::BackEnd::operator<<(std::ostream& stream, const MachineOperand& op)\n{\n    switch (op.mKind)\n    {\n    case MachineOperand::OperandKind::IMMEDIATE:\n        return stream << op.imm;\n    case MachineOperand::OperandKind::STACK_SLOT:\n        return stream << \"S\" << op.stackslot;\n    case MachineOperand::OperandKind::REGISTER:\n        return stream << \"R\" << op.reg;\n    default:\n        return stream;\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "machine", "operand", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "basic", "block", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "new", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠT", "os", "Lang", "::", "Back", "End", ";", "Ċ", "Ċ", "MachineOperand", "::", "MachineOperand", "()", "Ġ:", "Ġm", "Kind", "{", "ĠOperand", "Kind", "::", "UNKNOWN", "Ġ}", "Ġ{", "Ġ}", "Ċ", "Ċ", "MachineOperand", "::", "MachineOperand", "(", "const", "Ġunsigned", "Ġop", ",", "Ġconst", "ĠOperand", "Kind", "Ġkind", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġassert", "((", "kind", "Ġ==", "ĠOperand", "Kind", "::", "IM", "MEDIATE", ")", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ||", "Ġ(", "kind", "Ġ==", "ĠOperand", "Kind", "::", "STACK", "_", "SLOT", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ||", "Ġ(", "kind", "Ġ==", "ĠOperand", "Kind", "::", "REGISTER", "));", "Ċ", "ĠĠĠ", "Ġm", "Kind", "Ġ=", "Ġkind", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġswitch", "Ġ(", "kind", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġcase", "ĠOperand", "Kind", "::", "IM", "MEDIATE", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġimm", "Ġ=", "Ġop", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠOperand", "Kind", "::", "STACK", "_", "SLOT", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstack", "slot", "Ġ=", "Ġop", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠOperand", "Kind", "::", "REGISTER", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreg", "Ġ=", "Ġop", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġdefault", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġassert", "(", "false", "Ġ&&", "Ġ\"", "Unexpected", "Ġerror", "Ġwhile", "Ġbuilding", "Ġa", "Ġvirtual", "Ġinstruction", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "std", "::", "ostream", "&", "ĠT", "os", "Lang", "::", "Back", "End", "::", "operator", "<<(", "std", "::", "ostream", "&", "Ġstream", ",", "Ġconst", "ĠMachineOperand", "&", "Ġop", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġswitch", "Ġ(", "op", ".", "m", "Kind", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġcase", "ĠMachineOperand", "::", "Operand", "Kind", "::", "IM", "MEDIATE", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġstream", "Ġ<<", "Ġop", ".", "imm", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠMachineOperand", "::", "Operand", "Kind", "::", "STACK", "_", "SLOT", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġstream", "Ġ<<", "Ġ\"", "S", "\"", "Ġ<<", "Ġop", ".", "stack", "slot", ";", "Ċ", "ĠĠĠ", "Ġcase", "ĠMachineOperand", "::", "Operand", "Kind", "::", "REGISTER", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġstream", "Ġ<<", "Ġ\"", "R", "\"", "Ġ<<", "Ġop", ".", "reg", ";", "Ċ", "ĠĠĠ", "Ġdefault", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġstream", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::154", "code": "class Base {\npublic:\n\tResource *p;\n\tBase() {\n\t\tp = createResource();\n\t}\n\tvirtual void f() { //has virtual function\n\t\t//...\n\t}\n\t//...\n\t~Base() { //wrong: is non-virtual\n\t\tfreeResource(p);\n\t}\n};\n\nclass Derived: public Base {\npublic:\n\tResource *dp;\n\tDerived() {\n\t\tdp = createResource2();\n\t}\n\t~Derived() {\n\t\tfreeResource2(dp);\n\t}\n};\n\nint f() {\n\tBase *b = new Derived(); //creates resources for both Base::p and Derived::dp\n\t//...\n\n\t//will only call Base::~Base(), leaking the resource dp.\n\t//Change both destructors to virtual to ensure they are both called.\n\tdelete b;\n}\n", "code_tokens": ["Ġclass", "ĠBase", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "Resource", "Ġ*", "p", ";", "Ċ", "ĉ", "Base", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "p", "Ġ=", "Ġcreate", "Resource", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "virtual", "Ġvoid", "Ġf", "()", "Ġ{", "Ġ//", "has", "Ġvirtual", "Ġfunction", "Ċ", "ĉ", "ĉ", "//", "...", "Ċ", "ĉ", "}", "Ċ", "ĉ", "//", "...", "Ċ", "ĉ", "~", "Base", "()", "Ġ{", "Ġ//", "wrong", ":", "Ġis", "Ġnon", "-", "virtual", "Ċ", "ĉ", "ĉ", "free", "Resource", "(", "p", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠDerived", ":", "Ġpublic", "ĠBase", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "Resource", "Ġ*", "dp", ";", "Ċ", "ĉ", "Derived", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "dp", "Ġ=", "Ġcreate", "Resource", "2", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "~", "Derived", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "free", "Resource", "2", "(", "dp", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġf", "()", "Ġ{", "Ċ", "ĉ", "Base", "Ġ*", "b", "Ġ=", "Ġnew", "ĠDerived", "();", "Ġ//", "creates", "Ġresources", "Ġfor", "Ġboth", "ĠBase", "::", "p", "Ġand", "ĠDerived", "::", "dp", "Ċ", "ĉ", "//", "...", "Ċ", "Ċ", "ĉ", "//", "will", "Ġonly", "Ġcall", "ĠBase", "::~", "Base", "(),", "Ġle", "aking", "Ġthe", "Ġresource", "Ġdp", ".", "Ċ", "ĉ", "//", "Change", "Ġboth", "Ġdestructor", "s", "Ġto", "Ġvirtual", "Ġto", "Ġensure", "Ġthey", "Ġare", "Ġboth", "Ġcalled", ".", "Ċ", "ĉ", "delete", "Ġb", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::155", "code": "#include \"jsonobject.h\"\r\n#include \"jsonparser.h\"\r\n\r\nnamespace amgcommon {\r\n    namespace json {\r\n        JsonObject::JsonObject(string rawJson) {\r\n                this->originalJson = rawJson;\r\n                this->root = JsonNode();\r\n            }\r\n\r\n            JsonObject::JsonObject(const JsonObject &a) {\r\n                this->originalJson = a.originalJson;\r\n                this->root = a.root;\r\n            }\r\n\r\n            JsonObject *JsonObject::clone() {\r\n                return new JsonObject(*this);\r\n            }\r\n\r\n            JsonObject::~JsonObject() {\r\n            }\r\n\r\n            string JsonObject::toString() { \r\n                return this->root.toString(); \r\n            }\r\n\r\n            JsonNode JsonObject::getRoot() { \r\n                return root; \r\n            }\r\n            \r\n\r\n            void JsonObject::setKey(string path, Object *value) { \r\n                this->root.setKey(path, value); \r\n            }\r\n\r\n            Object *JsonObject::getKey(string path) { \r\n                return this->root.getKey(path); \r\n            }\r\n    }\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "json", "object", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "json", "parser", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "Ġam", "g", "common", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġnamespace", "Ġjson", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠJsonObject", "::", "JsonObject", "(", "string", "Ġraw", "Json", ")", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "original", "Json", "Ġ=", "Ġraw", "Json", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "root", "Ġ=", "ĠJson", "Node", "();", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠJsonObject", "::", "JsonObject", "(", "const", "ĠJsonObject", "Ġ&", "a", ")", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "original", "Json", "Ġ=", "Ġa", ".", "original", "Json", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "root", "Ġ=", "Ġa", ".", "root", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠJsonObject", "Ġ*", "JsonObject", "::", "clone", "()", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠJsonObject", "(*", "this", ");", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠJsonObject", "::~", "JsonObject", "()", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstring", "ĠJsonObject", "::", "toString", "()", "Ġ{", "Ġ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġthis", "->", "root", ".", "toString", "();", "Ġ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠJson", "Node", "ĠJsonObject", "::", "getRoot", "()", "Ġ{", "Ġ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġroot", ";", "Ġ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġvoid", "ĠJsonObject", "::", "setKey", "(", "string", "Ġpath", ",", "ĠObject", "Ġ*", "value", ")", "Ġ{", "Ġ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "root", ".", "setKey", "(", "path", ",", "Ġvalue", ");", "Ġ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠObject", "Ġ*", "JsonObject", "::", "getKey", "(", "string", "Ġpath", ")", "Ġ{", "Ġ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġthis", "->", "root", ".", "getKey", "(", "path", ");", "Ġ", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::156", "code": "/*\nA small frog wants to get to the other side of the road. The frog is currently located at position X and wants to get to a position greater than or equal to Y. The small frog always jumps a fixed distance, D.\nCount the minimal number of jumps that the small frog must perform to reach its target.\nWrite a function:\nint solution(int X, int Y, int D);\nthat, given three integers X, Y and D, returns the minimal number of jumps from position X to a position equal to or greater than Y.\n\n*/\n// you can write to stdout for debugging purposes, e.g.\n// printf(\"this is a debug message\\n\");\n\nint solution(int X, int Y, int D) {\n    // write your code in C99\n    int diff=Y-X;\n    if(diff%D==0)\n        return diff/D;\n    else\n        return diff/D+1;   \n}\n", "code_tokens": ["Ġ/*", "Ċ", "A", "Ġsmall", "Ġf", "rog", "Ġwants", "Ġto", "Ġget", "Ġto", "Ġthe", "Ġother", "Ġside", "Ġof", "Ġthe", "Ġroad", ".", "ĠThe", "Ġf", "rog", "Ġis", "Ġcurrently", "Ġlocated", "Ġat", "Ġposition", "ĠX", "Ġand", "Ġwants", "Ġto", "Ġget", "Ġto", "Ġa", "Ġposition", "Ġgreater", "Ġthan", "Ġor", "Ġequal", "Ġto", "ĠY", ".", "ĠThe", "Ġsmall", "Ġf", "rog", "Ġalways", "Ġjumps", "Ġa", "Ġfixed", "Ġdistance", ",", "ĠD", ".", "Ċ", "Count", "Ġthe", "Ġminimal", "Ġnumber", "Ġof", "Ġjumps", "Ġthat", "Ġthe", "Ġsmall", "Ġf", "rog", "Ġmust", "Ġperform", "Ġto", "Ġreach", "Ġits", "Ġtarget", ".", "Ċ", "Write", "Ġa", "Ġfunction", ":", "Ċ", "int", "Ġsolution", "(", "int", "ĠX", ",", "Ġint", "ĠY", ",", "Ġint", "ĠD", ");", "Ċ", "that", ",", "Ġgiven", "Ġthree", "Ġintegers", "ĠX", ",", "ĠY", "Ġand", "ĠD", ",", "Ġreturns", "Ġthe", "Ġminimal", "Ġnumber", "Ġof", "Ġjumps", "Ġfrom", "Ġposition", "ĠX", "Ġto", "Ġa", "Ġposition", "Ġequal", "Ġto", "Ġor", "Ġgreater", "Ġthan", "ĠY", ".", "Ċ", "Ċ", "*/", "Ċ", "//", "Ġyou", "Ġcan", "Ġwrite", "Ġto", "Ġstdout", "Ġfor", "Ġdebugging", "Ġpurposes", ",", "Ġe", ".", "g", ".", "Ċ", "//", "Ġprintf", "(\"", "this", "Ġis", "Ġa", "Ġdebug", "Ġmessage", "\\", "n", "\");", "Ċ", "Ċ", "int", "Ġsolution", "(", "int", "ĠX", ",", "Ġint", "ĠY", ",", "Ġint", "ĠD", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "Ġwrite", "Ġyour", "Ġcode", "Ġin", "ĠC", "99", "Ċ", "ĠĠĠ", "Ġint", "Ġdiff", "=", "Y", "-", "X", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "diff", "%", "D", "==", "0", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġdiff", "/", "D", ";", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġdiff", "/", "D", "+", "1", ";", "ĠĠĠ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::157", "code": "/*\n   Copyright (C) 2009 - 2012 by Bartosz Waresiak <dragonking@o2.pl>\n   Part of the Battle for Wesnoth Project http://www.wesnoth.org/\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 2 of the License, or\n   (at your option) any later version.\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY.\n\n   See the COPYING file for more details.\n*/\n\n#ifndef FORMULA_AI_FUNCTION_TABLE_HPP_INCLUDED\n#define FORMULA_AI_FUNCTION_TABLE_HPP_INCLUDED\n\n#include \"formula_function.hpp\"\n\n#include <set>\n\nnamespace ai {\n\tclass formula_ai;\n}\n\nnamespace game_logic {\n\nclass ai_function_symbol_table : public function_symbol_table {\n\npublic:\n\texplicit ai_function_symbol_table(ai::formula_ai& ai) :\n\t\tai_(ai),\n\t\tmove_functions()\n\t{}\n\n\texpression_ptr create_function(const std::string& fn,\n\t                               const std::vector<expression_ptr>& args) const;\n\nprivate:\n\tai::formula_ai& ai_;\n\tstd::set<std::string> move_functions;\n};\n\n}\n\n#endif\t/* FORMULA_AI_FUNCTION_TABLE_HPP_INCLUDED */\n\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2009", "Ġ-", "Ġ2012", "Ġby", "ĠBar", "to", "sz", "ĠW", "ares", "i", "ak", "Ġ<", "dragon", "king", "@", "o", "2", ".", "pl", ">", "Ċ", "ĠĠ", "ĠPart", "Ġof", "Ġthe", "ĠBattle", "Ġfor", "ĠW", "es", "no", "th", "ĠProject", "Ġhttp", "://", "www", ".", "w", "es", "no", "th", ".", "org", "/", "Ċ", "Ċ", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ".", "Ċ", "Ċ", "ĠĠ", "ĠSee", "Ġthe", "ĠCOPY", "ING", "Ġfile", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠFORM", "U", "LA", "_", "AI", "_", "FUNCTION", "_", "TABLE", "_", "HP", "P", "_", "IN", "CLU", "DED", "Ċ", "#", "define", "ĠFORM", "U", "LA", "_", "AI", "_", "FUNCTION", "_", "TABLE", "_", "HP", "P", "_", "IN", "CLU", "DED", "Ċ", "Ċ", "#", "include", "Ġ\"", "formula", "_", "function", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "Ċ", "namespace", "Ġai", "Ġ{", "Ċ", "ĉ", "class", "Ġformula", "_", "ai", ";", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġgame", "_", "logic", "Ġ{", "Ċ", "Ċ", "class", "Ġai", "_", "function", "_", "symbol", "_", "table", "Ġ:", "Ġpublic", "Ġfunction", "_", "symbol", "_", "table", "Ġ{", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "explicit", "Ġai", "_", "function", "_", "symbol", "_", "table", "(", "ai", "::", "formula", "_", "ai", "&", "Ġai", ")", "Ġ:", "Ċ", "ĉ", "ĉ", "ai", "_(", "ai", "),", "Ċ", "ĉ", "ĉ", "move", "_", "functions", "()", "Ċ", "ĉ", "{}", "Ċ", "Ċ", "ĉ", "expression", "_", "ptr", "Ġcreate", "_", "function", "(", "const", "Ġstd", "::", "string", "&", "Ġfn", ",", "Ċ", "ĉ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "expression", "_", "ptr", ">&", "Ġargs", ")", "Ġconst", ";", "Ċ", "Ċ", "private", ":", "Ċ", "ĉ", "ai", "::", "formula", "_", "ai", "&", "Ġai", "_;", "Ċ", "ĉ", "std", "::", "set", "<", "std", "::", "string", ">", "Ġmove", "_", "functions", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "ĉ", "/*", "ĠFORM", "U", "LA", "_", "AI", "_", "FUNCTION", "_", "TABLE", "_", "HP", "P", "_", "IN", "CLU", "DED", "Ġ*/", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::158", "code": "\n#include <iostream>\n\n#include \"common.h\"\n\n\nusing namespace storage;\nusing namespace std;\n\n\nStorageInterface* s = NULL;\n\n\nvoid\ntest(const string& device)\n{\n    ResizeInfo resize_info;\n    ContentInfo content_info;\n\n    if (s->getFreeInfo(device, true, resize_info, true, content_info, true))\n    {\n\tcout << device << \" true\" << endl;\n\tcout << \"    \" << resize_info.resize_freeK << \" \" << resize_info.df_freeK << \" \"\n\t     << resize_info.usedK << \" \" << resize_info.resize_ok << endl;\n\tcout << \"    \" << content_info.windows << \" \" << content_info.efi << \" \"\n\t     << content_info.homes << endl;\n    }\n    else\n    {\n\tcout << device << \" false\" << endl;\n    }\n}\n\n\nint\nmain()\n{\n    cout.setf(std::ios::boolalpha);\n\n    setup_logger();\n\n    setup_system(\"thalassa\");\n\n    s = createStorageInterface(TestEnvironment());\n\n    test(\"/dev/system/arvin\");\n    test(\"/dev/system/root\");\n\n    delete s;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "common", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstorage", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "Storage", "Interface", "*", "Ġs", "Ġ=", "ĠNULL", ";", "Ċ", "Ċ", "Ċ", "void", "Ċ", "test", "(", "const", "Ġstring", "&", "Ġdevice", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠResize", "Info", "Ġresize", "_", "info", ";", "Ċ", "ĠĠĠ", "ĠContent", "Info", "Ġcontent", "_", "info", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "s", "->", "get", "Free", "Info", "(", "device", ",", "Ġtrue", ",", "Ġresize", "_", "info", ",", "Ġtrue", ",", "Ġcontent", "_", "info", ",", "Ġtrue", "))", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġdevice", "Ġ<<", "Ġ\"", "Ġtrue", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "ĠĠĠ", "Ġ\"", "Ġ<<", "Ġresize", "_", "info", ".", "resize", "_", "free", "K", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġresize", "_", "info", ".", "df", "_", "free", "K", "Ġ<<", "Ġ\"", "Ġ\"", "Ċ", "ĉĠĠĠĠ", "Ġ<<", "Ġresize", "_", "info", ".", "used", "K", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġresize", "_", "info", ".", "resize", "_", "ok", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "ĠĠĠ", "Ġ\"", "Ġ<<", "Ġcontent", "_", "info", ".", "windows", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġcontent", "_", "info", ".", "efi", "Ġ<<", "Ġ\"", "Ġ\"", "Ċ", "ĉĠĠĠĠ", "Ġ<<", "Ġcontent", "_", "info", ".", "hom", "es", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġdevice", "Ġ<<", "Ġ\"", "Ġfalse", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġcout", ".", "set", "f", "(", "std", "::", "ios", "::", "bool", "alpha", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġsetup", "_", "logger", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġsetup", "_", "system", "(\"", "th", "al", "ass", "a", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġs", "Ġ=", "Ġcreate", "Storage", "Interface", "(", "Test", "Environment", "());", "Ċ", "Ċ", "ĠĠĠ", "Ġtest", "(\"/", "dev", "/", "system", "/", "ar", "vin", "\");", "Ċ", "ĠĠĠ", "Ġtest", "(\"/", "dev", "/", "system", "/", "root", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġdelete", "Ġs", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::159", "code": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nlong long n, ans = 0;\r\nlong long dn[500][500];\r\n\r\n\r\nlong long rec(long long prlvl, long long sum)\r\n{\r\n\tif (sum < 0) return 0;\r\n\telse if (sum == 0) return 1;\r\n\telse\r\n\t{\r\n\t\tif (dn[prlvl][sum] != -1)\r\n\t\t\treturn dn[prlvl][sum];\r\n\t\telse\r\n\t\t{\r\n\t\t\tlong long res = 0;\r\n\t\t\tfor (int i = 1; i<prlvl; i++)\r\n\t\t\t\tres += rec(i, sum - i);\r\n\t\t\treturn dn[prlvl][sum] = res;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid memorySet()\r\n{\r\n\tfor (int i = 0; i<500; i++)\r\n\tfor (int j = 0; j<500; j++) dn[i][j] = -1;\r\n}\r\n\r\nint main()\r\n{\r\n\tmemorySet();\r\n\r\n\tcin >> n;\r\n\tfor (int i = 1; i<n; i++)\r\n\t\tans += rec(i, n - i);\r\n\tcout << ans << endl;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "long", "Ġlong", "Ġn", ",", "Ġans", "Ġ=", "Ġ0", ";", "č", "Ċ", "long", "Ġlong", "Ġdn", "[", "500", "][", "500", "];", "č", "Ċ", "č", "Ċ", "č", "Ċ", "long", "Ġlong", "Ġrec", "(", "long", "Ġlong", "Ġp", "rl", "vl", ",", "Ġlong", "Ġlong", "Ġsum", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "if", "Ġ(", "sum", "Ġ<", "Ġ0", ")", "Ġreturn", "Ġ0", ";", "č", "Ċ", "ĉ", "else", "Ġif", "Ġ(", "sum", "Ġ==", "Ġ0", ")", "Ġreturn", "Ġ1", ";", "č", "Ċ", "ĉ", "else", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "dn", "[", "pr", "lvl", "][", "sum", "]", "Ġ!=", "Ġ-", "1", ")", "č", "Ċ", "ĉĉ", "ĉ", "return", "Ġdn", "[", "pr", "lvl", "][", "sum", "];", "č", "Ċ", "ĉ", "ĉ", "else", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉĉ", "ĉ", "long", "Ġlong", "Ġres", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "<", "pr", "lvl", ";", "Ġi", "++)", "č", "Ċ", "ĉĉĉ", "ĉ", "res", "Ġ+=", "Ġrec", "(", "i", ",", "Ġsum", "Ġ-", "Ġi", ");", "č", "Ċ", "ĉĉ", "ĉ", "return", "Ġdn", "[", "pr", "lvl", "][", "sum", "]", "Ġ=", "Ġres", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġmemory", "Set", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "500", ";", "Ġi", "++)", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "<", "500", ";", "Ġj", "++)", "Ġdn", "[", "i", "][", "j", "]", "Ġ=", "Ġ-", "1", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "memory", "Set", "();", "č", "Ċ", "č", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", ";", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "č", "Ċ", "ĉ", "ĉ", "ans", "Ġ+=", "Ġrec", "(", "i", ",", "Ġn", "Ġ-", "Ġi", ");", "č", "Ċ", "ĉ", "cout", "Ġ<<", "Ġans", "Ġ<<", "Ġendl", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::160", "code": "#include \"BitArray.h\"\n\nnamespace Rapid {\n\nvoid BitArrayT::append(char const * Bytes, std::size_t Size)\n{\n\tmBytes.append(Bytes, Size);\n}\n\nstd::size_t BitArrayT::size() const\n{\n\treturn mBytes.size() * 8;\n}\n\nbool BitArrayT::operator[](std::size_t Index) const\n{\n\tauto ByteIndex = Index / 8;\n\tauto BitIndex = Index % 8;\n\treturn static_cast<std::uint8_t>(mBytes[ByteIndex]) >> BitIndex & 0x1;\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Bit", "Array", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠR", "ap", "id", "Ġ{", "Ċ", "Ċ", "void", "ĠBit", "Array", "T", "::", "append", "(", "char", "Ġconst", "Ġ*", "ĠBytes", ",", "Ġstd", "::", "size", "_", "t", "ĠSize", ")", "Ċ", "{", "Ċ", "ĉ", "m", "Bytes", ".", "append", "(", "Bytes", ",", "ĠSize", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "size", "_", "t", "ĠBit", "Array", "T", "::", "size", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġm", "Bytes", ".", "size", "()", "Ġ*", "Ġ8", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠBit", "Array", "T", "::", "operator", "[]", "(", "std", "::", "size", "_", "t", "ĠIndex", ")", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "auto", "ĠByte", "Index", "Ġ=", "ĠIndex", "Ġ/", "Ġ8", ";", "Ċ", "ĉ", "auto", "ĠBit", "Index", "Ġ=", "ĠIndex", "Ġ%", "Ġ8", ";", "Ċ", "ĉ", "return", "Ġstatic", "_", "cast", "<", "std", "::", "uint", "8", "_", "t", ">(", "m", "Bytes", "[", "Byte", "Index", "])", "Ġ>>", "ĠBit", "Index", "Ġ&", "Ġ0", "x", "1", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::161", "code": "template <typename Item>\nvoid mergesort(Item a[], int l, int r)\n{\n    if (r <= 1) return ;\n    int m = (r+1)/2;\n    mergesort(a, l, m);\n    mergesort(a, m+1, r);\n    merge(a, l, m, r);\n}\n", "code_tokens": ["Ġtemplate", "Ġ<", "typename", "ĠItem", ">", "Ċ", "void", "Ġmerges", "ort", "(", "Item", "Ġa", "[],", "Ġint", "Ġl", ",", "Ġint", "Ġr", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "r", "Ġ<=", "Ġ1", ")", "Ġreturn", "Ġ;", "Ċ", "ĠĠĠ", "Ġint", "Ġm", "Ġ=", "Ġ(", "r", "+", "1", ")/", "2", ";", "Ċ", "ĠĠĠ", "Ġmerges", "ort", "(", "a", ",", "Ġl", ",", "Ġm", ");", "Ċ", "ĠĠĠ", "Ġmerges", "ort", "(", "a", ",", "Ġm", "+", "1", ",", "Ġr", ");", "Ċ", "ĠĠĠ", "Ġmerge", "(", "a", ",", "Ġl", ",", "Ġm", ",", "Ġr", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::162", "code": "// prng.cpp or pseudo-random number generator (prng)\n// Generates some pseudo-random numbers.\n#include <iostream>\n#include <iomanip>\nusing std::cout; // iostream\nusing std::endl;\nusing std::setw; // iomanip\n\n// function generates random number\nunsigned pseudoRNG() {\n\tstatic unsigned seed = 5493; // some (any) initial starting seed; initialized only once!\n\n\t// Take the current seed and generate new value from it\n\t// Due to larg numbers used to generate numbers is difficult to\n\t// predict next value from previous one.\n\t// Static keyword has program scope and is terminated at the end of\n\t// program. Seed value is stored every time in memory using previous \n\t// value.\n\tseed = (3852591 * seed + 5180347);\n\n\t// return value between 0 and 65535\n\treturn (seed % 65535);\n}\n\nint main()\n{\n\t// generate 100 random numbers - print in separate fields\n\tfor (int i = 1; i <= 100; i++) {\n\t\tcout << setw(8) << pseudoRNG();\n\n\t\t// new line every fifth number\n\t\tif (i % 5 == 0)\n\t\t\tcout << endl;\n\t}\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ//", "Ġpr", "ng", ".", "cpp", "Ġor", "Ġpseudo", "-", "random", "Ġnumber", "Ġgenerator", "Ġ(", "pr", "ng", ")", "Ċ", "//", "ĠGenerates", "Ġsome", "Ġpseudo", "-", "random", "Ġnumbers", ".", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "Ċ", "using", "Ġstd", "::", "cout", ";", "Ġ//", "Ġi", "ostream", "Ċ", "using", "Ġstd", "::", "endl", ";", "Ċ", "using", "Ġstd", "::", "setw", ";", "Ġ//", "Ġiom", "an", "ip", "Ċ", "Ċ", "//", "Ġfunction", "Ġgenerates", "Ġrandom", "Ġnumber", "Ċ", "unsigned", "Ġpseudo", "RNG", "()", "Ġ{", "Ċ", "ĉ", "static", "Ġunsigned", "Ġseed", "Ġ=", "Ġ5", "493", ";", "Ġ//", "Ġsome", "Ġ(", "any", ")", "Ġinitial", "Ġstarting", "Ġseed", ";", "Ġinitialized", "Ġonly", "Ġonce", "!", "Ċ", "Ċ", "ĉ", "//", "ĠTake", "Ġthe", "Ġcurrent", "Ġseed", "Ġand", "Ġgenerate", "Ġnew", "Ġvalue", "Ġfrom", "Ġit", "Ċ", "ĉ", "//", "ĠDue", "Ġto", "Ġlarg", "Ġnumbers", "Ġused", "Ġto", "Ġgenerate", "Ġnumbers", "Ġis", "Ġdifficult", "Ġto", "Ċ", "ĉ", "//", "Ġpredict", "Ġnext", "Ġvalue", "Ġfrom", "Ġprevious", "Ġone", ".", "Ċ", "ĉ", "//", "ĠStatic", "Ġkeyword", "Ġhas", "Ġprogram", "Ġscope", "Ġand", "Ġis", "Ġterminated", "Ġat", "Ġthe", "Ġend", "Ġof", "Ċ", "ĉ", "//", "Ġprogram", ".", "ĠSeed", "Ġvalue", "Ġis", "Ġstored", "Ġevery", "Ġtime", "Ġin", "Ġmemory", "Ġusing", "Ġprevious", "ĠĊ", "ĉ", "//", "Ġvalue", ".", "Ċ", "ĉ", "seed", "Ġ=", "Ġ(", "38", "525", "91", "Ġ*", "Ġseed", "Ġ+", "Ġ5", "180", "347", ");", "Ċ", "Ċ", "ĉ", "//", "Ġreturn", "Ġvalue", "Ġbetween", "Ġ0", "Ġand", "Ġ65535", "Ċ", "ĉ", "return", "Ġ(", "seed", "Ġ%", "Ġ65535", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "//", "Ġgenerate", "Ġ100", "Ġrandom", "Ġnumbers", "Ġ-", "Ġprint", "Ġin", "Ġseparate", "Ġfields", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġ100", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġset", "w", "(", "8", ")", "Ġ<<", "Ġpseudo", "RNG", "();", "Ċ", "Ċ", "ĉ", "ĉ", "//", "Ġnew", "Ġline", "Ġevery", "Ġfif", "th", "Ġnumber", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "i", "Ġ%", "Ġ5", "Ġ==", "Ġ0", ")", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::163", "code": "/*\n *\\class       PASER_Neighbor_Table\n *@brief       Class represents an entry in the neighbor table\n *\n *\\authors     Eugen.Paul | Mohamad.Sbeiti \\@paser.info\n *\n *\\copyright   (C) 2012 Communication Networks Institute (CNI - Prof. Dr.-Ing. Christian Wietfeld)\n *                  at Technische Universitaet Dortmund, Germany\n *                  http://www.kn.e-technik.tu-dortmund.de/\n *\n *\n *              This program is free software; you can redistribute it\n *              and/or modify it under the terms of the GNU General Public\n *              License as published by the Free Software Foundation; either\n *              version 2 of the License, or (at your option) any later\n *              version.\n *              For further information see file COPYING\n *              in the top level directory\n ********************************************************************************\n * This work is part of the secure wireless mesh networks framework, which is currently under development by CNI\n ********************************************************************************/\n#include \"Configuration.h\"\n#ifdef OPENSSL_IS_LINKED\n#include <openssl/x509.h>\n#include \"PASER_Neighbor_Entry.h\"\n\n\nPASER_Neighbor_Entry::~PASER_Neighbor_Entry() {\n    if (root) {\n        free(root);\n    }\n    root = NULL;\n\n    if (Cert) {\n        X509_free((X509*) Cert);\n    }\n    Cert = NULL;\n}\n\nvoid PASER_Neighbor_Entry::setValidTimer(PASER_Timer_Message *_validTimer) {\n    validTimer = _validTimer;\n}\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*\\", "class", "ĠĠĠĠĠĠ", "ĠPAS", "ER", "_", "Neighbor", "_", "Table", "Ċ", "Ġ*", "@", "brief", "ĠĠĠĠĠĠ", "ĠClass", "Ġrepresents", "Ġan", "Ġentry", "Ġin", "Ġthe", "Ġneighbor", "Ġtable", "Ċ", "Ġ*", "Ċ", "Ġ*\\", "authors", "ĠĠĠĠ", "ĠE", "ug", "en", ".", "Pa", "ul", "Ġ|", "ĠMo", "ham", "ad", ".", "S", "be", "iti", "Ġ\\", "@", "pas", "er", ".", "info", "Ċ", "Ġ*", "Ċ", "Ġ*\\", "copyright", "ĠĠ", "Ġ(", "C", ")", "Ġ2012", "ĠComm", "unication", "ĠNetwork", "s", "ĠIn", "stitute", "Ġ(", "CN", "I", "Ġ-", "ĠPro", "f", ".", "ĠDr", ".-", "Ing", ".", "ĠCh", "rist", "ian", "ĠW", "ietf", "eld", ")", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġat", "ĠTech", "n", "is", "che", "ĠUn", "ivers", "ita", "et", "ĠD", "ort", "m", "und", ",", "ĠG", "erm", "any", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġhttp", "://", "www", ".", "kn", ".", "e", "-", "te", "chn", "ik", ".", "tu", "-", "d", "ort", "m", "und", ".", "de", "/", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġversion", ".", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠFor", "Ġfurther", "Ġinformation", "Ġsee", "Ġfile", "ĠCOPY", "ING", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġin", "Ġthe", "Ġtop", "Ġlevel", "Ġdirectory", "Ċ", "Ġ*************************************************************************", "*******", "Ċ", "Ġ*", "ĠThis", "Ġwork", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġsecure", "Ġwire", "less", "Ġmesh", "Ġnetworks", "Ġframework", ",", "Ġwhich", "Ġis", "Ġcurrently", "Ġunder", "Ġdevelopment", "Ġby", "ĠC", "NI", "Ċ", "Ġ*************************************************************************", "*******/", "Ċ", "#", "include", "Ġ\"", "Configuration", ".", "h", "\"", "Ċ", "#", "ifdef", "ĠOPENSSL", "_", "IS", "_", "LINKED", "Ċ", "#", "include", "Ġ<", "openssl", "/", "x", "509", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "PA", "SER", "_", "Neighbor", "_", "Entry", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "PA", "SER", "_", "Neighbor", "_", "Entry", "::~", "PA", "SER", "_", "Neighbor", "_", "Entry", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "root", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfree", "(", "root", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġroot", "Ġ=", "ĠNULL", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Cert", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠX", "509", "_", "free", "((", "X", "509", "*)", "ĠCert", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "ĠCert", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPAS", "ER", "_", "Neighbor", "_", "Entry", "::", "set", "Valid", "Timer", "(", "PA", "SER", "_", "Timer", "_", "Message", "Ġ*_", "valid", "Timer", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġvalid", "Timer", "Ġ=", "Ġ_", "valid", "Timer", ";", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::164", "code": "/*\n * Copyright (C) 2016+     AzerothCore <www.azerothcore.org>, released under GNU GPL v2 license: http://github.com/azerothcore/azerothcore-wotlk/LICENSE-GPL2\n * Copyright (C) 2008-2016 TrinityCore <http://www.trinitycore.org/>\n * Copyright (C) 2005-2009 MaNGOS <http://getmangos.com/>\n */\n\n#include \"GameObjectAI.h\"\n\n//GameObjectAI::GameObjectAI(GameObject* g) : go(g) {}\nint GameObjectAI::Permissible(const GameObject* go)\n{\n    if (go->GetAIName() == \"GameObjectAI\")\n        return PERMIT_BASE_SPECIAL;\n    return PERMIT_BASE_NO;\n}\n\nNullGameObjectAI::NullGameObjectAI(GameObject* g) : GameObjectAI(g) {}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2016", "+", "ĠĠĠĠ", "ĠA", "zero", "th", "Core", "Ġ<", "www", ".", "a", "zero", "th", "core", ".", "org", ">,", "Ġreleased", "Ġunder", "ĠGNU", "ĠG", "PL", "Ġv", "2", "Ġlicense", ":", "Ġhttp", "://", "github", ".", "com", "/", "a", "zero", "th", "core", "/", "a", "zero", "th", "core", "-", "w", "ot", "lk", "/", "LICENSE", "-", "G", "PL", "2", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2016", "ĠTr", "inity", "Core", "Ġ<", "http", "://", "www", ".", "tr", "inity", "core", ".", "org", "/>", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "-", "2009", "ĠM", "aN", "G", "OS", "Ġ<", "http", "://", "get", "m", "ang", "os", ".", "com", "/>", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "GameObject", "AI", ".", "h", "\"", "Ċ", "Ċ", "//", "GameObject", "AI", "::", "GameObject", "AI", "(", "GameObject", "*", "Ġg", ")", "Ġ:", "Ġgo", "(", "g", ")", "Ġ{}", "Ċ", "int", "ĠGameObject", "AI", "::", "Per", "miss", "ible", "(", "const", "ĠGameObject", "*", "Ġgo", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "go", "->", "GetAI", "Name", "()", "Ġ==", "Ġ\"", "GameObject", "AI", "\")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠPER", "MIT", "_", "BASE", "_", "SPECIAL", ";", "Ċ", "ĠĠĠ", "Ġreturn", "ĠPER", "MIT", "_", "BASE", "_", "NO", ";", "Ċ", "}", "Ċ", "Ċ", "Null", "GameObject", "AI", "::", "Null", "GameObject", "AI", "(", "GameObject", "*", "Ġg", ")", "Ġ:", "ĠGameObject", "AI", "(", "g", ")", "Ġ{}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::165", "code": "#pragma once\n\n#include \"generator/collector_interface.hpp\"\n\n#include <fstream>\n#include <functional>\n#include <memory>\n#include <string>\n\nstruct OsmElement;\nnamespace base\n{\nclass GeoObjectId;\n}  // namespace base\n\nnamespace generator\n{\nnamespace cache\n{\nclass IntermediateDataReaderInterface;\n}  // namespace cache\n\n// CollectorTag class collects validated value of a tag and saves it to file with following\n// format: osmId<tab>tagValue.\nclass CollectorTag : public CollectorInterface\n{\npublic:\n  using Validator = std::function<bool(std::string const & tagValue)>;\n\n  explicit CollectorTag(std::string const & filename, std::string const & tagKey,\n                        Validator const & validator);\n\n  // CollectorInterface overrides:\n  std::shared_ptr<CollectorInterface> Clone(\n      std::shared_ptr<cache::IntermediateDataReaderInterface> const & = {}) const override;\n\n  void Collect(OsmElement const & el) override;\n  void Finish() override;\n\n  void Merge(CollectorInterface const & collector) override;\n  void MergeInto(CollectorTag & collector) const override;\n\nprotected:\n  void Save() override;\n  void OrderCollectedData() override;\n\nprivate:\n  std::ofstream m_stream;\n  std::string m_tagKey;\n  Validator m_validator;\n};\n}  // namespace generator\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "generator", "/", "collector", "_", "interface", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "struct", "ĠO", "sm", "Element", ";", "Ċ", "namespace", "Ġbase", "Ċ", "{", "Ċ", "class", "ĠGeo", "ObjectId", ";", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġbase", "Ċ", "Ċ", "namespace", "Ġgenerator", "Ċ", "{", "Ċ", "namespace", "Ġcache", "Ċ", "{", "Ċ", "class", "ĠInter", "mediate", "DataReader", "Interface", ";", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġcache", "Ċ", "Ċ", "//", "ĠCollector", "Tag", "Ġclass", "Ġcollect", "s", "Ġvalidated", "Ġvalue", "Ġof", "Ġa", "Ġtag", "Ġand", "Ġsaves", "Ġit", "Ġto", "Ġfile", "Ġwith", "Ġfollowing", "Ċ", "//", "Ġformat", ":", "Ġos", "m", "Id", "<", "tab", ">", "tag", "Value", ".", "Ċ", "class", "ĠCollector", "Tag", "Ġ:", "Ġpublic", "ĠCollector", "Interface", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġusing", "ĠValidator", "Ġ=", "Ġstd", "::", "function", "<", "bool", "(", "std", "::", "string", "Ġconst", "Ġ&", "Ġtag", "Value", ")>", ";", "Ċ", "Ċ", "Ġ", "Ġexplicit", "ĠCollector", "Tag", "(", "std", "::", "string", "Ġconst", "Ġ&", "Ġfilename", ",", "Ġstd", "::", "string", "Ġconst", "Ġ&", "Ġtag", "Key", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠValidator", "Ġconst", "Ġ&", "Ġvalidator", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠCollector", "Interface", "Ġoverrides", ":", "Ċ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "Collector", "Interface", ">", "ĠClone", "(", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "cache", "::", "Intermediate", "DataReader", "Interface", ">", "Ġconst", "Ġ&", "Ġ=", "Ġ{})", "Ġconst", "Ġoverride", ";", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĠCollect", "(", "O", "sm", "Element", "Ġconst", "Ġ&", "Ġel", ")", "Ġoverride", ";", "Ċ", "Ġ", "Ġvoid", "ĠFinish", "()", "Ġoverride", ";", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĠMerge", "(", "Collector", "Interface", "Ġconst", "Ġ&", "Ġcollector", ")", "Ġoverride", ";", "Ċ", "Ġ", "Ġvoid", "ĠMerge", "Into", "(", "Collector", "Tag", "Ġ&", "Ġcollector", ")", "Ġconst", "Ġoverride", ";", "Ċ", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġvoid", "ĠSave", "()", "Ġoverride", ";", "Ċ", "Ġ", "Ġvoid", "ĠOrder", "Collected", "Data", "()", "Ġoverride", ";", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġstd", "::", "ofstream", "Ġm", "_", "stream", ";", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġm", "_", "tag", "Key", ";", "Ċ", "Ġ", "ĠValidator", "Ġm", "_", "validator", ";", "Ċ", "};", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġgenerator", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::166", "code": "/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#ifndef __TESTS_ENVIRONMENT_HPP__\n#define __TESTS_ENVIRONMENT_HPP__\n\n#include <gtest/gtest.h>\n\nnamespace mesos {\nnamespace internal {\nnamespace tests {\n\n// Used to set up our particular test environment.\nclass Environment : public ::testing::Environment {\npublic:\n  virtual void SetUp();\n  virtual void TearDown();\n};\n\n} // namespace tests {\n} // namespace internal {\n} // namespace mesos {\n\n#endif // __TESTS_ENVIRONMENT_HPP__\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġto", "Ġthe", "ĠApache", "ĠSoftware", "ĠFoundation", "Ġ(", "AS", "F", ")", "Ġunder", "Ġone", "Ċ", "Ġ*", "Ġor", "Ġmore", "Ġcontrib", "utor", "Ġlicense", "Ġag", "re", "em", "ents", ".", "Ġ", "ĠSee", "Ġthe", "ĠNOT", "ICE", "Ġfile", "Ċ", "Ġ*", "Ġdistributed", "Ġwith", "Ġthis", "Ġwork", "Ġfor", "Ġadditional", "Ġinformation", "Ċ", "Ġ*", "Ġregarding", "Ġcopyright", "Ġownership", ".", "Ġ", "ĠThe", "ĠAS", "F", "Ġlicenses", "Ġthis", "Ġfile", "Ċ", "Ġ*", "Ġto", "Ġyou", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ċ", "Ġ*", "Ġ\"", "License", "\");", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ċ", "Ġ*", "Ġwith", "Ġthe", "ĠLicense", ".", "Ġ", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "Ġ__", "TESTS", "_", "ENVIRON", "MENT", "_", "HP", "P", "__", "Ċ", "#", "define", "Ġ__", "TESTS", "_", "ENVIRON", "MENT", "_", "HP", "P", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġmes", "os", "Ġ{", "Ċ", "namespace", "Ġinternal", "Ġ{", "Ċ", "namespace", "Ġtests", "Ġ{", "Ċ", "Ċ", "//", "ĠUsed", "Ġto", "Ġset", "Ġup", "Ġour", "Ġparticular", "Ġtest", "Ġenvironment", ".", "Ċ", "class", "ĠEnvironment", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Environment", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "ĠSetUp", "();", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "ĠT", "earDown", "();", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġtests", "Ġ{", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġinternal", "Ġ{", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġmes", "os", "Ġ{", "Ċ", "Ċ", "#", "endif", "Ġ//", "Ġ__", "TESTS", "_", "ENVIRON", "MENT", "_", "HP", "P", "__", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::167", "code": "/*\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include \"Firestore/core/src/local/memory_persistence.h\"\n#include \"Firestore/core/test/unit/local/bundle_cache_test.h\"\n#include \"Firestore/core/test/unit/local/persistence_testing.h\"\n\nnamespace firebase {\nnamespace firestore {\nnamespace local {\nnamespace {\n\nstd::unique_ptr<Persistence> PersistenceFactory() {\n  return MemoryPersistenceWithEagerGcForTesting();\n}\n\n}  // namespace\n\nINSTANTIATE_TEST_SUITE_P(MemoryBundleCacheTest,\n                         BundleCacheTest,\n                         testing::Values(PersistenceFactory));\n\n}  // namespace local\n}  // namespace firestore\n}  // namespace firebase\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2", "021", "ĠGoogle", "ĠLLC", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Fire", "store", "/", "core", "/", "src", "/", "local", "/", "memory", "_", "persistence", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Fire", "store", "/", "core", "/", "test", "/", "unit", "/", "local", "/", "bundle", "_", "cache", "_", "test", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Fire", "store", "/", "core", "/", "test", "/", "unit", "/", "local", "/", "persistence", "_", "testing", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġfire", "base", "Ġ{", "Ċ", "namespace", "Ġfire", "store", "Ġ{", "Ċ", "namespace", "Ġlocal", "Ġ{", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "std", "::", "unique", "_", "ptr", "<", "Persistence", ">", "ĠPersistence", "Factory", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "ĠMemory", "Persistence", "With", "E", "ager", "Gc", "ForTesting", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "INST", "ANTI", "ATE", "_", "TEST", "_", "SUITE", "_", "P", "(", "Memory", "Bundle", "Cache", "Test", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠBundle", "Cache", "Test", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġtesting", "::", "Values", "(", "Persistence", "Factory", "));", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġlocal", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġfire", "store", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġfire", "base", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::168", "code": "#include \"MutableValueSetterProxy.h\"\n#include <jsi/jsi.h>\n#include \"MutableValue.h\"\n#include \"SharedParent.h\"\n\nusing namespace facebook;\n\nnamespace reanimated {\n\nvoid MutableValueSetterProxy::set(\n    jsi::Runtime &rt,\n    const jsi::PropNameID &name,\n    const jsi::Value &newValue) {\n  auto propName = name.utf8(rt);\n  if (propName == \"_value\") {\n    mutableValue->setValue(rt, newValue);\n  } else if (propName == \"_animation\") {\n    // TODO: assert to allow animation to be set from UI only\n    if (mutableValue->animation.expired()) {\n      mutableValue->animation = mutableValue->getWeakRef(rt);\n    }\n    *mutableValue->animation.lock() = jsi::Value(rt, newValue);\n  } else if (propName == \"value\") {\n    // you call `this.value` inside of value setter, we should throw\n  }\n}\n\njsi::Value MutableValueSetterProxy::get(\n    jsi::Runtime &rt,\n    const jsi::PropNameID &name) {\n  auto propName = name.utf8(rt);\n\n  if (propName == \"value\") {\n    return mutableValue->getValue(rt);\n  } else if (propName == \"_value\") {\n    return mutableValue->getValue(rt);\n  } else if (propName == \"_animation\") {\n    if (mutableValue->animation.expired()) {\n      mutableValue->animation = mutableValue->getWeakRef(rt);\n    }\n    return jsi::Value(rt, *mutableValue->animation.lock());\n  }\n\n  return jsi::Value::undefined();\n}\n\n} // namespace reanimated\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Mutable", "Value", "Setter", "Proxy", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "js", "i", "/", "js", "i", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "Mutable", "Value", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Shared", "Parent", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġface", "book", ";", "Ċ", "Ċ", "namespace", "Ġre", "animated", "Ġ{", "Ċ", "Ċ", "void", "ĠMutable", "Value", "Setter", "Proxy", "::", "set", "(", "Ċ", "ĠĠĠ", "Ġj", "si", "::", "Runtime", "Ġ&", "rt", ",", "Ċ", "ĠĠĠ", "Ġconst", "Ġj", "si", "::", "Prop", "Name", "ID", "Ġ&", "name", ",", "Ċ", "ĠĠĠ", "Ġconst", "Ġj", "si", "::", "Value", "Ġ&", "newValue", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "ĠpropName", "Ġ=", "Ġname", ".", "utf", "8", "(", "rt", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "propName", "Ġ==", "Ġ\"_", "value", "\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġmutable", "Value", "->", "setValue", "(", "rt", ",", "ĠnewValue", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "propName", "Ġ==", "Ġ\"_", "animation", "\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTODO", ":", "Ġassert", "Ġto", "Ġallow", "Ġanimation", "Ġto", "Ġbe", "Ġset", "Ġfrom", "ĠUI", "Ġonly", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "mutable", "Value", "->", "animation", ".", "expired", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġmutable", "Value", "->", "animation", "Ġ=", "Ġmutable", "Value", "->", "get", "Weak", "Ref", "(", "rt", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ*", "mutable", "Value", "->", "animation", ".", "lock", "()", "Ġ=", "Ġj", "si", "::", "Value", "(", "rt", ",", "ĠnewValue", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "propName", "Ġ==", "Ġ\"", "value", "\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "Ġyou", "Ġcall", "Ġ`", "this", ".", "value", "`", "Ġinside", "Ġof", "Ġvalue", "Ġsetter", ",", "Ġwe", "Ġshould", "Ġthrow", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "js", "i", "::", "Value", "ĠMutable", "Value", "Setter", "Proxy", "::", "get", "(", "Ċ", "ĠĠĠ", "Ġj", "si", "::", "Runtime", "Ġ&", "rt", ",", "Ċ", "ĠĠĠ", "Ġconst", "Ġj", "si", "::", "Prop", "Name", "ID", "Ġ&", "name", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "ĠpropName", "Ġ=", "Ġname", ".", "utf", "8", "(", "rt", ");", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "propName", "Ġ==", "Ġ\"", "value", "\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġmutable", "Value", "->", "getValue", "(", "rt", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "propName", "Ġ==", "Ġ\"_", "value", "\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġmutable", "Value", "->", "getValue", "(", "rt", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "propName", "Ġ==", "Ġ\"_", "animation", "\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "mutable", "Value", "->", "animation", ".", "expired", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġmutable", "Value", "->", "animation", "Ġ=", "Ġmutable", "Value", "->", "get", "Weak", "Ref", "(", "rt", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġj", "si", "::", "Value", "(", "rt", ",", "Ġ*", "mutable", "Value", "->", "animation", ".", "lock", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġj", "si", "::", "Value", "::", "undefined", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġre", "animated", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::169", "code": "/*\n * pointcloud_publisher_node.cpp\n *\n *  Created on: Aug 19, 2021\n *      Author: Edo Jelavic\n *      Institute: ETH Zurich, Robotic Systems Lab\n */\n\n#include <pcl_conversions/pcl_conversions.h>\n#include <ros/ros.h>\n#include <sensor_msgs/PointCloud2.h>\n#include \"grid_map_pcl/helpers.hpp\"\n\nnamespace gm = ::grid_map::grid_map_pcl;\nusing Point = ::pcl::PointXYZ;\nusing PointCloud = ::pcl::PointCloud<Point>;\n\nvoid publishCloud(const std::string& filename, const ros::Publisher& pub, const std::string& frame) {\n  PointCloud::Ptr cloud(new pcl::PointCloud<pcl::PointXYZ>);\n  cloud = gm::loadPointcloudFromPcd(filename);\n  cloud->header.frame_id = frame;\n  sensor_msgs::PointCloud2 msg;\n  pcl::toROSMsg(*cloud, msg);\n  ROS_INFO_STREAM(\"Publishing loaded cloud, number of points: \" << cloud->points.size());\n  msg.header.stamp = ros::Time::now();\n  pub.publish(msg);\n}\n\nint main(int argc, char** argv) {\n  ros::init(argc, argv, \"point_cloud_pub_node\");\n  ros::NodeHandle nh(\"~\");\n\n  const std::string pathToCloud = gm::getPcdFilePath(nh);\n  const std::string cloudFrame = nh.param<std::string>(\"cloud_frame\", \"\");\n  // publish cloud\n  ros::Publisher cloudPub = nh.advertise<sensor_msgs::PointCloud2>(\"raw_pointcloud\", 1, true);\n  publishCloud(pathToCloud, cloudPub, cloudFrame);\n\n  // run\n  ros::spin();\n  return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġpoint", "cloud", "_", "publisher", "_", "node", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠAug", "Ġ19", ",", "Ġ2", "021", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "ĠE", "do", "ĠJ", "el", "av", "ic", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠIn", "stitute", ":", "ĠETH", "ĠZ", "ur", "ich", ",", "ĠRob", "ot", "ic", "ĠSystems", "ĠL", "ab", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "pcl", "_", "con", "versions", "/", "pcl", "_", "con", "versions", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "ros", "/", "ros", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sensor", "_", "msgs", "/", "PointCloud", "2", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "grid", "_", "map", "_", "pcl", "/", "helpers", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġgm", "Ġ=", "Ġ::", "grid", "_", "map", "::", "grid", "_", "map", "_", "pcl", ";", "Ċ", "using", "ĠPoint", "Ġ=", "Ġ::", "pcl", "::", "Point", "XYZ", ";", "Ċ", "using", "ĠPoint", "Cloud", "Ġ=", "Ġ::", "pcl", "::", "PointCloud", "<", "Point", ">;", "Ċ", "Ċ", "void", "Ġpublish", "Cloud", "(", "const", "Ġstd", "::", "string", "&", "Ġfilename", ",", "Ġconst", "Ġros", "::", "Publisher", "&", "Ġpub", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġframe", ")", "Ġ{", "Ċ", "Ġ", "ĠPoint", "Cloud", "::", "Ptr", "Ġcloud", "(", "new", "Ġpcl", "::", "PointCloud", "<", "pcl", "::", "Point", "XYZ", ">);", "Ċ", "Ġ", "Ġcloud", "Ġ=", "Ġgm", "::", "load", "Point", "cloud", "From", "Pcd", "(", "filename", ");", "Ċ", "Ġ", "Ġcloud", "->", "header", ".", "frame", "_", "id", "Ġ=", "Ġframe", ";", "Ċ", "Ġ", "Ġsensor", "_", "msgs", "::", "PointCloud", "2", "Ġmsg", ";", "Ċ", "Ġ", "Ġpcl", "::", "to", "RO", "S", "Msg", "(*", "cloud", ",", "Ġmsg", ");", "Ċ", "Ġ", "ĠROS", "_", "INFO", "_", "STREAM", "(\"", "Publish", "ing", "Ġloaded", "Ġcloud", ",", "Ġnumber", "Ġof", "Ġpoints", ":", "Ġ\"", "Ġ<<", "Ġcloud", "->", "points", ".", "size", "());", "Ċ", "Ġ", "Ġmsg", ".", "header", ".", "stamp", "Ġ=", "Ġros", "::", "Time", "::", "now", "();", "Ċ", "Ġ", "Ġpub", ".", "publish", "(", "msg", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "Ġ", "Ġros", "::", "init", "(", "argc", ",", "Ġargv", ",", "Ġ\"", "point", "_", "cloud", "_", "pub", "_", "node", "\");", "Ċ", "Ġ", "Ġros", "::", "Node", "Handle", "Ġnh", "(\"~", "\");", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "ĠpathTo", "Cloud", "Ġ=", "Ġgm", "::", "getP", "cd", "FilePath", "(", "nh", ");", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġcloud", "Frame", "Ġ=", "Ġnh", ".", "param", "<", "std", "::", "string", ">(\"", "cloud", "_", "frame", "\",", "Ġ\"\");", "Ċ", "Ġ", "Ġ//", "Ġpublish", "Ġcloud", "Ċ", "Ġ", "Ġros", "::", "Publisher", "Ġcloud", "Pub", "Ġ=", "Ġnh", ".", "advertise", "<", "sensor", "_", "msgs", "::", "PointCloud", "2", ">(\"", "raw", "_", "point", "cloud", "\",", "Ġ1", ",", "Ġtrue", ");", "Ċ", "Ġ", "Ġpublish", "Cloud", "(", "pathTo", "Cloud", ",", "Ġcloud", "Pub", ",", "Ġcloud", "Frame", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġrun", "Ċ", "Ġ", "Ġros", "::", "spin", "();", "Ċ", "Ġ", "Ġreturn", "ĠEXIT", "_", "SUCCESS", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::170", "code": "/**\n ******************************************************************************\n * api-scanner - Scan for API imports from a packaged 360 game                *\n ******************************************************************************\n * Copyright 2015 x1nixmzeng. All rights reserved.                            *\n * Released under the BSD license - see LICENSE in the root for more details. *\n ******************************************************************************\n */\n\n#include \"api_scanner_loader.h\"\n\nnamespace xe {\nnamespace tools {\n\nDEFINE_string(target, \"\", \"List of file to extract imports from\");\n\nint api_scanner_main(std::vector<std::wstring>& args) {\n  // XXX we need gflags to split multiple flags into arrays for us\n\n  if (args.size() == 2 || !FLAGS_target.empty()) {\n    apiscanner_loader loader_;\n    std::wstring target(cvars::target.empty() ? args[1]\n                                              : xe::to_wstring(cvars::target));\n\n    std::wstring target_abs = xe::to_absolute_path(target);\n\n    // XXX For each target?\n    if (loader_.LoadTitleImports(target)) {\n      for (const auto title : loader_.GetAllTitles()) {\n        printf(\"%08x\\n\", title.title_id);\n        for (const auto import : title.imports) {\n          printf(\"\\t%s\\n\", import.c_str());\n        }\n      }\n    }\n  }\n\n  return 0;\n}\n\n}  // namespace tools\n}  // namespace xe\n\nDEFINE_ENTRY_POINT(L\"api-scanner\", L\"api-scanner --target=<target file>\",\n                   xe::tools::api_scanner_main);\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*************************************************************************", "*****", "Ċ", "Ġ*", "Ġapi", "-", "scanner", "Ġ-", "ĠScan", "Ġfor", "ĠAPI", "Ġimports", "Ġfrom", "Ġa", "Ġpack", "aged", "Ġ360", "Ġgame", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*************************************************************************", "*****", "Ċ", "Ġ*", "ĠCopyright", "Ġ2015", "Ġx", "1", "n", "ix", "m", "zen", "g", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠRelease", "d", "Ġunder", "Ġthe", "ĠBSD", "Ġlicense", "Ġ-", "Ġsee", "ĠLICENSE", "Ġin", "Ġthe", "Ġroot", "Ġfor", "Ġmore", "Ġdetails", ".", "Ġ*", "Ċ", "Ġ*************************************************************************", "*****", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "api", "_", "scanner", "_", "loader", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġx", "e", "Ġ{", "Ċ", "namespace", "Ġtools", "Ġ{", "Ċ", "Ċ", "DEFINE", "_", "string", "(", "target", ",", "Ġ\"\",", "Ġ\"", "List", "Ġof", "Ġfile", "Ġto", "Ġextract", "Ġimports", "Ġfrom", "\");", "Ċ", "Ċ", "int", "Ġapi", "_", "scanner", "_", "main", "(", "std", "::", "vector", "<", "std", "::", "wstring", ">&", "Ġargs", ")", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠXXX", "Ġwe", "Ġneed", "Ġg", "flags", "Ġto", "Ġsplit", "Ġmultiple", "Ġflags", "Ġinto", "Ġarrays", "Ġfor", "Ġus", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "args", ".", "size", "()", "Ġ==", "Ġ2", "Ġ||", "Ġ!", "FLAGS", "_", "target", ".", "empty", "())", "Ġ{", "Ċ", "ĠĠĠ", "Ġap", "isc", "anner", "_", "loader", "Ġloader", "_;", "Ċ", "ĠĠĠ", "Ġstd", "::", "wstring", "Ġtarget", "(", "c", "vars", "::", "target", ".", "empty", "()", "Ġ?", "Ġargs", "[", "1", "]", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ:", "Ġx", "e", "::", "to", "_", "wstring", "(", "c", "vars", "::", "target", "));", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "wstring", "Ġtarget", "_", "abs", "Ġ=", "Ġx", "e", "::", "to", "_", "absolute", "_", "path", "(", "target", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠXXX", "ĠFor", "Ġeach", "Ġtarget", "?", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "loader", "_.", "Load", "Title", "Imports", "(", "target", "))", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġfor", "Ġ(", "const", "Ġauto", "Ġtitle", "Ġ:", "Ġloader", "_.", "GetAll", "Titles", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "08", "x", "\\", "n", "\",", "Ġtitle", ".", "title", "_", "id", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "const", "Ġauto", "Ġimport", "Ġ:", "Ġtitle", ".", "imports", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"\\", "t", "%", "s", "\\", "n", "\",", "Ġimport", ".", "c", "_", "str", "());", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġtools", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġx", "e", "Ċ", "Ċ", "DEFINE", "_", "ENTRY", "_", "POINT", "(", "L", "\"", "api", "-", "scanner", "\",", "ĠL", "\"", "api", "-", "scanner", "Ġ--", "target", "=<", "target", "Ġfile", ">\",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġx", "e", "::", "tools", "::", "api", "_", "scanner", "_", "main", ");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::171", "code": "// Copyright (c) 2011 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"chrome/browser/renderer_host/chrome_url_request_user_data.h\"\n\nnamespace {\n\nconst char* const kKeyName = \"chrome_url_request_user_data\";\n\n}  // namespace\n\nChromeURLRequestUserData::ChromeURLRequestUserData()\n    : is_prerender_(false) {\n}\n\n// static\nChromeURLRequestUserData* ChromeURLRequestUserData::Get(\n    const net::URLRequest* request) {\n  DCHECK(request);\n  return static_cast<ChromeURLRequestUserData*>(request->GetUserData(kKeyName));\n}\n\n// static\nChromeURLRequestUserData* ChromeURLRequestUserData::Create(\n    net::URLRequest* request) {\n  DCHECK(request);\n  DCHECK(!Get(request));\n  ChromeURLRequestUserData* user_data = new ChromeURLRequestUserData();\n  request->SetUserData(kKeyName, user_data);\n  return user_data;\n}\n\n// static\nvoid ChromeURLRequestUserData::Delete(net::URLRequest* request) {\n  DCHECK(request);\n  request->SetUserData(kKeyName, NULL);\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "browser", "/", "renderer", "_", "host", "/", "chrome", "_", "url", "_", "request", "_", "user", "_", "data", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "const", "Ġchar", "*", "Ġconst", "Ġk", "KeyName", "Ġ=", "Ġ\"", "chrome", "_", "url", "_", "request", "_", "user", "_", "data", "\";", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "Chrome", "URL", "Request", "UserData", "::", "Chrome", "URL", "Request", "UserData", "()", "Ċ", "ĠĠĠ", "Ġ:", "Ġis", "_", "pre", "render", "_(", "false", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "//", "Ġstatic", "Ċ", "Chrome", "URL", "Request", "UserData", "*", "ĠChrome", "URL", "Request", "UserData", "::", "Get", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġnet", "::", "URL", "Request", "*", "Ġrequest", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "(", "request", ");", "Ċ", "Ġ", "Ġreturn", "Ġstatic", "_", "cast", "<", "Chrome", "URL", "Request", "UserData", "*>(", "request", "->", "Get", "UserData", "(", "k", "KeyName", "));", "Ċ", "}", "Ċ", "Ċ", "//", "Ġstatic", "Ċ", "Chrome", "URL", "Request", "UserData", "*", "ĠChrome", "URL", "Request", "UserData", "::", "Create", "(", "Ċ", "ĠĠĠ", "Ġnet", "::", "URL", "Request", "*", "Ġrequest", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "(", "request", ");", "Ċ", "Ġ", "ĠD", "CHECK", "(!", "Get", "(", "request", "));", "Ċ", "Ġ", "ĠChrome", "URL", "Request", "UserData", "*", "Ġuser", "_", "data", "Ġ=", "Ġnew", "ĠChrome", "URL", "Request", "UserData", "();", "Ċ", "Ġ", "Ġrequest", "->", "Set", "UserData", "(", "k", "KeyName", ",", "Ġuser", "_", "data", ");", "Ċ", "Ġ", "Ġreturn", "Ġuser", "_", "data", ";", "Ċ", "}", "Ċ", "Ċ", "//", "Ġstatic", "Ċ", "void", "ĠChrome", "URL", "Request", "UserData", "::", "Delete", "(", "net", "::", "URL", "Request", "*", "Ġrequest", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "(", "request", ");", "Ċ", "Ġ", "Ġrequest", "->", "Set", "UserData", "(", "k", "KeyName", ",", "ĠNULL", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::172", "code": "#include \"Halide.h\"\n#include <tiramisu/utils.h>\n#include <cstdlib>\n#include <iostream>\n\n#include \"wrapper_test_71.h\"\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#ifdef __cplusplus\n}  // extern \"C\"\n#endif\n\n// We assume that the increment is 1.\nvoid reference_saxpy(int N1, float alpha, float *A, float *B)\n{\n\tfor (int i=0; i<N1; i++)\n\t\tB[i] = alpha*A[i] + B[i];\n}\n\nint main(int, char **)\n{\n    Halide::Buffer<float> a(1, \"a\");\n    Halide::Buffer<float> x(SIZE, \"x\");\n    Halide::Buffer<float> y_ref(SIZE, \"y_ref\");\n    Halide::Buffer<float> y(SIZE, \"y\");\n\n    init_buffer(x, (float)1);\n    init_buffer(y, (float)1);\n    init_buffer(y_ref, (float)1);\n    init_buffer(a, (float)1);\n\n    reference_saxpy(SIZE, 1, x.data(), y_ref.data());\n    tiramisu_generated_code(a.raw_buffer(), x.raw_buffer(), y.raw_buffer());\n\n    compare_buffers(\"test_\" + std::string(TEST_NUMBER_STR) + \"_\"  + std::string(TEST_NAME_STR), y, y_ref);\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Hal", "ide", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "t", "ir", "am", "is", "u", "/", "utils", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "wrapper", "_", "test", "_", "71", ".", "h", "\"", "Ċ", "Ċ", "#", "ifdef", "Ġ__", "c", "plus", "plus", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġ{", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "ifdef", "Ġ__", "c", "plus", "plus", "Ċ", "}", "Ġ", "Ġ//", "Ġextern", "Ġ\"", "C", "\"", "Ċ", "#", "endif", "Ċ", "Ċ", "//", "ĠWe", "Ġassume", "Ġthat", "Ġthe", "Ġincrement", "Ġis", "Ġ1", ".", "Ċ", "void", "Ġreference", "_", "sax", "py", "(", "int", "ĠN", "1", ",", "Ġfloat", "Ġalpha", ",", "Ġfloat", "Ġ*", "A", ",", "Ġfloat", "Ġ*", "B", ")", "Ċ", "{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "N", "1", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "B", "[", "i", "]", "Ġ=", "Ġalpha", "*", "A", "[", "i", "]", "Ġ+", "ĠB", "[", "i", "];", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "Ġ**)", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠH", "al", "ide", "::", "Buffer", "<", "float", ">", "Ġa", "(", "1", ",", "Ġ\"", "a", "\");", "Ċ", "ĠĠĠ", "ĠH", "al", "ide", "::", "Buffer", "<", "float", ">", "Ġx", "(", "SIZE", ",", "Ġ\"", "x", "\");", "Ċ", "ĠĠĠ", "ĠH", "al", "ide", "::", "Buffer", "<", "float", ">", "Ġy", "_", "ref", "(", "SIZE", ",", "Ġ\"", "y", "_", "ref", "\");", "Ċ", "ĠĠĠ", "ĠH", "al", "ide", "::", "Buffer", "<", "float", ">", "Ġy", "(", "SIZE", ",", "Ġ\"", "y", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġinit", "_", "buffer", "(", "x", ",", "Ġ(", "float", ")", "1", ");", "Ċ", "ĠĠĠ", "Ġinit", "_", "buffer", "(", "y", ",", "Ġ(", "float", ")", "1", ");", "Ċ", "ĠĠĠ", "Ġinit", "_", "buffer", "(", "y", "_", "ref", ",", "Ġ(", "float", ")", "1", ");", "Ċ", "ĠĠĠ", "Ġinit", "_", "buffer", "(", "a", ",", "Ġ(", "float", ")", "1", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġreference", "_", "sax", "py", "(", "SIZE", ",", "Ġ1", ",", "Ġx", ".", "data", "(),", "Ġy", "_", "ref", ".", "data", "());", "Ċ", "ĠĠĠ", "Ġt", "ir", "am", "is", "u", "_", "generated", "_", "code", "(", "a", ".", "raw", "_", "buffer", "(),", "Ġx", ".", "raw", "_", "buffer", "(),", "Ġy", ".", "raw", "_", "buffer", "());", "Ċ", "Ċ", "ĠĠĠ", "Ġcompare", "_", "buffers", "(\"", "test", "_\"", "Ġ+", "Ġstd", "::", "string", "(", "TEST", "_", "NUMBER", "_", "STR", ")", "Ġ+", "Ġ\"_\"", "Ġ", "Ġ+", "Ġstd", "::", "string", "(", "TEST", "_", "NAME", "_", "STR", "),", "Ġy", ",", "Ġy", "_", "ref", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::173", "code": "/*\n * Copyright 1999-2001 Sun Microsystems, Inc.  All Rights Reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,\n * CA 95054 USA or visit www.sun.com if you need additional information or\n * have any questions.\n *\n */\n\nclass Optimizer VALUE_OBJ_CLASS_SPEC {\n private:\n  IR* _ir;\n\n public:\n  Optimizer(IR* ir);\n  IR* ir() const                                 { return _ir; }\n\n  // optimizations\n  void eliminate_conditional_expressions();\n  void eliminate_blocks();\n  void eliminate_null_checks();\n};\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ1", "999", "-", "2001", "ĠSun", "ĠMicro", "systems", ",", "ĠInc", ".", "Ġ", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠDO", "ĠNOT", "ĠALTER", "ĠOR", "ĠRE", "MOVE", "ĠCOPY", "RIGHT", "ĠNOT", "ICES", "ĠOR", "ĠTHIS", "ĠFILE", "ĠHEADER", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġcode", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ċ", "Ġ*", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ġ2", "Ġonly", ",", "Ġas", "Ċ", "Ġ*", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġcode", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "Ċ", "Ġ*", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "Ċ", "Ġ*", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġversion", "Ġ2", "Ġfor", "Ġmore", "Ġdetails", "Ġ(", "a", "Ġcopy", "Ġis", "Ġincluded", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", "Ġthat", "Ċ", "Ġ*", "Ġac", "compan", "ied", "Ġthis", "Ġcode", ").", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ċ", "Ġ*", "Ġ2", "Ġalong", "Ġwith", "Ġthis", "Ġwork", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ċ", "Ġ*", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", "ĠUSA", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠPlease", "Ġcontact", "ĠSun", "ĠMicro", "systems", ",", "ĠInc", ".,", "Ġ4", "150", "ĠNetwork", "ĠCircle", ",", "ĠS", "ant", "a", "ĠCl", "ara", ",", "Ċ", "Ġ*", "ĠCA", "Ġ9", "50", "54", "ĠUSA", "Ġor", "Ġvisit", "Ġwww", ".", "sun", ".", "com", "Ġif", "Ġyou", "Ġneed", "Ġadditional", "Ġinformation", "Ġor", "Ċ", "Ġ*", "Ġhave", "Ġany", "Ġquestions", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "class", "ĠOptim", "izer", "ĠVALUE", "_", "OBJ", "_", "CLASS", "_", "SPEC", "Ġ{", "Ċ", "Ġprivate", ":", "Ċ", "Ġ", "ĠIR", "*", "Ġ_", "ir", ";", "Ċ", "Ċ", "Ġpublic", ":", "Ċ", "Ġ", "ĠOptim", "izer", "(", "IR", "*", "Ġir", ");", "Ċ", "Ġ", "ĠIR", "*", "Ġir", "()", "Ġconst", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ġreturn", "Ġ_", "ir", ";", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġoptim", "izations", "Ċ", "Ġ", "Ġvoid", "Ġeliminate", "_", "conditional", "_", "expressions", "();", "Ċ", "Ġ", "Ġvoid", "Ġeliminate", "_", "blocks", "();", "Ċ", "Ġ", "Ġvoid", "Ġeliminate", "_", "null", "_", "checks", "();", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::174", "code": "/* This file is part of HSPlasma.\n *\n * HSPlasma is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * HSPlasma is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with HSPlasma.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"plSDL.h\"\n\nunsigned int plSDL::VariableLengthRead(hsStream* S, size_t size) {\n    if (size < 0x100)\n        return S->readByte();\n    else if (size < 0x10000)\n        return S->readShort();\n    else\n        return S->readInt();\n}\n\nvoid plSDL::VariableLengthWrite(hsStream* S, size_t size, unsigned int value) {\n    if (size < 0x100)\n        S->writeByte(value);\n    else if (size < 0x10000)\n        S->writeShort(value);\n    else\n        S->writeInt(value);\n}\n", "code_tokens": ["Ġ/*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠH", "SP", "las", "ma", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠH", "SP", "las", "ma", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠH", "SP", "las", "ma", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠH", "SP", "las", "ma", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "pl", "SDL", ".", "h", "\"", "Ċ", "Ċ", "unsigned", "Ġint", "Ġpl", "SDL", "::", "Variable", "Length", "Read", "(", "hs", "Stream", "*", "ĠS", ",", "Ġsize", "_", "t", "Ġsize", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "size", "Ġ<", "Ġ0", "x", "100", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠS", "->", "readByte", "();", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(", "size", "Ġ<", "Ġ0", "x", "10000", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠS", "->", "read", "Short", "();", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠS", "->", "readInt", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpl", "SDL", "::", "Variable", "Length", "Write", "(", "hs", "Stream", "*", "ĠS", ",", "Ġsize", "_", "t", "Ġsize", ",", "Ġunsigned", "Ġint", "Ġvalue", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "size", "Ġ<", "Ġ0", "x", "100", ")", "Ċ", "ĠĠĠĠĠĠĠ", "ĠS", "->", "writeByte", "(", "value", ");", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(", "size", "Ġ<", "Ġ0", "x", "10000", ")", "Ċ", "ĠĠĠĠĠĠĠ", "ĠS", "->", "write", "Short", "(", "value", ");", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "ĠS", "->", "writeInt", "(", "value", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::175", "code": "/*\n   eXokernel Development Kit (XDK)\n\n   Based on code by Samsung Research America Copyright (C) 2013\n \n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <http://www.gnu.org/licenses/>.\n\n   As a special exception, if you link the code in this file with\n   files compiled with a GNU compiler to produce an executable,\n   that does not cause the resulting executable to be covered by\n   the GNU Lesser General Public License.  This exception does not\n   however invalidate any other reasons why the executable file\n   might be covered by the GNU Lesser General Public License.\n   This exception applies to code released by its copyright holders\n   in files containing the exception.  \n*/\n\n\n\n\n\n\n#include <stdio.h>\n#include <stdarg.h>\n#include <common/logging.h>\n\n#include \"nvme_common.h\"\n\n#ifdef NVME_VERBOSE\nvoid NVME_INFO(const char *fmt, ...) {\n  printf(NORMAL_MAGENTA);\n  va_list list;\n        va_start(list, fmt);\n  printf(\"[NVME]:\");\n        vprintf(fmt, list);\n        va_end(list);\n        printf(RESET);\n}\n#endif\n\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠ", "Ġe", "X", "ok", "ernel", "ĠDe", "velopment", "ĠK", "it", "Ġ(", "X", "DK", ")", "Ċ", "Ċ", "ĠĠ", "ĠBased", "Ġon", "Ġcode", "Ġby", "ĠSam", "sung", "ĠRe", "search", "ĠAm", "eric", "a", "ĠCopyright", "Ġ(", "C", ")", "Ġ2013", "Ċ", "ĠĊ", "ĠĠ", "ĠThe", "ĠGNU", "ĠC", "ĠLibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "ĠĠ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "ĠĠ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "ĠĠ", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠĠ", "ĠThe", "ĠGNU", "ĠC", "ĠLibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "ĠĠ", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "ĠĠ", "ĠLicense", "Ġalong", "Ġwith", "Ġthe", "ĠGNU", "ĠC", "ĠLibrary", ";", "Ġif", "Ġnot", ",", "Ġsee", "Ċ", "ĠĠ", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "ĠĠ", "ĠAs", "Ġa", "Ġspecial", "Ġexception", ",", "Ġif", "Ġyou", "Ġlink", "Ġthe", "Ġcode", "Ġin", "Ġthis", "Ġfile", "Ġwith", "Ċ", "ĠĠ", "Ġfiles", "Ġcompiled", "Ġwith", "Ġa", "ĠGNU", "Ġcompiler", "Ġto", "Ġproduce", "Ġan", "Ġexecutable", ",", "Ċ", "ĠĠ", "Ġthat", "Ġdoes", "Ġnot", "Ġcause", "Ġthe", "Ġresulting", "Ġexecutable", "Ġto", "Ġbe", "Ġcovered", "Ġby", "Ċ", "ĠĠ", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", ".", "Ġ", "ĠThis", "Ġexception", "Ġdoes", "Ġnot", "Ċ", "ĠĠ", "Ġhowever", "Ġinvalidate", "Ġany", "Ġother", "Ġreasons", "Ġwhy", "Ġthe", "Ġexecutable", "Ġfile", "Ċ", "ĠĠ", "Ġmight", "Ġbe", "Ġcovered", "Ġby", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", ".", "Ċ", "ĠĠ", "ĠThis", "Ġexception", "Ġapplies", "Ġto", "Ġcode", "Ġreleased", "Ġby", "Ġits", "Ġcopyright", "Ġhold", "ers", "Ċ", "ĠĠ", "Ġin", "Ġfiles", "Ġcontaining", "Ġthe", "Ġexception", ".", "ĠĠ", "Ċ", "*/", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "arg", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "common", "/", "logging", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "nvm", "e", "_", "common", ".", "h", "\"", "Ċ", "Ċ", "#", "ifdef", "ĠNV", "ME", "_", "VERBOSE", "Ċ", "void", "ĠNV", "ME", "_", "INFO", "(", "const", "Ġchar", "Ġ*", "fmt", ",", "Ġ...)", "Ġ{", "Ċ", "Ġ", "Ġprintf", "(", "NORMAL", "_", "MAG", "ENT", "A", ");", "Ċ", "Ġ", "Ġva", "_", "list", "Ġlist", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġva", "_", "start", "(", "list", ",", "Ġfmt", ");", "Ċ", "Ġ", "Ġprintf", "(\"[", "NV", "ME", "]:", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġv", "printf", "(", "fmt", ",", "Ġlist", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġva", "_", "end", "(", "list", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(", "RESET", ");", "Ċ", "}", "Ċ", "#", "endif", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::176", "code": "#pragma once\n\n#include \"base/worker_thread.hpp\"\n\n#include \"ugc/storage.hpp\"\n#include \"ugc/types.hpp\"\n\n#include <functional>\n\nclass Index;\nstruct FeatureID;\n\nnamespace ugc\n{\nclass Api\n{\npublic:\n  using UGCCallback = std::function<void(UGC const &)>;\n  using UGCUpdateCallback = std::function<void(UGCUpdate const &)>;\n\n  explicit Api(Index const & index, std::string const & filename);\n\n  void GetUGC(FeatureID const & id, UGCCallback callback);\n  void GetUGCUpdate(FeatureID const & id, UGCUpdateCallback callback);\n\n  void SetUGCUpdate(FeatureID const & id, UGCUpdate const & ugc);\n\n  static UGC MakeTestUGC1(Time now = Clock::now());\n  static UGC MakeTestUGC2(Time now = Clock::now());\n\nprivate:\n  void GetUGCImpl(FeatureID const & id, UGCCallback callback);\n  void GetUGCUpdateImpl(FeatureID const & id, UGCUpdateCallback callback);\n\n  void SetUGCUpdateImpl(FeatureID const & id, UGCUpdate const & ugc);\n\n  Index const & m_index;\n  base::WorkerThread m_thread;\n  Storage m_storage;\n};\n}  // namespace ugc\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "worker", "_", "thread", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "ug", "c", "/", "storage", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "ug", "c", "/", "types", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "Ċ", "class", "ĠIndex", ";", "Ċ", "struct", "ĠFeature", "ID", ";", "Ċ", "Ċ", "namespace", "Ġu", "gc", "Ċ", "{", "Ċ", "class", "ĠApi", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġusing", "ĠU", "GCC", "allback", "Ġ=", "Ġstd", "::", "function", "<", "void", "(", "UG", "C", "Ġconst", "Ġ&", ")>", ";", "Ċ", "Ġ", "Ġusing", "ĠU", "GC", "Update", "Callback", "Ġ=", "Ġstd", "::", "function", "<", "void", "(", "UG", "C", "Update", "Ġconst", "Ġ&", ")>", ";", "Ċ", "Ċ", "Ġ", "Ġexplicit", "ĠApi", "(", "Index", "Ġconst", "Ġ&", "Ġindex", ",", "Ġstd", "::", "string", "Ġconst", "Ġ&", "Ġfilename", ");", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĠGet", "UG", "C", "(", "Feature", "ID", "Ġconst", "Ġ&", "Ġid", ",", "ĠU", "GCC", "allback", "Ġcallback", ");", "Ċ", "Ġ", "Ġvoid", "ĠGet", "UG", "C", "Update", "(", "Feature", "ID", "Ġconst", "Ġ&", "Ġid", ",", "ĠU", "GC", "Update", "Callback", "Ġcallback", ");", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĠSet", "UG", "C", "Update", "(", "Feature", "ID", "Ġconst", "Ġ&", "Ġid", ",", "ĠU", "GC", "Update", "Ġconst", "Ġ&", "Ġu", "gc", ");", "Ċ", "Ċ", "Ġ", "Ġstatic", "ĠU", "GC", "ĠMake", "Test", "UG", "C", "1", "(", "Time", "Ġnow", "Ġ=", "ĠClock", "::", "now", "());", "Ċ", "Ġ", "Ġstatic", "ĠU", "GC", "ĠMake", "Test", "UG", "C", "2", "(", "Time", "Ġnow", "Ġ=", "ĠClock", "::", "now", "());", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġvoid", "ĠGet", "UG", "C", "Impl", "(", "Feature", "ID", "Ġconst", "Ġ&", "Ġid", ",", "ĠU", "GCC", "allback", "Ġcallback", ");", "Ċ", "Ġ", "Ġvoid", "ĠGet", "UG", "C", "Update", "Impl", "(", "Feature", "ID", "Ġconst", "Ġ&", "Ġid", ",", "ĠU", "GC", "Update", "Callback", "Ġcallback", ");", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĠSet", "UG", "C", "Update", "Impl", "(", "Feature", "ID", "Ġconst", "Ġ&", "Ġid", ",", "ĠU", "GC", "Update", "Ġconst", "Ġ&", "Ġu", "gc", ");", "Ċ", "Ċ", "Ġ", "ĠIndex", "Ġconst", "Ġ&", "Ġm", "_", "index", ";", "Ċ", "Ġ", "Ġbase", "::", "Worker", "Thread", "Ġm", "_", "thread", ";", "Ċ", "Ġ", "ĠStorage", "Ġm", "_", "storage", ";", "Ċ", "};", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġu", "gc", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::177", "code": "#include \"stdafx.h\"\n#include \"com4j.h\"\n\nvoid error( JNIEnv* env, const char* file, int line, HRESULT hr, const char* msg ... ) {\n\t// format the message\n\tva_list va;\n\tva_start(va,msg);\n\n\tint len = _vscprintf(msg,va);\n\tchar* w = reinterpret_cast<char*>(alloca(len+1)); // +1 for '\\0'\n\tvsprintf(w,msg,va);\n\n\tenv->ExceptionClear();\n\tenv->Throw( (jthrowable)comexception_new_hr( env, env->NewStringUTF(w), hr, env->NewStringUTF(file), line ) );\n}\n\nvoid error( JNIEnv* env, const char* file, int line, const char* msg ... ) {\n\t// format the message\n\tva_list va;\n\tva_start(va,msg);\n\n\tint len = _vscprintf(msg,va);\n\tchar* w = reinterpret_cast<char*>(alloca(len+1)); // +1 for '\\0'\n\tvsprintf(w,msg,va);\n\n\tenv->ExceptionClear();\n\tenv->Throw( (jthrowable)comexception_new( env, env->NewStringUTF(w), env->NewStringUTF(file), line ) );\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "com", "4", "j", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġerror", "(", "ĠJNI", "Env", "*", "Ġenv", ",", "Ġconst", "Ġchar", "*", "Ġfile", ",", "Ġint", "Ġline", ",", "ĠHRESULT", "Ġhr", ",", "Ġconst", "Ġchar", "*", "Ġmsg", "Ġ...", "Ġ)", "Ġ{", "Ċ", "ĉ", "//", "Ġformat", "Ġthe", "Ġmessage", "Ċ", "ĉ", "va", "_", "list", "Ġva", ";", "Ċ", "ĉ", "va", "_", "start", "(", "va", ",", "msg", ");", "Ċ", "Ċ", "ĉ", "int", "Ġlen", "Ġ=", "Ġ_", "vsc", "printf", "(", "msg", ",", "va", ");", "Ċ", "ĉ", "char", "*", "Ġw", "Ġ=", "Ġreinterpret", "_", "cast", "<", "char", "*>(", "alloca", "(", "len", "+", "1", "));", "Ġ//", "Ġ+", "1", "Ġfor", "Ġ'\\", "0", "'", "Ċ", "ĉ", "vs", "printf", "(", "w", ",", "msg", ",", "va", ");", "Ċ", "Ċ", "ĉ", "env", "->", "Exception", "Clear", "();", "Ċ", "ĉ", "env", "->", "Throw", "(", "Ġ(", "j", "throw", "able", ")", "com", "exception", "_", "new", "_", "hr", "(", "Ġenv", ",", "Ġenv", "->", "NewString", "UTF", "(", "w", "),", "Ġhr", ",", "Ġenv", "->", "NewString", "UTF", "(", "file", "),", "Ġline", "Ġ)", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "void", "Ġerror", "(", "ĠJNI", "Env", "*", "Ġenv", ",", "Ġconst", "Ġchar", "*", "Ġfile", ",", "Ġint", "Ġline", ",", "Ġconst", "Ġchar", "*", "Ġmsg", "Ġ...", "Ġ)", "Ġ{", "Ċ", "ĉ", "//", "Ġformat", "Ġthe", "Ġmessage", "Ċ", "ĉ", "va", "_", "list", "Ġva", ";", "Ċ", "ĉ", "va", "_", "start", "(", "va", ",", "msg", ");", "Ċ", "Ċ", "ĉ", "int", "Ġlen", "Ġ=", "Ġ_", "vsc", "printf", "(", "msg", ",", "va", ");", "Ċ", "ĉ", "char", "*", "Ġw", "Ġ=", "Ġreinterpret", "_", "cast", "<", "char", "*>(", "alloca", "(", "len", "+", "1", "));", "Ġ//", "Ġ+", "1", "Ġfor", "Ġ'\\", "0", "'", "Ċ", "ĉ", "vs", "printf", "(", "w", ",", "msg", ",", "va", ");", "Ċ", "Ċ", "ĉ", "env", "->", "Exception", "Clear", "();", "Ċ", "ĉ", "env", "->", "Throw", "(", "Ġ(", "j", "throw", "able", ")", "com", "exception", "_", "new", "(", "Ġenv", ",", "Ġenv", "->", "NewString", "UTF", "(", "w", "),", "Ġenv", "->", "NewString", "UTF", "(", "file", "),", "Ġline", "Ġ)", "Ġ);", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::178", "code": "// File: fig0621.cpp\n// Computer Systems, Fourth Edition\n// Figure 6.21\n\n#include <iostream>\nusing namespace std;\n\nint numPts;\nint value;\nint j;\n\nvoid printBar (int n) {\n   int k;\n   for (k = 1; k <= n; k++) {\n      cout << '*';\n   }\n   cout << endl;\n}\n\nint main () {\n   cin >> numPts;\n   for (j = 1; j <= numPts; j++) {\n      cin >> value;\n      printBar (value);\n   }\n   return 0;\n}\n", "code_tokens": ["Ġ//", "ĠFile", ":", "Ġfig", "0621", ".", "cpp", "Ċ", "//", "ĠComput", "er", "ĠSystems", ",", "ĠF", "our", "th", "ĠE", "dition", "Ċ", "//", "ĠFigure", "Ġ6", ".", "21", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġnum", "Pts", ";", "Ċ", "int", "Ġvalue", ";", "Ċ", "int", "Ġj", ";", "Ċ", "Ċ", "void", "Ġprint", "Bar", "Ġ(", "int", "Ġn", ")", "Ġ{", "Ċ", "ĠĠ", "Ġint", "Ġk", ";", "Ċ", "ĠĠ", "Ġfor", "Ġ(", "k", "Ġ=", "Ġ1", ";", "Ġk", "Ġ<=", "Ġn", ";", "Ġk", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ'*';", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "ĠĠ", "Ġcin", "Ġ>>", "Ġnum", "Pts", ";", "Ċ", "ĠĠ", "Ġfor", "Ġ(", "j", "Ġ=", "Ġ1", ";", "Ġj", "Ġ<=", "Ġnum", "Pts", ";", "Ġj", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġvalue", ";", "Ċ", "ĠĠĠĠĠ", "Ġprint", "Bar", "Ġ(", "value", ");", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::179", "code": "/*\n *  Copyright (c) 2015 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree. An additional intellectual property rights grant can be found\n *  in the file PATENTS.  All contributing project authors may\n *  be found in the AUTHORS file in the root of the source tree.\n */\n#include \"modules/rtp_rtcp/source/rtp_format_h264.h\"\n\nnamespace webrtc {\nvoid FuzzOneInput(const uint8_t* data, size_t size) {\n  RtpDepacketizerH264 depacketizer;\n  RtpDepacketizer::ParsedPayload parsed_payload;\n  depacketizer.Parse(&parsed_payload, data, size);\n}\n}  // namespace webrtc\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "ĠThe", "ĠWeb", "RTC", "Ġproject", "Ġauthors", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ċ", "Ġ*", "Ġ", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġof", "Ġthe", "Ġsource", "Ċ", "Ġ*", "Ġ", "Ġtree", ".", "ĠAn", "Ġadditional", "Ġintel", "lect", "ual", "Ġproperty", "Ġrights", "Ġgrant", "Ġcan", "Ġbe", "Ġfound", "Ċ", "Ġ*", "Ġ", "Ġin", "Ġthe", "Ġfile", "ĠPAT", "ENTS", ".", "Ġ", "ĠAll", "Ġcontrib", "uting", "Ġproject", "Ġauthors", "Ġmay", "Ċ", "Ġ*", "Ġ", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠAUT", "HOR", "S", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġof", "Ġthe", "Ġsource", "Ġtree", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "modules", "/", "rtp", "_", "rt", "cp", "/", "source", "/", "rtp", "_", "format", "_", "h", "264", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġweb", "rtc", "Ġ{", "Ċ", "void", "ĠFuzz", "One", "Input", "(", "const", "Ġuint", "8", "_", "t", "*", "Ġdata", ",", "Ġsize", "_", "t", "Ġsize", ")", "Ġ{", "Ċ", "Ġ", "ĠR", "tp", "De", "packet", "izer", "H", "264", "Ġde", "packet", "izer", ";", "Ċ", "Ġ", "ĠR", "tp", "De", "packet", "izer", "::", "Parsed", "Payload", "Ġparsed", "_", "payload", ";", "Ċ", "Ġ", "Ġde", "packet", "izer", ".", "Parse", "(&", "parsed", "_", "payload", ",", "Ġdata", ",", "Ġsize", ");", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġweb", "rtc", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::180", "code": "#include <iostream>\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\nint main() {\r\ncout<<\"\\n\";\r\nprintf('\\n');\r\n    // your code goes here\r\n    return 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "stdio", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "cout", "<<", "\"\\", "n", "\";", "č", "Ċ", "printf", "('\\", "n", "');", "č", "Ċ", "ĠĠĠ", "Ġ//", "Ġyour", "Ġcode", "Ġgoes", "Ġhere", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::181", "code": "// Time Complexity: O(n^2)\n// Space Complexity: O(1)\n\nclass Solution {\n    public:\n        vector<vector<int> > threeSum(vector<int> &num) {\n            vector<vector<int> > ans;\n            const int target = 0;\n\n            sort(num.begin(), num.end());\n            auto last = num.rend();\n            for(auto a = num.rbegin(); a < prev(last, 2); ++a) {\n                if(a > num.rbegin() && *a == *(a - 1))\n                    continue;\n                auto b = next(a);\n                auto c = prev(last);\n\n                while(b < c) {\n                    if(b > next(a) && *b == *(b - 1)) {\n                        ++b;\n                    }\n                    else if(c < prev(last) && *c == *(c + 1)) { \n                        --c;\n                    }\n                    else {\n                        const int sum = *a + *b + *c;\n\n                        if(sum < target)\n                            --c;\n                        else if(sum > target)\n                            ++b;\n                        else {\n                            ans.push_back({ *c, *b, *a});\n                            ++b;\n                            --c;\n                        }\n                    }\n                }\n            }\n\n            return ans;\n        }\n};\n\n", "code_tokens": ["Ġ//", "ĠTime", "ĠComplex", "ity", ":", "ĠO", "(", "n", "^", "2", ")", "Ċ", "//", "ĠSpace", "ĠComplex", "ity", ":", "ĠO", "(", "1", ")", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "vector", "<", "int", ">", "Ġ>", "Ġthree", "Sum", "(", "vector", "<", "int", ">", "Ġ&", "num", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġvector", "<", "vector", "<", "int", ">", "Ġ>", "Ġans", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġint", "Ġtarget", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsort", "(", "num", ".", "begin", "(),", "Ġnum", ".", "end", "());", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "Ġlast", "Ġ=", "Ġnum", ".", "rend", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "(", "auto", "Ġa", "Ġ=", "Ġnum", ".", "r", "begin", "();", "Ġa", "Ġ<", "Ġprev", "(", "last", ",", "Ġ2", ");", "Ġ++", "a", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "a", "Ġ>", "Ġnum", ".", "r", "begin", "()", "Ġ&&", "Ġ*", "a", "Ġ==", "Ġ*(", "a", "Ġ-", "Ġ1", "))", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "Ġb", "Ġ=", "Ġnext", "(", "a", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "Ġc", "Ġ=", "Ġprev", "(", "last", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġwhile", "(", "b", "Ġ<", "Ġc", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "b", "Ġ>", "Ġnext", "(", "a", ")", "Ġ&&", "Ġ*", "b", "Ġ==", "Ġ*(", "b", "Ġ-", "Ġ1", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "b", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "(", "c", "Ġ<", "Ġprev", "(", "last", ")", "Ġ&&", "Ġ*", "c", "Ġ==", "Ġ*(", "c", "Ġ+", "Ġ1", "))", "Ġ{", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ--", "c", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġint", "Ġsum", "Ġ=", "Ġ*", "a", "Ġ+", "Ġ*", "b", "Ġ+", "Ġ*", "c", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "sum", "Ġ<", "Ġtarget", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ--", "c", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "(", "sum", "Ġ>", "Ġtarget", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "b", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġans", ".", "push", "_", "back", "({", "Ġ*", "c", ",", "Ġ*", "b", ",", "Ġ*", "a", "});", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "b", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ--", "c", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġans", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::182", "code": "#include \"vocabulary.h\"\n\nnamespace extractor {\n\nVocabulary::~Vocabulary() {}\n\nint Vocabulary::GetTerminalIndex(const string& word) {\n  int word_id = -1;\n  #pragma omp critical (vocabulary)\n  {\n    auto it = dictionary.find(word);\n    if (it != dictionary.end()) {\n      word_id = it->second;\n    } else {\n      word_id = words.size();\n      dictionary[word] = word_id;\n      words.push_back(word);\n    }\n  }\n  return word_id;\n}\n\nint Vocabulary::GetNonterminalIndex(int position) {\n  return -position;\n}\n\nbool Vocabulary::IsTerminal(int symbol) {\n  return symbol >= 0;\n}\n\nstring Vocabulary::GetTerminalValue(int symbol) {\n  string word;\n  #pragma omp critical (vocabulary)\n  word = words[symbol];\n  return word;\n}\n\nbool Vocabulary::operator==(const Vocabulary& other) const {\n  return words == other.words && dictionary == other.dictionary;\n}\n\n} // namespace extractor\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "vocabulary", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġextractor", "Ġ{", "Ċ", "Ċ", "Vocabulary", "::~", "Vocabulary", "()", "Ġ{}", "Ċ", "Ċ", "int", "ĠV", "ocab", "ulary", "::", "Get", "Terminal", "Index", "(", "const", "Ġstring", "&", "Ġword", ")", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġword", "_", "id", "Ġ=", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ#", "pragma", "Ġomp", "Ġcritical", "Ġ(", "vocabulary", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġauto", "Ġit", "Ġ=", "Ġdictionary", ".", "find", "(", "word", ");", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "it", "Ġ!=", "Ġdictionary", ".", "end", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġword", "_", "id", "Ġ=", "Ġit", "->", "second", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġword", "_", "id", "Ġ=", "Ġwords", ".", "size", "();", "Ċ", "ĠĠĠĠĠ", "Ġdictionary", "[", "word", "]", "Ġ=", "Ġword", "_", "id", ";", "Ċ", "ĠĠĠĠĠ", "Ġwords", ".", "push", "_", "back", "(", "word", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġword", "_", "id", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠV", "ocab", "ulary", "::", "Get", "Non", "terminal", "Index", "(", "int", "Ġposition", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġ-", "position", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠV", "ocab", "ulary", "::", "Is", "Terminal", "(", "int", "Ġsymbol", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġsymbol", "Ġ>=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "string", "ĠV", "ocab", "ulary", "::", "Get", "Terminal", "Value", "(", "int", "Ġsymbol", ")", "Ġ{", "Ċ", "Ġ", "Ġstring", "Ġword", ";", "Ċ", "Ġ", "Ġ#", "pragma", "Ġomp", "Ġcritical", "Ġ(", "vocabulary", ")", "Ċ", "Ġ", "Ġword", "Ġ=", "Ġwords", "[", "symbol", "];", "Ċ", "Ġ", "Ġreturn", "Ġword", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠV", "ocab", "ulary", "::", "operator", "==(", "const", "ĠV", "ocab", "ulary", "&", "Ġother", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġwords", "Ġ==", "Ġother", ".", "words", "Ġ&&", "Ġdictionary", "Ġ==", "Ġother", ".", "dictionary", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġextractor", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::183", "code": "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"components/spellcheck/browser/android/component_jni_registrar.h\"\n\n#include \"base/android/jni_android.h\"\n#include \"base/android/jni_registrar.h\"\n#include \"components/spellcheck/browser/spellchecker_session_bridge_android.h\"\n\nnamespace spellcheck {\n\nnamespace android {\n\nstatic base::android::RegistrationMethod kSpellcheckRegisteredMethods[] = {\n    {\"SpellCheckerSessionBridge\", SpellCheckerSessionBridge::RegisterJNI},\n};\n\nbool RegisterSpellcheckJni(JNIEnv* env) {\n  return base::android::RegisterNativeMethods(\n      env, kSpellcheckRegisteredMethods,\n      std::size(kSpellcheckRegisteredMethods));\n}\n\n}  // namespace android\n\n}  // namespace spellcheck\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2016", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "components", "/", "spell", "check", "/", "browser", "/", "android", "/", "component", "_", "jni", "_", "registr", "ar", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "android", "/", "jni", "_", "android", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "android", "/", "jni", "_", "registr", "ar", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "components", "/", "spell", "check", "/", "browser", "/", "spell", "checker", "_", "session", "_", "bridge", "_", "android", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġspell", "check", "Ġ{", "Ċ", "Ċ", "namespace", "Ġandroid", "Ġ{", "Ċ", "Ċ", "static", "Ġbase", "::", "android", "::", "Registration", "Method", "Ġk", "Spell", "check", "Registered", "Methods", "[]", "Ġ=", "Ġ{", "Ċ", "ĠĠĠ", "Ġ{\"", "Spell", "Checker", "Session", "Bridge", "\",", "ĠSpell", "Checker", "Session", "Bridge", "::", "Register", "JNI", "},", "Ċ", "};", "Ċ", "Ċ", "bool", "ĠRegister", "Spell", "check", "Jni", "(", "JNIEnv", "*", "Ġenv", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġbase", "::", "android", "::", "Register", "NativeMethods", "(", "Ċ", "ĠĠĠĠĠ", "Ġenv", ",", "Ġk", "Spell", "check", "Registered", "Methods", ",", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "size", "(", "k", "Spell", "check", "Registered", "Methods", "));", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġandroid", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġspell", "check", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::184", "code": "/* { dg-do compile } */\n/* { dg-options \"-O2 -fdump-tree-forwprop2\" } */\n/* LLVM LOCAL test not applicable */\n/* { dg-require-fdump \"\" } */\n\nclass YY { public:\n  YY(const YY &v) { e[0] = v.e[0]; e[1] = v.e[1]; e[2] = v.e[2]; }\n  double &y() { return e[1]; }\n  double e[3];  };\n\nclass XX { public:\n  YY direction() const { return v; }\n  YY v;  };\n\nint foo(XX& r) {\n  if (r.direction().y() < 0.000001) return 0;\n  return 1; }\n\n/* { dg-final { scan-tree-dump-times \"&this\" 0 \"forwprop2\" } } */\n/* { dg-final { scan-tree-dump-times \"&r\" 0 \"forwprop2\" } } */\n/* { dg-final { cleanup-tree-dump \"forwprop2\" } } */\n\n", "code_tokens": ["Ġ/*", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ġ*/", "Ċ", "/*", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "O", "2", "Ġ-", "fd", "ump", "-", "tree", "-", "for", "w", "prop", "2", "\"", "Ġ}", "Ġ*/", "Ċ", "/*", "ĠLLVM", "ĠLOCAL", "Ġtest", "Ġnot", "Ġapplicable", "Ġ*/", "Ċ", "/*", "Ġ{", "Ġdg", "-", "require", "-", "fd", "ump", "Ġ\"\"", "Ġ}", "Ġ*/", "Ċ", "Ċ", "class", "ĠYY", "Ġ{", "Ġpublic", ":", "Ċ", "Ġ", "ĠYY", "(", "const", "ĠYY", "Ġ&", "v", ")", "Ġ{", "Ġe", "[", "0", "]", "Ġ=", "Ġv", ".", "e", "[", "0", "];", "Ġe", "[", "1", "]", "Ġ=", "Ġv", ".", "e", "[", "1", "];", "Ġe", "[", "2", "]", "Ġ=", "Ġv", ".", "e", "[", "2", "];", "Ġ}", "Ċ", "Ġ", "Ġdouble", "Ġ&", "y", "()", "Ġ{", "Ġreturn", "Ġe", "[", "1", "];", "Ġ}", "Ċ", "Ġ", "Ġdouble", "Ġe", "[", "3", "];", "Ġ", "Ġ};", "Ċ", "Ċ", "class", "ĠX", "X", "Ġ{", "Ġpublic", ":", "Ċ", "Ġ", "ĠYY", "Ġdirection", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġv", ";", "Ġ}", "Ċ", "Ġ", "ĠYY", "Ġv", ";", "Ġ", "Ġ};", "Ċ", "Ċ", "int", "Ġfoo", "(", "XX", "&", "Ġr", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "r", ".", "direction", "().", "y", "()", "Ġ<", "Ġ0", ".", "000001", ")", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġreturn", "Ġ1", ";", "Ġ}", "Ċ", "Ċ", "/*", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "tree", "-", "dump", "-", "times", "Ġ\"&", "this", "\"", "Ġ0", "Ġ\"", "for", "w", "prop", "2", "\"", "Ġ}", "Ġ}", "Ġ*/", "Ċ", "/*", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "tree", "-", "dump", "-", "times", "Ġ\"&", "r", "\"", "Ġ0", "Ġ\"", "for", "w", "prop", "2", "\"", "Ġ}", "Ġ}", "Ġ*/", "Ċ", "/*", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġcleanup", "-", "tree", "-", "dump", "Ġ\"", "for", "w", "prop", "2", "\"", "Ġ}", "Ġ}", "Ġ*/", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::185", "code": "/*\n * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.\n */\n#define __BGP_IP_TEST_WRAPPER_TEST_SUITE__\n#include \"bgp_ip_test.cc\"\n\nint main(int argc, char **argv) {\n    const char *largv[] = {\n        __FILE__,\n        \"--nexthop-address-family=inet6\",\n    };\n    return bgp_ip_test_main(sizeof(largv)/sizeof(largv[0]), largv);\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2013", "ĠJ", "un", "iper", "ĠNetwork", "s", ",", "ĠInc", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*/", "Ċ", "#", "define", "Ġ__", "B", "GP", "_", "IP", "_", "TEST", "_", "WRAPPER", "_", "TEST", "_", "SUITE", "__", "Ċ", "#", "include", "Ġ\"", "b", "gp", "_", "ip", "_", "test", ".", "cc", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġconst", "Ġchar", "Ġ*", "l", "argv", "[]", "Ġ=", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ__", "FILE", "__,", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ\"--", "nex", "thop", "-", "address", "-", "family", "=", "inet", "6", "\",", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġreturn", "Ġb", "gp", "_", "ip", "_", "test", "_", "main", "(", "sizeof", "(", "l", "argv", ")/", "sizeof", "(", "l", "argv", "[", "0", "]),", "Ġl", "argv", ");", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::186", "code": "#include \"bench_framework.hpp\"\n#include <mapnik/image_util.hpp>\n\nclass test : public benchmark::test_case\n{\n    mapnik::image_rgba8 im_;\npublic:\n    test(mapnik::parameters const& params)\n     : test_case(params),\n       im_(256,256) {}\n    bool validate() const\n    {\n        return true;\n    }\n    bool operator()() const\n    {\n        std::string out;\n        for (std::size_t i=0;i<iterations_;++i) {\n            out.clear();\n            out = mapnik::save_to_string(im_,\"png8:m=h:z=1\");\n        }\n        return true;\n    }\n};\n\nBENCHMARK(test,\"encoding blank png\")\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "bench", "_", "framework", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "map", "n", "ik", "/", "image", "_", "util", ".", "hpp", ">", "Ċ", "Ċ", "class", "Ġtest", "Ġ:", "Ġpublic", "Ġbenchmark", "::", "test", "_", "case", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġmap", "n", "ik", "::", "image", "_", "rgba", "8", "Ġim", "_;", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġtest", "(", "map", "n", "ik", "::", "parameters", "Ġconst", "&", "Ġparams", ")", "Ċ", "ĠĠĠĠ", "Ġ:", "Ġtest", "_", "case", "(", "params", "),", "Ċ", "ĠĠĠĠĠĠ", "Ġim", "_(", "256", ",", "256", ")", "Ġ{}", "Ċ", "ĠĠĠ", "Ġbool", "Ġvalidate", "()", "Ġconst", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġbool", "Ġoperator", "()", "()", "Ġconst", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "string", "Ġout", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "std", "::", "size", "_", "t", "Ġi", "=", "0", ";", "i", "<", "iterations", "_;", "++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġout", ".", "clear", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġout", "Ġ=", "Ġmap", "n", "ik", "::", "save", "_", "to", "_", "string", "(", "im", "_", ",\"", "png", "8", ":", "m", "=", "h", ":", "z", "=", "1", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "B", "ENCH", "MARK", "(", "test", ",\"", "encoding", "Ġblank", "Ġpng", "\")", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::187", "code": "using namespace System;\nusing namespace NETGeographicLib;\n\nint main(array<System::String ^> ^/*args*/)\n{\n    try {\n        Geodesic^ geod = gcnew Geodesic(); // WGS84\n        const double lat0 = 48 + 50/60.0, lon0 = 2 + 20/60.0; // Paris\n        Gnomonic^ proj = gcnew Gnomonic(geod);\n        {\n            // Sample forward calculation\n            double lat = 50.9, lon = 1.8; // Calais\n            double x, y;\n            proj->Forward(lat0, lon0, lat, lon, x, y);\n            Console::WriteLine(String::Format(\"X: {0} Y: {1}\", x, y));\n        }\n        {\n            // Sample reverse calculation\n            double x = -38e3, y = 230e3;\n            double lat, lon;\n            proj->Reverse(lat0, lon0, x, y, lat, lon);\n            Console::WriteLine(String::Format(\"Latitude: {0} Longitude: {1}\", lat, lon));\n        }\n    }\n    catch (GeographicErr^ e) {\n        Console::WriteLine(String::Format(\"Caught exception: {0}\", e->Message));\n        return -1;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġusing", "Ġnamespace", "ĠSystem", ";", "Ċ", "using", "Ġnamespace", "ĠNET", "Ge", "ographic", "Lib", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "array", "<", "System", "::", "String", "Ġ^", ">", "Ġ^", "/*", "args", "*/)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtry", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠGe", "odes", "ic", "^", "Ġge", "od", "Ġ=", "Ġgcnew", "ĠGe", "odes", "ic", "();", "Ġ//", "ĠW", "GS", "84", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġdouble", "Ġlat", "0", "Ġ=", "Ġ48", "Ġ+", "Ġ50", "/", "60", ".", "0", ",", "Ġlon", "0", "Ġ=", "Ġ2", "Ġ+", "Ġ20", "/", "60", ".", "0", ";", "Ġ//", "ĠPar", "is", "Ċ", "ĠĠĠĠĠĠĠ", "ĠG", "nom", "on", "ic", "^", "Ġproj", "Ġ=", "Ġgcnew", "ĠG", "nom", "on", "ic", "(", "ge", "od", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠSample", "Ġforward", "Ġcalculation", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdouble", "Ġlat", "Ġ=", "Ġ50", ".", "9", ",", "Ġlon", "Ġ=", "Ġ1", ".", "8", ";", "Ġ//", "ĠCal", "a", "is", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdouble", "Ġx", ",", "Ġy", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġproj", "->", "Forward", "(", "lat", "0", ",", "Ġlon", "0", ",", "Ġlat", ",", "Ġlon", ",", "Ġx", ",", "Ġy", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠConsole", "::", "WriteLine", "(", "String", "::", "Format", "(\"", "X", ":", "Ġ{", "0", "}", "ĠY", ":", "Ġ{", "1", "}\",", "Ġx", ",", "Ġy", "));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠSample", "Ġreverse", "Ġcalculation", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdouble", "Ġx", "Ġ=", "Ġ-", "38", "e", "3", ",", "Ġy", "Ġ=", "Ġ2", "30", "e", "3", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdouble", "Ġlat", ",", "Ġlon", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġproj", "->", "Reverse", "(", "lat", "0", ",", "Ġlon", "0", ",", "Ġx", ",", "Ġy", ",", "Ġlat", ",", "Ġlon", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠConsole", "::", "WriteLine", "(", "String", "::", "Format", "(\"", "Latitude", ":", "Ġ{", "0", "}", "ĠLong", "itude", ":", "Ġ{", "1", "}\",", "Ġlat", ",", "Ġlon", "));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcatch", "Ġ(", "Ge", "ographic", "Err", "^", "Ġe", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠConsole", "::", "WriteLine", "(", "String", "::", "Format", "(\"", "Caught", "Ġexception", ":", "Ġ{", "0", "}\",", "Ġe", "->", "Message", "));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::188", "code": "// Copyright (C) 2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <regex>\n#include <testsuite_performance.h>\n\nusing namespace __gnu_test;\n\nint main()\n{\n  time_counter time;\n  resource_counter resource;\n\n  start_counters(time, resource);\n\n  // this should get compiled to just L\"[abcd]\"\n  auto re = std::wregex(L'[' + std::wstring(300, L'a') + L\"bc\"\n                        + std::wstring(1000, 'a') + L\"d]\");\n  bool ok = true;\n  for (int i = 0; i < 100000; ++i)\n    ok = ok && (std::regex_match(L\"b\", re) && std::regex_match(L\"d\", re));\n\n  stop_counters(time, resource);\n  report_performance(__FILE__, \"\", time, resource);\n\n  return ok ? 0 : 1;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "regex", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "performance", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġ__", "gnu", "_", "test", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtime", "_", "counter", "Ġtime", ";", "Ċ", "Ġ", "Ġresource", "_", "counter", "Ġresource", ";", "Ċ", "Ċ", "Ġ", "Ġstart", "_", "counters", "(", "time", ",", "Ġresource", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġthis", "Ġshould", "Ġget", "Ġcompiled", "Ġto", "Ġjust", "ĠL", "\"[", "abcd", "]\"", "Ċ", "Ġ", "Ġauto", "Ġre", "Ġ=", "Ġstd", "::", "w", "regex", "(", "L", "'", "['", "Ġ+", "Ġstd", "::", "wstring", "(", "300", ",", "ĠL", "'", "a", "')", "Ġ+", "ĠL", "\"", "bc", "\"", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ+", "Ġstd", "::", "wstring", "(", "1000", ",", "Ġ'", "a", "')", "Ġ+", "ĠL", "\"", "d", "]\");", "Ċ", "Ġ", "Ġbool", "Ġok", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100000", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġok", "Ġ=", "Ġok", "Ġ&&", "Ġ(", "std", "::", "regex", "_", "match", "(", "L", "\"", "b", "\",", "Ġre", ")", "Ġ&&", "Ġstd", "::", "regex", "_", "match", "(", "L", "\"", "d", "\",", "Ġre", "));", "Ċ", "Ċ", "Ġ", "Ġstop", "_", "counters", "(", "time", ",", "Ġresource", ");", "Ċ", "Ġ", "Ġreport", "_", "performance", "(__", "FILE", "__,", "Ġ\"\",", "Ġtime", ",", "Ġresource", ");", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġok", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::189", "code": "// RUN: %clang_cc1 -fsyntax-only -verify %s\n// RUN: %clang_cc1 -fsyntax-only -Wno-signed-unsigned-wchar -verify=allow-signed -DSKIP_ERROR_TESTS %s\n// allow-signed-no-diagnostics\nwchar_t x;\n\nvoid f(wchar_t p) {\n  wchar_t x;\n  unsigned wchar_t y; // expected-error {{'wchar_t' cannot be signed or unsigned}}\n  signed wchar_t z; // expected-error {{'wchar_t' cannot be signed or unsigned}}\n  ++x;\n}\n\n// PR4502\nwchar_t const c = L'c';\nint a[c == L'c' ? 1 : -1];\n\n\n// PR5917\ntemplate<typename _CharT>\nstruct basic_string {\n};\n\ntemplate<typename _CharT>\nbasic_string<_CharT> operator+ (const basic_string<_CharT>&, _CharT);\n\nint t(void) {\n  basic_string<wchar_t>() + L'-';\n  return (0);\n}\n\n\n// rdar://8040728\nwchar_t in[] = L\"\\x434\" \"\\x434\";  // No warning\n\n#ifndef SKIP_ERROR_TESTS\n// Verify that we do not crash when assigning wchar_t* to another pointer type.\nvoid assignment(wchar_t *x) {\n  char *y;\n  y = x; // expected-error {{incompatible pointer types assigning to 'char *' from 'wchar_t *'}}\n}\n#endif\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "verify", "Ġ%", "s", "Ċ", "//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "W", "no", "-", "signed", "-", "unsigned", "-", "wchar", "Ġ-", "verify", "=", "allow", "-", "signed", "Ġ-", "D", "SKIP", "_", "ERROR", "_", "TESTS", "Ġ%", "s", "Ċ", "//", "Ġallow", "-", "signed", "-", "no", "-", "diagnostics", "Ċ", "wchar", "_", "t", "Ġx", ";", "Ċ", "Ċ", "void", "Ġf", "(", "wchar", "_", "t", "Ġp", ")", "Ġ{", "Ċ", "Ġ", "Ġwchar", "_", "t", "Ġx", ";", "Ċ", "Ġ", "Ġunsigned", "Ġwchar", "_", "t", "Ġy", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{'", "wchar", "_", "t", "'", "Ġcannot", "Ġbe", "Ġsigned", "Ġor", "Ġunsigned", "}}", "Ċ", "Ġ", "Ġsigned", "Ġwchar", "_", "t", "Ġz", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{'", "wchar", "_", "t", "'", "Ġcannot", "Ġbe", "Ġsigned", "Ġor", "Ġunsigned", "}}", "Ċ", "Ġ", "Ġ++", "x", ";", "Ċ", "}", "Ċ", "Ċ", "//", "ĠPR", "45", "02", "Ċ", "wchar", "_", "t", "Ġconst", "Ġc", "Ġ=", "ĠL", "'", "c", "';", "Ċ", "int", "Ġa", "[", "c", "Ġ==", "ĠL", "'", "c", "'", "Ġ?", "Ġ1", "Ġ:", "Ġ-", "1", "];", "Ċ", "Ċ", "Ċ", "//", "ĠPR", "59", "17", "Ċ", "template", "<", "typename", "Ġ_", "Char", "T", ">", "Ċ", "struct", "Ġbasic", "_", "string", "Ġ{", "Ċ", "};", "Ċ", "Ċ", "template", "<", "typename", "Ġ_", "Char", "T", ">", "Ċ", "basic", "_", "string", "<_", "Char", "T", ">", "Ġoperator", "+", "Ġ(", "const", "Ġbasic", "_", "string", "<_", "Char", "T", ">&", ",", "Ġ_", "Char", "T", ");", "Ċ", "Ċ", "int", "Ġt", "(", "void", ")", "Ġ{", "Ċ", "Ġ", "Ġbasic", "_", "string", "<", "wchar", "_", "t", ">()", "Ġ+", "ĠL", "'-", "';", "Ċ", "Ġ", "Ġreturn", "Ġ(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "Ġrd", "ar", "://", "804", "07", "28", "Ċ", "wchar", "_", "t", "Ġin", "[]", "Ġ=", "ĠL", "\"\\", "x", "434", "\"", "Ġ\"\\", "x", "434", "\";", "Ġ", "Ġ//", "ĠNo", "Ġwarning", "Ċ", "Ċ", "#", "ifndef", "ĠSKIP", "_", "ERROR", "_", "TESTS", "Ċ", "//", "ĠVerify", "Ġthat", "Ġwe", "Ġdo", "Ġnot", "Ġcrash", "Ġwhen", "Ġassigning", "Ġwchar", "_", "t", "*", "Ġto", "Ġanother", "Ġpointer", "Ġtype", ".", "Ċ", "void", "Ġassignment", "(", "wchar", "_", "t", "Ġ*", "x", ")", "Ġ{", "Ċ", "Ġ", "Ġchar", "Ġ*", "y", ";", "Ċ", "Ġ", "Ġy", "Ġ=", "Ġx", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "incompatible", "Ġpointer", "Ġtypes", "Ġassigning", "Ġto", "Ġ'", "char", "Ġ*", "'", "Ġfrom", "Ġ'", "wchar", "_", "t", "Ġ*", "'}}", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::190", "code": "// RUN: %clang_cc1 -fsyntax-only -fshow-overloads=best -std=c++11 -verify %s \n\ntemplate <class T>\nstruct X\n{\n   operator T() const {return T();}\n};\n\nvoid test_char16t(X<char16_t> x) {\n   bool b = x == char16_t();\n}\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "f", "show", "-", "over", "loads", "=", "best", "Ġ-", "std", "=", "c", "++", "11", "Ġ-", "verify", "Ġ%", "s", "ĠĊ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "struct", "ĠX", "Ċ", "{", "Ċ", "ĠĠ", "Ġoperator", "ĠT", "()", "Ġconst", "Ġ{", "return", "ĠT", "();}", "Ċ", "};", "Ċ", "Ċ", "void", "Ġtest", "_", "char", "16", "t", "(", "X", "<", "char", "16", "_", "t", ">", "Ġx", ")", "Ġ{", "Ċ", "ĠĠ", "Ġbool", "Ġb", "Ġ=", "Ġx", "Ġ==", "Ġchar", "16", "_", "t", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::191", "code": "#include <iostream>\n#include <seqan/file.h>\n#include <seqan/sequence.h>\n#include <seqan/score.h>\n\nusing namespace seqan;\n\ntemplate <typename TText, typename TPattern>\nint computeLocalScore(TText const & subText, TPattern const & pattern)\n{\n    int localScore = 0;\n    for (unsigned i = 0; i < length(pattern); ++i)\n        if (subText[i] == pattern[i])\n            ++localScore;\n\n    return localScore;\n}\n\ntemplate <typename TText, typename TPattern>\nString<int> computeScore(TText const & text, TPattern const & pattern)\n{\n    String<int> score;\n    resize(score, length(text) - length(pattern) + 1, 0);\n\n    for (unsigned i = 0; i < length(text) - length(pattern) + 1; ++i)\n        score[i] = computeLocalScore(infix(text, i, i + length(pattern)), pattern);\n\n    return score;\n}\n\nvoid print(String<int> const & text)\n{\n    for (unsigned i = 0; i < length(text); ++i)\n        std::cout << text[i] << \" \";\n    std::cout << std::endl;\n}\n\nint main()\n{\n    String<char> text = \"This is an awesome tutorial to get to know SeqAn!\";\n    String<char> pattern = \"tutorial\";\n    String<int> score = computeScore(text, pattern);\n    print(score);\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "score", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", "Text", ",", "Ġtypename", "ĠT", "Pattern", ">", "Ċ", "int", "Ġcompute", "Local", "Score", "(", "T", "Text", "Ġconst", "Ġ&", "Ġsub", "Text", ",", "ĠT", "Pattern", "Ġconst", "Ġ&", "Ġpattern", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġlocal", "Score", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "pattern", ");", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "sub", "Text", "[", "i", "]", "Ġ==", "Ġpattern", "[", "i", "])", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "local", "Score", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġlocal", "Score", ";", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", "Text", ",", "Ġtypename", "ĠT", "Pattern", ">", "Ċ", "String", "<", "int", ">", "Ġcompute", "Score", "(", "T", "Text", "Ġconst", "Ġ&", "Ġtext", ",", "ĠT", "Pattern", "Ġconst", "Ġ&", "Ġpattern", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠString", "<", "int", ">", "Ġscore", ";", "Ċ", "ĠĠĠ", "Ġresize", "(", "score", ",", "Ġlength", "(", "text", ")", "Ġ-", "Ġlength", "(", "pattern", ")", "Ġ+", "Ġ1", ",", "Ġ0", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "text", ")", "Ġ-", "Ġlength", "(", "pattern", ")", "Ġ+", "Ġ1", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġscore", "[", "i", "]", "Ġ=", "Ġcompute", "Local", "Score", "(", "infix", "(", "text", ",", "Ġi", ",", "Ġi", "Ġ+", "Ġlength", "(", "pattern", ")),", "Ġpattern", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġscore", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġprint", "(", "String", "<", "int", ">", "Ġconst", "Ġ&", "Ġtext", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "text", ");", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġtext", "[", "i", "]", "Ġ<<", "Ġ\"", "Ġ\";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠString", "<", "char", ">", "Ġtext", "Ġ=", "Ġ\"", "This", "Ġis", "Ġan", "Ġaw", "esome", "Ġt", "utorial", "Ġto", "Ġget", "Ġto", "Ġknow", "ĠSeq", "An", "!\";", "Ċ", "ĠĠĠ", "ĠString", "<", "char", ">", "Ġpattern", "Ġ=", "Ġ\"", "tutorial", "\";", "Ċ", "ĠĠĠ", "ĠString", "<", "int", ">", "Ġscore", "Ġ=", "Ġcompute", "Score", "(", "text", ",", "Ġpattern", ");", "Ċ", "ĠĠĠ", "Ġprint", "(", "score", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::192", "code": "#if 0  // Disabled until updated to use current API.\n// Copyright 2019 Google LLC.\n// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n#include \"tools/fiddle/examples.h\"\n// HASH=a75bbdb8bb866b125c4c1dd5e967d470\nREG_FIDDLE(Paint_setTextScaleX, 256, 256, true, 0) {\nvoid draw(SkCanvas* canvas) {\n    SkPaint paint;\n    paint.setTextScaleX(0.f / 0.f);\n    SkDebugf(\"text scale %s-a-number\\n\", SkScalarIsNaN(paint.getTextScaleX()) ? \"not\" : \"is\");\n}\n}  // END FIDDLE\n#endif  // Disabled until updated to use current API.\n", "code_tokens": ["Ġ#", "if", "Ġ0", "Ġ", "Ġ//", "ĠDisabled", "Ġuntil", "Ġupdated", "Ġto", "Ġuse", "Ġcurrent", "ĠAPI", ".", "Ċ", "//", "ĠCopyright", "Ġ201", "9", "ĠGoogle", "ĠLLC", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "#", "include", "Ġ\"", "tools", "/", "f", "iddle", "/", "examples", ".", "h", "\"", "Ċ", "//", "ĠHASH", "=", "a", "75", "bb", "db", "8", "bb", "866", "b", "125", "c", "4", "c", "1", "dd", "5", "e", "96", "7", "d", "470", "Ċ", "REG", "_", "FID", "DLE", "(", "Paint", "_", "setText", "ScaleX", ",", "Ġ256", ",", "Ġ256", ",", "Ġtrue", ",", "Ġ0", ")", "Ġ{", "Ċ", "void", "Ġdraw", "(", "Sk", "Canvas", "*", "Ġcanvas", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠSk", "Paint", "Ġpaint", ";", "Ċ", "ĠĠĠ", "Ġpaint", ".", "setText", "ScaleX", "(", "0", ".", "f", "Ġ/", "Ġ0", ".", "f", ");", "Ċ", "ĠĠĠ", "ĠSk", "Debugf", "(\"", "text", "Ġscale", "Ġ%", "s", "-", "a", "-", "number", "\\", "n", "\",", "ĠSkScalar", "IsNaN", "(", "paint", ".", "getText", "ScaleX", "())", "Ġ?", "Ġ\"", "not", "\"", "Ġ:", "Ġ\"", "is", "\");", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "ĠEND", "ĠF", "ID", "DLE", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠDisabled", "Ġuntil", "Ġupdated", "Ġto", "Ġuse", "Ġcurrent", "ĠAPI", ".", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::193", "code": "// This file is part of OpenCV project.\n// It is subject to the license terms in the LICENSE file found in the top-level directory\n// of this distribution and at http://opencv.org/license.html.\n\n#ifndef OPENCV_CORE_ALLOCATOR_STATS_HPP\n#define OPENCV_CORE_ALLOCATOR_STATS_HPP\n\n#include \"../cvdef.h\"\n\nnamespace cv { namespace utils {\n\nclass AllocatorStatisticsInterface\n{\nprotected:\n    AllocatorStatisticsInterface() {}\n    virtual ~AllocatorStatisticsInterface() {}\npublic:\n    virtual uint64_t getCurrentUsage() const = 0;\n    virtual uint64_t getTotalUsage() const = 0;\n    virtual uint64_t getNumberOfAllocations() const = 0;\n    virtual uint64_t getPeakUsage() const = 0;\n\n    /** set peak usage = current usage */\n    virtual void resetPeakUsage() = 0;\n};\n\n}} // namespace\n\n#endif // OPENCV_CORE_ALLOCATOR_STATS_HPP\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠOpen", "CV", "Ġproject", ".", "Ċ", "//", "ĠIt", "Ġis", "Ġsubject", "Ġto", "Ġthe", "Ġlicense", "Ġterms", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", "Ġfound", "Ġin", "Ġthe", "Ġtop", "-", "level", "Ġdirectory", "Ċ", "//", "Ġof", "Ġthis", "Ġdistribution", "Ġand", "Ġat", "Ġhttp", "://", "open", "cv", ".", "org", "/", "license", ".", "html", ".", "Ċ", "Ċ", "#", "ifndef", "ĠOP", "ENC", "V", "_", "CORE", "_", "ALLOC", "ATOR", "_", "STATS", "_", "HP", "P", "Ċ", "#", "define", "ĠOP", "ENC", "V", "_", "CORE", "_", "ALLOC", "ATOR", "_", "STATS", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"../", "cv", "def", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġcv", "Ġ{", "Ġnamespace", "Ġutils", "Ġ{", "Ċ", "Ċ", "class", "ĠAlloc", "ator", "Statistics", "Interface", "Ċ", "{", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "ĠAlloc", "ator", "Statistics", "Interface", "()", "Ġ{}", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "Allocator", "Statistics", "Interface", "()", "Ġ{}", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġuint", "64", "_", "t", "ĠgetCurrent", "Usage", "()", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġuint", "64", "_", "t", "ĠgetTotal", "Usage", "()", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġuint", "64", "_", "t", "Ġget", "NumberOf", "Alloc", "ations", "()", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġuint", "64", "_", "t", "Ġget", "Peak", "Usage", "()", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ġset", "Ġpeak", "Ġusage", "Ġ=", "Ġcurrent", "Ġusage", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġreset", "Peak", "Usage", "()", "Ġ=", "Ġ0", ";", "Ċ", "};", "Ċ", "Ċ", "}}", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠOP", "ENC", "V", "_", "CORE", "_", "ALLOC", "ATOR", "_", "STATS", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::194", "code": "/*\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n#include \"MissFailoverRoute.h\"\n\n#include <folly/dynamic.h>\n\n#include \"mcrouter/lib/config/RouteHandleFactory.h\"\n#include \"mcrouter/routes/McRouteHandleBuilder.h\"\n#include \"mcrouter/routes/McrouterRouteHandle.h\"\n\nnamespace facebook { namespace memcache { namespace mcrouter {\n\nMcrouterRouteHandlePtr makeNullRoute();\n\nMcrouterRouteHandlePtr makeMissFailoverRoute(\n  std::vector<McrouterRouteHandlePtr> targets) {\n\n  if (targets.empty()) {\n    return makeNullRoute();\n  }\n\n  if (targets.size() == 1) {\n    return std::move(targets[0]);\n  }\n\n  return makeMcrouterRouteHandle<MissFailoverRoute>(std::move(targets));\n}\n\nMcrouterRouteHandlePtr makeMissFailoverRoute(\n    RouteHandleFactory<McrouterRouteHandleIf>& factory,\n    const folly::dynamic& json) {\n  std::vector<McrouterRouteHandlePtr> children;\n  if (json.isObject()) {\n    if (auto jchildren = json.get_ptr(\"children\")) {\n      children = factory.createList(*jchildren);\n    }\n  } else {\n    children = factory.createList(json);\n  }\n  return makeMissFailoverRoute(std::move(children));\n}\n\n}}}  // facebook::memcache::mcrouter\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", ",", "ĠFacebook", ",", "ĠInc", ".", "Ċ", "Ġ*", "Ġ", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġsource", "Ġcode", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "ĠBSD", "-", "style", "Ġlicense", "Ġfound", "Ġin", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠLICENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġdirectory", "Ġof", "Ġthis", "Ġsource", "Ġtree", ".", "ĠAn", "Ġadditional", "Ġgrant", "Ċ", "Ġ*", "Ġ", "Ġof", "Ġpat", "ent", "Ġrights", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠPAT", "ENTS", "Ġfile", "Ġin", "Ġthe", "Ġsame", "Ġdirectory", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "Miss", "Failover", "Route", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "fol", "ly", "/", "dynamic", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "mc", "router", "/", "lib", "/", "config", "/", "Route", "Handle", "Factory", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mc", "router", "/", "routes", "/", "Mc", "Route", "Handle", "Builder", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mc", "router", "/", "routes", "/", "Mc", "router", "Route", "Handle", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġface", "book", "Ġ{", "Ġnamespace", "Ġmem", "cache", "Ġ{", "Ġnamespace", "Ġmc", "router", "Ġ{", "Ċ", "Ċ", "Mc", "router", "Route", "Handle", "Ptr", "Ġmake", "Null", "Route", "();", "Ċ", "Ċ", "Mc", "router", "Route", "Handle", "Ptr", "Ġmake", "Miss", "Failover", "Route", "(", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "Mc", "router", "Route", "Handle", "Ptr", ">", "Ġtargets", ")", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "targets", ".", "empty", "())", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġmake", "Null", "Route", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "targets", ".", "size", "()", "Ġ==", "Ġ1", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstd", "::", "move", "(", "targets", "[", "0", "]);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġmake", "Mc", "router", "Route", "Handle", "<", "Miss", "Failover", "Route", ">(", "std", "::", "move", "(", "targets", "));", "Ċ", "}", "Ċ", "Ċ", "Mc", "router", "Route", "Handle", "Ptr", "Ġmake", "Miss", "Failover", "Route", "(", "Ċ", "ĠĠĠ", "ĠRoute", "Handle", "Factory", "<", "Mc", "router", "Route", "Handle", "If", ">&", "Ġfactory", ",", "Ċ", "ĠĠĠ", "Ġconst", "Ġf", "olly", "::", "dynamic", "&", "Ġjson", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "Mc", "router", "Route", "Handle", "Ptr", ">", "Ġchildren", ";", "Ċ", "Ġ", "Ġif", "Ġ(", "json", ".", "isObject", "())", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "auto", "Ġj", "children", "Ġ=", "Ġjson", ".", "get", "_", "ptr", "(\"", "children", "\"))", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġchildren", "Ġ=", "Ġfactory", ".", "create", "List", "(*", "j", "children", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "Ġchildren", "Ġ=", "Ġfactory", ".", "create", "List", "(", "json", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġmake", "Miss", "Failover", "Route", "(", "std", "::", "move", "(", "children", "));", "Ċ", "}", "Ċ", "Ċ", "}}}", "Ġ", "Ġ//", "Ġface", "book", "::", "memcache", "::", "mc", "router", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::195", "code": "#include <Wt/WApplication>\n#include <Wt/WStandardItemModel>\n#include <Wt/WTableView>\n#include \"../treeview-dragdrop/CsvUtil.h\"\n\nSAMPLE_BEGIN(SmallTableView)\nWt::WTableView *tableView = new Wt::WTableView();\ntableView->setModel(csvToModel(Wt::WApplication::appRoot() + \"table.csv\",\n\t\t\t       tableView));\n\ntableView->setColumnResizeEnabled(false);\ntableView->setColumnAlignment(0, Wt::AlignCenter);\ntableView->setHeaderAlignment(0, Wt::AlignCenter);\ntableView->setAlternatingRowColors(true);\ntableView->setRowHeight(28);\ntableView->setHeaderHeight(28);\ntableView->setSelectionMode(Wt::SingleSelection);\ntableView->setEditTriggers(Wt::WAbstractItemView::NoEditTrigger);\n\n/*\n * Configure column widths and matching table width\n */\nconst int WIDTH = 120;\nfor (int i = 0; i < tableView->model()->columnCount(); ++i)\n    tableView->setColumnWidth(i, 120);\n\n/*\n * 7 pixels are padding/border per column\n * 2 pixels are border of the entire table\n */\ntableView->setWidth((WIDTH + 7) * tableView->model()->columnCount() + 2);\n\nSAMPLE_END(return tableView)\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Wt", "/", "W", "Application", ">", "Ċ", "#", "include", "Ġ<", "Wt", "/", "W", "StandardItem", "Model", ">", "Ċ", "#", "include", "Ġ<", "Wt", "/", "W", "TableView", ">", "Ċ", "#", "include", "Ġ\"../", "tree", "view", "-", "drag", "drop", "/", "Csv", "Util", ".", "h", "\"", "Ċ", "Ċ", "SAMPLE", "_", "BEGIN", "(", "Small", "TableView", ")", "Ċ", "Wt", "::", "W", "TableView", "Ġ*", "table", "View", "Ġ=", "Ġnew", "ĠW", "t", "::", "W", "TableView", "();", "Ċ", "table", "View", "->", "setModel", "(", "csv", "To", "Model", "(", "Wt", "::", "W", "Application", "::", "app", "Root", "()", "Ġ+", "Ġ\"", "table", ".", "csv", "\",", "Ċ", "ĉĉĉĠĠĠĠĠĠ", "Ġtable", "View", "));", "Ċ", "Ċ", "table", "View", "->", "setColumn", "Resize", "Enabled", "(", "false", ");", "Ċ", "table", "View", "->", "setColumn", "Alignment", "(", "0", ",", "ĠW", "t", "::", "Align", "Center", ");", "Ċ", "table", "View", "->", "setHeader", "Alignment", "(", "0", ",", "ĠW", "t", "::", "Align", "Center", ");", "Ċ", "table", "View", "->", "set", "Al", "tern", "ating", "Row", "Colors", "(", "true", ");", "Ċ", "table", "View", "->", "set", "RowHeight", "(", "28", ");", "Ċ", "table", "View", "->", "setHeader", "Height", "(", "28", ");", "Ċ", "table", "View", "->", "setSelection", "Mode", "(", "Wt", "::", "Single", "Selection", ");", "Ċ", "table", "View", "->", "set", "Edit", "Triggers", "(", "Wt", "::", "W", "Abstract", "ItemView", "::", "No", "Edit", "Trigger", ");", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠConfigure", "Ġcolumn", "Ġwidths", "Ġand", "Ġmatching", "Ġtable", "Ġwidth", "Ċ", "Ġ*/", "Ċ", "const", "Ġint", "ĠWIDTH", "Ġ=", "Ġ120", ";", "Ċ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġtable", "View", "->", "model", "()->", "column", "Count", "();", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġtable", "View", "->", "set", "ColumnWidth", "(", "i", ",", "Ġ120", ");", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ġ7", "Ġpixels", "Ġare", "Ġpadding", "/", "border", "Ġper", "Ġcolumn", "Ċ", "Ġ*", "Ġ2", "Ġpixels", "Ġare", "Ġborder", "Ġof", "Ġthe", "Ġentire", "Ġtable", "Ċ", "Ġ*/", "Ċ", "table", "View", "->", "setWidth", "((", "WIDTH", "Ġ+", "Ġ7", ")", "Ġ*", "Ġtable", "View", "->", "model", "()->", "column", "Count", "()", "Ġ+", "Ġ2", ");", "Ċ", "Ċ", "SAMPLE", "_", "END", "(", "return", "Ġtable", "View", ")", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::196", "code": "//===--- BasicInstructionPropertyDumper.cpp -------------------------------===//\n//\n// This source file is part of the Swift.org open source project\n//\n// Copyright (c) 2014 - 2016 Apple Inc. and the Swift project authors\n// Licensed under Apache License v2.0 with Runtime Library Exception\n//\n// See http://swift.org/LICENSE.txt for license information\n// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors\n//\n//===----------------------------------------------------------------------===//\n\n#include \"swift/SIL/SILFunction.h\"\n#include \"swift/SIL/SILInstruction.h\"\n#include \"swift/SIL/SILModule.h\"\n#include \"swift/SILOptimizer/PassManager/Transforms.h\"\n#include \"llvm/ADT/StringRef.h\"\n#include \"llvm/Support/raw_ostream.h\"\n\nusing namespace swift;\n\nnamespace {\n\nclass BasicInstructionPropertyDumper : public SILModuleTransform {\n  void run() override {\n    for (auto &Fn : *getModule()) {\n      unsigned Count = 0;\n      llvm::outs() << \"@\" << Fn.getName() << \"\\n\";\n      for (auto &BB : Fn) {\n        for (auto &I : BB) {\n          llvm::outs() << \"Inst #: \" << Count++ << \"\\n    \" << I;\n          llvm::outs() << \"    Mem Behavior: \" << I.getMemoryBehavior() << \"\\n\";\n          llvm::outs() << \"    Release Behavior: \" << I.getReleasingBehavior()\n                       << \"\\n\";\n        }\n      }\n    }\n  }\n\n  llvm::StringRef getName() override {\n    return \"BasicInstructionPropertyDumper\";\n  }\n};\n\n} // end anonymous namespace\n\nSILTransform *swift::createBasicInstructionPropertyDumper() {\n  return new BasicInstructionPropertyDumper();\n}\n", "code_tokens": ["Ġ//", "===", "---", "ĠBasic", "Instruction", "Property", "Dumper", ".", "cpp", "Ġ------------------------", "-------", "===//", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġsource", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠSwift", ".", "org", "Ġopen", "Ġsource", "Ġproject", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", "Ġ-", "Ġ2016", "ĠApple", "ĠInc", ".", "Ġand", "Ġthe", "ĠSwift", "Ġproject", "Ġauthors", "Ċ", "//", "ĠLic", "ensed", "Ġunder", "ĠApache", "ĠLicense", "Ġv", "2", ".", "0", "Ġwith", "ĠRuntime", "ĠLibrary", "ĠException", "Ċ", "//", "Ċ", "//", "ĠSee", "Ġhttp", "://", "swift", ".", "org", "/", "LICENSE", ".", "txt", "Ġfor", "Ġlicense", "Ġinformation", "Ċ", "//", "ĠSee", "Ġhttp", "://", "swift", ".", "org", "/", "CONTR", "IB", "UT", "ORS", ".", "txt", "Ġfor", "Ġthe", "Ġlist", "Ġof", "ĠSwift", "Ġproject", "Ġauthors", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "#", "include", "Ġ\"", "swift", "/", "SIL", "/", "SIL", "Function", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "swift", "/", "SIL", "/", "SIL", "Instruction", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "swift", "/", "SIL", "/", "SIL", "Module", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "swift", "/", "SI", "LO", "pt", "im", "izer", "/", "PassManager", "/", "Transforms", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "llvm", "/", "ADT", "/", "StringRef", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "llvm", "/", "Support", "/", "raw", "_", "ostream", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġsw", "ift", ";", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "class", "ĠBasic", "Instruction", "Property", "Dumper", "Ġ:", "Ġpublic", "ĠSIL", "Module", "Transform", "Ġ{", "Ċ", "Ġ", "Ġvoid", "Ġrun", "()", "Ġoverride", "Ġ{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġ&", "Fn", "Ġ:", "Ġ*", "getModule", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġunsigned", "ĠCount", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠ", "Ġllvm", "::", "outs", "()", "Ġ<<", "Ġ\"@\"", "Ġ<<", "ĠFn", ".", "getName", "()", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĠĠĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġ&", "BB", "Ġ:", "ĠFn", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġ&", "I", "Ġ:", "ĠBB", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġllvm", "::", "outs", "()", "Ġ<<", "Ġ\"", "Inst", "Ġ#:", "Ġ\"", "Ġ<<", "ĠCount", "++", "Ġ<<", "Ġ\"\\", "n", "ĠĠĠ", "Ġ\"", "Ġ<<", "ĠI", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġllvm", "::", "outs", "()", "Ġ<<", "Ġ\"", "ĠĠĠ", "ĠMem", "ĠBehavior", ":", "Ġ\"", "Ġ<<", "ĠI", ".", "getMemory", "Behavior", "()", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġllvm", "::", "outs", "()", "Ġ<<", "Ġ\"", "ĠĠĠ", "ĠRelease", "ĠBehavior", ":", "Ġ\"", "Ġ<<", "ĠI", ".", "getRe", "le", "asing", "Behavior", "()", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġllvm", "::", "StringRef", "ĠgetName", "()", "Ġoverride", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ\"", "Basic", "Instruction", "Property", "Dumper", "\";", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġend", "Ġanonymous", "Ġnamespace", "Ċ", "Ċ", "SIL", "Transform", "Ġ*", "swift", "::", "create", "Basic", "Instruction", "Property", "Dumper", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġnew", "ĠBasic", "Instruction", "Property", "Dumper", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::197", "code": "namespace std {\n  template<typename T>\n  class allocator { \n  public:\n    void in_base();\n  };\n  \n  template<typename T, typename Alloc = std::allocator<T> >\n  class vector : Alloc {\n  public:\n    void foo();\n    void stop();\n  };\n  template<typename Alloc> class vector<bool, Alloc>;\n}\n\nvoid f() {\n  std::vector<int> v;\n  v.foo();\n  // RUN: %clang_cc1 -fsyntax-only -code-completion-at=%s:18:8 %s -o - | FileCheck -check-prefix=CHECK-CC1 %s\n  // CHECK-CC1: allocator<<#typename T#>>\n  // CHECK-CC1-NEXT: vector<<#typename T#>{#, <#typename Alloc#>#}>\n  // RUN: %clang_cc1 -fsyntax-only -code-completion-at=%s:19:5 %s -o - | FileCheck -check-prefix=CHECK-CC2 %s\n  // CHECK-CC2: foo\n  // CHECK-CC2: in_base\n  // CHECK-CC2: stop\n}\n\n\ntemplate <typename> struct X;\ntemplate <typename T> struct X<T*> { X(double); };\nX<int*> x(42);\n// RUN: %clang_cc1 -fsyntax-only -code-completion-at=%s:32:11 %s -o - | FileCheck -check-prefix=CHECK-CONSTRUCTOR %s\n// CHECK-CONSTRUCTOR: OVERLOAD: X(<#double#>)\n// (rather than X<type-parameter-0-0 *>(<#double#>)\n", "code_tokens": ["Ġnamespace", "Ġstd", "Ġ{", "Ċ", "Ġ", "Ġtemplate", "<", "typename", "ĠT", ">", "Ċ", "Ġ", "Ġclass", "Ġallocator", "Ġ{", "ĠĊ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġin", "_", "base", "();", "Ċ", "Ġ", "Ġ};", "Ċ", "ĠĠĊ", "Ġ", "Ġtemplate", "<", "typename", "ĠT", ",", "Ġtypename", "ĠAlloc", "Ġ=", "Ġstd", "::", "allocator", "<", "T", ">", "Ġ>", "Ċ", "Ġ", "Ġclass", "Ġvector", "Ġ:", "ĠAlloc", "Ġ{", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġfoo", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġstop", "();", "Ċ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġtemplate", "<", "typename", "ĠAlloc", ">", "Ġclass", "Ġvector", "<", "bool", ",", "ĠAlloc", ">;", "Ċ", "}", "Ċ", "Ċ", "void", "Ġf", "()", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġv", ";", "Ċ", "Ġ", "Ġv", ".", "foo", "();", "Ċ", "Ġ", "Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "code", "-", "completion", "-", "at", "=%", "s", ":", "18", ":", "8", "Ġ%", "s", "Ġ-", "o", "Ġ-", "Ġ|", "ĠFile", "Check", "Ġ-", "check", "-", "prefix", "=", "CHECK", "-", "CC", "1", "Ġ%", "s", "Ċ", "Ġ", "Ġ//", "ĠCHECK", "-", "CC", "1", ":", "Ġallocator", "<<", "#", "typename", "ĠT", "#", ">>", "Ċ", "Ġ", "Ġ//", "ĠCHECK", "-", "CC", "1", "-", "NEXT", ":", "Ġvector", "<<", "#", "typename", "ĠT", "#", ">{", "#", ",", "Ġ<", "#", "typename", "ĠAlloc", "#", ">", "#", "}>", "Ċ", "Ġ", "Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "code", "-", "completion", "-", "at", "=%", "s", ":", "19", ":", "5", "Ġ%", "s", "Ġ-", "o", "Ġ-", "Ġ|", "ĠFile", "Check", "Ġ-", "check", "-", "prefix", "=", "CHECK", "-", "CC", "2", "Ġ%", "s", "Ċ", "Ġ", "Ġ//", "ĠCHECK", "-", "CC", "2", ":", "Ġfoo", "Ċ", "Ġ", "Ġ//", "ĠCHECK", "-", "CC", "2", ":", "Ġin", "_", "base", "Ċ", "Ġ", "Ġ//", "ĠCHECK", "-", "CC", "2", ":", "Ġstop", "Ċ", "}", "Ċ", "Ċ", "Ċ", "template", "Ġ<", "typename", ">", "Ġstruct", "ĠX", ";", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ġstruct", "ĠX", "<", "T", "*>", "Ġ{", "ĠX", "(", "double", ");", "Ġ};", "Ċ", "X", "<", "int", "*>", "Ġx", "(", "42", ");", "Ċ", "//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "code", "-", "completion", "-", "at", "=%", "s", ":", "32", ":", "11", "Ġ%", "s", "Ġ-", "o", "Ġ-", "Ġ|", "ĠFile", "Check", "Ġ-", "check", "-", "prefix", "=", "CHECK", "-", "CONSTRUCTOR", "Ġ%", "s", "Ċ", "//", "ĠCHECK", "-", "CONSTRUCTOR", ":", "ĠOVER", "LOAD", ":", "ĠX", "(<", "#", "double", "#", ">)", "Ċ", "//", "Ġ(", "r", "ather", "Ġthan", "ĠX", "<", "type", "-", "parameter", "-", "0", "-", "0", "Ġ*>(", "<#", "double", "#", ">)", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::198", "code": "//\n// header.hpp\n// ~~~~~~~~~~\n//\n// Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)\n//\n// Distributed under the Boost Software License, Version 1.0. (See accompanying\n// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n//\n\n#ifndef HTTP_SERVER3_HEADER_HPP\n#define HTTP_SERVER3_HEADER_HPP\n\n#include <string>\n\nnamespace http {\nnamespace server3 {\n\nstruct header\n{\n  std::string name;\n  std::string value;\n};\n\n} // namespace server3\n} // namespace http\n\n#endif // HTTP_SERVER3_HEADER_HPP\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġheader", ".", "hpp", "Ċ", "//", "Ġ~", "~~~~~~~~", "~", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", "-", "2018", "ĠCh", "ri", "stop", "her", "ĠM", ".", "ĠKo", "hl", "h", "off", "Ġ(", "chris", "Ġat", "Ġko", "hl", "h", "off", "Ġdot", "Ġcom", ")", "Ċ", "//", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠHTTP", "_", "SERVER", "3", "_", "HEADER", "_", "HP", "P", "Ċ", "#", "define", "ĠHTTP", "_", "SERVER", "3", "_", "HEADER", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "namespace", "Ġhttp", "Ġ{", "Ċ", "namespace", "Ġserver", "3", "Ġ{", "Ċ", "Ċ", "struct", "Ġheader", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġname", ";", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġvalue", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġserver", "3", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġhttp", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠHTTP", "_", "SERVER", "3", "_", "HEADER", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::199", "code": "// ---------------------------------------------------------------------\n//\n// Copyright (C) 2008 - 2014 by the deal.II authors\n//\n// This file is part of the deal.II library.\n//\n// The deal.II library is free software; you can use it, redistribute\n// it, and/or modify it under the terms of the GNU Lesser General\n// Public License as published by the Free Software Foundation; either\n// version 2.1 of the License, or (at your option) any later version.\n// The full text of the license can be found in the file LICENSE at\n// the top level of the deal.II distribution.\n//\n// ---------------------------------------------------------------------\n\n\n\n// check CompressedSparsityPattern::copy constructor with offdiagonals\n\n#include \"sparsity_pattern_common.h\"\n\nint main ()\n{\n  std::ofstream logfile(\"output\");\n  logfile.setf(std::ios::fixed);\n  deallog << std::setprecision(3);\n  deallog.attach(logfile);\n  deallog.depth_console(0);\n  deallog.threshold_double(1.e-10);\n\n  copy_with_offdiagonals_2<CompressedSparsityPattern> ();\n}\n\n\n\n", "code_tokens": ["Ġ//", "Ġ----------------------------------------------------------------", "-----", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "Ġ-", "Ġ2014", "Ġby", "Ġthe", "Ġdeal", ".", "II", "Ġauthors", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġlibrary", ".", "Ċ", "//", "Ċ", "//", "ĠThe", "Ġdeal", ".", "II", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġuse", "Ġit", ",", "Ġred", "istribute", "Ċ", "//", "Ġit", ",", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "Ċ", "//", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "//", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "ĠThe", "Ġfull", "Ġtext", "Ġof", "Ġthe", "Ġlicense", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "ĠLICENSE", "Ġat", "Ċ", "//", "Ġthe", "Ġtop", "Ġlevel", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ----------------------------------------------------------------", "-----", "Ċ", "Ċ", "Ċ", "Ċ", "//", "Ġcheck", "ĠCompressed", "S", "pars", "ity", "Pattern", "::", "copy", "Ġconstructor", "Ġwith", "Ġoff", "diag", "on", "als", "Ċ", "Ċ", "#", "include", "Ġ\"", "s", "pars", "ity", "_", "pattern", "_", "common", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "ofstream", "Ġlogfile", "(\"", "output", "\");", "Ċ", "Ġ", "Ġlogfile", ".", "set", "f", "(", "std", "::", "ios", "::", "fixed", ");", "Ċ", "Ġ", "Ġdeal", "log", "Ġ<<", "Ġstd", "::", "set", "precision", "(", "3", ");", "Ċ", "Ġ", "Ġdeal", "log", ".", "attach", "(", "logfile", ");", "Ċ", "Ġ", "Ġdeal", "log", ".", "depth", "_", "console", "(", "0", ");", "Ċ", "Ġ", "Ġdeal", "log", ".", "threshold", "_", "double", "(", "1", ".", "e", "-", "10", ");", "Ċ", "Ċ", "Ġ", "Ġcopy", "_", "with", "_", "off", "diag", "on", "als", "_", "2", "<", "Compressed", "S", "pars", "ity", "Pattern", ">", "Ġ();", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::200", "code": "/*\n * SessionPlots.hpp\n *\n * Copyright (C) 2009-12 by RStudio, Inc.\n *\n * Unless you have received this program directly from RStudio pursuant\n * to the terms of a commercial license agreement with RStudio, then\n * this program is licensed to you under the terms of version 3 of the\n * GNU Affero General Public License. This program is distributed WITHOUT\n * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n *\n */\n\n#ifndef SESSION_PLOTS_HPP\n#define SESSION_PLOTS_HPP\n\nnamespace rstudio {\nnamespace core {\n   class Error;\n}\n}\n\nnamespace rstudio {\nnamespace session {\nnamespace modules {\nnamespace plots {\n      \nbool haveCairoPdf();\n\ncore::Error initialize();\n   \n} // namespace plots\n} // namespace modules   \n} // namespace session\n} // namespace rstudio\n\n#endif // SESSION_PLOTS_HPP\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠSession", "Plots", ".", "hpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2009", "-", "12", "Ġby", "ĠR", "Studio", ",", "ĠInc", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġyou", "Ġhave", "Ġreceived", "Ġthis", "Ġprogram", "Ġdirectly", "Ġfrom", "ĠR", "Studio", "Ġpur", "su", "ant", "Ċ", "Ġ*", "Ġto", "Ġthe", "Ġterms", "Ġof", "Ġa", "Ġcom", "mer", "c", "ial", "Ġlicense", "Ġag", "reement", "Ġwith", "ĠR", "Studio", ",", "Ġthen", "Ċ", "Ġ*", "Ġthis", "Ġprogram", "Ġis", "Ġlicensed", "Ġto", "Ġyou", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġversion", "Ġ3", "Ġof", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠA", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", ".", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "ĠWITHOUT", "Ċ", "Ġ*", "ĠANY", "ĠEX", "PRESS", "ĠOR", "ĠIMP", "LIED", "ĠWARR", "AN", "TY", ",", "ĠIN", "CL", "UDING", "ĠTH", "O", "SE", "ĠOF", "ĠNON", "-", "IN", "FR", "IN", "GE", "MENT", ",", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "ĠOR", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠPlease", "Ġrefer", "Ġto", "Ġthe", "Ċ", "Ġ*", "ĠAG", "PL", "Ġ(", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/", "ag", "pl", "-", "3", ".", "0", ".", "txt", ")", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠSE", "SSION", "_", "PL", "OT", "S", "_", "HP", "P", "Ċ", "#", "define", "ĠSE", "SSION", "_", "PL", "OT", "S", "_", "HP", "P", "Ċ", "Ċ", "namespace", "Ġrst", "udio", "Ġ{", "Ċ", "namespace", "Ġcore", "Ġ{", "Ċ", "ĠĠ", "Ġclass", "ĠError", ";", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġrst", "udio", "Ġ{", "Ċ", "namespace", "Ġsession", "Ġ{", "Ċ", "namespace", "Ġmodules", "Ġ{", "Ċ", "namespace", "Ġplot", "s", "Ġ{", "Ċ", "ĠĠĠĠĠĠ", "Ċ", "bool", "Ġhave", "Cairo", "Pdf", "();", "Ċ", "Ċ", "core", "::", "Error", "Ġinitialize", "();", "Ċ", "ĠĠĠ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġplot", "s", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġmodules", "ĠĠĠ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġsession", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġrst", "udio", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠSE", "SSION", "_", "PL", "OT", "S", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::201", "code": "//\n//  Copyright 2013 Uncodin, Inc.\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//  http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\n//\n\n#include \"document.h\"\n\nnamespace Bypass {\n\n\tDocument::Document()\n\t: elements()\n\t{\n\n\t}\n\n\tDocument::~Document() {\n\n\t}\n\n\tvoid Document::append(const Element& element) {\n\t\telements.push_back(Element(element));\n\t}\n\n\tsize_t Document::size() {\n\t\treturn elements.size();\n\t}\n\n\tElement Document::operator[](size_t i) {\n\t\treturn elements[i];\n\t}\n\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ2013", "ĠUn", "cod", "in", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "Ġ", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "//", "Ġ", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "//", "Ġ", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "//", "Ċ", "//", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "//", "Ċ", "//", "Ġ", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "//", "Ġ", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "//", "Ġ", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "//", "Ġ", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "//", "Ġ", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "document", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠBy", "pass", "Ġ{", "Ċ", "Ċ", "ĉ", "Document", "::", "Document", "()", "Ċ", "ĉ", ":", "Ġelements", "()", "Ċ", "ĉ", "{", "Ċ", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "Document", "::~", "Document", "()", "Ġ{", "Ċ", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠDocument", "::", "append", "(", "const", "ĠElement", "&", "Ġelement", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "elements", ".", "push", "_", "back", "(", "Element", "(", "element", "));", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "size", "_", "t", "ĠDocument", "::", "size", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġelements", ".", "size", "();", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "Element", "ĠDocument", "::", "operator", "[]", "(", "size", "_", "t", "Ġi", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġelements", "[", "i", "];", "Ċ", "ĉ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::202", "code": "// { dg-do compile }\n// { dg-options \"-O -w -Wno-psabi\" }\n\ntypedef int vec __attribute__((vector_size(32)));\nvec fn1()\n{\n  vec x, zero{};\n  vec one = zero + 1;\n  return x < zero ? one : zero;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "O", "Ġ-", "w", "Ġ-", "W", "no", "-", "ps", "abi", "\"", "Ġ}", "Ċ", "Ċ", "typedef", "Ġint", "Ġvec", "Ġ__", "attribute", "__((", "vector", "_", "size", "(", "32", ")));", "Ċ", "vec", "Ġfn", "1", "()", "Ċ", "{", "Ċ", "Ġ", "Ġvec", "Ġx", ",", "Ġzero", "{};", "Ċ", "Ġ", "Ġvec", "Ġone", "Ġ=", "Ġzero", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġreturn", "Ġx", "Ġ<", "Ġzero", "Ġ?", "Ġone", "Ġ:", "Ġzero", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::203", "code": "/*\nCopyright_License {\n\n  XCSoar Glide Computer - http://www.xcsoar.org/\n  Copyright (C) 2000-2016 The XCSoar Project\n  A detailed list of copyright holders can be found in the file \"AUTHORS\".\n\n  This program is free software; you can redistribute it and/or\n  modify it under the terms of the GNU General Public License\n  as published by the Free Software Foundation; either version 2\n  of the License, or (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, write to the Free Software\n  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n}\n*/\n\n#ifndef XCSOAR_FIXED_WINDOW_WIDGET_HPP\n#define XCSOAR_FIXED_WINDOW_WIDGET_HPP\n\n#include \"WindowWidget.hpp\"\n#include \"Screen/Window.hpp\"\n\nclass FixedWindowWidget : public WindowWidget {\npublic:\n  FixedWindowWidget() = default;\n  FixedWindowWidget(Window *window):WindowWidget(window) {}\n\n  PixelSize GetMinimumSize() const override {\n    return GetWindow().GetSize();\n  }\n};\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "_", "License", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠX", "CS", "o", "ar", "ĠG", "lide", "ĠComput", "er", "Ġ-", "Ġhttp", "://", "www", ".", "x", "cs", "o", "ar", ".", "org", "/", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "-", "2016", "ĠThe", "ĠX", "CS", "o", "ar", "ĠProject", "Ċ", "Ġ", "ĠA", "Ġdetailed", "Ġlist", "Ġof", "Ġcopyright", "Ġhold", "ers", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "Ġ\"", "AUTH", "ORS", "\".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ċ", "}", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠX", "CS", "O", "AR", "_", "FIXED", "_", "WINDOW", "_", "WIDGET", "_", "HP", "P", "Ċ", "#", "define", "ĠX", "CS", "O", "AR", "_", "FIXED", "_", "WINDOW", "_", "WIDGET", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "Window", "Widget", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Screen", "/", "Window", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠFixed", "Window", "Widget", "Ġ:", "Ġpublic", "ĠWindow", "Widget", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠFixed", "Window", "Widget", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ġ", "ĠFixed", "Window", "Widget", "(", "Window", "Ġ*", "window", "):", "Window", "Widget", "(", "window", ")", "Ġ{}", "Ċ", "Ċ", "Ġ", "ĠPixel", "Size", "ĠGet", "Minimum", "Size", "()", "Ġconst", "Ġoverride", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "ĠGetWindow", "().", "GetSize", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::204", "code": "\nclass CfgUnitInsignia {\n    class ACE_insignia_logo {\n        displayName = \"ACE3\";\n        author = CSTRING(ACETeam);\n        texture = PATHTOF(data\\Insignia_ace3logo_ca.paa);\n        textureVehicle = \"\";\n    };\n    class ACE_insignia_banana {\n        displayName = \"ABE3\";\n        author = CSTRING(ACETeam);\n        texture = PATHTOF(data\\insignia_banana_ca.paa);\n        textureVehicle = \"\";\n    };\n};\n", "code_tokens": ["Ċ", "class", "ĠC", "fg", "Unit", "In", "sign", "ia", "Ġ{", "Ċ", "ĠĠĠ", "Ġclass", "ĠACE", "_", "in", "sign", "ia", "_", "logo", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠdisplayName", "Ġ=", "Ġ\"", "ACE", "3", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġauthor", "Ġ=", "ĠC", "STRING", "(", "AC", "ET", "e", "am", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtexture", "Ġ=", "ĠPAT", "HT", "OF", "(", "data", "\\", "In", "sign", "ia", "_", "ace", "3", "logo", "_", "ca", ".", "pa", "a", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtexture", "Vehicle", "Ġ=", "Ġ\"\";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġclass", "ĠACE", "_", "in", "sign", "ia", "_", "ban", "ana", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠdisplayName", "Ġ=", "Ġ\"", "ABE", "3", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġauthor", "Ġ=", "ĠC", "STRING", "(", "AC", "ET", "e", "am", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtexture", "Ġ=", "ĠPAT", "HT", "OF", "(", "data", "\\", "in", "sign", "ia", "_", "ban", "ana", "_", "ca", ".", "pa", "a", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtexture", "Vehicle", "Ġ=", "Ġ\"\";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::205", "code": "#include <kccachedb.h>\n\nusing namespace std;\nusing namespace kyotocabinet;\n\n// main routine\nint main(int argc, char** argv) {\n\n  // create the database object\n  GrassDB db;\n\n  // open the database\n  if (!db.open(\"*\", GrassDB::OWRITER | GrassDB::OCREATE)) {\n    cerr << \"open error: \" << db.error().name() << endl;\n  }\n\n  // store records\n  if (!db.set(\"foo\", \"hop\") ||\n      !db.set(\"bar\", \"step\") ||\n      !db.set(\"baz\", \"jump\")) {\n    cerr << \"set error: \" << db.error().name() << endl;\n  }\n\n  // retrieve a record\n  string value;\n  if (db.get(\"foo\", &value)) {\n    cout << value << endl;\n  } else {\n    cerr << \"get error: \" << db.error().name() << endl;\n  }\n\n  // traverse records\n  DB::Cursor* cur = db.cursor();\n  cur->jump();\n  string ckey, cvalue;\n  while (cur->get(&ckey, &cvalue, true)) {\n    cout << ckey << \":\" << cvalue << endl;\n  }\n  delete cur;\n\n  // close the database\n  if (!db.close()) {\n    cerr << \"close error: \" << db.error().name() << endl;\n  }\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "k", "cc", "ached", "b", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "Ġk", "y", "ot", "ocab", "inet", ";", "Ċ", "Ċ", "//", "Ġmain", "Ġroutine", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġcreate", "Ġthe", "Ġdatabase", "Ġobject", "Ċ", "Ġ", "ĠGra", "ss", "DB", "Ġdb", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġopen", "Ġthe", "Ġdatabase", "Ċ", "Ġ", "Ġif", "Ġ(!", "db", ".", "open", "(\"", "*\",", "ĠGra", "ss", "DB", "::", "O", "WR", "ITER", "Ġ|", "ĠGra", "ss", "DB", "::", "OC", "RE", "ATE", "))", "Ġ{", "Ċ", "ĠĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "open", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġdb", ".", "error", "().", "name", "()", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġstore", "Ġrecords", "Ċ", "Ġ", "Ġif", "Ġ(!", "db", ".", "set", "(\"", "foo", "\",", "Ġ\"", "hop", "\")", "Ġ||", "Ċ", "ĠĠĠĠĠ", "Ġ!", "db", ".", "set", "(\"", "bar", "\",", "Ġ\"", "step", "\")", "Ġ||", "Ċ", "ĠĠĠĠĠ", "Ġ!", "db", ".", "set", "(\"", "baz", "\",", "Ġ\"", "jump", "\"))", "Ġ{", "Ċ", "ĠĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "set", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġdb", ".", "error", "().", "name", "()", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġretrieve", "Ġa", "Ġrecord", "Ċ", "Ġ", "Ġstring", "Ġvalue", ";", "Ċ", "Ġ", "Ġif", "Ġ(", "db", ".", "get", "(\"", "foo", "\",", "Ġ&", "value", "))", "Ġ{", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġvalue", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "get", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġdb", ".", "error", "().", "name", "()", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġtraverse", "Ġrecords", "Ċ", "Ġ", "ĠDB", "::", "Cursor", "*", "Ġcur", "Ġ=", "Ġdb", ".", "cursor", "();", "Ċ", "Ġ", "Ġcur", "->", "jump", "();", "Ċ", "Ġ", "Ġstring", "Ġc", "key", ",", "Ġc", "value", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cur", "->", "get", "(&", "ckey", ",", "Ġ&", "c", "value", ",", "Ġtrue", "))", "Ġ{", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġc", "key", "Ġ<<", "Ġ\":\"", "Ġ<<", "Ġc", "value", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġdelete", "Ġcur", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġclose", "Ġthe", "Ġdatabase", "Ċ", "Ġ", "Ġif", "Ġ(!", "db", ".", "close", "())", "Ġ{", "Ċ", "ĠĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "close", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġdb", ".", "error", "().", "name", "()", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::206", "code": "// stdafx.cpp : source file that includes just the standard includes\n// xpad.pch will be the pre-compiled header\n// stdafx.obj will contain the pre-compiled type information\n\n#include \"stdafx.h\"\n\n// TODO: reference any additional headers you need in STDAFX.H\n// and not in this file\n\nstring format(const char* fmt, ...)\n{\n\tva_list args;\n\tva_start(args, fmt);\n\n\tint result = -1, length = 256;\n\n\tchar* buffer = NULL;\n\n\twhile(result == -1)\n\t{\n\t\tif(buffer) delete [] buffer;\n\n\t\tbuffer = new char[length + 1];\n\n\t\tmemset(buffer, 0, length + 1);\n\n\t\tresult = _vsnprintf(buffer, length, fmt, args);\n\n\t\tlength *= 2;\n\t}\n\n\tva_end(args);\n\n\tstring s(buffer);\n\n\tdelete [] buffer;\n\n\treturn s;\n}\n", "code_tokens": ["Ġ//", "Ġstd", "af", "x", ".", "cpp", "Ġ:", "Ġsource", "Ġfile", "Ġthat", "Ġincludes", "Ġjust", "Ġthe", "Ġstandard", "Ġincludes", "Ċ", "//", "Ġx", "pad", ".", "pch", "Ġwill", "Ġbe", "Ġthe", "Ġpre", "-", "compiled", "Ġheader", "Ċ", "//", "Ġstd", "af", "x", ".", "obj", "Ġwill", "Ġcontain", "Ġthe", "Ġpre", "-", "compiled", "Ġtype", "Ġinformation", "Ċ", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "Ċ", "//", "ĠTODO", ":", "Ġreference", "Ġany", "Ġadditional", "Ġheaders", "Ġyou", "Ġneed", "Ġin", "ĠST", "DA", "FX", ".", "H", "Ċ", "//", "Ġand", "Ġnot", "Ġin", "Ġthis", "Ġfile", "Ċ", "Ċ", "string", "Ġformat", "(", "const", "Ġchar", "*", "Ġfmt", ",", "Ġ...)", "Ċ", "{", "Ċ", "ĉ", "va", "_", "list", "Ġargs", ";", "Ċ", "ĉ", "va", "_", "start", "(", "args", ",", "Ġfmt", ");", "Ċ", "Ċ", "ĉ", "int", "Ġresult", "Ġ=", "Ġ-", "1", ",", "Ġlength", "Ġ=", "Ġ256", ";", "Ċ", "Ċ", "ĉ", "char", "*", "Ġbuffer", "Ġ=", "ĠNULL", ";", "Ċ", "Ċ", "ĉ", "while", "(", "result", "Ġ==", "Ġ-", "1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "(", "buffer", ")", "Ġdelete", "Ġ[]", "Ġbuffer", ";", "Ċ", "Ċ", "ĉ", "ĉ", "buffer", "Ġ=", "Ġnew", "Ġchar", "[", "length", "Ġ+", "Ġ1", "];", "Ċ", "Ċ", "ĉ", "ĉ", "memset", "(", "buffer", ",", "Ġ0", ",", "Ġlength", "Ġ+", "Ġ1", ");", "Ċ", "Ċ", "ĉ", "ĉ", "result", "Ġ=", "Ġ_", "v", "snprintf", "(", "buffer", ",", "Ġlength", ",", "Ġfmt", ",", "Ġargs", ");", "Ċ", "Ċ", "ĉ", "ĉ", "length", "Ġ*=", "Ġ2", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "va", "_", "end", "(", "args", ");", "Ċ", "Ċ", "ĉ", "string", "Ġs", "(", "buffer", ");", "Ċ", "Ċ", "ĉ", "delete", "Ġ[]", "Ġbuffer", ";", "Ċ", "Ċ", "ĉ", "return", "Ġs", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::207", "code": "// { dg-options \"-std=c++0x\" }\n// { dg-require-cstdint \"\" }\n//\n// 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n//\n// Copyright (C) 2008-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <random>\n#include <testsuite_hooks.h>\n\nvoid\ntest01()\n{\n  bool test __attribute__((unused)) = true;\n\n  std::subtract_with_carry_engine<unsigned long, 24, 10, 24> x;\n  VERIFY( x.min() == 0 );\n  VERIFY( x.max() == ((1UL << 24) - 1) );\n  VERIFY( x() == 15039276 );\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "c", "++", "0", "x", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "c", "std", "int", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ċ", "//", "Ġ2008", "-", "11", "-", "24", "Ġ", "ĠEd", "ward", "ĠM", ".", "ĠSm", "ith", "-", "Row", "land", "Ġ<", "3", "dw", "4", "rd", "@", "ver", "iz", "on", ".", "net", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "random", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__((", "unused", "))", "Ġ=", "Ġtrue", ";", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "subtract", "_", "with", "_", "carry", "_", "engine", "<", "unsigned", "Ġlong", ",", "Ġ24", ",", "Ġ10", ",", "Ġ24", ">", "Ġx", ";", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġx", ".", "min", "()", "Ġ==", "Ġ0", "Ġ);", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġx", ".", "max", "()", "Ġ==", "Ġ((", "1", "UL", "Ġ<<", "Ġ24", ")", "Ġ-", "Ġ1", ")", "Ġ);", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġx", "()", "Ġ==", "Ġ150", "39", "276", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::208", "code": "// Copyright (C) 2010-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n//\n// { dg-require-debug-mode \"\" }\n// { dg-do run { xfail *-*-* } }\n\n#include <map>\n#include <debug/checks.h>\n\nvoid test01()\n{\n  __gnu_test::check_insert3<std::map<int, int> >();\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "debug", "-", "mode", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġrun", "Ġ{", "Ġx", "fail", "Ġ*", "-*-*", "Ġ}", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "debug", "/", "checks", ".", "h", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ__", "gnu", "_", "test", "::", "check", "_", "insert", "3", "<", "std", "::", "map", "<", "int", ",", "Ġint", ">", "Ġ>();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::209", "code": "// { dg-do compile }\n// { dg-options \"-std=gnu++0x\" }\n\n// Copyright (C) 2012-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <list>\n\n// libstdc++/43813\nvoid test01()\n{\n  std::list<double*> l(7, 0);\n  l.assign(7, 0);\n  l.insert(l.begin(), 7, 0);\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "0", "x", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "Ċ", "//", "Ġlib", "std", "c", "++", "/", "438", "13", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "list", "<", "double", "*>", "Ġl", "(", "7", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġl", ".", "assign", "(", "7", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġl", ".", "insert", "(", "l", ".", "begin", "(),", "Ġ7", ",", "Ġ0", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::210", "code": "/*\n *  Copyright (C) 2005-2020 Team Kodi\n *  This file is part of Kodi - https://kodi.tv\n *\n *  SPDX-License-Identifier: GPL-2.0-or-later\n *  See LICENSES/README.md for more information.\n */\n\n#include \"DRMEncoder.h\"\n\n#include <cstring>\n#include <errno.h>\n#include <stdexcept>\n#include <string>\n\nusing namespace KODI::WINDOWING::GBM;\n\nCDRMEncoder::CDRMEncoder(int fd, uint32_t encoder)\n  : CDRMObject(fd), m_encoder(drmModeGetEncoder(m_fd, encoder))\n{\n  if (!m_encoder)\n    throw std::runtime_error(\"drmModeGetEncoder failed: \" + std::string{strerror(errno)});\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "-", "2020", "ĠTeam", "ĠK", "od", "i", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠK", "od", "i", "Ġ-", "Ġhttps", "://", "k", "od", "i", ".", "tv", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĠG", "PL", "-", "2", ".", "0", "-", "or", "-", "later", "Ċ", "Ġ*", "Ġ", "ĠSee", "ĠLICENSE", "S", "/", "README", ".", "md", "Ġfor", "Ġmore", "Ġinformation", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "DRM", "Encoder", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "#", "include", "Ġ<", "errno", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "st", "dex", "cept", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠK", "OD", "I", "::", "WINDOW", "ING", "::", "GB", "M", ";", "Ċ", "Ċ", "C", "DRM", "Encoder", "::", "C", "DRM", "Encoder", "(", "int", "Ġfd", ",", "Ġuint", "32", "_", "t", "Ġencoder", ")", "Ċ", "Ġ", "Ġ:", "ĠC", "DRM", "Object", "(", "fd", "),", "Ġm", "_", "encoder", "(", "drm", "Mode", "Get", "Encoder", "(", "m", "_", "fd", ",", "Ġencoder", "))", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(!", "m", "_", "encoder", ")", "Ċ", "ĠĠĠ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "drm", "Mode", "Get", "Encoder", "Ġfailed", ":", "Ġ\"", "Ġ+", "Ġstd", "::", "string", "{", "strerror", "(", "errno", ")});", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::211", "code": "#include \"test_db_base.h\"\n\n#include <cppcms/json.h>\n\ntest_db_base::test_db_base(cppcms::service &srv) : cppcms::application(srv) {\n    db_connection_str = settings().get<std::string>(\"app.db_connection_string\");\n}\n\nvoid test_db_base::init() {\n    sql.open(db_connection_str);\n}\n\nvoid test_db_base::clear() {\n    sql.close();\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "test", "_", "db", "_", "base", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "cpp", "cms", "/", "json", ".", "h", ">", "Ċ", "Ċ", "test", "_", "db", "_", "base", "::", "test", "_", "db", "_", "base", "(", "cpp", "cms", "::", "service", "Ġ&", "srv", ")", "Ġ:", "Ġcpp", "cms", "::", "application", "(", "srv", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġdb", "_", "connection", "_", "str", "Ġ=", "Ġsettings", "().", "get", "<", "std", "::", "string", ">(\"", "app", ".", "db", "_", "connection", "_", "string", "\");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġtest", "_", "db", "_", "base", "::", "init", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġsql", ".", "open", "(", "db", "_", "connection", "_", "str", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġtest", "_", "db", "_", "base", "::", "clear", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġsql", ".", "close", "();", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::212", "code": "// Copyright (C) 2011-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n//\n\n// { dg-do compile }\n\n#include <map>\n\nstruct Key\n{\n  Key() { }\n\n  Key(const Key&) { }\n\n  template<typename T>\n    Key(const T&)\n    { }\n\n  bool operator<(const Key&) const;\n};\n\n#if __cplusplus < 201103L\n// libstdc++/47628\nvoid f()\n{\n  typedef std::multimap<Key, int> MMap;\n  MMap mm;\n  mm.insert(MMap::value_type());\n  MMap::iterator i = mm.begin();\n  mm.erase(i);\n}\n#endif\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//", "Ċ", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "struct", "ĠKey", "Ċ", "{", "Ċ", "Ġ", "ĠKey", "()", "Ġ{", "Ġ}", "Ċ", "Ċ", "Ġ", "ĠKey", "(", "const", "ĠKey", "&)", "Ġ{", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġtemplate", "<", "typename", "ĠT", ">", "Ċ", "ĠĠĠ", "ĠKey", "(", "const", "ĠT", "&)", "Ċ", "ĠĠĠ", "Ġ{", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġbool", "Ġoperator", "<(", "const", "ĠKey", "&)", "Ġconst", ";", "Ċ", "};", "Ċ", "Ċ", "#", "if", "Ġ__", "c", "plus", "plus", "Ġ<", "Ġ201", "103", "L", "Ċ", "//", "Ġlib", "std", "c", "++", "/", "476", "28", "Ċ", "void", "Ġf", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtypedef", "Ġstd", "::", "multimap", "<", "Key", ",", "Ġint", ">", "ĠM", "Map", ";", "Ċ", "Ġ", "ĠM", "Map", "Ġmm", ";", "Ċ", "Ġ", "Ġmm", ".", "insert", "(", "M", "Map", "::", "value", "_", "type", "());", "Ċ", "Ġ", "ĠM", "Map", "::", "iterator", "Ġi", "Ġ=", "Ġmm", ".", "begin", "();", "Ċ", "Ġ", "Ġmm", ".", "erase", "(", "i", ");", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::213", "code": "// { dg-do compile }\n// 2001-08-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n// Copyright (C) 2001, 2003, 2009 Free Software Foundation\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 22.2.6.2  Template class money_put\n\n#include <locale>\n\nvoid test01()\n{\n  // Check for required base class.\n  typedef std::money_put<char> test_type;\n  typedef std::locale::facet base_type;\n  const test_type& obj = std::use_facet<test_type>(std::locale()); \n  const base_type* base __attribute__((unused)) = &obj;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ200", "1", "-", "08", "-", "27", "Ġ", "ĠB", "en", "jam", "in", "ĠK", "os", "n", "ik", "Ġ", "Ġ<", "bk", "oz", "@", "red", "hat", ".", "com", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ200", "1", ",", "Ġ2003", ",", "Ġ2009", "ĠFree", "ĠSoftware", "ĠFoundation", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "Ġ22", ".", "2", ".", "6", ".", "2", "Ġ", "ĠTemplate", "Ġclass", "Ġmoney", "_", "put", "Ċ", "Ċ", "#", "include", "Ġ<", "locale", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠCheck", "Ġfor", "Ġrequired", "Ġbase", "Ġclass", ".", "Ċ", "Ġ", "Ġtypedef", "Ġstd", "::", "money", "_", "put", "<", "char", ">", "Ġtest", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġstd", "::", "locale", "::", "facet", "Ġbase", "_", "type", ";", "Ċ", "Ġ", "Ġconst", "Ġtest", "_", "type", "&", "Ġobj", "Ġ=", "Ġstd", "::", "use", "_", "facet", "<", "test", "_", "type", ">(", "std", "::", "locale", "());", "ĠĊ", "Ġ", "Ġconst", "Ġbase", "_", "type", "*", "Ġbase", "Ġ__", "attribute", "__((", "unused", "))", "Ġ=", "Ġ&", "obj", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::214", "code": "// Copyright (C) 2001-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include \"1.h\"\n#include <list>\n\nint main()\n{\n  cons01<std::list< A<B> > >();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ200", "1", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "1", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġcons", "01", "<", "std", "::", "list", "<", "ĠA", "<", "B", ">", "Ġ>", "Ġ>();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::215", "code": "#include \"ex14_49.h\"\n\nint main()\n{\n    Date date(12, 4, 2015);\n    if (static_cast<bool>(date))\n        std::cout << date << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ex", "14", "_", "49", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠDate", "Ġdate", "(", "12", ",", "Ġ4", ",", "Ġ2015", ");", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "static", "_", "cast", "<", "bool", ">(", "date", "))", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġdate", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::216", "code": "// { dg-do assemble  }\n\ntemplate <class T> void foo();\t// { dg-message \"\" } candidate\n\nvoid (*bar)() = foo<void>;\nvoid (*baz)() = foo; // { dg-error \"\" } can't deduce T\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġassemble", "Ġ", "Ġ}", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ġvoid", "Ġfoo", "();", "ĉ", "//", "Ġ{", "Ġdg", "-", "message", "Ġ\"\"", "Ġ}", "Ġcandidate", "Ċ", "Ċ", "void", "Ġ(*", "bar", ")()", "Ġ=", "Ġfoo", "<", "void", ">;", "Ċ", "void", "Ġ(*", "baz", ")()", "Ġ=", "Ġfoo", ";", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"\"", "Ġ}", "Ġcan", "'t", "Ġde", "duce", "ĠT", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::217", "code": "// { dg-do assemble }\n\n// Copyright (C) 2000 Free Software Foundation\n\n// by Alexandre Oliva <aoliva@cygnus.com>\n// distilled from libg++'s Fix.cc\n\n\nstruct Integer {\n  ~Integer () {}\n};\n\nvoid foo (const Integer& y);\nInteger bar (const Integer& x);\n\nvoid show (const Integer& x) {\n  foo (bar (x));\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġassemble", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "ĠFree", "ĠSoftware", "ĠFoundation", "Ċ", "Ċ", "//", "Ġby", "ĠA", "lex", "and", "re", "ĠO", "li", "va", "Ġ<", "a", "ol", "iv", "a", "@", "cy", "gn", "us", ".", "com", ">", "Ċ", "//", "Ġdist", "illed", "Ġfrom", "Ġlib", "g", "++", "'", "s", "ĠFix", ".", "cc", "Ċ", "Ċ", "Ċ", "struct", "ĠInteger", "Ġ{", "Ċ", "Ġ", "Ġ~", "Integer", "Ġ()", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "void", "Ġfoo", "Ġ(", "const", "ĠInteger", "&", "Ġy", ");", "Ċ", "Integer", "Ġbar", "Ġ(", "const", "ĠInteger", "&", "Ġx", ");", "Ċ", "Ċ", "void", "Ġshow", "Ġ(", "const", "ĠInteger", "&", "Ġx", ")", "Ġ{", "Ċ", "Ġ", "Ġfoo", "Ġ(", "bar", "Ġ(", "x", "));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::218", "code": "// { dg-do assemble  }\n// GROUPS passed patches\n// patches file\n// From: david.binderman@pmsr.philips.co.uk\n// Date:     Wed, 6 Oct 93 17:05:54 BST\n// Subject:  Reno 1.2 bug fix\n// Message-ID: <9310061605.AA04160@pmsr.philips.co.uk>\n\nint type(float)       { return 1; }\nint type(double)      { return 2; }\nint type(long double) { return 3; }\n\nextern \"C\" int printf( const char *, ...);\n\nint main()\n{\n      int i = 0;\n      if (type(0.0) != 2)\n              ++i;\n      if (i > 0)\n\t{ printf (\"FAIL\\n\"); return 1; }\n      else\n\tprintf (\"PASS\\n\");\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġassemble", "Ġ", "Ġ}", "Ċ", "//", "ĠGROUP", "S", "Ġpassed", "Ġpatches", "Ċ", "//", "Ġpatches", "Ġfile", "Ċ", "//", "ĠFrom", ":", "Ġdav", "id", ".", "binder", "man", "@", "p", "msr", ".", "ph", "il", "ips", ".", "co", ".", "uk", "Ċ", "//", "ĠDate", ":", "ĠĠĠĠ", "ĠW", "ed", ",", "Ġ6", "ĠOct", "Ġ93", "Ġ17", ":", "05", ":", "54", "ĠBST", "Ċ", "//", "ĠSubject", ":", "Ġ", "ĠR", "eno", "Ġ1", ".", "2", "Ġbug", "Ġfix", "Ċ", "//", "ĠMessage", "-", "ID", ":", "Ġ<", "93", "100", "616", "05", ".", "AA", "04", "160", "@", "p", "msr", ".", "ph", "il", "ips", ".", "co", ".", "uk", ">", "Ċ", "Ċ", "int", "Ġtype", "(", "float", ")", "ĠĠĠĠĠĠ", "Ġ{", "Ġreturn", "Ġ1", ";", "Ġ}", "Ċ", "int", "Ġtype", "(", "double", ")", "ĠĠĠĠĠ", "Ġ{", "Ġreturn", "Ġ2", ";", "Ġ}", "Ċ", "int", "Ġtype", "(", "long", "Ġdouble", ")", "Ġ{", "Ġreturn", "Ġ3", ";", "Ġ}", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "Ġprintf", "(", "Ġconst", "Ġchar", "Ġ*,", "Ġ...", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠĠĠ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "type", "(", "0", ".", "0", ")", "Ġ!=", "Ġ2", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "i", ";", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "i", "Ġ>", "Ġ0", ")", "Ċ", "ĉ", "{", "Ġprintf", "Ġ(\"", "FAIL", "\\", "n", "\");", "Ġreturn", "Ġ1", ";", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġelse", "Ċ", "ĉ", "printf", "Ġ(\"", "PASS", "\\", "n", "\");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::219", "code": "// Boost.Assign library\n//\n//  Copyright Thorsten Ottosen 2003-2004. Use, modification and\n//  distribution is subject to the Boost Software License, Version\n//  1.0. (See accompanying file LICENSE_1_0.txt or copy at\n//  http://www.boost.org/LICENSE_1_0.txt)\n//\n// For more information, see http://www.boost.org/libs/assign/\n//\n\n\n#ifndef BOOST_ASSIGN_STD_MAP_HPP\n#define BOOST_ASSIGN_STD_MAP_HPP\n\n#if defined(_MSC_VER) && (_MSC_VER >= 1020)\n# pragma once\n#endif\n\n#include <boost/assign/list_inserter.hpp>\n#include <boost/config.hpp>\n#include <map>\n\nnamespace boost\n{\nnamespace assign\n{\n\n    template< class K, class V, class C, class A, class P >\n    inline list_inserter< assign_detail::call_insert< std::map<K,V,C,A> >, P >\n    operator+=( std::map<K,V,C,A>& m, const P& p )\n    {\n        return insert( m )( p );\n    }\n    \n    template< class K, class V, class C, class A, class P >\n    inline list_inserter< assign_detail::call_insert< std::multimap<K,V,C,A> >, P >\n    operator+=( std::multimap<K,V,C,A>& m, const P& p )\n    {\n        return insert( m )( p );\n    }\n\n}\n}\n\n#endif\n", "code_tokens": ["Ġ//", "ĠBo", "ost", ".", "Assign", "Ġlibrary", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCopyright", "ĠTh", "or", "st", "en", "ĠO", "t", "tos", "en", "Ġ2003", "-", "2004", ".", "ĠUse", ",", "Ġmodification", "Ġand", "Ċ", "//", "Ġ", "Ġdistribution", "Ġis", "Ġsubject", "Ġto", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ċ", "//", "Ġ", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "//", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//", "Ċ", "//", "ĠFor", "Ġmore", "Ġinformation", ",", "Ġsee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "libs", "/", "assign", "/", "Ċ", "//", "Ċ", "Ċ", "Ċ", "#", "ifndef", "ĠBOOST", "_", "ASSIGN", "_", "STD", "_", "MAP", "_", "HP", "P", "Ċ", "#", "define", "ĠBOOST", "_", "ASSIGN", "_", "STD", "_", "MAP", "_", "HP", "P", "Ċ", "Ċ", "#", "if", "Ġdefined", "(_", "MSC", "_", "VER", ")", "Ġ&&", "Ġ(_", "MSC", "_", "VER", "Ġ>=", "Ġ102", "0", ")", "Ċ", "#", "Ġpragma", "Ġonce", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "assign", "/", "list", "_", "insert", "er", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "config", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "namespace", "Ġboost", "Ċ", "{", "Ċ", "namespace", "Ġassign", "Ċ", "{", "Ċ", "Ċ", "ĠĠĠ", "Ġtemplate", "<", "Ġclass", "ĠK", ",", "Ġclass", "ĠV", ",", "Ġclass", "ĠC", ",", "Ġclass", "ĠA", ",", "Ġclass", "ĠP", "Ġ>", "Ċ", "ĠĠĠ", "Ġinline", "Ġlist", "_", "insert", "er", "<", "Ġassign", "_", "detail", "::", "call", "_", "insert", "<", "Ġstd", "::", "map", "<", "K", ",", "V", ",", "C", ",", "A", ">", "Ġ>,", "ĠP", "Ġ>", "Ċ", "ĠĠĠ", "Ġoperator", "+=(", "Ġstd", "::", "map", "<", "K", ",", "V", ",", "C", ",", "A", ">&", "Ġm", ",", "Ġconst", "ĠP", "&", "Ġp", "Ġ)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġinsert", "(", "Ġm", "Ġ)(", "Ġp", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġtemplate", "<", "Ġclass", "ĠK", ",", "Ġclass", "ĠV", ",", "Ġclass", "ĠC", ",", "Ġclass", "ĠA", ",", "Ġclass", "ĠP", "Ġ>", "Ċ", "ĠĠĠ", "Ġinline", "Ġlist", "_", "insert", "er", "<", "Ġassign", "_", "detail", "::", "call", "_", "insert", "<", "Ġstd", "::", "multimap", "<", "K", ",", "V", ",", "C", ",", "A", ">", "Ġ>,", "ĠP", "Ġ>", "Ċ", "ĠĠĠ", "Ġoperator", "+=(", "Ġstd", "::", "multimap", "<", "K", ",", "V", ",", "C", ",", "A", ">&", "Ġm", ",", "Ġconst", "ĠP", "&", "Ġp", "Ġ)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġinsert", "(", "Ġm", "Ġ)(", "Ġp", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::220", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n\nvector<int> adj[143];\nint n; bool seen[143];\nint dfs(int u) {\n    seen[u] = true;\n    int result = 0;\n    for (int v: adj[u])\n        if (!seen[v])\n            result += dfs(v) + 1;\n    return result;\n}\n\n\nint main() {\n    ios_base::sync_with_stdio(0);cin.tie(0);\n\n    while (cin >> n && n) {\n        for (int i=0, sz; i<n; ++i) {\n            cin >> sz;\n            adj[i].resize(sz);\n            for (int j=0; j<sz; ++j) {\n                cin >> adj[i][j];\n                --adj[i][j];\n            }\n        }\n\n        int mx=-1, mxi;\n        for (int i=0; i<n; ++i) {\n            memset(seen, 0, n);\n            int c = dfs(i);\n            if (mx < c) {\n                mx = c;\n                mxi = i;\n            }\n        }\n        cout << mxi+1 << \"\\n\";\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "vector", "<", "int", ">", "Ġadj", "[", "143", "];", "Ċ", "int", "Ġn", ";", "Ġbool", "Ġseen", "[", "143", "];", "Ċ", "int", "Ġdfs", "(", "int", "Ġu", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġseen", "[", "u", "]", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġresult", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġv", ":", "Ġadj", "[", "u", "])", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "seen", "[", "v", "])", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġresult", "Ġ+=", "Ġdfs", "(", "v", ")", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġios", "_", "base", "::", "sync", "_", "with", "_", "stdio", "(", "0", ");", "cin", ".", "tie", "(", "0", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġn", "Ġ&&", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ",", "Ġsz", ";", "Ġi", "<", "n", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġsz", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġadj", "[", "i", "].", "resize", "(", "sz", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġj", "=", "0", ";", "Ġj", "<", "sz", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġadj", "[", "i", "][", "j", "];", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ--", "adj", "[", "i", "][", "j", "];", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġmx", "=-", "1", ",", "Ġmx", "i", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġmemset", "(", "seen", ",", "Ġ0", ",", "Ġn", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġc", "Ġ=", "Ġdfs", "(", "i", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "mx", "Ġ<", "Ġc", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġmx", "Ġ=", "Ġc", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġmx", "i", "Ġ=", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġmx", "i", "+", "1", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::221", "code": "#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tif(n<6)\r\n\tcout << n/2+1 <<endl;\r\n\telse\r\n\tcout << (10-n)/2+1 <<endl;\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġn", ";", "č", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", ";", "č", "Ċ", "ĉ", "if", "(", "n", "<", "6", ")", "č", "Ċ", "ĉ", "cout", "Ġ<<", "Ġn", "/", "2", "+", "1", "Ġ<<", "endl", ";", "č", "Ċ", "ĉ", "else", "č", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ(", "10", "-", "n", ")/", "2", "+", "1", "Ġ<<", "endl", ";", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::222", "code": "#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int maxn = 111;\nint arr[maxn];\n\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    int n, m;\n    while(2 == scanf(\"%d%d\", &n, &m) && !(n==0 && m==0)) {\n        for(int i = 0; i < n; ++i)\n            scanf(\"%d\", &arr[i]);\n        arr[n] = m;\n        sort(arr, arr+n+1);\n        printf(\"%d\", arr[0]);\n        for(int i = 1; i < n+1; ++i)\n            printf(\" %d\", arr[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "const", "Ġint", "Ġmax", "n", "Ġ=", "Ġ111", ";", "Ċ", "int", "Ġarr", "[", "max", "n", "];", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "fre", "open", "(\"", "in", ".", "txt", "\",", "Ġ\"", "r", "\",", "Ġstdin", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "Ġm", ";", "Ċ", "ĠĠĠ", "Ġwhile", "(", "2", "Ġ==", "Ġscanf", "(\"%", "d", "%", "d", "\",", "Ġ&", "n", ",", "Ġ&", "m", ")", "Ġ&&", "Ġ!(", "n", "==", "0", "Ġ&&", "Ġm", "==", "0", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "\",", "Ġ&", "arr", "[", "i", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġarr", "[", "n", "]", "Ġ=", "Ġm", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsort", "(", "arr", ",", "Ġarr", "+", "n", "+", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "d", "\",", "Ġarr", "[", "0", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġn", "+", "1", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"", "Ġ%", "d", "\",", "Ġarr", "[", "i", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::223", "code": "#include \"background_extractor.h\"\n\nnamespace TooManyPeeps {\n\n  BackgroundExtractor::BackgroundExtractor(const cv::Mat& original, cv::Mat& result,\n    int historySize, double threshold)\n    : ProcessFilter(original, result) {\n\n    backgroundExtractor = cv::createBackgroundSubtractorMOG2(historySize, threshold, TRACK_SHADOWS);\n    // If TRACK_SHADOWS = true, shadows are also marked in result with value = 127\n  }\n\n  BackgroundExtractor::BackgroundExtractor(cv::Mat& image, int historySize, double threshold)\n    : BackgroundExtractor(image, image, historySize, threshold) {\n  }\n\n  BackgroundExtractor::~BackgroundExtractor(void) {\n    delete backgroundExtractor;\n  }\n\n  void BackgroundExtractor::execute(void) {\n    backgroundExtractor->apply(get_original(), get_result());\n  }\n\n};\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "background", "_", "extractor", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠToo", "Many", "Pe", "eps", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠBackground", "Extractor", "::", "Background", "Extractor", "(", "const", "Ġcv", "::", "Mat", "&", "Ġoriginal", ",", "Ġcv", "::", "Mat", "&", "Ġresult", ",", "Ċ", "ĠĠĠ", "Ġint", "Ġhistory", "Size", ",", "Ġdouble", "Ġthreshold", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠProcess", "Filter", "(", "original", ",", "Ġresult", ")", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġbackground", "Extractor", "Ġ=", "Ġcv", "::", "create", "Background", "Subtract", "or", "MO", "G", "2", "(", "history", "Size", ",", "Ġthreshold", ",", "ĠTRACK", "_", "SH", "AD", "O", "WS", ");", "Ċ", "ĠĠĠ", "Ġ//", "ĠIf", "ĠTRACK", "_", "SH", "AD", "O", "WS", "Ġ=", "Ġtrue", ",", "Ġshadow", "s", "Ġare", "Ġalso", "Ġmarked", "Ġin", "Ġresult", "Ġwith", "Ġvalue", "Ġ=", "Ġ127", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "ĠBackground", "Extractor", "::", "Background", "Extractor", "(", "cv", "::", "Mat", "&", "Ġimage", ",", "Ġint", "Ġhistory", "Size", ",", "Ġdouble", "Ġthreshold", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠBackground", "Extractor", "(", "image", ",", "Ġimage", ",", "Ġhistory", "Size", ",", "Ġthreshold", ")", "Ġ{", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "ĠBackground", "Extractor", "::~", "Background", "Extractor", "(", "void", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġbackground", "Extractor", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĠBackground", "Extractor", "::", "execute", "(", "void", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġbackground", "Extractor", "->", "apply", "(", "get", "_", "original", "(),", "Ġget", "_", "result", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::224", "code": "///////////////////////////////////////////////////////////////////////////////\n// Copyright (c) Lewis Baker\n// Licenced under MIT license. See LICENSE.txt for details.\n///////////////////////////////////////////////////////////////////////////////\n#ifndef CPPCORO_TESTS_COUNTED_HPP_INCLUDED\n#define CPPCORO_TESTS_COUNTED_HPP_INCLUDED\n\nstruct counted\n{\n\tstatic int default_construction_count;\n\tstatic int copy_construction_count;\n\tstatic int move_construction_count;\n\tstatic int destruction_count;\n\n\tint id;\n\n\tstatic void reset_counts()\n\t{\n\t\tdefault_construction_count = 0;\n\t\tcopy_construction_count = 0;\n\t\tmove_construction_count = 0;\n\t\tdestruction_count = 0;\n\t}\n\n\tstatic int construction_count()\n\t{\n\t\treturn default_construction_count + copy_construction_count + move_construction_count;\n\t}\n\n\tstatic int active_count()\n\t{\n\t\treturn construction_count() - destruction_count;\n\t}\n\n\tcounted() : id(default_construction_count++) {}\n\tcounted(const counted& other) : id(other.id) { ++copy_construction_count; }\n\tcounted(counted&& other) : id(other.id) { ++move_construction_count; other.id = -1; }\n\t~counted() { ++destruction_count; }\n\n};\n\n#endif\n", "code_tokens": ["Ġ//", "/////////////////////////////////////////////////////////////////////////////", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "ĠL", "ew", "is", "ĠB", "aker", "Ċ", "//", "ĠLic", "ence", "d", "Ġunder", "ĠMIT", "Ġlicense", ".", "ĠSee", "ĠLICENSE", ".", "txt", "Ġfor", "Ġdetails", ".", "Ċ", "///////////////////////////////////////////////////////////////////////////////", "Ċ", "#", "ifndef", "ĠCP", "PC", "OR", "O", "_", "TESTS", "_", "COUNT", "ED", "_", "HP", "P", "_", "IN", "CLU", "DED", "Ċ", "#", "define", "ĠCP", "PC", "OR", "O", "_", "TESTS", "_", "COUNT", "ED", "_", "HP", "P", "_", "IN", "CLU", "DED", "Ċ", "Ċ", "struct", "Ġcounted", "Ċ", "{", "Ċ", "ĉ", "static", "Ġint", "Ġdefault", "_", "construction", "_", "count", ";", "Ċ", "ĉ", "static", "Ġint", "Ġcopy", "_", "construction", "_", "count", ";", "Ċ", "ĉ", "static", "Ġint", "Ġmove", "_", "construction", "_", "count", ";", "Ċ", "ĉ", "static", "Ġint", "Ġde", "struction", "_", "count", ";", "Ċ", "Ċ", "ĉ", "int", "Ġid", ";", "Ċ", "Ċ", "ĉ", "static", "Ġvoid", "Ġreset", "_", "counts", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "default", "_", "construction", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "copy", "_", "construction", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "move", "_", "construction", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "de", "struction", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "static", "Ġint", "Ġconstruction", "_", "count", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġdefault", "_", "construction", "_", "count", "Ġ+", "Ġcopy", "_", "construction", "_", "count", "Ġ+", "Ġmove", "_", "construction", "_", "count", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "static", "Ġint", "Ġactive", "_", "count", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġconstruction", "_", "count", "()", "Ġ-", "Ġde", "struction", "_", "count", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "counted", "()", "Ġ:", "Ġid", "(", "default", "_", "construction", "_", "count", "++)", "Ġ{}", "Ċ", "ĉ", "counted", "(", "const", "Ġcounted", "&", "Ġother", ")", "Ġ:", "Ġid", "(", "other", ".", "id", ")", "Ġ{", "Ġ++", "copy", "_", "construction", "_", "count", ";", "Ġ}", "Ċ", "ĉ", "counted", "(", "counted", "&&", "Ġother", ")", "Ġ:", "Ġid", "(", "other", ".", "id", ")", "Ġ{", "Ġ++", "move", "_", "construction", "_", "count", ";", "Ġother", ".", "id", "Ġ=", "Ġ-", "1", ";", "Ġ}", "Ċ", "ĉ", "~", "counted", "()", "Ġ{", "Ġ++", "de", "struction", "_", "count", ";", "Ġ}", "Ċ", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::225", "code": "\r\n#include \"../platform.h\"\r\n\r\nnamespace Platform {\r\n\r\n\tvoid sleep(long seconds, long milliseconds) {} //stub\r\n\tint createWindow(char *title, int width, int height, int bpp, bool fullscreen) { return 0; }\r\n\tint closeWindow() { return 0; }\r\n\tvoid swapBuffers() {}\r\n\tvoid pump() { //do our work here...\r\n\t}\r\n\tvoid grabMouse() {}\r\n\tvoid ungrabMouse() {}\r\n\tvoid toggleGrabMouse() {}\r\n\tbool getActive() { return true; }\r\n\tvoid setActive( bool active ) {}\r\n\r\n\tvoid* getWindowHandle() { return (void*)0; }\r\n}\r\n", "code_tokens": ["č", "Ċ", "#", "include", "Ġ\"../", "platform", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "ĠPlatform", "Ġ{", "č", "Ċ", "č", "Ċ", "ĉ", "void", "Ġsleep", "(", "long", "Ġseconds", ",", "Ġlong", "Ġmilliseconds", ")", "Ġ{}", "Ġ//", "stub", "č", "Ċ", "ĉ", "int", "Ġcreate", "Window", "(", "char", "Ġ*", "title", ",", "Ġint", "Ġwidth", ",", "Ġint", "Ġheight", ",", "Ġint", "Ġbpp", ",", "Ġbool", "Ġfullscreen", ")", "Ġ{", "Ġreturn", "Ġ0", ";", "Ġ}", "č", "Ċ", "ĉ", "int", "Ġclose", "Window", "()", "Ġ{", "Ġreturn", "Ġ0", ";", "Ġ}", "č", "Ċ", "ĉ", "void", "Ġswap", "Buffers", "()", "Ġ{}", "č", "Ċ", "ĉ", "void", "Ġp", "ump", "()", "Ġ{", "Ġ//", "do", "Ġour", "Ġwork", "Ġhere", "...", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "void", "Ġgrab", "Mouse", "()", "Ġ{}", "č", "Ċ", "ĉ", "void", "Ġun", "grab", "Mouse", "()", "Ġ{}", "č", "Ċ", "ĉ", "void", "Ġtoggle", "Grab", "Mouse", "()", "Ġ{}", "č", "Ċ", "ĉ", "bool", "ĠgetActive", "()", "Ġ{", "Ġreturn", "Ġtrue", ";", "Ġ}", "č", "Ċ", "ĉ", "void", "Ġset", "Active", "(", "Ġbool", "Ġactive", "Ġ)", "Ġ{}", "č", "Ċ", "č", "Ċ", "ĉ", "void", "*", "Ġget", "Window", "Handle", "()", "Ġ{", "Ġreturn", "Ġ(", "void", "*)", "0", ";", "Ġ}", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::226", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n#include <std__vector.hpp>\n\n\nSTART_ATF_NAMESPACE\n    #pragma pack(push, 8)\n    struct CUnmannedTraderGroupDivisionVersionInfo\n    {\n        int m_iType;\n        std::vector<unsigned long> m_vecuiVersion;\n    public:\n        CUnmannedTraderGroupDivisionVersionInfo(struct CUnmannedTraderGroupDivisionVersionInfo* lhs);\n        void ctor_CUnmannedTraderGroupDivisionVersionInfo(struct CUnmannedTraderGroupDivisionVersionInfo* lhs);\n        CUnmannedTraderGroupDivisionVersionInfo(int iType, unsigned int uiMaxCnt);\n        void ctor_CUnmannedTraderGroupDivisionVersionInfo(int iType, unsigned int uiMaxCnt);\n        bool GetVersion(char byClass, unsigned int* dwVer);\n        bool IncreaseVersion(char byClass);\n        bool IsEmpty();\n        ~CUnmannedTraderGroupDivisionVersionInfo();\n        void dtor_CUnmannedTraderGroupDivisionVersionInfo();\n    };    \n    #pragma pack(pop)\n    static_assert(ATF::checkSize<CUnmannedTraderGroupDivisionVersionInfo, 48>(), \"CUnmannedTraderGroupDivisionVersionInfo\");\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "__", "vector", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġ#", "pragma", "Ġpack", "(", "push", ",", "Ġ8", ")", "Ċ", "ĠĠĠ", "Ġstruct", "ĠC", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġm", "_", "i", "Type", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "vector", "<", "unsigned", "Ġlong", ">", "Ġm", "_", "vec", "ui", "Version", ";", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠC", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "(", "struct", "ĠC", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "*", "Ġlhs", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġctor", "_", "C", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "(", "struct", "ĠC", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "*", "Ġlhs", ");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠC", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "(", "int", "Ġi", "Type", ",", "Ġunsigned", "Ġint", "Ġui", "Max", "Cnt", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġctor", "_", "C", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "(", "int", "Ġi", "Type", ",", "Ġunsigned", "Ġint", "Ġui", "Max", "Cnt", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "ĠGet", "Version", "(", "char", "Ġby", "Class", ",", "Ġunsigned", "Ġint", "*", "Ġdw", "Ver", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "ĠIncrease", "Version", "(", "char", "Ġby", "Class", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "ĠIsEmpty", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ~", "C", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġdt", "or", "_", "C", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "();", "Ċ", "ĠĠĠ", "Ġ};", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ#", "pragma", "Ġpack", "(", "pop", ")", "Ċ", "ĠĠĠ", "Ġstatic", "_", "assert", "(", "ATF", "::", "check", "Size", "<", "C", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", ",", "Ġ48", ">(),", "Ġ\"", "C", "Unm", "anned", "Tr", "ader", "Group", "Division", "VersionInfo", "\");", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::227", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n#include <_cash_discount_.hpp>\n\n\nSTART_ATF_NAMESPACE\n    namespace Info\n    {\n        \n        using _cash_discount_ctor__cash_discount_2_ptr = void (WINAPIV*)(struct _cash_discount_*);\n        using _cash_discount_ctor__cash_discount_2_clbk = void (WINAPIV*)(struct _cash_discount_*, _cash_discount_ctor__cash_discount_2_ptr);\n        \n        using _cash_discount_dtor__cash_discount_4_ptr = void (WINAPIV*)(struct _cash_discount_*);\n        using _cash_discount_dtor__cash_discount_4_clbk = void (WINAPIV*)(struct _cash_discount_*, _cash_discount_dtor__cash_discount_4_ptr);\n    }; // end namespace Info\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "_", "cash", "_", "discount", "_.", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġnamespace", "ĠInfo", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "cash", "_", "discount", "_", "ctor", "__", "cash", "_", "discount", "_", "2", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "cash", "_", "discount", "_*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "cash", "_", "discount", "_", "ctor", "__", "cash", "_", "discount", "_", "2", "_", "cl", "bk", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "cash", "_", "discount", "_", "*,", "Ġ_", "cash", "_", "discount", "_", "ctor", "__", "cash", "_", "discount", "_", "2", "_", "ptr", ");", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "cash", "_", "discount", "_", "dtor", "__", "cash", "_", "discount", "_", "4", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "cash", "_", "discount", "_*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "cash", "_", "discount", "_", "dtor", "__", "cash", "_", "discount", "_", "4", "_", "cl", "bk", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "cash", "_", "discount", "_", "*,", "Ġ_", "cash", "_", "discount", "_", "dtor", "__", "cash", "_", "discount", "_", "4", "_", "ptr", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ġ//", "Ġend", "Ġnamespace", "ĠInfo", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::228", "code": "#include <SFML/Graphics.hpp>\n#include <SFML/Audio.hpp>\n#include <iostream>\n\nint main()\n{\n    sf::RenderWindow window(sf::VideoMode(200, 200), \"Donguili\");\n\n    sf::Music sound;\n    if (!sound.openFromFile(\"C:/Users/Alpha/Documents/Donguili/bin/Debug/test.ogg\"))\n    return -1; // erreur\n    sound.play();\n\n    while (window.isOpen())\n    {\n        sf::Event event;\n        while (window.pollEvent(event))\n        {\n            if (event.type == sf::Event::Closed)\n                window.close();\n        }\n// Presse de touche\n\n     if (sf::Keyboard::isKeyPressed(sf::Keyboard::Space))\n    {\n        std::cout << \"Musique en pause\" << std::endl;\n        sound.pause();\n    }\n    if (sf::Keyboard::isKeyPressed(sf::Keyboard::P))\n    {\n        std::cout << \"Musique lancé\" << std::endl;\n         sound.play();\n     }\n\n// Fin Presse touche\n        window.clear();\n        window.display();\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "SF", "ML", "/", "Graphics", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "SF", "ML", "/", "Audio", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġsf", "::", "Render", "Window", "Ġwindow", "(", "sf", "::", "Video", "Mode", "(", "200", ",", "Ġ200", "),", "Ġ\"", "D", "ong", "u", "ili", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġsf", "::", "Music", "Ġsound", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "sound", ".", "open", "FromFile", "(\"", "C", ":/", "Users", "/", "Alpha", "/", "Documents", "/", "D", "ong", "u", "ili", "/", "bin", "/", "Debug", "/", "test", ".", "ogg", "\"))", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ-", "1", ";", "Ġ//", "Ġer", "re", "ur", "Ċ", "ĠĠĠ", "Ġsound", ".", "play", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "window", ".", "isOpen", "())", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsf", "::", "Event", "Ġevent", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "window", ".", "poll", "Event", "(", "event", "))", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "event", ".", "type", "Ġ==", "Ġsf", "::", "Event", "::", "Closed", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġwindow", ".", "close", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "//", "ĠPres", "se", "Ġde", "Ġto", "u", "che", "Ċ", "Ċ", "ĠĠĠĠ", "Ġif", "Ġ(", "sf", "::", "Keyboard", "::", "is", "Key", "Pressed", "(", "sf", "::", "Keyboard", "::", "Space", "))", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "M", "us", "ique", "Ġen", "Ġpause", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsound", ".", "pause", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "sf", "::", "Keyboard", "::", "is", "Key", "Pressed", "(", "sf", "::", "Keyboard", "::", "P", "))", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "M", "us", "ique", "Ġl", "anc", "Ã©", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġsound", ".", "play", "();", "Ċ", "ĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "//", "ĠF", "in", "ĠPres", "se", "Ġto", "u", "che", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwindow", ".", "clear", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwindow", ".", "display", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::229", "code": "#include \"hiscores.h\"\n#include \"nucleo.h\"\n#include \"galeria.h\"\n\nHi_Scores::Hi_Scores(Nucleo *nucleo) : Widget( nucleo->screen, (SDL_Rect) {200, 50, 430, 520} )\n{\n    this->nucleo = nucleo;\n    fuente = nucleo->galeria->get_fuente(CHICA2);\n    set_color(183, 238, 128);\n    refresh();\n}\n\nvoid Hi_Scores::refresh()\n{\n    static Image *fondo;\n    fondo = nucleo->galeria->get_imagen (HI_SCORES);\n\n    fondo->imprimir(widget);\n    print_scores();\n}\n\nvoid Hi_Scores::print_scores(void)\n{\n    for(int i = 0; i < WIN_LIST.size(); i++)\n    {\n        fuente->imprimir(widget, (char*) WIN_LIST[i].name.c_str(), 50, 100 + (20*i) );\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "his", "cores", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "nu", "cle", "o", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "g", "aler", "ia", ".", "h", "\"", "Ċ", "Ċ", "Hi", "_", "Scores", "::", "Hi", "_", "Scores", "(", "Nu", "cle", "o", "Ġ*", "nu", "cle", "o", ")", "Ġ:", "ĠWidget", "(", "Ġnu", "cle", "o", "->", "screen", ",", "Ġ(", "SDL", "_", "Rect", ")", "Ġ{", "200", ",", "Ġ50", ",", "Ġ4", "30", ",", "Ġ5", "20", "}", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġthis", "->", "nu", "cle", "o", "Ġ=", "Ġnu", "cle", "o", ";", "Ċ", "ĠĠĠ", "Ġfu", "ente", "Ġ=", "Ġnu", "cle", "o", "->", "g", "aler", "ia", "->", "get", "_", "fu", "ente", "(", "CH", "ICA", "2", ");", "Ċ", "ĠĠĠ", "Ġset", "_", "color", "(", "183", ",", "Ġ2", "38", ",", "Ġ128", ");", "Ċ", "ĠĠĠ", "Ġrefresh", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHi", "_", "Scores", "::", "refresh", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstatic", "ĠImage", "Ġ*", "f", "on", "do", ";", "Ċ", "ĠĠĠ", "Ġf", "on", "do", "Ġ=", "Ġnu", "cle", "o", "->", "g", "aler", "ia", "->", "get", "_", "imag", "en", "Ġ(", "HI", "_", "SCORE", "S", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġf", "on", "do", "->", "im", "prim", "ir", "(", "widget", ");", "Ċ", "ĠĠĠ", "Ġprint", "_", "scores", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHi", "_", "Scores", "::", "print", "_", "scores", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠWIN", "_", "LIST", ".", "size", "();", "Ġi", "++)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfu", "ente", "->", "im", "prim", "ir", "(", "widget", ",", "Ġ(", "char", "*)", "ĠWIN", "_", "LIST", "[", "i", "].", "name", ".", "c", "_", "str", "(),", "Ġ50", ",", "Ġ100", "Ġ+", "Ġ(", "20", "*", "i", ")", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::230", "code": "class Solution {\r\npublic:\r\n    vector<int> ori, cur;\r\n    random_device rd;\r\n    mt19937 g;\r\n    Solution(vector<int> nums) : ori(nums), cur(nums), g(rd()) {\r\n    }\r\n    \r\n    /** Resets the array to its original configuration and return it. */\r\n    vector<int> reset() {\r\n        return cur = ori;\r\n    }\r\n    \r\n    /** Returns a random shuffling of the array. */\r\n    vector<int> shuffle() {\r\n        std::shuffle(cur.begin(), cur.end(), g);\r\n        return cur;\r\n    }\r\n};\r\n\r\n/**\r\n * Your Solution object will be instantiated and called as such:\r\n * Solution obj = new Solution(nums);\r\n * vector<int> param_1 = obj.reset();\r\n * vector<int> param_2 = obj.shuffle();\r\n */", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "č", "Ċ", "public", ":", "č", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "Ġori", ",", "Ġcur", ";", "č", "Ċ", "ĠĠĠ", "Ġrandom", "_", "device", "Ġrd", ";", "č", "Ċ", "ĠĠĠ", "Ġmt", "199", "37", "Ġg", ";", "č", "Ċ", "ĠĠĠ", "ĠSolution", "(", "vector", "<", "int", ">", "Ġnums", ")", "Ġ:", "Ġori", "(", "nums", "),", "Ġcur", "(", "nums", "),", "Ġg", "(", "rd", "())", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠ", "č", "Ċ", "ĠĠĠ", "Ġ/**", "ĠRe", "sets", "Ġthe", "Ġarray", "Ġto", "Ġits", "Ġoriginal", "Ġconfiguration", "Ġand", "Ġreturn", "Ġit", ".", "Ġ*/", "č", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "Ġreset", "()", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġcur", "Ġ=", "Ġori", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠ", "č", "Ċ", "ĠĠĠ", "Ġ/**", "ĠReturns", "Ġa", "Ġrandom", "Ġsh", "uff", "ling", "Ġof", "Ġthe", "Ġarray", ".", "Ġ*/", "č", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "Ġshuffle", "()", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "shuffle", "(", "cur", ".", "begin", "(),", "Ġcur", ".", "end", "(),", "Ġg", ");", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġcur", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "};", "č", "Ċ", "č", "Ċ", "/**", "č", "Ċ", "Ġ*", "ĠYour", "ĠSolution", "Ġobject", "Ġwill", "Ġbe", "Ġinstantiated", "Ġand", "Ġcalled", "Ġas", "Ġsuch", ":", "č", "Ċ", "Ġ*", "ĠSolution", "Ġobj", "Ġ=", "Ġnew", "ĠSolution", "(", "nums", ");", "č", "Ċ", "Ġ*", "Ġvector", "<", "int", ">", "Ġparam", "_", "1", "Ġ=", "Ġobj", ".", "reset", "();", "č", "Ċ", "Ġ*", "Ġvector", "<", "int", ">", "Ġparam", "_", "2", "Ġ=", "Ġobj", ".", "shuffle", "();", "č", "Ċ", "Ġ*/"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::231", "code": "#include \"NoReturnFunctionExtractionValidator.hpp\"\n#include <cppmanip/boundary/ExtractMethodError.hpp>\n#include <boost/range/adaptor/transformed.hpp>\n#include <boost/algorithm/string/join.hpp>\n#include <boost/range/algorithm_ext/push_back.hpp>\n#include <boost/range/algorithm/sort.hpp>\n\nnamespace cppmanip\n{\n\nnamespace\n{\n\nstd::string printOrderedVariableNameList(const ast::LocalVariables& variables)\n{\n    using boost::adaptors::transformed;\n    std::vector<std::string> names;\n    boost::push_back(names, variables | transformed(std::bind(&ast::LocalVariable::getName, std::placeholders::_1)));\n    boost::sort(names);\n    return boost::algorithm::join(names, \", \");\n}\n\n}\n\nvoid NoReturnFunctionExtractionValidator::validateStatements(const std::string& functionName, ast::ScopedStatementRange selected)\n{\n    auto used = findVariablesDeclaredByAndUsedAfterStmts(selected.getRange(), selected.getScope());\n    if (!used.empty())\n        throw boundary::ExtractMethodError(\"Cannot extract \\'\" + functionName +\n            \"\\'. Following variables are in use after the selected statements: \" + printOrderedVariableNameList(used));\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "No", "Return", "Function", "Ex", "traction", "Validator", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "cpp", "manip", "/", "boundary", "/", "Extract", "Method", "Error", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "range", "/", "adapt", "or", "/", "transformed", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "algorithm", "/", "string", "/", "join", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "range", "/", "algorithm", "_", "ext", "/", "push", "_", "back", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "range", "/", "algorithm", "/", "sort", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġcpp", "manip", "Ċ", "{", "Ċ", "Ċ", "namespace", "Ċ", "{", "Ċ", "Ċ", "std", "::", "string", "Ġprint", "Ordered", "VariableName", "List", "(", "const", "Ġast", "::", "Local", "Variables", "&", "Ġvariables", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġusing", "Ġboost", "::", "adapt", "ors", "::", "transformed", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġnames", ";", "Ċ", "ĠĠĠ", "Ġboost", "::", "push", "_", "back", "(", "names", ",", "Ġvariables", "Ġ|", "Ġtransformed", "(", "std", "::", "bind", "(&", "ast", "::", "LocalVariable", "::", "getName", ",", "Ġstd", "::", "placeholders", "::_", "1", ")));", "Ċ", "ĠĠĠ", "Ġboost", "::", "sort", "(", "names", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġboost", "::", "algorithm", "::", "join", "(", "names", ",", "Ġ\",", "Ġ\");", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNo", "Return", "Function", "Ex", "traction", "Validator", "::", "validate", "Statements", "(", "const", "Ġstd", "::", "string", "&", "ĠfunctionName", ",", "Ġast", "::", "Scoped", "Statement", "Range", "Ġselected", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġauto", "Ġused", "Ġ=", "Ġfind", "Variables", "Declared", "By", "And", "Used", "After", "Stmt", "s", "(", "selected", ".", "getRange", "(),", "Ġselected", ".", "getScope", "());", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "used", ".", "empty", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthrow", "Ġboundary", "::", "Extract", "Method", "Error", "(\"", "Cannot", "Ġextract", "Ġ\\", "'\"", "Ġ+", "ĠfunctionName", "Ġ+", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\"\\", "'.", "ĠFollow", "ing", "Ġvariables", "Ġare", "Ġin", "Ġuse", "Ġafter", "Ġthe", "Ġselected", "Ġstatements", ":", "Ġ\"", "Ġ+", "Ġprint", "Ordered", "VariableName", "List", "(", "used", "));", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::232", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifndef int64\n#define int64 long long\n#endif\n\nint main() {\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n#endif\n    int64 h1, h2, a, b;\n    cin >> h1 >> h2 >> a >> b;\n\n    h1 += a * 8;\n    if (a <= b && h1 < h2) {\n        puts(\"-1\");\n    } else if (h1 >= h2) {\n        puts(\"0\");\n    } else {\n        int64 y = 12 * (a - b);\n        int64 i = (h2 - h1) / y;\n        if (h1 + i * y < h2)\n            i++;\n        cout << i << endl;\n    }\n\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "ifndef", "Ġint", "64", "Ċ", "#", "define", "Ġint", "64", "Ġlong", "Ġlong", "Ċ", "#", "endif", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "#", "ifndef", "ĠON", "LINE", "_", "J", "UD", "GE", "Ċ", "ĠĠĠ", "Ġfre", "open", "(\"", "input", ".", "txt", "\",", "Ġ\"", "r", "\",", "Ġstdin", ");", "Ċ", "#", "endif", "Ċ", "ĠĠĠ", "Ġint", "64", "Ġh", "1", ",", "Ġh", "2", ",", "Ġa", ",", "Ġb", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġh", "1", "Ġ>>", "Ġh", "2", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġh", "1", "Ġ+=", "Ġa", "Ġ*", "Ġ8", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "a", "Ġ<=", "Ġb", "Ġ&&", "Ġh", "1", "Ġ<", "Ġh", "2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġputs", "(\"-", "1", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "h", "1", "Ġ>=", "Ġh", "2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġputs", "(\"", "0", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "64", "Ġy", "Ġ=", "Ġ12", "Ġ*", "Ġ(", "a", "Ġ-", "Ġb", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "64", "Ġi", "Ġ=", "Ġ(", "h", "2", "Ġ-", "Ġh", "1", ")", "Ġ/", "Ġy", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "h", "1", "Ġ+", "Ġi", "Ġ*", "Ġy", "Ġ<", "Ġh", "2", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġi", "++;", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġi", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::233", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nvoid solve() {\n    string s; cin >> s;\n    reverse(s.begin(), s.end());\n    vector<string> pre = {\"dream\", \"dreamer\", \"erase\", \"eraser\"};\n    for (auto& x: pre) {\n        reverse(x.begin(), x.end());\n    }\n    int i = 0, n = s.size();\n    while (i < n) {\n        if (s.substr(i, 5) == pre[0] || s.substr(i, 5) == pre[2])\n            i += 5;\n        else if (s.substr(i, 6) == pre[3])\n            i += 6;\n        else if (s.substr(i, 7) == pre[1])\n            i += 7;\n        else {\n            cout << \"NO\"; return;\n        }\n    }\n    cout << \"YES\";\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    solve();\n    cout << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "void", "Ġsolve", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstring", "Ġs", ";", "Ġcin", "Ġ>>", "Ġs", ";", "Ċ", "ĠĠĠ", "Ġreverse", "(", "s", ".", "begin", "(),", "Ġs", ".", "end", "());", "Ċ", "ĠĠĠ", "Ġvector", "<", "string", ">", "Ġpre", "Ġ=", "Ġ{\"", "dream", "\",", "Ġ\"", "dream", "er", "\",", "Ġ\"", "erase", "\",", "Ġ\"", "eras", "er", "\"};", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "&", "Ġx", ":", "Ġpre", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreverse", "(", "x", ".", "begin", "(),", "Ġx", ".", "end", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġint", "Ġi", "Ġ=", "Ġ0", ",", "Ġn", "Ġ=", "Ġs", ".", "size", "();", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "i", "Ġ<", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "s", ".", "substr", "(", "i", ",", "Ġ5", ")", "Ġ==", "Ġpre", "[", "0", "]", "Ġ||", "Ġs", ".", "substr", "(", "i", ",", "Ġ5", ")", "Ġ==", "Ġpre", "[", "2", "])", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġi", "Ġ+=", "Ġ5", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "Ġ(", "s", ".", "substr", "(", "i", ",", "Ġ6", ")", "Ġ==", "Ġpre", "[", "3", "])", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġi", "Ġ+=", "Ġ6", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "Ġ(", "s", ".", "substr", "(", "i", ",", "Ġ7", ")", "Ġ==", "Ġpre", "[", "1", "])", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġi", "Ġ+=", "Ġ7", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "NO", "\";", "Ġreturn", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "YES", "\";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġios", "_", "base", "::", "sync", "_", "with", "_", "stdio", "(", "false", ");", "Ċ", "ĠĠĠ", "Ġcin", ".", "tie", "(", "NULL", ");", "Ċ", "ĠĠĠ", "Ġsolve", "();", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::234", "code": "#include <cstdio>\nint main(int argc, char** argv) {\n    printf (\"Hello World\");\n    for (int i=0; i < 10; ++i) {\n        j = i && i;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġprintf", "Ġ(\"", "Hello", "ĠWorld", "\");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "Ġ10", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġj", "Ġ=", "Ġi", "Ġ&&", "Ġi", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::235", "code": "#ifndef NNTPCHAN_LINE_HPP\n#define NNTPCHAN_LINE_HPP\n#include \"server.hpp\"\n#include <stdint.h>\n#include <sstream>\n\nnamespace nntpchan\n{\n\n/** @brief a buffered line reader */\nclass LineReader\n{\npublic:\n\n  /** @brief queue inbound data from connection */\n  void Data(const char *data, ssize_t s);\n\nprotected:\n  /** @brief handle a line from the client */\n  virtual void HandleLine(const std::string line) = 0;\n\nprivate:\n  \n  std::stringstream m_line;\n  std::string m_leftover;\n};\n}\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠNN", "TP", "CHAN", "_", "LINE", "_", "HP", "P", "Ċ", "#", "define", "ĠNN", "TP", "CHAN", "_", "LINE", "_", "HP", "P", "Ċ", "#", "include", "Ġ\"", "server", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "namespace", "Ġnn", "tp", "chan", "Ċ", "{", "Ċ", "Ċ", "/**", "Ġ@", "brief", "Ġa", "Ġbuffered", "Ġline", "Ġreader", "Ġ*/", "Ċ", "class", "ĠLine", "Reader", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ċ", "Ġ", "Ġ/**", "Ġ@", "brief", "Ġqueue", "Ġinbound", "Ġdata", "Ġfrom", "Ġconnection", "Ġ*/", "Ċ", "Ġ", "Ġvoid", "ĠData", "(", "const", "Ġchar", "Ġ*", "data", ",", "Ġssize", "_", "t", "Ġs", ");", "Ċ", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġ/**", "Ġ@", "brief", "Ġhandle", "Ġa", "Ġline", "Ġfrom", "Ġthe", "Ġclient", "Ġ*/", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "ĠHandle", "Line", "(", "const", "Ġstd", "::", "string", "Ġline", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĊ", "Ġ", "Ġstd", "::", "stringstream", "Ġm", "_", "line", ";", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġm", "_", "leftover", ";", "Ċ", "};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::236", "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nvoid separateOddsAndEvens(const vector<int>& arr, vector<int>& odds, vector<int>& evens);\nvoid printVector(const vector<int>& vec);\n\nint main() {\n\tvector<int> arrUnsplit = {1,2,3,4,5,6,7,8,9,10};\n\tvector<int> odds, evens;\n\tcout << \"main array is: \" << endl;\n\tprintVector(arrUnsplit);\n\tseparateOddsAndEvens(arrUnsplit, odds, evens);\n\tcout << \"odds is: \" << endl;\n\tprintVector(odds);\n\tcout << \"evens is: \" << endl;\n\tprintVector(evens);\n\n\treturn 0;\n}\n\nvoid separateOddsAndEvens(const vector<int>& arr, vector<int>& odds, vector<int>& evens) {\n\tint numodds = 0, numevens = 0;\n\tfor(auto& i : arr) {\n\t\tif(i % 2 == 1) {\n\t\t\tnumodds++;\n\t\t} else {\n\t\t\tnumevens++;\n\t\t}\n\t}\n\n\todds.reserve(numodds);\n\tevens.reserve(numevens);\n\tfor(auto& i : arr) {\n\t\tif(i % 2 == 1) {\n\t\t\todds.push_back(i);\n\t\t} else {\n\t\t\tevens.push_back(i);\n\t\t}\n\t}\n}\n\nvoid printVector(const vector<int>& vec) {\n\tcout << \"[\";\n\tfor(auto& i : vec) {\n\t\tcout << i << \", \";\n\t}\n\tcout << \"]\" << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġseparate", "Odd", "s", "And", "Ev", "ens", "(", "const", "Ġvector", "<", "int", ">&", "Ġarr", ",", "Ġvector", "<", "int", ">&", "Ġodd", "s", ",", "Ġvector", "<", "int", ">&", "Ġev", "ens", ");", "Ċ", "void", "Ġprint", "Vector", "(", "const", "Ġvector", "<", "int", ">&", "Ġvec", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "vector", "<", "int", ">", "Ġarr", "Un", "split", "Ġ=", "Ġ{", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "};", "Ċ", "ĉ", "vector", "<", "int", ">", "Ġodd", "s", ",", "Ġev", "ens", ";", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "main", "Ġarray", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "print", "Vector", "(", "arr", "Un", "split", ");", "Ċ", "ĉ", "separate", "Odd", "s", "And", "Ev", "ens", "(", "arr", "Un", "split", ",", "Ġodd", "s", ",", "Ġev", "ens", ");", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "odd", "s", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "print", "Vector", "(", "odd", "s", ");", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "ev", "ens", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "print", "Vector", "(", "ev", "ens", ");", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġseparate", "Odd", "s", "And", "Ev", "ens", "(", "const", "Ġvector", "<", "int", ">&", "Ġarr", ",", "Ġvector", "<", "int", ">&", "Ġodd", "s", ",", "Ġvector", "<", "int", ">&", "Ġev", "ens", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġnum", "odd", "s", "Ġ=", "Ġ0", ",", "Ġnum", "ev", "ens", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "for", "(", "auto", "&", "Ġi", "Ġ:", "Ġarr", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "(", "i", "Ġ%", "Ġ2", "Ġ==", "Ġ1", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "num", "odd", "s", "++;", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉĉ", "ĉ", "num", "ev", "ens", "++;", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "odd", "s", ".", "reserve", "(", "num", "odd", "s", ");", "Ċ", "ĉ", "ev", "ens", ".", "reserve", "(", "num", "ev", "ens", ");", "Ċ", "ĉ", "for", "(", "auto", "&", "Ġi", "Ġ:", "Ġarr", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "(", "i", "Ġ%", "Ġ2", "Ġ==", "Ġ1", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "odd", "s", ".", "push", "_", "back", "(", "i", ");", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉĉ", "ĉ", "ev", "ens", ".", "push", "_", "back", "(", "i", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġprint", "Vector", "(", "const", "Ġvector", "<", "int", ">&", "Ġvec", ")", "Ġ{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"[", "\";", "Ċ", "ĉ", "for", "(", "auto", "&", "Ġi", "Ġ:", "Ġvec", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġi", "Ġ<<", "Ġ\",", "Ġ\";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"]\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::237", "code": "#include \"log/logger.h\"\r\n#include \"log/stdoutlog.h\"\r\n//#include <windows.h>\r\n//void SetColor(unsigned short forecolor = 4, unsigned short backgroudcolor = 0)\r\n//{\r\n//\tHANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE); //»ñÈ¡»º³åÇø¾ä±ú\r\n//\tSetConsoleTextAttribute(hCon, forecolor | backgroudcolor); //ÉèÖÃÎÄ±¾¼°±³¾°É«\r\n//}\r\n\r\nint main(){\r\n\t\r\n\tLogger l;\r\n\tStdoutLogSink cl;\r\n\t\r\n\tl.Trace(\"trace .....\");\r\n\tl.Debug(\"debug --- %d\", 11);\r\n\t\r\n\tl.Info(\"info --- %d\", 11);\r\n\tl.Warn(\"warn ..yellow\");\r\n\tl.Error(\"error --- %d\", 11);\r\n\r\n\tl.Fatal(\"fatal--------------\");\r\n\treturn 0;\r\n}\r\n\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "log", "/", "logger", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "log", "/", "stdout", "log", ".", "h", "\"", "č", "Ċ", "//#", "include", "Ġ<", "windows", ".", "h", ">", "č", "Ċ", "//", "void", "ĠSet", "Color", "(", "unsigned", "Ġshort", "Ġfore", "color", "Ġ=", "Ġ4", ",", "Ġunsigned", "Ġshort", "Ġback", "gro", "ud", "color", "Ġ=", "Ġ0", ")", "č", "Ċ", "//{", "č", "Ċ", "//", "ĉ", "HANDLE", "Ġh", "Con", "Ġ=", "ĠGet", "Std", "Handle", "(", "STD", "_", "OUTPUT", "_", "HANDLE", ");", "Ġ//", "Â»", "Ã±", "Ã", "Ī", "Â", "¡", "Â»", "Âº", "Â", "³", "Ã¥", "Ãĩ", "Ã¸", "Â", "¾", "Ã¤", "Â±", "Ãº", "č", "Ċ", "//", "ĉ", "Set", "Console", "Text", "Attribute", "(", "h", "Con", ",", "Ġfore", "color", "Ġ|", "Ġback", "gro", "ud", "color", ");", "Ġ//", "Ã", "ī", "Ã¨", "Ã", "ĸ", "Ã", "ĥ", "Ãİ", "Ã", "Ħ", "Â±", "Â", "¾", "Â", "¼", "Â°", "Â±", "Â", "³", "Â", "¾", "Â°", "Ã", "ī", "Â", "«", "č", "Ċ", "//}", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(){", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "Logger", "Ġl", ";", "č", "Ċ", "ĉ", "Stdout", "Log", "Sink", "Ġcl", ";", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "l", ".", "Trace", "(\"", "trace", "Ġ...", "..", "\");", "č", "Ċ", "ĉ", "l", ".", "Debug", "(\"", "debug", "Ġ---", "Ġ%", "d", "\",", "Ġ11", ");", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "l", ".", "Info", "(\"", "info", "Ġ---", "Ġ%", "d", "\",", "Ġ11", ");", "č", "Ċ", "ĉ", "l", ".", "Warn", "(\"", "warn", "Ġ..", "yellow", "\");", "č", "Ċ", "ĉ", "l", ".", "Error", "(\"", "error", "Ġ---", "Ġ%", "d", "\",", "Ġ11", ");", "č", "Ċ", "č", "Ċ", "ĉ", "l", ".", "Fatal", "(\"", "fatal", "--------", "------", "\");", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::238", "code": "// Copyright (c) 2009-2010 Satoshi Nakamoto\n// Copyright (c) 2009-2018 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include <policy/feerate.h>\n\n#include <tinyformat.h>\n\nconst std::string CURRENCY_UNIT = \"UFO\";\n\nCFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nBytes_)\n{\n    assert(nBytes_ <= uint64_t(std::numeric_limits<int64_t>::max()));\n    int64_t nSize = int64_t(nBytes_);\n\n    if (nSize > 0)\n        nSatoshisPerK = nFeePaid * 1000 / nSize;\n    else\n        nSatoshisPerK = 0;\n}\n\nCAmount CFeeRate::GetFee(size_t nBytes_) const\n{\n    assert(nBytes_ <= uint64_t(std::numeric_limits<int64_t>::max()));\n    int64_t nSize = int64_t(nBytes_);\n\n    CAmount nFee = nSatoshisPerK * nSize / 1000;\n\n    if (nFee == 0 && nSize != 0) {\n        if (nSatoshisPerK > 0)\n            nFee = CAmount(1);\n        if (nSatoshisPerK < 0)\n            nFee = CAmount(-1);\n    }\n\n    return nFee;\n}\n\nstd::string CFeeRate::ToString() const\n{\n    return strprintf(\"%d.%08d %s/kB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2010", "ĠSat", "os", "hi", "ĠN", "ak", "am", "oto", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2018", "ĠThe", "ĠBitcoin", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠCOPY", "ING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "licenses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "policy", "/", "fe", "erate", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "tiny", "format", ".", "h", ">", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "ĠCUR", "RE", "NCY", "_", "UNIT", "Ġ=", "Ġ\"", "U", "FO", "\";", "Ċ", "Ċ", "CF", "ee", "Rate", "::", "CF", "ee", "Rate", "(", "const", "ĠCAmount", "&", "Ġn", "Fee", "Paid", ",", "Ġsize", "_", "t", "ĠnBytes", "_)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġassert", "(", "n", "Bytes", "_", "Ġ<=", "Ġuint", "64", "_", "t", "(", "std", "::", "numeric", "_", "limits", "<", "int", "64", "_", "t", ">::", "max", "()));", "Ċ", "ĠĠĠ", "Ġint", "64", "_", "t", "ĠnSize", "Ġ=", "Ġint", "64", "_", "t", "(", "n", "Bytes", "_);", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "nSize", "Ġ>", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ=", "Ġn", "Fee", "Paid", "Ġ*", "Ġ1000", "Ġ/", "ĠnSize", ";", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "CA", "mount", "ĠCF", "ee", "Rate", "::", "Get", "Fee", "(", "size", "_", "t", "ĠnBytes", "_)", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġassert", "(", "n", "Bytes", "_", "Ġ<=", "Ġuint", "64", "_", "t", "(", "std", "::", "numeric", "_", "limits", "<", "int", "64", "_", "t", ">::", "max", "()));", "Ċ", "ĠĠĠ", "Ġint", "64", "_", "t", "ĠnSize", "Ġ=", "Ġint", "64", "_", "t", "(", "n", "Bytes", "_);", "Ċ", "Ċ", "ĠĠĠ", "ĠCAmount", "Ġn", "Fee", "Ġ=", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ*", "ĠnSize", "Ġ/", "Ġ1000", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "n", "Fee", "Ġ==", "Ġ0", "Ġ&&", "ĠnSize", "Ġ!=", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "n", "Sat", "osh", "is", "Per", "K", "Ġ>", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġn", "Fee", "Ġ=", "ĠCAmount", "(", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "n", "Sat", "osh", "is", "Per", "K", "Ġ<", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġn", "Fee", "Ġ=", "ĠCAmount", "(-", "1", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġn", "Fee", ";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "ĠCF", "ee", "Rate", "::", "ToString", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstrprintf", "(\"%", "d", ".%", "08", "d", "Ġ%", "s", "/", "kB", "\",", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ/", "ĠCOIN", ",", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ%", "ĠCOIN", ",", "ĠCUR", "RE", "NCY", "_", "UNIT", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::239", "code": "#include \"problem_28.hpp\"\n\n#include <iostream>\n\nusing namespace std;\n\nint sum_for_corners_in_square(int side) {\n    return 4*side*side - 6*(side - 1);\n}\n\nTEST(problem_28, full) {\n    int sum(1);\n\n    for (int d = 3; d <= 1001; d+=2) {\n        sum += sum_for_corners_in_square(d);\n    }\n    \n    EXPECT_EQ(669171001, sum);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "problem", "_", "28", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġsum", "_", "for", "_", "corners", "_", "in", "_", "square", "(", "int", "Ġside", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ4", "*", "side", "*", "side", "Ġ-", "Ġ6", "*(", "side", "Ġ-", "Ġ1", ");", "Ċ", "}", "Ċ", "Ċ", "TEST", "(", "problem", "_", "28", ",", "Ġfull", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġsum", "(", "1", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġd", "Ġ=", "Ġ3", ";", "Ġd", "Ġ<=", "Ġ1001", ";", "Ġd", "+=", "2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsum", "Ġ+=", "Ġsum", "_", "for", "_", "corners", "_", "in", "_", "square", "(", "d", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "66", "917", "1001", ",", "Ġsum", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::240", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nint pd[110][110] = {};\n\nint choose(int a, int b) {\n  if(pd[a][b]) return pd[a][b];\n  if(a==b) return 1;\n  if(a<b) return 0;\n  if(b==0) return 1;\n  return pd[a][b] = choose(a-1,b)+choose(a-1,b-1);\n}\n\nint main () {\n  int t;\n  scanf(\"%d\", &t);\n  for(int caso = 1; caso <= t; caso++) {\n    char s[255];\n    scanf(\"%s\", s);\n    vi m(50,0), M(50,0);\n    int len = strlen(s);\n    for(int i = 0; i < len; i++) {\n      if(s[i] >= 'a' && s[i] <= 'z') m[s[i]-'a']++;\n      if(s[i] >= 'A' && s[i] <= 'Z') M[s[i]-'A']++;\n    }\n    int resp = 1;\n    for(int i = 0; i < 50; i++) {\n      int p = choose(m[i]+M[i],m[i]);\n      resp *= p;\n    }\n    printf(\"Caso #%d: %d\\n\", caso, resp-1);\n  } \n  return 0;    \n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "typedef", "Ġlong", "Ġlong", "Ġll", ";", "Ċ", "typedef", "Ġpair", "<", "int", ",", "int", ">", "Ġii", ";", "Ċ", "typedef", "Ġvector", "<", "int", ">", "Ġvi", ";", "Ċ", "typedef", "Ġvector", "<", "ii", ">", "Ġv", "ii", ";", "Ċ", "Ċ", "int", "Ġpd", "[", "110", "][", "110", "]", "Ġ=", "Ġ{};", "Ċ", "Ċ", "int", "Ġchoose", "(", "int", "Ġa", ",", "Ġint", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "(", "pd", "[", "a", "][", "b", "])", "Ġreturn", "Ġpd", "[", "a", "][", "b", "];", "Ċ", "Ġ", "Ġif", "(", "a", "==", "b", ")", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġif", "(", "a", "<", "b", ")", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġif", "(", "b", "==", "0", ")", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġreturn", "Ġpd", "[", "a", "][", "b", "]", "Ġ=", "Ġchoose", "(", "a", "-", "1", ",", "b", ")+", "choose", "(", "a", "-", "1", ",", "b", "-", "1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġt", ";", "Ċ", "Ġ", "Ġscanf", "(\"%", "d", "\",", "Ġ&", "t", ");", "Ċ", "Ġ", "Ġfor", "(", "int", "Ġcas", "o", "Ġ=", "Ġ1", ";", "Ġcas", "o", "Ġ<=", "Ġt", ";", "Ġcas", "o", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġchar", "Ġs", "[", "255", "];", "Ċ", "ĠĠĠ", "Ġscanf", "(\"%", "s", "\",", "Ġs", ");", "Ċ", "ĠĠĠ", "Ġvi", "Ġm", "(", "50", ",", "0", "),", "ĠM", "(", "50", ",", "0", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġlen", "Ġ=", "Ġstrlen", "(", "s", ");", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlen", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġif", "(", "s", "[", "i", "]", "Ġ>=", "Ġ'", "a", "'", "Ġ&&", "Ġs", "[", "i", "]", "Ġ<=", "Ġ'", "z", "')", "Ġm", "[", "s", "[", "i", "]-", "'", "a", "']++;", "Ċ", "ĠĠĠĠĠ", "Ġif", "(", "s", "[", "i", "]", "Ġ>=", "Ġ'", "A", "'", "Ġ&&", "Ġs", "[", "i", "]", "Ġ<=", "Ġ'", "Z", "')", "ĠM", "[", "s", "[", "i", "]-", "'", "A", "']++;", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġint", "Ġresp", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ50", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġint", "Ġp", "Ġ=", "Ġchoose", "(", "m", "[", "i", "]+", "M", "[", "i", "],", "m", "[", "i", "]);", "Ċ", "ĠĠĠĠĠ", "Ġresp", "Ġ*=", "Ġp", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "Cas", "o", "Ġ#%", "d", ":", "Ġ%", "d", "\\", "n", "\",", "Ġcas", "o", ",", "Ġresp", "-", "1", ");", "Ċ", "Ġ", "Ġ}", "ĠĊ", "Ġ", "Ġreturn", "Ġ0", ";", "ĠĠĠĠ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::241", "code": "#include <iostream>\n#include \"ringo.hpp\"\n\nvoid ringo () {\n\tstd::cout << \"and Ringo\" << std::endl;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ\"", "ring", "o", ".", "hpp", "\"", "Ċ", "Ċ", "void", "Ġring", "o", "Ġ()", "Ġ{", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "and", "ĠR", "ingo", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::242", "code": "#include \"include/MockIRRangeFinderSensor.h\"\n#include \"include/MockIRRangeFinderSensorMessage.h\"\n\nMockIRRangeFinderSensor::MockIRRangeFinderSensor() {\n    // Constructor\n}\n\nMockIRRangeFinderSensor::~MockIRRangeFinderSensor() {\n    // Destructor\n}\n\nvoid MockIRRangeFinderSensor::updateSensor(IMessage* msg) {\n    this->data = ((MockIRRangeFinderSensorMessage*)msg)->getData();\n    delete msg;\n}\n\ndouble MockIRRangeFinderSensor::getDistanceCM() {\n    // No-Op\n    return -1;\n}\n\nstd::string MockIRRangeFinderSensor::getData() {\n    return this->data;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "include", "/", "Mock", "IR", "Range", "Finder", "Sensor", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "include", "/", "Mock", "IR", "Range", "Finder", "Sensor", "Message", ".", "h", "\"", "Ċ", "Ċ", "Mock", "IR", "Range", "Finder", "Sensor", "::", "Mock", "IR", "Range", "Finder", "Sensor", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "ĠConstructor", "Ċ", "}", "Ċ", "Ċ", "Mock", "IR", "Range", "Finder", "Sensor", "::~", "Mock", "IR", "Range", "Finder", "Sensor", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "ĠDestructor", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMock", "IR", "Range", "Finder", "Sensor", "::", "update", "Sensor", "(", "I", "Message", "*", "Ġmsg", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "data", "Ġ=", "Ġ((", "Mock", "IR", "Range", "Finder", "Sensor", "Message", "*)", "msg", ")->", "getData", "();", "Ċ", "ĠĠĠ", "Ġdelete", "Ġmsg", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠMock", "IR", "Range", "Finder", "Sensor", "::", "get", "Distance", "CM", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "ĠNo", "-", "Op", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "ĠMock", "IR", "Range", "Finder", "Sensor", "::", "getData", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġthis", "->", "data", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::243", "code": "#include <iostream>\nusing namespace std;\nint main(int argc, char const *argv[]) {\n\n   int n= 20;\n  label:\n      cout << n << endl;\n      n--;\n    if(n > 0){\n       goto  label;\n    }\n\n  std::cout << \"endle\" << '\\n';\n\n\n  std::cout << \"string euqals: \" << (strcmp(\"hello\", \"hello\")) << '\\n';\n\n  if(strcmp(\"hello\", \"hello\") == 0){\n      printf(\"hello equals hello\\n\");\n  }\n\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġconst", "Ġ*", "argv", "[])", "Ġ{", "Ċ", "Ċ", "ĠĠ", "Ġint", "Ġn", "=", "Ġ20", ";", "Ċ", "Ġ", "Ġlabel", ":", "Ċ", "ĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġn", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠ", "Ġn", "--;", "Ċ", "ĠĠĠ", "Ġif", "(", "n", "Ġ>", "Ġ0", "){", "Ċ", "ĠĠĠĠĠĠ", "Ġgoto", "Ġ", "Ġlabel", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "end", "le", "\"", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "string", "Ġe", "uq", "als", ":", "Ġ\"", "Ġ<<", "Ġ(", "strcmp", "(\"", "hello", "\",", "Ġ\"", "hello", "\"))", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "Ċ", "Ġ", "Ġif", "(", "strcmp", "(\"", "hello", "\",", "Ġ\"", "hello", "\")", "Ġ==", "Ġ0", "){", "Ċ", "ĠĠĠĠĠ", "Ġprintf", "(\"", "hello", "Ġequals", "Ġhello", "\\", "n", "\");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::244", "code": "#include <progress_bar.hh>\n\nPROGRESS_BAR\n::\nPROGRESS_BAR(int x, int y, int w, int h, void(*opf)(void), void(*orf)(void), int ea, int ia, int l)\n:\nWIDGET(x,y,w,h,opf,orf)\n{\n    this->ext_angle = ea;\n    this->int_angle = ia;\n    this->level = l;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "progress", "_", "bar", ".", "hh", ">", "Ċ", "Ċ", "PROGRESS", "_", "BAR", "Ċ", "::", "Ċ", "PROGRESS", "_", "BAR", "(", "int", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġw", ",", "Ġint", "Ġh", ",", "Ġvoid", "(*", "op", "f", ")(", "void", "),", "Ġvoid", "(*", "or", "f", ")(", "void", "),", "Ġint", "Ġea", ",", "Ġint", "Ġia", ",", "Ġint", "Ġl", ")", "Ċ", ":", "Ċ", "WIDGET", "(", "x", ",", "y", ",", "w", ",", "h", ",", "op", "f", ",", "or", "f", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġthis", "->", "ext", "_", "angle", "Ġ=", "Ġea", ";", "Ċ", "ĠĠĠ", "Ġthis", "->", "int", "_", "angle", "Ġ=", "Ġia", ";", "Ċ", "ĠĠĠ", "Ġthis", "->", "level", "Ġ=", "Ġl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::245", "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct TreeNode {\n    int val;\n    TreeNode *left;\n    TreeNode *right;\n    TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n};\n\nclass Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {\n        if (t1 == NULL) return t2;\n        if (t2 == NULL) return t1;\n        TreeNode *root = new TreeNode(t1 -> val + t2 -> val);\n        root -> left = mergeTrees(t1 -> left, t2 -> left);\n        root -> right = mergeTrees(t1 -> right, t2 -> right);\n        return root;\n    }   \n};", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "struct", "ĠTreeNode", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġval", ";", "Ċ", "ĠĠĠ", "ĠTreeNode", "Ġ*", "left", ";", "Ċ", "ĠĠĠ", "ĠTreeNode", "Ġ*", "right", ";", "Ċ", "ĠĠĠ", "ĠTreeNode", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġleft", "(", "NULL", "),", "Ġright", "(", "NULL", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠTreeNode", "*", "Ġmerge", "Trees", "(", "TreeNode", "*", "Ġt", "1", ",", "ĠTreeNode", "*", "Ġt", "2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "t", "1", "Ġ==", "ĠNULL", ")", "Ġreturn", "Ġt", "2", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "t", "2", "Ġ==", "ĠNULL", ")", "Ġreturn", "Ġt", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠTreeNode", "Ġ*", "root", "Ġ=", "Ġnew", "ĠTreeNode", "(", "t", "1", "Ġ->", "Ġval", "Ġ+", "Ġt", "2", "Ġ->", "Ġval", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġroot", "Ġ->", "Ġleft", "Ġ=", "Ġmerge", "Trees", "(", "t", "1", "Ġ->", "Ġleft", ",", "Ġt", "2", "Ġ->", "Ġleft", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġroot", "Ġ->", "Ġright", "Ġ=", "Ġmerge", "Trees", "(", "t", "1", "Ġ->", "Ġright", ",", "Ġt", "2", "Ġ->", "Ġright", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġroot", ";", "Ċ", "ĠĠĠ", "Ġ}", "ĠĠĠ", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::246", "code": "#include <muduo/net/EventLoop.h>\n#include <muduo/net/EventLoopThread.h>\n\n#include <stdio.h>\n\nusing namespace muduo;\nusing namespace muduo::net;\n\nvoid runInThread()\n{\n  printf(\"runInThread(): pid = %d, tid = %d\\n\",\n         getpid(), CurrentThread::tid());\n}\n\nint main()\n{\n  printf(\"main(): pid = %d, tid = %d\\n\",\n         getpid(), CurrentThread::tid());\n\n  EventLoopThread loopThread;\n  EventLoop* loop = loopThread.startLoop();\n  // 异步调用runInThread，即将runInThread添加到loop对象所在IO线程，让该IO线程执行\n  loop->runInLoop(runInThread);\n  sleep(1);\n  // runAfter内部也调用了runInLoop，所以这里也是异步调用\n  loop->runAfter(2, runInThread);\n  sleep(3);\n  loop->quit();\n\n  printf(\"exit main().\\n\");\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "m", "udu", "o", "/", "net", "/", "EventLoop", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "m", "udu", "o", "/", "net", "/", "EventLoop", "Thread", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġm", "udu", "o", ";", "Ċ", "using", "Ġnamespace", "Ġm", "udu", "o", "::", "net", ";", "Ċ", "Ċ", "void", "Ġrun", "In", "Thread", "()", "Ċ", "{", "Ċ", "Ġ", "Ġprintf", "(\"", "run", "In", "Thread", "():", "Ġpid", "Ġ=", "Ġ%", "d", ",", "Ġtid", "Ġ=", "Ġ%", "d", "\\", "n", "\",", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġget", "pid", "(),", "ĠCurrent", "Thread", "::", "tid", "());", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġprintf", "(\"", "main", "():", "Ġpid", "Ġ=", "Ġ%", "d", ",", "Ġtid", "Ġ=", "Ġ%", "d", "\\", "n", "\",", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġget", "pid", "(),", "ĠCurrent", "Thread", "::", "tid", "());", "Ċ", "Ċ", "Ġ", "ĠEvent", "Loop", "Thread", "Ġloop", "Thread", ";", "Ċ", "Ġ", "ĠEvent", "Loop", "*", "Ġloop", "Ġ=", "Ġloop", "Thread", ".", "start", "Loop", "();", "Ċ", "Ġ", "Ġ//", "Ġ", "å¼Ĥ", "æŃ¥", "è°ĥçĶ¨", "run", "In", "Thread", "ï¼Į", "åį³", "å°Ĩ", "run", "In", "Thread", "æ·»åĬł", "åĪ°", "loop", "å¯¹è±¡", "æīĢ", "åľ¨", "IO", "çº¿", "ç¨ĭ", "ï¼Į", "è®", "©", "è¯¥", "IO", "çº¿", "ç¨ĭ", "æī§è¡Į", "Ċ", "Ġ", "Ġloop", "->", "run", "In", "Loop", "(", "run", "In", "Thread", ");", "Ċ", "Ġ", "Ġsleep", "(", "1", ");", "Ċ", "Ġ", "Ġ//", "Ġrun", "After", "åĨħ", "éĥ¨", "ä¹Ł", "è°ĥçĶ¨", "äºĨ", "run", "In", "Loop", "ï¼Į", "æīĢ", "ä»¥", "è¿ĻéĩĮ", "ä¹Ł", "æĺ¯", "å¼Ĥ", "æŃ¥", "è°ĥçĶ¨", "Ċ", "Ġ", "Ġloop", "->", "run", "After", "(", "2", ",", "Ġrun", "In", "Thread", ");", "Ċ", "Ġ", "Ġsleep", "(", "3", ");", "Ċ", "Ġ", "Ġloop", "->", "quit", "();", "Ċ", "Ċ", "Ġ", "Ġprintf", "(\"", "exit", "Ġmain", "().", "\\", "n", "\");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::247", "code": "#include \"peerreview/vrf.h\"\n\n#define SUBSYSTEM \"VrfExtInfoPolicy\"\n\nVrfExtInfoPolicy::VrfExtInfoPolicy(VerifiablePRNG *vprng) : ExtInfoPolicy()\n{\n  this->vprng = vprng;\n}\n\nVrfExtInfoPolicy::~VrfExtInfoPolicy()\n{\n}\n\nint VrfExtInfoPolicy::storeExtInfo(SecureHistory *history, long long followingSeq, unsigned char *buffer, unsigned int maxlen)\n{\n  int extInfoLen = vprng->storeExtInfo(buffer, maxlen);\n  if (extInfoLen > 0) {\n    unsigned char ty = EVT_VRF;\n    int ne = history->findNextEntry(&ty, 1, followingSeq);\n    if (ne >= 0) {\n      //plog(3, \"GETTING VRF @%d/%lld\", ne, followingSeq);\n      extInfoLen = history->getEntry(ne, buffer, maxlen);\n      //plog(3, \"=> %d\", extInfoLen);\n    }\n  }\n  \n  return extInfoLen;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "peer", "review", "/", "v", "rf", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠSUB", "SYSTEM", "Ġ\"", "V", "rf", "Ext", "Info", "Policy", "\"", "Ċ", "Ċ", "V", "rf", "Ext", "Info", "Policy", "::", "V", "rf", "Ext", "Info", "Policy", "(", "Ver", "ifiable", "PR", "NG", "Ġ*", "v", "pr", "ng", ")", "Ġ:", "ĠExt", "Info", "Policy", "()", "Ċ", "{", "Ċ", "Ġ", "Ġthis", "->", "v", "pr", "ng", "Ġ=", "Ġv", "pr", "ng", ";", "Ċ", "}", "Ċ", "Ċ", "V", "rf", "Ext", "Info", "Policy", "::~", "V", "rf", "Ext", "Info", "Policy", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "int", "ĠV", "rf", "Ext", "Info", "Policy", "::", "store", "Ext", "Info", "(", "Secure", "History", "Ġ*", "history", ",", "Ġlong", "Ġlong", "Ġfollowing", "Seq", ",", "Ġunsigned", "Ġchar", "Ġ*", "buffer", ",", "Ġunsigned", "Ġint", "Ġmaxlen", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġext", "Info", "Len", "Ġ=", "Ġv", "pr", "ng", "->", "store", "Ext", "Info", "(", "buffer", ",", "Ġmaxlen", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "ext", "Info", "Len", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġunsigned", "Ġchar", "Ġty", "Ġ=", "ĠEVT", "_", "VR", "F", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġne", "Ġ=", "Ġhistory", "->", "findNext", "Entry", "(&", "ty", ",", "Ġ1", ",", "Ġfollowing", "Seq", ");", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "ne", "Ġ>=", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ//", "plog", "(", "3", ",", "Ġ\"", "GET", "TING", "ĠV", "RF", "Ġ@", "%", "d", "/%", "lld", "\",", "Ġne", ",", "Ġfollowing", "Seq", ");", "Ċ", "ĠĠĠĠĠ", "Ġext", "Info", "Len", "Ġ=", "Ġhistory", "->", "getEntry", "(", "ne", ",", "Ġbuffer", ",", "Ġmaxlen", ");", "Ċ", "ĠĠĠĠĠ", "Ġ//", "plog", "(", "3", ",", "Ġ\"", "=>", "Ġ%", "d", "\",", "Ġext", "Info", "Len", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "ĠĠĊ", "Ġ", "Ġreturn", "Ġext", "Info", "Len", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::248", "code": "/**\n * @file      wavedrom.hpp\n * @author    Jeramie Vens\n * @date      March 7, 2016: Initial version\n * @brief     This is the main include for the Wavedrom C++ Library\n *\n */\n\n\n#ifndef WAVEDROM_HPP\n#define WAVEDROM_HPP\n\n#include \"../libwavedrom/group.hpp\"\n#include \"../libwavedrom/signal.hpp\"\n\n/**\n * @brief     The Wavedrom Library encases all of its code in the wavedrom namespace.\n */\nnamespace wavedrom\n{\n\n/**\n * @brief     A wavedrom object.\n * @details   The wavedrom object is the main entry point of the wavedrom\n *            library.  It encapsulates all the supported features of\n *            Wavedrom.\n */\nclass Wavedrom : public Group\n{\npublic:\n\t/**\n\t * @brief      Create a new wavedrom object.\n\t */\n\tWavedrom();\n\n\tvirtual ~Wavedrom();\n\n\t/**\n\t * @brief      Export this wavedrom object to a Wavedrom JSON format\n\t * @details    This will allocate a new c string containing a valid\n\t *             Wavedrom JSON formmated descrption of this waveform.\n\t *             The exported JSON description can be converted to an\n\t *             image using http://wavedrom.com/editor.html\n\t * @return     An allocated cstring that contains the JSON object.\n\t */\n\tchar * Export();\n};\n\n}\n\n#endif\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "file", "ĠĠĠĠĠ", "Ġw", "aved", "rom", ".", "hpp", "Ċ", "Ġ*", "Ġ@", "author", "ĠĠĠ", "ĠJ", "er", "am", "ie", "ĠV", "ens", "Ċ", "Ġ*", "Ġ@", "date", "ĠĠĠĠĠ", "ĠM", "arch", "Ġ7", ",", "Ġ2016", ":", "ĠInitial", "Ġversion", "Ċ", "Ġ*", "Ġ@", "brief", "ĠĠĠĠ", "ĠThis", "Ġis", "Ġthe", "Ġmain", "Ġinclude", "Ġfor", "Ġthe", "ĠW", "aved", "rom", "ĠC", "++", "ĠLibrary", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "Ċ", "#", "ifndef", "ĠW", "AV", "ED", "ROM", "_", "HP", "P", "Ċ", "#", "define", "ĠW", "AV", "ED", "ROM", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"../", "lib", "w", "aved", "rom", "/", "group", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "lib", "w", "aved", "rom", "/", "signal", ".", "hpp", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠĠĠĠ", "ĠThe", "ĠW", "aved", "rom", "ĠLibrary", "Ġen", "cases", "Ġall", "Ġof", "Ġits", "Ġcode", "Ġin", "Ġthe", "Ġw", "aved", "rom", "Ġnamespace", ".", "Ċ", "Ġ*/", "Ċ", "namespace", "Ġw", "aved", "rom", "Ċ", "{", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠĠĠĠ", "ĠA", "Ġw", "aved", "rom", "Ġobject", ".", "Ċ", "Ġ*", "Ġ@", "details", "ĠĠ", "ĠThe", "Ġw", "aved", "rom", "Ġobject", "Ġis", "Ġthe", "Ġmain", "Ġentry", "Ġpoint", "Ġof", "Ġthe", "Ġw", "aved", "rom", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġlibrary", ".", "Ġ", "ĠIt", "Ġencaps", "ulates", "Ġall", "Ġthe", "Ġsupported", "Ġfeatures", "Ġof", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠW", "aved", "rom", ".", "Ċ", "Ġ*/", "Ċ", "class", "ĠW", "aved", "rom", "Ġ:", "Ġpublic", "ĠGroup", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "/**", "Ċ", "ĉ", "Ġ*", "Ġ@", "brief", "ĠĠĠĠĠ", "ĠCreate", "Ġa", "Ġnew", "Ġw", "aved", "rom", "Ġobject", ".", "Ċ", "ĉ", "Ġ*/", "Ċ", "ĉ", "W", "aved", "rom", "();", "Ċ", "Ċ", "ĉ", "virtual", "Ġ~", "W", "aved", "rom", "();", "Ċ", "Ċ", "ĉ", "/**", "Ċ", "ĉ", "Ġ*", "Ġ@", "brief", "ĠĠĠĠĠ", "ĠExport", "Ġthis", "Ġw", "aved", "rom", "Ġobject", "Ġto", "Ġa", "ĠW", "aved", "rom", "ĠJSON", "Ġformat", "Ċ", "ĉ", "Ġ*", "Ġ@", "details", "ĠĠĠ", "ĠThis", "Ġwill", "Ġallocate", "Ġa", "Ġnew", "Ġc", "Ġstring", "Ġcontaining", "Ġa", "Ġvalid", "Ċ", "ĉ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠW", "aved", "rom", "ĠJSON", "Ġfor", "mm", "ated", "Ġdescr", "ption", "Ġof", "Ġthis", "Ġwave", "form", ".", "Ċ", "ĉ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠThe", "Ġexported", "ĠJSON", "Ġdescription", "Ġcan", "Ġbe", "Ġconverted", "Ġto", "Ġan", "Ċ", "ĉ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġimage", "Ġusing", "Ġhttp", "://", "w", "aved", "rom", ".", "com", "/", "editor", ".", "html", "Ċ", "ĉ", "Ġ*", "Ġ@", "return", "ĠĠĠĠ", "ĠAn", "Ġallocated", "Ġc", "string", "Ġthat", "Ġcontains", "Ġthe", "ĠJSON", "Ġobject", ".", "Ċ", "ĉ", "Ġ*/", "Ċ", "ĉ", "char", "Ġ*", "ĠExport", "();", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::249", "code": "#ifndef QRW_SKIRMISHPREPARATIONPLAYEROPTIONS_HPP\n#define QRW_SKIRMISHPREPARATIONPLAYEROPTIONS_HPP\n\n#include <string>\n\n#include \"gui/ng/window.hpp\"\n\nnamespace namelessgui\n{\nclass LineInput;\n}\n\nnamespace qrw\n{\n\nclass SkirmishPreparationPlayerOptions : public namelessgui::Window\n{\npublic:\n\tSkirmishPreparationPlayerOptions();\n\n\tSkirmishPreparationPlayerOptions(const SkirmishPreparationPlayerOptions&) = delete;\n\tSkirmishPreparationPlayerOptions& operator=(const SkirmishPreparationPlayerOptions&) = delete;\n\n\tconst std::string& getPlayerName();\n\tvoid setPlayerName(const std::string& name);\n\nprivate:\n\tnamelessgui::LineInput* playerNameInput_;\n};\n\n} // namespace qrw\n\n#endif //QRW_SKIRMISHPREPARATIONPLAYEROPTIONS_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠQ", "RW", "_", "SK", "IR", "MIS", "HP", "RE", "PAR", "ATION", "PLAYER", "OPTIONS", "_", "HP", "P", "Ċ", "#", "define", "ĠQ", "RW", "_", "SK", "IR", "MIS", "HP", "RE", "PAR", "ATION", "PLAYER", "OPTIONS", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "gui", "/", "ng", "/", "window", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġname", "less", "gui", "Ċ", "{", "Ċ", "class", "ĠLine", "Input", ";", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġq", "rw", "Ċ", "{", "Ċ", "Ċ", "class", "ĠSk", "irm", "ish", "Pre", "paration", "Player", "Options", "Ġ:", "Ġpublic", "Ġname", "less", "gui", "::", "Window", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "Sk", "irm", "ish", "Pre", "paration", "Player", "Options", "();", "Ċ", "Ċ", "ĉ", "Sk", "irm", "ish", "Pre", "paration", "Player", "Options", "(", "const", "ĠSk", "irm", "ish", "Pre", "paration", "Player", "Options", "&)", "Ġ=", "Ġdelete", ";", "Ċ", "ĉ", "Sk", "irm", "ish", "Pre", "paration", "Player", "Options", "&", "Ġoperator", "=(", "const", "ĠSk", "irm", "ish", "Pre", "paration", "Player", "Options", "&)", "Ġ=", "Ġdelete", ";", "Ċ", "Ċ", "ĉ", "const", "Ġstd", "::", "string", "&", "Ġget", "Player", "Name", "();", "Ċ", "ĉ", "void", "Ġset", "Player", "Name", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ");", "Ċ", "Ċ", "private", ":", "Ċ", "ĉ", "name", "less", "gui", "::", "Line", "Input", "*", "Ġplayer", "Name", "Input", "_;", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġq", "rw", "Ċ", "Ċ", "#", "endif", "Ġ//", "Q", "RW", "_", "SK", "IR", "MIS", "HP", "RE", "PAR", "ATION", "PLAYER", "OPTIONS", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::250", "code": "//Symbolic Property\n#ifndef _PROBMODELS_BASE_SYMBOLIC_PROPERTY_HPP_\n#define _PROBMODELS_BASE_SYMBOLIC_PROPERTY_HPP_\n\n#include <array>\n\n#include \"boost/pending/property.hpp\"\n\nnamespace probmodels {\nnamespace base {\n\n//Property must be copyable, assignable and copy constructable\ntemplate <std::size_t Len, typename Property = boost::no_property>\nclass SymbolicProperty {\n\n    static const std::size_t _array_len = Len+1;\n\npublic:\n    SymbolicProperty() {}\n    SymbolicProperty(const SymbolicProperty& prop) :\n        _label(prop._label), _prop(prop._prop) {}\n\n    inline const char* label() const { return _label; }\n\n    SymbolicProperty& operator= (const SymbolicProperty& property) {\n        std::copy(property._label, property._label+Len+1, _label);\n    }\n\nprivate:\n    std::array<char,_array_len> _label;\n    Property _prop;\n};\n\n}\n}\n\n#endif\n", "code_tokens": ["Ġ//", "Symbolic", "ĠProperty", "Ċ", "#", "ifndef", "Ġ_", "PROB", "MODE", "LS", "_", "BASE", "_", "SYMBOL", "IC", "_", "PROPERTY", "_", "HP", "P", "_", "Ċ", "#", "define", "Ġ_", "PROB", "MODE", "LS", "_", "BASE", "_", "SYMBOL", "IC", "_", "PROPERTY", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "array", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "boost", "/", "pending", "/", "property", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġprob", "models", "Ġ{", "Ċ", "namespace", "Ġbase", "Ġ{", "Ċ", "Ċ", "//", "Property", "Ġmust", "Ġbe", "Ġcopy", "able", ",", "Ġassign", "able", "Ġand", "Ġcopy", "Ġconstruct", "able", "Ċ", "template", "Ġ<", "std", "::", "size", "_", "t", "ĠLen", ",", "Ġtypename", "ĠProperty", "Ġ=", "Ġboost", "::", "no", "_", "property", ">", "Ċ", "class", "ĠSymbol", "ic", "Property", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġstatic", "Ġconst", "Ġstd", "::", "size", "_", "t", "Ġ_", "array", "_", "len", "Ġ=", "ĠLen", "+", "1", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠSymbol", "ic", "Property", "()", "Ġ{}", "Ċ", "ĠĠĠ", "ĠSymbol", "ic", "Property", "(", "const", "ĠSymbol", "ic", "Property", "&", "Ġprop", ")", "Ġ:", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "label", "(", "prop", "._", "label", "),", "Ġ_", "prop", "(", "prop", "._", "prop", ")", "Ġ{}", "Ċ", "Ċ", "ĠĠĠ", "Ġinline", "Ġconst", "Ġchar", "*", "Ġlabel", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġ_", "label", ";", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠSymbol", "ic", "Property", "&", "Ġoperator", "=", "Ġ(", "const", "ĠSymbol", "ic", "Property", "&", "Ġproperty", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "copy", "(", "property", "._", "label", ",", "Ġproperty", "._", "label", "+", "Len", "+", "1", ",", "Ġ_", "label", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġstd", "::", "array", "<", "char", ",_", "array", "_", "len", ">", "Ġ_", "label", ";", "Ċ", "ĠĠĠ", "ĠProperty", "Ġ_", "prop", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::251", "code": "/**\n * @file\t\tsingleton.hpp\n * @brief\t\tdynamic Singleton pattern design template class\n * @author\t\tByunghun Hwang<bhhwang@nsynapse.com>\n * @date \t\t2015. 8. 2\n * @details\tsingleton ÆÐÅÏ ÅÛÇÃ¸´ Å¬·¡½º\n */\n\n#ifndef _COSSB_ARCH_SINGLETON_HPP_\n#define _COSSB_ARCH_SINGLETON_HPP_\n\n#include <iostream>\n#include <utility>\n\nusing namespace std;\n\nnamespace cossb {\nnamespace arch {\n\n/**\n * @brief\tdynamic singleton design pattern\n */\ntemplate <class T>\nclass singleton {\npublic:\n\ttemplate<typename... Args>\n\tstatic T* instance(Args... args) {\n\t\tif(!_instance) {\n\t\t\t_instance = new T(std::forward<Args>(args)...);\n\t\t}\n\t\treturn _instance;\n\t}\n\tstatic void destroy() {\n\t\tif(_instance) {\n\t\t\tdelete _instance;\n\t\t\t_instance = nullptr;\n\t\t}\n\t}\n\nprotected:\n\tsingleton() {}\n\tsingleton(singleton const&) {}\n\tsingleton& operator=(singleton const&) { return *this; }\n\n\nprivate:\n\tstatic T* _instance;\n\n};\n\ntemplate <class T> T* singleton<T>::_instance = nullptr;\n\n} /* namespace arch */\n} /* namespace cossb */\n\n\n#endif /* _COSSB_ARCH_SINGLETON_HPP_ */\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "file", "ĉ", "ĉ", "singleton", ".", "hpp", "Ċ", "Ġ*", "Ġ@", "brief", "ĉ", "ĉ", "dynamic", "ĠSingleton", "Ġpattern", "Ġdesign", "Ġtemplate", "Ġclass", "Ċ", "Ġ*", "Ġ@", "author", "ĉ", "ĉ", "By", "un", "gh", "un", "ĠHw", "ang", "<", "bh", "hw", "ang", "@", "ns", "yn", "apse", ".", "com", ">", "Ċ", "Ġ*", "Ġ@", "date", "Ġĉ", "ĉ", "2015", ".", "Ġ8", ".", "Ġ2", "Ċ", "Ġ*", "Ġ@", "details", "ĉ", "singleton", "ĠÃ", "Ĩ", "Ã", "Ĳ", "Ã", "ħ", "Ã", "ı", "ĠÃ", "ħ", "Ã", "Ľ", "Ãĩ", "Ã", "ĥ", "Â", "¸", "Â", "´", "ĠÃ", "ħ", "Â", "¬", "Â·", "Â", "¡", "Â", "½", "Âº", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "Ġ_", "CO", "SS", "B", "_", "ARCH", "_", "SINGLE", "TON", "_", "HP", "P", "_", "Ċ", "#", "define", "Ġ_", "CO", "SS", "B", "_", "ARCH", "_", "SINGLE", "TON", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "namespace", "Ġco", "ssb", "Ġ{", "Ċ", "namespace", "Ġarch", "Ġ{", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĉ", "dynamic", "Ġsingleton", "Ġdesign", "Ġpattern", "Ċ", "Ġ*/", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "class", "Ġsingleton", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "template", "<", "typename", "...", "ĠArgs", ">", "Ċ", "ĉ", "static", "ĠT", "*", "Ġinstance", "(", "Args", "...", "Ġargs", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "(!_", "instance", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "_", "instance", "Ġ=", "Ġnew", "ĠT", "(", "std", "::", "forward", "<", "Args", ">(", "args", ")...", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "return", "Ġ_", "instance", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "static", "Ġvoid", "Ġdestroy", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "(_", "instance", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "delete", "Ġ_", "instance", ";", "Ċ", "ĉĉ", "ĉ", "_", "instance", "Ġ=", "Ġnullptr", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "protected", ":", "Ċ", "ĉ", "singleton", "()", "Ġ{}", "Ċ", "ĉ", "singleton", "(", "singleton", "Ġconst", "&)", "Ġ{}", "Ċ", "ĉ", "singleton", "&", "Ġoperator", "=(", "singleton", "Ġconst", "&)", "Ġ{", "Ġreturn", "Ġ*", "this", ";", "Ġ}", "Ċ", "Ċ", "Ċ", "private", ":", "Ċ", "ĉ", "static", "ĠT", "*", "Ġ_", "instance", ";", "Ċ", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "ĠT", "*", "Ġsingleton", "<", "T", ">::", "_", "instance", "Ġ=", "Ġnullptr", ";", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġarch", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġco", "ssb", "Ġ*/", "Ċ", "Ċ", "Ċ", "#", "endif", "Ġ/*", "Ġ_", "CO", "SS", "B", "_", "ARCH", "_", "SINGLE", "TON", "_", "HP", "P", "_", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::252", "code": "/*-------------------------------------------------------------------------\nThis source file is a part of Whisperwind.(GameEngine + GamePlay + GameTools)\nFor the latest info, see http://lisuyong.com\n\nCopyright (c) 2012 Suyong Li (79481268@qq.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n-------------------------------------------------------------------------*/\n\n#include \"ABTreeSceneNode.h\"\n\nnamespace Engine\n{\n\t//---------------------------------------------------------------------\n\tvoid ABTreeSceneNode::updatedAABB()\n\t{\n\t\t/// TODO!\n\t}\n\n}", "code_tokens": ["Ġ/*", "-------------------------------------------------------------------------", "Ċ", "This", "Ġsource", "Ġfile", "Ġis", "Ġa", "Ġpart", "Ġof", "ĠWh", "is", "per", "wind", ".(", "Game", "Engine", "Ġ+", "ĠGame", "Play", "Ġ+", "ĠGame", "Tools", ")", "Ċ", "For", "Ġthe", "Ġlatest", "Ġinfo", ",", "Ġsee", "Ġhttp", "://", "lis", "uy", "ong", ".", "com", "Ċ", "Ċ", "Copyright", "Ġ(", "c", ")", "Ġ2012", "ĠSu", "y", "ong", "ĠLi", "Ġ(", "79", "48", "12", "68", "@", "qq", ".", "com", ")", "Ċ", "Ċ", "Permission", "Ġis", "Ġhere", "by", "Ġgranted", ",", "Ġfree", "Ġof", "Ġcharge", ",", "Ġto", "Ġany", "Ġperson", "Ġobtain", "ing", "Ġa", "Ġcopy", "Ċ", "of", "Ġthis", "Ġsoftware", "Ġand", "Ġassociated", "Ġdocumentation", "Ġfiles", "Ġ(", "the", "Ġ\"", "Software", "\"),", "Ġto", "Ġdeal", "Ċ", "in", "Ġthe", "ĠSoftware", "Ġwithout", "Ġrestriction", ",", "Ġincluding", "Ġwithout", "Ġlimitation", "Ġthe", "Ġrights", "Ċ", "to", "Ġuse", ",", "Ġcopy", ",", "Ġmodify", ",", "Ġmerge", ",", "Ġpublish", ",", "Ġdistribute", ",", "Ġs", "ublic", "ense", ",", "Ġand", "/", "or", "Ġsell", "Ċ", "copies", "Ġof", "Ġthe", "ĠSoftware", ",", "Ġand", "Ġto", "Ġpermit", "Ġpers", "ons", "Ġto", "Ġwh", "om", "Ġthe", "ĠSoftware", "Ġis", "Ċ", "f", "urn", "ish", "ed", "Ġto", "Ġdo", "Ġso", ",", "Ġsubject", "Ġto", "Ġthe", "Ġfollowing", "Ġconditions", ":", "Ċ", "Ċ", "The", "Ġabove", "Ġcopyright", "Ġnotice", "Ġand", "Ġthis", "Ġpermission", "Ġnotice", "Ġshall", "Ġbe", "Ġincluded", "Ġin", "Ċ", "all", "Ġcopies", "Ġor", "Ġsub", "stant", "ial", "Ġport", "ions", "Ġof", "Ġthe", "ĠSoftware", ".", "Ċ", "Ċ", "THE", "ĠSOFTWARE", "ĠIS", "ĠPRO", "VID", "ED", "Ġ\"", "AS", "ĠIS", "\",", "ĠWITHOUT", "ĠWARR", "AN", "TY", "ĠOF", "ĠANY", "ĠK", "IND", ",", "ĠEX", "PRESS", "ĠOR", "Ċ", "IMP", "LIED", ",", "ĠIN", "CL", "UDING", "ĠBUT", "ĠNOT", "ĠLIMIT", "ED", "ĠTO", "ĠTHE", "ĠWARRANTIES", "ĠOF", "ĠMER", "CHAN", "TAB", "ILITY", ",", "Ċ", "F", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", "ĠAND", "ĠNON", "IN", "FR", "IN", "GE", "MENT", ".", "ĠIN", "ĠNO", "ĠEVENT", "ĠSH", "ALL", "ĠTHE", "Ċ", "AUTH", "ORS", "ĠOR", "ĠCOPY", "RIGHT", "ĠH", "OLD", "ERS", "ĠBE", "ĠLI", "ABLE", "ĠFOR", "ĠANY", "ĠCLA", "IM", ",", "ĠDA", "MAGE", "S", "ĠOR", "ĠOTHER", "Ċ", "LI", "ABILITY", ",", "ĠW", "HE", "THER", "ĠIN", "ĠAN", "ĠACTION", "ĠOF", "ĠCON", "TRACT", ",", "ĠT", "ORT", "ĠOR", "ĠOTHER", "WISE", ",", "ĠAR", "IS", "ING", "ĠFROM", ",", "Ċ", "OUT", "ĠOF", "ĠOR", "ĠIN", "ĠCONNECTION", "ĠWITH", "ĠTHE", "ĠSOFTWARE", "ĠOR", "ĠTHE", "ĠUSE", "ĠOR", "ĠOTHER", "ĠDE", "AL", "INGS", "ĠIN", "Ċ", "THE", "ĠSOFTWARE", "Ċ", "------------------------------------------------------------------------", "-*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "AB", "Tree", "Scene", "Node", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠEngine", "Ċ", "{", "Ċ", "ĉ", "//----------------------------------------------------------------", "-----", "Ċ", "ĉ", "void", "ĠAB", "Tree", "Scene", "Node", "::", "updated", "AABB", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "///", "ĠTODO", "!", "Ċ", "ĉ", "}", "Ċ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::253", "code": "#pragma once\n\n#include <gtest/gtest.h>\n\nclass HeroTest : public ::testing::Test\n{\n    // Test interface\nprotected:\n    void SetUp() override\n    {\n    }\n    void TearDown() override\n    {\n    }\n\n};\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "Ċ", "class", "ĠH", "ero", "Test", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠTest", "Ġinterface", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "Ġvoid", "ĠSetUp", "()", "Ġoverride", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġvoid", "ĠT", "earDown", "()", "Ġoverride", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::254", "code": "#include \"expression.h\"\n\n#include \"opt.h\"\n#include \"vm/instruction.h\"\n\nstd::vector<vv::vm::command> vv::ast::expression::code() const\n{\n  auto vec = generate();\n  optimize(vec);\n  return vec;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "expression", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "opt", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "vm", "/", "instruction", ".", "h", "\"", "Ċ", "Ċ", "std", "::", "vector", "<", "vv", "::", "vm", "::", "command", ">", "Ġvv", "::", "ast", "::", "expression", "::", "code", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġauto", "Ġvec", "Ġ=", "Ġgenerate", "();", "Ċ", "Ġ", "Ġoptimize", "(", "vec", ");", "Ċ", "Ġ", "Ġreturn", "Ġvec", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::255", "code": "//\n// Created by Chris Richards on 28/04/2016.\n//\n\n#include <gtest/gtest.h>\n#include <DbfTable.h>\n\nclass Dbase31TableFixture : public ::testing::Test {\nprotected:\n    virtual void SetUp() {\n        dbf_table_ = DbfTablePtr(new DbfTable(\"/Users/chrisr/Development/ClionProjects/dbf2csv/dbf_tests/fixtures/dbase_31.dbf\"));\n    }\n\n    virtual void TearDown() {\n        dbf_table_->close();\n    }\n\npublic:\n    Dbase31TableFixture() : Test() {\n    }\n\n    virtual ~Dbase31TableFixture() {\n    }\n\n    DbfTablePtr dbf_table_;\n};\n\nTEST_F(Dbase31TableFixture, good_check) {\n    EXPECT_TRUE(dbf_table_->good());\n}\n\nTEST_F(Dbase31TableFixture, has_memo_check) {\n    EXPECT_FALSE(dbf_table_->has_memo_file());\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "ĠChr", "is", "ĠRich", "ards", "Ġon", "Ġ28", "/", "04", "/", "2016", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Db", "f", "Table", ".", "h", ">", "Ċ", "Ċ", "class", "ĠD", "base", "31", "Table", "Fixture", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ġ{", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "ĠSetUp", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdb", "f", "_", "table", "_", "Ġ=", "ĠD", "bf", "Table", "Ptr", "(", "new", "ĠD", "bf", "Table", "(\"/", "Users", "/", "chr", "isr", "/", "De", "velopment", "/", "Cl", "ion", "Projects", "/", "dbf", "2", "csv", "/", "dbf", "_", "tests", "/", "fixtures", "/", "d", "base", "_", "31", ".", "dbf", "\"));", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "ĠT", "earDown", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdb", "f", "_", "table", "_->", "close", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠD", "base", "31", "Table", "Fixture", "()", "Ġ:", "ĠTest", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "D", "base", "31", "Table", "Fixture", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠD", "bf", "Table", "Ptr", "Ġdb", "f", "_", "table", "_;", "Ċ", "};", "Ċ", "Ċ", "TEST", "_", "F", "(", "D", "base", "31", "Table", "Fixture", ",", "Ġgood", "_", "check", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "TRUE", "(", "dbf", "_", "table", "_->", "good", "());", "Ċ", "}", "Ċ", "Ċ", "TEST", "_", "F", "(", "D", "base", "31", "Table", "Fixture", ",", "Ġhas", "_", "memo", "_", "check", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "FALSE", "(", "dbf", "_", "table", "_->", "has", "_", "memo", "_", "file", "());", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::256", "code": "#include \"MW_Timer.hpp\"\n\nMW_Timer::MW_Timer(double periodInSeconds): period(periodInSeconds)\n{\n\treset();\n}\n\nbool MW_Timer::get() const\n{\n\tb_mutex.lock();\n\tbool retVal = MPI::Wtime() > expirationTime;\n\tb_mutex.unlock();\n\t\n\treturn retVal;\n}\n\nvoid MW_Timer::reset()\n{\n\tb_mutex.lock();\n\texpirationTime = MPI::Wtime() + period;\n\tb_mutex.unlock();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "MW", "_", "Timer", ".", "hpp", "\"", "Ċ", "Ċ", "MW", "_", "Timer", "::", "MW", "_", "Timer", "(", "double", "Ġperiod", "InSeconds", "):", "Ġperiod", "(", "period", "InSeconds", ")", "Ċ", "{", "Ċ", "ĉ", "reset", "();", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠM", "W", "_", "Timer", "::", "get", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "b", "_", "mutex", ".", "lock", "();", "Ċ", "ĉ", "bool", "ĠretVal", "Ġ=", "ĠMPI", "::", "W", "time", "()", "Ġ>", "Ġexpiration", "Time", ";", "Ċ", "ĉ", "b", "_", "mutex", ".", "unlock", "();", "Ċ", "ĉĊ", "ĉ", "return", "ĠretVal", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠM", "W", "_", "Timer", "::", "reset", "()", "Ċ", "{", "Ċ", "ĉ", "b", "_", "mutex", ".", "lock", "();", "Ċ", "ĉ", "expiration", "Time", "Ġ=", "ĠMPI", "::", "W", "time", "()", "Ġ+", "Ġperiod", ";", "Ċ", "ĉ", "b", "_", "mutex", ".", "unlock", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::257", "code": "#include \"base/testing.h\"\n\n#include <iostream>\n\nGTEST_API_ int main(int argc, char** argv) {\n  std::cout << \"Running main() from testing_main.cc\\n\";\n  InitTest(&argc, &argv);\n  return RUN_ALL_TESTS();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "base", "/", "testing", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "G", "TEST", "_", "API", "_", "Ġint", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Running", "Ġmain", "()", "Ġfrom", "Ġtesting", "_", "main", ".", "cc", "\\", "n", "\";", "Ċ", "Ġ", "ĠInit", "Test", "(&", "argc", ",", "Ġ&", "argv", ");", "Ċ", "Ġ", "Ġreturn", "ĠRUN", "_", "ALL", "_", "TESTS", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::258", "code": "#include \"Chapter7.h\"\n#include \"Interactable.h\"\n\nbool IInteractable::CanInteract_Implementation()\n{\n\treturn true;\n}\n\nvoid IInteractable::PerformInteract_Implementation()\n{\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Chapter", "7", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Inter", "act", "able", ".", "h", "\"", "Ċ", "Ċ", "bool", "ĠI", "Inter", "act", "able", "::", "Can", "Inter", "act", "_", "Implementation", "()", "Ċ", "{", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠI", "Inter", "act", "able", "::", "Perform", "Inter", "act", "_", "Implementation", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::259", "code": "/*\n * This file is part of the Photomaton-mobile package.\n *\n * (c) Romain Lamarche\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n#include \"gphotolistcamerascommand.h\"\n\n#include \"gphoto/gphotocameracontroller.h\"\n\nGPhotoListCamerasCommand::GPhotoListCamerasCommand(QObject *parent) :\n    AbstractGPhotoCommand(parent)\n{\n}\n\nvoid GPhotoListCamerasCommand::execute(GPhotoCameraController* controller)\n{\n    QList<GPhotoCameraHandle> detectedCameras = controller->internalDetectCameras();\n\n //   emit camerasDetected(detectedCameras);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠPh", "ot", "om", "aton", "-", "mobile", "Ġpackage", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ(", "c", ")", "ĠR", "omain", "ĠL", "am", "arch", "e", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠFor", "Ġthe", "Ġfull", "Ġcopyright", "Ġand", "Ġlicense", "Ġinformation", ",", "Ġplease", "Ġview", "Ġthe", "ĠLICENSE", "Ċ", "Ġ*", "Ġfile", "Ġthat", "Ġwas", "Ġdistributed", "Ġwith", "Ġthis", "Ġsource", "Ġcode", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "g", "ph", "ot", "olist", "cam", "eras", "command", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "g", "photo", "/", "g", "ph", "ot", "oc", "amera", "controller", ".", "h", "\"", "Ċ", "Ċ", "G", "Photo", "List", "Cam", "eras", "Command", "::", "G", "Photo", "List", "Cam", "eras", "Command", "(", "QObject", "Ġ*", "parent", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠAbstract", "G", "Photo", "Command", "(", "parent", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠG", "Photo", "List", "Cam", "eras", "Command", "::", "execute", "(", "G", "Photo", "Camera", "Controller", "*", "Ġcontroller", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQList", "<", "G", "Photo", "Camera", "Handle", ">", "Ġdetected", "Cam", "eras", "Ġ=", "Ġcontroller", "->", "internal", "Detect", "Cam", "eras", "();", "Ċ", "Ċ", "Ġ//", "ĠĠ", "Ġemit", "Ġcam", "eras", "Detected", "(", "detected", "Cam", "eras", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::260", "code": "class Solution {\npublic:\n    int minMoves(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int ans = 0;\n        for(int i = 1; i < nums.size(); i++){\n            ans += nums[i] - nums[0];\n        }\n        return ans;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġint", "Ġmin", "Moves", "(", "vector", "<", "int", ">&", "Ġnums", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsort", "(", "nums", ".", "begin", "(),", "Ġnums", ".", "end", "());", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġnums", ".", "size", "();", "Ġi", "++){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġans", "Ġ+=", "Ġnums", "[", "i", "]", "Ġ-", "Ġnums", "[", "0", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġans", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::261", "code": "// Copyright 2012 Room77, Inc.\n// Author: Uygar Oztekin\n\n#include \"base/common.h\"\n\n// intercept memory allocation failures and force a stack trace\nstruct InitNewHandler {\n  static void NewHandler () {\n    cout << \"\\n*** Memory allocation Failed! About to segfault ***\" << endl;\n    // Cause a segfault.\n    void* ptr = nullptr; // Create a var to get around enabled compiler warning.\n    *static_cast<int*>(ptr) = 0;\n  }\n  InitNewHandler() { set_new_handler(InitNewHandler::NewHandler); }\n} auto_init_new_handler;\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2012", "ĠRoom", "77", ",", "ĠInc", ".", "Ċ", "//", "ĠAuthor", ":", "ĠU", "yg", "ar", "ĠO", "z", "te", "kin", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "common", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġintercept", "Ġmemory", "Ġallocation", "Ġfailures", "Ġand", "Ġforce", "Ġa", "Ġstack", "Ġtrace", "Ċ", "struct", "ĠInit", "New", "Handler", "Ġ{", "Ċ", "Ġ", "Ġstatic", "Ġvoid", "ĠNew", "Handler", "Ġ()", "Ġ{", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"\\", "n", "***", "ĠMemory", "Ġallocation", "ĠFailed", "!", "ĠAb", "out", "Ġto", "Ġseg", "fault", "Ġ***", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ//", "ĠC", "ause", "Ġa", "Ġseg", "fault", ".", "Ċ", "ĠĠĠ", "Ġvoid", "*", "Ġptr", "Ġ=", "Ġnullptr", ";", "Ġ//", "ĠCreate", "Ġa", "Ġvar", "Ġto", "Ġget", "Ġaround", "Ġenabled", "Ġcompiler", "Ġwarning", ".", "Ċ", "ĠĠĠ", "Ġ*", "static", "_", "cast", "<", "int", "*>(", "ptr", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "ĠInit", "New", "Handler", "()", "Ġ{", "Ġset", "_", "new", "_", "handler", "(", "Init", "New", "Handler", "::", "New", "Handler", ");", "Ġ}", "Ċ", "}", "Ġauto", "_", "init", "_", "new", "_", "handler", ";", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::262", "code": "//\n//  models.hpp\n//  animeloop-cli\n//\n//  Created by ShinCurry on 2017/4/3.\n//  Copyright © 2017年 ShinCurry. All rights reserved.\n//\n\n#ifndef models_hpp\n#define models_hpp\n\n#include <iostream>\n#include <opencv2/opencv.hpp>\n\nnamespace al {\n    typedef std::tuple<long, long> LoopDuration;\n    typedef std::vector<LoopDuration> LoopDurations;\n    typedef std::vector<std::string> HashVector;\n    typedef std::vector<cv::Mat> FrameVector;\n    typedef std::vector<int> CutVector;\n        \n    struct VideoInfo {\n        double fps;\n        double fourcc;\n        cv::Size size;\n        int frame_count;\n    };\n}\n\n\n#endif /* models_hpp */\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġmodels", ".", "hpp", "Ċ", "//", "Ġ", "Ġan", "ime", "loop", "-", "cli", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠSh", "in", "Cur", "ry", "Ġon", "Ġ2017", "/", "4", "/", "3", ".", "Ċ", "//", "Ġ", "ĠCopyright", "ĠÂ", "©", "Ġ2017", "å¹´", "ĠSh", "in", "Cur", "ry", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "Ġmodels", "_", "hpp", "Ċ", "#", "define", "Ġmodels", "_", "hpp", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "open", "cv", "2", "/", "open", "cv", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġal", "Ġ{", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "tuple", "<", "long", ",", "Ġlong", ">", "ĠLoop", "Duration", ";", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "vector", "<", "Loop", "Duration", ">", "ĠLoop", "Duration", "s", ";", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "ĠHash", "Vector", ";", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "vector", "<", "cv", "::", "Mat", ">", "ĠFrame", "Vector", ";", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "vector", "<", "int", ">", "ĠCut", "Vector", ";", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠ", "Ġstruct", "ĠVideo", "Info", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġfps", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġfour", "cc", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcv", "::", "Size", "Ġsize", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġframe", "_", "count", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "}", "Ċ", "Ċ", "Ċ", "#", "endif", "Ġ/*", "Ġmodels", "_", "hpp", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::263", "code": "#include <iostream>\n\n#include \"Net.h\"\n#include \"InputLayer.h\"\n#include \"ForwardLayer.h\"\n#include \"RecurrentLayer.h\"\n\nusing namespace std;\n\nint main() {\n//    arma::arma_rng::set_seed(100);\n    arma::arma_rng::set_seed_random();\n    Net net;\n\n    net.add_layer(new InputLayer(2));\n    net.add_layer(new ForwardLayer(3));\n    net.add_layer(new ForwardLayer(1));\n\n\n    TrainData<double> train_data;\n    train_data.add({{0, 0}}, {0});\n    train_data.add({{0, 1}}, {1});\n    train_data.add({{1, 0}}, {1});\n    train_data.add({{1, 1}}, {0});\n\n    net.train(std::move(train_data));\n\n    std::cout << \"{0, 0} => \" << net.predict(arma::vec({0, 0})) << std::endl;\n    std::cout << \"{0, 1} => \" << net.predict(arma::vec({0, 1})) << std::endl;\n    std::cout << \"{1, 0} => \" << net.predict(arma::vec({1, 0})) << std::endl;\n    std::cout << \"{1, 1} => \" << net.predict(arma::vec({1, 1})) << std::endl;\n\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Net", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Input", "Layer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Forward", "Layer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Re", "current", "Layer", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "//", "ĠĠĠ", "Ġarma", "::", "arma", "_", "rng", "::", "set", "_", "seed", "(", "100", ");", "Ċ", "ĠĠĠ", "Ġarma", "::", "arma", "_", "rng", "::", "set", "_", "seed", "_", "random", "();", "Ċ", "ĠĠĠ", "ĠNet", "Ġnet", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġnet", ".", "add", "_", "layer", "(", "new", "ĠInput", "Layer", "(", "2", "));", "Ċ", "ĠĠĠ", "Ġnet", ".", "add", "_", "layer", "(", "new", "ĠForward", "Layer", "(", "3", "));", "Ċ", "ĠĠĠ", "Ġnet", ".", "add", "_", "layer", "(", "new", "ĠForward", "Layer", "(", "1", "));", "Ċ", "Ċ", "Ċ", "ĠĠĠ", "ĠTrain", "Data", "<", "double", ">", "Ġtrain", "_", "data", ";", "Ċ", "ĠĠĠ", "Ġtrain", "_", "data", ".", "add", "({", "{", "0", ",", "Ġ0", "}},", "Ġ{", "0", "});", "Ċ", "ĠĠĠ", "Ġtrain", "_", "data", ".", "add", "({", "{", "0", ",", "Ġ1", "}},", "Ġ{", "1", "});", "Ċ", "ĠĠĠ", "Ġtrain", "_", "data", ".", "add", "({", "{", "1", ",", "Ġ0", "}},", "Ġ{", "1", "});", "Ċ", "ĠĠĠ", "Ġtrain", "_", "data", ".", "add", "({", "{", "1", ",", "Ġ1", "}},", "Ġ{", "0", "});", "Ċ", "Ċ", "ĠĠĠ", "Ġnet", ".", "train", "(", "std", "::", "move", "(", "train", "_", "data", "));", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"{", "0", ",", "Ġ0", "}", "Ġ=>", "Ġ\"", "Ġ<<", "Ġnet", ".", "predict", "(", "arma", "::", "vec", "({", "0", ",", "Ġ0", "}))", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"{", "0", ",", "Ġ1", "}", "Ġ=>", "Ġ\"", "Ġ<<", "Ġnet", ".", "predict", "(", "arma", "::", "vec", "({", "0", ",", "Ġ1", "}))", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"{", "1", ",", "Ġ0", "}", "Ġ=>", "Ġ\"", "Ġ<<", "Ġnet", ".", "predict", "(", "arma", "::", "vec", "({", "1", ",", "Ġ0", "}))", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"{", "1", ",", "Ġ1", "}", "Ġ=>", "Ġ\"", "Ġ<<", "Ġnet", ".", "predict", "(", "arma", "::", "vec", "({", "1", ",", "Ġ1", "}))", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::264", "code": "class Solution {\npublic:\n    bool search(vector<int>& nums, int target) {\n        int l = 0, r = nums.size() - 1;\n        if(nums.empty()) return false;\n        while(l != r && nums[l] == nums[r]) l++;\n        while(l < r) {\n            int mid = (l + r) >> 1;\n            if(nums[mid] == target) return true;\n            else if(nums[mid] > nums[r]) l = mid + 1;\n            else r = mid;\n        }\n        \n        if(l != 0 && target <= nums[l - 1] && target >= nums[0]) {\n            r = l - 1;\n            l = 0;\n        } else {\n            r = nums.size() - 1;   \n        }\n        \n        while(l < r) {\n            int mid = (l + r) >> 1;\n            if(nums[mid] == target) return true;\n            else if(nums[mid] > target) r = mid;\n            else l = mid + 1;\n        }\n        if(nums[l] == target) return true;\n        \n        return false;\n    }\n    \n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġbool", "Ġsearch", "(", "vector", "<", "int", ">&", "Ġnums", ",", "Ġint", "Ġtarget", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġl", "Ġ=", "Ġ0", ",", "Ġr", "Ġ=", "Ġnums", ".", "size", "()", "Ġ-", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "nums", ".", "empty", "())", "Ġreturn", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "l", "Ġ!=", "Ġr", "Ġ&&", "Ġnums", "[", "l", "]", "Ġ==", "Ġnums", "[", "r", "])", "Ġl", "++;", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "l", "Ġ<", "Ġr", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġmid", "Ġ=", "Ġ(", "l", "Ġ+", "Ġr", ")", "Ġ>>", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "nums", "[", "mid", "]", "Ġ==", "Ġtarget", ")", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "(", "nums", "[", "mid", "]", "Ġ>", "Ġnums", "[", "r", "])", "Ġl", "Ġ=", "Ġmid", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġr", "Ġ=", "Ġmid", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "l", "Ġ!=", "Ġ0", "Ġ&&", "Ġtarget", "Ġ<=", "Ġnums", "[", "l", "Ġ-", "Ġ1", "]", "Ġ&&", "Ġtarget", "Ġ>=", "Ġnums", "[", "0", "])", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġr", "Ġ=", "Ġl", "Ġ-", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġl", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġr", "Ġ=", "Ġnums", ".", "size", "()", "Ġ-", "Ġ1", ";", "ĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "l", "Ġ<", "Ġr", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġmid", "Ġ=", "Ġ(", "l", "Ġ+", "Ġr", ")", "Ġ>>", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "nums", "[", "mid", "]", "Ġ==", "Ġtarget", ")", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "(", "nums", "[", "mid", "]", "Ġ>", "Ġtarget", ")", "Ġr", "Ġ=", "Ġmid", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġl", "Ġ=", "Ġmid", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "nums", "[", "l", "]", "Ġ==", "Ġtarget", ")", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠ", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::265", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE78_OS_Command_Injection__wchar_t_connect_socket_execlp_82_bad.cpp\r\nLabel Definition File: CWE78_OS_Command_Injection.strings.label.xml\r\nTemplate File: sources-sink-82_bad.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 78 OS Command Injection\r\n * BadSource: connect_socket Read data using a connect socket (client side)\r\n * GoodSource: Fixed string\r\n * Sinks: execlp\r\n *    BadSink : execute command with wexeclp\r\n * Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer\r\n *\r\n * */\r\n#ifndef OMITBAD\r\n\r\n#include \"std_testcase.h\"\r\n#include \"CWE78_OS_Command_Injection__wchar_t_connect_socket_execlp_82.h\"\r\n\r\n#ifdef _WIN32\r\n#include <process.h>\r\n#define EXECLP _wexeclp\r\n#else /* NOT _WIN32 */\r\n#define EXECLP execlp\r\n#endif\r\n\r\nnamespace CWE78_OS_Command_Injection__wchar_t_connect_socket_execlp_82\r\n{\r\n\r\nvoid CWE78_OS_Command_Injection__wchar_t_connect_socket_execlp_82_bad::action(wchar_t * data)\r\n{\r\n    /* wexeclp - searches for the location of the command among\r\n     * the directories specified by the PATH environment variable */\r\n    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */\r\n    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG2, COMMAND_ARG3, NULL);\r\n}\r\n\r\n}\r\n#endif /* OMITBAD */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "78", "_", "OS", "_", "Command", "_", "Injection", "__", "wchar", "_", "t", "_", "connect", "_", "socket", "_", "exe", "clp", "_", "82", "_", "bad", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "78", "_", "OS", "_", "Command", "_", "Injection", ".", "strings", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "-", "82", "_", "bad", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ78", "ĠOS", "ĠCommand", "ĠIn", "jection", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġconnect", "_", "socket", "ĠRead", "Ġdata", "Ġusing", "Ġa", "Ġconnect", "Ġsocket", "Ġ(", "client", "Ġside", ")", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠFixed", "Ġstring", "č", "Ċ", "Ġ*", "ĠSink", "s", ":", "Ġexe", "clp", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "Ġexecute", "Ġcommand", "Ġwith", "Ġw", "exe", "clp", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ82", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġin", "Ġa", "Ġparameter", "Ġto", "Ġan", "Ġvirtual", "Ġmethod", "Ġcalled", "Ġvia", "Ġa", "Ġpointer", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "BAD", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "CWE", "78", "_", "OS", "_", "Command", "_", "Injection", "__", "wchar", "_", "t", "_", "connect", "_", "socket", "_", "exe", "clp", "_", "82", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "ifdef", "Ġ_", "WIN", "32", "č", "Ċ", "#", "include", "Ġ<", "process", ".", "h", ">", "č", "Ċ", "#", "define", "ĠEX", "E", "CL", "P", "Ġ_", "w", "exe", "clp", "č", "Ċ", "#", "else", "Ġ/*", "ĠNOT", "Ġ_", "WIN", "32", "Ġ*/", "č", "Ċ", "#", "define", "ĠEX", "E", "CL", "P", "Ġexe", "clp", "č", "Ċ", "#", "endif", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "78", "_", "OS", "_", "Command", "_", "Injection", "__", "wchar", "_", "t", "_", "connect", "_", "socket", "_", "exe", "clp", "_", "82", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "ĠCWE", "78", "_", "OS", "_", "Command", "_", "Injection", "__", "wchar", "_", "t", "_", "connect", "_", "socket", "_", "exe", "clp", "_", "82", "_", "bad", "::", "action", "(", "wchar", "_", "t", "Ġ*", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ/*", "Ġw", "exe", "clp", "Ġ-", "Ġsearches", "Ġfor", "Ġthe", "Ġlocation", "Ġof", "Ġthe", "Ġcommand", "Ġamong", "č", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġthe", "Ġdirectories", "Ġspecified", "Ġby", "Ġthe", "ĠPATH", "Ġenvironment", "Ġvariable", "Ġ*/", "č", "Ċ", "ĠĠĠ", "Ġ/*", "ĠP", "OT", "ENTIAL", "ĠF", "LA", "W", ":", "ĠExecute", "Ġcommand", "Ġwithout", "Ġvalidating", "Ġinput", "Ġpossibly", "Ġleading", "Ġto", "Ġcommand", "Ġinjection", "Ġ*/", "č", "Ċ", "ĠĠĠ", "ĠEX", "E", "CL", "P", "(", "COMMAND", "_", "INT", ",", "ĠCOMMAND", "_", "INT", ",", "ĠCOMMAND", "_", "ARG", "1", ",", "ĠCOMMAND", "_", "ARG", "2", ",", "ĠCOMMAND", "_", "ARG", "3", ",", "ĠNULL", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "BAD", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::266", "code": "/////////////////////////////////////////////////////////////////////////////\n// Name:        ExifHandler.cpp\n// Purpose:     ExifHandler class\n// Author:      Alex Thuering\n// Created:\t\t30.12.2007\n// RCS-ID:      $Id: ExifHandler.cpp,v 1.1 2007/12/30 22:45:02 ntalex Exp $\n// Copyright:   (c) Alex Thuering\n// Licence:     wxWindows licence\n/////////////////////////////////////////////////////////////////////////////\n\n#include \"ExifHandler.h\"\n#include <libexif/exif-loader.h>\n\nint ExifHandler::getOrient(wxString filename) {\n\tExifData* exifData = exif_data_new_from_file(filename.mb_str());\n\tif (!exifData)\n\t\treturn -1;\n\tif (!exif_content_get_entry(exifData->ifd[EXIF_IFD_EXIF], EXIF_TAG_EXIF_VERSION))\n\t\treturn -1;\n\tgint orient = -1;\n\tExifEntry* entry = exif_content_get_entry(exifData->ifd[EXIF_IFD_0], EXIF_TAG_ORIENTATION);\n\tif (entry) {\n\t\tExifByteOrder byteOrder = exif_data_get_byte_order(exifData);\n\t\torient = exif_get_short(entry->data, byteOrder);\n\t}\n\texif_data_unref(exifData);\n\treturn (int) orient;\n}\n", "code_tokens": ["Ġ//", "////////////////////////////////////////////////////////////////////////", "///", "Ċ", "//", "ĠName", ":", "ĠĠĠĠĠĠĠ", "ĠEx", "if", "Handler", ".", "cpp", "Ċ", "//", "ĠPurpose", ":", "ĠĠĠĠ", "ĠEx", "if", "Handler", "Ġclass", "Ċ", "//", "ĠAuthor", ":", "ĠĠĠĠĠ", "ĠA", "lex", "ĠTh", "uer", "ing", "Ċ", "//", "ĠCreated", ":", "ĉ", "ĉ", "30", ".", "12", ".", "2007", "Ċ", "//", "ĠR", "CS", "-", "ID", ":", "ĠĠĠĠĠ", "Ġ$", "Id", ":", "ĠEx", "if", "Handler", ".", "cpp", ",", "v", "Ġ1", ".", "1", "Ġ2007", "/", "12", "/", "30", "Ġ22", ":", "45", ":", "02", "Ġnt", "alex", "ĠExp", "Ġ$", "Ċ", "//", "ĠCopyright", ":", "ĠĠ", "Ġ(", "c", ")", "ĠA", "lex", "ĠTh", "uer", "ing", "Ċ", "//", "ĠLic", "ence", ":", "ĠĠĠĠ", "Ġwx", "Windows", "Ġlic", "ence", "Ċ", "/////////////////////////////////////////////////////////////////////////////", "Ċ", "Ċ", "#", "include", "Ġ\"", "Exif", "Handler", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "lib", "exif", "/", "exif", "-", "loader", ".", "h", ">", "Ċ", "Ċ", "int", "ĠEx", "if", "Handler", "::", "get", "Orient", "(", "wxString", "Ġfilename", ")", "Ġ{", "Ċ", "ĉ", "Exif", "Data", "*", "Ġexif", "Data", "Ġ=", "Ġexif", "_", "data", "_", "new", "_", "from", "_", "file", "(", "filename", ".", "mb", "_", "str", "());", "Ċ", "ĉ", "if", "Ġ(!", "exif", "Data", ")", "Ċ", "ĉ", "ĉ", "return", "Ġ-", "1", ";", "Ċ", "ĉ", "if", "Ġ(!", "exif", "_", "content", "_", "get", "_", "entry", "(", "exif", "Data", "->", "ifd", "[", "EX", "IF", "_", "IF", "D", "_", "EX", "IF", "],", "ĠEX", "IF", "_", "TAG", "_", "EX", "IF", "_", "VERSION", "))", "Ċ", "ĉ", "ĉ", "return", "Ġ-", "1", ";", "Ċ", "ĉ", "gint", "Ġorient", "Ġ=", "Ġ-", "1", ";", "Ċ", "ĉ", "Exif", "Entry", "*", "Ġentry", "Ġ=", "Ġexif", "_", "content", "_", "get", "_", "entry", "(", "exif", "Data", "->", "ifd", "[", "EX", "IF", "_", "IF", "D", "_", "0", "],", "ĠEX", "IF", "_", "TAG", "_", "ORIENTATION", ");", "Ċ", "ĉ", "if", "Ġ(", "entry", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "Exif", "ByteOrder", "Ġbyte", "Order", "Ġ=", "Ġexif", "_", "data", "_", "get", "_", "byte", "_", "order", "(", "exif", "Data", ");", "Ċ", "ĉ", "ĉ", "orient", "Ġ=", "Ġexif", "_", "get", "_", "short", "(", "entry", "->", "data", ",", "Ġbyte", "Order", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "exif", "_", "data", "_", "unref", "(", "exif", "Data", ");", "Ċ", "ĉ", "return", "Ġ(", "int", ")", "Ġorient", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::267", "code": "/*\n * ObjectReference2.cpp\n *\n *  Created on: Oct 16, 2015\n *      Author: kfulks\n */\n\n#include \"../../Concept/Reference/ObjectReference2.h\"\n\n#include <iostream>\n\n\nnamespace gitux {\n\nusing namespace std;\n\nObjectReference2::ObjectReference2() :\n\tmyRef() {\n\t// TODO Auto-generated constructor stub\n\tcout << \"ObjectReference2 constructor\" << endl;\n}\n\nObjectReference2::~ObjectReference2() {\n\t// TODO Auto-generated destructor stub\n\tcout << \"ObjectReference2 destructor\" << endl;\n}\n\nvoid ObjectReference2::SetReference(int &testRef) {\n\tmyRef = &testRef;\n}\n\nvoid ObjectReference2::ChangeReference(int &testRef) {\n\ttestRef = 2;\n}\n\nvoid ObjectReference2::PrintReference() {\n\tcout << \"ObjectReference2 value is \" << *myRef << endl;\n}\n\n} /* namespace gitux */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠObject", "Reference", "2", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠOct", "Ġ16", ",", "Ġ2015", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "Ġk", "ful", "ks", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "../../", "Concept", "/", "Reference", "/", "ObjectReference", "2", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "Ċ", "namespace", "Ġgit", "ux", "Ġ{", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "ObjectReference", "2", "::", "ObjectReference", "2", "()", "Ġ:", "Ċ", "ĉ", "my", "Ref", "()", "Ġ{", "Ċ", "ĉ", "//", "ĠTODO", "ĠAuto", "-", "generated", "Ġconstructor", "Ġstub", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "ObjectReference", "2", "Ġconstructor", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "ObjectReference", "2", "::~", "ObjectReference", "2", "()", "Ġ{", "Ċ", "ĉ", "//", "ĠTODO", "ĠAuto", "-", "generated", "Ġdestructor", "Ġstub", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "ObjectReference", "2", "Ġdestructor", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠObject", "Reference", "2", "::", "Set", "Reference", "(", "int", "Ġ&", "test", "Ref", ")", "Ġ{", "Ċ", "ĉ", "my", "Ref", "Ġ=", "Ġ&", "test", "Ref", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠObject", "Reference", "2", "::", "Change", "Reference", "(", "int", "Ġ&", "test", "Ref", ")", "Ġ{", "Ċ", "ĉ", "test", "Ref", "Ġ=", "Ġ2", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠObject", "Reference", "2", "::", "Print", "Reference", "()", "Ġ{", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "ObjectReference", "2", "Ġvalue", "Ġis", "Ġ\"", "Ġ<<", "Ġ*", "my", "Ref", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġgit", "ux", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::268", "code": "/*\r\n * main.cpp\r\n *\r\n *  Created on: 25 mar 2014\r\n *      Author: Mike\r\n */\r\n\r\n\r\n\r\n// Inclusions\r\n#include \"main.h\"\r\n\r\n// Functions\r\nvoid welcome(){\r\n\tstd::cout << \"Project Euler v\" << GLOBAL_CONST_VERSION;\r\n}\r\n\r\n// Main function\r\nint main(int argc, char *argv[]){\r\n\tif(argc <= 1){\r\n\t\tif(argc == 1){\r\n\t\t\twelcome();\r\n\t\t}\r\n\r\n\t\t// prototype\r\n\t\telse if(argc < 1){\t// -arguments\r\n\t\t\tstd::string str = argv[1];\r\n\t\t\tif(str.at(0) == '-'){\r\n\t\t\t\tif(strcmp(argv[1], \"-h\") == 0 || strcmp(argv[1], \"--help\") == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\twelcome();\r\n\t\t\t\t\tstd::cout << \"\\nAuthor: Mikael Andersson <anhility@gmail.com>\\nGithub: <http://github.com/anhility/project-euler.git>\\n\\nExample of use: \\\"euler 24\\\" -> Calculates problem #24.\";\r\n\t\t\t\t\tstd::cout << \"Arguments:\\n-i\";\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\twelcome();\r\n\t\t\t\t\tstd::cout << \"Unrecognized argument. Type -h for help.\";\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// end prototype\r\n\t}\r\n\tCTimer MainTimer;\r\n\r\n\tstd::cout << \"\\n\\033[1;4mHello World\\033[0m\";\r\n\r\n\tMainTimer.getElapsedSecs();\r\n\treturn 0;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "Ġmain", ".", "cpp", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ25", "Ġmar", "Ġ2014", "č", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "ĠM", "ike", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "//", "ĠIn", "clusions", "č", "Ċ", "#", "include", "Ġ\"", "main", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "//", "ĠFunctions", "č", "Ċ", "void", "Ġw", "elcome", "(){", "č", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Project", "ĠE", "uler", "Ġv", "\"", "Ġ<<", "ĠGLOBAL", "_", "CONST", "_", "VERSION", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//", "ĠMain", "Ġfunction", "č", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[]", "){", "č", "Ċ", "ĉ", "if", "(", "argc", "Ġ<=", "Ġ1", "){", "č", "Ċ", "ĉ", "ĉ", "if", "(", "argc", "Ġ==", "Ġ1", "){", "č", "Ċ", "ĉĉ", "ĉ", "welcome", "();", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "//", "Ġprototype", "č", "Ċ", "ĉ", "ĉ", "else", "Ġif", "(", "argc", "Ġ<", "Ġ1", "){", "ĉ", "//", "Ġ-", "arguments", "č", "Ċ", "ĉĉ", "ĉ", "std", "::", "string", "Ġstr", "Ġ=", "Ġargv", "[", "1", "];", "č", "Ċ", "ĉĉ", "ĉ", "if", "(", "str", ".", "at", "(", "0", ")", "Ġ==", "Ġ'-", "'){", "č", "Ċ", "ĉĉĉ", "ĉ", "if", "(", "strcmp", "(", "argv", "[", "1", "],", "Ġ\"-", "h", "\")", "Ġ==", "Ġ0", "Ġ||", "Ġstrcmp", "(", "argv", "[", "1", "],", "Ġ\"--", "help", "\")", "Ġ==", "Ġ0", ")", "č", "Ċ", "ĉĉĉ", "ĉ", "{", "č", "Ċ", "ĉĉĉĉ", "ĉ", "welcome", "();", "č", "Ċ", "ĉĉĉĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"\\", "n", "Author", ":", "ĠM", "ik", "ael", "ĠAn", "der", "ss", "on", "Ġ<", "an", "h", "ility", "@", "gmail", ".", "com", ">\\", "n", "Github", ":", "Ġ<", "http", "://", "github", ".", "com", "/", "an", "h", "ility", "/", "project", "-", "euler", ".", "git", ">\\", "n", "\\", "n", "Example", "Ġof", "Ġuse", ":", "Ġ\\\"", "euler", "Ġ24", "\\\"", "Ġ->", "ĠCalculates", "Ġproblem", "Ġ#", "24", ".\";", "č", "Ċ", "ĉĉĉĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Arguments", ":\\", "n", "-", "i", "\";", "č", "Ċ", "ĉĉĉĉ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "ĉĉĉ", "ĉ", "}", "č", "Ċ", "ĉĉĉ", "ĉ", "else", "{", "č", "Ċ", "ĉĉĉĉ", "ĉ", "welcome", "();", "č", "Ċ", "ĉĉĉĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Unrecognized", "Ġargument", ".", "ĠType", "Ġ-", "h", "Ġfor", "Ġhelp", ".\";", "č", "Ċ", "ĉĉĉĉ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "ĉĉĉ", "ĉ", "}", "č", "Ċ", "ĉĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "//", "Ġend", "Ġprototype", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "CT", "imer", "ĠMain", "Timer", ";", "č", "Ċ", "č", "Ċ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"\\", "n", "\\", "033", "[", "1", ";", "4", "m", "Hello", "ĠWorld", "\\", "033", "[", "0", "m", "\";", "č", "Ċ", "č", "Ċ", "ĉ", "Main", "Timer", ".", "get", "Elapsed", "Secs", "();", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::269", "code": "#include \"person.h\"\n\nPerson::Person()\n{\n    hunger=0;\n    toilet=0;\n    WaitForDo=0;\n}\n\n\n\nvoid Person::AddToDo(Deal todo, float time)\n{\n    ToDoList.append(qMakePair(todo,time));\n    if (WaitForDo==0) WaitForDo=time;\n}\n\nvoid Person::CheckDeal()\n{\n    WaitForDo-=1;\n    if (WaitForDo<0)\n    {\n        if (!ToDoList.isEmpty())\n        {\n           ToDoList.removeFirst();\n           while(true)\n           {\n               if((WaitForDo+ToDoList.at(0).second)>0) break;\n               if (!ToDoList.isEmpty()) ToDoList.removeFirst();\n           }\n        }\n        else WaitForDo=0;\n    }\n}\n\nDeal::Deal()\n{\n    name=\"noname\";\n    timeToDeal=0;\n}\n\nDeal::Deal(int time, QString n)\n{\n    name=n;\n    timeToDeal=time;\n}\n\nbool Deal::Execution()\n{\n    return true;\n}\n\nDeal Person::Eat(float NutritionalValue, float timeToEat)\n{\n    hunger-=NutritionalValue;\n    Deal noname(1,\"n\");\n    return noname;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "person", ".", "h", "\"", "Ċ", "Ċ", "Person", "::", "Person", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġh", "un", "ger", "=", "0", ";", "Ċ", "ĠĠĠ", "Ġto", "ile", "t", "=", "0", ";", "Ċ", "ĠĠĠ", "ĠWaitFor", "Do", "=", "0", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ", "void", "ĠPerson", "::", "AddTo", "Do", "(", "De", "al", "Ġtodo", ",", "Ġfloat", "Ġtime", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠTo", "Do", "List", ".", "append", "(", "q", "Make", "Pair", "(", "todo", ",", "time", "));", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "WaitFor", "Do", "==", "0", ")", "ĠWaitFor", "Do", "=", "time", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPerson", "::", "Check", "De", "al", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠWaitFor", "Do", "-=", "1", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "WaitFor", "Do", "<", "0", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "ToDo", "List", ".", "isEmpty", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "ĠTo", "Do", "List", ".", "remove", "First", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "Ġwhile", "(", "true", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "((", "WaitFor", "Do", "+", "ToDo", "List", ".", "at", "(", "0", ").", "second", ")>", "0", ")", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "ToDo", "List", ".", "isEmpty", "())", "ĠTo", "Do", "List", ".", "remove", "First", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "ĠWaitFor", "Do", "=", "0", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "De", "al", "::", "De", "al", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġname", "=\"", "non", "ame", "\";", "Ċ", "ĠĠĠ", "Ġtime", "To", "De", "al", "=", "0", ";", "Ċ", "}", "Ċ", "Ċ", "De", "al", "::", "De", "al", "(", "int", "Ġtime", ",", "ĠQString", "Ġn", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġname", "=", "n", ";", "Ċ", "ĠĠĠ", "Ġtime", "To", "De", "al", "=", "time", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠDe", "al", "::", "Execution", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "De", "al", "ĠPerson", "::", "E", "at", "(", "float", "ĠN", "utr", "itional", "Value", ",", "Ġfloat", "Ġtime", "To", "E", "at", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġh", "un", "ger", "-=", "N", "utr", "itional", "Value", ";", "Ċ", "ĠĠĠ", "ĠDe", "al", "Ġnon", "ame", "(", "1", ",\"", "n", "\");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnon", "ame", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::270", "code": "// Copyright (C) 2012-2016 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n//\n// { dg-do run { target c++11 xfail *-*-* } }\n// { dg-require-debug-mode \"\" }\n\n#include <set>\n\nvoid test01()\n{\n  std::set<int> s1;\n  auto it1 = s1.begin();\n  it1 = std::move(it1);\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "2016", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġrun", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġx", "fail", "Ġ*", "-*-*", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "debug", "-", "mode", "Ġ\"\"", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "set", "<", "int", ">", "Ġs", "1", ";", "Ċ", "Ġ", "Ġauto", "Ġit", "1", "Ġ=", "Ġs", "1", ".", "begin", "();", "Ċ", "Ġ", "Ġit", "1", "Ġ=", "Ġstd", "::", "move", "(", "it", "1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::271", "code": "/****************************************************************************\n** Resource object code\n**\n** Created: Tue May 21 13:17:21 2013\n**      by: The Resource Compiler for Qt version 4.8.2\n**\n** WARNING! All changes made in this file will be lost!\n*****************************************************************************/\n\n#include <QtCore/qglobal.h>\n\nQT_BEGIN_NAMESPACE\n\nQT_END_NAMESPACE\n\n\nint QT_MANGLE_NAMESPACE(qInitResources_teamworkpmtimer)()\n{\n    return 1;\n}\n\nQ_CONSTRUCTOR_FUNCTION(QT_MANGLE_NAMESPACE(qInitResources_teamworkpmtimer))\n\nint QT_MANGLE_NAMESPACE(qCleanupResources_teamworkpmtimer)()\n{\n    return 1;\n}\n\nQ_DESTRUCTOR_FUNCTION(QT_MANGLE_NAMESPACE(qCleanupResources_teamworkpmtimer))\n\n", "code_tokens": ["Ġ/", "************************************************************************", "****", "Ċ", "**", "ĠResource", "Ġobject", "Ġcode", "Ċ", "**", "Ċ", "**", "ĠCreated", ":", "ĠT", "ue", "ĠMay", "Ġ21", "Ġ13", ":", "17", ":", "21", "Ġ2013", "Ċ", "**", "ĠĠĠĠĠ", "Ġby", ":", "ĠThe", "ĠResource", "ĠCompiler", "Ġfor", "ĠQt", "Ġversion", "Ġ4", ".", "8", ".", "2", "Ċ", "**", "Ċ", "**", "ĠWARNING", "!", "ĠAll", "Ġchanges", "Ġmade", "Ġin", "Ġthis", "Ġfile", "Ġwill", "Ġbe", "Ġlost", "!", "Ċ", "************************************************************************", "*****/", "Ċ", "Ċ", "#", "include", "Ġ<", "Qt", "Core", "/", "q", "global", ".", "h", ">", "Ċ", "Ċ", "QT", "_", "BEGIN", "_", "NAMESPACE", "Ċ", "Ċ", "QT", "_", "END", "_", "NAMESPACE", "Ċ", "Ċ", "Ċ", "int", "ĠQT", "_", "MA", "NG", "LE", "_", "NAMESPACE", "(", "q", "Init", "Resources", "_", "team", "work", "pmt", "imer", ")()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "Q", "_", "CONSTRUCTOR", "_", "FUNCTION", "(", "QT", "_", "MA", "NG", "LE", "_", "NAMESPACE", "(", "q", "Init", "Resources", "_", "team", "work", "pmt", "imer", "))", "Ċ", "Ċ", "int", "ĠQT", "_", "MA", "NG", "LE", "_", "NAMESPACE", "(", "q", "Cleanup", "Resources", "_", "team", "work", "pmt", "imer", ")()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "Q", "_", "DE", "STR", "UCTOR", "_", "FUNCTION", "(", "QT", "_", "MA", "NG", "LE", "_", "NAMESPACE", "(", "q", "Cleanup", "Resources", "_", "team", "work", "pmt", "imer", "))", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::272", "code": "#include <iostream>\n#include <cstring>\n#define  MAXN 40\n\nstruct Node\n{\n    int volume;\n    int weight;\n} ;\n\nusing namespace std;\n\nNode test[MAXN];\nint Max[MAXN];\nint limit, number;\n\nint dp( int );\n\nint main( void )\n{\n    cout << \"Please iuput number: \";\n    cin >> number;\n    cout << \"Please input limit volume: \";\n    cin >> limit;\n    cout << \"Please input volume and weight:\" << endl;\n    for ( int i = 0; i < number; i++ ){\n        cin >> test[i].volume >> test[i].weight;\n    }\n    memset( Max, -1, sizeof( Max ) );\n    cout << dp( limit ) << endl;\n\n    return 0;\n}\nint dp( int n )\n{\n    int &ans = Max[n];\n    if ( ans != -1 ){\n        return ans;\n    }\n    ans = 0;\n    for ( int i = 1; i <= n; i++ ){\n        for ( int j = 0; j < number; j++ ){\n            if ( i >= test[j].volume ){\n                int temp = dp( i - test[j].volume ) + test[j].weight;\n                ans = ans > temp ? ans : temp;\n            }\n        }\n    }\n    return ans;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "#", "define", "Ġ", "ĠMAX", "N", "Ġ40", "Ċ", "Ċ", "struct", "ĠNode", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġvolume", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġweight", ";", "Ċ", "}", "Ġ;", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Node", "Ġtest", "[", "MAX", "N", "];", "Ċ", "int", "ĠMax", "[", "MAX", "N", "];", "Ċ", "int", "Ġlimit", ",", "Ġnumber", ";", "Ċ", "Ċ", "int", "Ġdp", "(", "Ġint", "Ġ);", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġvoid", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "Please", "Ġi", "up", "ut", "Ġnumber", ":", "Ġ\";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġnumber", ";", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "Please", "Ġinput", "Ġlimit", "Ġvolume", ":", "Ġ\";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġlimit", ";", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "Please", "Ġinput", "Ġvolume", "Ġand", "Ġweight", ":\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnumber", ";", "Ġi", "++", "Ġ){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġtest", "[", "i", "].", "volume", "Ġ>>", "Ġtest", "[", "i", "].", "weight", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġmemset", "(", "ĠMax", ",", "Ġ-", "1", ",", "Ġsizeof", "(", "ĠMax", "Ġ)", "Ġ);", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġdp", "(", "Ġlimit", "Ġ)", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "int", "Ġdp", "(", "Ġint", "Ġn", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġ&", "ans", "Ġ=", "ĠMax", "[", "n", "];", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Ġans", "Ġ!=", "Ġ-", "1", "Ġ){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġans", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "Ġint", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++", "Ġ){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "Ġint", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġnumber", ";", "Ġj", "++", "Ġ){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "Ġi", "Ġ>=", "Ġtest", "[", "j", "].", "volume", "Ġ){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġtemp", "Ġ=", "Ġdp", "(", "Ġi", "Ġ-", "Ġtest", "[", "j", "].", "volume", "Ġ)", "Ġ+", "Ġtest", "[", "j", "].", "weight", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġans", "Ġ=", "Ġans", "Ġ>", "Ġtemp", "Ġ?", "Ġans", "Ġ:", "Ġtemp", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġans", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::273", "code": "class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        const int n = nums.size();\n        if (n == 1) return nums[0];\n        int result = nums[0];\n        for (int i = 1; i < n; ++i){\n            result ^= nums[i];\n        }\n        return result;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġint", "Ġsingle", "Number", "(", "vector", "<", "int", ">&", "Ġnums", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġint", "Ġn", "Ġ=", "Ġnums", ".", "size", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "n", "Ġ==", "Ġ1", ")", "Ġreturn", "Ġnums", "[", "0", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġresult", "Ġ=", "Ġnums", "[", "0", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", "){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġresult", "Ġ^=", "Ġnums", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġresult", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::274", "code": "#include <cmath>\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int num = 4.4;\n    cout << ceil(num) << endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġnum", "Ġ=", "Ġ4", ".", "4", ";", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġceil", "(", "num", ")", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::275", "code": "#include <iostream>\n#include \"DVB.hh\"\n\nint main(int argc, char **argv)\n{\n        ifstream con(argv[1]);\t\n\tDVB dvbd(-1);\n\tcon >> dvbd;\n\n\t//\tdvbd.set_outtype(VDR_OUT);\n\tcout << dvbd;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ\"", "DVB", ".", "hh", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ċ", "{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "stream", "Ġcon", "(", "argv", "[", "1", "]);", "ĉĊ", "ĉ", "DVB", "Ġdvb", "d", "(-", "1", ");", "Ċ", "ĉ", "con", "Ġ>>", "Ġdvb", "d", ";", "Ċ", "Ċ", "ĉ", "//", "ĉ", "dvb", "d", ".", "set", "_", "out", "type", "(", "V", "DR", "_", "OUT", ");", "Ċ", "ĉ", "cout", "Ġ<<", "Ġdvb", "d", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::276", "code": "#ifndef QGOOGLEAUTHENTICATOR_H\n#define QGOOGLEAUTHENTICATOR_H\n\n#include \"qgoogleauthenticator_global.h\"\n\n#include <QDateTime>\n#include <QtEndian>\n#include \"base32.h\"\n#include \"hmac.h\"\n\n#define SECRET_LENGTH 16\n#define VERIFICATION_CODE_MODULUS (1000*1000) // Six digits\n\nclass QGOOGLEAUTHENTICATORSHARED_EXPORT QGoogleAuthenticator\n{\npublic:\n    static QString getCode(QByteArray secret, quint64 time = 0);\n    static bool checkCode(QString code, QByteArray secret);\n    static QByteArray generate_secret();\n};\n\n#endif // QGOOGLEAUTHENTICATOR_H\n", "code_tokens": ["Ġ#", "ifndef", "ĠQ", "GO", "OG", "LE", "AUTHENT", "IC", "ATOR", "_", "H", "Ċ", "#", "define", "ĠQ", "GO", "OG", "LE", "AUTHENT", "IC", "ATOR", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ\"", "q", "google", "auth", "enticator", "_", "global", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "DateTime", ">", "Ċ", "#", "include", "Ġ<", "Qt", "Endian", ">", "Ċ", "#", "include", "Ġ\"", "base", "32", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "hmac", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠSEC", "RET", "_", "LENGTH", "Ġ16", "Ċ", "#", "define", "ĠVER", "IFICATION", "_", "CODE", "_", "MOD", "UL", "US", "Ġ(", "1000", "*", "1000", ")", "Ġ//", "ĠS", "ix", "Ġdigits", "Ċ", "Ċ", "class", "ĠQ", "GO", "OG", "LE", "AUTHENT", "IC", "ATOR", "SHARED", "_", "EXPORT", "ĠQ", "Google", "Authenticator", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġstatic", "ĠQString", "ĠgetCode", "(", "QByteArray", "Ġsecret", ",", "Ġquint", "64", "Ġtime", "Ġ=", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġstatic", "Ġbool", "Ġcheck", "Code", "(", "QString", "Ġcode", ",", "ĠQByteArray", "Ġsecret", ");", "Ċ", "ĠĠĠ", "Ġstatic", "ĠQByteArray", "Ġgenerate", "_", "secret", "();", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠQ", "GO", "OG", "LE", "AUTHENT", "IC", "ATOR", "_", "H", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::277", "code": "//Copyright (c) 2008-2010 Emil Dotchevski and Reverge Studios, Inc.\r\n\r\n//Distributed under the Boost Software License, Version 1.0. (See accompanying\r\n//file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n\r\n#include <boost/qvm/q_access.hpp>\r\n#include <boost/qvm/v_access.hpp>\r\n\r\nstruct my_quat { };\r\n\r\nnamespace\r\nboost\r\n    {\r\n    namespace\r\n    qvm\r\n        {\r\n        template <>\r\n        struct\r\n        q_traits<my_quat>\r\n            {\r\n            typedef int scalar_type;\r\n            template <int I> static int r( my_quat const & );\r\n            template <int I> static int & w( my_quat & );\r\n            };\r\n        }\r\n    }\r\n\r\nint\r\nmain()\r\n    {\r\n    using namespace boost::qvm;\r\n    my_quat const q=my_quat();\r\n    q%V%A<3>();\r\n    return 1;\r\n    }\r\n", "code_tokens": ["Ġ//", "Copyright", "Ġ(", "c", ")", "Ġ2008", "-", "2010", "ĠEm", "il", "ĠDot", "che", "v", "ski", "Ġand", "ĠRe", "ver", "ge", "ĠSt", "ud", "ios", ",", "ĠInc", ".", "č", "Ċ", "č", "Ċ", "//", "Distributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġac", "company", "ing", "č", "Ċ", "//", "file", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "q", "vm", "/", "q", "_", "access", ".", "hpp", ">", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "q", "vm", "/", "v", "_", "access", ".", "hpp", ">", "č", "Ċ", "č", "Ċ", "struct", "Ġmy", "_", "quat", "Ġ{", "Ġ};", "č", "Ċ", "č", "Ċ", "namespace", "č", "Ċ", "boost", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġnamespace", "č", "Ċ", "ĠĠĠ", "Ġq", "vm", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtemplate", "Ġ<>", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstruct", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġq", "_", "traits", "<", "my", "_", "quat", ">", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtypedef", "Ġint", "Ġscalar", "_", "type", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtemplate", "Ġ<", "int", "ĠI", ">", "Ġstatic", "Ġint", "Ġr", "(", "Ġmy", "_", "quat", "Ġconst", "Ġ&", "Ġ);", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtemplate", "Ġ<", "int", "ĠI", ">", "Ġstatic", "Ġint", "Ġ&", "Ġw", "(", "Ġmy", "_", "quat", "Ġ&", "Ġ);", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ};", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "int", "č", "Ċ", "main", "()", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġusing", "Ġnamespace", "Ġboost", "::", "q", "vm", ";", "č", "Ċ", "ĠĠĠ", "Ġmy", "_", "quat", "Ġconst", "Ġq", "=", "my", "_", "quat", "();", "č", "Ċ", "ĠĠĠ", "Ġq", "%", "V", "%", "A", "<", "3", ">();", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ1", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::278", "code": "//BE NAME DOOST\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <set>\n#include <iostream>\nusing namespace std;\n\n\nint main()\n{\n\tstring a,b;\n\tcin>>a>>b;\n\tset <char> d;\n\tfor(int i=0;i<a.size();i++)\n\t\td.insert(a[i]);\n\tint B=0,C=0;\n\tfor(int i=0;i<b.size();i++)\n\t{\n\t\tif(a[i]==b[i])\n\t\t\tB++;\n\t\telse\n\t\t{\n\t\t\tset <char> tmp=d;\n\t\t\tint s=tmp.size();\n\t\t\ttmp.insert(b[i]);\n\t\t\tif(s==tmp.size())\n\t\t\t\tC++;\n\t\t}\n\t}\n\tcout<<B<<\" \"<<C;\n}\n", "code_tokens": ["Ġ//", "BE", "ĠNAME", "ĠDO", "OST", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "string", "Ġa", ",", "b", ";", "Ċ", "ĉ", "cin", ">>", "a", ">>", "b", ";", "Ċ", "ĉ", "set", "Ġ<", "char", ">", "Ġd", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "a", ".", "size", "();", "i", "++)", "Ċ", "ĉ", "ĉ", "d", ".", "insert", "(", "a", "[", "i", "]);", "Ċ", "ĉ", "int", "ĠB", "=", "0", ",", "C", "=", "0", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "b", ".", "size", "();", "i", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "(", "a", "[", "i", "]==", "b", "[", "i", "])", "Ċ", "ĉĉ", "ĉ", "B", "++;", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "set", "Ġ<", "char", ">", "Ġtmp", "=", "d", ";", "Ċ", "ĉĉ", "ĉ", "int", "Ġs", "=", "tmp", ".", "size", "();", "Ċ", "ĉĉ", "ĉ", "tmp", ".", "insert", "(", "b", "[", "i", "]);", "Ċ", "ĉĉ", "ĉ", "if", "(", "s", "==", "tmp", ".", "size", "())", "Ċ", "ĉĉĉ", "ĉ", "C", "++;", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "cout", "<<", "B", "<<\"", "Ġ\"<<", "C", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::279", "code": "#include \"pessoa_cpp.hpp\"\n\nPessoa::Pessoa() {\n}\n\nPessoa::Pessoa(QString nome, int idade, float altura) {\n    this->setNome(nome);\n    this->idade = idade;\n    this->altura = altura;\n}\n\nPessoa::~Pessoa() {\n    qDebug() << \"Deletando a pessoa \" << this;\n}\n\nvoid Pessoa::setNome(QString nome) {\n    this->nome = nome + \"Foi!\";\n}\n\nvoid Pessoa::setIdade(int idade) {\n    this->idade = idade;\n}\n\nvoid Pessoa::setAltura(float altura) {\n    this->altura = altura;\n}\n\nPessoa * Pessoa::casar(const Pessoa * other) {\n    Pessoa * resultado = new Pessoa(this->nome + other->nome,\n                                    this->idade + other->idade,\n                                    this->altura + other->altura);\n    return resultado;\n}\n\n#ifndef QT_NO_DEBUG\n\nvoid Pessoa::print() {\n    qDebug() << \":: Pessoa ::\";\n    qDebug() << \"Endereco: \" << this;\n    qDebug() << \"Nome: \" << this->nome;\n    qDebug() << \"Idade: \" << this->idade;\n    qDebug() << \"Altura: \" << this->altura;\n    qDebug() << \":: -------------- ::\";\n}\n\n#endif\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "pe", "ss", "oa", "_", "cpp", ".", "hpp", "\"", "Ċ", "Ċ", "P", "ess", "oa", "::", "P", "ess", "oa", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "P", "ess", "oa", "::", "P", "ess", "oa", "(", "QString", "Ġn", "ome", ",", "Ġint", "Ġid", "ade", ",", "Ġfloat", "Ġalt", "ura", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "set", "N", "ome", "(", "n", "ome", ");", "Ċ", "ĠĠĠ", "Ġthis", "->", "id", "ade", "Ġ=", "Ġid", "ade", ";", "Ċ", "ĠĠĠ", "Ġthis", "->", "alt", "ura", "Ġ=", "Ġalt", "ura", ";", "Ċ", "}", "Ċ", "Ċ", "P", "ess", "oa", "::~", "P", "ess", "oa", "()", "Ġ{", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "De", "let", "ando", "Ġa", "Ġp", "ess", "oa", "Ġ\"", "Ġ<<", "Ġthis", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠP", "ess", "oa", "::", "set", "N", "ome", "(", "QString", "Ġn", "ome", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "n", "ome", "Ġ=", "Ġn", "ome", "Ġ+", "Ġ\"", "F", "oi", "!\";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠP", "ess", "oa", "::", "setId", "ade", "(", "int", "Ġid", "ade", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "id", "ade", "Ġ=", "Ġid", "ade", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠP", "ess", "oa", "::", "set", "Alt", "ura", "(", "float", "Ġalt", "ura", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "alt", "ura", "Ġ=", "Ġalt", "ura", ";", "Ċ", "}", "Ċ", "Ċ", "P", "ess", "oa", "Ġ*", "ĠP", "ess", "oa", "::", "cas", "ar", "(", "const", "ĠP", "ess", "oa", "Ġ*", "Ġother", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠP", "ess", "oa", "Ġ*", "Ġresult", "ado", "Ġ=", "Ġnew", "ĠP", "ess", "oa", "(", "this", "->", "n", "ome", "Ġ+", "Ġother", "->", "n", "ome", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "id", "ade", "Ġ+", "Ġother", "->", "id", "ade", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "alt", "ura", "Ġ+", "Ġother", "->", "alt", "ura", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġresult", "ado", ";", "Ċ", "}", "Ċ", "Ċ", "#", "ifndef", "ĠQT", "_", "NO", "_", "DEBUG", "Ċ", "Ċ", "void", "ĠP", "ess", "oa", "::", "print", "()", "Ġ{", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"::", "ĠP", "ess", "oa", "Ġ::", "\";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "En", "dere", "co", ":", "Ġ\"", "Ġ<<", "Ġthis", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "N", "ome", ":", "Ġ\"", "Ġ<<", "Ġthis", "->", "n", "ome", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "Id", "ade", ":", "Ġ\"", "Ġ<<", "Ġthis", "->", "id", "ade", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "Alt", "ura", ":", "Ġ\"", "Ġ<<", "Ġthis", "->", "alt", "ura", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"::", "Ġ--------", "------", "Ġ::", "\";", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::280", "code": "#include \"control.h\"\n\nControl::Control (int special_index) :\n\t_special_index (special_index)\n{\n\n}\n\nvoid Control::process_g (double delta_t)\n{\n\n}\n\nvoid Control::process_c (double delta_t)\n{\n\tfor (size_t i = 0; i < _control_outs.size(); ++i)\n\t{\n\t\t_control_outs[i] = *(_control_ins[0] + _special_index + i);\n\t}\n}\n\n\nTrigControl::TrigControl (int special_index) :\n\t_special_index (special_index)\n{\n\n}\n\nvoid TrigControl::process_g (double delta_t)\n{\n\n}\n\nvoid TrigControl::process_c (double delta_t)\n{\n\t// TODO make it work for synth-wide controls, not just local ones\n\tfor (size_t i = 0; i < _control_outs.size(); ++i)\n\t{\n\t\t_control_outs[i] = *(_control_ins[0] + _special_index + i);\n\t\t*(_control_ins[0] + _special_index + i) = 0.f;\n\t}\n}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "control", ".", "h", "\"", "Ċ", "Ċ", "Control", "::", "Control", "Ġ(", "int", "Ġspecial", "_", "index", ")", "Ġ:", "Ċ", "ĉ", "_", "special", "_", "index", "Ġ(", "special", "_", "index", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠControl", "::", "process", "_", "g", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠControl", "::", "process", "_", "c", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ_", "control", "_", "outs", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "_", "control", "_", "outs", "[", "i", "]", "Ġ=", "Ġ*", "(_", "control", "_", "ins", "[", "0", "]", "Ġ+", "Ġ_", "special", "_", "index", "Ġ+", "Ġi", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Trig", "Control", "::", "Trig", "Control", "Ġ(", "int", "Ġspecial", "_", "index", ")", "Ġ:", "Ċ", "ĉ", "_", "special", "_", "index", "Ġ(", "special", "_", "index", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTr", "ig", "Control", "::", "process", "_", "g", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTr", "ig", "Control", "::", "process", "_", "c", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "ĉ", "//", "ĠTODO", "Ġmake", "Ġit", "Ġwork", "Ġfor", "Ġsynth", "-", "wide", "Ġcontrols", ",", "Ġnot", "Ġjust", "Ġlocal", "Ġones", "Ċ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ_", "control", "_", "outs", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "_", "control", "_", "outs", "[", "i", "]", "Ġ=", "Ġ*", "(_", "control", "_", "ins", "[", "0", "]", "Ġ+", "Ġ_", "special", "_", "index", "Ġ+", "Ġi", ");", "Ċ", "ĉ", "ĉ", "*", "(_", "control", "_", "ins", "[", "0", "]", "Ġ+", "Ġ_", "special", "_", "index", "Ġ+", "Ġi", ")", "Ġ=", "Ġ0", ".", "f", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::281", "code": "# include <stdio.h>\n\nint n;\nint a[25][25];\n\nint main()\n{\n    while (~scanf(\"%d\", &n)) {\n        int cnt = 0;\n        int xl = 1, yl = 1, xr = n, yr = n;\n        while (cnt < n*n) {\n            for (int i = xl; cnt<n*n && i <= xr; ++i) a[yl][i] = ++cnt;\n            for (int i = yl+1; cnt<n*n && i <= yr; ++i) a[i][xr] = ++cnt;\n            for (int i = xr-1; cnt<n*n && i >= xl; --i) a[yr][i] = ++cnt;\n            for (int i = yr-1; cnt<n*n && i >= yl+1; --i) a[i][xl] = ++cnt;\n            ++xl, ++yl, --xr, --yr;\n        }\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= n; ++j) {\n                if (j>1) putchar(' ');\n                printf(\"%d\", a[i][j]);\n            }\n            printf(\"\\n\");\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "Ġinclude", "Ġ<", "stdio", ".", "h", ">", "Ċ", "Ċ", "int", "Ġn", ";", "Ċ", "int", "Ġa", "[", "25", "][", "25", "];", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(~", "scanf", "(\"%", "d", "\",", "Ġ&", "n", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġcnt", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġxl", "Ġ=", "Ġ1", ",", "Ġy", "l", "Ġ=", "Ġ1", ",", "Ġxr", "Ġ=", "Ġn", ",", "Ġyr", "Ġ=", "Ġn", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "cnt", "Ġ<", "Ġn", "*", "n", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġxl", ";", "Ġcnt", "<", "n", "*", "n", "Ġ&&", "Ġi", "Ġ<=", "Ġxr", ";", "Ġ++", "i", ")", "Ġa", "[", "yl", "][", "i", "]", "Ġ=", "Ġ++", "cnt", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġy", "l", "+", "1", ";", "Ġcnt", "<", "n", "*", "n", "Ġ&&", "Ġi", "Ġ<=", "Ġyr", ";", "Ġ++", "i", ")", "Ġa", "[", "i", "][", "xr", "]", "Ġ=", "Ġ++", "cnt", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġxr", "-", "1", ";", "Ġcnt", "<", "n", "*", "n", "Ġ&&", "Ġi", "Ġ>=", "Ġxl", ";", "Ġ--", "i", ")", "Ġa", "[", "yr", "][", "i", "]", "Ġ=", "Ġ++", "cnt", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġyr", "-", "1", ";", "Ġcnt", "<", "n", "*", "n", "Ġ&&", "Ġi", "Ġ>=", "Ġy", "l", "+", "1", ";", "Ġ--", "i", ")", "Ġa", "[", "i", "][", "xl", "]", "Ġ=", "Ġ++", "cnt", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "xl", ",", "Ġ++", "yl", ",", "Ġ--", "xr", ",", "Ġ--", "yr", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ1", ";", "Ġj", "Ġ<=", "Ġn", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "j", ">", "1", ")", "Ġput", "char", "('", "Ġ');", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "d", "\",", "Ġa", "[", "i", "][", "j", "]);", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::282", "code": "/**\n\t\\file \"util/STL/stack_fwd.hh\"\n\tForward declaration of std::stack.\n\tNo wrapping.  \n\t$Id: stack_fwd.hh,v 1.6 2006/04/23 07:37:29 fang Exp $\n */\n\n#ifndef\t__UTIL_STL_STACK_FWD_HH__\n#define\t__UTIL_STL_STACK_FWD_HH__\n\n#include \"util/STL/deque_fwd.hh\"\n\nBEGIN_NAMESPACE_STD\n\n// doesn't like redeclaring default template arguments...\n// template <class T, class Alloc = std::allocator<T> >\ntemplate <class T, class Seq>\nclass stack;\n\ntemplate <class T>\nstruct default_stack {\n\ttypedef\tstack<T, typename default_deque<T>::type>\ttype;\n\n\ttemplate <class S>\n\tstruct rebind : public default_stack<S> { };\n};\t// end struct default_stack\n\nEND_NAMESPACE_STD\n\n#endif\t// __UTIL_STL_STACK_FWD_HH__\n\n", "code_tokens": ["Ġ/**", "Ċ", "ĉ", "\\", "file", "Ġ\"", "util", "/", "ST", "L", "/", "stack", "_", "fwd", ".", "hh", "\"", "Ċ", "ĉ", "Forward", "Ġdeclaration", "Ġof", "Ġstd", "::", "stack", ".", "Ċ", "ĉ", "No", "Ġwrapping", ".", "ĠĠĊ", "ĉ", "$", "Id", ":", "Ġstack", "_", "fwd", ".", "hh", ",", "v", "Ġ1", ".", "6", "Ġ2006", "/", "04", "/", "23", "Ġ07", ":", "37", ":", "29", "Ġf", "ang", "ĠExp", "Ġ$", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĉ", "__", "UTIL", "_", "ST", "L", "_", "STACK", "_", "FW", "D", "_", "HH", "__", "Ċ", "#", "define", "ĉ", "__", "UTIL", "_", "ST", "L", "_", "STACK", "_", "FW", "D", "_", "HH", "__", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", "/", "ST", "L", "/", "deque", "_", "fwd", ".", "hh", "\"", "Ċ", "Ċ", "BEGIN", "_", "NAMESPACE", "_", "STD", "Ċ", "Ċ", "//", "Ġdoesn", "'t", "Ġlike", "Ġre", "decl", "aring", "Ġdefault", "Ġtemplate", "Ġarguments", "...", "Ċ", "//", "Ġtemplate", "Ġ<", "class", "ĠT", ",", "Ġclass", "ĠAlloc", "Ġ=", "Ġstd", "::", "allocator", "<", "T", ">", "Ġ>", "Ċ", "template", "Ġ<", "class", "ĠT", ",", "Ġclass", "ĠSeq", ">", "Ċ", "class", "Ġstack", ";", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "struct", "Ġdefault", "_", "stack", "Ġ{", "Ċ", "ĉ", "typedef", "ĉ", "stack", "<", "T", ",", "Ġtypename", "Ġdefault", "_", "deque", "<", "T", ">::", "type", ">", "ĉ", "type", ";", "Ċ", "Ċ", "ĉ", "template", "Ġ<", "class", "ĠS", ">", "Ċ", "ĉ", "struct", "Ġre", "bind", "Ġ:", "Ġpublic", "Ġdefault", "_", "stack", "<", "S", ">", "Ġ{", "Ġ};", "Ċ", "};", "ĉ", "//", "Ġend", "Ġstruct", "Ġdefault", "_", "stack", "Ċ", "Ċ", "END", "_", "NAMESPACE", "_", "STD", "Ċ", "Ċ", "#", "endif", "ĉ", "//", "Ġ__", "UTIL", "_", "ST", "L", "_", "STACK", "_", "FW", "D", "_", "HH", "__", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::283", "code": "// $Id$\n/*  Copyright (C) 2004-2006 John B. Shumway, Jr.\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n#ifdef HAVE_CONFIG_H\n#include <config.h>\n#endif\n#include \"RandomPermutationChooser.h\"\n#include \"util/RandomNumGenerator.h\"\n#include \"util/Permutation.h\"\n\nRandomPermutationChooser::RandomPermutationChooser(const int nsize)\n  : PermutationChooser(nsize), nsize(nsize) {\n}\n\nbool RandomPermutationChooser::choosePermutation() {\n  for (int ifrom=0; ifrom<nsize;) {\n    int ito = (int)(nsize*RandomNumGenerator::getRand());\n    if (ito==nsize) ito=nsize-1;\n    for (int jfrom=0; jfrom<=ifrom; ++jfrom) {\n      if (jfrom==ifrom) (*permutation)[ifrom++]=ito;\n      if ((*permutation)[jfrom]==ito) break;\n    }\n  }\n  return true;\n}\n", "code_tokens": ["Ġ//", "Ġ$", "Id", "$", "Ċ", "/*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2004", "-", "2006", "ĠJo", "hn", "ĠB", ".", "ĠSh", "um", "way", ",", "ĠJ", "r", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĠĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĠĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "ĠĠĠ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ6", "75", "ĠM", "ass", "ĠA", "ve", ",", "ĠC", "amb", "ridge", ",", "ĠMA", "Ġ02", "139", ",", "ĠUSA", ".", "Ġ", "Ġ*/", "Ċ", "#", "ifdef", "ĠHAVE", "_", "CONFIG", "_", "H", "Ċ", "#", "include", "Ġ<", "config", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "#", "include", "Ġ\"", "Random", "Perm", "utation", "Chooser", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "Random", "Num", "Generator", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "Perm", "utation", ".", "h", "\"", "Ċ", "Ċ", "Random", "Perm", "utation", "Chooser", "::", "Random", "Perm", "utation", "Chooser", "(", "const", "Ġint", "Ġn", "size", ")", "Ċ", "Ġ", "Ġ:", "ĠPerm", "utation", "Chooser", "(", "n", "size", "),", "Ġn", "size", "(", "n", "size", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠRandom", "Perm", "utation", "Chooser", "::", "choose", "Perm", "utation", "()", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġif", "rom", "=", "0", ";", "Ġif", "rom", "<", "n", "size", ";)", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġit", "o", "Ġ=", "Ġ(", "int", ")(", "n", "size", "*", "Random", "Num", "Generator", "::", "get", "Rand", "());", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "ito", "==", "n", "size", ")", "Ġit", "o", "=", "n", "size", "-", "1", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġj", "from", "=", "0", ";", "Ġj", "from", "<=", "if", "rom", ";", "Ġ++", "j", "from", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "j", "from", "==", "if", "rom", ")", "Ġ(*", "permutation", ")[", "if", "rom", "++]=", "ito", ";", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ((*", "permutation", ")[", "j", "from", "]==", "ito", ")", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::284", "code": "#include \"script_component.hpp\"\n\nclass CfgPatches {\n    class ADDON {\n        units[] = {};\n        weapons[] = {};\n        requiredVersion = REQUIRED_VERSION;\n        requiredAddons[] = {\"ace_interaction\"};\n        author = ECSTRING(common,ACETeam);\n        authors[] = {\"KoffeinFlummi\", \"BaerMitUmlaut\"};\n        url = ECSTRING(main,URL);\n        VERSION_CONFIG;\n    };\n};\n\n#include \"CfgEventHandlers.hpp\"\n#include \"CfgMoves.hpp\"\n#include \"CfgSounds.hpp\"\n#include \"CfgVehicles.hpp\"\n#include \"CfgWaypoints.hpp\"\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "script", "_", "component", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠC", "fg", "Patches", "Ġ{", "Ċ", "ĠĠĠ", "Ġclass", "ĠADD", "ON", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġunits", "[]", "Ġ=", "Ġ{};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġweapon", "s", "[]", "Ġ=", "Ġ{};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġrequired", "Version", "Ġ=", "ĠREQUI", "RED", "_", "VERSION", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġrequired", "Add", "ons", "[]", "Ġ=", "Ġ{\"", "ace", "_", "interaction", "\"};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġauthor", "Ġ=", "ĠEC", "STRING", "(", "common", ",", "AC", "ET", "e", "am", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġauthors", "[]", "Ġ=", "Ġ{\"", "K", "off", "ein", "Fl", "um", "mi", "\",", "Ġ\"", "Ba", "er", "M", "it", "Um", "la", "ut", "\"};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġurl", "Ġ=", "ĠEC", "STRING", "(", "main", ",", "URL", ");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠVERSION", "_", "CONFIG", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "};", "Ċ", "Ċ", "#", "include", "Ġ\"", "Cfg", "Event", "Handlers", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Cfg", "Moves", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Cfg", "Sounds", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Cfg", "Vehicle", "s", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Cfg", "Way", "points", ".", "hpp", "\"", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::285", "code": "#ifndef DCLIST_HPP\n#define DCLIST_HPP\n\n#include \"celltype.hpp\"\n#include <string>\n#include <sstream>\n#include <exception>\n\nclass DCList\n{\nprivate:\n    celltype* head, *last;\n    bool swapped;\n    \n    int makeList(int*);\npublic:\n    DCList();\n    ~DCList();\n    void insert(int);\n    int extract(void);\n    void swap(void);\n    void makenull(void);\n    bool empty(void);\n    bool isSwapped(void);\n    std::string list(bool);\n    void cut(int);\n    celltype* getHead(void);\n    celltype* getLast(void);\n    celltype* locate(int);\n};\n\n#endif // DCLIST_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠDC", "LIST", "_", "HP", "P", "Ċ", "#", "define", "ĠDC", "LIST", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "cell", "type", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "exception", ">", "Ċ", "Ċ", "class", "ĠDC", "List", "Ċ", "{", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġcell", "type", "*", "Ġhead", ",", "Ġ*", "last", ";", "Ċ", "ĠĠĠ", "Ġbool", "Ġswapped", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġint", "Ġmake", "List", "(", "int", "*", ");", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠDC", "List", "();", "Ċ", "ĠĠĠ", "Ġ~", "DC", "List", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġinsert", "(", "int", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġextract", "(", "void", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġswap", "(", "void", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġm", "aken", "ull", "(", "void", ");", "Ċ", "ĠĠĠ", "Ġbool", "Ġempty", "(", "void", ");", "Ċ", "ĠĠĠ", "Ġbool", "Ġis", "Sw", "apped", "(", "void", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġlist", "(", "bool", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġcut", "(", "int", ");", "Ċ", "ĠĠĠ", "Ġcell", "type", "*", "Ġget", "Head", "(", "void", ");", "Ċ", "ĠĠĠ", "Ġcell", "type", "*", "ĠgetLast", "(", "void", ");", "Ċ", "ĠĠĠ", "Ġcell", "type", "*", "Ġlocate", "(", "int", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠDC", "LIST", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::286", "code": "// **********************************************************************\n//\n// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.\n//\n// This copy of Ice is licensed to you under the terms described in the\n// ICE_LICENSE file included in this distribution.\n//\n// **********************************************************************\n\n#include <Ice/Application.h>\n#include <TestCommon.h>\n#include <Test.h>\n#include <string>\n#include <iostream>\n\nDEFINE_TEST(\"client\")\n\nusing namespace std;\nusing namespace Ice;\nusing namespace Test;\n\nint\nrun(int, char**, const Ice::CommunicatorPtr& communicator)\n{\n    TestIntfPrx allTests(const CommunicatorPtr&);\n    TestIntfPrx obj = allTests(communicator);\n    return EXIT_SUCCESS;\n}\n\nint\nmain(int argc, char* argv[])\n{\n    int status;\n    Ice::CommunicatorPtr communicator;\n\n    try\n    {\n        communicator = Ice::initialize(argc, argv);\n        status = run(argc, argv, communicator);\n    }\n    catch(const Ice::Exception& ex)\n    {\n        cerr << ex << endl;\n        status = EXIT_FAILURE;\n    }\n\n    if(communicator)\n    {\n        try\n        {\n            communicator->destroy();\n        }\n        catch(const Ice::Exception& ex)\n        {\n            cerr << ex << endl;\n            status = EXIT_FAILURE;\n        }\n    }\n\n    return status;\n}\n", "code_tokens": ["Ġ//", "Ġ*****************************************************************", "*****", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", "-", "2013", "ĠZero", "C", ",", "ĠInc", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġcopy", "Ġof", "ĠI", "ce", "Ġis", "Ġlicensed", "Ġto", "Ġyou", "Ġunder", "Ġthe", "Ġterms", "Ġdescribed", "Ġin", "Ġthe", "Ċ", "//", "ĠICE", "_", "LICENSE", "Ġfile", "Ġincluded", "Ġin", "Ġthis", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ*****************************************************************", "*****", "Ċ", "Ċ", "#", "include", "Ġ<", "Ice", "/", "Application", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Test", "Common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Test", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "DEFINE", "_", "TEST", "(\"", "client", "\")", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "ĠI", "ce", ";", "Ċ", "using", "Ġnamespace", "ĠTest", ";", "Ċ", "Ċ", "int", "Ċ", "run", "(", "int", ",", "Ġchar", "**", ",", "Ġconst", "ĠI", "ce", "::", "Comm", "unicator", "Ptr", "&", "Ġcomm", "unicator", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠTest", "Intf", "P", "rx", "Ġall", "Tests", "(", "const", "ĠComm", "unicator", "Ptr", "&", ");", "Ċ", "ĠĠĠ", "ĠTest", "Intf", "P", "rx", "Ġobj", "Ġ=", "Ġall", "Tests", "(", "comm", "unicator", ");", "Ċ", "ĠĠĠ", "Ġreturn", "ĠEXIT", "_", "SUCCESS", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ċ", "main", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġstatus", ";", "Ċ", "ĠĠĠ", "ĠI", "ce", "::", "Comm", "unicator", "Ptr", "Ġcomm", "unicator", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġtry", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcomm", "unicator", "Ġ=", "ĠI", "ce", "::", "initialize", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstatus", "Ġ=", "Ġrun", "(", "argc", ",", "Ġargv", ",", "Ġcomm", "unicator", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcatch", "(", "const", "ĠI", "ce", "::", "Exception", "&", "Ġex", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcerr", "Ġ<<", "Ġex", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstatus", "Ġ=", "ĠEXIT", "_", "FAILURE", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "(", "comm", "unicator", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtry", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcomm", "unicator", "->", "destroy", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcatch", "(", "const", "ĠI", "ce", "::", "Exception", "&", "Ġex", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcerr", "Ġ<<", "Ġex", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstatus", "Ġ=", "ĠEXIT", "_", "FAILURE", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstatus", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::287", "code": "/*\n *   Copyright (C) 2010 Michael Buesch <m@bues.ch>\n *\n *   This program is free software; you can redistribute it and/or\n *   modify it under the terms of the GNU General Public License\n *   as published by the Free Software Foundation; either version 2\n *   of the License, or (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n */\n\n#include \"util.h\"\n\n#include <time.h>\n#include <errno.h>\n#include <string.h>\n\n#include <iostream>\n\n\nvoid msleep(unsigned int msecs)\n{\n\tint err;\n\tstruct timespec time;\n\n\ttime.tv_sec = 0;\n\twhile (msecs >= 1000) {\n\t\ttime.tv_sec++;\n\t\tmsecs -= 1000;\n\t}\n\ttime.tv_nsec = msecs;\n\ttime.tv_nsec *= 1000000;\n\tdo {\n\t\terr = nanosleep(&time, &time);\n\t} while (err && errno == EINTR);\n\tif (err) {\n\t\tstd::cerr << \"nanosleep() failed with: \"\n\t\t\t  << strerror(errno) << std::endl;\n\t}\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠM", "ichael", "ĠB", "ues", "ch", "Ġ<", "m", "@", "b", "ues", ".", "ch", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "ĠĠ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "ĠĠ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ*", "ĠĠ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "time", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "errno", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "Ċ", "void", "Ġms", "leep", "(", "unsigned", "Ġint", "Ġmsecs", ")", "Ċ", "{", "Ċ", "ĉ", "int", "Ġerr", ";", "Ċ", "ĉ", "struct", "Ġtimespec", "Ġtime", ";", "Ċ", "Ċ", "ĉ", "time", ".", "tv", "_", "sec", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "while", "Ġ(", "msecs", "Ġ>=", "Ġ1000", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "time", ".", "tv", "_", "sec", "++;", "Ċ", "ĉ", "ĉ", "msecs", "Ġ-=", "Ġ1000", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "time", ".", "tv", "_", "nsec", "Ġ=", "Ġmsecs", ";", "Ċ", "ĉ", "time", ".", "tv", "_", "nsec", "Ġ*=", "Ġ1000000", ";", "Ċ", "ĉ", "do", "Ġ{", "Ċ", "ĉ", "ĉ", "err", "Ġ=", "Ġnan", "osleep", "(&", "time", ",", "Ġ&", "time", ");", "Ċ", "ĉ", "}", "Ġwhile", "Ġ(", "err", "Ġ&&", "Ġerrno", "Ġ==", "ĠEINTR", ");", "Ċ", "ĉ", "if", "Ġ(", "err", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "cerr", "Ġ<<", "Ġ\"", "nan", "osleep", "()", "Ġfailed", "Ġwith", ":", "Ġ\"", "Ċ", "ĉĉĉĠ", "Ġ<<", "Ġstrerror", "(", "errno", ")", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::288", "code": "#include \"ComboBox.h\"\r\n\r\n#include <QDebug>\r\n\r\nComboBox::ComboBox(QWidget* parent)\r\n\t: QComboBox(parent)\r\n{\r\n}\r\n\r\nComboBox::~ComboBox()\r\n{\r\n}\r\n\r\nvoid ComboBox::setCurrentItemById(const int id)\r\n{\r\n\tconst int size = count();\r\n\r\n\tfor (int i = 0; i < size; ++i)\r\n\t{\r\n\t\tif (id == itemData(i).toInt())\r\n\t\t{\r\n\t\t\tsetCurrentIndex(i);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tqDebug() << __FUNCTION__ << \"Cannot find id: \" << id;\r\n}\r\n\r\nint ComboBox::currentId()\r\n{\r\n\treturn itemData(currentIndex()).toInt();\r\n}\r\n\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ComboBox", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "č", "Ċ", "č", "Ċ", "ComboBox", "::", "ComboBox", "(", "QWidget", "*", "Ġparent", ")", "č", "Ċ", "ĉ", ":", "ĠQ", "ComboBox", "(", "parent", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "ComboBox", "::~", "ComboBox", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠComboBox", "::", "setCurrent", "Item", "ById", "(", "const", "Ġint", "Ġid", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "const", "Ġint", "Ġsize", "Ġ=", "Ġcount", "();", "č", "Ċ", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġsize", ";", "Ġ++", "i", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "id", "Ġ==", "Ġitem", "Data", "(", "i", ").", "toInt", "())", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉĉ", "ĉ", "setCurrentIndex", "(", "i", ");", "č", "Ċ", "ĉĉ", "ĉ", "return", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "qDebug", "()", "Ġ<<", "Ġ__", "FUNCTION", "__", "Ġ<<", "Ġ\"", "Cannot", "Ġfind", "Ġid", ":", "Ġ\"", "Ġ<<", "Ġid", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠComboBox", "::", "current", "Id", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġitem", "Data", "(", "currentIndex", "()).", "toInt", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::289", "code": "class Solution {\npublic:\n  int minCut(string s) {\n    if (s.size() < 2) {\n      return 0;\n    }\n\n    int len = s.size();\n    vector<int> cut(len + 1, 0); // cut[i] : s[0..i-1] min cut\n    for (int i = 0; i <= len; i++) {\n      cut[i] = i - 1;\n    }\n\n    for (int i = 0; i < len; i++) {\n      // odd len\n      for (int l = 0; i - l >= 0 && i + l < len && s[i - l] == s[i + l]; l++) {\n        cut[i + l + 1] = min(cut[i + l + 1], cut[i - l - 1 + 1] + 1);\n      }\n\n      // even\n      // i,i+1\n      for (int l = 0; i - l >= 0 && i + 1 + l < len && s[i - l] == s[i + 1 + l];\n           l++) {\n        cut[i + 1 + l + 1] = min(cut[i + 1 + l + 1], cut[i - l - 1 + 1] + 1);\n      }\n    }\n\n    return cut[len];\n  }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġint", "Ġmin", "Cut", "(", "string", "Ġs", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "s", ".", "size", "()", "Ġ<", "Ġ2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġint", "Ġlen", "Ġ=", "Ġs", ".", "size", "();", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "Ġcut", "(", "len", "Ġ+", "Ġ1", ",", "Ġ0", ");", "Ġ//", "Ġcut", "[", "i", "]", "Ġ:", "Ġs", "[", "0", "..", "i", "-", "1", "]", "Ġmin", "Ġcut", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġlen", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġcut", "[", "i", "]", "Ġ=", "Ġi", "Ġ-", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlen", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ//", "Ġodd", "Ġlen", "Ċ", "ĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġl", "Ġ=", "Ġ0", ";", "Ġi", "Ġ-", "Ġl", "Ġ>=", "Ġ0", "Ġ&&", "Ġi", "Ġ+", "Ġl", "Ġ<", "Ġlen", "Ġ&&", "Ġs", "[", "i", "Ġ-", "Ġl", "]", "Ġ==", "Ġs", "[", "i", "Ġ+", "Ġl", "];", "Ġl", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcut", "[", "i", "Ġ+", "Ġl", "Ġ+", "Ġ1", "]", "Ġ=", "Ġmin", "(", "cut", "[", "i", "Ġ+", "Ġl", "Ġ+", "Ġ1", "],", "Ġcut", "[", "i", "Ġ-", "Ġl", "Ġ-", "Ġ1", "Ġ+", "Ġ1", "]", "Ġ+", "Ġ1", ");", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġ//", "Ġeven", "Ċ", "ĠĠĠĠĠ", "Ġ//", "Ġi", ",", "i", "+", "1", "Ċ", "ĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġl", "Ġ=", "Ġ0", ";", "Ġi", "Ġ-", "Ġl", "Ġ>=", "Ġ0", "Ġ&&", "Ġi", "Ġ+", "Ġ1", "Ġ+", "Ġl", "Ġ<", "Ġlen", "Ġ&&", "Ġs", "[", "i", "Ġ-", "Ġl", "]", "Ġ==", "Ġs", "[", "i", "Ġ+", "Ġ1", "Ġ+", "Ġl", "];", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "Ġl", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcut", "[", "i", "Ġ+", "Ġ1", "Ġ+", "Ġl", "Ġ+", "Ġ1", "]", "Ġ=", "Ġmin", "(", "cut", "[", "i", "Ġ+", "Ġ1", "Ġ+", "Ġl", "Ġ+", "Ġ1", "],", "Ġcut", "[", "i", "Ġ-", "Ġl", "Ġ-", "Ġ1", "Ġ+", "Ġ1", "]", "Ġ+", "Ġ1", ");", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġcut", "[", "len", "];", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::290", "code": "#include \"logger/Stack.hpp\"\n\nusing namespace logger;\n\n///////////////////////////////////////\n\nstd::ostream& operator<<(std::ostream& ioOut, const Stack& stack)\n{\n\tif (stack.empty())\n\t\treturn ioOut;\n\n\tstd::deque<std::string>::const_iterator dequeIt;\n\tfor(dequeIt  = stack.begin();\n\t\tdequeIt != stack.end();\n\t\t++dequeIt)\n\t{\n\t\tif (dequeIt != stack.begin())\n\t\t\tioOut << \"_\";\n\t\tioOut << *dequeIt;\n\t}\n\t\n\treturn ioOut;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "logger", "/", "Stack", ".", "hpp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġlogger", ";", "Ċ", "Ċ", "////////////////////////////////", "///////", "Ċ", "Ċ", "std", "::", "ostream", "&", "Ġoperator", "<<(", "std", "::", "ostream", "&", "Ġio", "Out", ",", "Ġconst", "ĠStack", "&", "Ġstack", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "stack", ".", "empty", "())", "Ċ", "ĉ", "ĉ", "return", "Ġio", "Out", ";", "Ċ", "Ċ", "ĉ", "std", "::", "deque", "<", "std", "::", "string", ">::", "const", "_", "iterator", "Ġdeque", "It", ";", "Ċ", "ĉ", "for", "(", "deque", "It", "Ġ", "Ġ=", "Ġstack", ".", "begin", "();", "Ċ", "ĉ", "ĉ", "deque", "It", "Ġ!=", "Ġstack", ".", "end", "();", "Ċ", "ĉ", "ĉ", "++", "deque", "It", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "deque", "It", "Ġ!=", "Ġstack", ".", "begin", "())", "Ċ", "ĉĉ", "ĉ", "io", "Out", "Ġ<<", "Ġ\"_", "\";", "Ċ", "ĉ", "ĉ", "io", "Out", "Ġ<<", "Ġ*", "deque", "It", ";", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉ", "return", "Ġio", "Out", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::291", "code": " \n#include \"ObjetoCompuesto.h\"\n\nObjetoCompuesto:: ObjetoCompuesto() {\n\thijos = new Objeto3D*[100000];\n\tnumHijos = 0;\n\t\n\tm1 = new GLfloat[16];\n}\n\nObjetoCompuesto:: ~ObjetoCompuesto() {\n\tfor(int i =0; i < numHijos; i++) {     \n\t\tdelete hijos[i];\n    }  \n}\n\nvoid ObjetoCompuesto:: dibuja() {\n\tglMatrixMode(GL_MODELVIEW);\n\tglPushMatrix();\n\tglMultMatrixf(dameMatrizAfin());\n\t// Copiar en m1 la matriz actual de modelado-vista\n\tglGetFloatv(GL_MODELVIEW_MATRIX, m1);\n\tfor(int i =0; i < numHijos; i++) {\n\t\tglColor4f(hijos[i]->getR(), hijos[i]->getG(), hijos[i]->getB(), hijos[i]->getA());\n\t\tglMultMatrixf(hijos[i]->dameMatrizAfin());\n\t\thijos[i]->dibuja();\n\t\tglLoadMatrixf(m1);\n    }\n\tglPopMatrix();\n}\n\nvoid ObjetoCompuesto:: introduceObjeto(Objeto3D* objeto) {\n\thijos[numHijos++] = objeto;\n}\n\n\n\n\n", "code_tokens": ["Ġ", "Ċ", "#", "include", "Ġ\"", "Obj", "eto", "Comp", "uest", "o", ".", "h", "\"", "Ċ", "Ċ", "Obj", "eto", "Comp", "uest", "o", "::", "ĠObj", "eto", "Comp", "uest", "o", "()", "Ġ{", "Ċ", "ĉ", "hi", "j", "os", "Ġ=", "Ġnew", "ĠObj", "eto", "3", "D", "*[", "100000", "];", "Ċ", "ĉ", "num", "H", "ij", "os", "Ġ=", "Ġ0", ";", "Ċ", "ĉĊ", "ĉ", "m", "1", "Ġ=", "Ġnew", "ĠGLfloat", "[", "16", "];", "Ċ", "}", "Ċ", "Ċ", "Obj", "eto", "Comp", "uest", "o", "::", "Ġ~", "Obj", "eto", "Comp", "uest", "o", "()", "Ġ{", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "0", ";", "Ġi", "Ġ<", "Ġnum", "H", "ij", "os", ";", "Ġi", "++)", "Ġ{", "ĠĠĠĠĠĊ", "ĉ", "ĉ", "delete", "Ġh", "ij", "os", "[", "i", "];", "Ċ", "ĠĠĠ", "Ġ}", "ĠĠ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠObj", "eto", "Comp", "uest", "o", "::", "Ġdi", "bu", "ja", "()", "Ġ{", "Ċ", "ĉ", "gl", "MatrixMode", "(", "GL", "_", "MODE", "LV", "IEW", ");", "Ċ", "ĉ", "gl", "Push", "Matrix", "();", "Ċ", "ĉ", "gl", "Mult", "Matrix", "f", "(", "d", "ame", "Mat", "ri", "zA", "fin", "());", "Ċ", "ĉ", "//", "ĠCop", "i", "ar", "Ġen", "Ġm", "1", "Ġla", "Ġmat", "ri", "z", "Ġactual", "Ġde", "Ġmodel", "ado", "-", "v", "ista", "Ċ", "ĉ", "glGet", "Float", "v", "(", "GL", "_", "MODE", "LV", "IEW", "_", "MATRIX", ",", "Ġm", "1", ");", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "0", ";", "Ġi", "Ġ<", "Ġnum", "H", "ij", "os", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "glColor", "4", "f", "(", "hi", "j", "os", "[", "i", "]->", "getR", "(),", "Ġh", "ij", "os", "[", "i", "]->", "getG", "(),", "Ġh", "ij", "os", "[", "i", "]->", "getB", "(),", "Ġh", "ij", "os", "[", "i", "]->", "getA", "());", "Ċ", "ĉ", "ĉ", "gl", "Mult", "Matrix", "f", "(", "hi", "j", "os", "[", "i", "]->", "d", "ame", "Mat", "ri", "zA", "fin", "());", "Ċ", "ĉ", "ĉ", "hi", "j", "os", "[", "i", "]->", "di", "bu", "ja", "();", "Ċ", "ĉ", "ĉ", "gl", "Load", "Matrix", "f", "(", "m", "1", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĉ", "gl", "Pop", "Matrix", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠObj", "eto", "Comp", "uest", "o", "::", "Ġintroduce", "Obj", "eto", "(", "Obj", "eto", "3", "D", "*", "Ġobj", "eto", ")", "Ġ{", "Ċ", "ĉ", "hi", "j", "os", "[", "num", "H", "ij", "os", "++]", "Ġ=", "Ġobj", "eto", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::292", "code": "\n\n\n\n#include <QApplication>\n#include \"qtreversimenudialog.h\"\n\n\nint main(int argc, char *argv[])\n{\n  QApplication a(argc, argv);\n  ribi::reversi::QtReversiMenuDialog w;\n  w.show();\n  return a.exec();\n}\n", "code_tokens": ["Ċ", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "Ċ", "#", "include", "Ġ\"", "qt", "re", "vers", "imen", "ud", "ialog", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "Ġ", "ĠQApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "Ċ", "Ġ", "Ġri", "bi", "::", "re", "vers", "i", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", "Ġw", ";", "Ċ", "Ġ", "Ġw", ".", "show", "();", "Ċ", "Ġ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::293", "code": "#include \"Sub.h\"\n\n// manual_init - initialise manual controller\nbool Sub::manual_init()\n{\n    // set target altitude to zero for reporting\n    pos_control.set_alt_target(0);\n\n    // attitude hold inputs become thrust inputs in manual mode\n    // set to neutral to prevent chaotic behavior (esp. roll/pitch)\n    set_neutral_controls();\n\n    return true;\n}\n\n// manual_run - runs the manual (passthrough) controller\n// should be called at 100hz or more\nvoid Sub::manual_run()\n{\n    // if not armed set throttle to zero and exit immediately\n    if (!motors.armed()) {\n        motors.set_desired_spool_state(AP_Motors::DESIRED_GROUND_IDLE);\n        attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n        return;\n    }\n\n    motors.set_desired_spool_state(AP_Motors::DESIRED_THROTTLE_UNLIMITED);\n\n    motors.set_roll(channel_roll->norm_input());\n    motors.set_pitch(channel_pitch->norm_input());\n    motors.set_yaw(channel_yaw->norm_input() * g.acro_yaw_p / ACRO_YAW_P);\n    motors.set_throttle(channel_throttle->norm_input());\n    motors.set_forward(channel_forward->norm_input());\n    motors.set_lateral(channel_lateral->norm_input());\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Sub", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġmanual", "_", "init", "Ġ-", "Ġinitialise", "Ġmanual", "Ġcontroller", "Ċ", "bool", "ĠSub", "::", "manual", "_", "init", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġtarget", "Ġalt", "itude", "Ġto", "Ġzero", "Ġfor", "Ġreporting", "Ċ", "ĠĠĠ", "Ġpos", "_", "control", ".", "set", "_", "alt", "_", "target", "(", "0", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġatt", "itude", "Ġhold", "Ġinputs", "Ġbecome", "Ġth", "rust", "Ġinputs", "Ġin", "Ġmanual", "Ġmode", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "Ġto", "Ġne", "utral", "Ġto", "Ġprevent", "Ġch", "a", "ot", "ic", "Ġbehavior", "Ġ(", "esp", ".", "Ġroll", "/", "pitch", ")", "Ċ", "ĠĠĠ", "Ġset", "_", "neutral", "_", "controls", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "//", "Ġmanual", "_", "run", "Ġ-", "Ġruns", "Ġthe", "Ġmanual", "Ġ(", "passthrough", ")", "Ġcontroller", "Ċ", "//", "Ġshould", "Ġbe", "Ġcalled", "Ġat", "Ġ100", "hz", "Ġor", "Ġmore", "Ċ", "void", "ĠSub", "::", "manual", "_", "run", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġif", "Ġnot", "Ġar", "med", "Ġset", "Ġthrottle", "Ġto", "Ġzero", "Ġand", "Ġexit", "Ġimmediately", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "mot", "ors", ".", "ar", "med", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġmot", "ors", ".", "set", "_", "desired", "_", "sp", "ool", "_", "state", "(", "AP", "_", "Mot", "ors", "::", "DE", "SI", "RED", "_", "GROUND", "_", "IDLE", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġatt", "itude", "_", "control", ".", "set", "_", "throttle", "_", "out", "_", "un", "st", "abil", "ized", "(", "0", ",", "true", ",", "g", ".", "throttle", "_", "filt", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġmot", "ors", ".", "set", "_", "desired", "_", "sp", "ool", "_", "state", "(", "AP", "_", "Mot", "ors", "::", "DE", "SI", "RED", "_", "TH", "ROT", "TLE", "_", "UN", "LIMIT", "ED", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġmot", "ors", ".", "set", "_", "roll", "(", "channel", "_", "roll", "->", "norm", "_", "input", "());", "Ċ", "ĠĠĠ", "Ġmot", "ors", ".", "set", "_", "pitch", "(", "channel", "_", "pitch", "->", "norm", "_", "input", "());", "Ċ", "ĠĠĠ", "Ġmot", "ors", ".", "set", "_", "yaw", "(", "channel", "_", "yaw", "->", "norm", "_", "input", "()", "Ġ*", "Ġg", ".", "ac", "ro", "_", "yaw", "_", "p", "Ġ/", "ĠAC", "RO", "_", "Y", "AW", "_", "P", ");", "Ċ", "ĠĠĠ", "Ġmot", "ors", ".", "set", "_", "throttle", "(", "channel", "_", "throttle", "->", "norm", "_", "input", "());", "Ċ", "ĠĠĠ", "Ġmot", "ors", ".", "set", "_", "forward", "(", "channel", "_", "forward", "->", "norm", "_", "input", "());", "Ċ", "ĠĠĠ", "Ġmot", "ors", ".", "set", "_", "later", "al", "(", "channel", "_", "later", "al", "->", "norm", "_", "input", "());", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::294", "code": "/* -*- Mode: C++; indent-tabs-mode: t; c-basic-offset: 2; tab-width: 2 -*-  */\n/*\n * generallayout.h\n * Copyright (C) 2015 Dejardin Gilbert <dejarding@gmail.com>\n *\n * audio is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * audio is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License along\n * with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#ifndef _GENERALLAYOUT_H_\n#define _GENERALLAYOUT_H_\n\n#include <list>\n#include <gtkmm/drawingarea.h>\n#include \"generalmodule.hpp\"\n//#include \"vector2D.hpp\"\n\nclass GeneralLayout: public Gtk::DrawingArea\n{\npublic:\n\tGeneralLayout();\n\tvirtual ~GeneralLayout();\n\n\tvoid randomAllModulePosition();\n\n\tstd::list<GeneralModule*> mGMs;\n\nprotected:\n\tvirtual bool on_draw(const Cairo::RefPtr<Cairo::Context>& cr);\n\tbool on_timeout();\n\nprivate:\n\tdouble mZoom;\n\tbool mautoZoom;\n\tVector2D mPan;\n\tbool mautoPan;\n};\n\n#endif // _GENERALLAYOUT_H_\n\n", "code_tokens": ["Ġ/*", "Ġ-", "*-", "ĠMode", ":", "ĠC", "++;", "Ġindent", "-", "tabs", "-", "mode", ":", "Ġt", ";", "Ġc", "-", "basic", "-", "offset", ":", "Ġ2", ";", "Ġtab", "-", "width", ":", "Ġ2", "Ġ-", "*-", "Ġ", "Ġ*/", "Ċ", "/*", "Ċ", "Ġ*", "Ġgeneral", "layout", ".", "h", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "ĠDe", "j", "ard", "in", "ĠG", "il", "bert", "Ġ<", "de", "j", "ard", "ing", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġaudio", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ċ", "Ġ*", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "Ġ*", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "Ġaudio", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "Ċ", "Ġ*", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "Ġ*", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "Ġ_", "GEN", "ER", "ALL", "AY", "OUT", "_", "H", "_", "Ċ", "#", "define", "Ġ_", "GEN", "ER", "ALL", "AY", "OUT", "_", "H", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "#", "include", "Ġ<", "gtk", "mm", "/", "drawing", "area", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "general", "module", ".", "hpp", "\"", "Ċ", "//#", "include", "Ġ\"", "vector", "2", "D", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠGeneral", "Layout", ":", "Ġpublic", "ĠGtk", "::", "Drawing", "Area", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "General", "Layout", "();", "Ċ", "ĉ", "virtual", "Ġ~", "General", "Layout", "();", "Ċ", "Ċ", "ĉ", "void", "Ġrandom", "All", "Module", "Position", "();", "Ċ", "Ċ", "ĉ", "std", "::", "list", "<", "General", "Module", "*>", "Ġm", "G", "Ms", ";", "Ċ", "Ċ", "protected", ":", "Ċ", "ĉ", "virtual", "Ġbool", "Ġon", "_", "draw", "(", "const", "ĠC", "airo", "::", "RefPtr", "<", "Cairo", "::", "Context", ">&", "Ġcr", ");", "Ċ", "ĉ", "bool", "Ġon", "_", "timeout", "();", "Ċ", "Ċ", "private", ":", "Ċ", "ĉ", "double", "Ġm", "Zoom", ";", "Ċ", "ĉ", "bool", "Ġm", "auto", "Zoom", ";", "Ċ", "ĉ", "Vector", "2", "D", "Ġm", "Pan", ";", "Ċ", "ĉ", "bool", "Ġm", "auto", "Pan", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "Ġ_", "GEN", "ER", "ALL", "AY", "OUT", "_", "H", "_", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::295", "code": "\n\n\n\n#include \"qtreversimenudialog.h\"\n\n#include <QKeyEvent>\n#include <QApplication>\n#include <QDesktopWidget>\n\n#include \"reversimenudialog.h\"\n#include \"qtaboutdialog.h\"\n\n#include \"qtreversimaindialog.h\"\n#include \"reversimenudialog.h\"\n#include \"ui_qtreversimenudialog.h\"\n\n\n\nribi::reversi::QtReversiMenuDialog::QtReversiMenuDialog(QWidget *parent) noexcept\n  : QtHideAndShowDialog(parent),\n    ui(new Ui::QtReversiMenuDialog)\n{\n  ui->setupUi(this);\n}\n\nribi::reversi::QtReversiMenuDialog::~QtReversiMenuDialog() noexcept\n{\n  delete ui;\n}\n\nvoid ribi::reversi::QtReversiMenuDialog::keyPressEvent(QKeyEvent * e)\n{\n  if (e->key() == Qt::Key_Escape) { close(); }\n}\n\nvoid ribi::reversi::QtReversiMenuDialog::on_button_start_clicked() noexcept\n{\n  QtReversiMainDialog d;\n  this->ShowChild(&d);\n}\n\nvoid ribi::reversi::QtReversiMenuDialog::on_button_about_clicked() noexcept\n{\n  QtAboutDialog d(MenuDialog().GetAbout());\n  d.setWindowIcon(windowIcon());\n  d.setStyleSheet(styleSheet());\n  ShowChild(&d);\n}\n\nvoid ribi::reversi::QtReversiMenuDialog::on_button_quit_clicked() noexcept\n{\n  close();\n}\n", "code_tokens": ["Ċ", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "qt", "re", "vers", "imen", "ud", "ialog", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "KeyEvent", ">", "Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "Ċ", "#", "include", "Ġ<", "Q", "Desktop", "Widget", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "re", "vers", "imen", "ud", "ialog", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "q", "tab", "out", "dialog", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "qt", "re", "vers", "ima", "ind", "ialog", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "re", "vers", "imen", "ud", "ialog", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "qt", "re", "vers", "imen", "ud", "ialog", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "Ċ", "ri", "bi", "::", "re", "vers", "i", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", "(", "QWidget", "Ġ*", "parent", ")", "Ġnoexcept", "Ċ", "Ġ", "Ġ:", "ĠQt", "Hide", "And", "ShowDialog", "(", "parent", "),", "Ċ", "ĠĠĠ", "Ġui", "(", "new", "ĠUi", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", ")", "Ċ", "{", "Ċ", "Ġ", "Ġui", "->", "setup", "Ui", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "ri", "bi", "::", "re", "vers", "i", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", "::~", "Qt", "Re", "vers", "i", "Menu", "Dialog", "()", "Ġnoexcept", "Ċ", "{", "Ċ", "Ġ", "Ġdelete", "Ġui", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġri", "bi", "::", "re", "vers", "i", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", "::", "key", "PressEvent", "(", "Q", "KeyEvent", "Ġ*", "Ġe", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "e", "->", "key", "()", "Ġ==", "ĠQt", "::", "Key", "_", "Escape", ")", "Ġ{", "Ġclose", "();", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġri", "bi", "::", "re", "vers", "i", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", "::", "on", "_", "button", "_", "start", "_", "clicked", "()", "Ġnoexcept", "Ċ", "{", "Ċ", "Ġ", "ĠQt", "Re", "vers", "i", "Main", "Dialog", "Ġd", ";", "Ċ", "Ġ", "Ġthis", "->", "Show", "Child", "(&", "d", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġri", "bi", "::", "re", "vers", "i", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", "::", "on", "_", "button", "_", "about", "_", "clicked", "()", "Ġnoexcept", "Ċ", "{", "Ċ", "Ġ", "ĠQt", "About", "Dialog", "Ġd", "(", "Menu", "Dialog", "().", "Get", "About", "());", "Ċ", "Ġ", "Ġd", ".", "set", "Window", "Icon", "(", "window", "Icon", "());", "Ċ", "Ġ", "Ġd", ".", "setStyle", "Sheet", "(", "styleSheet", "());", "Ċ", "Ġ", "ĠShow", "Child", "(&", "d", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġri", "bi", "::", "re", "vers", "i", "::", "Qt", "Re", "vers", "i", "Menu", "Dialog", "::", "on", "_", "button", "_", "quit", "_", "clicked", "()", "Ġnoexcept", "Ċ", "{", "Ċ", "Ġ", "Ġclose", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::296", "code": "/*\n * file_utils.cc\n * Copyright (C) 2016 elasticlog <elasticlog01@gmail.com>\n *\n * Distributed under terms of the GNU GENERAL PUBLIC LICENSE.\n */\n\n#include \"file_utils.h\"\n\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <dirent.h>\n#include <errno.h>\n#include <string.h>\n#include \"logging.h\"\n\nusing ::baidu::common::INFO;\nusing ::baidu::common::WARNING;\n\nnamespace el {\n\nbool Mkdir(const std::string& path) {\n  const int dir_mode = 0777;\n  int ret = ::mkdir(path.c_str(), dir_mode); \n  if (ret == 0 || errno == EEXIST) {\n    return true; \n  }\n  LOG(WARNING, \"mkdir %s failed err[%d: %s]\", \n        path.c_str(), errno, strerror(errno));\n  return false;\n}\n\nbool MkdirRecur(const std::string& dir_path) {\n  size_t beg = 0;\n  size_t seg = dir_path.find('/', beg);\n  while (seg != std::string::npos) {\n    if (seg + 1 >= dir_path.size()) {\n      break; \n    }\n    if (!Mkdir(dir_path.substr(0, seg + 1))) {\n      return false; \n    }\n    beg = seg + 1;\n    seg = dir_path.find('/', beg);\n  }\n  return Mkdir(dir_path);\n}\n\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġfile", "_", "utils", ".", "cc", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2016", "Ġelastic", "log", "Ġ<", "elastic", "log", "01", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠD", "istributed", "Ġunder", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGEN", "ERAL", "ĠPUBLIC", "ĠLICENSE", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "file", "_", "utils", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "sys", "/", "types", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "stat", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "fcntl", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "dirent", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "errno", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "logging", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġ::", "baidu", "::", "common", "::", "INFO", ";", "Ċ", "using", "Ġ::", "baidu", "::", "common", "::", "WARNING", ";", "Ċ", "Ċ", "namespace", "Ġel", "Ġ{", "Ċ", "Ċ", "bool", "ĠMkdir", "(", "const", "Ġstd", "::", "string", "&", "Ġpath", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġdir", "_", "mode", "Ġ=", "Ġ0777", ";", "Ċ", "Ġ", "Ġint", "Ġret", "Ġ=", "Ġ::", "mkdir", "(", "path", ".", "c", "_", "str", "(),", "Ġdir", "_", "mode", ");", "ĠĊ", "Ġ", "Ġif", "Ġ(", "ret", "Ġ==", "Ġ0", "Ġ||", "Ġerrno", "Ġ==", "ĠE", "EXIST", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "ĠĊ", "Ġ", "Ġ}", "Ċ", "Ġ", "ĠLOG", "(", "WARNING", ",", "Ġ\"", "mkdir", "Ġ%", "s", "Ġfailed", "Ġerr", "[%", "d", ":", "Ġ%", "s", "]\",", "ĠĊ", "ĠĠĠĠĠĠĠ", "Ġpath", ".", "c", "_", "str", "(),", "Ġerrno", ",", "Ġstrerror", "(", "errno", "));", "Ċ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠMkdir", "Re", "cur", "(", "const", "Ġstd", "::", "string", "&", "Ġdir", "_", "path", ")", "Ġ{", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġbeg", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġseg", "Ġ=", "Ġdir", "_", "path", ".", "find", "('/',", "Ġbeg", ");", "Ċ", "Ġ", "Ġwhile", "Ġ(", "seg", "Ġ!=", "Ġstd", "::", "string", "::", "npos", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "seg", "Ġ+", "Ġ1", "Ġ>=", "Ġdir", "_", "path", ".", "size", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "ĠĊ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "Mkdir", "(", "dir", "_", "path", ".", "substr", "(", "0", ",", "Ġseg", "Ġ+", "Ġ1", ")))", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġfalse", ";", "ĠĊ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġbeg", "Ġ=", "Ġseg", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġseg", "Ġ=", "Ġdir", "_", "path", ".", "find", "('/',", "Ġbeg", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "ĠMkdir", "(", "dir", "_", "path", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::297", "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    freopen(\"in.txt\",\"r\",stdin);\r\n    int tc,n;\r\n    int A[1000],B[1000];\r\n    scanf(\"%d\",&tc);\r\n    while(tc--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int sum=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&A[i]);\r\n            int j=i;\r\n            B[i]=0;\r\n            while(j--)\r\n            {\r\n                if(A[j]<=A[i]) B[i]++;\r\n            }\r\n            sum+=B[i];\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n    return 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "<", "bits", "/", "std", "c", "++", ".", "h", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġfre", "open", "(\"", "in", ".", "txt", "\",\"", "r", "\",", "stdin", ");", "č", "Ċ", "ĠĠĠ", "Ġint", "Ġtc", ",", "n", ";", "č", "Ċ", "ĠĠĠ", "Ġint", "ĠA", "[", "1000", "],", "B", "[", "1000", "];", "č", "Ċ", "ĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "tc", ");", "č", "Ċ", "ĠĠĠ", "Ġwhile", "(", "tc", "--)", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "n", ");", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġsum", "=", "0", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";", "i", "++)", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "A", "[", "i", "]);", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġj", "=", "i", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠB", "[", "i", "]=", "0", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġwhile", "(", "j", "--)", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "A", "[", "j", "]", "<=", "A", "[", "i", "])", "ĠB", "[", "i", "]++;", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "+=", "B", "[", "i", "];", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "sum", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::298", "code": "// ========================================================================= //\n// Fighting game framework (2D) with online multiplayer.\n// Copyright(C) 2014 Jordan Sparks <unixunited@live.com>\n//\n// This program is free software; you can redistribute it and / or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 3\n// of the License, or(at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n// \n// You should have received a copy of the GNU General Public License\n// along with this program. If not, see <http://www.gnu.org/licenses/>.\n// ========================================================================= //\n// File: LogImpl.hpp\n// Author: Jordan Sparks <unixunited@live.com>\n// ================================================ //\n// Defines LogImpl Pimpl idiom class.\n// ================================================ //\n\n#ifndef __LOGIMPL_HPP__\n#define __LOGIMPL_HPP__\n\n// ================================================ //\n\n#include \"stdafx.hpp\"\n\n// ================================================ //\n\n// Pimpl idiom class for Log.\nclass LogImpl\n{\npublic:\n\t// Opens a file handle for ExtMF.log and logs the date, time, and\n\t// engine version.\n\texplicit LogImpl(void);\n\n\t// Closes the file handle.\n\t~LogImpl(void);\n\n\tvoid logMessage(const std::string& str);\n\tvoid logTime(const bool time = true, const bool date = false);\n\nprivate:\n\tstd::ofstream m_file;\n};\n\n// ================================================ //\n\n#endif\n\n// ================================================ //", "code_tokens": ["Ġ//", "Ġ=================================================================", "========", "Ġ//", "Ċ", "//", "ĠF", "ight", "ing", "Ġgame", "Ġframework", "Ġ(", "2", "D", ")", "Ġwith", "Ġonline", "Ġmultip", "layer", ".", "Ċ", "//", "ĠCopyright", "(", "C", ")", "Ġ2014", "ĠJ", "ord", "an", "ĠS", "par", "ks", "Ġ<", "unix", "un", "ited", "@", "live", ".", "com", ">", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "Ġ/", "Ġor", "Ċ", "//", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", "Ċ", "//", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//", "Ġ=================================================================", "========", "Ġ//", "Ċ", "//", "ĠFile", ":", "ĠLog", "Impl", ".", "hpp", "Ċ", "//", "ĠAuthor", ":", "ĠJ", "ord", "an", "ĠS", "par", "ks", "Ġ<", "unix", "un", "ited", "@", "live", ".", "com", ">", "Ċ", "//", "Ġ=================================", "===============", "Ġ//", "Ċ", "//", "ĠDef", "ines", "ĠLog", "Impl", "ĠP", "impl", "Ġid", "iom", "Ġclass", ".", "Ċ", "//", "Ġ=================================", "===============", "Ġ//", "Ċ", "Ċ", "#", "ifndef", "Ġ__", "LOG", "IMPL", "_", "HP", "P", "__", "Ċ", "#", "define", "Ġ__", "LOG", "IMPL", "_", "HP", "P", "__", "Ċ", "Ċ", "//", "Ġ=================================", "===============", "Ġ//", "Ċ", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "hpp", "\"", "Ċ", "Ċ", "//", "Ġ=================================", "===============", "Ġ//", "Ċ", "Ċ", "//", "ĠP", "impl", "Ġid", "iom", "Ġclass", "Ġfor", "ĠLog", ".", "Ċ", "class", "ĠLog", "Impl", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "//", "ĠOp", "ens", "Ġa", "Ġfile", "Ġhandle", "Ġfor", "ĠExt", "MF", ".", "log", "Ġand", "Ġlogs", "Ġthe", "Ġdate", ",", "Ġtime", ",", "Ġand", "Ċ", "ĉ", "//", "Ġengine", "Ġversion", ".", "Ċ", "ĉ", "explicit", "ĠLog", "Impl", "(", "void", ");", "Ċ", "Ċ", "ĉ", "//", "ĠClose", "s", "Ġthe", "Ġfile", "Ġhandle", ".", "Ċ", "ĉ", "~", "Log", "Impl", "(", "void", ");", "Ċ", "Ċ", "ĉ", "void", "Ġlog", "Message", "(", "const", "Ġstd", "::", "string", "&", "Ġstr", ");", "Ċ", "ĉ", "void", "Ġlog", "Time", "(", "const", "Ġbool", "Ġtime", "Ġ=", "Ġtrue", ",", "Ġconst", "Ġbool", "Ġdate", "Ġ=", "Ġfalse", ");", "Ċ", "Ċ", "private", ":", "Ċ", "ĉ", "std", "::", "ofstream", "Ġm", "_", "file", ";", "Ċ", "};", "Ċ", "Ċ", "//", "Ġ=================================", "===============", "Ġ//", "Ċ", "Ċ", "#", "endif", "Ċ", "Ċ", "//", "Ġ=================================", "===============", "Ġ//"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::299", "code": "/*\n\tSPDX-FileCopyrightText: 2009-2013 Graeme Gott <graeme@gottcode.org>\n\n\tSPDX-License-Identifier: GPL-3.0-or-later\n*/\n\n#include \"hole.h\"\n\n#include <QBrush>\n#include <QPen>\n#include <QRadialGradient>\n\n//-----------------------------------------------------------------------------\n\nHole::Hole(const QPoint& position, QGraphicsItem* parent)\n\t: QGraphicsEllipseItem(0, 0, 16, 16, parent)\n\t, m_peg(nullptr)\n{\n\tQRadialGradient gradient(QPointF(8,8), 8);\n\tgradient.setColorAt(0, QColor(0, 0, 0, 0));\n\tgradient.setColorAt(1, QColor(0, 0, 0, 64));\n\tsetBrush(gradient);\n\tsetPen(Qt::NoPen);\n\n\tsetZValue(1);\n\tsetPos(position.x() * 20 + 2, position.y() * 20 + 2);\n\tsetFlag(QGraphicsItem::ItemIsMovable, false);\n}\n\n//-----------------------------------------------------------------------------\n\nvoid Hole::setHighlight(bool highlight)\n{\n\tsetPen(!highlight ? Qt::NoPen : QPen(Qt::yellow, 2));\n}\n\n//-----------------------------------------------------------------------------\n", "code_tokens": ["Ġ/*", "Ċ", "ĉ", "SP", "DX", "-", "File", "Copyright", "Text", ":", "Ġ2009", "-", "2013", "ĠGra", "eme", "ĠGot", "t", "Ġ<", "gra", "eme", "@", "got", "t", "code", ".", "org", ">", "Ċ", "Ċ", "ĉ", "SP", "DX", "-", "License", "-", "Identifier", ":", "ĠG", "PL", "-", "3", ".", "0", "-", "or", "-", "later", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "hole", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Brush", ">", "Ċ", "#", "include", "Ġ<", "QP", "en", ">", "Ċ", "#", "include", "Ġ<", "Q", "Radial", "Gradient", ">", "Ċ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "Ċ", "Hole", "::", "Hole", "(", "const", "ĠQPoint", "&", "Ġposition", ",", "ĠQGraphics", "Item", "*", "Ġparent", ")", "Ċ", "ĉ", ":", "ĠQGraphics", "Ellipse", "Item", "(", "0", ",", "Ġ0", ",", "Ġ16", ",", "Ġ16", ",", "Ġparent", ")", "Ċ", "ĉ", ",", "Ġm", "_", "peg", "(", "nullptr", ")", "Ċ", "{", "Ċ", "ĉ", "Q", "Radial", "Gradient", "Ġgradient", "(", "QPointF", "(", "8", ",", "8", "),", "Ġ8", ");", "Ċ", "ĉ", "gradient", ".", "setColor", "At", "(", "0", ",", "ĠQColor", "(", "0", ",", "Ġ0", ",", "Ġ0", ",", "Ġ0", "));", "Ċ", "ĉ", "gradient", ".", "setColor", "At", "(", "1", ",", "ĠQColor", "(", "0", ",", "Ġ0", ",", "Ġ0", ",", "Ġ64", "));", "Ċ", "ĉ", "set", "Brush", "(", "gradient", ");", "Ċ", "ĉ", "setPen", "(", "Qt", "::", "No", "Pen", ");", "Ċ", "Ċ", "ĉ", "set", "Z", "Value", "(", "1", ");", "Ċ", "ĉ", "set", "Pos", "(", "position", ".", "x", "()", "Ġ*", "Ġ20", "Ġ+", "Ġ2", ",", "Ġposition", ".", "y", "()", "Ġ*", "Ġ20", "Ġ+", "Ġ2", ");", "Ċ", "ĉ", "set", "Flag", "(", "QGraphics", "Item", "::", "Item", "Is", "Mo", "vable", ",", "Ġfalse", ");", "Ċ", "}", "Ċ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "Ċ", "void", "ĠH", "ole", "::", "set", "Highlight", "(", "bool", "Ġhighlight", ")", "Ċ", "{", "Ċ", "ĉ", "setPen", "(!", "highlight", "Ġ?", "ĠQt", "::", "No", "Pen", "Ġ:", "ĠQ", "Pen", "(", "Qt", "::", "yellow", ",", "Ġ2", "));", "Ċ", "}", "Ċ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::300", "code": "#include <stdafx.h>\n#include \"VertexBufferObject.h\"\n\nVertexBufferObject::VertexBufferObject() {\n\tglGenBuffers(1, &_id);\n}\n\nVertexBufferObject::~VertexBufferObject() {\n\tglDeleteBuffers(1, &_id);\n}\n\nvoid VertexBufferObject::Bind() {\n\tglBindBuffer(GL_ARRAY_BUFFER, _id);\n}\n\nvoid VertexBufferObject::Upload(void *data, size_t size, int type) {\n\tglBufferData(GL_ARRAY_BUFFER, size, data, type);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "af", "x", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "VertexBuffer", "Object", ".", "h", "\"", "Ċ", "Ċ", "VertexBuffer", "Object", "::", "VertexBuffer", "Object", "()", "Ġ{", "Ċ", "ĉ", "gl", "Gen", "Buffers", "(", "1", ",", "Ġ&_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "VertexBuffer", "Object", "::~", "VertexBuffer", "Object", "()", "Ġ{", "Ċ", "ĉ", "gl", "Delete", "Buffers", "(", "1", ",", "Ġ&_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠVertex", "Buffer", "Object", "::", "Bind", "()", "Ġ{", "Ċ", "ĉ", "glBind", "Buffer", "(", "GL", "_", "ARRAY", "_", "BUFFER", ",", "Ġ_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠVertex", "Buffer", "Object", "::", "Upload", "(", "void", "Ġ*", "data", ",", "Ġsize", "_", "t", "Ġsize", ",", "Ġint", "Ġtype", ")", "Ġ{", "Ċ", "ĉ", "gl", "Buffer", "Data", "(", "GL", "_", "ARRAY", "_", "BUFFER", ",", "Ġsize", ",", "Ġdata", ",", "Ġtype", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::301", "code": "/*\n * Beautiful Capi generates beautiful C API wrappers for your C++ classes\n * Copyright (C) 2015 Petr Petrovich Petrov\n *\n * This file is part of Beautiful Capi.\n *\n * Beautiful Capi is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Beautiful Capi is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Beautiful Capi.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n#include <iostream>\n#include \"CircleImpl.h\"\n\nExample::CircleImpl::CircleImpl() : m_radius(10.0)\n{\n    std::cout << \"Circle ctor\" << std::endl;\n}\n\nExample::CircleImpl::CircleImpl(const CircleImpl& other) : m_radius(other.m_radius)\n{\n    std::cout << \"Circle copy ctor\" << std::endl;\n}\n\nExample::CircleImpl::~CircleImpl()\n{\n    std::cout << \"Circle dtor\" << std::endl;\n}\n\nvoid Example::CircleImpl::Show() const\n{\n    std::cout << \"CircleImpl::Show(), radius = \" << m_radius << std::endl;\n}\n\nvoid Example::CircleImpl::SetRadius(double radius)\n{\n    m_radius = radius;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠBe", "aut", "if", "ul", "ĠC", "api", "Ġgenerates", "Ġbe", "aut", "if", "ul", "ĠC", "ĠAPI", "Ġwrappers", "Ġfor", "Ġyour", "ĠC", "++", "Ġclasses", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "ĠP", "etr", "ĠP", "et", "ro", "v", "ich", "ĠP", "et", "ro", "v", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠBe", "aut", "if", "ul", "ĠC", "api", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠBe", "aut", "if", "ul", "ĠC", "api", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠBe", "aut", "if", "ul", "ĠC", "api", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠBe", "aut", "if", "ul", "ĠC", "api", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ\"", "Circle", "Impl", ".", "h", "\"", "Ċ", "Ċ", "Example", "::", "Circle", "Impl", "::", "Circle", "Impl", "()", "Ġ:", "Ġm", "_", "radius", "(", "10", ".", "0", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Circle", "Ġctor", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "Example", "::", "Circle", "Impl", "::", "Circle", "Impl", "(", "const", "ĠCircle", "Impl", "&", "Ġother", ")", "Ġ:", "Ġm", "_", "radius", "(", "other", ".", "m", "_", "radius", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Circle", "Ġcopy", "Ġctor", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "Example", "::", "Circle", "Impl", "::~", "Circle", "Impl", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Circle", "Ġdt", "or", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠExample", "::", "Circle", "Impl", "::", "Show", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Circle", "Impl", "::", "Show", "(),", "Ġradius", "Ġ=", "Ġ\"", "Ġ<<", "Ġm", "_", "radius", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠExample", "::", "Circle", "Impl", "::", "Set", "Radius", "(", "double", "Ġradius", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "radius", "Ġ=", "Ġradius", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::302", "code": "/************************************\n *\tAUTHOR: \t\tDivyansh Gaba\t*\n *\tINSTITUTION: \tASET, BIJWASAN\t*\n ************************************/\n#include<bits/stdc++.h>\n#define fast ios_base::sync_with_stdio(0); cin.tie(0);\n#define F first\n#define S second\n#define PB push_back\n#define MP make_pair\n#define REP(i,a,b) for (int i = a; i <= b; i++)\n\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\n\nint main()\n{\n\tfast;\n\tll n,k;\n\tcin>>n>>k;\n\tll a[n];\n\tfor(int i = 0;i<n;i++) cin>>a[i];\n\tsort(a,a+n);\n\tint cov = 0;\n\tint ans = 0;\n    for(int i = 0;i<n-1;i++)\n    {\n        if(a[i] <= cov)\n            continue;\n        for(int j = i+1;j<n;j++)\n        {\n            if(a[j]-a[i] > k)\n            {\n                cov = a[j-1]+k;\n                ans+=1;\n                break;\n            }\n        }\n    }\n    if(cov < a[n-1])\n        ans+=1;\n    cout<<ans<<endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ/", "********************************", "****", "Ċ", "Ġ*", "ĉ", "AUTHOR", ":", "Ġĉ", "ĉ", "Div", "yan", "sh", "ĠG", "aba", "ĉ", "*", "Ċ", "Ġ*", "ĉ", "INST", "IT", "UTION", ":", "Ġ", "ĉ", "A", "SET", ",", "ĠBI", "JW", "AS", "AN", "ĉ", "*", "Ċ", "Ġ*********************************", "***/", "Ċ", "#", "include", "<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "#", "define", "Ġfast", "Ġios", "_", "base", "::", "sync", "_", "with", "_", "stdio", "(", "0", ");", "Ġcin", ".", "tie", "(", "0", ");", "Ċ", "#", "define", "ĠF", "Ġfirst", "Ċ", "#", "define", "ĠS", "Ġsecond", "Ċ", "#", "define", "ĠPB", "Ġpush", "_", "back", "Ċ", "#", "define", "ĠMP", "Ġmake", "_", "pair", "Ċ", "#", "define", "ĠRE", "P", "(", "i", ",", "a", ",", "b", ")", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġa", ";", "Ġi", "Ġ<=", "Ġb", ";", "Ġi", "++)", "Ċ", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "typedef", "Ġlong", "Ġlong", "Ġll", ";", "Ċ", "typedef", "Ġvector", "<", "int", ">", "Ġvi", ";", "Ċ", "typedef", "Ġpair", "<", "int", ",", "int", ">", "Ġpi", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "fast", ";", "Ċ", "ĉ", "ll", "Ġn", ",", "k", ";", "Ċ", "ĉ", "cin", ">>", "n", ">>", "k", ";", "Ċ", "ĉ", "ll", "Ġa", "[", "n", "];", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "i", "<", "n", ";", "i", "++)", "Ġcin", ">>", "a", "[", "i", "];", "Ċ", "ĉ", "sort", "(", "a", ",", "a", "+", "n", ");", "Ċ", "ĉ", "int", "Ġcov", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "int", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "i", "<", "n", "-", "1", ";", "i", "++)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "a", "[", "i", "]", "Ġ<=", "Ġcov", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġj", "Ġ=", "Ġi", "+", "1", ";", "j", "<", "n", ";", "j", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "a", "[", "j", "]-", "a", "[", "i", "]", "Ġ>", "Ġk", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcov", "Ġ=", "Ġa", "[", "j", "-", "1", "]+", "k", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġans", "+=", "1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġif", "(", "cov", "Ġ<", "Ġa", "[", "n", "-", "1", "])", "Ċ", "ĠĠĠĠĠĠĠ", "Ġans", "+=", "1", ";", "Ċ", "ĠĠĠ", "Ġcout", "<<", "ans", "<<", "endl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::303", "code": "int ObservableBlockedComForce::actual_calculate(PartCfg & partCfg) {\n  double* A = last_value;\n  unsigned int i;\n  unsigned int block;\n  unsigned int n_blocks;\n  unsigned int blocksize;\n  unsigned int id;\n  IntList* ids;\n  if (!sortPartCfg()) {\n      runtimeErrorMsg() <<\"could not sort partCfg\";\n    return -1;\n  }\n  ids=(IntList*) container;\n  n_blocks=n/3; \n  blocksize=ids->n/n_blocks;\n  for ( block = 0; block < n_blocks; block++ ) {\n    for ( i = 0; i < blocksize; i++ ) {\n      id = ids->e[block*blocksize+i];\n      if (ids->e[i] >= n_part)\n        return 1;\n      A[3*block+0] +=  partCfg[id].f.f[0]/time_step/time_step*2;\n      A[3*block+1] +=  partCfg[id].f.f[1]/time_step/time_step*2;\n      A[3*block+2] +=  partCfg[id].f.f[2]/time_step/time_step*2;\n    }\n  }\n  return 0;\n}\n", "code_tokens": ["Ġint", "ĠObservable", "Blocked", "Com", "Force", "::", "actual", "_", "calculate", "(", "Part", "Cfg", "Ġ&", "Ġpart", "Cfg", ")", "Ġ{", "Ċ", "Ġ", "Ġdouble", "*", "ĠA", "Ġ=", "Ġlast", "_", "value", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġblock", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġn", "_", "blocks", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġblocksize", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġid", ";", "Ċ", "Ġ", "ĠInt", "List", "*", "Ġids", ";", "Ċ", "Ġ", "Ġif", "Ġ(!", "sort", "Part", "Cfg", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġruntime", "ErrorMsg", "()", "Ġ<<", "\"", "could", "Ġnot", "Ġsort", "Ġpart", "Cfg", "\";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġids", "=(", "Int", "List", "*)", "Ġcontainer", ";", "Ċ", "Ġ", "Ġn", "_", "blocks", "=", "n", "/", "3", ";", "ĠĊ", "Ġ", "Ġblocksize", "=", "ids", "->", "n", "/", "n", "_", "blocks", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "Ġblock", "Ġ=", "Ġ0", ";", "Ġblock", "Ġ<", "Ġn", "_", "blocks", ";", "Ġblock", "++", "Ġ)", "Ġ{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġblocksize", ";", "Ġi", "++", "Ġ)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġid", "Ġ=", "Ġids", "->", "e", "[", "block", "*", "blocksize", "+", "i", "];", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "ids", "->", "e", "[", "i", "]", "Ġ>=", "Ġn", "_", "part", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠĠĠ", "ĠA", "[", "3", "*", "block", "+", "0", "]", "Ġ+=", "Ġ", "Ġpart", "Cfg", "[", "id", "].", "f", ".", "f", "[", "0", "]/", "time", "_", "step", "/", "time", "_", "step", "*", "2", ";", "Ċ", "ĠĠĠĠĠ", "ĠA", "[", "3", "*", "block", "+", "1", "]", "Ġ+=", "Ġ", "Ġpart", "Cfg", "[", "id", "].", "f", ".", "f", "[", "1", "]/", "time", "_", "step", "/", "time", "_", "step", "*", "2", ";", "Ċ", "ĠĠĠĠĠ", "ĠA", "[", "3", "*", "block", "+", "2", "]", "Ġ+=", "Ġ", "Ġpart", "Cfg", "[", "id", "].", "f", ".", "f", "[", "2", "]/", "time", "_", "step", "/", "time", "_", "step", "*", "2", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::304", "code": "/*\n* A Command & Conquer: Renegade SSGM Plugin, containing all the single player mission scripts\n* Copyright(C) 2017  Neijwiert\n*\n* This program is free software : you can redistribute it and / or modify\n* it under the terms of the GNU General Public License as published by\n* the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program.If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include \"General.h\"\n#include \"M01_Nod_GuardTower_Tailgun_JDG.h\"\n\n// This script is never used\nvoid M01_Nod_GuardTower_Tailgun_JDG::Created(GameObject *obj)\n{\n\tActionParamsStruct params;\n\tparams.Set_Basic(this, 100.0f, 17);\n\t\n\tVector3 pos = Commands->Get_Position(obj);\n\tGameObject *starObj = Commands->Get_A_Star(pos);\n\n\tparams.Set_Attack(starObj, 30.0f, 1.0f, true);\n\n\tCommands->Action_Attack(obj, params);\n}\n\nScriptRegistrant<M01_Nod_GuardTower_Tailgun_JDG> M01_Nod_GuardTower_Tailgun_JDGRegistrant(\"M01_Nod_GuardTower_Tailgun_JDG\", \"\");", "code_tokens": ["Ġ/*", "Ċ", "*", "ĠA", "ĠCommand", "Ġ&", "ĠCon", "quer", ":", "ĠR", "ene", "g", "ade", "ĠS", "SG", "M", "ĠPlugin", ",", "Ġcontaining", "Ġall", "Ġthe", "Ġsingle", "Ġplayer", "Ġmission", "Ġscripts", "Ċ", "*", "ĠCopyright", "(", "C", ")", "Ġ2017", "Ġ", "ĠNe", "ij", "wi", "ert", "Ċ", "*", "Ċ", "*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", "Ġ:", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "Ġ/", "Ġor", "Ġmodify", "Ċ", "*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "*", "Ċ", "*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "See", "Ġthe", "Ċ", "*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "*", "Ċ", "*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "If", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "General", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "M", "01", "_", "N", "od", "_", "Guard", "Tower", "_", "Tail", "gun", "_", "J", "DG", ".", "h", "\"", "Ċ", "Ċ", "//", "ĠThis", "Ġscript", "Ġis", "Ġnever", "Ġused", "Ċ", "void", "ĠM", "01", "_", "N", "od", "_", "Guard", "Tower", "_", "Tail", "gun", "_", "J", "DG", "::", "Created", "(", "GameObject", "Ġ*", "obj", ")", "Ċ", "{", "Ċ", "ĉ", "Action", "Params", "Struct", "Ġparams", ";", "Ċ", "ĉ", "params", ".", "Set", "_", "Basic", "(", "this", ",", "Ġ100", ".", "0", "f", ",", "Ġ17", ");", "Ċ", "ĉĊ", "ĉ", "Vector", "3", "Ġpos", "Ġ=", "ĠCommands", "->", "Get", "_", "Position", "(", "obj", ");", "Ċ", "ĉ", "GameObject", "Ġ*", "star", "Obj", "Ġ=", "ĠCommands", "->", "Get", "_", "A", "_", "Star", "(", "pos", ");", "Ċ", "Ċ", "ĉ", "params", ".", "Set", "_", "Attack", "(", "star", "Obj", ",", "Ġ30", ".", "0", "f", ",", "Ġ1", ".", "0", "f", ",", "Ġtrue", ");", "Ċ", "Ċ", "ĉ", "Commands", "->", "Action", "_", "Attack", "(", "obj", ",", "Ġparams", ");", "Ċ", "}", "Ċ", "Ċ", "Script", "Registr", "ant", "<", "M", "01", "_", "N", "od", "_", "Guard", "Tower", "_", "Tail", "gun", "_", "J", "DG", ">", "ĠM", "01", "_", "N", "od", "_", "Guard", "Tower", "_", "Tail", "gun", "_", "J", "DG", "Registr", "ant", "(\"", "M", "01", "_", "N", "od", "_", "Guard", "Tower", "_", "Tail", "gun", "_", "J", "DG", "\",", "Ġ\"\");"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::305", "code": "/*****************************************************************************\n                    The Dark Mod GPL Source Code\n \n This file is part of the The Dark Mod Source Code, originally based \n on the Doom 3 GPL Source Code as published in 2011.\n \n The Dark Mod Source Code is free software: you can redistribute it \n and/or modify it under the terms of the GNU General Public License as \n published by the Free Software Foundation, either version 3 of the License, \n or (at your option) any later version. For details, see LICENSE.TXT.\n \n Project: The Dark Mod (http://www.thedarkmod.com/)\n \n $Revision: 5122 $ (Revision of last commit) \n $Date: 2011-12-11 19:47:31 +0000 (Sun, 11 Dec 2011) $ (Date of last commit)\n $Author: greebo $ (Author of last commit)\n \n******************************************************************************/\n\n#include \"../../idlib/precompiled.h\"\n#pragma hdrstop\n\nvoid EditorPrintConsole(const char *msg) {\n}\n", "code_tokens": ["Ġ/", "************************************************************************", "*****", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠThe", "ĠD", "ark", "ĠMod", "ĠG", "PL", "ĠSource", "ĠCode", "Ċ", "ĠĊ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠThe", "ĠD", "ark", "ĠMod", "ĠSource", "ĠCode", ",", "Ġoriginally", "Ġbased", "ĠĊ", "Ġon", "Ġthe", "ĠDo", "om", "Ġ3", "ĠG", "PL", "ĠSource", "ĠCode", "Ġas", "Ġpublished", "Ġin", "Ġ2011", ".", "Ċ", "ĠĊ", "ĠThe", "ĠD", "ark", "ĠMod", "ĠSource", "ĠCode", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "ĠĊ", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "ĠĊ", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "ĠĊ", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĠFor", "Ġdetails", ",", "Ġsee", "ĠLICENSE", ".", "TXT", ".", "Ċ", "ĠĊ", "ĠProject", ":", "ĠThe", "ĠD", "ark", "ĠMod", "Ġ(", "http", "://", "www", ".", "th", "ed", "ark", "mod", ".", "com", "/)", "Ċ", "ĠĊ", "Ġ$", "Revision", ":", "Ġ512", "2", "Ġ$", "Ġ(", "Revision", "Ġof", "Ġlast", "Ġcommit", ")", "ĠĊ", "Ġ$", "Date", ":", "Ġ2011", "-", "12", "-", "11", "Ġ19", ":", "47", ":", "31", "Ġ+", "0000", "Ġ(", "Sun", ",", "Ġ11", "ĠDec", "Ġ2011", ")", "Ġ$", "Ġ(", "Date", "Ġof", "Ġlast", "Ġcommit", ")", "Ċ", "Ġ$", "Author", ":", "Ġg", "ree", "bo", "Ġ$", "Ġ(", "Author", "Ġof", "Ġlast", "Ġcommit", ")", "Ċ", "Ġ", "Ċ", "******************************************************************************/", "Ċ", "Ċ", "#", "include", "Ġ\"", "../../", "id", "lib", "/", "pre", "compiled", ".", "h", "\"", "Ċ", "#", "pragma", "Ġhdr", "stop", "Ċ", "Ċ", "void", "ĠEditor", "Print", "Console", "(", "const", "Ġchar", "Ġ*", "msg", ")", "Ġ{", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::306", "code": "#include \"TerrainNoise.h\"\n\n\n\nTerrainNoise::TerrainNoise()\n{\n\t\n}\n\n#undef CLASSNAME\n#define CLASSNAME TerrainNoise\n\nvoid TerrainNoise::bind_methods()\n{\n    REG_CSTR(0);\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Terrain", "Noise", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "Ċ", "Terrain", "Noise", "::", "Terrain", "Noise", "()", "Ċ", "{", "Ċ", "ĉ", "Ċ", "}", "Ċ", "Ċ", "#", "undef", "ĠCLASS", "NAME", "Ċ", "#", "define", "ĠCLASS", "NAME", "ĠTerrain", "Noise", "Ċ", "Ċ", "void", "ĠTerrain", "Noise", "::", "bind", "_", "methods", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠREG", "_", "C", "STR", "(", "0", ");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::307", "code": "//\n//  input_properties_py.hpp\n//  blockscipy\n//\n//  Created by Malte Moeser on 8/26/19.\n//\n\n#ifndef input_properties_py_h\n#define input_properties_py_h\n\n#include \"method_tags.hpp\"\n\n#include <blocksci/chain/block.hpp>\n\nstruct AddInputMethods {\n    template <typename FuncApplication>\n    void operator()(FuncApplication func) {\n        using namespace blocksci;\n        func(property_tag, \"value\", &Input::getValue, \"The value in base currency attached to this input\");\n        func(property_tag, \"address_type\", &Input::getType, \"The address type of the input\");\n        func(property_tag, \"sequence_num\", &Input::sequenceNumber, \"The sequence number of the input\");\n        func(property_tag, \"spent_tx_index\", &Input::spentTxIndex, \"The index of the transaction that this input spent\");\n        func(property_tag, \"spent_tx\", &Input::getSpentTx, \"The transaction that this input spent\");\n        func(property_tag, \"spent_output\", &Input::getSpentOutput, \"The output that this input spent\");\n        func(property_tag, \"age\", &Input::age, \"The number of blocks between the spent output and this input\");\n        func(property_tag, \"tx\", &Input::transaction, \"The transaction that contains this input\");\n        func(property_tag, \"block\", &Input::block, \"The block that contains this input\");\n        func(property_tag, \"index\", &Input::inputIndex, \"The index inside this transaction's inputs\");\n        func(property_tag, \"tx_index\", &Input::txIndex, \"The tx index of this input's transaction\");\n        ;\n    }\n};\n\n#endif /* input_properties_py_h */\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġinput", "_", "properties", "_", "py", ".", "hpp", "Ċ", "//", "Ġ", "Ġblock", "scipy", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠM", "al", "te", "ĠMo", "es", "er", "Ġon", "Ġ8", "/", "26", "/", "19", ".", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "Ġinput", "_", "properties", "_", "py", "_", "h", "Ċ", "#", "define", "Ġinput", "_", "properties", "_", "py", "_", "h", "Ċ", "Ċ", "#", "include", "Ġ\"", "method", "_", "tags", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "block", "sci", "/", "chain", "/", "block", ".", "hpp", ">", "Ċ", "Ċ", "struct", "ĠAdd", "Input", "Methods", "Ġ{", "Ċ", "ĠĠĠ", "Ġtemplate", "Ġ<", "typename", "ĠFunc", "Application", ">", "Ċ", "ĠĠĠ", "Ġvoid", "Ġoperator", "()(", "Func", "Application", "Ġfunc", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġnamespace", "Ġblock", "sci", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "value", "\",", "Ġ&", "Input", "::", "getValue", ",", "Ġ\"", "The", "Ġvalue", "Ġin", "Ġbase", "Ġcurrency", "Ġattached", "Ġto", "Ġthis", "Ġinput", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "address", "_", "type", "\",", "Ġ&", "Input", "::", "getType", ",", "Ġ\"", "The", "Ġaddress", "Ġtype", "Ġof", "Ġthe", "Ġinput", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "sequence", "_", "num", "\",", "Ġ&", "Input", "::", "sequence", "Number", ",", "Ġ\"", "The", "Ġsequence", "Ġnumber", "Ġof", "Ġthe", "Ġinput", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "spent", "_", "tx", "_", "index", "\",", "Ġ&", "Input", "::", "spent", "Tx", "Index", ",", "Ġ\"", "The", "Ġindex", "Ġof", "Ġthe", "Ġtransaction", "Ġthat", "Ġthis", "Ġinput", "Ġspent", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "spent", "_", "tx", "\",", "Ġ&", "Input", "::", "get", "Sp", "ent", "Tx", ",", "Ġ\"", "The", "Ġtransaction", "Ġthat", "Ġthis", "Ġinput", "Ġspent", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "spent", "_", "output", "\",", "Ġ&", "Input", "::", "get", "Sp", "ent", "Output", ",", "Ġ\"", "The", "Ġoutput", "Ġthat", "Ġthis", "Ġinput", "Ġspent", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "age", "\",", "Ġ&", "Input", "::", "age", ",", "Ġ\"", "The", "Ġnumber", "Ġof", "Ġblocks", "Ġbetween", "Ġthe", "Ġspent", "Ġoutput", "Ġand", "Ġthis", "Ġinput", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "tx", "\",", "Ġ&", "Input", "::", "transaction", ",", "Ġ\"", "The", "Ġtransaction", "Ġthat", "Ġcontains", "Ġthis", "Ġinput", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "block", "\",", "Ġ&", "Input", "::", "block", ",", "Ġ\"", "The", "Ġblock", "Ġthat", "Ġcontains", "Ġthis", "Ġinput", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "index", "\",", "Ġ&", "Input", "::", "input", "Index", ",", "Ġ\"", "The", "Ġindex", "Ġinside", "Ġthis", "Ġtransaction", "'s", "Ġinputs", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "(", "property", "_", "tag", ",", "Ġ\"", "tx", "_", "index", "\",", "Ġ&", "Input", "::", "tx", "Index", ",", "Ġ\"", "The", "Ġtx", "Ġindex", "Ġof", "Ġthis", "Ġinput", "'s", "Ġtransaction", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ;", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ/*", "Ġinput", "_", "properties", "_", "py", "_", "h", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::308", "code": "//=======================================================================\n// Author: Donovan Parks\n//\n// Copyright 2009 Donovan Parks\n//\n// This file is part of Chameleon.\n//\n// Chameleon is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Chameleon is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Chameleon.  If not, see <http://www.gnu.org/licenses/>.\n//=======================================================================\n\n#ifndef AUTO_COLLAPSE_DLG_HPP\n#define AUTO_COLLAPSE_DLG_HPP\n\n#include \"ui_AutoCollapseDialog.h\"\n\n#include \"stdafx.h\"\n#include \"VisualTree.hpp\"\n\nclass AutoCollapseDlg : public QDockWidget\n{\n\tQ_OBJECT\n\npublic:\n\tAutoCollapseDlg(QWidget *parent = 0, Qt::WFlags flags = 0);\n\t~AutoCollapseDlg() {}\n\n\tVisualTree::AUTO_COLLAPSE_CONSTRAINT GetCollapseVariable();\n\tfloat GetCollapseConstraint() { return ui.spinFilterValue->value(); }\n\nsignals:\n\tvoid Run();\n\t\nprivate slots:\n\tvoid Execute();\n\tvoid TopLevelChanged(bool bFloating); \n\nprivate:\n\tUi::AutoCollapseDlg ui;\n\n};\n\n#endif \n", "code_tokens": ["Ġ//", "================================================================", "=======", "Ċ", "//", "ĠAuthor", ":", "ĠDon", "ov", "an", "ĠP", "ark", "s", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ2009", "ĠDon", "ov", "an", "ĠP", "ark", "s", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠCh", "ame", "le", "on", ".", "Ċ", "//", "Ċ", "//", "ĠCh", "ame", "le", "on", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠCh", "ame", "le", "on", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "ĠCh", "ame", "le", "on", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//================================================================", "=======", "Ċ", "Ċ", "#", "ifndef", "ĠAUTO", "_", "COLL", "APSE", "_", "DLG", "_", "HP", "P", "Ċ", "#", "define", "ĠAUTO", "_", "COLL", "APSE", "_", "DLG", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "ui", "_", "Auto", "Collapse", "Dialog", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Visual", "Tree", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠAuto", "Collapse", "Dlg", "Ġ:", "Ġpublic", "ĠQ", "DockWidget", "Ċ", "{", "Ċ", "ĉ", "Q", "_", "OBJECT", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "Auto", "Collapse", "Dlg", "(", "QWidget", "Ġ*", "parent", "Ġ=", "Ġ0", ",", "ĠQt", "::", "W", "Flags", "Ġflags", "Ġ=", "Ġ0", ");", "Ċ", "ĉ", "~", "Auto", "Collapse", "Dlg", "()", "Ġ{}", "Ċ", "Ċ", "ĉ", "Visual", "Tree", "::", "AUTO", "_", "COLL", "APSE", "_", "CONSTRAINT", "ĠGet", "Collapse", "Variable", "();", "Ċ", "ĉ", "float", "ĠGet", "Collapse", "Constraint", "()", "Ġ{", "Ġreturn", "Ġui", ".", "spin", "Filter", "Value", "->", "value", "();", "Ġ}", "Ċ", "Ċ", "signals", ":", "Ċ", "ĉ", "void", "ĠRun", "();", "Ċ", "ĉ", "Ċ", "private", "Ġslots", ":", "Ċ", "ĉ", "void", "ĠExecute", "();", "Ċ", "ĉ", "void", "ĠTop", "Level", "Changed", "(", "bool", "Ġb", "Floating", ");", "ĠĊ", "Ċ", "private", ":", "Ċ", "ĉ", "Ui", "::", "Auto", "Collapse", "Dlg", "Ġui", ";", "Ċ", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "ĠĊ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::309", "code": "#include \"vector_plot_2d.h\"\n#include \"../graph/vector_graph_2d.h\"\n\nnamespace Gnuplot {\n\nVector_plot_2d::Vector_plot_2d()\n    // Default constructor\n    : Plot_2d {Representation::TwoDVector}\n{\n    // Add default graph:\n    this->graphs.push_back(std::make_shared<Vector_graph_2d>());\n}\n\nVector_plot_2d::Vector_plot_2d(const std::string& file_name)\n    // Specify file name of output gnuplot script\n    : Plot_2d {Representation::TwoDVector, file_name}\n{\n    this->graphs.push_back(std::make_shared<Vector_graph_2d>(file_name));\n}\n\nvoid Vector_plot_2d::add_data_point(const double& x, const double& y,\n                                    const double& vec_x, const double& vec_y)\n{\n    auto* ptr = dynamic_cast<Vector_graph_2d*>(this->graphs.front().get());\n    if (ptr == nullptr) {\n        throw std::runtime_error(\"In Vector_plot_2d::add_data_point: No graph accessible\");\n    }\n    ptr->add_data_point(x, y, vec_x, vec_y);  // Have Graph handle Data_point construction\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "vector", "_", "plot", "_", "2", "d", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "graph", "/", "vector", "_", "graph", "_", "2", "d", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠG", "n", "uplot", "Ġ{", "Ċ", "Ċ", "Vector", "_", "plot", "_", "2", "d", "::", "Vector", "_", "plot", "_", "2", "d", "()", "Ċ", "ĠĠĠ", "Ġ//", "ĠDefault", "Ġconstructor", "Ċ", "ĠĠĠ", "Ġ:", "ĠPlot", "_", "2", "d", "Ġ{", "Representation", "::", "Two", "D", "Vector", "}", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠAdd", "Ġdefault", "Ġgraph", ":", "Ċ", "ĠĠĠ", "Ġthis", "->", "graphs", ".", "push", "_", "back", "(", "std", "::", "make", "_", "shared", "<", "Vector", "_", "graph", "_", "2", "d", ">());", "Ċ", "}", "Ċ", "Ċ", "Vector", "_", "plot", "_", "2", "d", "::", "Vector", "_", "plot", "_", "2", "d", "(", "const", "Ġstd", "::", "string", "&", "Ġfile", "_", "name", ")", "Ċ", "ĠĠĠ", "Ġ//", "ĠSpecify", "Ġfile", "Ġname", "Ġof", "Ġoutput", "Ġgn", "uplot", "Ġscript", "Ċ", "ĠĠĠ", "Ġ:", "ĠPlot", "_", "2", "d", "Ġ{", "Representation", "::", "Two", "D", "Vector", ",", "Ġfile", "_", "name", "}", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġthis", "->", "graphs", ".", "push", "_", "back", "(", "std", "::", "make", "_", "shared", "<", "Vector", "_", "graph", "_", "2", "d", ">(", "file", "_", "name", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠVector", "_", "plot", "_", "2", "d", "::", "add", "_", "data", "_", "point", "(", "const", "Ġdouble", "&", "Ġx", ",", "Ġconst", "Ġdouble", "&", "Ġy", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġdouble", "&", "Ġvec", "_", "x", ",", "Ġconst", "Ġdouble", "&", "Ġvec", "_", "y", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġauto", "*", "Ġptr", "Ġ=", "Ġdynamic", "_", "cast", "<", "Vector", "_", "graph", "_", "2", "d", "*>(", "this", "->", "graphs", ".", "front", "().", "get", "());", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "ptr", "Ġ==", "Ġnullptr", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "In", "ĠVector", "_", "plot", "_", "2", "d", "::", "add", "_", "data", "_", "point", ":", "ĠNo", "Ġgraph", "Ġaccessible", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġptr", "->", "add", "_", "data", "_", "point", "(", "x", ",", "Ġy", ",", "Ġvec", "_", "x", ",", "Ġvec", "_", "y", ");", "Ġ", "Ġ//", "ĠHave", "ĠGraph", "Ġhandle", "ĠData", "_", "point", "Ġconstruction", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::310", "code": "// Example 4-8: Using continue in a loop.\n#include <cmath>\n#include <iostream>\n#include <istream>\n#include <limits>\n#include <ostream>\nusing namespace std;\n\nint main(int argc, char *argv[]){\n\t\n  while(true) {\n    cout << \"Enter a number: \";\n    double x;\n    cin >> x;\n    if (cin.eof() || cin.bad())\n      // Input error: exit.\n      break;\n    else if (cin.fail()) {\n      // Invalid input: skip the rest of the line.\n      cin.clear();\n      cin.ignore(numeric_limits<int>::max(), '\\n');\n      continue;\n    }\n    cout << \"sqrt(\" << x << \")=\" << sqrt(x) << endl;\n  }\n}\n", "code_tokens": ["Ġ//", "ĠExample", "Ġ4", "-", "8", ":", "ĠUsing", "Ġcontinue", "Ġin", "Ġa", "Ġloop", ".", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "istream", ">", "Ċ", "#", "include", "Ġ<", "limits", ">", "Ċ", "#", "include", "Ġ<", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[]", "){", "Ċ", "ĉĊ", "Ġ", "Ġwhile", "(", "true", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "Enter", "Ġa", "Ġnumber", ":", "Ġ\";", "Ċ", "ĠĠĠ", "Ġdouble", "Ġx", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġx", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "cin", ".", "eof", "()", "Ġ||", "Ġcin", ".", "bad", "())", "Ċ", "ĠĠĠĠĠ", "Ġ//", "ĠInput", "Ġerror", ":", "Ġexit", ".", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(", "cin", ".", "fail", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ//", "ĠInvalid", "Ġinput", ":", "Ġskip", "Ġthe", "Ġrest", "Ġof", "Ġthe", "Ġline", ".", "Ċ", "ĠĠĠĠĠ", "Ġcin", ".", "clear", "();", "Ċ", "ĠĠĠĠĠ", "Ġcin", ".", "ignore", "(", "numeric", "_", "limits", "<", "int", ">::", "max", "(),", "Ġ'\\", "n", "');", "Ċ", "ĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "sqrt", "(\"", "Ġ<<", "Ġx", "Ġ<<", "Ġ\")", "=\"", "Ġ<<", "Ġsqrt", "(", "x", ")", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::311", "code": "\n#include \"h17disk.h\"\n\n#include <stdio.h>\n\n\nstatic int usage(char *progName) {\n\tfprintf(stderr,\"Usage: %s old_h17disk_file new_h17disk_file\\n\",progName);\n\treturn 1;\n}\n\nint main(int argc, char *argv[]) {\n    H17Disk *image = new(H17Disk);\n\n    if (argc < 2 || argc > 3)\n    {\n        usage(argv[0]);\n        return 1;\n    }\n\n    std::string infile(argv[1]);\n\n    image->loadFile(infile.c_str());\n\n    std::string outfile;\n\n    if (argc == 2) \n    {\n        outfile.assign(argv[1], infile.rfind(\".\"));\n        outfile.append(\".h17raw\");\n    }\n    else \n    {\n        outfile.assign(argv[2]);\n    }\n\n    printf(\"------------------------\\n\");\n    printf(\"  Read Complete\\n\");\n    printf(\"------------------------\\n\");\n\n    image->analyze();\n\n    image->saveAsRaw(outfile.c_str());\n    \n    if (image)\n    {\n        delete image;\n    } \n    return 0; \n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "h", "17", "disk", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "Ċ", "Ċ", "static", "Ġint", "Ġusage", "(", "char", "Ġ*", "prog", "Name", ")", "Ġ{", "Ċ", "ĉ", "fprintf", "(", "stderr", ",\"", "Usage", ":", "Ġ%", "s", "Ġold", "_", "h", "17", "disk", "_", "file", "Ġnew", "_", "h", "17", "disk", "_", "file", "\\", "n", "\",", "prog", "Name", ");", "Ċ", "ĉ", "return", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ġ{", "Ċ", "ĠĠĠ", "ĠH", "17", "Disk", "Ġ*", "image", "Ġ=", "Ġnew", "(", "H", "17", "Disk", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "argc", "Ġ<", "Ġ2", "Ġ||", "Ġargc", "Ġ>", "Ġ3", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusage", "(", "argv", "[", "0", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġinfile", "(", "argv", "[", "1", "]);", "Ċ", "Ċ", "ĠĠĠ", "Ġimage", "->", "load", "File", "(", "infile", ".", "c", "_", "str", "());", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġoutfile", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "argc", "Ġ==", "Ġ2", ")", "ĠĊ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġoutfile", ".", "assign", "(", "argv", "[", "1", "],", "Ġinfile", ".", "rfind", "(\".", "\"));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġoutfile", ".", "append", "(\".", "h", "17", "raw", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "ĠĊ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġoutfile", ".", "assign", "(", "argv", "[", "2", "]);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "------------------------", "\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "Ġ", "ĠRead", "ĠComplete", "\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "------------------------", "\\", "n", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġimage", "->", "analyze", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġimage", "->", "save", "As", "Raw", "(", "outfile", ".", "c", "_", "str", "());", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġif", "Ġ(", "image", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdelete", "Ġimage", ";", "Ċ", "ĠĠĠ", "Ġ}", "ĠĊ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ġ", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::312", "code": "//-----------------------------------------------------------------------------\r\n//  Class implementation:  Input_Value::Line\r\n//-----------------------------------------------------------------------------\r\n\r\n#include \"../pragmas.h\"\r\n\r\n#include \"Input_Value_Line.h\"\r\n#include \"Input_Text_File.h\"\r\n#include \"Assert_That.h\"\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nInput_Value::Line::Line()\r\n    : str_(\"\"),\r\n      name_(\"\"),\r\n      name_pos_(0),\r\n      unmatched_()\r\n{\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nbool Input_Value::Line::name_matches(const std::string & name,\r\n\t\t\t\t     Str_Equal_Func      str_equal_func,\r\n\t\t\t\t     std::string &\t rest_of_line)\r\n{\r\n    ASSERT_THAT(str_equal_func != 0)\r\n\r\n    if (str_equal_func(name, name_)) {\r\n\trest_of_line = str_.substr(name_pos_ + name_.size());\r\n\treturn true;\r\n    } else {\r\n\tunmatched_.push_back(name);\r\n\treturn false;\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nbool Input_Value::Line::read(Input::Text_File & file)\r\n{\r\n    if (file.read_line(str_)) {\r\n\tstd::istringstream strm(str_);\r\n\tif (strm >> name_) {\r\n\t    name_pos_ = str_.find(name_);\r\n\t} else {\r\n\t    name_ = \"\";\r\n\t    name_pos_ = 0;\r\n\t}\r\n\tunmatched_.clear();\r\n\treturn true;\r\n    } else {\r\n\tstr_ = \"\";\r\n\tname_ = \"\";\r\n\tname_pos_ = 0;\r\n\treturn false;\r\n    }\r\n}\r\n", "code_tokens": ["Ġ//", "------------------------------------------------------------------------", "-----", "č", "Ċ", "//", "Ġ", "ĠClass", "Ġimplementation", ":", "Ġ", "ĠInput", "_", "Value", "::", "Line", "č", "Ċ", "//-----------------------------------------------------------------------------", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"../", "prag", "mas", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Input", "_", "Value", "_", "Line", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Input", "_", "Text", "_", "File", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Assert", "_", "That", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "//----------------------------------------------------------------------------", "č", "Ċ", "č", "Ċ", "Input", "_", "Value", "::", "Line", "::", "Line", "()", "č", "Ċ", "ĠĠĠ", "Ġ:", "Ġstr", "_(\"", "\"),", "č", "Ċ", "ĠĠĠĠĠ", "Ġname", "_(\"", "\"),", "č", "Ċ", "ĠĠĠĠĠ", "Ġname", "_", "pos", "_(", "0", "),", "č", "Ċ", "ĠĠĠĠĠ", "Ġun", "matched", "_()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//----------------------------------------------------------------------------", "č", "Ċ", "č", "Ċ", "bool", "ĠInput", "_", "Value", "::", "Line", "::", "name", "_", "matches", "(", "const", "Ġstd", "::", "string", "Ġ&", "Ġname", ",", "č", "Ċ", "ĉĉĉĉĠĠĠĠ", "ĠStr", "_", "Equal", "_", "Func", "ĠĠĠĠĠ", "Ġstr", "_", "equal", "_", "func", ",", "č", "Ċ", "ĉĉĉĉĠĠĠĠ", "Ġstd", "::", "string", "Ġ&", "ĉ", "Ġrest", "_", "of", "_", "line", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "ĠASSERT", "_", "TH", "AT", "(", "str", "_", "equal", "_", "func", "Ġ!=", "Ġ0", ")", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "str", "_", "equal", "_", "func", "(", "name", ",", "Ġname", "_))", "Ġ{", "č", "Ċ", "ĉ", "rest", "_", "of", "_", "line", "Ġ=", "Ġstr", "_.", "substr", "(", "name", "_", "pos", "_", "Ġ+", "Ġname", "_.", "size", "());", "č", "Ċ", "ĉ", "return", "Ġtrue", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "č", "Ċ", "ĉ", "un", "matched", "_.", "push", "_", "back", "(", "name", ");", "č", "Ċ", "ĉ", "return", "Ġfalse", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//----------------------------------------------------------------------------", "č", "Ċ", "č", "Ċ", "bool", "ĠInput", "_", "Value", "::", "Line", "::", "read", "(", "Input", "::", "Text", "_", "File", "Ġ&", "Ġfile", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "file", ".", "read", "_", "line", "(", "str", "_))", "Ġ{", "č", "Ċ", "ĉ", "std", "::", "i", "stringstream", "Ġstrm", "(", "str", "_);", "č", "Ċ", "ĉ", "if", "Ġ(", "strm", "Ġ>>", "Ġname", "_)", "Ġ{", "č", "Ċ", "ĉĠĠĠ", "Ġname", "_", "pos", "_", "Ġ=", "Ġstr", "_.", "find", "(", "name", "_);", "č", "Ċ", "ĉ", "}", "Ġelse", "Ġ{", "č", "Ċ", "ĉĠĠĠ", "Ġname", "_", "Ġ=", "Ġ\"\";", "č", "Ċ", "ĉĠĠĠ", "Ġname", "_", "pos", "_", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "un", "matched", "_.", "clear", "();", "č", "Ċ", "ĉ", "return", "Ġtrue", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "č", "Ċ", "ĉ", "str", "_", "Ġ=", "Ġ\"\";", "č", "Ċ", "ĉ", "name", "_", "Ġ=", "Ġ\"\";", "č", "Ċ", "ĉ", "name", "_", "pos", "_", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "return", "Ġfalse", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::313", "code": "#include \"gradientwidget.h\"\n#include \"ui_gradientwidget.h\"\n\nGradientWidget::GradientWidget(QWidget *parent) :\n    AbstractWidget(parent),\n    ui(new Ui::GradientWidget)\n{\n    ui->setupUi(this);\n    connect(ui->nextButton,SIGNAL(clicked(bool)),this,SLOT(nextClick(bool)));\n    hide();\n}\n\nGradientWidget::~GradientWidget()\n{\n    delete ui;\n}\n\nvoid GradientWidget::showEvent(QShowEvent *)\n{\n    ui->graphicsView->setScene(new QGraphicsScene);\n}\n\nvoid GradientWidget::execute()\n{\n    module.mod_main();\n    m_picture renPic;\n    renPic.width = module.p_width;\n    renPic.height = module.p_height;\n    renPic.data = module.HDR;\n    ui->graphicsView->scene()->addPixmap(QPixmap::fromImage(picToImg(renPic)));\n    ui->graphicsView->scene()->update();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "gradient", "widget", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "gradient", "widget", ".", "h", "\"", "Ċ", "Ċ", "Gradient", "Widget", "::", "Gradient", "Widget", "(", "QWidget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠAbstract", "Widget", "(", "parent", "),", "Ċ", "ĠĠĠ", "Ġui", "(", "new", "ĠUi", "::", "Gradient", "Widget", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "setup", "Ui", "(", "this", ");", "Ċ", "ĠĠĠ", "Ġconnect", "(", "ui", "->", "next", "Button", ",", "SIGNAL", "(", "clicked", "(", "bool", ")),", "this", ",", "SLOT", "(", "next", "Click", "(", "bool", ")));", "Ċ", "ĠĠĠ", "Ġhide", "();", "Ċ", "}", "Ċ", "Ċ", "Gradient", "Widget", "::~", "Gradient", "Widget", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġui", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGradient", "Widget", "::", "showEvent", "(", "Q", "Show", "Event", "Ġ*)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "graphics", "View", "->", "set", "Scene", "(", "new", "ĠQGraphics", "Scene", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGradient", "Widget", "::", "execute", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġmodule", ".", "mod", "_", "main", "();", "Ċ", "ĠĠĠ", "Ġm", "_", "picture", "Ġren", "Pic", ";", "Ċ", "ĠĠĠ", "Ġren", "Pic", ".", "width", "Ġ=", "Ġmodule", ".", "p", "_", "width", ";", "Ċ", "ĠĠĠ", "Ġren", "Pic", ".", "height", "Ġ=", "Ġmodule", ".", "p", "_", "height", ";", "Ċ", "ĠĠĠ", "Ġren", "Pic", ".", "data", "Ġ=", "Ġmodule", ".", "HDR", ";", "Ċ", "ĠĠĠ", "Ġui", "->", "graphics", "View", "->", "scene", "()->", "add", "Pixmap", "(", "QPixmap", "::", "from", "Image", "(", "pic", "To", "Img", "(", "ren", "Pic", ")));", "Ċ", "ĠĠĠ", "Ġui", "->", "graphics", "View", "->", "scene", "()->", "update", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::314", "code": "﻿/*\n * Copyright 2016 Takashi Inoue\n *\n * This file is part of EzPuzzles.\n *\n * EzPuzzles is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * EzPuzzles is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with EzPuzzles.  If not, see <http://www.gnu.org/licenses/>.\n */\n#include \"WallPiece.h\"\n\nnamespace MineSweeper {\n\nbool WallPiece::isOpened() const\n{\n    return true;\n}\n\nbool WallPiece::isLocked() const\n{\n    return true;\n}\n\nbool WallPiece::isMine() const\n{\n    return false;\n}\n\nbool WallPiece::isNearMine() const\n{\n    return false;\n}\n\nbool WallPiece::isWall() const\n{\n    return true;\n}\n\nint WallPiece::countAroundMines() const\n{\n    return 0;\n}\n\n} // MineSweeper\n", "code_tokens": ["Ġ", "ï", "»", "¿", "/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2016", "ĠT", "ak", "ash", "i", "ĠIn", "o", "ue", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠE", "z", "P", "uzz", "les", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠE", "z", "P", "uzz", "les", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠE", "z", "P", "uzz", "les", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠE", "z", "P", "uzz", "les", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "Wall", "Piece", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠM", "ine", "Sw", "ee", "per", "Ġ{", "Ċ", "Ċ", "bool", "ĠW", "all", "Piece", "::", "isOpen", "ed", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠW", "all", "Piece", "::", "is", "Locked", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠW", "all", "Piece", "::", "is", "Mine", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠW", "all", "Piece", "::", "is", "Near", "Mine", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠW", "all", "Piece", "::", "is", "Wall", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠW", "all", "Piece", "::", "count", "Around", "M", "ines", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "ĠM", "ine", "Sw", "ee", "per", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::315", "code": "void ConfigTriggerMakerPP2016(){\n\tgROOT->LoadMacro(\"$ALICE_PHYSICS/PWG/EMCAL/macros/AddTaskEmcalTriggerMakerNew.C\");\n\tAliEmcalTriggerMakerTask *triggermaker = AddTaskEmcalTriggerMakerNew(\"EmcalTriggers\", \"\", \"\", kTRUE);\n\ttriggermaker->SetUseL0Amplitudes(kFALSE);\n\ttriggermaker->SelectCollisionCandidates(AliVEvent::kAny);\n\t//triggermaker->SelectCollisionCandidates(AliVEvent::kAnyINT | AliVEvent::kEMCEGA | AliVEvent::kEMCEJE);\n\ttriggermaker->GetTriggerMaker()->ConfigureForPP2015();\n}\n", "code_tokens": ["Ġvoid", "ĠConfig", "Trigger", "Maker", "PP", "2016", "(){", "Ċ", "ĉ", "g", "ROOT", "->", "Load", "Macro", "(\"$", "AL", "ICE", "_", "PHYS", "ICS", "/", "PW", "G", "/", "EM", "CAL", "/", "macros", "/", "Add", "Task", "Em", "cal", "Trigger", "Maker", "New", ".", "C", "\");", "Ċ", "ĉ", "Ali", "Em", "cal", "Trigger", "Maker", "Task", "Ġ*", "trigger", "maker", "Ġ=", "ĠAdd", "Task", "Em", "cal", "Trigger", "Maker", "New", "(\"", "Em", "cal", "Triggers", "\",", "Ġ\"\",", "Ġ\"\",", "Ġk", "TRUE", ");", "Ċ", "ĉ", "trigger", "maker", "->", "Set", "Use", "L", "0", "Amplitude", "s", "(", "k", "FALSE", ");", "Ċ", "ĉ", "trigger", "maker", "->", "Select", "Collision", "Candidates", "(", "Ali", "V", "Event", "::", "k", "Any", ");", "Ċ", "ĉ", "//", "trigger", "maker", "->", "Select", "Collision", "Candidates", "(", "Ali", "V", "Event", "::", "k", "Any", "INT", "Ġ|", "ĠAli", "V", "Event", "::", "k", "EM", "CE", "GA", "Ġ|", "ĠAli", "V", "Event", "::", "k", "EM", "CE", "JE", ");", "Ċ", "ĉ", "trigger", "maker", "->", "Get", "Trigger", "Maker", "()->", "Configure", "For", "PP", "2015", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::316", "code": "#include \"musicabstractfloatwidget.h\"\n\nMusicAbstractFloatWidget::MusicAbstractFloatWidget(QWidget *parent)\n    : QLabel(parent)\n{\n    m_animation = new QPropertyAnimation(this, \"geometry\", this);\n    m_animation->setDuration(500);\n    m_blockAnimation = false;\n}\n\nMusicAbstractFloatWidget::~MusicAbstractFloatWidget()\n{\n    delete m_animation;\n}\n\nvoid MusicAbstractFloatWidget::animationIn()\n{\n    m_animation->setStartValue(m_rectOut);\n    m_animation->setEndValue(m_rectIn);\n    m_animation->start();\n}\n\nvoid MusicAbstractFloatWidget::animationOut()\n{\n    m_animation->setStartValue(m_rectIn);\n    m_animation->setEndValue(m_rectOut);\n    m_animation->start();\n}\n\n#if TTK_QT_VERSION_CHECK(6,0,0)\nvoid MusicAbstractFloatWidget::enterEvent(QEnterEvent *event)\n#else\nvoid MusicAbstractFloatWidget::enterEvent(QEvent *event)\n#endif\n{\n    QLabel::enterEvent(event);\n    if(!m_blockAnimation)\n    {\n        animationIn();\n    }\n}\n\nvoid MusicAbstractFloatWidget::leaveEvent(QEvent *event)\n{\n    QLabel::leaveEvent(event);\n    if(!m_blockAnimation)\n    {\n        animationOut();\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "music", "abstract", "float", "widget", ".", "h", "\"", "Ċ", "Ċ", "Music", "Abstract", "Float", "Widget", "::", "Music", "Abstract", "Float", "Widget", "(", "QWidget", "Ġ*", "parent", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠQLabel", "(", "parent", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "animation", "Ġ=", "Ġnew", "ĠQ", "Property", "Animation", "(", "this", ",", "Ġ\"", "geometry", "\",", "Ġthis", ");", "Ċ", "ĠĠĠ", "Ġm", "_", "animation", "->", "setDuration", "(", "500", ");", "Ċ", "ĠĠĠ", "Ġm", "_", "block", "Animation", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "Music", "Abstract", "Float", "Widget", "::~", "Music", "Abstract", "Float", "Widget", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġm", "_", "animation", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "animation", "In", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "animation", "->", "setStart", "Value", "(", "m", "_", "rect", "Out", ");", "Ċ", "ĠĠĠ", "Ġm", "_", "animation", "->", "setEnd", "Value", "(", "m", "_", "rect", "In", ");", "Ċ", "ĠĠĠ", "Ġm", "_", "animation", "->", "start", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "animation", "Out", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "animation", "->", "setStart", "Value", "(", "m", "_", "rect", "In", ");", "Ċ", "ĠĠĠ", "Ġm", "_", "animation", "->", "setEnd", "Value", "(", "m", "_", "rect", "Out", ");", "Ċ", "ĠĠĠ", "Ġm", "_", "animation", "->", "start", "();", "Ċ", "}", "Ċ", "Ċ", "#", "if", "ĠT", "TK", "_", "QT", "_", "VERSION", "_", "CHECK", "(", "6", ",", "0", ",", "0", ")", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "enter", "Event", "(", "Q", "Enter", "Event", "Ġ*", "event", ")", "Ċ", "#", "else", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "enter", "Event", "(", "QEvent", "Ġ*", "event", ")", "Ċ", "#", "endif", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQLabel", "::", "enter", "Event", "(", "event", ");", "Ċ", "ĠĠĠ", "Ġif", "(!", "m", "_", "block", "Animation", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġanimation", "In", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "leave", "Event", "(", "QEvent", "Ġ*", "event", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQLabel", "::", "leave", "Event", "(", "event", ");", "Ċ", "ĠĠĠ", "Ġif", "(!", "m", "_", "block", "Animation", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġanimation", "Out", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::317", "code": "#include \"Meta_temporary_type.hpp\"\n#include \"../colors.h\"\n#if COMPILER\n#include \"../compiler/Compiler.hpp\"\n#endif\n\nnamespace ls {\n\nbool Meta_temporary_type::operator == (const Type* type) const {\n\treturn false;\n}\nint Meta_temporary_type::distance(const Type* type) const {\n\treturn -1;\n}\n#if COMPILER\nllvm::Type* Meta_temporary_type::llvm(Compiler& c) const {\n\treturn llvm::Type::getVoidTy(c.getContext());\n}\n#endif\nstd::string Meta_temporary_type::class_name() const {\n\treturn \"\";\n}\nJson Meta_temporary_type::json() const {\n\treturn type->json();\n}\nstd::ostream& Meta_temporary_type::print(std::ostream& os) const {\n\tos << C_GREY << \"tmp(\" << type << \")\" << END_COLOR;\n\treturn os;\n}\nType* Meta_temporary_type::clone() const {\n\treturn new Meta_temporary_type(type);\n}\n\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Meta", "_", "temporary", "_", "type", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "colors", ".", "h", "\"", "Ċ", "#", "if", "ĠCOM", "PI", "LER", "Ċ", "#", "include", "Ġ\"../", "compiler", "/", "Compiler", ".", "hpp", "\"", "Ċ", "#", "endif", "Ċ", "Ċ", "namespace", "Ġls", "Ġ{", "Ċ", "Ċ", "bool", "ĠMeta", "_", "temporary", "_", "type", "::", "operator", "Ġ==", "Ġ(", "const", "ĠType", "*", "Ġtype", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "return", "Ġfalse", ";", "Ċ", "}", "Ċ", "int", "ĠMeta", "_", "temporary", "_", "type", "::", "distance", "(", "const", "ĠType", "*", "Ġtype", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "return", "Ġ-", "1", ";", "Ċ", "}", "Ċ", "#", "if", "ĠCOM", "PI", "LER", "Ċ", "llvm", "::", "Type", "*", "ĠMeta", "_", "temporary", "_", "type", "::", "llvm", "(", "Compiler", "&", "Ġc", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "return", "Ġllvm", "::", "Type", "::", "get", "VoidTy", "(", "c", ".", "getContext", "());", "Ċ", "}", "Ċ", "#", "endif", "Ċ", "std", "::", "string", "ĠMeta", "_", "temporary", "_", "type", "::", "class", "_", "name", "()", "Ġconst", "Ġ{", "Ċ", "ĉ", "return", "Ġ\"\";", "Ċ", "}", "Ċ", "Json", "ĠMeta", "_", "temporary", "_", "type", "::", "json", "()", "Ġconst", "Ġ{", "Ċ", "ĉ", "return", "Ġtype", "->", "json", "();", "Ċ", "}", "Ċ", "std", "::", "ostream", "&", "ĠMeta", "_", "temporary", "_", "type", "::", "print", "(", "std", "::", "ostream", "&", "Ġos", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "os", "Ġ<<", "ĠC", "_", "GRE", "Y", "Ġ<<", "Ġ\"", "tmp", "(\"", "Ġ<<", "Ġtype", "Ġ<<", "Ġ\")\"", "Ġ<<", "ĠEND", "_", "COLOR", ";", "Ċ", "ĉ", "return", "Ġos", ";", "Ċ", "}", "Ċ", "Type", "*", "ĠMeta", "_", "temporary", "_", "type", "::", "clone", "()", "Ġconst", "Ġ{", "Ċ", "ĉ", "return", "Ġnew", "ĠMeta", "_", "temporary", "_", "type", "(", "type", ");", "Ċ", "}", "Ċ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::318", "code": "/**\n * @author Michele Tomaiuolo - http://www.ce.unipr.it/people/tomamic\n * @license This software is free - http://www.gnu.org/licenses/gpl.html\n */\n\n#include \"fifteenmodel.h\"\n\nFifteenModel::FifteenModel(int rows, int columns)\n    : silent(false), FifteenPuzzle(rows, columns)\n{\n}\n\nvoid FifteenModel::shuffle()\n{\n    silent = true;\n    FifteenPuzzle::shuffle();\n    silent = false;\n}\n\nvoid FifteenModel::moveBlank(Coord delta)\n{\n    FifteenPuzzle::moveBlank(delta);\n    if (!silent) emit blankMoved();\n}\n\nFifteenPuzzle::Coord FifteenModel::getBlank()\n{\n    return blank;\n}\n\nFifteenPuzzle::Coord FifteenModel::getMoved()\n{\n    return moved;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "author", "ĠM", "iche", "le", "ĠTom", "ai", "uo", "lo", "Ġ-", "Ġhttp", "://", "www", ".", "ce", ".", "un", "ip", "r", ".", "it", "/", "people", "/", "tom", "am", "ic", "Ċ", "Ġ*", "Ġ@", "license", "ĠThis", "Ġsoftware", "Ġis", "Ġfree", "Ġ-", "Ġhttp", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/", "g", "pl", ".", "html", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "fif", "teen", "model", ".", "h", "\"", "Ċ", "Ċ", "F", "if", "teen", "Model", "::", "F", "if", "teen", "Model", "(", "int", "Ġrows", ",", "Ġint", "Ġcolumns", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġsilent", "(", "false", "),", "ĠF", "if", "teen", "P", "uzzle", "(", "rows", ",", "Ġcolumns", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠF", "if", "teen", "Model", "::", "shuffle", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġsilent", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠ", "ĠF", "if", "teen", "P", "uzzle", "::", "shuffle", "();", "Ċ", "ĠĠĠ", "Ġsilent", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠF", "if", "teen", "Model", "::", "move", "Blank", "(", "Coord", "Ġdelta", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠF", "if", "teen", "P", "uzzle", "::", "move", "Blank", "(", "delta", ");", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "silent", ")", "Ġemit", "Ġblank", "Moved", "();", "Ċ", "}", "Ċ", "Ċ", "F", "if", "teen", "P", "uzzle", "::", "Coord", "ĠF", "if", "teen", "Model", "::", "get", "Blank", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġblank", ";", "Ċ", "}", "Ċ", "Ċ", "F", "if", "teen", "P", "uzzle", "::", "Coord", "ĠF", "if", "teen", "Model", "::", "get", "Moved", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġmoved", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::319", "code": "/*\n * @file gui/dvonn/state.cpp\n *\n * This file is part of OpenXum games\n *\n * Copyright (c) 2011-2012 Eric Ramat <eramat@users.sourceforge.net>\n *\n * See the AUTHORS or Authors.txt file for copyright owners and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include <gui/utils/graphics.hpp>\n#include <gui/dvonn/gui.hpp>\n#include <gui/dvonn/state.hpp>\n\nusing namespace openxum::common;\n\nnamespace openxum { namespace dvonn {\n\n        StateView::StateView(openxum::Gui* parent, openxum::common::Color) :\n    openxum::StateView(parent)\n{\n}\n\nvoid StateView::draw()\n{\n    context()->set_line_width(1.);\n\n    // background\n    context()->set_source_rgb(1., 1., 1.);\n    context()->rectangle(0, 0, width(), height());\n    context()->fill();\n    context()->stroke();\n}\n\n}} // namespace openxum dvonn\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ@", "file", "Ġgui", "/", "dv", "on", "n", "/", "state", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠOpen", "X", "um", "Ġgame", "s", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "-", "2012", "ĠE", "ric", "ĠR", "am", "at", "Ġ<", "er", "am", "at", "@", "users", ".", "source", "forge", ".", "net", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠAUT", "HOR", "S", "Ġor", "ĠAuth", "ors", ".", "txt", "Ġfile", "Ġfor", "Ġcopyright", "Ġown", "ers", "Ġand", "Ġcontrib", "utors", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "gui", "/", "utils", "/", "graphics", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "gui", "/", "dv", "on", "n", "/", "gui", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "gui", "/", "dv", "on", "n", "/", "state", ".", "hpp", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġopen", "x", "um", "::", "common", ";", "Ċ", "Ċ", "namespace", "Ġopen", "x", "um", "Ġ{", "Ġnamespace", "Ġdv", "on", "n", "Ġ{", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠState", "View", "::", "State", "View", "(", "open", "x", "um", "::", "Gui", "*", "Ġparent", ",", "Ġopen", "x", "um", "::", "common", "::", "Color", ")", "Ġ:", "Ċ", "ĠĠĠ", "Ġopen", "x", "um", "::", "State", "View", "(", "parent", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠState", "View", "::", "draw", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġcontext", "()->", "set", "_", "line", "_", "width", "(", "1", ".);", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġbackground", "Ċ", "ĠĠĠ", "Ġcontext", "()->", "set", "_", "source", "_", "rgb", "(", "1", ".,", "Ġ1", ".,", "Ġ1", ".);", "Ċ", "ĠĠĠ", "Ġcontext", "()->", "rectangle", "(", "0", ",", "Ġ0", ",", "Ġwidth", "(),", "Ġheight", "());", "Ċ", "ĠĠĠ", "Ġcontext", "()->", "fill", "();", "Ċ", "ĠĠĠ", "Ġcontext", "()->", "stroke", "();", "Ċ", "}", "Ċ", "Ċ", "}}", "Ġ//", "Ġnamespace", "Ġopen", "x", "um", "Ġdv", "on", "n", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::320", "code": "#include \"faktionbankkauftwertpapiere.h\"\n\n\nFAktionBankKauftWertpapiere::FAktionBankKauftWertpapiere(){\n    }\n\n\n\nFAktionBankKauftWertpapiere::FAktionBankKauftWertpapiere(FGeld BETRAG, int BANKNR, int BANKKUNDENNR){\n    Betrag       = BETRAG;\n    BankNr       = BANKNR;\n    BankKundenNr = BANKKUNDENNR;\n    }\n\n\n\nvoid FAktionBankKauftWertpapiere::Execute_on(FAlleDaten *AlleDaten){\n\n    // Operation auf Geschäftsbanken ausführen.\n    AlleDaten->Banken[BankNr].Wertpapiere              += Betrag;\n    AlleDaten->Banken[BankNr].GiroKonten[BankKundenNr] += Betrag;\n\n\n    // Fehlermeldungen\n    Fehlerbeschreibung = AlleDaten->Checken_ob_alle_Bilanzen_valide_sind_sonst_Fehlermeldung();\n\n\n    // Beschreibung\n    BeschreibungDerOperation = \") Die Bank hat Wertpapiere gekauft.\";\n    }\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "fa", "kt", "ion", "bank", "k", "au", "ft", "w", "ert", "pap", "ie", "re", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "FA", "kt", "ion", "Bank", "K", "au", "ft", "W", "ert", "pap", "ie", "re", "::", "FA", "kt", "ion", "Bank", "K", "au", "ft", "W", "ert", "pap", "ie", "re", "(){", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "Ċ", "Ċ", "FA", "kt", "ion", "Bank", "K", "au", "ft", "W", "ert", "pap", "ie", "re", "::", "FA", "kt", "ion", "Bank", "K", "au", "ft", "W", "ert", "pap", "ie", "re", "(", "FG", "eld", "ĠBE", "TR", "AG", ",", "Ġint", "ĠB", "ANK", "NR", ",", "Ġint", "ĠB", "ANK", "K", "UND", "EN", "NR", "){", "Ċ", "ĠĠĠ", "ĠB", "et", "rag", "ĠĠĠĠĠĠ", "Ġ=", "ĠBE", "TR", "AG", ";", "Ċ", "ĠĠĠ", "ĠBank", "Nr", "ĠĠĠĠĠĠ", "Ġ=", "ĠB", "ANK", "NR", ";", "Ċ", "ĠĠĠ", "ĠBank", "K", "und", "en", "Nr", "Ġ=", "ĠB", "ANK", "K", "UND", "EN", "NR", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "Ċ", "Ċ", "void", "ĠFA", "kt", "ion", "Bank", "K", "au", "ft", "W", "ert", "pap", "ie", "re", "::", "Execute", "_", "on", "(", "F", "Al", "le", "Dat", "en", "Ġ*", "Al", "le", "Dat", "en", "){", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠOperation", "Ġa", "uf", "ĠG", "es", "ch", "Ã¤", "ft", "sb", "an", "ken", "Ġa", "us", "f", "Ã¼", "h", "ren", ".", "Ċ", "ĠĠĠ", "ĠAl", "le", "Dat", "en", "->", "Ban", "ken", "[", "Bank", "Nr", "].", "W", "ert", "pap", "ie", "re", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ+=", "ĠB", "et", "rag", ";", "Ċ", "ĠĠĠ", "ĠAl", "le", "Dat", "en", "->", "Ban", "ken", "[", "Bank", "Nr", "].", "G", "iro", "K", "ont", "en", "[", "Bank", "K", "und", "en", "Nr", "]", "Ġ+=", "ĠB", "et", "rag", ";", "Ċ", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠFe", "hl", "erm", "eld", "un", "gen", "Ċ", "ĠĠĠ", "ĠFe", "h", "ler", "bes", "ch", "re", "ib", "ung", "Ġ=", "ĠAl", "le", "Dat", "en", "->", "Check", "en", "_", "ob", "_", "alle", "_", "B", "il", "an", "zen", "_", "val", "ide", "_", "s", "ind", "_", "son", "st", "_", "Fe", "hl", "erm", "eld", "ung", "();", "Ċ", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠB", "es", "ch", "re", "ib", "ung", "Ċ", "ĠĠĠ", "ĠB", "es", "ch", "re", "ib", "ung", "Der", "Operation", "Ġ=", "Ġ\")", "ĠD", "ie", "ĠBank", "Ġh", "at", "ĠW", "ert", "pap", "ie", "re", "Ġg", "ek", "au", "ft", ".\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::321", "code": "/*****************************************************************************\n *\n * This file is part of Mapnik (c++ mapping toolkit)\n *\n * Copyright (C) 2021 Artem Pavlenko\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n *\n *****************************************************************************/\n// mapnik\n#include <mapnik/text/placements/base.hpp>\n\nnamespace mapnik {\n\ntext_placements::text_placements()\n    : defaults()\n{}\n\nvoid text_placements::add_expressions(expression_set& output) const\n{\n    defaults.add_expressions(output);\n}\n\ntext_placement_info::text_placement_info(text_placements const* parent, double scale_factor_)\n    : properties(parent->defaults)\n    , scale_factor(scale_factor_)\n{}\n\n} // namespace mapnik\n", "code_tokens": ["Ġ/", "************************************************************************", "*****", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠMap", "n", "ik", "Ġ(", "c", "++", "Ġmapping", "Ġtool", "kit", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2", "021", "ĠAr", "tem", "ĠP", "av", "len", "ko", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ*", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ*", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", "Ġ", "ĠUSA", "Ċ", "Ġ*", "Ċ", "Ġ*****************************************************************************/", "Ċ", "//", "Ġmap", "n", "ik", "Ċ", "#", "include", "Ġ<", "map", "n", "ik", "/", "text", "/", "place", "ments", "/", "base", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġmap", "n", "ik", "Ġ{", "Ċ", "Ċ", "text", "_", "place", "ments", "::", "text", "_", "place", "ments", "()", "Ċ", "ĠĠĠ", "Ġ:", "Ġdefaults", "()", "Ċ", "{}", "Ċ", "Ċ", "void", "Ġtext", "_", "place", "ments", "::", "add", "_", "expressions", "(", "expression", "_", "set", "&", "Ġoutput", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdefaults", ".", "add", "_", "expressions", "(", "output", ");", "Ċ", "}", "Ċ", "Ċ", "text", "_", "placement", "_", "info", "::", "text", "_", "placement", "_", "info", "(", "text", "_", "place", "ments", "Ġconst", "*", "Ġparent", ",", "Ġdouble", "Ġscale", "_", "factor", "_)", "Ċ", "ĠĠĠ", "Ġ:", "Ġproperties", "(", "parent", "->", "defaults", ")", "Ċ", "ĠĠĠ", "Ġ,", "Ġscale", "_", "factor", "(", "scale", "_", "factor", "_)", "Ċ", "{}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġmap", "n", "ik", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::322", "code": "/*****************************************************************************\n *\n * This file is part of Mapnik (c++ mapping toolkit)\n *\n * Copyright (C) 2021 Artem Pavlenko\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n *\n *****************************************************************************/\n\n// mapnik\n#include <mapnik/util/geometry_to_geojson.hpp>\n#include <mapnik/json/geometry_generator_grammar.hpp>\n\nnamespace mapnik {\nnamespace util {\n\nbool to_geojson(std::string& json, mapnik::geometry::geometry<double> const& geom)\n{\n    using sink_type = std::back_insert_iterator<std::string>;\n    static const mapnik::json::geometry_generator_grammar<sink_type, mapnik::geometry::geometry<double>> grammar;\n    sink_type sink(json);\n    return boost::spirit::karma::generate(sink, grammar, geom);\n}\n\n} // namespace util\n} // namespace mapnik\n", "code_tokens": ["Ġ/", "************************************************************************", "*****", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠMap", "n", "ik", "Ġ(", "c", "++", "Ġmapping", "Ġtool", "kit", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2", "021", "ĠAr", "tem", "ĠP", "av", "len", "ko", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ*", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ*", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", "Ġ", "ĠUSA", "Ċ", "Ġ*", "Ċ", "Ġ*****************************************************************************/", "Ċ", "Ċ", "//", "Ġmap", "n", "ik", "Ċ", "#", "include", "Ġ<", "map", "n", "ik", "/", "util", "/", "geometry", "_", "to", "_", "geo", "json", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "map", "n", "ik", "/", "json", "/", "geometry", "_", "generator", "_", "grammar", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġmap", "n", "ik", "Ġ{", "Ċ", "namespace", "Ġutil", "Ġ{", "Ċ", "Ċ", "bool", "Ġto", "_", "geo", "json", "(", "std", "::", "string", "&", "Ġjson", ",", "Ġmap", "n", "ik", "::", "geometry", "::", "geometry", "<", "double", ">", "Ġconst", "&", "Ġgeom", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġusing", "Ġsink", "_", "type", "Ġ=", "Ġstd", "::", "back", "_", "insert", "_", "iterator", "<", "std", "::", "string", ">;", "Ċ", "ĠĠĠ", "Ġstatic", "Ġconst", "Ġmap", "n", "ik", "::", "json", "::", "geometry", "_", "generator", "_", "grammar", "<", "sink", "_", "type", ",", "Ġmap", "n", "ik", "::", "geometry", "::", "geometry", "<", "double", ">>", "Ġgrammar", ";", "Ċ", "ĠĠĠ", "Ġsink", "_", "type", "Ġsink", "(", "json", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġboost", "::", "spir", "it", "::", "karma", "::", "generate", "(", "sink", ",", "Ġgrammar", ",", "Ġgeom", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġutil", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġmap", "n", "ik", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::323", "code": "/*  XFC: Xfce Foundation Classes (User Interface Library)\n *  Copyright (C) 2004-2005 The XFC Development Team.\n *\n *  notebookclass.hh - Private interface\n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA\n */\n\n#ifndef XFC_GTK_NOTEBOOK_CLASS_HH\n#define XFC_GTK_NOTEBOOK_CLASS_HH\n\n#include <xfc/gtk/private/containerclass.hh>\n\nnamespace Xfc {\n\nnamespace Gtk {\n\nclass NotebookClass\n{\npublic:\n\tstatic void init(GtkNotebookClass *g_class);\n\n\tstatic GtkNotebookClass* get_parent_class(void *instance);\n\n\tstatic GType get_type();\n\n\tstatic void* create();\n\n\tstatic void switch_page_proxy(GtkNotebook *notebook, GtkNotebookPage *page, guint page_num);\n};\n\n} // namespace Gtk\n\n} // namespace Xfc\n\n#endif // XFC_GTK_NOTEBOOK_CLASS_HH\n\n", "code_tokens": ["Ġ/*", "Ġ", "ĠX", "FC", ":", "ĠX", "f", "ce", "ĠFoundation", "ĠC", "lasses", "Ġ(", "User", "ĠInterface", "ĠLibrary", ")", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2004", "-", "2005", "ĠThe", "ĠX", "FC", "ĠDe", "velopment", "ĠTeam", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġnotebook", "class", ".", "hh", "Ġ-", "ĠPrivate", "Ġinterface", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "Ġ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ*", "Ġ", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ*", "Ġ", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "Ġ", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", ",", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ02", "111", "-", "13", "07", "Ġ", "ĠUSA", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠX", "FC", "_", "GTK", "_", "NOTE", "BOOK", "_", "CLASS", "_", "HH", "Ċ", "#", "define", "ĠX", "FC", "_", "GTK", "_", "NOTE", "BOOK", "_", "CLASS", "_", "HH", "Ċ", "Ċ", "#", "include", "Ġ<", "xfc", "/", "gtk", "/", "private", "/", "container", "class", ".", "hh", ">", "Ċ", "Ċ", "namespace", "ĠX", "fc", "Ġ{", "Ċ", "Ċ", "namespace", "ĠGtk", "Ġ{", "Ċ", "Ċ", "class", "ĠNote", "book", "Class", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "static", "Ġvoid", "Ġinit", "(", "Gtk", "Notebook", "Class", "Ġ*", "g", "_", "class", ");", "Ċ", "Ċ", "ĉ", "static", "ĠGtk", "Notebook", "Class", "*", "Ġget", "_", "parent", "_", "class", "(", "void", "Ġ*", "instance", ");", "Ċ", "Ċ", "ĉ", "static", "ĠG", "Type", "Ġget", "_", "type", "();", "Ċ", "Ċ", "ĉ", "static", "Ġvoid", "*", "Ġcreate", "();", "Ċ", "Ċ", "ĉ", "static", "Ġvoid", "Ġswitch", "_", "page", "_", "proxy", "(", "Gtk", "Notebook", "Ġ*", "notebook", ",", "ĠGtk", "Notebook", "Page", "Ġ*", "page", ",", "Ġguint", "Ġpage", "_", "num", ");", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠGtk", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠX", "fc", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠX", "FC", "_", "GTK", "_", "NOTE", "BOOK", "_", "CLASS", "_", "HH", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::324", "code": "/*\n * sample program to write out the calibration table and then \n * reload it again, verify that the data is in fact reversed\n * \n *\n * \n */\n\n#include <aiousb.h>\n#include <stdio.h>\n#include <unistd.h>\n#include <exception>\n#include <iostream>\n#include \"TestCaseSetup.h\"\nusing namespace AIOUSB;\n\nint main( int argc, char **argv ) {\n  // printf(\"Sample test for Checking the Calibration on the board: %s, %s\", AIOUSB_GetVersion(), AIOUSB_GetVersionDate());\n  unsigned long result = AIOUSB_Init();\n\n  if( result == AIOUSB_SUCCESS ) {\n          \n    unsigned long deviceMask = GetDevices();\n    if( deviceMask != 0 ) {\n      // at least one ACCES device detected, but we want one of a specific type\n      AIOUSB_ListDevices();\n      TestCaseSetup tcs;\n      try { \n        tcs.findDevice();\n        tcs.doPreSetup();\n        tcs.doBulkConfigBlock();\n        tcs.doSetAutoCalibration();\n        tcs.doVerifyGroundCalibration();\n        tcs.doVerifyReferenceCalibration();\n        while(1) { \n          tcs.doCSVReadVoltages();\n          usleep(10);\n        }\n      } catch ( Error &e  ) {\n        std::cout << \"Errors\" << e.what() << std::endl;\n      }\n    }\n  }\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġsample", "Ġprogram", "Ġto", "Ġwrite", "Ġout", "Ġthe", "Ġcalibration", "Ġtable", "Ġand", "Ġthen", "ĠĊ", "Ġ*", "Ġreload", "Ġit", "Ġagain", ",", "Ġverify", "Ġthat", "Ġthe", "Ġdata", "Ġis", "Ġin", "Ġfact", "Ġreversed", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "Ċ", "Ġ*", "ĠĊ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aio", "usb", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "exception", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ\"", "TestCase", "Setup", ".", "h", "\"", "Ċ", "using", "Ġnamespace", "ĠA", "IO", "USB", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġargc", ",", "Ġchar", "Ġ**", "argv", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ//", "Ġprintf", "(\"", "Sample", "Ġtest", "Ġfor", "ĠChecking", "Ġthe", "ĠCal", "ibration", "Ġon", "Ġthe", "Ġboard", ":", "Ġ%", "s", ",", "Ġ%", "s", "\",", "ĠA", "IO", "USB", "_", "GetVersion", "(),", "ĠA", "IO", "USB", "_", "GetVersion", "Date", "());", "Ċ", "Ġ", "Ġunsigned", "Ġlong", "Ġresult", "Ġ=", "ĠA", "IO", "USB", "_", "Init", "();", "Ċ", "Ċ", "Ġ", "Ġif", "(", "Ġresult", "Ġ==", "ĠA", "IO", "USB", "_", "SUCCESS", "Ġ)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĊ", "ĠĠĠ", "Ġunsigned", "Ġlong", "Ġdevice", "Mask", "Ġ=", "ĠGet", "Devices", "();", "Ċ", "ĠĠĠ", "Ġif", "(", "Ġdevice", "Mask", "Ġ!=", "Ġ0", "Ġ)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ//", "Ġat", "Ġleast", "Ġone", "ĠAC", "CE", "S", "Ġdevice", "Ġdetected", ",", "Ġbut", "Ġwe", "Ġwant", "Ġone", "Ġof", "Ġa", "Ġspecific", "Ġtype", "Ċ", "ĠĠĠĠĠ", "ĠA", "IO", "USB", "_", "List", "Devices", "();", "Ċ", "ĠĠĠĠĠ", "ĠTestCase", "Setup", "Ġtcs", ";", "Ċ", "ĠĠĠĠĠ", "Ġtry", "Ġ{", "ĠĊ", "ĠĠĠĠĠĠĠ", "Ġtcs", ".", "find", "Device", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtcs", ".", "do", "Pre", "Setup", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtcs", ".", "do", "Bulk", "Config", "Block", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtcs", ".", "do", "Set", "Auto", "Calibration", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtcs", ".", "do", "Verify", "Ground", "Calibration", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtcs", ".", "do", "Verify", "Reference", "Calibration", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "1", ")", "Ġ{", "ĠĊ", "ĠĠĠĠĠĠĠĠĠ", "Ġtcs", ".", "do", "CSV", "Read", "Vol", "t", "ages", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġus", "leep", "(", "10", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ġcatch", "Ġ(", "ĠError", "Ġ&", "e", "Ġ", "Ġ)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Errors", "\"", "Ġ<<", "Ġe", ".", "what", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::325", "code": "﻿#include \"KxDesktopServices.h\"\n#include <QDesktopServices>\n#include <QUrl>\n\nKxDesktopServices::KxDesktopServices(QObject *parent)\n    : QObject(parent)\n{\n\n}\n\nvoid KxDesktopServices::openUrl(const QString &url)\n{\n    QDesktopServices::openUrl(QUrl(url));\n}\n", "code_tokens": ["Ġ", "ï", "»", "¿", "#", "include", "Ġ\"", "K", "x", "Desktop", "Services", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Desktop", "Services", ">", "Ċ", "#", "include", "Ġ<", "QUrl", ">", "Ċ", "Ċ", "K", "x", "Desktop", "Services", "::", "K", "x", "Desktop", "Services", "(", "QObject", "Ġ*", "parent", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠQObject", "(", "parent", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠK", "x", "Desktop", "Services", "::", "open", "Url", "(", "const", "ĠQString", "Ġ&", "url", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "Desktop", "Services", "::", "open", "Url", "(", "QUrl", "(", "url", "));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::326", "code": "#include<bits/stdc++.h>\nusing namespace std;\nnamespace p1073_2{\nint f[20001],n,m,p;\nint g(int x){\n\tif(f[x]!=x)f[x]=g(f[x]);\n\treturn f[x];\n}\ninline void u(int a,int b){\n\tif(g(a)!=g(b))f[g(b)]=g(a);\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor(int i=1;i<=n;i++){\n\t\tf[i]=i;\n\t}\n\tint a,b;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tu(a,b);\n\t}\n\tfor(int i=1;i<=p;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tprintf((g(a)==g(b))?\"Yes\\n\":\"No\\n\");\n\t}\n\treturn 0;\n}\n}\n", "code_tokens": ["Ġ#", "include", "<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "namespace", "Ġp", "10", "73", "_", "2", "{", "Ċ", "int", "Ġf", "[", "200", "01", "],", "n", ",", "m", ",", "p", ";", "Ċ", "int", "Ġg", "(", "int", "Ġx", "){", "Ċ", "ĉ", "if", "(", "f", "[", "x", "]!=", "x", ")", "f", "[", "x", "]=", "g", "(", "f", "[", "x", "]);", "Ċ", "ĉ", "return", "Ġf", "[", "x", "];", "Ċ", "}", "Ċ", "inline", "Ġvoid", "Ġu", "(", "int", "Ġa", ",", "int", "Ġb", "){", "Ċ", "ĉ", "if", "(", "g", "(", "a", ")!=", "g", "(", "b", "))", "f", "[", "g", "(", "b", ")]=", "g", "(", "a", ");", "Ċ", "}", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "scanf", "(\"%", "d", "%", "d", "%", "d", "\",&", "n", ",&", "m", ",&", "p", ");", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "i", "<=", "n", ";", "i", "++){", "Ċ", "ĉ", "ĉ", "f", "[", "i", "]=", "i", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "int", "Ġa", ",", "b", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "i", "<=", "m", ";", "i", "++){", "Ċ", "ĉ", "ĉ", "scanf", "(\"%", "d", "%", "d", "\",&", "a", ",&", "b", ");", "Ċ", "ĉ", "ĉ", "u", "(", "a", ",", "b", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "i", "<=", "p", ";", "i", "++){", "Ċ", "ĉ", "ĉ", "scanf", "(\"%", "d", "%", "d", "\",&", "a", ",&", "b", ");", "Ċ", "ĉ", "ĉ", "printf", "((", "g", "(", "a", ")==", "g", "(", "b", "))", "?\"", "Yes", "\\", "n", "\":\"", "No", "\\", "n", "\");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::327", "code": "﻿#ifndef FILE_NGEXCEPTION\n#define FILE_NGEXCEPTION\n\n/**************************************************************************/\n/* File:   ngexception.hpp                                                */\n/* Author: Joachim Schoeberl                                              */\n/* Date:   16. Jan. 2002                                                  */\n/**************************************************************************/\n\nnamespace netgen\n{\n\n/// Base class for all ng exceptions\nclass NgException \n{\n  /// verbal description of exception\n  std::string what;\npublic:\n  ///\n  DLL_HEADER NgException (const std::string & s);\n  ///\n  DLL_HEADER virtual ~NgException ();\n\n  /// append string to description\n  DLL_HEADER void Append (const std::string & s);\n  //  void Append (const char * s);\n  \n  /// verbal description of exception\n  const std::string & What() const { return what; }\n};\n}\n\n#endif\n", "code_tokens": ["Ġ", "ï", "»", "¿", "#", "ifndef", "ĠFILE", "_", "N", "GE", "X", "CEPTION", "Ċ", "#", "define", "ĠFILE", "_", "N", "GE", "X", "CEPTION", "Ċ", "Ċ", "/************************************************************************", "**/", "Ċ", "/*", "ĠFile", ":", "ĠĠ", "Ġng", "exception", ".", "hpp", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*/", "Ċ", "/*", "ĠAuthor", ":", "ĠJo", "ach", "im", "ĠS", "cho", "e", "ber", "l", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*/", "Ċ", "/*", "ĠDate", ":", "ĠĠ", "Ġ16", ".", "ĠJan", ".", "Ġ200", "2", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*/", "Ċ", "/************************************************************************", "**/", "Ċ", "Ċ", "namespace", "Ġnet", "gen", "Ċ", "{", "Ċ", "Ċ", "///", "ĠBase", "Ġclass", "Ġfor", "Ġall", "Ġng", "Ġexceptions", "Ċ", "class", "ĠN", "g", "Exception", "Ġ", "Ċ", "{", "Ċ", "Ġ", "Ġ///", "Ġverb", "al", "Ġdescription", "Ġof", "Ġexception", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġwhat", ";", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ///", "Ċ", "Ġ", "ĠDLL", "_", "HEADER", "ĠN", "g", "Exception", "Ġ(", "const", "Ġstd", "::", "string", "Ġ&", "Ġs", ");", "Ċ", "Ġ", "Ġ///", "Ċ", "Ġ", "ĠDLL", "_", "HEADER", "Ġvirtual", "Ġ~", "Ng", "Exception", "Ġ();", "Ċ", "Ċ", "Ġ", "Ġ///", "Ġappend", "Ġstring", "Ġto", "Ġdescription", "Ċ", "Ġ", "ĠDLL", "_", "HEADER", "Ġvoid", "ĠAppend", "Ġ(", "const", "Ġstd", "::", "string", "Ġ&", "Ġs", ");", "Ċ", "Ġ", "Ġ//", "Ġ", "Ġvoid", "ĠAppend", "Ġ(", "const", "Ġchar", "Ġ*", "Ġs", ");", "Ċ", "ĠĠĊ", "Ġ", "Ġ///", "Ġverb", "al", "Ġdescription", "Ġof", "Ġexception", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġ&", "ĠWhat", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġwhat", ";", "Ġ}", "Ċ", "};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::328", "code": "#include <iostream>\n#include <string>\n\n#include <boost/filesystem.hpp>\n\nint main() {\n    std::string ps = \"/usr/local/dayu/scripts\"; \n    boost::filesystem::path p(ps);\n    p /= \"kk.py\";\n    \n    std::cout << p.string() << std::endl;\n    std::cout << p.stem() << std::endl;\n    std::cout << p.parent_path() << std::endl;\n    std::cout << p.filename() << std::endl;\n    std::cout << p.extension() << std::endl;\n\n    std::cerr << \"Something error occurred.\" << std::endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "filesystem", ".", "hpp", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġps", "Ġ=", "Ġ\"/", "usr", "/", "local", "/", "day", "u", "/", "scripts", "\";", "ĠĊ", "ĠĠĠ", "Ġboost", "::", "filesystem", "::", "path", "Ġp", "(", "ps", ");", "Ċ", "ĠĠĠ", "Ġp", "Ġ/=", "Ġ\"", "kk", ".", "py", "\";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġp", ".", "string", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġp", ".", "stem", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġp", ".", "parent", "_", "path", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġp", ".", "filename", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġp", ".", "extension", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "Something", "Ġerror", "Ġoccurred", ".\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::329", "code": "\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main(){\n\nchar text[40], text2[40];\n\nprintf(\"necesito una buena palabra:  \");\ngets(text);\n\nprintf(\"voy a necesitar otra palabra, si es la misma sorpresa... \\n\");\n    gets(text2);\n\nif (strcmp(text, text2) ==0)\n    printf(\"Correcto!! son iguales enhorabuena \\n\");\n\nelse\n    printf(\"pues nada son distintas, no haces caso... \\n\" );\n\n\n\n\nreturn EXIT_SUCCESS;\n\n\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ċ", "char", "Ġtext", "[", "40", "],", "Ġtext", "2", "[", "40", "];", "Ċ", "Ċ", "printf", "(\"", "ne", "ces", "ito", "Ġun", "a", "Ġbu", "ena", "Ġpal", "ab", "ra", ":", "Ġ", "Ġ\");", "Ċ", "gets", "(", "text", ");", "Ċ", "Ċ", "printf", "(\"", "vo", "y", "Ġa", "Ġne", "ces", "it", "ar", "Ġo", "tra", "Ġpal", "ab", "ra", ",", "Ġsi", "Ġes", "Ġla", "Ġmis", "ma", "Ġs", "or", "pres", "a", "...", "Ġ\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġgets", "(", "text", "2", ");", "Ċ", "Ċ", "if", "Ġ(", "strcmp", "(", "text", ",", "Ġtext", "2", ")", "Ġ==", "0", ")", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "Correct", "o", "!!", "Ġson", "Ġig", "ual", "es", "Ġen", "hor", "ab", "u", "ena", "Ġ\\", "n", "\");", "Ċ", "Ċ", "else", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "p", "ues", "Ġn", "ada", "Ġson", "Ġdist", "int", "as", ",", "Ġno", "Ġh", "ace", "s", "Ġcas", "o", "...", "Ġ\\", "n", "\"", "Ġ);", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "return", "ĠEXIT", "_", "SUCCESS", ";", "Ċ", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::330", "code": "//\n// Created by tyler on 10/15/17.\n//\n\n#ifndef YAFEL_FVDOFM_HPP\n#define YAFEL_FVDOFM_HPP\n\n#include \"yafel_globals.hpp\"\n#include \"utils/DoFManager.hpp\"\n\nYAFEL_NAMESPACE_OPEN\n\n/**\n * \\class FVDofm\n * DoFManager-like class for finite volume methods\n *\n * Holds the required geometry information for Finite Volume simulations.\n * - Linear Mesh Nodes\n * - List of \"full-dimension\" (topodim == spatialDim) cells\n *     - Maps FV-indexes to Original element indices\n *     - Also store inverse mapping (with -1 in the invalid element slots)\n * - Volumes of full-dimension elements\n * - Centroids of FV cells\n * - DoFM reference with faces built\n *\n */\nclass FVDofm {\n\npublic:\n    FVDofm(DoFManager &dofm_, int8_t NSD);\n\n    DoFManager dofm;\n    int8_t nsd;\n\n    std::vector<int> original_cell_index; //map current index -> old_index\n    std::vector<int> reverse_index_map;   //map old_index -> current index\n    std::vector<coordinate<>> centroids;\n    std::vector<double> volumes;\n};\n\nYAFEL_NAMESPACE_CLOSE\n\n#endif //YAFEL_FVDOFM_HPP\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "Ġty", "ler", "Ġon", "Ġ10", "/", "15", "/", "17", ".", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠY", "AF", "EL", "_", "F", "VD", "OF", "M", "_", "HP", "P", "Ċ", "#", "define", "ĠY", "AF", "EL", "_", "F", "VD", "OF", "M", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "y", "af", "el", "_", "globals", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "utils", "/", "Do", "F", "Manager", ".", "hpp", "\"", "Ċ", "Ċ", "Y", "AF", "EL", "_", "NAMESPACE", "_", "OPEN", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ\\", "class", "ĠF", "VD", "of", "m", "Ċ", "Ġ*", "ĠDo", "F", "Manager", "-", "like", "Ġclass", "Ġfor", "Ġfinite", "Ġvolume", "Ġmethods", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠHold", "s", "Ġthe", "Ġrequired", "Ġgeometry", "Ġinformation", "Ġfor", "ĠF", "inite", "ĠVolume", "Ġsim", "ulations", ".", "Ċ", "Ġ*", "Ġ-", "ĠLinear", "ĠMesh", "ĠNodes", "Ċ", "Ġ*", "Ġ-", "ĠList", "Ġof", "Ġ\"", "full", "-", "dimension", "\"", "Ġ(", "top", "od", "im", "Ġ==", "Ġspatial", "Dim", ")", "Ġcells", "Ċ", "Ġ*", "ĠĠĠĠ", "Ġ-", "ĠMaps", "ĠF", "V", "-", "indexes", "Ġto", "ĠOriginal", "Ġelement", "Ġindices", "Ċ", "Ġ*", "ĠĠĠĠ", "Ġ-", "ĠAlso", "Ġstore", "Ġinverse", "Ġmapping", "Ġ(", "with", "Ġ-", "1", "Ġin", "Ġthe", "Ġinvalid", "Ġelement", "Ġslots", ")", "Ċ", "Ġ*", "Ġ-", "ĠVol", "umes", "Ġof", "Ġfull", "-", "dimension", "Ġelements", "Ċ", "Ġ*", "Ġ-", "ĠC", "ent", "roids", "Ġof", "ĠF", "V", "Ġcells", "Ċ", "Ġ*", "Ġ-", "ĠDo", "FM", "Ġreference", "Ġwith", "Ġfaces", "Ġbuilt", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "class", "ĠF", "VD", "of", "m", "Ġ{", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠF", "VD", "of", "m", "(", "Do", "F", "Manager", "Ġ&", "dof", "m", "_,", "Ġint", "8", "_", "t", "ĠN", "SD", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠDo", "F", "Manager", "Ġdof", "m", ";", "Ċ", "ĠĠĠ", "Ġint", "8", "_", "t", "Ġns", "d", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "int", ">", "Ġoriginal", "_", "cell", "_", "index", ";", "Ġ//", "map", "Ġcurrent", "Ġindex", "Ġ->", "Ġold", "_", "index", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "int", ">", "Ġreverse", "_", "index", "_", "map", ";", "ĠĠ", "Ġ//", "map", "Ġold", "_", "index", "Ġ->", "Ġcurrent", "Ġindex", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "coordinate", "<", ">>", "Ġcent", "roids", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "double", ">", "Ġvolumes", ";", "Ċ", "};", "Ċ", "Ċ", "Y", "AF", "EL", "_", "NAMESPACE", "_", "CLOSE", "Ċ", "Ċ", "#", "endif", "Ġ//", "Y", "AF", "EL", "_", "F", "VD", "OF", "M", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::331", "code": "#include <ladspam-jack-0/instrument.h>\n#include <ladspam1.pb.h>\n\n#include <iostream>\n#include <fstream>\n#include <unistd.h>\n#include <string>\n\nint main(int argc, char *argv[])\n{\n\tif (argc < 2)\n\t{\n\t\tstd::cout << \"Missing filename parameter\" << std::endl;\n\t\treturn EXIT_FAILURE;\n\t}\n\t\n\tladspam_proto1::Instrument instrument_pb;\n\tstd::ifstream input_file(argv[1], std::ios::in | std::ios::binary);\n\t\n\tif (false == input_file.good())\n\t{\n\t\tstd::cout << \"Failed to open input stream\" << std::endl;\n\t\treturn EXIT_FAILURE;\n\t}\n\t\t\n\t\n\tif (false == instrument_pb.ParseFromIstream(&input_file))\n\t{\n\t\tstd::cout << \"Failed to parse instrument definition file\" << std::endl;\n\t\treturn EXIT_FAILURE;\n\t}\n\t\n\tladspam_jack::instrument instrument(\"synth\", instrument_pb, 32);\n\t\n\tstd::cout << \"type anything and press enter to quit...\" << std::endl;\n\tstd::string line;\n\tstd::cin >> line;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "l", "ad", "spam", "-", "jack", "-", "0", "/", "instrument", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "l", "ad", "spam", "1", ".", "pb", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "argc", "Ġ<", "Ġ2", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Missing", "Ġfilename", "Ġparameter", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "return", "ĠEXIT", "_", "FAILURE", ";", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉ", "l", "ad", "spam", "_", "proto", "1", "::", "Instrument", "Ġinstrument", "_", "pb", ";", "Ċ", "ĉ", "std", "::", "ifstream", "Ġinput", "_", "file", "(", "argv", "[", "1", "],", "Ġstd", "::", "ios", "::", "in", "Ġ|", "Ġstd", "::", "ios", "::", "binary", ");", "Ċ", "ĉĊ", "ĉ", "if", "Ġ(", "false", "Ġ==", "Ġinput", "_", "file", ".", "good", "())", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Failed", "Ġto", "Ġopen", "Ġinput", "Ġstream", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "return", "ĠEXIT", "_", "FAILURE", ";", "Ċ", "ĉ", "}", "Ċ", "ĉĉĊ", "ĉĊ", "ĉ", "if", "Ġ(", "false", "Ġ==", "Ġinstrument", "_", "pb", ".", "Parse", "From", "I", "stream", "(&", "input", "_", "file", "))", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Failed", "Ġto", "Ġparse", "Ġinstrument", "Ġdefinition", "Ġfile", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "return", "ĠEXIT", "_", "FAILURE", ";", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉ", "l", "ad", "spam", "_", "jack", "::", "instrument", "Ġinstrument", "(\"", "synth", "\",", "Ġinstrument", "_", "pb", ",", "Ġ32", ");", "Ċ", "ĉĊ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "type", "Ġanything", "Ġand", "Ġpress", "Ġenter", "Ġto", "Ġquit", "...\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "std", "::", "string", "Ġline", ";", "Ċ", "ĉ", "std", "::", "cin", "Ġ>>", "Ġline", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::332", "code": "\n#include \"Wire.h\"\n\nPwmRPi::PwmRPi(unsigned char channel) {\n    this->channel = (channel & 0x01);\n}\n\nvoid PwmRPi::begin() {\n    pwm.address = PWM_ADDRESS;\n    Bcm2835::mapPeripheral(&pwm);\n}\n\nvoid PwmRPi::stop() {\n    Bcm2835::unmapPeripheral(&pwm);\n}\n\nPwmRPi Pwm0(0);\nPwmRPi Pwm1(1);\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "Wire", ".", "h", "\"", "Ċ", "Ċ", "P", "wm", "RP", "i", "::", "P", "wm", "RP", "i", "(", "unsigned", "Ġchar", "Ġchannel", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "channel", "Ġ=", "Ġ(", "channel", "Ġ&", "Ġ0", "x", "01", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠP", "wm", "RP", "i", "::", "begin", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġpwm", ".", "address", "Ġ=", "ĠPWM", "_", "ADDRESS", ";", "Ċ", "ĠĠĠ", "ĠB", "cm", "2835", "::", "map", "Per", "ipheral", "(&", "pwm", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠP", "wm", "RP", "i", "::", "stop", "()", "Ġ{", "Ċ", "ĠĠĠ", "ĠB", "cm", "2835", "::", "unmap", "Per", "ipheral", "(&", "pwm", ");", "Ċ", "}", "Ċ", "Ċ", "P", "wm", "RP", "i", "ĠP", "wm", "0", "(", "0", ");", "Ċ", "P", "wm", "RP", "i", "ĠP", "wm", "1", "(", "1", ");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::333", "code": "\n#include <gtest/gtest.h>\n\n#include <iostream>\n\n#include \"geometry.hpp\"\n#include \"vector.hpp\"\n#include \"array.hpp\"\n\nTEST(Vector, OrthogonalBasis) {\n  constexpr const int dim = 3;\n  using fptype = float;\n  const fptype eps = 1e-4;\n  Array<fptype, dim> tests[] = {\n      {{1.0, 0.0, 0.0}},     {{0.0, 1.0, 0.0}},\n      {{0.0, 0.0, 1.0}},     {{1.0, 1.0, 0.0}},\n      {{1.0, 0.0, 1.0}},     {{0.0, 1.0, 1.0}},\n      {{1.0, 1.0, 1.0}},     {{1.0, 1.0, 2.0}},\n      {{1.0, 1.0e3, 1.0e-3}}};\n  for(auto t : tests) {\n    Geometry::Vector<dim, fptype> v(t);\n    for(unsigned i = 0; i < dim - 1; i++) {\n      auto o1 = v.getOrthogonal(i);\n      fptype dp = o1.dot(v);\n      EXPECT_NEAR(dp, 0.0, eps);\n      for(unsigned j = i + 1; j < dim - 1; j++) {\n        auto o2 = v.getOrthogonal(j);\n        dp = o1.dot(o2);\n        EXPECT_NEAR(dp, 0.0, eps);\n      }\n    }\n  }\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "geometry", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "vector", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "array", ".", "hpp", "\"", "Ċ", "Ċ", "TEST", "(", "Vector", ",", "ĠOr", "th", "ogonal", "Basis", ")", "Ġ{", "Ċ", "Ġ", "Ġconstexpr", "Ġconst", "Ġint", "Ġdim", "Ġ=", "Ġ3", ";", "Ċ", "Ġ", "Ġusing", "Ġf", "ptype", "Ġ=", "Ġfloat", ";", "Ċ", "Ġ", "Ġconst", "Ġf", "ptype", "Ġeps", "Ġ=", "Ġ1", "e", "-", "4", ";", "Ċ", "Ġ", "ĠArray", "<", "f", "ptype", ",", "Ġdim", ">", "Ġtests", "[]", "Ġ=", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ{{", "1", ".", "0", ",", "Ġ0", ".", "0", ",", "Ġ0", ".", "0", "}},", "ĠĠĠĠ", "Ġ{{", "0", ".", "0", ",", "Ġ1", ".", "0", ",", "Ġ0", ".", "0", "}},", "Ċ", "ĠĠĠĠĠ", "Ġ{{", "0", ".", "0", ",", "Ġ0", ".", "0", ",", "Ġ1", ".", "0", "}},", "ĠĠĠĠ", "Ġ{{", "1", ".", "0", ",", "Ġ1", ".", "0", ",", "Ġ0", ".", "0", "}},", "Ċ", "ĠĠĠĠĠ", "Ġ{{", "1", ".", "0", ",", "Ġ0", ".", "0", ",", "Ġ1", ".", "0", "}},", "ĠĠĠĠ", "Ġ{{", "0", ".", "0", ",", "Ġ1", ".", "0", ",", "Ġ1", ".", "0", "}},", "Ċ", "ĠĠĠĠĠ", "Ġ{{", "1", ".", "0", ",", "Ġ1", ".", "0", ",", "Ġ1", ".", "0", "}},", "ĠĠĠĠ", "Ġ{{", "1", ".", "0", ",", "Ġ1", ".", "0", ",", "Ġ2", ".", "0", "}},", "Ċ", "ĠĠĠĠĠ", "Ġ{{", "1", ".", "0", ",", "Ġ1", ".", "0", "e", "3", ",", "Ġ1", ".", "0", "e", "-", "3", "}}", "};", "Ċ", "Ġ", "Ġfor", "(", "auto", "Ġt", "Ġ:", "Ġtests", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠGeometry", "::", "Vector", "<", "dim", ",", "Ġf", "ptype", ">", "Ġv", "(", "t", ");", "Ċ", "ĠĠĠ", "Ġfor", "(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġdim", "Ġ-", "Ġ1", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġauto", "Ġo", "1", "Ġ=", "Ġv", ".", "get", "Orth", "ogonal", "(", "i", ");", "Ċ", "ĠĠĠĠĠ", "Ġf", "ptype", "Ġdp", "Ġ=", "Ġo", "1", ".", "dot", "(", "v", ");", "Ċ", "ĠĠĠĠĠ", "ĠEXPECT", "_", "NEAR", "(", "dp", ",", "Ġ0", ".", "0", ",", "Ġeps", ");", "Ċ", "ĠĠĠĠĠ", "Ġfor", "(", "unsigned", "Ġj", "Ġ=", "Ġi", "Ġ+", "Ġ1", ";", "Ġj", "Ġ<", "Ġdim", "Ġ-", "Ġ1", ";", "Ġj", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġauto", "Ġo", "2", "Ġ=", "Ġv", ".", "get", "Orth", "ogonal", "(", "j", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdp", "Ġ=", "Ġo", "1", ".", "dot", "(", "o", "2", ");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠEXPECT", "_", "NEAR", "(", "dp", ",", "Ġ0", ".", "0", ",", "Ġeps", ");", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::334", "code": "#include<cstdio>\nint t;\nchar c[250][250],u[250];\nchar go(int v)\n{\n    if(v==t)return 1;\n    if(u[v])return 0;\n    u[v]=1;\n    for(int i=0;i<=t;i++)\n        if(c[v][i])\n        {\n            c[v][i]--;\n            if(go(i))\n            {\n                c[i][v]++;\n                return 1;\n            }\n            c[v][i]++;\n        }\n    return 0;\n}\nint flow()\n{\n    int sum=0;\n    while(1)\n    {\n        for(int i=0;i<=t;i++)u[i]=0;\n        if(!go(0))break;\n        sum++;\n    }\n    return sum;\n}\nmain()\n{\n    int i,j,n,m,T;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        scanf(\"%d %d\",&n,&m);\n        t=n*2+1;\n        for(i=0;i<=t;i++)\n            for(j=0;j<=t;j++)\n                c[i][j]=0;\n        while(m--)\n        {\n            scanf(\"%d %d\",&i,&j);\n            c[i][n+j]=1;\n        }\n        for(i=1;i<=n;i++)\n            c[0][i]=c[n+i][t]=1;\n        printf(\"%d\\n\",n-flow());\n    }\n}\n", "code_tokens": ["Ġ#", "include", "<", "c", "stdio", ">", "Ċ", "int", "Ġt", ";", "Ċ", "char", "Ġc", "[", "250", "][", "250", "],", "u", "[", "250", "];", "Ċ", "char", "Ġgo", "(", "int", "Ġv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(", "v", "==", "t", ")", "return", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "u", "[", "v", "])", "return", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġu", "[", "v", "]=", "1", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<=", "t", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "c", "[", "v", "][", "i", "])", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "v", "][", "i", "]--;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "go", "(", "i", "))", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "i", "][", "v", "]++;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "v", "][", "i", "]++;", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "int", "Ġflow", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġsum", "=", "0", ";", "Ċ", "ĠĠĠ", "Ġwhile", "(", "1", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<=", "t", ";", "i", "++)", "u", "[", "i", "]=", "0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(!", "go", "(", "0", "))", "break", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsum", "++;", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġsum", ";", "Ċ", "}", "Ċ", "main", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġi", ",", "j", ",", "n", ",", "m", ",", "T", ";", "Ċ", "ĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "T", ");", "Ċ", "ĠĠĠ", "Ġwhile", "(", "T", "--)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "Ġ%", "d", "\",&", "n", ",&", "m", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġt", "=", "n", "*", "2", "+", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "i", "=", "0", ";", "i", "<=", "t", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "(", "j", "=", "0", ";", "j", "<=", "t", ";", "j", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "i", "][", "j", "]=", "0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "m", "--)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "Ġ%", "d", "\",&", "i", ",&", "j", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "i", "][", "n", "+", "j", "]=", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "i", "=", "1", ";", "i", "<=", "n", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "0", "][", "i", "]=", "c", "[", "n", "+", "i", "][", "t", "]=", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "n", "-", "flow", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::335", "code": "#include<queue>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N = 20012, inf = 2000000000;\nint p[N], f[N], t[N], s[N], dg[N];\nint main() {\n  int i, j, n;\n  while (scanf(\"%d\", &n) == 1 && n) {\n    fill(dg, dg+n, 0);\n    fill(s, s+n, inf);\n    for (i = 0; i < n; ++i) {\n      scanf(\"%d %d %d\", p+i, f+i, t+i);\n      ++dg[--p[i]];\n    }\n    queue<int> Q;\n    for (i = 0; i < n; ++i)\n      if (dg[i] == 0) {\n        s[i] = 0;\n        Q.push(i);\n      }\n    while (!Q.empty()) {\n      i = Q.front();\n      Q.pop();\n      if (p[i] < 0) continue;\n      j = (t[i] + s[i])*2 + !f[i];\n      if (j < s[p[i]]) s[p[i]] = j;\n      if (!--dg[p[i]]) Q.push(p[i]);\n    }\n    for (i = 0; p[i] >= 0; ++i);\n    printf(\"%d\\n\", s[i] + t[i]);\n  }\n}\n", "code_tokens": ["Ġ#", "include", "<", "queue", ">", "Ċ", "#", "include", "<", "c", "stdio", ">", "Ċ", "#", "include", "<", "algorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "const", "Ġint", "ĠN", "Ġ=", "Ġ200", "12", ",", "Ġinf", "Ġ=", "Ġ2", "000000000", ";", "Ċ", "int", "Ġp", "[", "N", "],", "Ġf", "[", "N", "],", "Ġt", "[", "N", "],", "Ġs", "[", "N", "],", "Ġdg", "[", "N", "];", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġi", ",", "Ġj", ",", "Ġn", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "scanf", "(\"%", "d", "\",", "Ġ&", "n", ")", "Ġ==", "Ġ1", "Ġ&&", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġfill", "(", "dg", ",", "Ġdg", "+", "n", ",", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġfill", "(", "s", ",", "Ġs", "+", "n", ",", "Ġinf", ");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "Ġ%", "d", "Ġ%", "d", "\",", "Ġp", "+", "i", ",", "Ġf", "+", "i", ",", "Ġt", "+", "i", ");", "Ċ", "ĠĠĠĠĠ", "Ġ++", "dg", "[--", "p", "[", "i", "]];", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġqueue", "<", "int", ">", "ĠQ", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "dg", "[", "i", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġs", "[", "i", "]", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQ", ".", "push", "(", "i", ");", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(!", "Q", ".", "empty", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġi", "Ġ=", "ĠQ", ".", "front", "();", "Ċ", "ĠĠĠĠĠ", "ĠQ", ".", "pop", "();", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "p", "[", "i", "]", "Ġ<", "Ġ0", ")", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠ", "Ġj", "Ġ=", "Ġ(", "t", "[", "i", "]", "Ġ+", "Ġs", "[", "i", "])*", "2", "Ġ+", "Ġ!", "f", "[", "i", "];", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "j", "Ġ<", "Ġs", "[", "p", "[", "i", "]])", "Ġs", "[", "p", "[", "i", "]]", "Ġ=", "Ġj", ";", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(!", "--", "dg", "[", "p", "[", "i", "]])", "ĠQ", ".", "push", "(", "p", "[", "i", "]);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġp", "[", "i", "]", "Ġ>=", "Ġ0", ";", "Ġ++", "i", ");", "Ċ", "ĠĠĠ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "Ġs", "[", "i", "]", "Ġ+", "Ġt", "[", "i", "]);", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::336", "code": "/*\n *\n *  Copyright (c) 2015-2017 Stanislav Zhukov\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n#ifndef YAPE_OPTEST_HPP\n#define YAPE_OPTEST_HPP\n\n#include \"OpAND.hpp\"\n\nclass OpTEST : public OpAND\n{\npublic:\n    void Execute() override;\n    int GetOpcode() const override;\n};\n\n\n#endif //YAPE_OPTEST_HPP\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "-", "2017", "ĠSt", "an", "is", "la", "v", "ĠZ", "h", "uk", "ov", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġ", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġ", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "Ġ", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "Ġ", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġ", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠYA", "PE", "_", "OP", "TEST", "_", "HP", "P", "Ċ", "#", "define", "ĠYA", "PE", "_", "OP", "TEST", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "Op", "AND", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠOp", "TEST", "Ġ:", "Ġpublic", "ĠOp", "AND", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvoid", "ĠExecute", "()", "Ġoverride", ";", "Ċ", "ĠĠĠ", "Ġint", "ĠGet", "Opcode", "()", "Ġconst", "Ġoverride", ";", "Ċ", "};", "Ċ", "Ċ", "Ċ", "#", "endif", "Ġ//", "YA", "PE", "_", "OP", "TEST", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::337", "code": "//include files\n#include \"Table1.h\"\n\nnamespace  hoge{\n\n/*\n * This class is generated automatically.\n * Never change from your hand.\n */\n/**\n * <pre>\n * schema name : \"tiny_query_helper_test\"\n * table name  : \"table1\"\n * remarks     : \"\"\n *\n * Persistable:\n *  Available to use Persistor-methods, like DBManager\\#insert(IPersistable),\\#update(IPersistable),\\#delete(IPersistable),else.\n *\n * </pre>\n */\n \n \n //実体を定義\n\n//カラム情報オブジェクトを定義\nconst std::string Table1::column::id::name_ (\"id\");\nconst std::string Table1::column::data1_int::name_ (\"data1_int\");\nconst std::string Table1::column::data2_string::name_ (\"data2_string\");\n \n \n //カラム情報の実態を定義\nconst typename Table1::column::id Table1::column::id;\nconst typename Table1::column::data1_int Table1::column::data1_int;\nconst typename Table1::column::data2_string Table1::column::data2_string;\n\n \n}\n\n", "code_tokens": ["Ġ//", "include", "Ġfiles", "Ċ", "#", "include", "Ġ\"", "Table", "1", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġ", "Ġh", "oge", "{", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠThis", "Ġclass", "Ġis", "Ġgenerated", "Ġautomatically", ".", "Ċ", "Ġ*", "ĠNever", "Ġchange", "Ġfrom", "Ġyour", "Ġhand", ".", "Ċ", "Ġ*/", "Ċ", "/**", "Ċ", "Ġ*", "Ġ<", "pre", ">", "Ċ", "Ġ*", "Ġschema", "Ġname", "Ġ:", "Ġ\"", "tiny", "_", "query", "_", "helper", "_", "test", "\"", "Ċ", "Ġ*", "Ġtable", "Ġname", "Ġ", "Ġ:", "Ġ\"", "table", "1", "\"", "Ċ", "Ġ*", "Ġre", "marks", "ĠĠĠĠ", "Ġ:", "Ġ\"\"", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠPers", "ist", "able", ":", "Ċ", "Ġ*", "Ġ", "ĠAvailable", "Ġto", "Ġuse", "ĠPers", "istor", "-", "methods", ",", "Ġlike", "ĠDB", "Manager", "\\", "#", "insert", "(", "IP", "ers", "ist", "able", "),\\", "#", "update", "(", "IP", "ers", "ist", "able", "),\\", "#", "delete", "(", "IP", "ers", "ist", "able", "),", "else", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ</", "pre", ">", "Ċ", "Ġ*/", "Ċ", "ĠĊ", "ĠĊ", "Ġ//", "å®", "Ł", "ä½ĵ", "ãĤĴ", "å®ļ", "ç¾", "©", "Ċ", "Ċ", "//", "ãĤ", "«", "ãĥ©", "ãĥ", "ł", "æĥħ", "åł", "±", "ãĤ", "ª", "ãĥ", "ĸ", "ãĤ", "¸", "ãĤ", "§", "ãĤ¯", "ãĥĪ", "ãĤĴ", "å®ļ", "ç¾", "©", "Ċ", "const", "Ġstd", "::", "string", "ĠTable", "1", "::", "column", "::", "id", "::", "name", "_", "Ġ(\"", "id", "\");", "Ċ", "const", "Ġstd", "::", "string", "ĠTable", "1", "::", "column", "::", "data", "1", "_", "int", "::", "name", "_", "Ġ(\"", "data", "1", "_", "int", "\");", "Ċ", "const", "Ġstd", "::", "string", "ĠTable", "1", "::", "column", "::", "data", "2", "_", "string", "::", "name", "_", "Ġ(\"", "data", "2", "_", "string", "\");", "Ċ", "ĠĊ", "ĠĊ", "Ġ//", "ãĤ", "«", "ãĥ©", "ãĥ", "ł", "æĥħ", "åł", "±", "ãģ®", "å®", "Ł", "æ", "ħ", "ĭ", "ãĤĴ", "å®ļ", "ç¾", "©", "Ċ", "const", "Ġtypename", "ĠTable", "1", "::", "column", "::", "id", "ĠTable", "1", "::", "column", "::", "id", ";", "Ċ", "const", "Ġtypename", "ĠTable", "1", "::", "column", "::", "data", "1", "_", "int", "ĠTable", "1", "::", "column", "::", "data", "1", "_", "int", ";", "Ċ", "const", "Ġtypename", "ĠTable", "1", "::", "column", "::", "data", "2", "_", "string", "ĠTable", "1", "::", "column", "::", "data", "2", "_", "string", ";", "Ċ", "Ċ", "Ġ", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::338", "code": "#include <iostream>\n#include <zmf/AbstractModule.hpp>\n#include \"zsdn/StartupHelper.h\"\n#include \"LinkDiscoveryModule.hpp\"\n#include <google/protobuf/stubs/common.h>\n\nint main(int argc, char* argv[]) {\n    int returnCode;\n    if (zsdn::StartupHelper::paramsOkay(argc, argv)) {\n        zmf::logging::ZmfLogging::initializeLogging(\"LinkDiscoveryModule\", argv[1]);\n        returnCode = zsdn::StartupHelper::startInConsole(new LinkDiscoveryModule(0), argv[1]);\n    } else {\n        returnCode = 1;\n    }\n    google::protobuf::ShutdownProtobufLibrary();\n    return returnCode;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "z", "mf", "/", "Abstract", "Module", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "z", "sdn", "/", "Startup", "Helper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Link", "Discovery", "Module", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "google", "/", "protobuf", "/", "stubs", "/", "common", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġreturn", "Code", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "z", "sdn", "::", "Startup", "Helper", "::", "params", "Ok", "ay", "(", "argc", ",", "Ġargv", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġz", "mf", "::", "logging", "::", "Z", "mf", "Logging", "::", "initialize", "Logging", "(\"", "Link", "Discovery", "Module", "\",", "Ġargv", "[", "1", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Code", "Ġ=", "Ġz", "sdn", "::", "Startup", "Helper", "::", "start", "In", "Console", "(", "new", "ĠLink", "Discovery", "Module", "(", "0", "),", "Ġargv", "[", "1", "]);", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Code", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġgoogle", "::", "protobuf", "::", "Shutdown", "Protobuf", "Library", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġreturn", "Code", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::339", "code": "#include \"barista_core/barista_core.h\"\n#include \"decafs_types/ip_address.h\"\n\n#include \"network_fake.h\"\n\n#define MIN_ARGS 6\n#define STRIPE_SIZE 1\n#define CHUNK_SIZE 2\n#define METADATA 3\n#define NUM_ESPRESSOS 4\n#define PORT 5\n\nint main(int argc, char** argv) {\n\n   // barista_core_init()\n   // set_node_up x 4 or whatever you want\n   \n   char* args[] = {(char*)\"\", (char*)\"1024\", (char*)\"512\", (char*)\"barista_metadata\", (char*)\"4\", (char*)\"1024\"};\n   barista_core_init(6, args);\n\n   set_node_up(1);\n   set_node_up(2);\n   set_node_up(3);\n   set_node_up(4);\n \n   struct ip_address ipaddr1 = ip_address((char*)\"192.168.1.1\"); \n   ConnectionToClient* ctc = NULL; \n   struct client client1 = client(ipaddr1, 1, ctc);\n\n   //open_dir(\"hello.txt\", client1);\n\n   open_file(\"hello.txt\", O_RDWR, client1);\n   std::string teststr(\"testwrite\");\n   write_file(1, teststr.c_str(), teststr.size(), client1); \n\n   close_file(1, client1);\n   open_file(\"hello.txt\", O_RDWR, client1);\n \n   read_file(2, teststr.size(), client1); \n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "bar", "ista", "_", "core", "/", "bar", "ista", "_", "core", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "de", "ca", "fs", "_", "types", "/", "ip", "_", "address", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "network", "_", "fake", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠMIN", "_", "ARGS", "Ġ6", "Ċ", "#", "define", "ĠSTR", "I", "PE", "_", "SIZE", "Ġ1", "Ċ", "#", "define", "ĠCHUNK", "_", "SIZE", "Ġ2", "Ċ", "#", "define", "ĠMET", "ADATA", "Ġ3", "Ċ", "#", "define", "ĠNUM", "_", "ESP", "RESS", "OS", "Ġ4", "Ċ", "#", "define", "ĠPORT", "Ġ5", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "Ċ", "ĠĠ", "Ġ//", "Ġbar", "ista", "_", "core", "_", "init", "()", "Ċ", "ĠĠ", "Ġ//", "Ġset", "_", "node", "_", "up", "Ġx", "Ġ4", "Ġor", "Ġwhatever", "Ġyou", "Ġwant", "Ċ", "ĠĠĠĊ", "ĠĠ", "Ġchar", "*", "Ġargs", "[]", "Ġ=", "Ġ{(", "char", "*)", "\"\",", "Ġ(", "char", "*)\"", "1024", "\",", "Ġ(", "char", "*)\"", "512", "\",", "Ġ(", "char", "*)\"", "bar", "ista", "_", "metadata", "\",", "Ġ(", "char", "*)\"", "4", "\",", "Ġ(", "char", "*)\"", "1024", "\"};", "Ċ", "ĠĠ", "Ġbar", "ista", "_", "core", "_", "init", "(", "6", ",", "Ġargs", ");", "Ċ", "Ċ", "ĠĠ", "Ġset", "_", "node", "_", "up", "(", "1", ");", "Ċ", "ĠĠ", "Ġset", "_", "node", "_", "up", "(", "2", ");", "Ċ", "ĠĠ", "Ġset", "_", "node", "_", "up", "(", "3", ");", "Ċ", "ĠĠ", "Ġset", "_", "node", "_", "up", "(", "4", ");", "Ċ", "ĠĊ", "ĠĠ", "Ġstruct", "Ġip", "_", "address", "Ġi", "paddr", "1", "Ġ=", "Ġip", "_", "address", "((", "char", "*)\"", "192", ".", "168", ".", "1", ".", "1", "\");", "ĠĊ", "ĠĠ", "ĠConnection", "ToClient", "*", "Ġct", "c", "Ġ=", "ĠNULL", ";", "ĠĊ", "ĠĠ", "Ġstruct", "Ġclient", "Ġclient", "1", "Ġ=", "Ġclient", "(", "ipaddr", "1", ",", "Ġ1", ",", "Ġct", "c", ");", "Ċ", "Ċ", "ĠĠ", "Ġ//", "open", "_", "dir", "(\"", "hello", ".", "txt", "\",", "Ġclient", "1", ");", "Ċ", "Ċ", "ĠĠ", "Ġopen", "_", "file", "(\"", "hello", ".", "txt", "\",", "ĠO", "_", "RDWR", ",", "Ġclient", "1", ");", "Ċ", "ĠĠ", "Ġstd", "::", "string", "Ġtest", "str", "(\"", "test", "write", "\");", "Ċ", "ĠĠ", "Ġwrite", "_", "file", "(", "1", ",", "Ġtest", "str", ".", "c", "_", "str", "(),", "Ġtest", "str", ".", "size", "(),", "Ġclient", "1", ");", "ĠĊ", "Ċ", "ĠĠ", "Ġclose", "_", "file", "(", "1", ",", "Ġclient", "1", ");", "Ċ", "ĠĠ", "Ġopen", "_", "file", "(\"", "hello", ".", "txt", "\",", "ĠO", "_", "RDWR", ",", "Ġclient", "1", ");", "Ċ", "ĠĊ", "ĠĠ", "Ġread", "_", "file", "(", "2", ",", "Ġtest", "str", ".", "size", "(),", "Ġclient", "1", ");", "Ġ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::340", "code": "// min example\n#include <cassert>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main () {\n  cout << \"min(1,2)==\" << min(1,2) << endl;\n  assert(min(1,2) == 1);\n  cout << \"min(2,1)==\" << min(2,1) << endl;\n  cout << \"min('a','z')==\" << min('a','z') << endl;\n  assert(min('a','z') != 'a');\n  cout << \"min(3.14,2.72)==\" << min(3.14,2.72) << endl;\n  assert(min(3.14,2.72) == 2.72);\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġmin", "Ġexample", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "min", "(", "1", ",", "2", ")==\"", "Ġ<<", "Ġmin", "(", "1", ",", "2", ")", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġassert", "(", "min", "(", "1", ",", "2", ")", "Ġ==", "Ġ1", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "min", "(", "2", ",", "1", ")==\"", "Ġ<<", "Ġmin", "(", "2", ",", "1", ")", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "min", "('", "a", "','", "z", "')", "==\"", "Ġ<<", "Ġmin", "('", "a", "','", "z", "')", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġassert", "(", "min", "('", "a", "','", "z", "')", "Ġ!=", "Ġ'", "a", "');", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "min", "(", "3", ".", "14", ",", "2", ".", "72", ")==\"", "Ġ<<", "Ġmin", "(", "3", ".", "14", ",", "2", ".", "72", ")", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġassert", "(", "min", "(", "3", ".", "14", ",", "2", ".", "72", ")", "Ġ==", "Ġ2", ".", "72", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::341", "code": "//===----------------------------------------------------------------------===//\n//\n//                         Peloton\n//\n// parameter_value_expression.cpp\n//\n// Identification: src/backend/expression/parameter_value_expression.cpp\n//\n// Copyright (c) 2015-16, Carnegie Mellon University Database Group\n//\n//===----------------------------------------------------------------------===//\n\n#include \"backend/common/logger.h\"\n#include \"backend/expression/parameter_value_expression.h\"\n#include \"backend/executor/executor_context.h\"\n\nnamespace peloton {\nnamespace expression {\n\nParameterValueExpression::ParameterValueExpression(ValueType type,\n                                                   int value_idx)\n    : AbstractExpression(EXPRESSION_TYPE_VALUE_PARAMETER, type),\n      value_idx_(value_idx),\n      param_value_() {\n  LOG_TRACE(\"ParameterValueExpression %d\", value_idx);\n};\n\nParameterValueExpression::ParameterValueExpression(oid_t value_idx,\n                                                   Value param_value)\n    : AbstractExpression(EXPRESSION_TYPE_VALUE_PARAMETER,\n                         param_value.GetValueType()),\n      value_idx_(value_idx),\n      param_value_(param_value) {}\n\nValue ParameterValueExpression::Evaluate(\n    __attribute__((unused)) const AbstractTuple *tuple1,\n    __attribute__((unused)) const AbstractTuple *tuple2,\n    executor::ExecutorContext *context) const {\n  auto& params = context->GetParams();\n  assert(value_idx_ < params.size());\n  return params[value_idx_];\n}\n\n}  // namespace expression\n}  // namespace peloton\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------------", "===//", "Ċ", "//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠPe", "lo", "ton", "Ċ", "//", "Ċ", "//", "Ġparameter", "_", "value", "_", "expression", ".", "cpp", "Ċ", "//", "Ċ", "//", "ĠIdent", "ification", ":", "Ġsrc", "/", "backend", "/", "expression", "/", "parameter", "_", "value", "_", "expression", ".", "cpp", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "-", "16", ",", "ĠCar", "neg", "ie", "ĠM", "ell", "on", "ĠUn", "ivers", "ity", "ĠDatabase", "ĠGroup", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "#", "include", "Ġ\"", "backend", "/", "common", "/", "logger", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "backend", "/", "expression", "/", "parameter", "_", "value", "_", "expression", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "backend", "/", "executor", "/", "executor", "_", "context", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġpe", "lo", "ton", "Ġ{", "Ċ", "namespace", "Ġexpression", "Ġ{", "Ċ", "Ċ", "ParameterValue", "Expression", "::", "ParameterValue", "Expression", "(", "ValueType", "Ġtype", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġvalue", "_", "idx", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠAbstract", "Expression", "(", "EXPRESSION", "_", "TYPE", "_", "VALUE", "_", "PARAMETER", ",", "Ġtype", "),", "Ċ", "ĠĠĠĠĠ", "Ġvalue", "_", "idx", "_(", "value", "_", "idx", "),", "Ċ", "ĠĠĠĠĠ", "Ġparam", "_", "value", "_()", "Ġ{", "Ċ", "Ġ", "ĠLOG", "_", "TRACE", "(\"", "ParameterValue", "Expression", "Ġ%", "d", "\",", "Ġvalue", "_", "idx", ");", "Ċ", "};", "Ċ", "Ċ", "ParameterValue", "Expression", "::", "ParameterValue", "Expression", "(", "oid", "_", "t", "Ġvalue", "_", "idx", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠValue", "Ġparam", "_", "value", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠAbstract", "Expression", "(", "EXPRESSION", "_", "TYPE", "_", "VALUE", "_", "PARAMETER", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġparam", "_", "value", ".", "GetValue", "Type", "()),", "Ċ", "ĠĠĠĠĠ", "Ġvalue", "_", "idx", "_(", "value", "_", "idx", "),", "Ċ", "ĠĠĠĠĠ", "Ġparam", "_", "value", "_(", "param", "_", "value", ")", "Ġ{}", "Ċ", "Ċ", "Value", "ĠParameter", "Value", "Expression", "::", "Evaluate", "(", "Ċ", "ĠĠĠ", "Ġ__", "attribute", "__((", "unused", "))", "Ġconst", "ĠAbstract", "Tuple", "Ġ*", "tuple", "1", ",", "Ċ", "ĠĠĠ", "Ġ__", "attribute", "__((", "unused", "))", "Ġconst", "ĠAbstract", "Tuple", "Ġ*", "tuple", "2", ",", "Ċ", "ĠĠĠ", "Ġexecutor", "::", "Executor", "Context", "Ġ*", "context", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġauto", "&", "Ġparams", "Ġ=", "Ġcontext", "->", "Get", "Params", "();", "Ċ", "Ġ", "Ġassert", "(", "value", "_", "idx", "_", "Ġ<", "Ġparams", ".", "size", "());", "Ċ", "Ġ", "Ġreturn", "Ġparams", "[", "value", "_", "idx", "_", "];", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġexpression", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġpe", "lo", "ton", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::342", "code": "/*\n * svf_dpi.cpp\n *\n *  Created on: Jan 7, 2014\n *      Author: ballance\n */\n#include \"svf_runtest.h\"\n\nextern \"C\" int svf_dpi_run_test(const char *name);\n\nint svf_dpi_run_test(const char *name)\n{\n\tif (name == 0 || *name == 0) {\n\t\tname == 0;\n\t}\n\n\tsvf_runtest(name);\n\n\treturn 0;\n}\n\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġs", "vf", "_", "dpi", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠJan", "Ġ7", ",", "Ġ2014", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "Ġball", "ance", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "sv", "f", "_", "run", "test", ".", "h", "\"", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "Ġs", "vf", "_", "dpi", "_", "run", "_", "test", "(", "const", "Ġchar", "Ġ*", "name", ");", "Ċ", "Ċ", "int", "Ġs", "vf", "_", "dpi", "_", "run", "_", "test", "(", "const", "Ġchar", "Ġ*", "name", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "name", "Ġ==", "Ġ0", "Ġ||", "Ġ*", "name", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "name", "Ġ==", "Ġ0", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "sv", "f", "_", "run", "test", "(", "name", ");", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::343", "code": "#pragma once\n#include <data_types/fourierseries.hpp>\n#include <kernels/kernels.h>\n#include <kernels/defaults.h>\n#include <iostream>\n#include <utils/nvtx.hpp>\n\nclass HarmonicFolder {\nprivate:\n  unsigned int max_blocks;\n  unsigned int max_threads;\n  float** h_data_ptrs;\n  float** d_data_ptrs;\n  HarmonicSums<float>& sums;\n\npublic:\n  HarmonicFolder(HarmonicSums<float>& sums,\n\t\t unsigned int max_blocks=MAX_BLOCKS,\n\t\t unsigned int max_threads=MAX_THREADS)\n    :sums(sums),max_blocks(max_blocks),max_threads(max_threads)\n  {\n    Utils::device_malloc<float*>(&d_data_ptrs,sums.size());\n    Utils::host_malloc<float*>(&h_data_ptrs,sums.size());\n  }\n  \n  void fold(DevicePowerSpectrum<float>& fold0)\n  {\n    PUSH_NVTX_RANGE(\"Harmonic summing\",2)\n    for (int ii=0;ii<sums.size();ii++)\n      {\n\th_data_ptrs[ii] = sums[ii]->get_data();\n      }\n    Utils::h2dcpy<float*>(d_data_ptrs,h_data_ptrs,sums.size());\n    device_harmonic_sum(fold0.get_data(),d_data_ptrs,\n\t\t\tfold0.get_nbins(),sums.size(),\n\t\t\tmax_blocks,max_threads);\n    POP_NVTX_RANGE\n      }\n  \n  ~HarmonicFolder()\n  {\n    Utils::device_free(d_data_ptrs);\n    Utils::host_free(h_data_ptrs);\n  }\n};\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "#", "include", "Ġ<", "data", "_", "types", "/", "fo", "uri", "ers", "eries", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "kernel", "s", "/", "kernel", "s", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "kernel", "s", "/", "defaults", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "utils", "/", "nv", "tx", ".", "hpp", ">", "Ċ", "Ċ", "class", "ĠH", "armon", "ic", "Folder", "Ġ{", "Ċ", "private", ":", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġmax", "_", "blocks", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġmax", "_", "threads", ";", "Ċ", "Ġ", "Ġfloat", "**", "Ġh", "_", "data", "_", "ptrs", ";", "Ċ", "Ġ", "Ġfloat", "**", "Ġd", "_", "data", "_", "ptrs", ";", "Ċ", "Ġ", "ĠH", "armon", "ic", "Sum", "s", "<", "float", ">&", "Ġsum", "s", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "ĠH", "armon", "ic", "Folder", "(", "H", "armon", "ic", "Sum", "s", "<", "float", ">&", "Ġsum", "s", ",", "Ċ", "ĉĉ", "Ġunsigned", "Ġint", "Ġmax", "_", "blocks", "=", "MAX", "_", "BLOCKS", ",", "Ċ", "ĉĉ", "Ġunsigned", "Ġint", "Ġmax", "_", "threads", "=", "MAX", "_", "THREADS", ")", "Ċ", "ĠĠĠ", "Ġ:", "sums", "(", "sums", "),", "max", "_", "blocks", "(", "max", "_", "blocks", "),", "max", "_", "threads", "(", "max", "_", "threads", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠUtils", "::", "device", "_", "malloc", "<", "float", "*>(&", "d", "_", "data", "_", "ptrs", ",", "sums", ".", "size", "());", "Ċ", "ĠĠĠ", "ĠUtils", "::", "host", "_", "malloc", "<", "float", "*>(&", "h", "_", "data", "_", "ptrs", ",", "sums", ".", "size", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "ĠĠĊ", "Ġ", "Ġvoid", "Ġfold", "(", "Device", "Power", "Spectrum", "<", "float", ">&", "Ġfold", "0", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠPUSH", "_", "N", "VT", "X", "_", "RANGE", "(\"", "H", "armon", "ic", "Ġsum", "ming", "\",", "2", ")", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġii", "=", "0", ";", "ii", "<", "sums", ".", "size", "();", "ii", "++)", "Ċ", "ĠĠĠĠĠ", "Ġ{", "Ċ", "ĉ", "h", "_", "data", "_", "ptrs", "[", "ii", "]", "Ġ=", "Ġsum", "s", "[", "ii", "]->", "get", "_", "data", "();", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "ĠUtils", "::", "h", "2", "d", "cpy", "<", "float", "*>(", "d", "_", "data", "_", "ptrs", ",", "h", "_", "data", "_", "ptrs", ",", "sums", ".", "size", "());", "Ċ", "ĠĠĠ", "Ġdevice", "_", "h", "armon", "ic", "_", "sum", "(", "fold", "0", ".", "get", "_", "data", "(),", "d", "_", "data", "_", "ptrs", ",", "Ċ", "ĉĉ", "ĉ", "fold", "0", ".", "get", "_", "nb", "ins", "(),", "sums", ".", "size", "(),", "Ċ", "ĉĉ", "ĉ", "max", "_", "blocks", ",", "max", "_", "threads", ");", "Ċ", "ĠĠĠ", "ĠPOP", "_", "N", "VT", "X", "_", "RANGE", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĊ", "Ġ", "Ġ~", "H", "armon", "ic", "Folder", "()", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠUtils", "::", "device", "_", "free", "(", "d", "_", "data", "_", "ptrs", ");", "Ċ", "ĠĠĠ", "ĠUtils", "::", "host", "_", "free", "(", "h", "_", "data", "_", "ptrs", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::344", "code": "// checking initialization of static template data memebers\n\ntemplate <class T>\nstruct S\n{\n    static T a;\n    static T b;\n};\n\ntemplate <class T>\nT S<T>::a;        // <-- NOT initialized\n\ntemplate <class T>\nT S<T>::b = 0;    // <-- explicitly initialized\n\nint main ()\n{\n    // g++ on DEC OSF and IBM AIX fails to link\n    return S<char>::a + S<char>::b;\n}\n", "code_tokens": ["Ġ//", "Ġchecking", "Ġinitialization", "Ġof", "Ġstatic", "Ġtemplate", "Ġdata", "Ġmem", "eb", "ers", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "struct", "ĠS", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstatic", "ĠT", "Ġa", ";", "Ċ", "ĠĠĠ", "Ġstatic", "ĠT", "Ġb", ";", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "T", "ĠS", "<", "T", ">::", "a", ";", "ĠĠĠĠĠĠĠ", "Ġ//", "Ġ<", "--", "ĠNOT", "Ġinitialized", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "T", "ĠS", "<", "T", ">::", "b", "Ġ=", "Ġ0", ";", "ĠĠĠ", "Ġ//", "Ġ<", "--", "Ġexplicitly", "Ġinitialized", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġg", "++", "Ġon", "ĠDEC", "ĠOS", "F", "Ġand", "ĠIB", "M", "ĠA", "IX", "Ġfails", "Ġto", "Ġlink", "Ċ", "ĠĠĠ", "Ġreturn", "ĠS", "<", "char", ">::", "a", "Ġ+", "ĠS", "<", "char", ">::", "b", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::345", "code": "//\n// Created by Dawid Drozd aka Gelldur on 7/11/16.\n//\n\n#include \"Layout.h\"\n\n#include <log.h>\n\n#ifndef PLATFORM_IOS\n\nvoid Layout::layout()\n{\n\tWLOG(\"Function %s not implemented: %s:%d\", __func__, __FILE__, __LINE__);\n}\n\n#endif\n\nLayout& Layout::getNullObject()\n{\n\tstatic NullLayout nullObject;\n\treturn nullObject;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// NullLayout\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nvoid NullLayout::layout()\n{\n\tWLOG(\"NullObject ignoring call: %s in: %s:%d\", __func__, __FILE__, __LINE__);\n}\n\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "ĠD", "aw", "id", "ĠD", "ro", "zd", "Ġa", "ka", "ĠG", "el", "ld", "ur", "Ġon", "Ġ7", "/", "11", "/", "16", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "Layout", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "log", ".", "h", ">", "Ċ", "Ċ", "#", "ifndef", "ĠPLATFORM", "_", "IOS", "Ċ", "Ċ", "void", "ĠLayout", "::", "layout", "()", "Ċ", "{", "Ċ", "ĉ", "W", "LOG", "(\"", "Function", "Ġ%", "s", "Ġnot", "Ġimplemented", ":", "Ġ%", "s", ":%", "d", "\",", "Ġ__", "func", "__,", "Ġ__", "FILE", "__,", "Ġ__", "LINE", "__);", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ", "Ċ", "Layout", "&", "ĠLayout", "::", "get", "Null", "Object", "()", "Ċ", "{", "Ċ", "ĉ", "static", "ĠNull", "Layout", "Ġnull", "Object", ";", "Ċ", "ĉ", "return", "Ġnull", "Object", ";", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "////////////////////////////////////////////////////////", "Ċ", "//", "ĠNull", "Layout", "Ċ", "////////////////////////////////////////////////////////////////", "////////////////////////////////////////////////////////", "Ċ", "Ċ", "void", "ĠNull", "Layout", "::", "layout", "()", "Ċ", "{", "Ċ", "ĉ", "W", "LOG", "(\"", "Null", "Object", "Ġignoring", "Ġcall", ":", "Ġ%", "s", "Ġin", ":", "Ġ%", "s", ":%", "d", "\",", "Ġ__", "func", "__,", "Ġ__", "FILE", "__,", "Ġ__", "LINE", "__);", "Ċ", "}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::346", "code": "#include <string>\nusing std::string;\n\nstring sa[10];  // ten elements of empty string\nint    ia[10];  // ten elements of 0\n\nint main() {\n  string sa2[10];  // ten elements of empty string\n  int    ia2[10];  // ten elements of undefined value\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "Ċ", "string", "Ġsa", "[", "10", "];", "Ġ", "Ġ//", "Ġten", "Ġelements", "Ġof", "Ġempty", "Ġstring", "Ċ", "int", "ĠĠĠ", "Ġia", "[", "10", "];", "Ġ", "Ġ//", "Ġten", "Ġelements", "Ġof", "Ġ0", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġstring", "Ġsa", "2", "[", "10", "];", "Ġ", "Ġ//", "Ġten", "Ġelements", "Ġof", "Ġempty", "Ġstring", "Ċ", "Ġ", "Ġint", "ĠĠĠ", "Ġia", "2", "[", "10", "];", "Ġ", "Ġ//", "Ġten", "Ġelements", "Ġof", "Ġundefined", "Ġvalue", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::347", "code": "#ifndef APIENDPOINT_HPP_7PXYTQE5\n#define APIENDPOINT_HPP_7PXYTQE5\n#include <utility>\n\nnamespace dota2\n{\n    template<typename Backend>\n    class APIEndpoint\n    {\n        public:\n            template<typename T>\n            APIEndpoint(T &&backend) :\n                backend(std::forward<T>(backend)) { }\n\n            template<typename Request>\n            typename Request::obj query(const Request &request)\n            {\n                return backend.query(request);\n            }\n\n        protected:\n            Backend backend;\n    };\n} // namespace dota2\n\n#endif /* end of include guard: APIENDPOINT_HPP_7PXYTQE5 */\n", "code_tokens": ["Ġ#", "ifndef", "ĠAPI", "ENDPOINT", "_", "HP", "P", "_", "7", "P", "XY", "T", "QE", "5", "Ċ", "#", "define", "ĠAPI", "ENDPOINT", "_", "HP", "P", "_", "7", "P", "XY", "T", "QE", "5", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "namespace", "Ġd", "ota", "2", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtemplate", "<", "typename", "ĠBackend", ">", "Ċ", "ĠĠĠ", "Ġclass", "ĠAPI", "Endpoint", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtemplate", "<", "typename", "ĠT", ">", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠAPI", "Endpoint", "(", "T", "Ġ&&", "backend", ")", "Ġ:", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbackend", "(", "std", "::", "forward", "<", "T", ">(", "backend", "))", "Ġ{", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtemplate", "<", "typename", "ĠRequest", ">", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtypename", "ĠRequest", "::", "obj", "Ġquery", "(", "const", "ĠRequest", "Ġ&", "request", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġbackend", ".", "query", "(", "request", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprotected", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠBackend", "Ġbackend", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġd", "ota", "2", "Ċ", "Ċ", "#", "endif", "Ġ/*", "Ġend", "Ġof", "Ġinclude", "Ġguard", ":", "ĠAPI", "ENDPOINT", "_", "HP", "P", "_", "7", "P", "XY", "T", "QE", "5", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::348", "code": "#ifndef YOBAPERL_PERL_STACK_HPP\n#define YOBAPERL_PERL_STACK_HPP\n\n#include \"yobaperl/common.hpp\"\n\nnamespace yoba {\n\nclass Perl;\nclass Scalar;\nclass Array;\nclass Code;\n\n}\n\nnamespace yoba { namespace priv {\n\n\n\nclass PerlStack\n{\npublic:\n   PerlStack(Perl & perl);\n   ~PerlStack();\n\n   void extend(SSize_t size);\n\n   void pushSV(SV * sv, bool extend);\n   SV * popSV();\n\n   void pushScalar(Scalar arg);\n   void pushArray(Array args);\n   Scalar popScalar();\n   Array popArray();\n\n   void call(Code code, I32 flags);\n   void callMethod(Code code, I32 flags);\n   void eval(const std::string & code, I32 flags);\n\nprivate:\n   Perl & _perl;\n   PerlInterpreter * _interpreter = nullptr;\n   SV ** sp = nullptr;\n\n   I32 _returns_count = -1;\n};\n\n\n\n}} // namespace yoba::priv\n\n#endif // YOBAPERL_PERL_STACK_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠY", "OB", "AP", "ER", "L", "_", "PER", "L", "_", "STACK", "_", "HP", "P", "Ċ", "#", "define", "ĠY", "OB", "AP", "ER", "L", "_", "PER", "L", "_", "STACK", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "y", "ob", "aper", "l", "/", "common", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġy", "ob", "a", "Ġ{", "Ċ", "Ċ", "class", "ĠPer", "l", ";", "Ċ", "class", "ĠScalar", ";", "Ċ", "class", "ĠArray", ";", "Ċ", "class", "ĠCode", ";", "Ċ", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġy", "ob", "a", "Ġ{", "Ġnamespace", "Ġpriv", "Ġ{", "Ċ", "Ċ", "Ċ", "Ċ", "class", "ĠPer", "l", "Stack", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠ", "ĠPer", "l", "Stack", "(", "Perl", "Ġ&", "Ġperl", ");", "Ċ", "ĠĠ", "Ġ~", "Perl", "Stack", "();", "Ċ", "Ċ", "ĠĠ", "Ġvoid", "Ġextend", "(", "S", "Size", "_", "t", "Ġsize", ");", "Ċ", "Ċ", "ĠĠ", "Ġvoid", "Ġpush", "SV", "(", "SV", "Ġ*", "Ġsv", ",", "Ġbool", "Ġextend", ");", "Ċ", "ĠĠ", "ĠSV", "Ġ*", "Ġpop", "SV", "();", "Ċ", "Ċ", "ĠĠ", "Ġvoid", "Ġpush", "Scalar", "(", "Scalar", "Ġarg", ");", "Ċ", "ĠĠ", "Ġvoid", "Ġpush", "Array", "(", "Array", "Ġargs", ");", "Ċ", "ĠĠ", "ĠScalar", "Ġpop", "Scalar", "();", "Ċ", "ĠĠ", "ĠArray", "Ġpop", "Array", "();", "Ċ", "Ċ", "ĠĠ", "Ġvoid", "Ġcall", "(", "Code", "Ġcode", ",", "ĠI", "32", "Ġflags", ");", "Ċ", "ĠĠ", "Ġvoid", "Ġcall", "Method", "(", "Code", "Ġcode", ",", "ĠI", "32", "Ġflags", ");", "Ċ", "ĠĠ", "Ġvoid", "Ġeval", "(", "const", "Ġstd", "::", "string", "Ġ&", "Ġcode", ",", "ĠI", "32", "Ġflags", ");", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠ", "ĠPer", "l", "Ġ&", "Ġ_", "perl", ";", "Ċ", "ĠĠ", "ĠPer", "l", "Interpreter", "Ġ*", "Ġ_", "interpreter", "Ġ=", "Ġnullptr", ";", "Ċ", "ĠĠ", "ĠSV", "Ġ**", "Ġsp", "Ġ=", "Ġnullptr", ";", "Ċ", "Ċ", "ĠĠ", "ĠI", "32", "Ġ_", "returns", "_", "count", "Ġ=", "Ġ-", "1", ";", "Ċ", "};", "Ċ", "Ċ", "Ċ", "Ċ", "}}", "Ġ//", "Ġnamespace", "Ġy", "ob", "a", "::", "priv", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠY", "OB", "AP", "ER", "L", "_", "PER", "L", "_", "STACK", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::349", "code": "/*----------------------------------------------------------------------------*/\n/* Copyright (c) FIRST 2011. All Rights Reserved.\n */\n/* Open Source Software - may be modified and shared by FRC teams. The code   */\n/* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */\n/*----------------------------------------------------------------------------*/\n\n#include \"Commands/WaitUntilCommand.h\"\n#include \"Timer.h\"\n\n/**\n * A {@link WaitCommand} will wait until a certain match time before finishing.\n * This will wait until the game clock reaches some value, then continue to the\n * next command.\n * @see CommandGroup\n */\nWaitUntilCommand::WaitUntilCommand(double time)\n    : Command(\"WaitUntilCommand\", time) {\n  m_time = time;\n}\n\nWaitUntilCommand::WaitUntilCommand(const std::string &name, double time)\n    : Command(name, time) {\n  m_time = time;\n}\n\nvoid WaitUntilCommand::Initialize() {}\n\nvoid WaitUntilCommand::Execute() {}\n\n/**\n * Check if we've reached the actual finish time.\n */\nbool WaitUntilCommand::IsFinished() { return Timer::GetMatchTime() >= m_time; }\n\nvoid WaitUntilCommand::End() {}\n\nvoid WaitUntilCommand::Interrupted() {}\n", "code_tokens": ["Ġ/*", "------------------------------------------------------------------------", "----*/", "Ċ", "/*", "ĠCopyright", "Ġ(", "c", ")", "ĠFIRST", "Ġ2011", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*/", "Ċ", "/*", "ĠOpen", "ĠSource", "ĠSoftware", "Ġ-", "Ġmay", "Ġbe", "Ġmodified", "Ġand", "Ġshared", "Ġby", "ĠF", "RC", "Ġteams", ".", "ĠThe", "Ġcode", "ĠĠ", "Ġ*/", "Ċ", "/*", "Ġmust", "Ġbe", "Ġac", "compan", "ied", "Ġby", "Ġthe", "ĠFIRST", "ĠBSD", "Ġlicense", "Ġfile", "Ġin", "Ġ$(", "WIND", "_", "BASE", ")/", "W", "PI", "Lib", ".", "Ġ", "Ġ*/", "Ċ", "/*------------------------------------------------------------------------", "----*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Commands", "/", "Wait", "Until", "Command", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Timer", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠA", "Ġ{@", "link", "ĠWait", "Command", "}", "Ġwill", "Ġwait", "Ġuntil", "Ġa", "Ġcertain", "Ġmatch", "Ġtime", "Ġbefore", "Ġfinish", "ing", ".", "Ċ", "Ġ*", "ĠThis", "Ġwill", "Ġwait", "Ġuntil", "Ġthe", "Ġgame", "Ġclock", "Ġreaches", "Ġsome", "Ġvalue", ",", "Ġthen", "Ġcontinue", "Ġto", "Ġthe", "Ċ", "Ġ*", "Ġnext", "Ġcommand", ".", "Ċ", "Ġ*", "Ġ@", "see", "ĠCommand", "Group", "Ċ", "Ġ*/", "Ċ", "Wait", "Until", "Command", "::", "Wait", "Until", "Command", "(", "double", "Ġtime", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠCommand", "(\"", "Wait", "Until", "Command", "\",", "Ġtime", ")", "Ġ{", "Ċ", "Ġ", "Ġm", "_", "time", "Ġ=", "Ġtime", ";", "Ċ", "}", "Ċ", "Ċ", "Wait", "Until", "Command", "::", "Wait", "Until", "Command", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ",", "Ġdouble", "Ġtime", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠCommand", "(", "name", ",", "Ġtime", ")", "Ġ{", "Ċ", "Ġ", "Ġm", "_", "time", "Ġ=", "Ġtime", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWaitUntil", "Command", "::", "Initialize", "()", "Ġ{}", "Ċ", "Ċ", "void", "ĠWaitUntil", "Command", "::", "Execute", "()", "Ġ{}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠCheck", "Ġif", "Ġwe", "'ve", "Ġreached", "Ġthe", "Ġactual", "Ġfinish", "Ġtime", ".", "Ċ", "Ġ*/", "Ċ", "bool", "ĠWaitUntil", "Command", "::", "Is", "Finished", "()", "Ġ{", "Ġreturn", "ĠTimer", "::", "Get", "Match", "Time", "()", "Ġ>=", "Ġm", "_", "time", ";", "Ġ}", "Ċ", "Ċ", "void", "ĠWaitUntil", "Command", "::", "End", "()", "Ġ{}", "Ċ", "Ċ", "void", "ĠWaitUntil", "Command", "::", "Int", "errupted", "()", "Ġ{}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::350", "code": "//\n// RemotePhotoTool - remote camera control software\n// Copyright (C) 2008-2014 Michael Fink\n//\n/// \\file BulbReleaseControl.hpp Canon control - Release control for Bulb mode\n//\n#pragma once\n\n// includes\n\n/// \\brief bulb shutter release control\n/// this object is created by RemoteReleaseControl::StartBulb; just destroy it to stop bulb mode\nclass BulbReleaseControl\n{\npublic:\n   /// dtor\n   virtual ~BulbReleaseControl() {}\n\n   /// returns elapsed time, in seconds, since bulb start\n   virtual double ElapsedTime() const = 0;\n\n   /// stops bulb method; can be used when the shared_ptr of BulbReleaseControl\n   /// cannot be destroyed, e.g. since it is held somewhere (e.g. Lua)\n   virtual void Stop() = 0;\n};\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠRemote", "Photo", "Tool", "Ġ-", "Ġremote", "Ġcamera", "Ġcontrol", "Ġsoftware", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2014", "ĠM", "ichael", "ĠF", "ink", "Ċ", "//", "Ċ", "///", "Ġ\\", "file", "ĠB", "ul", "b", "Release", "Control", ".", "hpp", "ĠCan", "on", "Ġcontrol", "Ġ-", "ĠRelease", "Ġcontrol", "Ġfor", "ĠB", "ul", "b", "Ġmode", "Ċ", "//", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "//", "Ġincludes", "Ċ", "Ċ", "///", "Ġ\\", "brief", "Ġb", "ul", "b", "Ġsh", "utter", "Ġrelease", "Ġcontrol", "Ċ", "///", "Ġthis", "Ġobject", "Ġis", "Ġcreated", "Ġby", "ĠRemote", "Release", "Control", "::", "Start", "B", "ul", "b", ";", "Ġjust", "Ġdestroy", "Ġit", "Ġto", "Ġstop", "Ġb", "ul", "b", "Ġmode", "Ċ", "class", "ĠB", "ul", "b", "Release", "Control", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠ", "Ġ///", "Ġdt", "or", "Ċ", "ĠĠ", "Ġvirtual", "Ġ~", "B", "ul", "b", "Release", "Control", "()", "Ġ{}", "Ċ", "Ċ", "ĠĠ", "Ġ///", "Ġreturns", "Ġelapsed", "Ġtime", ",", "Ġin", "Ġseconds", ",", "Ġsince", "Ġb", "ul", "b", "Ġstart", "Ċ", "ĠĠ", "Ġvirtual", "Ġdouble", "ĠE", "lapsed", "Time", "()", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠ", "Ġ///", "Ġstops", "Ġb", "ul", "b", "Ġmethod", ";", "Ġcan", "Ġbe", "Ġused", "Ġwhen", "Ġthe", "Ġshared", "_", "ptr", "Ġof", "ĠB", "ul", "b", "Release", "Control", "Ċ", "ĠĠ", "Ġ///", "Ġcannot", "Ġbe", "Ġdestroyed", ",", "Ġe", ".", "g", ".", "Ġsince", "Ġit", "Ġis", "Ġheld", "Ġsomewhere", "Ġ(", "e", ".", "g", ".", "ĠLua", ")", "Ċ", "ĠĠ", "Ġvirtual", "Ġvoid", "ĠStop", "()", "Ġ=", "Ġ0", ";", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::351", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE78_OS_Command_Injection__char_console_w32_spawnvp_82_goodG2B.cpp\r\nLabel Definition File: CWE78_OS_Command_Injection.strings.label.xml\r\nTemplate File: sources-sink-82_goodG2B.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 78 OS Command Injection\r\n * BadSource: console Read input from the console\r\n * GoodSource: Fixed string\r\n * Sinks: w32_spawnvp\r\n *    BadSink : execute command with spawnvp\r\n * Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer\r\n *\r\n * */\r\n#ifndef OMITGOOD\r\n\r\n#include \"std_testcase.h\"\r\n#include \"CWE78_OS_Command_Injection__char_console_w32_spawnvp_82.h\"\r\n\r\n#include <process.h>\r\n\r\nnamespace CWE78_OS_Command_Injection__char_console_w32_spawnvp_82\r\n{\r\n\r\nvoid CWE78_OS_Command_Injection__char_console_w32_spawnvp_82_goodG2B::action(char * data)\r\n{\r\n    {\r\n        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};\r\n        /* spawnvp - searches for the location of the command among\r\n         * the directories specified by the PATH environment variable */\r\n        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */\r\n        _spawnvp(_P_WAIT, COMMAND_INT, args);\r\n    }\r\n}\r\n\r\n}\r\n#endif /* OMITGOOD */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "78", "_", "OS", "_", "Command", "_", "Injection", "__", "char", "_", "console", "_", "w", "32", "_", "spawn", "vp", "_", "82", "_", "good", "G", "2", "B", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "78", "_", "OS", "_", "Command", "_", "Injection", ".", "strings", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "-", "82", "_", "good", "G", "2", "B", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ78", "ĠOS", "ĠCommand", "ĠIn", "jection", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġconsole", "ĠRead", "Ġinput", "Ġfrom", "Ġthe", "Ġconsole", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠFixed", "Ġstring", "č", "Ċ", "Ġ*", "ĠSink", "s", ":", "Ġw", "32", "_", "spawn", "vp", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "Ġexecute", "Ġcommand", "Ġwith", "Ġspawn", "vp", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ82", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġin", "Ġa", "Ġparameter", "Ġto", "Ġan", "Ġvirtual", "Ġmethod", "Ġcalled", "Ġvia", "Ġa", "Ġpointer", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "GOOD", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "CWE", "78", "_", "OS", "_", "Command", "_", "Injection", "__", "char", "_", "console", "_", "w", "32", "_", "spawn", "vp", "_", "82", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "process", ".", "h", ">", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "78", "_", "OS", "_", "Command", "_", "Injection", "__", "char", "_", "console", "_", "w", "32", "_", "spawn", "vp", "_", "82", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "ĠCWE", "78", "_", "OS", "_", "Command", "_", "Injection", "__", "char", "_", "console", "_", "w", "32", "_", "spawn", "vp", "_", "82", "_", "good", "G", "2", "B", "::", "action", "(", "char", "Ġ*", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchar", "Ġ*", "args", "[]", "Ġ=", "Ġ{", "COMMAND", "_", "INT", "_", "PATH", ",", "ĠCOMMAND", "_", "ARG", "1", ",", "ĠCOMMAND", "_", "ARG", "3", ",", "ĠNULL", "};", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "Ġspawn", "vp", "Ġ-", "Ġsearches", "Ġfor", "Ġthe", "Ġlocation", "Ġof", "Ġthe", "Ġcommand", "Ġamong", "č", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ġthe", "Ġdirectories", "Ġspecified", "Ġby", "Ġthe", "ĠPATH", "Ġenvironment", "Ġvariable", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "ĠP", "OT", "ENTIAL", "ĠF", "LA", "W", ":", "ĠExecute", "Ġcommand", "Ġwithout", "Ġvalidating", "Ġinput", "Ġpossibly", "Ġleading", "Ġto", "Ġcommand", "Ġinjection", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "spawn", "vp", "(_", "P", "_", "WAIT", ",", "ĠCOMMAND", "_", "INT", ",", "Ġargs", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "GOOD", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::352", "code": "/*\n * ColorRGB property file\n * \n * This file is part of the \"ForkENGINE\" (Copyright (c) 2014 by Lukas Hermanns)\n * See \"LICENSE.txt\" for license information.\n */\n\n#include \"Engine/Component/Component.h\"\n#include \"IO/FileSystem/File.h\"\n\n\nnamespace Fork\n{\n\nnamespace Engine\n{\n\n\nComponent::Property::Types Component::ColorRGBProperty::Type() const\n{\n    return Types::ColorRGB;\n}\n\nvoid Component::ColorRGBProperty::WriteToFile(IO::File& file) const\n{\n    file.Write<unsigned char>(value.r);\n    file.Write<unsigned char>(value.g);\n    file.Write<unsigned char>(value.b);\n}\n\nvoid Component::ColorRGBProperty::ReadFromFile(IO::File& file)\n{\n    value.r = file.Read<unsigned char>();\n    value.g = file.Read<unsigned char>();\n    value.b = file.Read<unsigned char>();\n}\n\nvoid Component::ColorRGBProperty::WriteToVariant(IO::Variant& variant) const\n{\n    variant = value;\n}\n\nvoid Component::ColorRGBProperty::ReadFromVariant(const IO::Variant& variant)\n{\n    value = variant.GetColorRGB();\n}\n\n\n} // /namespace Engine\n\n} // /namespace Fork\n\n\n\n// ========================", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠColor", "RGB", "Ġproperty", "Ġfile", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġ\"", "Fork", "ENGINE", "\"", "Ġ(", "Copyright", "Ġ(", "c", ")", "Ġ2014", "Ġby", "ĠL", "uk", "as", "ĠH", "erm", "ann", "s", ")", "Ċ", "Ġ*", "ĠSee", "Ġ\"", "LICENSE", ".", "txt", "\"", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Engine", "/", "Component", "/", "Component", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "IO", "/", "FileSystem", "/", "File", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "namespace", "ĠF", "ork", "Ċ", "{", "Ċ", "Ċ", "namespace", "ĠEngine", "Ċ", "{", "Ċ", "Ċ", "Ċ", "Component", "::", "Property", "::", "Types", "ĠComponent", "::", "Color", "RGB", "Property", "::", "Type", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "ĠTypes", "::", "Color", "RGB", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComponent", "::", "Color", "RGB", "Property", "::", "Write", "ToFile", "(", "IO", "::", "File", "&", "Ġfile", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġfile", ".", "Write", "<", "unsigned", "Ġchar", ">(", "value", ".", "r", ");", "Ċ", "ĠĠĠ", "Ġfile", ".", "Write", "<", "unsigned", "Ġchar", ">(", "value", ".", "g", ");", "Ċ", "ĠĠĠ", "Ġfile", ".", "Write", "<", "unsigned", "Ġchar", ">(", "value", ".", "b", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComponent", "::", "Color", "RGB", "Property", "::", "Read", "FromFile", "(", "IO", "::", "File", "&", "Ġfile", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġvalue", ".", "r", "Ġ=", "Ġfile", ".", "Read", "<", "unsigned", "Ġchar", ">();", "Ċ", "ĠĠĠ", "Ġvalue", ".", "g", "Ġ=", "Ġfile", ".", "Read", "<", "unsigned", "Ġchar", ">();", "Ċ", "ĠĠĠ", "Ġvalue", ".", "b", "Ġ=", "Ġfile", ".", "Read", "<", "unsigned", "Ġchar", ">();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComponent", "::", "Color", "RGB", "Property", "::", "WriteTo", "Variant", "(", "IO", "::", "Variant", "&", "Ġvariant", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġvariant", "Ġ=", "Ġvalue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComponent", "::", "Color", "RGB", "Property", "::", "ReadFrom", "Variant", "(", "const", "ĠIO", "::", "Variant", "&", "Ġvariant", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġvalue", "Ġ=", "Ġvariant", ".", "GetColor", "RGB", "();", "Ċ", "}", "Ċ", "Ċ", "Ċ", "}", "Ġ//", "Ġ/", "namespace", "ĠEngine", "Ċ", "Ċ", "}", "Ġ//", "Ġ/", "namespace", "ĠF", "ork", "Ċ", "Ċ", "Ċ", "Ċ", "//", "Ġ=================", "======="], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::353", "code": "#ifndef PWN_ENGINE_GAMEIMP_HPP\n#define PWN_ENGINE_GAMEIMP_HPP\n\n#include <vector>\n#include <map>\n#include <boost/shared_ptr.hpp>\n#include <pwn/math/types.h>\n\n//#include <events/event.h>\n#include <pwn/engine/key.h>\n\nnamespace pwn\n{\nnamespace render\n{\n    class VirtualDisplay;\n}\n\nnamespace engine\n{\n    class System;\n    class Display;\n\n    /** Implementation of the Game class.\n\t\t* This class sort of follows the pimpl idiom, except the \"private\" is private at librariy-scope, and not at class-scope\n\t\t*/\n    class GameImp\n    {\n    public:\n        GameImp();\n        ~GameImp();\n        void\n        install(System* system);  // assumes ownership\n        void\n        updateSystems();\n\n        // only associate, ownership has to be handled somewhere else\n        void\n        display_add(int id, Display* disp);\n        void\n        display(int id, render::VirtualDisplay& world);\n        void\n        display_remove(int id, Display* disp);\n\n        // post events\n        void\n        handleKey(Key::Code key, bool isDown);\n        void\n        handleMouse(const math::vec2 movement);\n\n        typedef boost::shared_ptr<System> SystemPtr;\n\n    private:\n        std::vector<SystemPtr> systems;\n        typedef std::map<int, Display*> DisplayMap;\n        DisplayMap displays;\n    };\n}\n}\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠP", "WN", "_", "ENGINE", "_", "GAME", "IMP", "_", "HP", "P", "Ċ", "#", "define", "ĠP", "WN", "_", "ENGINE", "_", "GAME", "IMP", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "shared", "_", "ptr", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "p", "wn", "/", "math", "/", "types", ".", "h", ">", "Ċ", "Ċ", "//#", "include", "Ġ<", "events", "/", "event", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "p", "wn", "/", "engine", "/", "key", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġp", "wn", "Ċ", "{", "Ċ", "namespace", "Ġrender", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclass", "ĠVirtual", "Display", ";", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġengine", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclass", "ĠSystem", ";", "Ċ", "ĠĠĠ", "Ġclass", "ĠDisplay", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "ĠImplementation", "Ġof", "Ġthe", "ĠGame", "Ġclass", ".", "Ċ", "ĉ", "ĉ", "*", "ĠThis", "Ġclass", "Ġsort", "Ġof", "Ġfollows", "Ġthe", "Ġp", "impl", "Ġid", "iom", ",", "Ġexcept", "Ġthe", "Ġ\"", "private", "\"", "Ġis", "Ġprivate", "Ġat", "Ġlib", "r", "ari", "y", "-", "scope", ",", "Ġand", "Ġnot", "Ġat", "Ġclass", "-", "scope", "Ċ", "ĉ", "ĉ", "*/", "Ċ", "ĠĠĠ", "Ġclass", "ĠGame", "Imp", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠGame", "Imp", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ~", "Game", "Imp", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ċ", "ĠĠĠĠĠĠĠ", "Ġinstall", "(", "System", "*", "Ġsystem", ");", "Ġ", "Ġ//", "Ġassumes", "Ġownership", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ċ", "ĠĠĠĠĠĠĠ", "Ġupdate", "Systems", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "Ġonly", "Ġassociate", ",", "Ġownership", "Ġhas", "Ġto", "Ġbe", "Ġhandled", "Ġsomewhere", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdisplay", "_", "add", "(", "int", "Ġid", ",", "ĠDisplay", "*", "Ġdisp", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdisplay", "(", "int", "Ġid", ",", "Ġrender", "::", "Virtual", "Display", "&", "Ġworld", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdisplay", "_", "remove", "(", "int", "Ġid", ",", "ĠDisplay", "*", "Ġdisp", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "Ġpost", "Ġevents", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ċ", "ĠĠĠĠĠĠĠ", "Ġhandle", "Key", "(", "Key", "::", "Code", "Ġkey", ",", "Ġbool", "Ġis", "Down", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ċ", "ĠĠĠĠĠĠĠ", "Ġhandle", "Mouse", "(", "const", "Ġmath", "::", "vec", "2", "Ġmovement", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtypedef", "Ġboost", "::", "shared", "_", "ptr", "<", "System", ">", "ĠSystem", "Ptr", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "vector", "<", "System", "Ptr", ">", "Ġsystems", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtypedef", "Ġstd", "::", "map", "<", "int", ",", "ĠDisplay", "*>", "ĠDisplay", "Map", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠDisplay", "Map", "Ġdisplays", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::354", "code": "// Version: $Id$\n//\n//\n\n// Commentary:\n//\n//\n\n// Change Log:\n//\n//\n\n// Code:\n\n#include    \"dtkPluginGeneratorPage.h\"\n#include \"ui_dtkPluginGeneratorPage.h\"\n\ndtkPluginGeneratorPage::dtkPluginGeneratorPage(QWidget *parent) : QWizardPage(parent), ui(new Ui::dtkPluginGeneratorPage)\n{\n    ui->setupUi(this);\n    registerField(\"plugin.prefix\", ui->m_prefix);\n    registerField(\"plugin.suffix\", ui->m_suffix);\n    registerField(\"plugin.name\", ui->m_name);\n    connect(ui->m_prefix, SIGNAL(textChanged(QString)), this, SLOT(refresh()));\n    connect(ui->m_suffix, SIGNAL(textChanged(QString)), this, SLOT(refresh()));\n}\n\ndtkPluginGeneratorPage::~dtkPluginGeneratorPage(void)\n{\n    delete ui;\n}\n\nvoid dtkPluginGeneratorPage::initializePage(void)\n{\n    ui->m_prefix->setText(field(\"new.prefix\").toString());\n    ui->m_name->setText(ui->m_prefix->text() + field(\"new.name\").toString());\n}\n\nvoid dtkPluginGeneratorPage::refresh(void)\n{\n    ui->m_name->setText(ui->m_prefix->text() + field(\"new.name\").toString() + ui->m_suffix->text());\n}\n\n//\n// dtkPluginGeneratorPage.cpp ends here\n", "code_tokens": ["Ġ//", "ĠVersion", ":", "Ġ$", "Id", "$", "Ċ", "//", "Ċ", "//", "Ċ", "Ċ", "//", "ĠComment", "ary", ":", "Ċ", "//", "Ċ", "//", "Ċ", "Ċ", "//", "ĠChange", "ĠLog", ":", "Ċ", "//", "Ċ", "//", "Ċ", "Ċ", "//", "ĠCode", ":", "Ċ", "Ċ", "#", "include", "ĠĠĠ", "Ġ\"", "dt", "k", "Plugin", "Generator", "Page", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "dt", "k", "Plugin", "Generator", "Page", ".", "h", "\"", "Ċ", "Ċ", "dt", "k", "Plugin", "Generator", "Page", "::", "dt", "k", "Plugin", "Generator", "Page", "(", "QWidget", "Ġ*", "parent", ")", "Ġ:", "ĠQ", "Wizard", "Page", "(", "parent", "),", "Ġui", "(", "new", "ĠUi", "::", "dt", "k", "Plugin", "Generator", "Page", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "setup", "Ui", "(", "this", ");", "Ċ", "ĠĠĠ", "Ġregister", "Field", "(\"", "plugin", ".", "prefix", "\",", "Ġui", "->", "m", "_", "prefix", ");", "Ċ", "ĠĠĠ", "Ġregister", "Field", "(\"", "plugin", ".", "suffix", "\",", "Ġui", "->", "m", "_", "suffix", ");", "Ċ", "ĠĠĠ", "Ġregister", "Field", "(\"", "plugin", ".", "name", "\",", "Ġui", "->", "m", "_", "name", ");", "Ċ", "ĠĠĠ", "Ġconnect", "(", "ui", "->", "m", "_", "prefix", ",", "ĠSIGNAL", "(", "text", "Changed", "(", "QString", ")),", "Ġthis", ",", "ĠSLOT", "(", "refresh", "()));", "Ċ", "ĠĠĠ", "Ġconnect", "(", "ui", "->", "m", "_", "suffix", ",", "ĠSIGNAL", "(", "text", "Changed", "(", "QString", ")),", "Ġthis", ",", "ĠSLOT", "(", "refresh", "()));", "Ċ", "}", "Ċ", "Ċ", "dt", "k", "Plugin", "Generator", "Page", "::~", "dt", "k", "Plugin", "Generator", "Page", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġui", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġd", "tk", "Plugin", "Generator", "Page", "::", "initialize", "Page", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "m", "_", "prefix", "->", "setText", "(", "field", "(\"", "new", ".", "prefix", "\").", "toString", "());", "Ċ", "ĠĠĠ", "Ġui", "->", "m", "_", "name", "->", "setText", "(", "ui", "->", "m", "_", "prefix", "->", "text", "()", "Ġ+", "Ġfield", "(\"", "new", ".", "name", "\").", "toString", "());", "Ċ", "}", "Ċ", "Ċ", "void", "Ġd", "tk", "Plugin", "Generator", "Page", "::", "refresh", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "m", "_", "name", "->", "setText", "(", "ui", "->", "m", "_", "prefix", "->", "text", "()", "Ġ+", "Ġfield", "(\"", "new", ".", "name", "\").", "toString", "()", "Ġ+", "Ġui", "->", "m", "_", "suffix", "->", "text", "());", "Ċ", "}", "Ċ", "Ċ", "//", "Ċ", "//", "Ġd", "tk", "Plugin", "Generator", "Page", ".", "cpp", "Ġends", "Ġhere", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::355", "code": "// Copyright 2013 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"third_party/blink/public/platform/modules/mediastream/web_media_stream_audio_sink.h\"\n\n#include \"base/check.h\"\n#include \"third_party/blink/public/platform/web_media_stream_source.h\"\n#include \"third_party/blink/public/platform/web_media_stream_track.h\"\n#include \"third_party/blink/renderer/platform/mediastream/media_stream_audio_track.h\"\n\nnamespace blink {\n\nvoid WebMediaStreamAudioSink::AddToAudioTrack(\n    WebMediaStreamAudioSink* sink,\n    const blink::WebMediaStreamTrack& track) {\n  DCHECK(track.Source().GetType() == blink::WebMediaStreamSource::kTypeAudio);\n  MediaStreamAudioTrack* native_track = MediaStreamAudioTrack::From(track);\n  DCHECK(native_track);\n  native_track->AddSink(sink);\n}\n\nvoid WebMediaStreamAudioSink::RemoveFromAudioTrack(\n    WebMediaStreamAudioSink* sink,\n    const blink::WebMediaStreamTrack& track) {\n  MediaStreamAudioTrack* native_track = MediaStreamAudioTrack::From(track);\n  DCHECK(native_track);\n  native_track->RemoveSink(sink);\n}\n\nmedia::AudioParameters WebMediaStreamAudioSink::GetFormatFromAudioTrack(\n    const blink::WebMediaStreamTrack& track) {\n  MediaStreamAudioTrack* native_track = MediaStreamAudioTrack::From(track);\n  DCHECK(native_track);\n  return native_track->GetOutputFormat();\n}\n\n}  // namespace blink\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2013", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "third", "_", "party", "/", "blink", "/", "public", "/", "platform", "/", "modules", "/", "medi", "ast", "ream", "/", "web", "_", "media", "_", "stream", "_", "audio", "_", "sink", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "check", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "third", "_", "party", "/", "blink", "/", "public", "/", "platform", "/", "web", "_", "media", "_", "stream", "_", "source", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "third", "_", "party", "/", "blink", "/", "public", "/", "platform", "/", "web", "_", "media", "_", "stream", "_", "track", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "third", "_", "party", "/", "blink", "/", "renderer", "/", "platform", "/", "medi", "ast", "ream", "/", "media", "_", "stream", "_", "audio", "_", "track", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġblink", "Ġ{", "Ċ", "Ċ", "void", "ĠWeb", "Media", "Stream", "Audio", "Sink", "::", "AddTo", "Audio", "Track", "(", "Ċ", "ĠĠĠ", "ĠWeb", "Media", "Stream", "Audio", "Sink", "*", "Ġsink", ",", "Ċ", "ĠĠĠ", "Ġconst", "Ġblink", "::", "Web", "Media", "Stream", "Track", "&", "Ġtrack", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "(", "track", ".", "Source", "().", "GetType", "()", "Ġ==", "Ġblink", "::", "Web", "Media", "Stream", "Source", "::", "k", "Type", "Audio", ");", "Ċ", "Ġ", "ĠMedia", "Stream", "Audio", "Track", "*", "Ġnative", "_", "track", "Ġ=", "ĠMedia", "Stream", "Audio", "Track", "::", "From", "(", "track", ");", "Ċ", "Ġ", "ĠD", "CHECK", "(", "native", "_", "track", ");", "Ċ", "Ġ", "Ġnative", "_", "track", "->", "Add", "Sink", "(", "sink", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWeb", "Media", "Stream", "Audio", "Sink", "::", "Remove", "From", "Audio", "Track", "(", "Ċ", "ĠĠĠ", "ĠWeb", "Media", "Stream", "Audio", "Sink", "*", "Ġsink", ",", "Ċ", "ĠĠĠ", "Ġconst", "Ġblink", "::", "Web", "Media", "Stream", "Track", "&", "Ġtrack", ")", "Ġ{", "Ċ", "Ġ", "ĠMedia", "Stream", "Audio", "Track", "*", "Ġnative", "_", "track", "Ġ=", "ĠMedia", "Stream", "Audio", "Track", "::", "From", "(", "track", ");", "Ċ", "Ġ", "ĠD", "CHECK", "(", "native", "_", "track", ");", "Ċ", "Ġ", "Ġnative", "_", "track", "->", "Remove", "Sink", "(", "sink", ");", "Ċ", "}", "Ċ", "Ċ", "media", "::", "Audio", "Parameters", "ĠWeb", "Media", "Stream", "Audio", "Sink", "::", "Get", "Format", "From", "Audio", "Track", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġblink", "::", "Web", "Media", "Stream", "Track", "&", "Ġtrack", ")", "Ġ{", "Ċ", "Ġ", "ĠMedia", "Stream", "Audio", "Track", "*", "Ġnative", "_", "track", "Ġ=", "ĠMedia", "Stream", "Audio", "Track", "::", "From", "(", "track", ");", "Ċ", "Ġ", "ĠD", "CHECK", "(", "native", "_", "track", ");", "Ċ", "Ġ", "Ġreturn", "Ġnative", "_", "track", "->", "Get", "OutputFormat", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġblink", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::356", "code": "/* Gobby - GTK-based collaborative text editor\n * Copyright (C) 2008-2014 Armin Burgmeier <armin@arbur.net>\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n#ifndef _GOBBY_APPLICATIONACTIONS_HPP_\n#define _GOBBY_APPLICATIONACTIONS_HPP_\n\n#include <giomm/actionmap.h>\n\nnamespace Gobby\n{\n\nclass ApplicationActions\n{\npublic:\n\tApplicationActions(Gio::ActionMap& map);\n\n\tconst Glib::RefPtr<Gio::SimpleAction> quit;\n\tconst Glib::RefPtr<Gio::SimpleAction> preferences;\n\tconst Glib::RefPtr<Gio::SimpleAction> help;\n\tconst Glib::RefPtr<Gio::SimpleAction> about;\n\n};\n\n}\n\n#endif // _GOBBY_APPLICATIONACTIONS_HPP_\n", "code_tokens": ["Ġ/*", "ĠGo", "bby", "Ġ-", "ĠGTK", "-", "based", "Ġcol", "labor", "ative", "Ġtext", "Ġeditor", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2014", "ĠAr", "min", "ĠB", "ur", "g", "me", "ier", "Ġ<", "ar", "min", "@", "arb", "ur", ".", "net", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠPermission", "Ġto", "Ġuse", ",", "Ġcopy", ",", "Ġmodify", ",", "Ġand", "/", "or", "Ġdistribute", "Ġthis", "Ġsoftware", "Ġfor", "Ġany", "Ċ", "Ġ*", "Ġpurpose", "Ġwith", "Ġor", "Ġwithout", "Ġfee", "Ġis", "Ġhere", "by", "Ġgranted", ",", "Ġprovided", "Ġthat", "Ġthe", "Ġabove", "Ċ", "Ġ*", "Ġcopyright", "Ġnotice", "Ġand", "Ġthis", "Ġpermission", "Ġnotice", "Ġappear", "Ġin", "Ġall", "Ġcopies", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠTHE", "ĠSOFTWARE", "ĠIS", "ĠPRO", "VID", "ED", "Ġ\"", "AS", "ĠIS", "\"", "ĠAND", "ĠTHE", "ĠAUT", "HOR", "ĠDIS", "CLA", "I", "MS", "ĠALL", "ĠWARRANTIES", "Ċ", "Ġ*", "ĠWITH", "ĠREG", "ARD", "ĠTO", "ĠTHIS", "ĠSOFTWARE", "ĠIN", "CL", "UDING", "ĠALL", "ĠIMP", "LIED", "ĠWARRANTIES", "ĠOF", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "ĠAND", "ĠF", "ITNESS", ".", "ĠIN", "ĠNO", "ĠEVENT", "ĠSH", "ALL", "ĠTHE", "ĠAUT", "HOR", "ĠBE", "ĠLI", "ABLE", "ĠFOR", "Ċ", "Ġ*", "ĠANY", "ĠSPE", "CIAL", ",", "ĠDIRECT", ",", "ĠIND", "I", "RECT", ",", "ĠOR", "ĠCON", "SE", "QU", "ENTIAL", "ĠDA", "MAGE", "S", "ĠOR", "ĠANY", "ĠDA", "MAGE", "S", "Ċ", "Ġ*", "ĠWH", "AT", "SO", "E", "VER", "ĠRESULT", "ING", "ĠFROM", "ĠLO", "SS", "ĠOF", "ĠUSE", ",", "ĠDATA", "ĠOR", "ĠPRO", "F", "ITS", ",", "ĠW", "HE", "THER", "ĠIN", "ĠAN", "Ċ", "Ġ*", "ĠACTION", "ĠOF", "ĠCON", "TRACT", ",", "ĠNE", "GL", "IG", "ENCE", "ĠOR", "ĠOTHER", "ĠT", "ORT", "IOUS", "ĠACTION", ",", "ĠAR", "IS", "ING", "ĠOUT", "ĠOF", "Ċ", "Ġ*", "ĠOR", "ĠIN", "ĠCONNECTION", "ĠWITH", "ĠTHE", "ĠUSE", "ĠOR", "ĠPER", "FOR", "MAN", "CE", "ĠOF", "ĠTHIS", "ĠSOFTWARE", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "Ġ_", "GO", "BB", "Y", "_", "APPLICATION", "ACTIONS", "_", "HP", "P", "_", "Ċ", "#", "define", "Ġ_", "GO", "BB", "Y", "_", "APPLICATION", "ACTIONS", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "iom", "m", "/", "action", "map", ".", "h", ">", "Ċ", "Ċ", "namespace", "ĠGo", "bby", "Ċ", "{", "Ċ", "Ċ", "class", "ĠApplication", "Actions", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "Application", "Actions", "(", "G", "io", "::", "Action", "Map", "&", "Ġmap", ");", "Ċ", "Ċ", "ĉ", "const", "ĠG", "lib", "::", "RefPtr", "<", "G", "io", "::", "Simple", "Action", ">", "Ġquit", ";", "Ċ", "ĉ", "const", "ĠG", "lib", "::", "RefPtr", "<", "G", "io", "::", "Simple", "Action", ">", "Ġpreferences", ";", "Ċ", "ĉ", "const", "ĠG", "lib", "::", "RefPtr", "<", "G", "io", "::", "Simple", "Action", ">", "Ġhelp", ";", "Ċ", "ĉ", "const", "ĠG", "lib", "::", "RefPtr", "<", "G", "io", "::", "Simple", "Action", ">", "Ġabout", ";", "Ċ", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "Ġ_", "GO", "BB", "Y", "_", "APPLICATION", "ACTIONS", "_", "HP", "P", "_", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::357", "code": "\n//\n// This is example code from Chapter 25.7 \"Drill\" of\n// \"Programming -- Principles and Practice Using C++\" by Bjarne Stroustrup\n//\n\n#include <iostream>\n\nusing namespace std;\n\n//------------------------------------------------------------------------------\n\nint main()\n{\n    // for int\n    {\n        int v = 1;\n\n        for (int i = 0; i<sizeof(v)*8; ++i) \n        { \n            cout << v << ' '; v <<=1; \n        }\n    }\n\n    // for unsigned int\n    {\n        unsigned int v = 1;\n\n        for (int i = 0; i<sizeof(v)*8; ++i) \n        { \n            cout << v << ' '; v <<=1; \n        }\n    }\n}\n\n//------------------------------------------------------------------------------\n", "code_tokens": ["Ċ", "//", "Ċ", "//", "ĠThis", "Ġis", "Ġexample", "Ġcode", "Ġfrom", "ĠCh", "apter", "Ġ25", ".", "7", "Ġ\"", "Dr", "ill", "\"", "Ġof", "Ċ", "//", "Ġ\"", "Program", "ming", "Ġ--", "ĠPr", "incip", "les", "Ġand", "ĠP", "ract", "ice", "ĠUsing", "ĠC", "++", "\"", "Ġby", "ĠB", "jar", "ne", "ĠSt", "ro", "ustr", "up", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "//------------------------------------------------------------------------------", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġfor", "Ġint", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġv", "Ġ=", "Ġ1", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "sizeof", "(", "v", ")*", "8", ";", "Ġ++", "i", ")", "ĠĊ", "ĠĠĠĠĠĠĠ", "Ġ{", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġv", "Ġ<<", "Ġ'", "Ġ';", "Ġv", "Ġ<<=", "1", ";", "ĠĊ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġfor", "Ġunsigned", "Ġint", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġunsigned", "Ġint", "Ġv", "Ġ=", "Ġ1", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "sizeof", "(", "v", ")*", "8", ";", "Ġ++", "i", ")", "ĠĊ", "ĠĠĠĠĠĠĠ", "Ġ{", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġv", "Ġ<<", "Ġ'", "Ġ';", "Ġv", "Ġ<<=", "1", ";", "ĠĊ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "//------------------------------------------------------------------------------", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::358", "code": "\n//\n// Copyright (c) .NET Foundation and Contributors\n// See LICENSE file in the project root for full license information.\n//\n\n#include <nanoHAL.h>\n#include <lwip/netif.h>\n\nextern \"C\" struct netif * nf_getNetif();\n\nbool Network_Interface_Bind(int index)\n{\n    (void)index;\n\n    return true;\n}\n\nint  Network_Interface_Open(int index)\n{\n    HAL_Configuration_NetworkInterface networkConfiguration;\n\n    // load network interface configuration from storage\n    if(!ConfigurationManager_GetConfigurationBlock((void*)&networkConfiguration, DeviceConfigurationOption_Network, index))\n    {\n        // failed to load configuration\n        // FIXME output error?\n        return SOCK_SOCKET_ERROR;\n    }\n    _ASSERTE(networkConfiguration.StartupAddressMode > 0);\n\n    switch(index)\n    {\n        case 0:\n        {\n            // Open the network interface and set its config\n            // TODO / FIXME\n\n            // Return index to NetIF in its linked list, return 0 (probably right if only interface)\n            // This used by Network stack to hook in to status/address changes for events to users\n\n            // For now get the Netif number form original Chibios binding code\n            struct netif * nptr = nf_getNetif();\n            return nptr->num; \n        }\n        break;\n    }\n\treturn SOCK_SOCKET_ERROR;\n}\n\n\nbool Network_Interface_Close(int index)\n{\n     switch(index)\n    {\n        case 0:\n            return true;\n    }\n\treturn false; \n}", "code_tokens": ["Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ.", "NET", "ĠFoundation", "Ġand", "ĠCon", "trib", "utors", "Ċ", "//", "ĠSee", "ĠLICENSE", "Ġfile", "Ġin", "Ġthe", "Ġproject", "Ġroot", "Ġfor", "Ġfull", "Ġlicense", "Ġinformation", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "nano", "HAL", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "lw", "ip", "/", "netif", ".", "h", ">", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġstruct", "Ġnetif", "Ġ*", "Ġnf", "_", "get", "Net", "if", "();", "Ċ", "Ċ", "bool", "ĠNetwork", "_", "Interface", "_", "Bind", "(", "int", "Ġindex", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ(", "void", ")", "index", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġ", "ĠNetwork", "_", "Interface", "_", "Open", "(", "int", "Ġindex", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠHAL", "_", "Configuration", "_", "NetworkInterface", "Ġnetwork", "Configuration", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġload", "Ġnetwork", "Ġinterface", "Ġconfiguration", "Ġfrom", "Ġstorage", "Ċ", "ĠĠĠ", "Ġif", "(!", "Configuration", "Manager", "_", "Get", "Configuration", "Block", "((", "void", "*)&", "network", "Configuration", ",", "ĠDevice", "Configuration", "Option", "_", "Network", ",", "Ġindex", "))", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "Ġfailed", "Ġto", "Ġload", "Ġconfiguration", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠFIXME", "Ġoutput", "Ġerror", "?", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠSOCK", "_", "SOCKET", "_", "ERROR", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ_", "ASS", "ER", "TE", "(", "network", "Configuration", ".", "Startup", "Address", "Mode", "Ġ>", "Ġ0", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġswitch", "(", "index", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "Ġ0", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠOpen", "Ġthe", "Ġnetwork", "Ġinterface", "Ġand", "Ġset", "Ġits", "Ġconfig", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠTODO", "Ġ/", "ĠFIXME", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠReturn", "Ġindex", "Ġto", "ĠNet", "IF", "Ġin", "Ġits", "Ġlinked", "Ġlist", ",", "Ġreturn", "Ġ0", "Ġ(", "prob", "ably", "Ġright", "Ġif", "Ġonly", "Ġinterface", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠThis", "Ġused", "Ġby", "ĠNetwork", "Ġstack", "Ġto", "Ġhook", "Ġin", "Ġto", "Ġstatus", "/", "address", "Ġchanges", "Ġfor", "Ġevents", "Ġto", "Ġusers", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠFor", "Ġnow", "Ġget", "Ġthe", "ĠNet", "if", "Ġnumber", "Ġform", "Ġoriginal", "ĠCh", "ib", "ios", "Ġbinding", "Ġcode", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstruct", "Ġnetif", "Ġ*", "Ġn", "ptr", "Ġ=", "Ġnf", "_", "get", "Net", "if", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġn", "ptr", "->", "num", ";", "ĠĊ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĉ", "return", "ĠSOCK", "_", "SOCKET", "_", "ERROR", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "bool", "ĠNetwork", "_", "Interface", "_", "Close", "(", "int", "Ġindex", ")", "Ċ", "{", "Ċ", "ĠĠĠĠ", "Ġswitch", "(", "index", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "Ġ0", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĉ", "return", "Ġfalse", ";", "Ġ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::359", "code": "// Torc - Copyright 2011-2013 University of Southern California.  All Rights Reserved.\n// $HeadURL$\n// $Id$\n\n// This program is free software: you can redistribute it and/or modify it under the terms of the \n// GNU General Public License as published by the Free Software Foundation, either version 3 of the \n// License, or (at your option) any later version.\n// \n// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See \n// the GNU General Public License for more details.\n// \n// You should have received a copy of the GNU General Public License along with this program.  If \n// not, see <http://www.gnu.org/licenses/>.\n\n/// \\file\n/// \\brief Source for a PhysicalDiff command line utility.\n/// \\details Opens up two designs with the XDLImporter and then compares them with PhysicalDiff.\n\n#include <fstream>\n#include \"ArchitectureBrowser.hpp\"\n#include \"torc/common/DirectoryTree.hpp\"\n\n/// \\brief Main entry point for the architecture browser tool.\nint main(int argc, char *argv[]) {\n\ttypedef std::string string;\n\ttorc::common::DirectoryTree directoryTree(argv[0]);\n\t\t\n\tif (argc != 2) {\n\t\tstd::cout << \"Usage: \" << argv[0] << \" <device>\" << std::endl;\n\t\treturn 1;\n\t}\n\tstring device_arg = argv[1];\n\t\n\ttorc::common::DeviceDesignator device(device_arg);\n\ttorc::architecture::DDB db(device);\n\ttorc::ArchitectureBrowser ab(db);\n\tab.browse();\n\t\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ//", "ĠTor", "c", "Ġ-", "ĠCopyright", "Ġ2011", "-", "2013", "ĠUn", "ivers", "ity", "Ġof", "ĠS", "ou", "ther", "n", "ĠCal", "if", "orn", "ia", ".", "Ġ", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "//", "Ġ$", "Head", "URL", "$", "Ċ", "//", "Ġ$", "Id", "$", "Ċ", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "Ġ", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "Ġ", "Ċ", "//", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġ", "Ċ", "//", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġ", "Ċ", "//", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġ", "Ċ", "//", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "///", "Ġ\\", "file", "Ċ", "///", "Ġ\\", "brief", "ĠSource", "Ġfor", "Ġa", "ĠPhysical", "Diff", "Ġcommand", "Ġline", "Ġutility", ".", "Ċ", "///", "Ġ\\", "details", "ĠOp", "ens", "Ġup", "Ġtwo", "Ġdesign", "s", "Ġwith", "Ġthe", "ĠX", "DL", "Importer", "Ġand", "Ġthen", "Ġcompares", "Ġthem", "Ġwith", "ĠPhysical", "Diff", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ\"", "Architecture", "Browser", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "tor", "c", "/", "common", "/", "Directory", "Tree", ".", "hpp", "\"", "Ċ", "Ċ", "///", "Ġ\\", "brief", "ĠMain", "Ġentry", "Ġpoint", "Ġfor", "Ġthe", "Ġarchitecture", "Ġbrowser", "Ġtool", ".", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ġ{", "Ċ", "ĉ", "typedef", "Ġstd", "::", "string", "Ġstring", ";", "Ċ", "ĉ", "tor", "c", "::", "common", "::", "Directory", "Tree", "Ġdirectory", "Tree", "(", "argv", "[", "0", "]);", "Ċ", "ĉĉĊ", "ĉ", "if", "Ġ(", "argc", "Ġ!=", "Ġ2", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Usage", ":", "Ġ\"", "Ġ<<", "Ġargv", "[", "0", "]", "Ġ<<", "Ġ\"", "Ġ<", "device", ">\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "string", "Ġdevice", "_", "arg", "Ġ=", "Ġargv", "[", "1", "];", "Ċ", "ĉĊ", "ĉ", "tor", "c", "::", "common", "::", "Device", "Designator", "Ġdevice", "(", "device", "_", "arg", ");", "Ċ", "ĉ", "tor", "c", "::", "architecture", "::", "DDB", "Ġdb", "(", "device", ");", "Ċ", "ĉ", "tor", "c", "::", "Architecture", "Browser", "Ġab", "(", "db", ");", "Ċ", "ĉ", "ab", ".", "browse", "();", "Ċ", "ĉĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::360", "code": "/**************************************************************************\nThis file is part of JahshakaVR, VR Authoring Toolkit\nhttp://www.jahshaka.com\nCopyright (c) 2016  GPLv3 Jahshaka LLC <coders@jahshaka.com>\n\nThis is free software: you may copy, redistribute\nand/or modify it under the terms of the GPLv3 License\n\nFor more information see the LICENSE file\n*************************************************************************/\n\n#include \"viewermaterial.h\"\n#include \"irisgl/src/graphics/texture2d.h\"\n#include \"irisgl/src/graphics/material.h\"\n#include \"irisgl/src/graphics/graphicsdevice.h\"\n\nViewerMaterial::ViewerMaterial()\n{\n    createProgramFromShaderSource(\":assets/shaders/viewer.vert\",\n                                  \":assets/shaders/viewer.frag\");\n\n    this->setRenderLayer((int)iris::RenderLayer::Opaque);\n\trenderStates.rasterState = iris::RasterizerState::createCullNone();\n}\n\nvoid ViewerMaterial::setTexture(iris::Texture2DPtr tex)\n{\n    texture = tex;\n    if(!!tex)\n        this->addTexture(\"tex\",tex);\n    else\n        this->removeTexture(\"tex\");\n}\n\niris::Texture2DPtr ViewerMaterial::getTexture()\n{\n    return texture;\n}\n\nvoid ViewerMaterial::begin(iris::GraphicsDevicePtr device, iris::ScenePtr scene)\n{\n    Material::begin(device, scene);\n}\n\nvoid ViewerMaterial::end(iris::GraphicsDevicePtr device, iris::ScenePtr scene)\n{\n    Material::end(device, scene);\n}\n\nViewerMaterialPtr ViewerMaterial::create()\n{\n    return ViewerMaterialPtr(new ViewerMaterial());\n}", "code_tokens": ["Ġ/", "************************************************************************", "**", "Ċ", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠJ", "ah", "sh", "aka", "VR", ",", "ĠVR", "ĠAuth", "oring", "ĠTool", "kit", "Ċ", "http", "://", "www", ".", "j", "ah", "sh", "aka", ".", "com", "Ċ", "Copyright", "Ġ(", "c", ")", "Ġ2016", "Ġ", "ĠG", "PL", "v", "3", "ĠJ", "ah", "sh", "aka", "ĠLLC", "Ġ<", "coders", "@", "j", "ah", "sh", "aka", ".", "com", ">", "Ċ", "Ċ", "This", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġmay", "Ġcopy", ",", "Ġred", "istribute", "Ċ", "and", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠG", "PL", "v", "3", "ĠLicense", "Ċ", "Ċ", "For", "Ġmore", "Ġinformation", "Ġsee", "Ġthe", "ĠLICENSE", "Ġfile", "Ċ", "************************************************************************", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "viewer", "material", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "iris", "gl", "/", "src", "/", "graphics", "/", "texture", "2", "d", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "iris", "gl", "/", "src", "/", "graphics", "/", "material", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "iris", "gl", "/", "src", "/", "graphics", "/", "graphics", "device", ".", "h", "\"", "Ċ", "Ċ", "Viewer", "Material", "::", "Viewer", "Material", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġcreate", "Program", "From", "Shader", "Source", "(\":", "assets", "/", "shaders", "/", "viewer", ".", "vert", "\",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\":", "assets", "/", "shaders", "/", "viewer", ".", "frag", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġthis", "->", "set", "Render", "Layer", "((", "int", ")", "iris", "::", "Render", "Layer", "::", "Opaque", ");", "Ċ", "ĉ", "render", "States", ".", "raster", "State", "Ġ=", "Ġir", "is", "::", "Raster", "izer", "State", "::", "create", "Cull", "None", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "er", "Material", "::", "setTexture", "(", "iris", "::", "Texture", "2", "D", "Ptr", "Ġtex", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtexture", "Ġ=", "Ġtex", ";", "Ċ", "ĠĠĠ", "Ġif", "(!!", "tex", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthis", "->", "add", "Texture", "(\"", "tex", "\",", "tex", ");", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthis", "->", "remove", "Texture", "(\"", "tex", "\");", "Ċ", "}", "Ċ", "Ċ", "iris", "::", "Texture", "2", "D", "Ptr", "ĠView", "er", "Material", "::", "getTexture", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtexture", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "er", "Material", "::", "begin", "(", "iris", "::", "Graphics", "Device", "Ptr", "Ġdevice", ",", "Ġir", "is", "::", "Scene", "Ptr", "Ġscene", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠMaterial", "::", "begin", "(", "device", ",", "Ġscene", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "er", "Material", "::", "end", "(", "iris", "::", "Graphics", "Device", "Ptr", "Ġdevice", ",", "Ġir", "is", "::", "Scene", "Ptr", "Ġscene", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠMaterial", "::", "end", "(", "device", ",", "Ġscene", ");", "Ċ", "}", "Ċ", "Ċ", "Viewer", "Material", "Ptr", "ĠView", "er", "Material", "::", "create", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "ĠView", "er", "Material", "Ptr", "(", "new", "ĠView", "er", "Material", "());", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::361", "code": "#include <iostream>\n#include <boost/algorithm/string.hpp>\n#include <bitcoin/bitcoin.hpp>\n#include <wallet/wallet.hpp>\n\nusing namespace bc;\nusing namespace libwallet;\n\nint display_help()\n{\n    puts(\"Usage:\");\n    puts(\"\");\n    puts(\"  mnemonic <<< \\\"[WORD1] [WORD2] ...\\\"\");\n    puts(\"  mnemonic <<< SEED\");\n    puts(\"\");\n    puts(\"Please email suggestions and questions to <genjix@riseup.net>.\");\n    return -1;\n}\n\nint main(int argc, char** argv)\n{\n    std::istreambuf_iterator<char> it(std::cin);\n    std::istreambuf_iterator<char> end;\n    std::string data(it, end);\n    boost::algorithm::trim(data);\n    string_list words;\n    boost::split(words, data, boost::is_any_of(\"\\n\\t \"));\n    if (words.empty())\n        return display_help();\n    else if (words.size() == 1 &&\n        words[0].size() == libwallet::deterministic_wallet::seed_size)\n    {\n        const std::string seed = words[0];\n        string_list words = encode_mnemonic(seed);\n        bool first = true;\n        for (const std::string& word: words)\n        {\n            if (!first)\n                std::cout << \" \";\n            std::cout << word;\n            first = false;\n        }\n        std::cout << std::endl;\n        return 0;\n    }\n    else\n    {\n        std::cout << decode_mnemonic(words) << std::endl;\n        return 0;\n    }\n    // Should never happen!\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "algorithm", "/", "string", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "bitcoin", "/", "bitcoin", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "wallet", "/", "wallet", ".", "hpp", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġbc", ";", "Ċ", "using", "Ġnamespace", "Ġlib", "wallet", ";", "Ċ", "Ċ", "int", "Ġdisplay", "_", "help", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġputs", "(\"", "Usage", ":\");", "Ċ", "ĠĠĠ", "Ġputs", "(\"\");", "Ċ", "ĠĠĠ", "Ġputs", "(\"", "Ġ", "Ġmnemonic", "Ġ<<<", "Ġ\\\"", "[", "WORD", "1", "]", "Ġ[", "WORD", "2", "]", "Ġ...", "\\\"\");", "Ċ", "ĠĠĠ", "Ġputs", "(\"", "Ġ", "Ġmnemonic", "Ġ<<<", "ĠSE", "ED", "\");", "Ċ", "ĠĠĠ", "Ġputs", "(\"\");", "Ċ", "ĠĠĠ", "Ġputs", "(\"", "Please", "Ġemail", "Ġsuggestions", "Ġand", "Ġquestions", "Ġto", "Ġ<", "gen", "j", "ix", "@", "rise", "up", ".", "net", ">", ".\");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "istream", "buf", "_", "iterator", "<", "char", ">", "Ġit", "(", "std", "::", "cin", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "istream", "buf", "_", "iterator", "<", "char", ">", "Ġend", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġdata", "(", "it", ",", "Ġend", ");", "Ċ", "ĠĠĠ", "Ġboost", "::", "algorithm", "::", "trim", "(", "data", ");", "Ċ", "ĠĠĠ", "Ġstring", "_", "list", "Ġwords", ";", "Ċ", "ĠĠĠ", "Ġboost", "::", "split", "(", "words", ",", "Ġdata", ",", "Ġboost", "::", "is", "_", "any", "_", "of", "(\"\\", "n", "\\", "t", "Ġ\"));", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "words", ".", "empty", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġdisplay", "_", "help", "();", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(", "words", ".", "size", "()", "Ġ==", "Ġ1", "Ġ&&", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwords", "[", "0", "].", "size", "()", "Ġ==", "Ġlib", "wallet", "::", "determin", "istic", "_", "wallet", "::", "seed", "_", "size", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġseed", "Ġ=", "Ġwords", "[", "0", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstring", "_", "list", "Ġwords", "Ġ=", "Ġencode", "_", "mn", "emonic", "(", "seed", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġfirst", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "const", "Ġstd", "::", "string", "&", "Ġword", ":", "Ġwords", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "first", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġword", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfirst", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġdecode", "_", "mn", "emonic", "(", "words", ")", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ//", "ĠShould", "Ġnever", "Ġhappen", "!", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::362", "code": "#ifndef BRACKETEDKEYWORDINCONTEXTDELEGATE_HH\n#define BRACKETEDKEYWORDINCONTEXTDELEGATE_HH\n\n#include <vector>\n\n#include <AlpinoCorpus/LexItem.hh>\n\n#include \"BracketedDelegate.hh\"\n\nclass BracketedKeywordInContextDelegate : public BracketedDelegate\n{\n    Q_OBJECT\n\npublic:\n    BracketedKeywordInContextDelegate(CorpusReaderPtr);\n    virtual ~BracketedKeywordInContextDelegate() {}\n    void paint(QPainter *painter, QStyleOptionViewItem const &option, QModelIndex const &index) const;\n    QSize sizeHint(QStyleOptionViewItem const &option, QModelIndex const &index) const;\n\nprivate:\n    void loadColorSettings();\n    QString extractFragment(std::vector<alpinocorpus::LexItem> const &items, size_t first, size_t last) const;\n    mutable QColor d_highlightColor;\n};\n\n#endif\n\n\n", "code_tokens": ["Ġ#", "ifndef", "ĠBR", "ACKET", "ED", "KEYWORD", "IN", "CONTEXT", "DE", "LE", "GATE", "_", "HH", "Ċ", "#", "define", "ĠBR", "ACKET", "ED", "KEYWORD", "IN", "CONTEXT", "DE", "LE", "GATE", "_", "HH", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Al", "pin", "o", "Cor", "pus", "/", "Lex", "Item", ".", "hh", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Bracket", "ed", "Delegate", ".", "hh", "\"", "Ċ", "Ċ", "class", "ĠB", "racket", "ed", "Keyword", "InContext", "Delegate", "Ġ:", "Ġpublic", "ĠB", "racket", "ed", "Delegate", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠB", "racket", "ed", "Keyword", "InContext", "Delegate", "(", "Cor", "pus", "Reader", "Ptr", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "Bracket", "ed", "Keyword", "InContext", "Delegate", "()", "Ġ{}", "Ċ", "ĠĠĠ", "Ġvoid", "Ġpaint", "(", "QPainter", "Ġ*", "painter", ",", "ĠQStyleOption", "ViewItem", "Ġconst", "Ġ&", "option", ",", "ĠQModelIndex", "Ġconst", "Ġ&", "index", ")", "Ġconst", ";", "Ċ", "ĠĠĠ", "ĠQSize", "Ġsize", "Hint", "(", "QStyleOption", "ViewItem", "Ġconst", "Ġ&", "option", ",", "ĠQModelIndex", "Ġconst", "Ġ&", "index", ")", "Ġconst", ";", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġload", "Color", "Settings", "();", "Ċ", "ĠĠĠ", "ĠQString", "Ġextract", "Fragment", "(", "std", "::", "vector", "<", "al", "pin", "oc", "or", "pus", "::", "Lex", "Item", ">", "Ġconst", "Ġ&", "items", ",", "Ġsize", "_", "t", "Ġfirst", ",", "Ġsize", "_", "t", "Ġlast", ")", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġmutable", "ĠQColor", "Ġd", "_", "highlight", "Color", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::363", "code": "/**************************************************************************\n**\n** This file is part of Qt Creator\n**\n** Copyright (c) 2010 Nokia Corporation and/or its subsidiary(-ies).\n**\n** Contact: Nokia Corporation (qt-info@nokia.com)\n**\n** Commercial Usage\n**\n** Licensees holding valid Qt Commercial licenses may use this file in\n** accordance with the Qt Commercial License Agreement provided with the\n** Software or, alternatively, in accordance with the terms contained in\n** a written agreement between you and Nokia.\n**\n** GNU Lesser General Public License Usage\n**\n** Alternatively, this file may be used under the terms of the GNU Lesser\n** General Public License version 2.1 as published by the Free Software\n** Foundation and appearing in the file LICENSE.LGPL included in the\n** packaging of this file.  Please review the following information to\n** ensure the GNU Lesser General Public License version 2.1 requirements\n** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n**\n** If you are unsure which license is appropriate for your use, please\n** contact the sales department at http://qt.nokia.com/contact.\n**\n**************************************************************************/\n\n#include \"qrceditor.h\"\n#include \"mainwindow.h\"\n\nint main(int argc, char *argv[])\n{\n    QApplication app(argc, argv);\n    MainWindow mw;\n    mw.show();\n    return app.exec();\n}\n", "code_tokens": ["Ġ/", "************************************************************************", "**", "Ċ", "**", "Ċ", "**", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠQt", "ĠCre", "ator", "Ċ", "**", "Ċ", "**", "ĠCopyright", "Ġ(", "c", ")", "Ġ2010", "ĠN", "ok", "ia", "ĠCor", "poration", "Ġand", "/", "or", "Ġits", "Ġsubs", "idi", "ary", "(-", "ies", ").", "Ċ", "**", "Ċ", "**", "ĠContact", ":", "ĠN", "ok", "ia", "ĠCor", "poration", "Ġ(", "qt", "-", "info", "@", "n", "ok", "ia", ".", "com", ")", "Ċ", "**", "Ċ", "**", "ĠCom", "mer", "c", "ial", "ĠUsage", "Ċ", "**", "Ċ", "**", "ĠLicense", "es", "Ġholding", "Ġvalid", "ĠQt", "ĠCom", "mer", "c", "ial", "Ġlicenses", "Ġmay", "Ġuse", "Ġthis", "Ġfile", "Ġin", "Ċ", "**", "Ġac", "cord", "ance", "Ġwith", "Ġthe", "ĠQt", "ĠCom", "mer", "c", "ial", "ĠLicense", "ĠA", "gre", "ement", "Ġprovided", "Ġwith", "Ġthe", "Ċ", "**", "ĠSoftware", "Ġor", ",", "Ġal", "ternatively", ",", "Ġin", "Ġac", "cord", "ance", "Ġwith", "Ġthe", "Ġterms", "Ġcontained", "Ġin", "Ċ", "**", "Ġa", "Ġwritten", "Ġag", "reement", "Ġbetween", "Ġyou", "Ġand", "ĠN", "ok", "ia", ".", "Ċ", "**", "Ċ", "**", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "ĠUsage", "Ċ", "**", "Ċ", "**", "ĠAl", "ternatively", ",", "Ġthis", "Ġfile", "Ġmay", "Ġbe", "Ġused", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "Ċ", "**", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ġ2", ".", "1", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "**", "ĠFoundation", "Ġand", "Ġappear", "ing", "Ġin", "Ġthe", "Ġfile", "ĠLICENSE", ".", "LG", "PL", "Ġincluded", "Ġin", "Ġthe", "Ċ", "**", "Ġpack", "aging", "Ġof", "Ġthis", "Ġfile", ".", "Ġ", "ĠPlease", "Ġreview", "Ġthe", "Ġfollowing", "Ġinformation", "Ġto", "Ċ", "**", "Ġensure", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ġ2", ".", "1", "Ġrequirements", "Ċ", "**", "Ġwill", "Ġbe", "Ġmet", ":", "Ġhttp", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/", "old", "-", "licenses", "/", "lg", "pl", "-", "2", ".", "1", ".", "html", ".", "Ċ", "**", "Ċ", "**", "ĠIf", "Ġyou", "Ġare", "Ġun", "sure", "Ġwhich", "Ġlicense", "Ġis", "Ġappropriate", "Ġfor", "Ġyour", "Ġuse", ",", "Ġplease", "Ċ", "**", "Ġcontact", "Ġthe", "Ġsales", "Ġde", "partment", "Ġat", "Ġhttp", "://", "qt", ".", "n", "ok", "ia", ".", "com", "/", "contact", ".", "Ċ", "**", "Ċ", "************************************************************************", "**/", "Ċ", "Ċ", "#", "include", "Ġ\"", "qr", "ced", "itor", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "main", "window", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQApplication", "Ġapp", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "ĠMainWindow", "Ġmw", ";", "Ċ", "ĠĠĠ", "Ġmw", ".", "show", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġapp", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::364", "code": "/*\n  Copyright (C) 2005 Steven L. Scott\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n*/\n#include <fstream>\n#include <string>\n#include <vector>\n\nnamespace BOOM {\n\n  std::vector<std::string> read_file(std::istream &in) {\n    std::vector<std::string> ans;\n    while (in) {\n      std::string line;\n      getline(in, line);\n      if (!in) break;\n      ans.push_back(line);\n    }\n    return ans;\n  }\n\n  std::vector<std::string> read_file(const std::string &fname) {\n    std::ifstream in(fname.c_str());\n    return read_file(in);\n  }\n}  // namespace BOOM\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "ĠSte", "ven", "ĠL", ".", "ĠS", "co", "tt", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", "Ċ", "*/", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "namespace", "ĠBO", "OM", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġread", "_", "file", "(", "std", "::", "istream", "Ġ&", "in", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġans", ";", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "in", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "string", "Ġline", ";", "Ċ", "ĠĠĠĠĠ", "Ġget", "line", "(", "in", ",", "Ġline", ");", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(!", "in", ")", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠ", "Ġans", ".", "push", "_", "back", "(", "line", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġans", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġread", "_", "file", "(", "const", "Ġstd", "::", "string", "Ġ&", "fname", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "ifstream", "Ġin", "(", "fname", ".", "c", "_", "str", "());", "Ċ", "ĠĠĠ", "Ġreturn", "Ġread", "_", "file", "(", "in", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "ĠBO", "OM", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::365", "code": "#include \"exportable_link.hpp\"\r\n\r\n#include \"../../conversion.hpp\"\n\r\nnamespace WikiMarkup { namespace Components\n{\n//#####################################################################################################################\r\n    std::string ExportableLink::toJson() const\r\n    {\r\n        return WikiMarkup::toJson(*this, \"Link\");\r\n    }\n//---------------------------------------------------------------------------------------------------------------------\r\n    void ExportableLink::fromJson(std::string const& str)\r\n    {\r\n        WikiMarkup::fromJson(*this, str);\r\n    }\n//---------------------------------------------------------------------------------------------------------------------\r\n    void ExportableLink::fromJson(JSON::ObjectReader const& reader)\r\n    {\r\n        reader.get(\"data\", *this);\r\n    }\n//---------------------------------------------------------------------------------------------------------------------\r\n    ExportableLink* ExportableLink::clone() const\r\n    {\r\n        return new ExportableLink(*this);\r\n    }\n//#####################################################################################################################\n}\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "export", "able", "_", "link", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "../../", "conversion", ".", "hpp", "\"", "Ċ", "č", "Ċ", "namespace", "ĠW", "iki", "Markup", "Ġ{", "Ġnamespace", "ĠComponents", "Ċ", "{", "Ċ", "//", "################################################################", "################################", "################", "#####", "č", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "ĠExport", "able", "Link", "::", "toJson", "()", "Ġconst", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠW", "iki", "Markup", "::", "toJson", "(*", "this", ",", "Ġ\"", "Link", "\");", "č", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "//----------------------------------------------------------------", "------------------------------------------------", "-----", "č", "Ċ", "ĠĠĠ", "Ġvoid", "ĠExport", "able", "Link", "::", "fromJson", "(", "std", "::", "string", "Ġconst", "&", "Ġstr", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠW", "iki", "Markup", "::", "fromJson", "(*", "this", ",", "Ġstr", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "//----------------------------------------------------------------", "------------------------------------------------", "-----", "č", "Ċ", "ĠĠĠ", "Ġvoid", "ĠExport", "able", "Link", "::", "fromJson", "(", "JSON", "::", "Object", "Reader", "Ġconst", "&", "Ġreader", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreader", ".", "get", "(\"", "data", "\",", "Ġ*", "this", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "//----------------------------------------------------------------", "------------------------------------------------", "-----", "č", "Ċ", "ĠĠĠ", "ĠExport", "able", "Link", "*", "ĠExport", "able", "Link", "::", "clone", "()", "Ġconst", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠExport", "able", "Link", "(*", "this", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "//", "################################################################", "################################", "################", "#####", "Ċ", "}", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::366", "code": "//\n//  ControlPrinter.cpp\n//  Tonic\n//\n//  Created by Morgan Packard on 4/28/13.\n//  Copyright (c) 2013 Nick Donaldson. All rights reserved.\n//\n\n#include \"ControlPrinter.h\"\n\nnamespace Tonic { namespace Tonic_{\n  \n  ControlPrinter_::ControlPrinter_()\n    :message(\"%f\\n\"), hasPrinted(false){\n    \n  }\n  \n  void ControlPrinter_::setMessage(string messageArg){\n    message = messageArg + \"\\n\";\n  }\n  \n} // Namespace Tonic_\n  \n  \n  \n} // Namespace Tonic\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠControl", "Printer", ".", "cpp", "Ċ", "//", "Ġ", "ĠT", "on", "ic", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠM", "organ", "ĠPack", "ard", "Ġon", "Ġ4", "/", "28", "/", "13", ".", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2013", "ĠN", "ick", "ĠDon", "ald", "son", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "Control", "Printer", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠT", "on", "ic", "Ġ{", "Ġnamespace", "ĠT", "on", "ic", "_{", "Ċ", "ĠĠĊ", "Ġ", "ĠControl", "Printer", "_", "::", "Control", "Printer", "_()", "Ċ", "ĠĠĠ", "Ġ:", "message", "(\"%", "f", "\\", "n", "\"),", "Ġhas", "Pr", "inted", "(", "false", "){", "Ċ", "ĠĠĠĠĊ", "Ġ", "Ġ}", "Ċ", "ĠĠĊ", "Ġ", "Ġvoid", "ĠControl", "Printer", "_", "::", "setMessage", "(", "string", "Ġmessage", "Arg", "){", "Ċ", "ĠĠĠ", "Ġmessage", "Ġ=", "Ġmessage", "Arg", "Ġ+", "Ġ\"\\", "n", "\";", "Ċ", "Ġ", "Ġ}", "Ċ", "ĠĠ", "Ċ", "}", "Ġ//", "ĠNamespace", "ĠT", "on", "ic", "_", "Ċ", "ĠĠĊ", "ĠĠĊ", "ĠĠ", "Ċ", "}", "Ġ//", "ĠNamespace", "ĠT", "on", "ic", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::367", "code": "/*\n * MeetMeTalkingRequestEvent.cpp\n *\n *  Created on: Mar 14, 2012\n *      Author: augcampos\n */\n\n#include \"asteriskcpp/manager/events/MeetMeTalkingRequestEvent.h\"\n\nnamespace asteriskcpp {\n\n    MeetMeTalkingRequestEvent::MeetMeTalkingRequestEvent(const std::string & values) :\n    AbstractMeetMeEvent(values) {\n    }\n\n    MeetMeTalkingRequestEvent::~MeetMeTalkingRequestEvent() {\n    }\n\n    bool MeetMeTalkingRequestEvent::getStatus() const {\n        return (getProperty<bool>(\"Status\"));\n    }\n} /* namespace asteriskcpp */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠMe", "et", "Me", "Talk", "ing", "Request", "Event", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠMar", "Ġ14", ",", "Ġ2012", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "Ġaug", "cam", "pos", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "aster", "isk", "cpp", "/", "manager", "/", "events", "/", "Me", "et", "Me", "Talk", "ing", "Request", "Event", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġa", "ster", "isk", "cpp", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "ĠMe", "et", "Me", "Talk", "ing", "Request", "Event", "::", "Me", "et", "Me", "Talk", "ing", "Request", "Event", "(", "const", "Ġstd", "::", "string", "Ġ&", "Ġvalues", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠAbstract", "Me", "et", "Me", "Event", "(", "values", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠMe", "et", "Me", "Talk", "ing", "Request", "Event", "::~", "Me", "et", "Me", "Talk", "ing", "Request", "Event", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġbool", "ĠMe", "et", "Me", "Talk", "ing", "Request", "Event", "::", "getStatus", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ(", "getProperty", "<", "bool", ">(\"", "Status", "\"));", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġa", "ster", "isk", "cpp", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::368", "code": "//Subset-Sum -> (G = O valor total sendo testado, N = numero de valores disponiveis no array 'values'\nint values[n];\nbool subsetSum(int n, int g) {\n    for(j = 0; j <= g; j++) sub[j] = 0;\n    sub[0] = 1;\n    for(j = 0; j < n; j++) if(values[j] != g) {\n        for(int k = g; k >= values[j]; k--) {\n            sub[k] |= sub[k - values[j]];\n        }\n    }\n    return sub[g];\n}\n", "code_tokens": ["Ġ//", "Subset", "-", "Sum", "Ġ->", "Ġ(", "G", "Ġ=", "ĠO", "Ġvalor", "Ġtotal", "Ġsend", "o", "Ġtest", "ado", ",", "ĠN", "Ġ=", "Ġnum", "ero", "Ġde", "Ġval", "ores", "Ġdis", "pon", "ive", "is", "Ġno", "Ġarray", "Ġ'", "values", "'", "Ċ", "int", "Ġvalues", "[", "n", "];", "Ċ", "bool", "Ġsubset", "Sum", "(", "int", "Ġn", ",", "Ġint", "Ġg", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġfor", "(", "j", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<=", "Ġg", ";", "Ġj", "++)", "Ġsub", "[", "j", "]", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġsub", "[", "0", "]", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "j", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġj", "++)", "Ġif", "(", "values", "[", "j", "]", "Ġ!=", "Ġg", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġk", "Ġ=", "Ġg", ";", "Ġk", "Ġ>=", "Ġvalues", "[", "j", "];", "Ġk", "--)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsub", "[", "k", "]", "Ġ|=", "Ġsub", "[", "k", "Ġ-", "Ġvalues", "[", "j", "]];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġsub", "[", "g", "];", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::369", "code": "#include <iostream>\n\n#include \"GameObject.h\"\n\nusing namespace Physics;\n\nvoid GameObject::init(string name, string particle, string entity)\n{\n\tm_name = name;\n\n\tif (mp_PhysicsManager->hasParticle(particle))\n\t\tm_particleName = particle;\n\n\tif (mp_GraphicsManager->hasEntity(entity))\n\t\tm_entityName = entity;\n\n\tm_position = mp_PhysicsManager->getParticlePosition(m_particleName);\n}\n\nvoid GameObject::update()\n{\n\t// get data from physics engine\n\tm_position = mp_PhysicsManager->getParticlePosition(m_particleName);\n\t//std::cout << \"GAMEOBJECT:: update(): Attempting to update particle \" << m_particleName << \" with physics postion: \" << newPos.ToString() << std::endl;\n\n\t// give data to graphics engine\n\tmp_GraphicsManager->updateEntityPosition(m_entityName, m_position.GLM());\n\n\t//std::cout << \"GAMEOBJECT:: update(): \" << m_particleName << \"'s position after update: \" << newPos.ToString() << std::endl;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "GameObject", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠPhysics", ";", "Ċ", "Ċ", "void", "ĠGameObject", "::", "init", "(", "string", "Ġname", ",", "Ġstring", "Ġparticle", ",", "Ġstring", "Ġentity", ")", "Ċ", "{", "Ċ", "ĉ", "m", "_", "name", "Ġ=", "Ġname", ";", "Ċ", "Ċ", "ĉ", "if", "Ġ(", "mp", "_", "Physics", "Manager", "->", "has", "Particle", "(", "particle", "))", "Ċ", "ĉ", "ĉ", "m", "_", "particle", "Name", "Ġ=", "Ġparticle", ";", "Ċ", "Ċ", "ĉ", "if", "Ġ(", "mp", "_", "Graphics", "Manager", "->", "has", "Entity", "(", "entity", "))", "Ċ", "ĉ", "ĉ", "m", "_", "entityName", "Ġ=", "Ġentity", ";", "Ċ", "Ċ", "ĉ", "m", "_", "position", "Ġ=", "Ġmp", "_", "Physics", "Manager", "->", "get", "Particle", "Position", "(", "m", "_", "particle", "Name", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGameObject", "::", "update", "()", "Ċ", "{", "Ċ", "ĉ", "//", "Ġget", "Ġdata", "Ġfrom", "Ġphysics", "Ġengine", "Ċ", "ĉ", "m", "_", "position", "Ġ=", "Ġmp", "_", "Physics", "Manager", "->", "get", "Particle", "Position", "(", "m", "_", "particle", "Name", ");", "Ċ", "ĉ", "//", "std", "::", "cout", "Ġ<<", "Ġ\"", "GAME", "OBJECT", "::", "Ġupdate", "():", "ĠAttempt", "ing", "Ġto", "Ġupdate", "Ġparticle", "Ġ\"", "Ġ<<", "Ġm", "_", "particle", "Name", "Ġ<<", "Ġ\"", "Ġwith", "Ġphysics", "Ġpost", "ion", ":", "Ġ\"", "Ġ<<", "ĠnewPos", ".", "ToString", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĉ", "//", "Ġgive", "Ġdata", "Ġto", "Ġgraphics", "Ġengine", "Ċ", "ĉ", "mp", "_", "Graphics", "Manager", "->", "update", "Entity", "Position", "(", "m", "_", "entityName", ",", "Ġm", "_", "position", ".", "GL", "M", "());", "Ċ", "Ċ", "ĉ", "//", "std", "::", "cout", "Ġ<<", "Ġ\"", "GAME", "OBJECT", "::", "Ġupdate", "():", "Ġ\"", "Ġ<<", "Ġm", "_", "particle", "Name", "Ġ<<", "Ġ\"'", "s", "Ġposition", "Ġafter", "Ġupdate", ":", "Ġ\"", "Ġ<<", "ĠnewPos", ".", "ToString", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::370", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE127_Buffer_Underread__new_char_loop_54c.cpp\r\nLabel Definition File: CWE127_Buffer_Underread__new.label.xml\r\nTemplate File: sources-sink-54c.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 127 Buffer Under-read\r\n * BadSource:  Set data pointer to before the allocated memory buffer\r\n * GoodSource: Set data pointer to the allocated memory buffer\r\n * Sink: loop\r\n *    BadSink : Copy data to string using a loop\r\n * Flow Variant: 54 Data flow: data passed as an argument from one function through three others to a fifth; all five functions are in different source files\r\n *\r\n * */\r\n\r\n#include \"std_testcase.h\"\r\n\r\n#include <wchar.h>\r\n\r\nnamespace CWE127_Buffer_Underread__new_char_loop_54\r\n{\r\n\r\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\r\n\r\n#ifndef OMITBAD\r\n\r\n/* bad function declaration */\r\nvoid badSink_d(char * data);\r\n\r\nvoid badSink_c(char * data)\r\n{\r\n    badSink_d(data);\r\n}\r\n\r\n#endif /* OMITBAD */\r\n\r\n#ifndef OMITGOOD\r\n\r\n/* goodG2B uses the GoodSource with the BadSink */\r\nvoid goodG2BSink_d(char * data);\r\n\r\nvoid goodG2BSink_c(char * data)\r\n{\r\n    goodG2BSink_d(data);\r\n}\r\n\r\n#endif /* OMITGOOD */\r\n\r\n} /* close namespace */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "127", "_", "Buffer", "_", "Under", "read", "__", "new", "_", "char", "_", "loop", "_", "54", "c", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "127", "_", "Buffer", "_", "Under", "read", "__", "new", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "-", "54", "c", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ127", "ĠBuffer", "ĠUnder", "-", "read", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġ", "ĠSet", "Ġdata", "Ġpointer", "Ġto", "Ġbefore", "Ġthe", "Ġallocated", "Ġmemory", "Ġbuffer", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠSet", "Ġdata", "Ġpointer", "Ġto", "Ġthe", "Ġallocated", "Ġmemory", "Ġbuffer", "č", "Ċ", "Ġ*", "ĠSink", ":", "Ġloop", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "ĠCopy", "Ġdata", "Ġto", "Ġstring", "Ġusing", "Ġa", "Ġloop", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ54", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġas", "Ġan", "Ġargument", "Ġfrom", "Ġone", "Ġfunction", "Ġthrough", "Ġthree", "Ġothers", "Ġto", "Ġa", "Ġfif", "th", ";", "Ġall", "Ġfive", "Ġfunctions", "Ġare", "Ġin", "Ġdifferent", "Ġsource", "Ġfiles", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "wchar", ".", "h", ">", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "127", "_", "Buffer", "_", "Under", "read", "__", "new", "_", "char", "_", "loop", "_", "54", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "/*", "Ġall", "Ġthe", "Ġsink", "s", "Ġare", "Ġthe", "Ġsame", ",", "Ġwe", "Ġjust", "Ġwant", "Ġto", "Ġknow", "Ġwhere", "Ġthe", "Ġhit", "Ġorigin", "ated", "Ġif", "Ġa", "Ġtool", "Ġflags", "Ġone", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "BAD", "č", "Ċ", "č", "Ċ", "/*", "Ġbad", "Ġfunction", "Ġdeclaration", "Ġ*/", "č", "Ċ", "void", "Ġbad", "Sink", "_", "d", "(", "char", "Ġ*", "Ġdata", ");", "č", "Ċ", "č", "Ċ", "void", "Ġbad", "Sink", "_", "c", "(", "char", "Ġ*", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġbad", "Sink", "_", "d", "(", "data", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "BAD", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "GOOD", "č", "Ċ", "č", "Ċ", "/*", "Ġgood", "G", "2", "B", "Ġuses", "Ġthe", "ĠGood", "Source", "Ġwith", "Ġthe", "ĠBad", "Sink", "Ġ*/", "č", "Ċ", "void", "Ġgood", "G", "2", "BS", "ink", "_", "d", "(", "char", "Ġ*", "Ġdata", ");", "č", "Ċ", "č", "Ċ", "void", "Ġgood", "G", "2", "BS", "ink", "_", "c", "(", "char", "Ġ*", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġgood", "G", "2", "BS", "ink", "_", "d", "(", "data", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "GOOD", "Ġ*/", "č", "Ċ", "č", "Ċ", "}", "Ġ/*", "Ġclose", "Ġnamespace", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::371", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE762_Mismatched_Memory_Management_Routines__new_array_delete_int_81_bad.cpp\r\nLabel Definition File: CWE762_Mismatched_Memory_Management_Routines__new_array_delete.label.xml\r\nTemplate File: sources-sinks-81_bad.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 762 Mismatched Memory Management Routines\r\n * BadSource:  Allocate data using new []\r\n * GoodSource: Allocate data using new\r\n * Sinks:\r\n *    GoodSink: Deallocate data using delete []\r\n *    BadSink : Deallocate data using delete\r\n * Flow Variant: 81 Data flow: data passed in a parameter to an virtual method called via a reference\r\n *\r\n * */\r\n#ifndef OMITBAD\r\n\r\n#include \"std_testcase.h\"\r\n#include \"CWE762_Mismatched_Memory_Management_Routines__new_array_delete_int_81.h\"\r\n\r\nnamespace CWE762_Mismatched_Memory_Management_Routines__new_array_delete_int_81\r\n{\r\n\r\nvoid CWE762_Mismatched_Memory_Management_Routines__new_array_delete_int_81_bad::action(int * data) const\r\n{\r\n    /* POTENTIAL FLAW: Deallocate memory using delete - the source memory allocation function may\r\n     * require a call to delete [] to deallocate the memory */\r\n    delete data;\r\n}\r\n\r\n}\r\n#endif /* OMITBAD */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "762", "_", "Mismatched", "_", "Memory", "_", "Management", "_", "Routines", "__", "new", "_", "array", "_", "delete", "_", "int", "_", "81", "_", "bad", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "762", "_", "Mismatched", "_", "Memory", "_", "Management", "_", "Routines", "__", "new", "_", "array", "_", "delete", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "s", "-", "81", "_", "bad", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ7", "62", "ĠM", "ismatch", "ed", "ĠMemory", "ĠManagement", "ĠR", "outines", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġ", "ĠAllocate", "Ġdata", "Ġusing", "Ġnew", "Ġ[]", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠAllocate", "Ġdata", "Ġusing", "Ġnew", "č", "Ċ", "Ġ*", "ĠSink", "s", ":", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠGood", "Sink", ":", "ĠDe", "allocate", "Ġdata", "Ġusing", "Ġdelete", "Ġ[]", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "ĠDe", "allocate", "Ġdata", "Ġusing", "Ġdelete", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ81", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġin", "Ġa", "Ġparameter", "Ġto", "Ġan", "Ġvirtual", "Ġmethod", "Ġcalled", "Ġvia", "Ġa", "Ġreference", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "BAD", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "CWE", "762", "_", "Mismatched", "_", "Memory", "_", "Management", "_", "Routines", "__", "new", "_", "array", "_", "delete", "_", "int", "_", "81", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "762", "_", "Mismatched", "_", "Memory", "_", "Management", "_", "Routines", "__", "new", "_", "array", "_", "delete", "_", "int", "_", "81", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "ĠCWE", "762", "_", "Mismatched", "_", "Memory", "_", "Management", "_", "Routines", "__", "new", "_", "array", "_", "delete", "_", "int", "_", "81", "_", "bad", "::", "action", "(", "int", "Ġ*", "Ġdata", ")", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ/*", "ĠP", "OT", "ENTIAL", "ĠF", "LA", "W", ":", "ĠDe", "allocate", "Ġmemory", "Ġusing", "Ġdelete", "Ġ-", "Ġthe", "Ġsource", "Ġmemory", "Ġallocation", "Ġfunction", "Ġmay", "č", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġrequire", "Ġa", "Ġcall", "Ġto", "Ġdelete", "Ġ[]", "Ġto", "Ġde", "allocate", "Ġthe", "Ġmemory", "Ġ*/", "č", "Ċ", "ĠĠĠ", "Ġdelete", "Ġdata", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "BAD", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::372", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE369_Divide_by_Zero__int_zero_modulo_82_goodB2G.cpp\r\nLabel Definition File: CWE369_Divide_by_Zero__int.label.xml\r\nTemplate File: sources-sinks-82_goodB2G.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 369 Divide by Zero\r\n * BadSource: zero Fixed value of zero\r\n * GoodSource: Non-zero\r\n * Sinks: modulo\r\n *    GoodSink: Check for zero before modulo\r\n *    BadSink : Modulo a constant with data\r\n * Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer\r\n *\r\n * */\r\n#ifndef OMITGOOD\r\n\r\n#include \"std_testcase.h\"\r\n#include \"CWE369_Divide_by_Zero__int_zero_modulo_82.h\"\r\n\r\nnamespace CWE369_Divide_by_Zero__int_zero_modulo_82\r\n{\r\n\r\nvoid CWE369_Divide_by_Zero__int_zero_modulo_82_goodB2G::action(int data)\r\n{\r\n    /* FIX: test for a zero denominator */\r\n    if( data != 0 )\r\n    {\r\n        printIntLine(100 % data);\r\n    }\r\n    else\r\n    {\r\n        printLine(\"This would result in a divide by zero\");\r\n    }\r\n}\r\n\r\n}\r\n#endif /* OMITGOOD */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "369", "_", "Divide", "_", "by", "_", "Zero", "__", "int", "_", "zero", "_", "mod", "ulo", "_", "82", "_", "good", "B", "2", "G", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "369", "_", "Divide", "_", "by", "_", "Zero", "__", "int", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "s", "-", "82", "_", "good", "B", "2", "G", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ3", "69", "ĠDivide", "Ġby", "ĠZero", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġzero", "ĠFixed", "Ġvalue", "Ġof", "Ġzero", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠNon", "-", "zero", "č", "Ċ", "Ġ*", "ĠSink", "s", ":", "Ġmodulo", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠGood", "Sink", ":", "ĠCheck", "Ġfor", "Ġzero", "Ġbefore", "Ġmodulo", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "ĠMod", "ulo", "Ġa", "Ġconstant", "Ġwith", "Ġdata", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ82", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġin", "Ġa", "Ġparameter", "Ġto", "Ġan", "Ġvirtual", "Ġmethod", "Ġcalled", "Ġvia", "Ġa", "Ġpointer", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "GOOD", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "CWE", "369", "_", "Divide", "_", "by", "_", "Zero", "__", "int", "_", "zero", "_", "mod", "ulo", "_", "82", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "369", "_", "Divide", "_", "by", "_", "Zero", "__", "int", "_", "zero", "_", "mod", "ulo", "_", "82", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "ĠCWE", "369", "_", "Divide", "_", "by", "_", "Zero", "__", "int", "_", "zero", "_", "mod", "ulo", "_", "82", "_", "good", "B", "2", "G", "::", "action", "(", "int", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ/*", "ĠFIX", ":", "Ġtest", "Ġfor", "Ġa", "Ġzero", "Ġdenominator", "Ġ*/", "č", "Ċ", "ĠĠĠ", "Ġif", "(", "Ġdata", "Ġ!=", "Ġ0", "Ġ)", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprint", "Int", "Line", "(", "100", "Ġ%", "Ġdata", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġelse", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprint", "Line", "(\"", "This", "Ġwould", "Ġresult", "Ġin", "Ġa", "Ġdivide", "Ġby", "Ġzero", "\");", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "GOOD", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::373", "code": "// Copyright © 2010-2014 The CefSharp Project. All rights reserved.\n//\n// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n#pragma once\n\n#include \"Stdafx.h\"\n\n#include \"JavascriptPropertyWrapper.h\"\n#include \"JavascriptObjectWrapper.h\"\n\nusing namespace System;\n\nnamespace CefSharp\n{\n    void JavascriptPropertyWrapper::Bind()\n    {\n        auto propertyName = StringUtils::ToNative(_javascriptProperty->JavascriptName);\n        auto clrPropertyName = _javascriptProperty->JavascriptName;\n\n        if (_javascriptProperty->IsComplexType)\n        {\n            auto javascriptObjectWrapper = gcnew JavascriptObjectWrapper(_javascriptProperty->JsObject, _browserProcess);\n            javascriptObjectWrapper->V8Value = V8Value.get();\n            javascriptObjectWrapper->Bind();\n\n            _javascriptObjectWrapper = javascriptObjectWrapper;\n        }\n        else\n        {\n            auto propertyAttribute = _javascriptProperty->IsReadOnly ? V8_PROPERTY_ATTRIBUTE_READONLY : V8_PROPERTY_ATTRIBUTE_NONE;\n\n            V8Value->SetValue(propertyName, V8_ACCESS_CONTROL_DEFAULT, propertyAttribute);\n        }\n    };\n}", "code_tokens": ["Ġ//", "ĠCopyright", "ĠÂ", "©", "Ġ2010", "-", "2014", "ĠThe", "ĠC", "ef", "Sharp", "ĠProject", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "St", "da", "fx", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Javascript", "Property", "Wrapper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Javascript", "Object", "Wrapper", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠSystem", ";", "Ċ", "Ċ", "namespace", "ĠC", "ef", "Sharp", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġvoid", "ĠJavascript", "Property", "Wrapper", "::", "Bind", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġauto", "ĠpropertyName", "Ġ=", "ĠStringUtils", "::", "To", "Native", "(_", "javascript", "Property", "->", "Javascript", "Name", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġauto", "Ġclr", "PropertyName", "Ġ=", "Ġ_", "javascript", "Property", "->", "Javascript", "Name", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(_", "javascript", "Property", "->", "Is", "ComplexType", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "Ġjavascript", "Object", "Wrapper", "Ġ=", "Ġgcnew", "ĠJavascript", "Object", "Wrapper", "(_", "javascript", "Property", "->", "Js", "Object", ",", "Ġ_", "browser", "Process", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġjavascript", "Object", "Wrapper", "->", "V", "8", "Value", "Ġ=", "ĠV", "8", "Value", ".", "get", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġjavascript", "Object", "Wrapper", "->", "Bind", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "javascript", "Object", "Wrapper", "Ġ=", "Ġjavascript", "Object", "Wrapper", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "Ġproperty", "Attribute", "Ġ=", "Ġ_", "javascript", "Property", "->", "IsReadOnly", "Ġ?", "ĠV", "8", "_", "PROPERTY", "_", "ATTRIBUTE", "_", "READONLY", "Ġ:", "ĠV", "8", "_", "PROPERTY", "_", "ATTRIBUTE", "_", "NONE", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠV", "8", "Value", "->", "SetValue", "(", "propertyName", ",", "ĠV", "8", "_", "ACCESS", "_", "CONTROL", "_", "DEFAULT", ",", "Ġproperty", "Attribute", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::374", "code": "/*\nCopyright_License {\n\n  XCSoar Glide Computer - http://www.xcsoar.org/\n  Copyright (C) 2000-2021 The XCSoar Project\n  A detailed list of copyright holders can be found in the file \"AUTHORS\".\n\n  This program is free software; you can redistribute it and/or\n  modify it under the terms of the GNU General Public License\n  as published by the Free Software Foundation; either version 2\n  of the License, or (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, write to the Free Software\n  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n}\n*/\n\n#ifndef XCSOAR_SOLVER_RESULT_HPP\n#define XCSOAR_SOLVER_RESULT_HPP\n\n/**\n * Return type for path solver methods.\n */\nenum class SolverResult {\n  /**\n   * Still looking for a solution.\n   */\n  INCOMPLETE,\n\n  /**\n   * A valid solution was found.\n   */\n  VALID,\n\n  /**\n   * The solver has completed, but failed to find a valid solution,\n   * or the solution was not better than the previous one.  More\n   * data may be required.\n   */\n  FAILED,\n};\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "_", "License", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠX", "CS", "o", "ar", "ĠG", "lide", "ĠComput", "er", "Ġ-", "Ġhttp", "://", "www", ".", "x", "cs", "o", "ar", ".", "org", "/", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "-", "202", "1", "ĠThe", "ĠX", "CS", "o", "ar", "ĠProject", "Ċ", "Ġ", "ĠA", "Ġdetailed", "Ġlist", "Ġof", "Ġcopyright", "Ġhold", "ers", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "Ġ\"", "AUTH", "ORS", "\".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ċ", "}", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠX", "CS", "O", "AR", "_", "SOL", "VER", "_", "RESULT", "_", "HP", "P", "Ċ", "#", "define", "ĠX", "CS", "O", "AR", "_", "SOL", "VER", "_", "RESULT", "_", "HP", "P", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠReturn", "Ġtype", "Ġfor", "Ġpath", "Ġsolver", "Ġmethods", ".", "Ċ", "Ġ*/", "Ċ", "enum", "Ġclass", "ĠS", "olver", "Result", "Ġ{", "Ċ", "Ġ", "Ġ/**", "Ċ", "ĠĠ", "Ġ*", "ĠSt", "ill", "Ġlooking", "Ġfor", "Ġa", "Ġsolution", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "Ġ", "ĠIN", "COMPLETE", ",", "Ċ", "Ċ", "Ġ", "Ġ/**", "Ċ", "ĠĠ", "Ġ*", "ĠA", "Ġvalid", "Ġsolution", "Ġwas", "Ġfound", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "Ġ", "ĠVALID", ",", "Ċ", "Ċ", "Ġ", "Ġ/**", "Ċ", "ĠĠ", "Ġ*", "ĠThe", "Ġsolver", "Ġhas", "Ġcompleted", ",", "Ġbut", "Ġfailed", "Ġto", "Ġfind", "Ġa", "Ġvalid", "Ġsolution", ",", "Ċ", "ĠĠ", "Ġ*", "Ġor", "Ġthe", "Ġsolution", "Ġwas", "Ġnot", "Ġbetter", "Ġthan", "Ġthe", "Ġprevious", "Ġone", ".", "Ġ", "ĠMore", "Ċ", "ĠĠ", "Ġ*", "Ġdata", "Ġmay", "Ġbe", "Ġrequired", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "Ġ", "ĠFAILED", ",", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::375", "code": "#ifndef _BOOKSIM_CONFIG_HPP_\r\n#define _BOOKSIM_CONFIG_HPP_\r\n\r\n#include \"config_utils.hpp\"\r\n\r\nclass BookSimConfig : public Configuration {\r\npublic:\r\n   BookSimConfig( );\r\n};\r\n\r\n#endif\r\n", "code_tokens": ["Ġ#", "ifndef", "Ġ_", "BOOK", "SIM", "_", "CONFIG", "_", "HP", "P", "_", "č", "Ċ", "#", "define", "Ġ_", "BOOK", "SIM", "_", "CONFIG", "_", "HP", "P", "_", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "config", "_", "utils", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "class", "ĠBook", "Sim", "Config", "Ġ:", "Ġpublic", "ĠConfiguration", "Ġ{", "č", "Ċ", "public", ":", "č", "Ċ", "ĠĠ", "ĠBook", "Sim", "Config", "(", "Ġ);", "č", "Ċ", "};", "č", "Ċ", "č", "Ċ", "#", "endif", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::376", "code": "#ifndef GL_HEADER_HPP\n#define GL_HEADER_HPP\n\n#define GLEW_STATIC\n\nextern \"C\" {\n#include <GL/glew.h>\n}\n#include <cinttypes>\n\n#if defined(__APPLE__)\n#    include <OpenGL/gl.h>\n#    include <OpenGL/gl3.h>\n#    define OGL32CTX\n#    ifdef GL_ARB_instanced_arrays\n#        define glVertexAttribDivisor glVertexAttribDivisorARB\n#    endif\n#    ifndef GL_TEXTURE_SWIZZLE_RGBA\n#        define GL_TEXTURE_SWIZZLE_RGBA 0x8E46\n#    endif\n#elif defined(ANDROID)\n#    include <GLES/gl.h>\n#elif defined(WIN32)\n#    define _WINSOCKAPI_\n#    include <windows.h>\n#else\n#define GL_GLEXT_PROTOTYPES\n#define DEBUG_OUTPUT_DECLARED\n#    include <GL/gl.h>\n#    include <GL/glext.h>\n#endif\n\nstruct DrawElementsIndirectCommand{\n    GLuint count;\n    GLuint instanceCount;\n    GLuint firstIndex;\n    GLuint baseVertex;\n    GLuint baseInstance;\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠGL", "_", "HEADER", "_", "HP", "P", "Ċ", "#", "define", "ĠGL", "_", "HEADER", "_", "HP", "P", "Ċ", "Ċ", "#", "define", "ĠG", "LE", "W", "_", "STATIC", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġ{", "Ċ", "#", "include", "Ġ<", "GL", "/", "gle", "w", ".", "h", ">", "Ċ", "}", "Ċ", "#", "include", "Ġ<", "c", "int", "types", ">", "Ċ", "Ċ", "#", "if", "Ġdefined", "(__", "APPLE", "__)", "Ċ", "#", "ĠĠĠ", "Ġinclude", "Ġ<", "OpenGL", "/", "gl", ".", "h", ">", "Ċ", "#", "ĠĠĠ", "Ġinclude", "Ġ<", "OpenGL", "/", "gl", "3", ".", "h", ">", "Ċ", "#", "ĠĠĠ", "Ġdefine", "ĠO", "GL", "32", "CTX", "Ċ", "#", "ĠĠĠ", "Ġifdef", "ĠGL", "_", "ARB", "_", "instance", "d", "_", "arrays", "Ċ", "#", "ĠĠĠĠĠĠĠ", "Ġdefine", "Ġgl", "VertexAttrib", "Divisor", "Ġgl", "VertexAttrib", "Divisor", "ARB", "Ċ", "#", "ĠĠĠ", "Ġendif", "Ċ", "#", "ĠĠĠ", "Ġif", "ndef", "ĠGL", "_", "TEXTURE", "_", "SW", "IZ", "Z", "LE", "_", "RGBA", "Ċ", "#", "ĠĠĠĠĠĠĠ", "Ġdefine", "ĠGL", "_", "TEXTURE", "_", "SW", "IZ", "Z", "LE", "_", "RGBA", "Ġ0", "x", "8", "E", "46", "Ċ", "#", "ĠĠĠ", "Ġendif", "Ċ", "#", "elif", "Ġdefined", "(", "ANDROID", ")", "Ċ", "#", "ĠĠĠ", "Ġinclude", "Ġ<", "GLES", "/", "gl", ".", "h", ">", "Ċ", "#", "elif", "Ġdefined", "(", "WIN", "32", ")", "Ċ", "#", "ĠĠĠ", "Ġdefine", "Ġ_", "WIN", "SOCK", "API", "_", "Ċ", "#", "ĠĠĠ", "Ġinclude", "Ġ<", "windows", ".", "h", ">", "Ċ", "#", "else", "Ċ", "#", "define", "ĠGL", "_", "G", "LE", "XT", "_", "PROTOTYPE", "S", "Ċ", "#", "define", "ĠDEBUG", "_", "OUTPUT", "_", "DE", "CLA", "RED", "Ċ", "#", "ĠĠĠ", "Ġinclude", "Ġ<", "GL", "/", "gl", ".", "h", ">", "Ċ", "#", "ĠĠĠ", "Ġinclude", "Ġ<", "GL", "/", "g", "lex", "t", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "struct", "ĠDraw", "Elements", "Indirect", "Command", "{", "Ċ", "ĠĠĠ", "ĠGLuint", "Ġcount", ";", "Ċ", "ĠĠĠ", "ĠGLuint", "Ġinstance", "Count", ";", "Ċ", "ĠĠĠ", "ĠGLuint", "Ġfirst", "Index", ";", "Ċ", "ĠĠĠ", "ĠGLuint", "Ġbase", "Vertex", ";", "Ċ", "ĠĠĠ", "ĠGLuint", "Ġbase", "Instance", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::377", "code": "#include \"sp/sp.h\"\n#include \"Widget.h\"\n\nnamespace sp { namespace graphics { namespace ui {\n\n\tWidget::Widget(const maths::Rectangle& bounds)\n\t\t: m_Bounds(bounds), m_Active(true), m_Focused(false)\n\t{\n\t}\n\n\tbool Widget::OnMousePressed(events::MousePressedEvent& e)\n\t{\n\t\treturn false;\n\t}\n\n\tbool Widget::OnMouseReleased(events::MouseReleasedEvent& e)\n\t{\n\t\treturn false;\n\t}\n\n\tbool Widget::OnMouseMoved(events::MouseMovedEvent& e)\n\t{\n\t\treturn false;\n\t}\n\n\tvoid Widget::OnUpdate()\n\t{\n\t}\n\n\tvoid Widget::OnRender(Renderer2D& renderer)\n\t{\n\t}\n\n} } }", "code_tokens": ["Ġ#", "include", "Ġ\"", "sp", "/", "sp", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Widget", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġsp", "Ġ{", "Ġnamespace", "Ġgraphics", "Ġ{", "Ġnamespace", "Ġui", "Ġ{", "Ċ", "Ċ", "ĉ", "Widget", "::", "Widget", "(", "const", "Ġmath", "s", "::", "Rectangle", "&", "Ġbounds", ")", "Ċ", "ĉ", "ĉ", ":", "Ġm", "_", "Bounds", "(", "bounds", "),", "Ġm", "_", "Active", "(", "true", "),", "Ġm", "_", "Focused", "(", "false", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "bool", "ĠWidget", "::", "On", "Mouse", "Pressed", "(", "events", "::", "Mouse", "Pressed", "Event", "&", "Ġe", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġfalse", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "bool", "ĠWidget", "::", "On", "Mouse", "Released", "(", "events", "::", "Mouse", "Released", "Event", "&", "Ġe", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġfalse", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "bool", "ĠWidget", "::", "On", "Mouse", "Moved", "(", "events", "::", "Mouse", "Moved", "Event", "&", "Ġe", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġfalse", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠWidget", "::", "OnUpdate", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠWidget", "::", "On", "Render", "(", "Renderer", "2", "D", "&", "Ġrenderer", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "}", "Ġ}", "Ġ}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::378", "code": "#ifndef OSRM_TEST_SERVER_PARAMETERS_IO\n#define OSRM_TEST_SERVER_PARAMETERS_IO\n\n#include \"engine/api/route_parameters.hpp\"\n#include \"engine/approach.hpp\"\n#include \"engine/bearing.hpp\"\n\n#include <ostream>\n\nnamespace osrm\n{\nnamespace engine\n{\nnamespace api\n{\ninline std::ostream &operator<<(std::ostream &out, api::RouteParameters::GeometriesType geometries)\n{\n    switch (geometries)\n    {\n    case api::RouteParameters::GeometriesType::GeoJSON:\n        out << \"GeoJSON\";\n        break;\n    case api::RouteParameters::GeometriesType::Polyline:\n        out << \"Polyline\";\n        break;\n    default:\n        BOOST_ASSERT_MSG(false, \"GeometriesType not fully captured\");\n    }\n    return out;\n}\n\ninline std::ostream &operator<<(std::ostream &out, api::RouteParameters::OverviewType overview)\n{\n    switch (overview)\n    {\n    case api::RouteParameters::OverviewType::False:\n        out << \"False\";\n        break;\n    case api::RouteParameters::OverviewType::Full:\n        out << \"Full\";\n        break;\n    case api::RouteParameters::OverviewType::Simplified:\n        out << \"Simplified\";\n        break;\n    default:\n        BOOST_ASSERT_MSG(false, \"OverviewType not fully captured\");\n    }\n    return out;\n}\n}\n\ninline std::ostream &operator<<(std::ostream &out, Bearing bearing)\n{\n    out << bearing.bearing << \",\" << bearing.range;\n    return out;\n}\n\ninline std::ostream &operator<<(std::ostream &out, Approach approach)\n{\n    out << static_cast<int>(approach);\n    return out;\n}\n}\n}\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠO", "SR", "M", "_", "TEST", "_", "SERVER", "_", "PARAMETERS", "_", "IO", "Ċ", "#", "define", "ĠO", "SR", "M", "_", "TEST", "_", "SERVER", "_", "PARAMETERS", "_", "IO", "Ċ", "Ċ", "#", "include", "Ġ\"", "engine", "/", "api", "/", "route", "_", "parameters", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "engine", "/", "appro", "ach", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "engine", "/", "be", "aring", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "ostream", ">", "Ċ", "Ċ", "namespace", "Ġos", "rm", "Ċ", "{", "Ċ", "namespace", "Ġengine", "Ċ", "{", "Ċ", "namespace", "Ġapi", "Ċ", "{", "Ċ", "inline", "Ġstd", "::", "ostream", "Ġ&", "operator", "<<(", "std", "::", "ostream", "Ġ&", "out", ",", "Ġapi", "::", "Route", "Parameters", "::", "Geom", "etries", "Type", "Ġgeom", "etries", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġswitch", "Ġ(", "geom", "etries", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġcase", "Ġapi", "::", "Route", "Parameters", "::", "Geom", "etries", "Type", "::", "Geo", "JSON", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "Geo", "JSON", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "Ġapi", "::", "Route", "Parameters", "::", "Geom", "etries", "Type", "::", "Polyline", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "Polyline", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġdefault", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠBOOST", "_", "ASSERT", "_", "MSG", "(", "false", ",", "Ġ\"", "Geom", "etries", "Type", "Ġnot", "Ġfully", "Ġcaptured", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġout", ";", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġstd", "::", "ostream", "Ġ&", "operator", "<<(", "std", "::", "ostream", "Ġ&", "out", ",", "Ġapi", "::", "Route", "Parameters", "::", "Overview", "Type", "Ġoverview", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġswitch", "Ġ(", "overview", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġcase", "Ġapi", "::", "Route", "Parameters", "::", "Overview", "Type", "::", "False", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "False", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "Ġapi", "::", "Route", "Parameters", "::", "Overview", "Type", "::", "Full", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "Full", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "Ġapi", "::", "Route", "Parameters", "::", "Overview", "Type", "::", "S", "implified", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "S", "implified", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġdefault", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠBOOST", "_", "ASSERT", "_", "MSG", "(", "false", ",", "Ġ\"", "Overview", "Type", "Ġnot", "Ġfully", "Ġcaptured", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġout", ";", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġstd", "::", "ostream", "Ġ&", "operator", "<<(", "std", "::", "ostream", "Ġ&", "out", ",", "ĠB", "ear", "ing", "Ġbe", "aring", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġout", "Ġ<<", "Ġbe", "aring", ".", "be", "aring", "Ġ<<", "Ġ\",\"", "Ġ<<", "Ġbe", "aring", ".", "range", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġout", ";", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġstd", "::", "ostream", "Ġ&", "operator", "<<(", "std", "::", "ostream", "Ġ&", "out", ",", "ĠAp", "pro", "ach", "Ġapproach", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġout", "Ġ<<", "Ġstatic", "_", "cast", "<", "int", ">(", "appro", "ach", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġout", ";", "Ċ", "}", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::379", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"base/command_line.h\"\n#include \"base/test/launcher/test_launcher.h\"\n#include \"build/build_config.h\"\n#include \"extensions/shell/test/shell_test_launcher_delegate.h\"\n#include \"testing/gtest/include/gtest/gtest.h\"\n\n#if defined(OS_WIN)\n#include \"base/win/win_util.h\"\n#endif  // defined(OS_WIN)\n\nint main(int argc, char** argv) {\n  base::CommandLine::Init(argc, argv);\n  size_t parallel_jobs = base::NumParallelJobs(/*cores_per_job=*/2);\n  if (parallel_jobs == 0U)\n    return 1;\n\n#if defined(OS_WIN)\n  // Load and pin user32.dll to avoid having to load it once tests start while\n  // on the main thread loop where blocking calls are disallowed.\n  base::win::PinUser32();\n#endif  // OS_WIN\n\n  extensions::AppShellTestLauncherDelegate launcher_delegate;\n  return content::LaunchTests(&launcher_delegate, parallel_jobs, argc, argv);\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "command", "_", "line", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "test", "/", "launcher", "/", "test", "_", "launcher", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "build", "/", "build", "_", "config", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "extensions", "/", "shell", "/", "test", "/", "shell", "_", "test", "_", "launcher", "_", "delegate", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "testing", "/", "gtest", "/", "include", "/", "gtest", "/", "gtest", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "Ġdefined", "(", "OS", "_", "WIN", ")", "Ċ", "#", "include", "Ġ\"", "base", "/", "win", "/", "win", "_", "util", ".", "h", "\"", "Ċ", "#", "endif", "Ġ", "Ġ//", "Ġdefined", "(", "OS", "_", "WIN", ")", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "Ġ", "Ġbase", "::", "CommandLine", "::", "Init", "(", "argc", ",", "Ġargv", ");", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġparallel", "_", "jobs", "Ġ=", "Ġbase", "::", "Num", "Parallel", "Jobs", "(/*", "cores", "_", "per", "_", "job", "=*/", "2", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "parallel", "_", "jobs", "Ġ==", "Ġ0", "U", ")", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "Ċ", "#", "if", "Ġdefined", "(", "OS", "_", "WIN", ")", "Ċ", "Ġ", "Ġ//", "ĠLoad", "Ġand", "Ġpin", "Ġuser", "32", ".", "dll", "Ġto", "Ġavoid", "Ġhaving", "Ġto", "Ġload", "Ġit", "Ġonce", "Ġtests", "Ġstart", "Ġwhile", "Ċ", "Ġ", "Ġ//", "Ġon", "Ġthe", "Ġmain", "Ġthread", "Ġloop", "Ġwhere", "Ġblocking", "Ġcalls", "Ġare", "Ġdisallowed", ".", "Ċ", "Ġ", "Ġbase", "::", "win", "::", "Pin", "User", "32", "();", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠOS", "_", "WIN", "Ċ", "Ċ", "Ġ", "Ġextensions", "::", "App", "Shell", "Test", "Launcher", "Delegate", "Ġlauncher", "_", "delegate", ";", "Ċ", "Ġ", "Ġreturn", "Ġcontent", "::", "Launch", "Tests", "(&", "launcher", "_", "delegate", ",", "Ġparallel", "_", "jobs", ",", "Ġargc", ",", "Ġargv", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::380", "code": "#include <Arduino.h>\n#include <IRSender.h>\n\n// Send IR using the IR Blaster. The IR Blaster generates the 38 kHz carrier frequency\n\n\nIRSenderBlaster::IRSenderBlaster(uint8_t pin) : IRSender(pin)\n{\n  pinMode(_pin, OUTPUT);\n}\n\n\nvoid IRSenderBlaster::setFrequency(int frequency)\n{\n  (void)frequency;\n}\n\n\n// Send an IR 'mark' symbol, i.e. transmitter ON\nvoid IRSenderBlaster::mark(int markLength)\n{\n  digitalWrite(_pin, HIGH);\n\n  if (markLength < 16383) {\n    delayMicroseconds(markLength);\n  } else {\n    delay(markLength/1000);\n  }\n}\n\n\n// Send an IR 'space' symbol, i.e. transmitter OFF\nvoid IRSenderBlaster::space(int spaceLength)\n{\n  digitalWrite(_pin, LOW);\n\n  if (spaceLength < 16383) {\n    delayMicroseconds(spaceLength);\n  } else {\n    delay(spaceLength/1000);\n  }\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "Ar", "duino", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "IR", "Sender", ".", "h", ">", "Ċ", "Ċ", "//", "ĠSend", "ĠIR", "Ġusing", "Ġthe", "ĠIR", "ĠB", "last", "er", ".", "ĠThe", "ĠIR", "ĠB", "last", "er", "Ġgenerates", "Ġthe", "Ġ38", "Ġk", "Hz", "Ġcarrier", "Ġfrequency", "Ċ", "Ċ", "Ċ", "IR", "Sender", "B", "last", "er", "::", "IR", "Sender", "B", "last", "er", "(", "uint", "8", "_", "t", "Ġpin", ")", "Ġ:", "ĠIR", "Sender", "(", "pin", ")", "Ċ", "{", "Ċ", "Ġ", "Ġpin", "Mode", "(_", "pin", ",", "ĠOUTPUT", ");", "Ċ", "}", "Ċ", "Ċ", "Ċ", "void", "ĠIR", "Sender", "B", "last", "er", "::", "set", "Frequency", "(", "int", "Ġfrequency", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ(", "void", ")", "frequency", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "ĠSend", "Ġan", "ĠIR", "Ġ'", "mark", "'", "Ġsymbol", ",", "Ġi", ".", "e", ".", "Ġtransmitter", "ĠON", "Ċ", "void", "ĠIR", "Sender", "B", "last", "er", "::", "mark", "(", "int", "Ġmark", "Length", ")", "Ċ", "{", "Ċ", "Ġ", "Ġdigital", "Write", "(_", "pin", ",", "ĠHIGH", ");", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "mark", "Length", "Ġ<", "Ġ16", "383", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġdelay", "Micro", "seconds", "(", "mark", "Length", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "Ġdelay", "(", "mark", "Length", "/", "1000", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "ĠSend", "Ġan", "ĠIR", "Ġ'", "space", "'", "Ġsymbol", ",", "Ġi", ".", "e", ".", "Ġtransmitter", "ĠOFF", "Ċ", "void", "ĠIR", "Sender", "B", "last", "er", "::", "space", "(", "int", "Ġspace", "Length", ")", "Ċ", "{", "Ċ", "Ġ", "Ġdigital", "Write", "(_", "pin", ",", "ĠLOW", ");", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "space", "Length", "Ġ<", "Ġ16", "383", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġdelay", "Micro", "seconds", "(", "space", "Length", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "Ġdelay", "(", "space", "Length", "/", "1000", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::381", "code": "/*\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n * (c)Copyright 2006 Hewlett-Packard Development Company, LP.\n *\n */\n\n#ifndef _GENERIC_METHODS_HPP_\n#define _GENERIC_METHODS_HPP_\n\n#include \"C_ProtocolFrame.hpp\"\n\n\nextern \"C\" int sys_time_secs (T_pValueData  P_msgPart,\n                              T_pValueData  P_args,\n                              T_pValueData  P_result);\nextern \"C\" int sys_time_unsig_sec (T_pValueData  P_msgPart,\n                              T_pValueData  P_args,\n                              T_pValueData  P_result); \n\n\n#endif // _GENERIC_METHODS_HPP_\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", ",", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", "Ġ", "ĠUSA", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ(", "c", ")", "Copyright", "Ġ2006", "ĠH", "ew", "let", "t", "-", "Pack", "ard", "ĠDe", "velopment", "ĠCompany", ",", "ĠLP", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "Ġ_", "GENERIC", "_", "METHODS", "_", "HP", "P", "_", "Ċ", "#", "define", "Ġ_", "GENERIC", "_", "METHODS", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ\"", "C", "_", "Protocol", "Frame", ".", "hpp", "\"", "Ċ", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "Ġsys", "_", "time", "_", "secs", "Ġ(", "T", "_", "pValue", "Data", "Ġ", "ĠP", "_", "msg", "Part", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠT", "_", "pValue", "Data", "Ġ", "ĠP", "_", "args", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠT", "_", "pValue", "Data", "Ġ", "ĠP", "_", "result", ");", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "Ġsys", "_", "time", "_", "un", "sig", "_", "sec", "Ġ(", "T", "_", "pValue", "Data", "Ġ", "ĠP", "_", "msg", "Part", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠT", "_", "pValue", "Data", "Ġ", "ĠP", "_", "args", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠT", "_", "pValue", "Data", "Ġ", "ĠP", "_", "result", ");", "ĠĊ", "Ċ", "Ċ", "#", "endif", "Ġ//", "Ġ_", "GENERIC", "_", "METHODS", "_", "HP", "P", "_", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::382", "code": "#include \"SDRDeviceInfo.h\"\n\n\nSDRDeviceInfo::SDRDeviceInfo() : name(\"\"), serial(\"\"), available(false) {\n\n}\n\nstd::string SDRDeviceInfo::getDeviceId() {\n    std::string deviceId;\n    \n    deviceId.append(getName());\n    deviceId.append(\" :: \");\n    deviceId.append(getSerial());\n    \n    return deviceId;\n}\n\nbool SDRDeviceInfo::isAvailable() const {\n    return available;\n}\n\nvoid SDRDeviceInfo::setAvailable(bool available) {\n    this->available = available;\n}\n\nconst std::string& SDRDeviceInfo::getName() const {\n    return name;\n}\n\nvoid SDRDeviceInfo::setName(const std::string& name) {\n    this->name = name;\n}\n\nconst std::string& SDRDeviceInfo::getSerial() const {\n    return serial;\n}\n\nvoid SDRDeviceInfo::setSerial(const std::string& serial) {\n    this->serial = serial;\n}\n\nconst std::string& SDRDeviceInfo::getTuner() const {\n    return tuner;\n}\n\nvoid SDRDeviceInfo::setTuner(const std::string& tuner) {\n    this->tuner = tuner;\n}\n\nconst std::string& SDRDeviceInfo::getManufacturer() const {\n    return manufacturer;\n}\n\nvoid SDRDeviceInfo::setManufacturer(const std::string& manufacturer) {\n    this->manufacturer = manufacturer;\n}\n\nconst std::string& SDRDeviceInfo::getProduct() const {\n    return product;\n}\n\nvoid SDRDeviceInfo::setProduct(const std::string& product) {\n    this->product = product;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "SDR", "DeviceInfo", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "SDR", "DeviceInfo", "::", "SDR", "DeviceInfo", "()", "Ġ:", "Ġname", "(\"\"),", "Ġserial", "(\"\"),", "Ġavailable", "(", "false", ")", "Ġ{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "ĠS", "DR", "DeviceInfo", "::", "get", "DeviceId", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "ĠdeviceId", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "ĠdeviceId", ".", "append", "(", "getName", "());", "Ċ", "ĠĠĠ", "ĠdeviceId", ".", "append", "(\"", "Ġ::", "Ġ\");", "Ċ", "ĠĠĠ", "ĠdeviceId", ".", "append", "(", "get", "Serial", "());", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġreturn", "ĠdeviceId", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠS", "DR", "DeviceInfo", "::", "is", "Available", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġavailable", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠS", "DR", "DeviceInfo", "::", "set", "Available", "(", "bool", "Ġavailable", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "available", "Ġ=", "Ġavailable", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "&", "ĠS", "DR", "DeviceInfo", "::", "getName", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġname", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠS", "DR", "DeviceInfo", "::", "setName", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "name", "Ġ=", "Ġname", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "&", "ĠS", "DR", "DeviceInfo", "::", "get", "Serial", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġserial", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠS", "DR", "DeviceInfo", "::", "set", "Serial", "(", "const", "Ġstd", "::", "string", "&", "Ġserial", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "serial", "Ġ=", "Ġserial", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "&", "ĠS", "DR", "DeviceInfo", "::", "get", "Tun", "er", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtuner", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠS", "DR", "DeviceInfo", "::", "set", "Tun", "er", "(", "const", "Ġstd", "::", "string", "&", "Ġtuner", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "tuner", "Ġ=", "Ġtuner", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "&", "ĠS", "DR", "DeviceInfo", "::", "get", "Manufacturer", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġman", "ufacturer", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠS", "DR", "DeviceInfo", "::", "set", "Manufacturer", "(", "const", "Ġstd", "::", "string", "&", "Ġman", "ufacturer", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "manufacturer", "Ġ=", "Ġman", "ufacturer", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "&", "ĠS", "DR", "DeviceInfo", "::", "getProduct", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġproduct", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠS", "DR", "DeviceInfo", "::", "set", "Product", "(", "const", "Ġstd", "::", "string", "&", "Ġproduct", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "product", "Ġ=", "Ġproduct", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::383", "code": "/*\nCopyright_License {\n\n  XCSoar Glide Computer - http://www.xcsoar.org/\n  Copyright (C) 2000-2014 The XCSoar Project\n  A detailed list of copyright holders can be found in the file \"AUTHORS\".\n\n  This program is free software; you can redistribute it and/or\n  modify it under the terms of the GNU General Public License\n  as published by the Free Software Foundation; either version 2\n  of the License, or (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, write to the Free Software\n  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n}\n*/\n\n#ifndef XCSOAR_SCORING_CONFIG_PANEL_HPP\n#define XCSOAR_SCORING_CONFIG_PANEL_HPP\n\nclass Widget;\n\nWidget *\nCreateScoringConfigPanel();\n\n#endif /* TASKRULESCONFIGPANEL_HPP */\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "_", "License", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠX", "CS", "o", "ar", "ĠG", "lide", "ĠComput", "er", "Ġ-", "Ġhttp", "://", "www", ".", "x", "cs", "o", "ar", ".", "org", "/", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "-", "2014", "ĠThe", "ĠX", "CS", "o", "ar", "ĠProject", "Ċ", "Ġ", "ĠA", "Ġdetailed", "Ġlist", "Ġof", "Ġcopyright", "Ġhold", "ers", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "Ġ\"", "AUTH", "ORS", "\".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ċ", "}", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠX", "CS", "O", "AR", "_", "SC", "OR", "ING", "_", "CONFIG", "_", "PANEL", "_", "HP", "P", "Ċ", "#", "define", "ĠX", "CS", "O", "AR", "_", "SC", "OR", "ING", "_", "CONFIG", "_", "PANEL", "_", "HP", "P", "Ċ", "Ċ", "class", "ĠWidget", ";", "Ċ", "Ċ", "Widget", "Ġ*", "Ċ", "Create", "Sc", "oring", "Config", "Panel", "();", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠTASK", "RULE", "SC", "ON", "FIG", "PANEL", "_", "HP", "P", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::384", "code": "// { dg-options \"-std=gnu++11\" }\n// { dg-require-cstdint \"\" }\n//\n// 2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n//\n// Copyright (C) 2010-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <random>\n\nvoid\ntest01()\n{\n  std::subtract_with_carry_engine<unsigned long, 24, 10, 24> e(1);\n\n  const auto f(e);\n  auto g(f);\n  g = g; // Suppress unused warning.\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "c", "std", "int", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ċ", "//", "Ġ2010", "-", "02", "-", "16", "Ġ", "ĠP", "ao", "lo", "ĠCar", "lin", "i", "Ġ", "Ġ<", "pa", "o", "lo", ".", "car", "lin", "i", "@", "oracle", ".", "com", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "random", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "subtract", "_", "with", "_", "carry", "_", "engine", "<", "unsigned", "Ġlong", ",", "Ġ24", ",", "Ġ10", ",", "Ġ24", ">", "Ġe", "(", "1", ");", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġauto", "Ġf", "(", "e", ");", "Ċ", "Ġ", "Ġauto", "Ġg", "(", "f", ");", "Ċ", "Ġ", "Ġg", "Ġ=", "Ġg", ";", "Ġ//", "ĠSuppress", "Ġunused", "Ġwarning", ".", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::385", "code": "// 2000-08-02 bkoz\n\n// Copyright (C) 2000-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n \n#include <iostream>\n\n// Interactive test, to be exercised as follows:\n// assign stderr to stdout in shell command line,\n// pipe stdout to cat process and/or redirect stdout to file.\n// a.out >& output\n// \"hello fine world\\n\" should be written to stdout, and output, in\n// proper order.  This is a version of the scott snyder test taken\n// from: http://gcc.gnu.org/ml/libstdc++/1999-q4/msg00108.html\nvoid test04()\n{\n  using namespace std;\n\n  cout << \"hello \";\n  cout.flush();\n  cerr << \"fine \";\n  cerr.flush();\n  cout << \"world\" << endl;\n  cout.flush();\n}\n\nint \nmain()\n{\n  test04();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ2000", "-", "08", "-", "02", "Ġb", "ko", "z", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "-", "202", "1", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "//", "ĠInter", "active", "Ġtest", ",", "Ġto", "Ġbe", "Ġex", "er", "ci", "sed", "Ġas", "Ġfollows", ":", "Ċ", "//", "Ġassign", "Ġstderr", "Ġto", "Ġstdout", "Ġin", "Ġshell", "Ġcommand", "Ġline", ",", "Ċ", "//", "Ġpipe", "Ġstdout", "Ġto", "Ġcat", "Ġprocess", "Ġand", "/", "or", "Ġredirect", "Ġstdout", "Ġto", "Ġfile", ".", "Ċ", "//", "Ġa", ".", "out", "Ġ>&", "Ġoutput", "Ċ", "//", "Ġ\"", "hello", "Ġfine", "Ġworld", "\\", "n", "\"", "Ġshould", "Ġbe", "Ġwritten", "Ġto", "Ġstdout", ",", "Ġand", "Ġoutput", ",", "Ġin", "Ċ", "//", "Ġproper", "Ġorder", ".", "Ġ", "ĠThis", "Ġis", "Ġa", "Ġversion", "Ġof", "Ġthe", "Ġsco", "tt", "Ġsn", "y", "der", "Ġtest", "Ġtaken", "Ċ", "//", "Ġfrom", ":", "Ġhttp", "://", "gcc", ".", "gnu", ".", "org", "/", "ml", "/", "lib", "std", "c", "++", "/", "1999", "-", "q", "4", "/", "msg", "00", "108", ".", "html", "Ċ", "void", "Ġtest", "04", "()", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "hello", "Ġ\";", "Ċ", "Ġ", "Ġcout", ".", "flush", "();", "Ċ", "Ġ", "Ġcerr", "Ġ<<", "Ġ\"", "fine", "Ġ\";", "Ċ", "Ġ", "Ġcerr", ".", "flush", "();", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "world", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġcout", ".", "flush", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġ", "Ċ", "main", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "04", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::386", "code": "// { dg-do run { target c++11 } }\n//\n// Copyright (C) 2012-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <array>\n#include <testsuite_hooks.h>\n\nstruct A\n{\n  bool valid = true;\n  ~A() { valid = false; }\n};\n\nvoid\ntest01()\n{\n  const std::array<A, 1> a;\n  const A& aa = a.at(0);\n  VERIFY(aa.valid);\n}\n\nint main()\n{\n  test01();\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġrun", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "202", "1", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "array", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "struct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġvalid", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ~", "A", "()", "Ġ{", "Ġvalid", "Ġ=", "Ġfalse", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "array", "<", "A", ",", "Ġ1", ">", "Ġa", ";", "Ċ", "Ġ", "Ġconst", "ĠA", "&", "Ġaa", "Ġ=", "Ġa", ".", "at", "(", "0", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "aa", ".", "valid", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::387", "code": "// Copyright 2013 The Flutter Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"flutter/lib/ui/painting/shader.h\"\n\n#include \"flutter/lib/ui/ui_dart_state.h\"\n\nnamespace flutter {\n\nIMPLEMENT_WRAPPERTYPEINFO(ui, Shader);\n\nShader::Shader(flutter::SkiaGPUObject<SkShader> shader)\n    : shader_(std::move(shader)) {}\n\nShader::~Shader() = default;\n\n}  // namespace flutter\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2013", "ĠThe", "ĠFl", "utter", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "fl", "utter", "/", "lib", "/", "ui", "/", "paint", "ing", "/", "shader", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "fl", "utter", "/", "lib", "/", "ui", "/", "ui", "_", "dart", "_", "state", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġfl", "utter", "Ġ{", "Ċ", "Ċ", "IMPLEMENT", "_", "WRAPPER", "TYPE", "INFO", "(", "ui", ",", "ĠShader", ");", "Ċ", "Ċ", "Shader", "::", "Shader", "(", "fl", "utter", "::", "Sk", "ia", "GPU", "Object", "<", "Sk", "Shader", ">", "Ġshader", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġshader", "_(", "std", "::", "move", "(", "shader", "))", "Ġ{}", "Ċ", "Ċ", "Shader", "::~", "Shader", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġfl", "utter", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::388", "code": "#include \"dnsdist.hh\"\n#include \"lock.hh\"\n\nunsigned int Rings::numDistinctRequestors()\n{\n  std::set<ComboAddress, ComboAddress::addressOnlyLessThan> s;\n  WriteLock wl(&queryLock);\n  for(const auto& q : queryRing)\n    s.insert(q.requestor);\n  return s.size();\n}\n\nvector<pair<unsigned int,ComboAddress> > Rings::getTopBandwidth(unsigned int numentries)\n{\n  map<ComboAddress, unsigned int, ComboAddress::addressOnlyLessThan> counts;\n  {\n    WriteLock wl(&queryLock);\n    for(const auto& q : queryRing)\n      counts[q.requestor]+=q.size;\n  }\n\n  {\n    std::lock_guard<std::mutex> lock(respMutex);\n    for(const auto& r : respRing)\n      counts[r.requestor]+=r.size;\n  }\n\n  typedef vector<pair<unsigned int, ComboAddress>> ret_t;\n  ret_t ret;\n  for(const auto& p : counts)\n    ret.push_back({p.second, p.first});\n  numentries = ret.size() < numentries ? ret.size() : numentries;\n  partial_sort(ret.begin(), ret.begin()+numentries, ret.end(), [](const ret_t::value_type&a, const ret_t::value_type&b)\n\t       {\n\t\t return(b.second < a.second);\n\t       });\n  ret.resize(numentries);\n  return ret;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "dns", "dist", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "lock", ".", "hh", "\"", "Ċ", "Ċ", "unsigned", "Ġint", "ĠR", "ings", "::", "num", "Distinct", "Request", "ors", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "set", "<", "Combo", "Address", ",", "ĠCombo", "Address", "::", "address", "Only", "LessThan", ">", "Ġs", ";", "Ċ", "Ġ", "ĠWrite", "Lock", "Ġwl", "(&", "query", "Lock", ");", "Ċ", "Ġ", "Ġfor", "(", "const", "Ġauto", "&", "Ġq", "Ġ:", "Ġquery", "Ring", ")", "Ċ", "ĠĠĠ", "Ġs", ".", "insert", "(", "q", ".", "request", "or", ");", "Ċ", "Ġ", "Ġreturn", "Ġs", ".", "size", "();", "Ċ", "}", "Ċ", "Ċ", "vector", "<", "pair", "<", "unsigned", "Ġint", ",", "Combo", "Address", ">", "Ġ>", "ĠR", "ings", "::", "getTop", "Bandwidth", "(", "unsigned", "Ġint", "Ġn", "ument", "ries", ")", "Ċ", "{", "Ċ", "Ġ", "Ġmap", "<", "Combo", "Address", ",", "Ġunsigned", "Ġint", ",", "ĠCombo", "Address", "::", "address", "Only", "LessThan", ">", "Ġcounts", ";", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠWrite", "Lock", "Ġwl", "(&", "query", "Lock", ");", "Ċ", "ĠĠĠ", "Ġfor", "(", "const", "Ġauto", "&", "Ġq", "Ġ:", "Ġquery", "Ring", ")", "Ċ", "ĠĠĠĠĠ", "Ġcounts", "[", "q", ".", "request", "or", "]+=", "q", ".", "size", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "lock", "_", "guard", "<", "std", "::", "mutex", ">", "Ġlock", "(", "resp", "Mutex", ");", "Ċ", "ĠĠĠ", "Ġfor", "(", "const", "Ġauto", "&", "Ġr", "Ġ:", "Ġresp", "Ring", ")", "Ċ", "ĠĠĠĠĠ", "Ġcounts", "[", "r", ".", "request", "or", "]+=", "r", ".", "size", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġtypedef", "Ġvector", "<", "pair", "<", "unsigned", "Ġint", ",", "ĠCombo", "Address", ">>", "Ġret", "_", "t", ";", "Ċ", "Ġ", "Ġret", "_", "t", "Ġret", ";", "Ċ", "Ġ", "Ġfor", "(", "const", "Ġauto", "&", "Ġp", "Ġ:", "Ġcounts", ")", "Ċ", "ĠĠĠ", "Ġret", ".", "push", "_", "back", "({", "p", ".", "second", ",", "Ġp", ".", "first", "});", "Ċ", "Ġ", "Ġn", "ument", "ries", "Ġ=", "Ġret", ".", "size", "()", "Ġ<", "Ġn", "ument", "ries", "Ġ?", "Ġret", ".", "size", "()", "Ġ:", "Ġn", "ument", "ries", ";", "Ċ", "Ġ", "Ġpartial", "_", "sort", "(", "ret", ".", "begin", "(),", "Ġret", ".", "begin", "()+", "n", "ument", "ries", ",", "Ġret", ".", "end", "(),", "Ġ[](", "const", "Ġret", "_", "t", "::", "value", "_", "type", "&", "a", ",", "Ġconst", "Ġret", "_", "t", "::", "value", "_", "type", "&", "b", ")", "Ċ", "ĉĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĉĉ", "Ġreturn", "(", "b", ".", "second", "Ġ<", "Ġa", ".", "second", ");", "Ċ", "ĉĠĠĠĠĠĠ", "Ġ});", "Ċ", "Ġ", "Ġret", ".", "resize", "(", "n", "ument", "ries", ");", "Ċ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::389", "code": "/****************************************************************\n *  RetroShare GUI is distributed under the following license:\n *\n *  Copyright (C) 2012 by Thunder\n *\n *  This program is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU General Public License\n *  as published by the Free Software Foundation; either version 2\n *  of the License, or (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, write to the Free Software\n *  Foundation, Inc., 51 Franklin Street, Fifth Floor,\n *  Boston, MA  02110-1301, USA.\n ****************************************************************/\n\n#include \"FeedReaderNotify.h\"\n\nFeedReaderNotify::FeedReaderNotify() : QObject()\n{\n}\n\nvoid FeedReaderNotify::notifyFeedChanged(const std::string &feedId, int type)\n{\n\temit feedChanged(QString::fromStdString(feedId), type);\n}\n\nvoid FeedReaderNotify::notifyMsgChanged(const std::string &feedId, const std::string &msgId, int type)\n{\n\temit msgChanged(QString::fromStdString(feedId), QString::fromStdString(msgId), type);\n}\n", "code_tokens": ["Ġ/", "****************************************************************", "Ċ", "Ġ*", "Ġ", "ĠRet", "ro", "Share", "ĠGUI", "Ġis", "Ġdistributed", "Ġunder", "Ġthe", "Ġfollowing", "Ġlicense", ":", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "Ġby", "ĠTh", "under", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ*", "Ġ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "Ċ", "Ġ*", "Ġ", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "Ġ*********************************************************", "*******/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Feed", "Reader", "Notify", ".", "h", "\"", "Ċ", "Ċ", "Feed", "Reader", "Notify", "::", "Feed", "Reader", "Notify", "()", "Ġ:", "ĠQObject", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFeed", "Reader", "Notify", "::", "notify", "Feed", "Changed", "(", "const", "Ġstd", "::", "string", "Ġ&", "feed", "Id", ",", "Ġint", "Ġtype", ")", "Ċ", "{", "Ċ", "ĉ", "emit", "Ġfeed", "Changed", "(", "QString", "::", "fromStdString", "(", "feed", "Id", "),", "Ġtype", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFeed", "Reader", "Notify", "::", "notify", "Msg", "Changed", "(", "const", "Ġstd", "::", "string", "Ġ&", "feed", "Id", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "msg", "Id", ",", "Ġint", "Ġtype", ")", "Ċ", "{", "Ċ", "ĉ", "emit", "Ġmsg", "Changed", "(", "QString", "::", "fromStdString", "(", "feed", "Id", "),", "ĠQString", "::", "fromStdString", "(", "msg", "Id", "),", "Ġtype", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::390", "code": "// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include <stddef.h>\n#include <stdint.h>\n\n#include \"base/strings/string_piece.h\"\n#include \"net/quic/core/crypto/crypto_framer.h\"\n\n// Entry point for LibFuzzer.\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\n  base::StringPiece crypto_input(reinterpret_cast<const char*>(data), size);\n  std::unique_ptr<net::CryptoHandshakeMessage> handshake_message(\n      net::CryptoFramer::ParseMessage(crypto_input));\n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2015", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "def", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "strings", "/", "string", "_", "piece", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "net", "/", "qu", "ic", "/", "core", "/", "crypto", "/", "crypto", "_", "framer", ".", "h", "\"", "Ċ", "Ċ", "//", "ĠEntry", "Ġpoint", "Ġfor", "ĠLib", "Fuzz", "er", ".", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "ĠLLVM", "Fuzz", "er", "Test", "One", "Input", "(", "const", "Ġuint", "8", "_", "t", "*", "Ġdata", ",", "Ġsize", "_", "t", "Ġsize", ")", "Ġ{", "Ċ", "Ġ", "Ġbase", "::", "String", "Piece", "Ġcrypto", "_", "input", "(", "reinterpret", "_", "cast", "<", "const", "Ġchar", "*>(", "data", "),", "Ġsize", ");", "Ċ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "net", "::", "Crypto", "Handshake", "Message", ">", "Ġhandshake", "_", "message", "(", "Ċ", "ĠĠĠĠĠ", "Ġnet", "::", "Crypto", "Framer", "::", "Parse", "Message", "(", "crypto", "_", "input", "));", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::391", "code": "#include \"flow-stats-in.hh\"\n\nnamespace vigil {\n\nFlow_stats::Flow_stats(const ofp_flow_stats* ofs)\n{\n    *(ofp_flow_stats*) this = *ofs;\n    const ofp_action_header* headers = ofs->actions;\n    size_t n_actions = (ntohs(ofs->length) - sizeof *ofs) / sizeof *headers;\n    v_actions.assign(headers, headers + n_actions);\n}\n\nFlow_stats_in_event::Flow_stats_in_event(const datapathid& dpid,\n                                         const ofp_stats_reply *osr,\n                                         std::auto_ptr<Buffer> buf)\n    : Event(static_get_name()),\n      Ofp_msg_event(&osr->header, buf),\n      more((osr->flags & htons(OFPSF_REPLY_MORE)) != 0)\n{\n    datapath_id  = dpid;\n\n    size_t flow_len = htons(osr->header.length) - sizeof *osr;\n    const ofp_flow_stats* ofs = (ofp_flow_stats*) osr->body;\n    while (flow_len >= sizeof *ofs) {\n        size_t length = ntohs(ofs->length);\n        if (length > flow_len) {\n            break;\n        }\n        flows.push_back(Flow_stats(ofs));\n        ofs = (const ofp_flow_stats*)((const char*) ofs + length);\n        flow_len -= length;\n    }\n}\n\n} // namespace vigil\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "flow", "-", "stats", "-", "in", ".", "hh", "\"", "Ċ", "Ċ", "namespace", "Ġv", "ig", "il", "Ġ{", "Ċ", "Ċ", "Flow", "_", "stats", "::", "Flow", "_", "stats", "(", "const", "Ġof", "p", "_", "flow", "_", "stats", "*", "Ġofs", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ*(", "of", "p", "_", "flow", "_", "stats", "*)", "Ġthis", "Ġ=", "Ġ*", "ofs", ";", "Ċ", "ĠĠĠ", "Ġconst", "Ġof", "p", "_", "action", "_", "header", "*", "Ġheaders", "Ġ=", "Ġofs", "->", "actions", ";", "Ċ", "ĠĠĠ", "Ġsize", "_", "t", "Ġn", "_", "actions", "Ġ=", "Ġ(", "nto", "hs", "(", "ofs", "->", "length", ")", "Ġ-", "Ġsizeof", "Ġ*", "ofs", ")", "Ġ/", "Ġsizeof", "Ġ*", "headers", ";", "Ċ", "ĠĠĠ", "Ġv", "_", "actions", ".", "assign", "(", "headers", ",", "Ġheaders", "Ġ+", "Ġn", "_", "actions", ");", "Ċ", "}", "Ċ", "Ċ", "Flow", "_", "stats", "_", "in", "_", "event", "::", "Flow", "_", "stats", "_", "in", "_", "event", "(", "const", "Ġdata", "path", "id", "&", "Ġd", "pid", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġof", "p", "_", "stats", "_", "reply", "Ġ*", "os", "r", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "auto", "_", "ptr", "<", "Buffer", ">", "Ġbuf", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠEvent", "(", "static", "_", "get", "_", "name", "()),", "Ċ", "ĠĠĠĠĠ", "ĠO", "fp", "_", "msg", "_", "event", "(&", "os", "r", "->", "header", ",", "Ġbuf", "),", "Ċ", "ĠĠĠĠĠ", "Ġmore", "((", "os", "r", "->", "flags", "Ġ&", "Ġhtons", "(", "OF", "PS", "F", "_", "REPLY", "_", "MORE", "))", "Ġ!=", "Ġ0", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdata", "path", "_", "id", "Ġ", "Ġ=", "Ġd", "pid", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġsize", "_", "t", "Ġflow", "_", "len", "Ġ=", "Ġhtons", "(", "os", "r", "->", "header", ".", "length", ")", "Ġ-", "Ġsizeof", "Ġ*", "os", "r", ";", "Ċ", "ĠĠĠ", "Ġconst", "Ġof", "p", "_", "flow", "_", "stats", "*", "Ġofs", "Ġ=", "Ġ(", "of", "p", "_", "flow", "_", "stats", "*)", "Ġos", "r", "->", "body", ";", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "flow", "_", "len", "Ġ>=", "Ġsizeof", "Ġ*", "ofs", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsize", "_", "t", "Ġlength", "Ġ=", "Ġntohs", "(", "ofs", "->", "length", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "length", "Ġ>", "Ġflow", "_", "len", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġflow", "s", ".", "push", "_", "back", "(", "Flow", "_", "stats", "(", "ofs", "));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġofs", "Ġ=", "Ġ(", "const", "Ġof", "p", "_", "flow", "_", "stats", "*)", "((", "const", "Ġchar", "*)", "Ġofs", "Ġ+", "Ġlength", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġflow", "_", "len", "Ġ-=", "Ġlength", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġv", "ig", "il", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::392", "code": "// Copyright Louis Dionne 2013-2017\n// Distributed under the Boost Software License, Version 1.0.\n// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#include <boost/hana/basic_tuple.hpp>\nnamespace hana = boost::hana;\n\n\ntemplate <int i>\nstruct x { };\n\n\nint main() {\n    constexpr hana::basic_tuple<> empty{}; (void)empty;\n\n    constexpr hana::basic_tuple<int, float> xs{1, 2.3f};\n    constexpr auto ys = hana::basic_tuple<int, float>{1, 2.3f};\n    constexpr auto copy = ys; (void)copy;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "ĠL", "ou", "is", "ĠD", "ion", "ne", "Ġ2013", "-", "2017", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", ".", "md", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "hana", "/", "basic", "_", "tuple", ".", "hpp", ">", "Ċ", "namespace", "Ġh", "ana", "Ġ=", "Ġboost", "::", "hana", ";", "Ċ", "Ċ", "Ċ", "template", "Ġ<", "int", "Ġi", ">", "Ċ", "struct", "Ġx", "Ġ{", "Ġ};", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġconstexpr", "Ġh", "ana", "::", "basic", "_", "tuple", "<>", "Ġempty", "{};", "Ġ(", "void", ")", "empty", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġconstexpr", "Ġh", "ana", "::", "basic", "_", "tuple", "<", "int", ",", "Ġfloat", ">", "Ġxs", "{", "1", ",", "Ġ2", ".", "3", "f", "};", "Ċ", "ĠĠĠ", "Ġconstexpr", "Ġauto", "Ġys", "Ġ=", "Ġh", "ana", "::", "basic", "_", "tuple", "<", "int", ",", "Ġfloat", ">{", "1", ",", "Ġ2", ".", "3", "f", "};", "Ċ", "ĠĠĠ", "Ġconstexpr", "Ġauto", "Ġcopy", "Ġ=", "Ġys", ";", "Ġ(", "void", ")", "copy", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::393", "code": "// This file has been generated by Py++.\n\n#ifndef PropertyLinkDefinitionVector2f_hpp__pyplusplus_wrapper\n#define PropertyLinkDefinitionVector2f_hpp__pyplusplus_wrapper\n\nvoid register_PropertyLinkDefinitionVector2f_class();\n\n#endif//PropertyLinkDefinitionVector2f_hpp__pyplusplus_wrapper\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġhas", "Ġbeen", "Ġgenerated", "Ġby", "ĠPy", "++", ".", "Ċ", "Ċ", "#", "ifndef", "ĠProperty", "Link", "Definition", "Vector", "2", "f", "_", "hpp", "__", "py", "plus", "plus", "_", "wrapper", "Ċ", "#", "define", "ĠProperty", "Link", "Definition", "Vector", "2", "f", "_", "hpp", "__", "py", "plus", "plus", "_", "wrapper", "Ċ", "Ċ", "void", "Ġregister", "_", "Property", "Link", "Definition", "Vector", "2", "f", "_", "class", "();", "Ċ", "Ċ", "#", "endif", "//", "Property", "Link", "Definition", "Vector", "2", "f", "_", "hpp", "__", "py", "plus", "plus", "_", "wrapper", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::394", "code": "// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"components/autofill_assistant/browser/chip.h\"\n#include \"components/autofill_assistant/browser/user_action.h\"\n\nnamespace autofill_assistant {\n\nChip::Chip() = default;\nChip::~Chip() = default;\nChip::Chip(const Chip& other) = default;\nChip::Chip(const ChipProto& proto)\n    : type(proto.type()),\n      icon(proto.icon()),\n      text(proto.text()),\n      sticky(proto.sticky()),\n      content_description(proto.content_description()),\n      is_content_description_set(proto.has_content_description()) {}\n\nbool Chip::empty() const {\n  return type == UNKNOWN_CHIP_TYPE && text.empty() && icon == NO_ICON;\n}\n\nvoid SetDefaultChipType(std::vector<UserAction>* user_actions) {\n  for (UserAction& user_action : *user_actions) {\n    if (user_action.chip().empty())\n      continue;\n\n    if (user_action.chip().type == UNKNOWN_CHIP_TYPE) {\n      // Assume chips with unknown type are normal actions.\n      user_action.chip().type = NORMAL_ACTION;\n    }\n  }\n}\n\n}  // namespace autofill_assistant\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ201", "8", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "components", "/", "aut", "of", "ill", "_", "ass", "istant", "/", "browser", "/", "chip", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "components", "/", "aut", "of", "ill", "_", "ass", "istant", "/", "browser", "/", "user", "_", "action", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġaut", "of", "ill", "_", "ass", "istant", "Ġ{", "Ċ", "Ċ", "Chip", "::", "Chip", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Chip", "::~", "Chip", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Chip", "::", "Chip", "(", "const", "ĠChip", "&", "Ġother", ")", "Ġ=", "Ġdefault", ";", "Ċ", "Chip", "::", "Chip", "(", "const", "ĠChip", "Proto", "&", "Ġproto", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġtype", "(", "proto", ".", "type", "()),", "Ċ", "ĠĠĠĠĠ", "Ġicon", "(", "proto", ".", "icon", "()),", "Ċ", "ĠĠĠĠĠ", "Ġtext", "(", "proto", ".", "text", "()),", "Ċ", "ĠĠĠĠĠ", "Ġsticky", "(", "proto", ".", "sticky", "()),", "Ċ", "ĠĠĠĠĠ", "Ġcontent", "_", "description", "(", "proto", ".", "content", "_", "description", "()),", "Ċ", "ĠĠĠĠĠ", "Ġis", "_", "content", "_", "description", "_", "set", "(", "proto", ".", "has", "_", "content", "_", "description", "())", "Ġ{}", "Ċ", "Ċ", "bool", "ĠChip", "::", "empty", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġtype", "Ġ==", "ĠUNKNOWN", "_", "CHIP", "_", "TYPE", "Ġ&&", "Ġtext", ".", "empty", "()", "Ġ&&", "Ġicon", "Ġ==", "ĠNO", "_", "ICON", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSet", "Default", "Chip", "Type", "(", "std", "::", "vector", "<", "User", "Action", ">*", "Ġuser", "_", "actions", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "User", "Action", "&", "Ġuser", "_", "action", "Ġ:", "Ġ*", "user", "_", "actions", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "user", "_", "action", ".", "chip", "().", "empty", "())", "Ċ", "ĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "user", "_", "action", ".", "chip", "().", "type", "Ġ==", "ĠUNKNOWN", "_", "CHIP", "_", "TYPE", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ//", "ĠAssume", "Ġchips", "Ġwith", "Ġunknown", "Ġtype", "Ġare", "Ġnormal", "Ġactions", ".", "Ċ", "ĠĠĠĠĠ", "Ġuser", "_", "action", ".", "chip", "().", "type", "Ġ=", "ĠNORMAL", "_", "ACTION", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġaut", "of", "ill", "_", "ass", "istant", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::395", "code": "#include <string>\n\n#include <opm/common/OpmLog/OpmLog.hpp>\n\n#include \"export.hpp\"\n\nnamespace {\n\nvoid info(const std::string& msg) {\n    OpmLog::info(msg);\n}\n\nvoid warning(const std::string& msg) {\n    OpmLog::warning(msg);\n}\n\nvoid error(const std::string& msg) {\n    OpmLog::error(msg);\n}\n\nvoid problem(const std::string& msg) {\n    OpmLog::problem(msg);\n}\n\nvoid bug(const std::string& msg) {\n    OpmLog::bug(msg);\n}\n\nvoid debug(const std::string& msg) {\n    OpmLog::debug(msg);\n}\n\nvoid note(const std::string& msg) {\n    OpmLog::note(msg);\n}\n\n}\n\nvoid python::common::export_Log(py::module& module)\n{\n    py::class_<OpmLog>(module, \"OpmLog\")\n        .def_static(\"info\", info )\n        .def_static(\"warning\", warning)\n        .def_static(\"error\", error)\n        .def_static(\"problem\", problem)\n        .def_static(\"bug\", bug)\n        .def_static(\"debug\", debug)\n        .def_static(\"note\", note);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "op", "m", "/", "common", "/", "Op", "m", "Log", "/", "Op", "m", "Log", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "export", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "void", "Ġinfo", "(", "const", "Ġstd", "::", "string", "&", "Ġmsg", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠO", "pm", "Log", "::", "info", "(", "msg", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġwarning", "(", "const", "Ġstd", "::", "string", "&", "Ġmsg", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠO", "pm", "Log", "::", "warning", "(", "msg", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġerror", "(", "const", "Ġstd", "::", "string", "&", "Ġmsg", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠO", "pm", "Log", "::", "error", "(", "msg", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġproblem", "(", "const", "Ġstd", "::", "string", "&", "Ġmsg", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠO", "pm", "Log", "::", "problem", "(", "msg", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbug", "(", "const", "Ġstd", "::", "string", "&", "Ġmsg", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠO", "pm", "Log", "::", "bug", "(", "msg", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdebug", "(", "const", "Ġstd", "::", "string", "&", "Ġmsg", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠO", "pm", "Log", "::", "debug", "(", "msg", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġnote", "(", "const", "Ġstd", "::", "string", "&", "Ġmsg", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠO", "pm", "Log", "::", "note", "(", "msg", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpython", "::", "common", "::", "export", "_", "Log", "(", "py", "::", "module", "&", "Ġmodule", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġpy", "::", "class", "_<", "Op", "m", "Log", ">(", "module", ",", "Ġ\"", "Op", "m", "Log", "\")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "_", "static", "(\"", "info", "\",", "Ġinfo", "Ġ)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "_", "static", "(\"", "warning", "\",", "Ġwarning", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "_", "static", "(\"", "error", "\",", "Ġerror", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "_", "static", "(\"", "problem", "\",", "Ġproblem", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "_", "static", "(\"", "bug", "\",", "Ġbug", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "_", "static", "(\"", "debug", "\",", "Ġdebug", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "_", "static", "(\"", "note", "\",", "Ġnote", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::396", "code": "// Checks that we don't fall over on fields that depend on expressions.\n//- @T defines/binding TyvarT\ntemplate <typename T> struct S {\n  T t;\n  //- @f ref DepF\n  //- DepF.node/kind lookup\n  //- DepF.text f\n  //- !{DepF param.0 Anything}\n  //- @thing ref DepThing\n  //- DepThing.node/kind lookup\n  //- DepThing param.0 TyvarT\n  int i = (t.thing(3) + 4).f;\n};\n", "code_tokens": ["Ġ//", "ĠChecks", "Ġthat", "Ġwe", "Ġdon", "'t", "Ġfall", "Ġover", "Ġon", "Ġfields", "Ġthat", "Ġdepend", "Ġon", "Ġexpressions", ".", "Ċ", "//", "-", "Ġ@", "T", "Ġdefines", "/", "binding", "ĠTy", "var", "T", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ġstruct", "ĠS", "Ġ{", "Ċ", "Ġ", "ĠT", "Ġt", ";", "Ċ", "Ġ", "Ġ//", "-", "Ġ@", "f", "Ġref", "ĠDep", "F", "Ċ", "Ġ", "Ġ//", "-", "ĠDep", "F", ".", "node", "/", "kind", "Ġlookup", "Ċ", "Ġ", "Ġ//", "-", "ĠDep", "F", ".", "text", "Ġf", "Ċ", "Ġ", "Ġ//", "-", "Ġ!", "{", "Dep", "F", "Ġparam", ".", "0", "ĠAnything", "}", "Ċ", "Ġ", "Ġ//", "-", "Ġ@", "thing", "Ġref", "ĠDep", "Thing", "Ċ", "Ġ", "Ġ//", "-", "ĠDep", "Thing", ".", "node", "/", "kind", "Ġlookup", "Ċ", "Ġ", "Ġ//", "-", "ĠDep", "Thing", "Ġparam", ".", "0", "ĠTy", "var", "T", "Ċ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ(", "t", ".", "thing", "(", "3", ")", "Ġ+", "Ġ4", ").", "f", ";", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::397", "code": "// Copyright 2013 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"services/device/geolocation/wifi_data_provider.h\"\n\n#include \"base/bind.h\"\n#include \"base/callback.h\"\n#include \"base/location.h\"\n#include \"base/threading/thread_task_runner_handle.h\"\n\nnamespace device {\n\nWifiDataProvider::WifiDataProvider()\n    : client_task_runner_(base::ThreadTaskRunnerHandle::Get()) {\n  DCHECK(client_task_runner_);\n}\n\nWifiDataProvider::~WifiDataProvider() = default;\n\nvoid WifiDataProvider::AddCallback(WifiDataUpdateCallback* callback) {\n  callbacks_.insert(callback);\n}\n\nbool WifiDataProvider::RemoveCallback(WifiDataUpdateCallback* callback) {\n  return callbacks_.erase(callback) == 1;\n}\n\nbool WifiDataProvider::has_callbacks() const {\n  return !callbacks_.empty();\n}\n\nvoid WifiDataProvider::RunCallbacks() {\n  client_task_runner_->PostTask(\n      FROM_HERE, base::BindOnce(&WifiDataProvider::DoRunCallbacks, this));\n}\n\nbool WifiDataProvider::CalledOnClientThread() const {\n  return client_task_runner()->BelongsToCurrentThread();\n}\n\nvoid WifiDataProvider::DoRunCallbacks() {\n  // It's possible that all the callbacks went away whilst this task was\n  // pending. This is fine; the loop will be a no-op.\n  CallbackSet::const_iterator iter = callbacks_.begin();\n  while (iter != callbacks_.end()) {\n    WifiDataUpdateCallback* callback = *iter;\n    ++iter;  // Advance iter before running, in case callback unregisters.\n    callback->Run();\n  }\n}\n\n}  // namespace device\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2013", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "services", "/", "device", "/", "geo", "location", "/", "wifi", "_", "data", "_", "provider", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "bind", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "callback", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "location", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "thread", "ing", "/", "thread", "_", "task", "_", "runner", "_", "handle", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġdevice", "Ġ{", "Ċ", "Ċ", "Wifi", "DataProvider", "::", "Wifi", "DataProvider", "()", "Ċ", "ĠĠĠ", "Ġ:", "Ġclient", "_", "task", "_", "runner", "_(", "base", "::", "Thread", "Task", "Runner", "Handle", "::", "Get", "())", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "(", "client", "_", "task", "_", "runner", "_);", "Ċ", "}", "Ċ", "Ċ", "Wifi", "DataProvider", "::~", "Wifi", "DataProvider", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "void", "ĠW", "ifi", "DataProvider", "::", "Add", "Callback", "(", "Wifi", "Data", "Update", "Callback", "*", "Ġcallback", ")", "Ġ{", "Ċ", "Ġ", "Ġcallbacks", "_.", "insert", "(", "callback", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠW", "ifi", "DataProvider", "::", "Remove", "Callback", "(", "Wifi", "Data", "Update", "Callback", "*", "Ġcallback", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġcallbacks", "_.", "erase", "(", "callback", ")", "Ġ==", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠW", "ifi", "DataProvider", "::", "has", "_", "callbacks", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġ!", "callbacks", "_.", "empty", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠW", "ifi", "DataProvider", "::", "Run", "Callbacks", "()", "Ġ{", "Ċ", "Ġ", "Ġclient", "_", "task", "_", "runner", "_->", "Post", "Task", "(", "Ċ", "ĠĠĠĠĠ", "ĠFROM", "_", "HERE", ",", "Ġbase", "::", "Bind", "Once", "(&", "Wifi", "DataProvider", "::", "Do", "Run", "Callbacks", ",", "Ġthis", "));", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠW", "ifi", "DataProvider", "::", "Called", "On", "Client", "Thread", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġclient", "_", "task", "_", "runner", "()->", "Bel", "ongs", "To", "CurrentThread", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠW", "ifi", "DataProvider", "::", "Do", "Run", "Callbacks", "()", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠIt", "'s", "Ġpossible", "Ġthat", "Ġall", "Ġthe", "Ġcallbacks", "Ġwent", "Ġaway", "Ġwh", "il", "st", "Ġthis", "Ġtask", "Ġwas", "Ċ", "Ġ", "Ġ//", "Ġpending", ".", "ĠThis", "Ġis", "Ġfine", ";", "Ġthe", "Ġloop", "Ġwill", "Ġbe", "Ġa", "Ġno", "-", "op", ".", "Ċ", "Ġ", "ĠCallback", "Set", "::", "const", "_", "iterator", "Ġiter", "Ġ=", "Ġcallbacks", "_.", "begin", "();", "Ċ", "Ġ", "Ġwhile", "Ġ(", "iter", "Ġ!=", "Ġcallbacks", "_.", "end", "())", "Ġ{", "Ċ", "ĠĠĠ", "ĠW", "ifi", "Data", "Update", "Callback", "*", "Ġcallback", "Ġ=", "Ġ*", "iter", ";", "Ċ", "ĠĠĠ", "Ġ++", "iter", ";", "Ġ", "Ġ//", "ĠAdvance", "Ġiter", "Ġbefore", "Ġrunning", ",", "Ġin", "Ġcase", "Ġcallback", "Ġun", "registers", ".", "Ċ", "ĠĠĠ", "Ġcallback", "->", "Run", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġdevice", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::398", "code": "// Build don't link:\n// Origin: Jakub Jelinek <jakub@redhat.com>\n\nnamespace N\n{\n  class X;\n  template <class T>\n  class Y\n  {\n  public:\n    inline Y () {}\n    inline operator const Y<X> & () const\n    {\n      return *reinterpret_cast<const Y<X> *>(this);\n    }\n  };\n}\nclass bar\n{\npublic:\n  inline bar () {}\n  inline bar (const ::N::Y< ::N::X>& a);\n};\n\nclass foo\n{\n  bool b;\npublic:\n  foo();\n  void x () throw(bar);\n};\nvoid foo::x() throw(bar)\n{\n  if (!b) throw bar (static_cast<::N::X*>(this));\t// ERROR - parse error\n}\n", "code_tokens": ["Ġ//", "ĠBuild", "Ġdon", "'t", "Ġlink", ":", "Ċ", "//", "ĠOrigin", ":", "ĠJ", "ak", "ub", "ĠJ", "eline", "k", "Ġ<", "j", "ak", "ub", "@", "red", "hat", ".", "com", ">", "Ċ", "Ċ", "namespace", "ĠN", "Ċ", "{", "Ċ", "Ġ", "Ġclass", "ĠX", ";", "Ċ", "Ġ", "Ġtemplate", "Ġ<", "class", "ĠT", ">", "Ċ", "Ġ", "Ġclass", "ĠY", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "Ġinline", "ĠY", "Ġ()", "Ġ{}", "Ċ", "ĠĠĠ", "Ġinline", "Ġoperator", "Ġconst", "ĠY", "<", "X", ">", "Ġ&", "Ġ()", "Ġconst", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġ*", "reinterpret", "_", "cast", "<", "const", "ĠY", "<", "X", ">", "Ġ*>(", "this", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ};", "Ċ", "}", "Ċ", "class", "Ġbar", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġinline", "Ġbar", "Ġ()", "Ġ{}", "Ċ", "Ġ", "Ġinline", "Ġbar", "Ġ(", "const", "Ġ::", "N", "::", "Y", "<", "Ġ::", "N", "::", "X", ">&", "Ġa", ");", "Ċ", "};", "Ċ", "Ċ", "class", "Ġfoo", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġb", ";", "Ċ", "public", ":", "Ċ", "Ġ", "Ġfoo", "();", "Ċ", "Ġ", "Ġvoid", "Ġx", "Ġ()", "Ġthrow", "(", "bar", ");", "Ċ", "};", "Ċ", "void", "Ġfoo", "::", "x", "()", "Ġthrow", "(", "bar", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(!", "b", ")", "Ġthrow", "Ġbar", "Ġ(", "static", "_", "cast", "<", "::", "N", "::", "X", "*>(", "this", "));", "ĉ", "//", "ĠERROR", "Ġ-", "Ġparse", "Ġerror", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::399", "code": "// PR c++/20148\n// { dg-options \"-fshow-column -ansi -pedantic-errors -Wno-long-long\" }\n\nvoid foo()\n{\n  if (({int c[2];})) ; // { dg-error \"7:ISO C.. forbids\" \"7\" }\n  // { dg-error \"7:could not convert\" \"17\" { target *-*-* } .-1 }\n}\n\nvoid bar()\n{\n  if (({})); // { dg-error \"7:ISO C.. forbids\" \"7\" }\n  // { dg-error \"11:could not convert\" \"11\" { target *-*-* } .-1 }\n}\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "201", "48", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "f", "show", "-", "column", "Ġ-", "ansi", "Ġ-", "ped", "antic", "-", "errors", "Ġ-", "W", "no", "-", "long", "-", "long", "\"", "Ġ}", "Ċ", "Ċ", "void", "Ġfoo", "()", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ((", "{", "int", "Ġc", "[", "2", "];", "}))", "Ġ;", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "7", ":", "ISO", "ĠC", "..", "Ġfor", "b", "ids", "\"", "Ġ\"", "7", "\"", "Ġ}", "Ċ", "Ġ", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "7", ":", "could", "Ġnot", "Ġconvert", "\"", "Ġ\"", "17", "\"", "Ġ{", "Ġtarget", "Ġ*", "-*-*", "Ġ}", "Ġ.", "-", "1", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbar", "()", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ((", "{}", "));", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "7", ":", "ISO", "ĠC", "..", "Ġfor", "b", "ids", "\"", "Ġ\"", "7", "\"", "Ġ}", "Ċ", "Ġ", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "11", ":", "could", "Ġnot", "Ġconvert", "\"", "Ġ\"", "11", "\"", "Ġ{", "Ġtarget", "Ġ*", "-*-*", "Ġ}", "Ġ.", "-", "1", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::400", "code": "/*===================================================================\n\nThe Medical Imaging Interaction Toolkit (MITK)\n\nCopyright (c) German Cancer Research Center,\nDivision of Medical and Biological Informatics.\nAll rights reserved.\n\nThis software is distributed WITHOUT ANY WARRANTY; without\neven the implied warranty of MERCHANTABILITY or FITNESS FOR\nA PARTICULAR PURPOSE.\n\nSee LICENSE.txt or http://www.mitk.org for details.\n\n===================================================================*/\n\n#include \"mitkNavigationDataPassThroughFilter.h\"\n\nmitk::NavigationDataPassThroughFilter::NavigationDataPassThroughFilter()\n{\n}\n\nmitk::NavigationDataPassThroughFilter::~NavigationDataPassThroughFilter()\n{\n}\n\nvoid mitk::NavigationDataPassThroughFilter::GenerateData()\n{\n  // get each input and transfer the data\n  DataObjectPointerArray inputs = this->GetInputs(); //get all inputs\n  for ( unsigned int index = 0; index < inputs.size(); ++index )\n  {\n    // get the needed variables (input and output)\n    const mitk::NavigationData* nd = this->GetInput(index);\n    mitk::NavigationData* output = this->GetOutput(index);\n\n    if ( ! nd || ! output )\n    {\n      MITK_ERROR(\"NavigationDataToNavigationDataFilter\")(\"NavigationDataPassThroughFilter\")\n          << \"Input and output must not be null.\";\n      mitkThrow() << \"Input and output must not be null.\";\n    }\n\n    output->Graft(nd); // copy all information from input to output\n    output->SetDataValid(nd->IsDataValid());\n  }\n}\n", "code_tokens": ["Ġ/*", "================================================================", "===", "Ċ", "Ċ", "The", "ĠM", "ed", "ical", "ĠIm", "aging", "ĠInter", "action", "ĠTool", "kit", "Ġ(", "MIT", "K", ")", "Ċ", "Ċ", "Copyright", "Ġ(", "c", ")", "ĠG", "er", "man", "ĠCan", "cer", "ĠRe", "search", "ĠCenter", ",", "Ċ", "Division", "Ġof", "ĠM", "ed", "ical", "Ġand", "ĠB", "io", "logical", "ĠIn", "form", "atic", "s", ".", "Ċ", "All", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "This", "Ġsoftware", "Ġis", "Ġdistributed", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ċ", "even", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "Ċ", "A", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ċ", "Ċ", "See", "ĠLICENSE", ".", "txt", "Ġor", "Ġhttp", "://", "www", ".", "mit", "k", ".", "org", "Ġfor", "Ġdetails", ".", "Ċ", "Ċ", "================================================================", "===", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "mit", "k", "Navigation", "Data", "Pass", "Through", "Filter", ".", "h", "\"", "Ċ", "Ċ", "mit", "k", "::", "Navigation", "Data", "Pass", "Through", "Filter", "::", "Navigation", "Data", "Pass", "Through", "Filter", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "mit", "k", "::", "Navigation", "Data", "Pass", "Through", "Filter", "::~", "Navigation", "Data", "Pass", "Through", "Filter", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "Ġmitk", "::", "Navigation", "Data", "Pass", "Through", "Filter", "::", "Generate", "Data", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "Ġget", "Ġeach", "Ġinput", "Ġand", "Ġtransfer", "Ġthe", "Ġdata", "Ċ", "Ġ", "ĠData", "Object", "Pointer", "Array", "Ġinputs", "Ġ=", "Ġthis", "->", "Get", "Inputs", "();", "Ġ//", "get", "Ġall", "Ġinputs", "Ċ", "Ġ", "Ġfor", "Ġ(", "Ġunsigned", "Ġint", "Ġindex", "Ġ=", "Ġ0", ";", "Ġindex", "Ġ<", "Ġinputs", ".", "size", "();", "Ġ++", "index", "Ġ)", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "Ġget", "Ġthe", "Ġneeded", "Ġvariables", "Ġ(", "input", "Ġand", "Ġoutput", ")", "Ċ", "ĠĠĠ", "Ġconst", "Ġmitk", "::", "Navigation", "Data", "*", "Ġnd", "Ġ=", "Ġthis", "->", "Get", "Input", "(", "index", ");", "Ċ", "ĠĠĠ", "Ġmitk", "::", "Navigation", "Data", "*", "Ġoutput", "Ġ=", "Ġthis", "->", "GetOutput", "(", "index", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Ġ!", "Ġnd", "Ġ||", "Ġ!", "Ġoutput", "Ġ)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "ĠMIT", "K", "_", "ERROR", "(\"", "Navigation", "Data", "To", "Navigation", "Data", "Filter", "\")", "(\"", "Navigation", "Data", "Pass", "Through", "Filter", "\")", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ<<", "Ġ\"", "Input", "Ġand", "Ġoutput", "Ġmust", "Ġnot", "Ġbe", "Ġnull", ".\";", "Ċ", "ĠĠĠĠĠ", "Ġmitk", "Throw", "()", "Ġ<<", "Ġ\"", "Input", "Ġand", "Ġoutput", "Ġmust", "Ġnot", "Ġbe", "Ġnull", ".\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġoutput", "->", "G", "raft", "(", "nd", ");", "Ġ//", "Ġcopy", "Ġall", "Ġinformation", "Ġfrom", "Ġinput", "Ġto", "Ġoutput", "Ċ", "ĠĠĠ", "Ġoutput", "->", "SetData", "Valid", "(", "nd", "->", "Is", "Data", "Valid", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::401", "code": "// { dg-do run { xfail sparc64-*-elf arm-*-pe } }\n// { dg-options \"-fexceptions\" }\n\n#include <exception>\n#include <stdlib.h>\n\nvoid my_terminate() {\n  exit (0);\t\t// Double faults should call terminate\n}\n\nstruct A {\n  A() { }\n  ~A() {\n    std::set_terminate (my_terminate);\n    throw 1;\t\t// This throws from EH dtor, should call my_terminate\n  }\n};\n\nint main() {\n  try {\n    try {\n      throw 1;\n    } catch (int i) {\n      A a;\t\t// A hit on this EH dtor went to the wrong place\n      throw 1;\n    }\n  } catch (...) {\n    return 1;\n  }\n  return 1;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġrun", "Ġ{", "Ġx", "fail", "Ġs", "parc", "64", "-*", "-", "elf", "Ġarm", "-*", "-", "pe", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "f", "exceptions", "\"", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "exception", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "Ċ", "void", "Ġmy", "_", "terminate", "()", "Ġ{", "Ċ", "Ġ", "Ġexit", "Ġ(", "0", ");", "ĉ", "ĉ", "//", "ĠDouble", "Ġfault", "s", "Ġshould", "Ġcall", "Ġterminate", "Ċ", "}", "Ċ", "Ċ", "struct", "ĠA", "Ġ{", "Ċ", "Ġ", "ĠA", "()", "Ġ{", "Ġ}", "Ċ", "Ġ", "Ġ~", "A", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "set", "_", "terminate", "Ġ(", "my", "_", "terminate", ");", "Ċ", "ĠĠĠ", "Ġthrow", "Ġ1", ";", "ĉ", "ĉ", "//", "ĠThis", "Ġthrows", "Ġfrom", "ĠEH", "Ġdt", "or", ",", "Ġshould", "Ġcall", "Ġmy", "_", "terminate", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġtry", "Ġ{", "Ċ", "ĠĠĠ", "Ġtry", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġthrow", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ġcatch", "Ġ(", "int", "Ġi", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "ĠA", "Ġa", ";", "ĉ", "ĉ", "//", "ĠA", "Ġhit", "Ġon", "Ġthis", "ĠEH", "Ġdt", "or", "Ġwent", "Ġto", "Ġthe", "Ġwrong", "Ġplace", "Ċ", "ĠĠĠĠĠ", "Ġthrow", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ġcatch", "Ġ(...)", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::402", "code": "#ifndef STD_HASH_HPP\n#define STD_HASH_HPP\n\n#include <functional>\n\n// this is largely inspired by boost's hash combine as can be found in\n// \"The C++ Standard Library\" 2nd Edition. Nicolai M. Josuttis. 2012.\n\ntemplate <typename T> void hash_combine(std::size_t &seed, const T &val)\n{\n    seed ^= std::hash<T>()(val) + 0x9e3779b9 + (seed << 6) + (seed >> 2);\n}\n\ntemplate <typename T> void hash_val(std::size_t &seed, const T &val) { hash_combine(seed, val); }\n\ntemplate <typename T, typename... Types>\nvoid hash_val(std::size_t &seed, const T &val, const Types &... args)\n{\n    hash_combine(seed, val);\n    hash_val(seed, args...);\n}\n\ntemplate <typename... Types> std::size_t hash_val(const Types &... args)\n{\n    std::size_t seed = 0;\n    hash_val(seed, args...);\n    return seed;\n}\n\nnamespace std\n{\ntemplate <typename T1, typename T2> struct hash<std::pair<T1, T2>>\n{\n    size_t operator()(const std::pair<T1, T2> &pair) const\n    {\n        return hash_val(pair.first, pair.second);\n    }\n};\n}\n\n#endif // STD_HASH_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠSTD", "_", "HASH", "_", "HP", "P", "Ċ", "#", "define", "ĠSTD", "_", "HASH", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "Ċ", "//", "Ġthis", "Ġis", "Ġlarg", "ely", "Ġin", "sp", "ired", "Ġby", "Ġboost", "'s", "Ġhash", "Ġcombine", "Ġas", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ċ", "//", "Ġ\"", "The", "ĠC", "++", "ĠStandard", "ĠLibrary", "\"", "Ġ2", "nd", "ĠE", "dition", ".", "ĠN", "icol", "ai", "ĠM", ".", "ĠJ", "os", "ut", "tis", ".", "Ġ2012", ".", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ġvoid", "Ġhash", "_", "combine", "(", "std", "::", "size", "_", "t", "Ġ&", "seed", ",", "Ġconst", "ĠT", "Ġ&", "val", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġseed", "Ġ^=", "Ġstd", "::", "hash", "<", "T", ">()", "(", "val", ")", "Ġ+", "Ġ0", "x", "9", "e", "377", "9", "b", "9", "Ġ+", "Ġ(", "seed", "Ġ<<", "Ġ6", ")", "Ġ+", "Ġ(", "seed", "Ġ>>", "Ġ2", ");", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ġvoid", "Ġhash", "_", "val", "(", "std", "::", "size", "_", "t", "Ġ&", "seed", ",", "Ġconst", "ĠT", "Ġ&", "val", ")", "Ġ{", "Ġhash", "_", "combine", "(", "seed", ",", "Ġval", ");", "Ġ}", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ",", "Ġtypename", "...", "ĠTypes", ">", "Ċ", "void", "Ġhash", "_", "val", "(", "std", "::", "size", "_", "t", "Ġ&", "seed", ",", "Ġconst", "ĠT", "Ġ&", "val", ",", "Ġconst", "ĠTypes", "Ġ&", "...", "Ġargs", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġhash", "_", "combine", "(", "seed", ",", "Ġval", ");", "Ċ", "ĠĠĠ", "Ġhash", "_", "val", "(", "seed", ",", "Ġargs", "...", ");", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "typename", "...", "ĠTypes", ">", "Ġstd", "::", "size", "_", "t", "Ġhash", "_", "val", "(", "const", "ĠTypes", "Ġ&", "...", "Ġargs", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "size", "_", "t", "Ġseed", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġhash", "_", "val", "(", "seed", ",", "Ġargs", "...", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġseed", ";", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġstd", "Ċ", "{", "Ċ", "template", "Ġ<", "typename", "ĠT", "1", ",", "Ġtypename", "ĠT", "2", ">", "Ġstruct", "Ġhash", "<", "std", "::", "pair", "<", "T", "1", ",", "ĠT", "2", ">>", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġsize", "_", "t", "Ġoperator", "()(", "const", "Ġstd", "::", "pair", "<", "T", "1", ",", "ĠT", "2", ">", "Ġ&", "pair", ")", "Ġconst", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġhash", "_", "val", "(", "pair", ".", "first", ",", "Ġpair", ".", "second", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠSTD", "_", "HASH", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::403", "code": "/* Boost.MultiIndex test for iterators.\n *\n * Copyright 2003-2008 Joaquin M Lopez Munoz.\n * Distributed under the Boost Software License, Version 1.0.\n * (See accompanying file LICENSE_1_0.txt or copy at\n * http://www.boost.org/LICENSE_1_0.txt)\n *\n * See http://www.boost.org/libs/multi_index for library home page.\n */\n\n#include <boost/test/included/test_exec_monitor.hpp>\n#include \"test_iterators.hpp\"\n\nint test_main(int,char *[])\n{\n  test_iterators();\n  return 0;\n}\n\n", "code_tokens": ["Ġ/*", "ĠBo", "ost", ".", "Multi", "Index", "Ġtest", "Ġfor", "Ġiterators", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2003", "-", "2008", "ĠJ", "oa", "qu", "in", "ĠM", "ĠLo", "pe", "z", "ĠM", "un", "oz", ".", "Ċ", "Ġ*", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "Ġ*", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "Ġ*", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠSee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "libs", "/", "multi", "_", "index", "Ġfor", "Ġlibrary", "Ġhome", "Ġpage", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "included", "/", "test", "_", "exec", "_", "monitor", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "test", "_", "iterator", "s", ".", "hpp", "\"", "Ċ", "Ċ", "int", "Ġtest", "_", "main", "(", "int", ",", "char", "Ġ*", "[])", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "_", "iterator", "s", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::404", "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n#include \"SerialExecutor.h\"\n\nnamespace facebook {\nnamespace hermes {\nnamespace inspector {\nnamespace detail {\n\nSerialExecutor::SerialExecutor(const std::string &name)\n    : finish_(false), thread_(name, [this]() { runLoop(); }) {}\n\nSerialExecutor::~SerialExecutor() {\n  {\n    std::lock_guard<std::mutex> lock(mutex_);\n    finish_ = true;\n    wakeup_.notify_one();\n  }\n\n  thread_.join();\n}\n\nvoid SerialExecutor::add(folly::Func func) {\n  std::lock_guard<std::mutex> lock(mutex_);\n  funcs_.push(std::move(func));\n  wakeup_.notify_one();\n}\n\nvoid SerialExecutor::runLoop() {\n  bool shouldExit = false;\n  while (!shouldExit) {\n    folly::Func func;\n\n    {\n      std::unique_lock<std::mutex> lock(mutex_);\n      wakeup_.wait(lock, [this] { return finish_ || !funcs_.empty(); });\n\n      if (!funcs_.empty()) {\n        func = std::move(funcs_.front());\n        funcs_.pop();\n      }\n\n      shouldExit = funcs_.empty() && finish_;\n    }\n\n    if (func) {\n      func();\n    }\n  }\n}\n\n} // namespace detail\n} // namespace inspector\n} // namespace hermes\n} // namespace facebook\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "ĠFacebook", ",", "ĠInc", ".", "Ġand", "Ġits", "Ġaff", "ili", "ates", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġsource", "Ġcode", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġlicense", "Ġfound", "Ġin", "Ġthe", "Ċ", "Ġ*", "ĠLICENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġdirectory", "Ġof", "Ġthis", "Ġsource", "Ġtree", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Serial", "Executor", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġface", "book", "Ġ{", "Ċ", "namespace", "Ġherm", "es", "Ġ{", "Ċ", "namespace", "Ġinspector", "Ġ{", "Ċ", "namespace", "Ġdetail", "Ġ{", "Ċ", "Ċ", "Serial", "Executor", "::", "Serial", "Executor", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġfinish", "_(", "false", "),", "Ġthread", "_(", "name", ",", "Ġ[", "this", "]()", "Ġ{", "Ġrun", "Loop", "();", "Ġ})", "Ġ{}", "Ċ", "Ċ", "Serial", "Executor", "::~", "Serial", "Executor", "()", "Ġ{", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "lock", "_", "guard", "<", "std", "::", "mutex", ">", "Ġlock", "(", "mutex", "_);", "Ċ", "ĠĠĠ", "Ġfinish", "_", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġwakeup", "_.", "notify", "_", "one", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġthread", "_.", "join", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSerial", "Executor", "::", "add", "(", "fol", "ly", "::", "Func", "Ġfunc", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "lock", "_", "guard", "<", "std", "::", "mutex", ">", "Ġlock", "(", "mutex", "_);", "Ċ", "Ġ", "Ġfuncs", "_.", "push", "(", "std", "::", "move", "(", "func", "));", "Ċ", "Ġ", "Ġwakeup", "_.", "notify", "_", "one", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSerial", "Executor", "::", "run", "Loop", "()", "Ġ{", "Ċ", "Ġ", "Ġbool", "Ġshould", "Exit", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(!", "should", "Exit", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġf", "olly", "::", "Func", "Ġfunc", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mutex", ">", "Ġlock", "(", "mutex", "_);", "Ċ", "ĠĠĠĠĠ", "Ġwakeup", "_.", "wait", "(", "lock", ",", "Ġ[", "this", "]", "Ġ{", "Ġreturn", "Ġfinish", "_", "Ġ||", "Ġ!", "funcs", "_.", "empty", "();", "Ġ});", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(!", "funcs", "_.", "empty", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfunc", "Ġ=", "Ġstd", "::", "move", "(", "funcs", "_.", "front", "());", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfuncs", "_.", "pop", "();", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġshould", "Exit", "Ġ=", "Ġfuncs", "_.", "empty", "()", "Ġ&&", "Ġfinish", "_;", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "func", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġfunc", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġdetail", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġinspector", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġherm", "es", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġface", "book", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::405", "code": "/*\n * ServerScheduler.hpp\n *\n * Copyright (C) 2009-12 by RStudio, Inc.\n *\n * Unless you have received this program directly from RStudio pursuant\n * to the terms of a commercial license agreement with RStudio, then\n * this program is licensed to you under the terms of version 3 of the\n * GNU Affero General Public License. This program is distributed WITHOUT\n * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n *\n */\n\n#ifndef SERVER_SCHEDULER_HPP\n#define SERVER_SCHEDULER_HPP\n\n#include <string>\n\n#include <core/ScheduledCommand.hpp>\n\nnamespace rstudio {\nnamespace server {\nnamespace scheduler {\n\n// add a scheduled command to the server\n//\n// note that this function does not synchronize access to the list of\n// scheduled commands so it should ONLY be called during server init\nvoid addCommand(boost::shared_ptr<core::ScheduledCommand> pCmd);\n\n} // namespace scheduler\n} // namespace server\n} // namespace rstudio\n\n#endif // SERVER_SCHEDULER_HPP\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠServer", "Scheduler", ".", "hpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2009", "-", "12", "Ġby", "ĠR", "Studio", ",", "ĠInc", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġyou", "Ġhave", "Ġreceived", "Ġthis", "Ġprogram", "Ġdirectly", "Ġfrom", "ĠR", "Studio", "Ġpur", "su", "ant", "Ċ", "Ġ*", "Ġto", "Ġthe", "Ġterms", "Ġof", "Ġa", "Ġcom", "mer", "c", "ial", "Ġlicense", "Ġag", "reement", "Ġwith", "ĠR", "Studio", ",", "Ġthen", "Ċ", "Ġ*", "Ġthis", "Ġprogram", "Ġis", "Ġlicensed", "Ġto", "Ġyou", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġversion", "Ġ3", "Ġof", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠA", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", ".", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "ĠWITHOUT", "Ċ", "Ġ*", "ĠANY", "ĠEX", "PRESS", "ĠOR", "ĠIMP", "LIED", "ĠWARR", "AN", "TY", ",", "ĠIN", "CL", "UDING", "ĠTH", "O", "SE", "ĠOF", "ĠNON", "-", "IN", "FR", "IN", "GE", "MENT", ",", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "ĠOR", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠPlease", "Ġrefer", "Ġto", "Ġthe", "Ċ", "Ġ*", "ĠAG", "PL", "Ġ(", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/", "ag", "pl", "-", "3", ".", "0", ".", "txt", ")", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠSERVER", "_", "SCHED", "UL", "ER", "_", "HP", "P", "Ċ", "#", "define", "ĠSERVER", "_", "SCHED", "UL", "ER", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "core", "/", "Scheduled", "Command", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġrst", "udio", "Ġ{", "Ċ", "namespace", "Ġserver", "Ġ{", "Ċ", "namespace", "Ġscheduler", "Ġ{", "Ċ", "Ċ", "//", "Ġadd", "Ġa", "Ġscheduled", "Ġcommand", "Ġto", "Ġthe", "Ġserver", "Ċ", "//", "Ċ", "//", "Ġnote", "Ġthat", "Ġthis", "Ġfunction", "Ġdoes", "Ġnot", "Ġsynchronize", "Ġaccess", "Ġto", "Ġthe", "Ġlist", "Ġof", "Ċ", "//", "Ġscheduled", "Ġcommands", "Ġso", "Ġit", "Ġshould", "ĠONLY", "Ġbe", "Ġcalled", "Ġduring", "Ġserver", "Ġinit", "Ċ", "void", "Ġadd", "Command", "(", "boost", "::", "shared", "_", "ptr", "<", "core", "::", "Scheduled", "Command", ">", "Ġp", "Cmd", ");", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġscheduler", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġserver", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġrst", "udio", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠSERVER", "_", "SCHED", "UL", "ER", "_", "HP", "P", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::406", "code": "//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n\n// <mutex>\n\n// template <class Mutex> class unique_lock;\n\n// explicit unique_lock(mutex_type& m);\n\n#include <mutex>\n#include <thread>\n#include <cstdlib>\n#include <cassert>\n\nstd::mutex m;\n\ntypedef std::chrono::system_clock Clock;\ntypedef Clock::time_point time_point;\ntypedef Clock::duration duration;\ntypedef std::chrono::milliseconds ms;\ntypedef std::chrono::nanoseconds ns;\n\nvoid f()\n{\n    time_point t0 = Clock::now();\n    time_point t1;\n    {\n    std::unique_lock<std::mutex> ul(m);\n    t1 = Clock::now();\n    }\n    ns d = t1 - t0 - ms(250);\n    assert(d < ms(50));  // within 50ms\n}\n\nint main()\n{\n    m.lock();\n    std::thread t(f);\n    std::this_thread::sleep_for(ms(250));\n    m.unlock();\n    t.join();\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------------", "===//", "Ċ", "//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠThe", "ĠLLVM", "ĠCompiler", "ĠInf", "rastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUn", "ivers", "ity", "Ġof", "ĠI", "ll", "ino", "is", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLICENSE", ".", "TXT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "//", "Ġ<", "mutex", ">", "Ċ", "Ċ", "//", "Ġtemplate", "Ġ<", "class", "ĠMutex", ">", "Ġclass", "Ġunique", "_", "lock", ";", "Ċ", "Ċ", "//", "Ġexplicit", "Ġunique", "_", "lock", "(", "mutex", "_", "type", "&", "Ġm", ");", "Ċ", "Ċ", "#", "include", "Ġ<", "mutex", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "std", "::", "mutex", "Ġm", ";", "Ċ", "Ċ", "typedef", "Ġstd", "::", "chrono", "::", "system", "_", "clock", "ĠClock", ";", "Ċ", "typedef", "ĠClock", "::", "time", "_", "point", "Ġtime", "_", "point", ";", "Ċ", "typedef", "ĠClock", "::", "duration", "Ġduration", ";", "Ċ", "typedef", "Ġstd", "::", "chrono", "::", "milliseconds", "Ġms", ";", "Ċ", "typedef", "Ġstd", "::", "chrono", "::", "nan", "oseconds", "Ġns", ";", "Ċ", "Ċ", "void", "Ġf", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtime", "_", "point", "Ġt", "0", "Ġ=", "ĠClock", "::", "now", "();", "Ċ", "ĠĠĠ", "Ġtime", "_", "point", "Ġt", "1", ";", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mutex", ">", "Ġul", "(", "m", ");", "Ċ", "ĠĠĠ", "Ġt", "1", "Ġ=", "ĠClock", "::", "now", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġns", "Ġd", "Ġ=", "Ġt", "1", "Ġ-", "Ġt", "0", "Ġ-", "Ġms", "(", "250", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "d", "Ġ<", "Ġms", "(", "50", "));", "Ġ", "Ġ//", "Ġwithin", "Ġ50", "ms", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", ".", "lock", "();", "Ċ", "ĠĠĠ", "Ġstd", "::", "thread", "Ġt", "(", "f", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "this", "_", "thread", "::", "sleep", "_", "for", "(", "ms", "(", "250", "));", "Ċ", "ĠĠĠ", "Ġm", ".", "unlock", "();", "Ċ", "ĠĠĠ", "Ġt", ".", "join", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::407", "code": "// { dg-do compile }\n// { dg-options \"-Wall\" { target *-*-* } }\n// -*- C++ -*-\n \n// Copyright (C) 2004-2014 Free Software Foundation, Inc.\n \n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License as\n// published by the Free Software Foundation; either version 3, or (at\n// your option) any later version.\n \n// This library is distributed in the hope that it will be useful, but\n// WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// General Public License for more details.\n \n// You should have received a copy of the GNU General Public License\n// along with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n \n \n// Benjamin Kosnik  <bkoz@redhat.com>\n\n#include <ios>\n\n// PR libstdc++/17922\n// -Wall\ntypedef std::ios_base::seekdir test_type;\n\nvoid\ncase_labels(test_type b)\n{\n  switch (b) \n    {\n    case std::ios_base::beg:\n      break;\n    case std::ios_base::cur:\n      break;\n    case std::ios_base::end:\n      break;\n    case std::_S_ios_fmtflags_end:\n      break;\n    }\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "Wall", "\"", "Ġ{", "Ġtarget", "Ġ*", "-*-*", "Ġ}", "Ġ}", "Ċ", "//", "Ġ-", "*-", "ĠC", "++", "Ġ-", "*-", "Ċ", "Ġ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2004", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "Ġ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "//", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ċ", "//", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ċ", "//", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "Ċ", "//", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "//", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "ĠĊ", "Ġ", "Ċ", "//", "ĠB", "en", "jam", "in", "ĠK", "os", "n", "ik", "Ġ", "Ġ<", "bk", "oz", "@", "red", "hat", ".", "com", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "ios", ">", "Ċ", "Ċ", "//", "ĠPR", "Ġlib", "std", "c", "++", "/", "179", "22", "Ċ", "//", "Ġ-", "Wall", "Ċ", "typedef", "Ġstd", "::", "ios", "_", "base", "::", "seek", "dir", "Ġtest", "_", "type", ";", "Ċ", "Ċ", "void", "Ċ", "case", "_", "labels", "(", "test", "_", "type", "Ġb", ")", "Ċ", "{", "Ċ", "Ġ", "Ġswitch", "Ġ(", "b", ")", "ĠĊ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġcase", "Ġstd", "::", "ios", "_", "base", "::", "beg", ":", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "Ġstd", "::", "ios", "_", "base", "::", "cur", ":", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "Ġstd", "::", "ios", "_", "base", "::", "end", ":", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "Ġstd", "::_", "S", "_", "ios", "_", "fmt", "flags", "_", "end", ":", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::408", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"chrome/browser/ui/zoom/zoom_event_manager.h\"\n\n#include \"content/public/browser/browser_context.h\"\n\nnamespace {\nstatic const char kBrowserZoomEventManager[] = \"browser_zoom_event_manager\";\n}\n\nZoomEventManager* ZoomEventManager::GetForBrowserContext(\n    content::BrowserContext* context) {\n  if (!context->GetUserData(kBrowserZoomEventManager))\n    context->SetUserData(kBrowserZoomEventManager, new ZoomEventManager);\n  return static_cast<ZoomEventManager*>(\n      context->GetUserData(kBrowserZoomEventManager));\n}\n\nZoomEventManager::ZoomEventManager() {}\n\nZoomEventManager::~ZoomEventManager() {}\n\nvoid ZoomEventManager::OnZoomLevelChanged(\n    const content::HostZoomMap::ZoomLevelChange& change) {\n  zoom_level_changed_callbacks_.Notify(change);\n}\n\nscoped_ptr<content::HostZoomMap::Subscription>\nZoomEventManager::AddZoomLevelChangedCallback(\n    const content::HostZoomMap::ZoomLevelChangedCallback& callback) {\n  return zoom_level_changed_callbacks_.Add(callback);\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "browser", "/", "ui", "/", "zoom", "/", "zoom", "_", "event", "_", "manager", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "content", "/", "public", "/", "browser", "/", "browser", "_", "context", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "static", "Ġconst", "Ġchar", "Ġk", "Browser", "Zoom", "EventManager", "[]", "Ġ=", "Ġ\"", "browser", "_", "zoom", "_", "event", "_", "manager", "\";", "Ċ", "}", "Ċ", "Ċ", "Zoom", "EventManager", "*", "ĠZoom", "EventManager", "::", "Get", "For", "Browser", "Context", "(", "Ċ", "ĠĠĠ", "Ġcontent", "::", "Browser", "Context", "*", "Ġcontext", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "context", "->", "Get", "UserData", "(", "k", "Browser", "Zoom", "EventManager", "))", "Ċ", "ĠĠĠ", "Ġcontext", "->", "Set", "UserData", "(", "k", "Browser", "Zoom", "EventManager", ",", "Ġnew", "ĠZoom", "EventManager", ");", "Ċ", "Ġ", "Ġreturn", "Ġstatic", "_", "cast", "<", "Zoom", "EventManager", "*>(", "Ċ", "ĠĠĠĠĠ", "Ġcontext", "->", "Get", "UserData", "(", "k", "Browser", "Zoom", "EventManager", "));", "Ċ", "}", "Ċ", "Ċ", "Zoom", "EventManager", "::", "Zoom", "EventManager", "()", "Ġ{}", "Ċ", "Ċ", "Zoom", "EventManager", "::~", "Zoom", "EventManager", "()", "Ġ{}", "Ċ", "Ċ", "void", "ĠZoom", "EventManager", "::", "On", "Zoom", "Level", "Changed", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġcontent", "::", "Host", "Zoom", "Map", "::", "Zoom", "Level", "Change", "&", "Ġchange", ")", "Ġ{", "Ċ", "Ġ", "Ġzoom", "_", "level", "_", "changed", "_", "callbacks", "_.", "Notify", "(", "change", ");", "Ċ", "}", "Ċ", "Ċ", "scoped", "_", "ptr", "<", "content", "::", "Host", "Zoom", "Map", "::", "Subscription", ">", "Ċ", "Zoom", "EventManager", "::", "Add", "Zoom", "Level", "Changed", "Callback", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġcontent", "::", "Host", "Zoom", "Map", "::", "Zoom", "Level", "Changed", "Callback", "&", "Ġcallback", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġzoom", "_", "level", "_", "changed", "_", "callbacks", "_.", "Add", "(", "callback", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::409", "code": "// PR c++/35315\n\ntypedef union { int i; } U __attribute__((transparent_union));\n\nstatic void foo(U) {}\nstatic void foo(int) {}\n\nvoid bar()\n{\n  foo(0);\n}\n\ntypedef union U1 { int i; } U2 __attribute__((transparent_union)); // { dg-warning \"ignored\" }\n\nstatic void foo2(U1) {}\t\t// { dg-error \"previously defined\" }\nstatic void foo2(U2) {}\t\t// { dg-error \"redefinition\" }\n\nvoid bar2(U1 u1, U2 u2)\n{\n  foo2(u1);\n  foo2(u2);\n}\n\n// PR c++/36410\nstruct A\n{\n  typedef union\n  {\n    int i;\n  } B __attribute__((transparent_union));\n};\n\nvoid foo(A::B b)\n{\n  b.i;\n}\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "35", "315", "Ċ", "Ċ", "typedef", "Ġunion", "Ġ{", "Ġint", "Ġi", ";", "Ġ}", "ĠU", "Ġ__", "attribute", "__((", "transparent", "_", "union", "));", "Ċ", "Ċ", "static", "Ġvoid", "Ġfoo", "(", "U", ")", "Ġ{}", "Ċ", "static", "Ġvoid", "Ġfoo", "(", "int", ")", "Ġ{}", "Ċ", "Ċ", "void", "Ġbar", "()", "Ċ", "{", "Ċ", "Ġ", "Ġfoo", "(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "typedef", "Ġunion", "ĠU", "1", "Ġ{", "Ġint", "Ġi", ";", "Ġ}", "ĠU", "2", "Ġ__", "attribute", "__((", "transparent", "_", "union", "));", "Ġ//", "Ġ{", "Ġdg", "-", "warning", "Ġ\"", "ignored", "\"", "Ġ}", "Ċ", "Ċ", "static", "Ġvoid", "Ġfoo", "2", "(", "U", "1", ")", "Ġ{}", "ĉ", "ĉ", "//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "previous", "ly", "Ġdefined", "\"", "Ġ}", "Ċ", "static", "Ġvoid", "Ġfoo", "2", "(", "U", "2", ")", "Ġ{}", "ĉ", "ĉ", "//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "re", "definition", "\"", "Ġ}", "Ċ", "Ċ", "void", "Ġbar", "2", "(", "U", "1", "Ġu", "1", ",", "ĠU", "2", "Ġu", "2", ")", "Ċ", "{", "Ċ", "Ġ", "Ġfoo", "2", "(", "u", "1", ");", "Ċ", "Ġ", "Ġfoo", "2", "(", "u", "2", ");", "Ċ", "}", "Ċ", "Ċ", "//", "ĠPR", "Ġc", "++", "/", "364", "10", "Ċ", "struct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "Ġtypedef", "Ġunion", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġ}", "ĠB", "Ġ__", "attribute", "__((", "transparent", "_", "union", "));", "Ċ", "};", "Ċ", "Ċ", "void", "Ġfoo", "(", "A", "::", "B", "Ġb", ")", "Ċ", "{", "Ċ", "Ġ", "Ġb", ".", "i", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::410", "code": "// Copyright (C) 2014-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n//\n// { dg-options \"-std=gnu++11\" }\n// { dg-do run { xfail *-*-* } }\n\n#include <debug/forward_list>\n\n#include <testsuite_allocator.h>\n\nvoid test01()\n{\n  bool test __attribute__((unused)) = true;\n\n  typedef __gnu_test::uneq_allocator<int> alloc_type;\n  typedef __gnu_debug::forward_list<int, alloc_type> test_type;\n  test_type v1(alloc_type(1));\n  v1.push_front(0);\n  auto it = v1.begin();\n\n  test_type v2(std::move(v1), alloc_type(2));\n\n  VERIFY( it == v2.begin() ); // Error, it is singular\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġrun", "Ġ{", "Ġx", "fail", "Ġ*", "-*-*", "Ġ}", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "debug", "/", "forward", "_", "list", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "allocator", ".", "h", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__((", "unused", "))", "Ġ=", "Ġtrue", ";", "Ċ", "Ċ", "Ġ", "Ġtypedef", "Ġ__", "gnu", "_", "test", "::", "un", "eq", "_", "allocator", "<", "int", ">", "Ġalloc", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġ__", "gnu", "_", "debug", "::", "forward", "_", "list", "<", "int", ",", "Ġalloc", "_", "type", ">", "Ġtest", "_", "type", ";", "Ċ", "Ġ", "Ġtest", "_", "type", "Ġv", "1", "(", "alloc", "_", "type", "(", "1", "));", "Ċ", "Ġ", "Ġv", "1", ".", "push", "_", "front", "(", "0", ");", "Ċ", "Ġ", "Ġauto", "Ġit", "Ġ=", "Ġv", "1", ".", "begin", "();", "Ċ", "Ċ", "Ġ", "Ġtest", "_", "type", "Ġv", "2", "(", "std", "::", "move", "(", "v", "1", "),", "Ġalloc", "_", "type", "(", "2", "));", "Ċ", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġit", "Ġ==", "Ġv", "2", ".", "begin", "()", "Ġ);", "Ġ//", "ĠError", ",", "Ġit", "Ġis", "Ġsingular", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::411", "code": "// { dg-options \"-std=gnu++11\" }\n// { dg-require-cstdint \"\" }\n//\n// 2012-01-28  Edward M. Smith-Rowland  <3dw4rd@verizon.net>\n//\n// Copyright (C) 2012-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// Class template rice_distribution\n// 26.5.1.6 Random number distribution requirements [rand.req.dist]\n\n#include <ext/random>\n#include <sstream>\n#include <testsuite_hooks.h>\n\nvoid\ntest01()\n{\n  bool test __attribute__((unused)) = true;\n\n  std::stringstream str;\n  __gnu_cxx::rice_distribution<double> u(1.5, 3.0), v;\n  std::minstd_rand0 rng;\n\n  u(rng); // advance\n  str << u;\n\n  str >> v;\n  VERIFY( u == v );\n}\n\nint\nmain()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "c", "std", "int", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ċ", "//", "Ġ2012", "-", "01", "-", "28", "Ġ", "ĠEd", "ward", "ĠM", ".", "ĠSm", "ith", "-", "Row", "land", "Ġ", "Ġ<", "3", "dw", "4", "rd", "@", "ver", "iz", "on", ".", "net", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "ĠClass", "Ġtemplate", "Ġri", "ce", "_", "distribution", "Ċ", "//", "Ġ26", ".", "5", ".", "1", ".", "6", "ĠRandom", "Ġnumber", "Ġdistribution", "Ġrequirements", "Ġ[", "rand", ".", "req", ".", "dist", "]", "Ċ", "Ċ", "#", "include", "Ġ<", "ext", "/", "random", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__((", "unused", "))", "Ġ=", "Ġtrue", ";", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "stringstream", "Ġstr", ";", "Ċ", "Ġ", "Ġ__", "gnu", "_", "cxx", "::", "ri", "ce", "_", "distribution", "<", "double", ">", "Ġu", "(", "1", ".", "5", ",", "Ġ3", ".", "0", "),", "Ġv", ";", "Ċ", "Ġ", "Ġstd", "::", "min", "std", "_", "rand", "0", "Ġrng", ";", "Ċ", "Ċ", "Ġ", "Ġu", "(", "rng", ");", "Ġ//", "Ġadvance", "Ċ", "Ġ", "Ġstr", "Ġ<<", "Ġu", ";", "Ċ", "Ċ", "Ġ", "Ġstr", "Ġ>>", "Ġv", ";", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġu", "Ġ==", "Ġv", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::412", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"mojo/public/cpp/environment/async_waiter.h\"\n\nnamespace mojo {\n\nAsyncWaiter::AsyncWaiter(Handle handle,\n                         MojoHandleSignals signals,\n                         const Callback& callback)\n    : waiter_(Environment::GetDefaultAsyncWaiter()),\n      id_(0),\n      callback_(callback) {\n  id_ = waiter_->AsyncWait(handle.value(), signals, MOJO_DEADLINE_INDEFINITE,\n                           &AsyncWaiter::WaitComplete, this);\n}\n\nAsyncWaiter::~AsyncWaiter() {\n  if (id_)\n    waiter_->CancelWait(id_);\n}\n\n// static\nvoid AsyncWaiter::WaitComplete(void* waiter, MojoResult result) {\n  static_cast<AsyncWaiter*>(waiter)->WaitCompleteInternal(result);\n}\n\nvoid AsyncWaiter::WaitCompleteInternal(MojoResult result) {\n  id_ = 0;\n  callback_.Run(result);\n}\n\n}  // namespace mojo\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "mo", "jo", "/", "public", "/", "cpp", "/", "environment", "/", "async", "_", "waiter", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġmo", "jo", "Ġ{", "Ċ", "Ċ", "Async", "Waiter", "::", "Async", "Waiter", "(", "Handle", "Ġhandle", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠMo", "jo", "Handle", "Signals", "Ġsignals", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "ĠCallback", "&", "Ġcallback", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġwaiter", "_(", "Environment", "::", "GetDefault", "Async", "Waiter", "()),", "Ċ", "ĠĠĠĠĠ", "Ġid", "_(", "0", "),", "Ċ", "ĠĠĠĠĠ", "Ġcallback", "_(", "callback", ")", "Ġ{", "Ċ", "Ġ", "Ġid", "_", "Ġ=", "Ġwaiter", "_->", "Async", "Wait", "(", "handle", ".", "value", "(),", "Ġsignals", ",", "ĠMO", "JO", "_", "DEAD", "LINE", "_", "IN", "DEF", "IN", "ITE", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ&", "Async", "Waiter", "::", "Wait", "Complete", ",", "Ġthis", ");", "Ċ", "}", "Ċ", "Ċ", "Async", "Waiter", "::~", "Async", "Waiter", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "id", "_)", "Ċ", "ĠĠĠ", "Ġwaiter", "_->", "Cancel", "Wait", "(", "id", "_);", "Ċ", "}", "Ċ", "Ċ", "//", "Ġstatic", "Ċ", "void", "ĠAsync", "Waiter", "::", "Wait", "Complete", "(", "void", "*", "Ġwaiter", ",", "ĠMo", "jo", "Result", "Ġresult", ")", "Ġ{", "Ċ", "Ġ", "Ġstatic", "_", "cast", "<", "Async", "Waiter", "*>(", "waiter", ")->", "Wait", "Complete", "Internal", "(", "result", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAsync", "Waiter", "::", "Wait", "Complete", "Internal", "(", "Mo", "jo", "Result", "Ġresult", ")", "Ġ{", "Ċ", "Ġ", "Ġid", "_", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġcallback", "_.", "Run", "(", "result", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġmo", "jo", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::413", "code": "// PR middle-end/42760\n// { dg-do compile }\n\ntemplate <typename T>\nstruct A\n{\n  static T b (T it) { return it; }\n};\n\ntemplate <typename T, typename U>\nstatic U\nbaz (T x, T y, U z)\n{\n  for (long n = y - x; n > 0; --n)\n    {\n      *z = *x;\n      ++z;\n    }\n};\n\ntemplate <typename T, typename U>\nU\nbar (T x, T y, U z)\n{\n  baz (A <T>::b (x), A <T>::b (y), A <U>::b (z));\n}\n\nstruct C\n{\n  __complex__ float v;\n};\n\ntemplate <class T>\nstruct B\n{\n  B (T y[]) { bar (y, y + 1, x); }\n  operator T *() { return x; }\n  T x[1];\n};\n\nB <C>\nfoo ()\n{\n  C y[1];\n  return B <C> (y);\n};\n", "code_tokens": ["Ġ//", "ĠPR", "Ġmiddle", "-", "end", "/", "427", "60", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ċ", "struct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "Ġstatic", "ĠT", "Ġb", "Ġ(", "T", "Ġit", ")", "Ġ{", "Ġreturn", "Ġit", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ",", "Ġtypename", "ĠU", ">", "Ċ", "static", "ĠU", "Ċ", "baz", "Ġ(", "T", "Ġx", ",", "ĠT", "Ġy", ",", "ĠU", "Ġz", ")", "Ċ", "{", "Ċ", "Ġ", "Ġfor", "Ġ(", "long", "Ġn", "Ġ=", "Ġy", "Ġ-", "Ġx", ";", "Ġn", "Ġ>", "Ġ0", ";", "Ġ--", "n", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ*", "z", "Ġ=", "Ġ*", "x", ";", "Ċ", "ĠĠĠĠĠ", "Ġ++", "z", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ",", "Ġtypename", "ĠU", ">", "Ċ", "U", "Ċ", "bar", "Ġ(", "T", "Ġx", ",", "ĠT", "Ġy", ",", "ĠU", "Ġz", ")", "Ċ", "{", "Ċ", "Ġ", "Ġbaz", "Ġ(", "A", "Ġ<", "T", ">::", "b", "Ġ(", "x", "),", "ĠA", "Ġ<", "T", ">::", "b", "Ġ(", "y", "),", "ĠA", "Ġ<", "U", ">::", "b", "Ġ(", "z", "));", "Ċ", "}", "Ċ", "Ċ", "struct", "ĠC", "Ċ", "{", "Ċ", "Ġ", "Ġ__", "complex", "__", "Ġfloat", "Ġv", ";", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "struct", "ĠB", "Ċ", "{", "Ċ", "Ġ", "ĠB", "Ġ(", "T", "Ġy", "[])", "Ġ{", "Ġbar", "Ġ(", "y", ",", "Ġy", "Ġ+", "Ġ1", ",", "Ġx", ");", "Ġ}", "Ċ", "Ġ", "Ġoperator", "ĠT", "Ġ*", "()", "Ġ{", "Ġreturn", "Ġx", ";", "Ġ}", "Ċ", "Ġ", "ĠT", "Ġx", "[", "1", "];", "Ċ", "};", "Ċ", "Ċ", "B", "Ġ<", "C", ">", "Ċ", "foo", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "ĠC", "Ġy", "[", "1", "];", "Ċ", "Ġ", "Ġreturn", "ĠB", "Ġ<", "C", ">", "Ġ(", "y", ");", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::414", "code": "// { dg-do assemble  }\n\n// Copyright (C) 2000 Free Software Foundation, Inc.\n// Contributed by Nathan Sidwell 23 June 2000 <nathan@codesourcery.com>\n\n// Origin GNATS bug report 69 from Glenn Ammons <ammons@cs.wisc.edu>\n// \n// A base which derives a virtual base hides declarations in the virtual base,\n// even if that virtual base is accessible via another path [10.2]/6. Make\n// sure that non-virtual bases of the virtual base are also hidden, not matter\n// what order bases are declared in.\n\nstruct A {int a;};\nstruct B : A {};\n\nstruct L1 : virtual B { int a; };\nstruct L2 : virtual A { int a; };\n\nstruct R1 : virtual B {};\nstruct R2 : virtual A {};\n\nstruct C1 : R1, L1 {};\nstruct C2 : R2, L2 {};\n\nstruct D1 : L1, R1 {};\nstruct D2 : L2, R2 {};\n\nvoid fn (C1 *c1, D1 *d1, C2 *c2, D2 *d2)\n{\n  c1->a = 1;\n  d1->a = 1;\n  c2->a = 1;\n  d2->a = 1;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġassemble", "Ġ", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "ĠCon", "tributed", "Ġby", "ĠN", "ath", "an", "ĠS", "id", "well", "Ġ23", "ĠJ", "une", "Ġ2000", "Ġ<", "n", "ath", "an", "@", "codes", "our", "c", "ery", ".", "com", ">", "Ċ", "Ċ", "//", "ĠOrigin", "ĠG", "NAT", "S", "Ġbug", "Ġreport", "Ġ69", "Ġfrom", "ĠG", "len", "n", "ĠAm", "mon", "s", "Ġ<", "am", "mon", "s", "@", "cs", ".", "w", "isc", ".", "edu", ">", "Ċ", "//", "Ġ", "Ċ", "//", "ĠA", "Ġbase", "Ġwhich", "Ġder", "ives", "Ġa", "Ġvirtual", "Ġbase", "Ġhide", "s", "Ġdeclarations", "Ġin", "Ġthe", "Ġvirtual", "Ġbase", ",", "Ċ", "//", "Ġeven", "Ġif", "Ġthat", "Ġvirtual", "Ġbase", "Ġis", "Ġaccessible", "Ġvia", "Ġanother", "Ġpath", "Ġ[", "10", ".", "2", "]/", "6", ".", "ĠMake", "Ċ", "//", "Ġsure", "Ġthat", "Ġnon", "-", "virtual", "Ġbases", "Ġof", "Ġthe", "Ġvirtual", "Ġbase", "Ġare", "Ġalso", "Ġhidden", ",", "Ġnot", "Ġmatter", "Ċ", "//", "Ġwhat", "Ġorder", "Ġbases", "Ġare", "Ġdeclared", "Ġin", ".", "Ċ", "Ċ", "struct", "ĠA", "Ġ{", "int", "Ġa", ";};", "Ċ", "struct", "ĠB", "Ġ:", "ĠA", "Ġ{};", "Ċ", "Ċ", "struct", "ĠL", "1", "Ġ:", "Ġvirtual", "ĠB", "Ġ{", "Ġint", "Ġa", ";", "Ġ};", "Ċ", "struct", "ĠL", "2", "Ġ:", "Ġvirtual", "ĠA", "Ġ{", "Ġint", "Ġa", ";", "Ġ};", "Ċ", "Ċ", "struct", "ĠR", "1", "Ġ:", "Ġvirtual", "ĠB", "Ġ{};", "Ċ", "struct", "ĠR", "2", "Ġ:", "Ġvirtual", "ĠA", "Ġ{};", "Ċ", "Ċ", "struct", "ĠC", "1", "Ġ:", "ĠR", "1", ",", "ĠL", "1", "Ġ{};", "Ċ", "struct", "ĠC", "2", "Ġ:", "ĠR", "2", ",", "ĠL", "2", "Ġ{};", "Ċ", "Ċ", "struct", "ĠD", "1", "Ġ:", "ĠL", "1", ",", "ĠR", "1", "Ġ{};", "Ċ", "struct", "ĠD", "2", "Ġ:", "ĠL", "2", ",", "ĠR", "2", "Ġ{};", "Ċ", "Ċ", "void", "Ġfn", "Ġ(", "C", "1", "Ġ*", "c", "1", ",", "ĠD", "1", "Ġ*", "d", "1", ",", "ĠC", "2", "Ġ*", "c", "2", ",", "ĠD", "2", "Ġ*", "d", "2", ")", "Ċ", "{", "Ċ", "Ġ", "Ġc", "1", "->", "a", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġd", "1", "->", "a", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġc", "2", "->", "a", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġd", "2", "->", "a", "Ġ=", "Ġ1", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::415", "code": "// { dg-do run  }\n// GROUPS passed miscellaneous\nextern \"C\" int printf (const char *, ...);\n\nint main()\n{\n  int i = 0;\n  // Make sure build_unary_op correctly computes this.\n  int *pi = &(++i);\n  *pi = 4;\n\n  if (i != 4)\n    { printf (\"FAIL\\n\"); return 1; }\n  else\n    printf (\"PASS\\n\");\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġrun", "Ġ", "Ġ}", "Ċ", "//", "ĠGROUP", "S", "Ġpassed", "Ġmis", "cellaneous", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "Ġprintf", "Ġ(", "const", "Ġchar", "Ġ*,", "Ġ...", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ//", "ĠMake", "Ġsure", "Ġbuild", "_", "unary", "_", "op", "Ġcorrectly", "Ġcomputes", "Ġthis", ".", "Ċ", "Ġ", "Ġint", "Ġ*", "pi", "Ġ=", "Ġ&(", "++", "i", ");", "Ċ", "Ġ", "Ġ*", "pi", "Ġ=", "Ġ4", ";", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "i", "Ġ!=", "Ġ4", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ġprintf", "Ġ(\"", "FAIL", "\\", "n", "\");", "Ġreturn", "Ġ1", ";", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ċ", "ĠĠĠ", "Ġprintf", "Ġ(\"", "PASS", "\\", "n", "\");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::416", "code": "// { dg-do assemble  }\n\ntemplate <class A> class B { public: A a; };\nstatic B<int> b_int;\nstatic B<char> b_char;\nstatic B<unsigned char> b_uchar;\n\nint foo () { return b_int.a + b_char.a + b_uchar.a; }\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġassemble", "Ġ", "Ġ}", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠA", ">", "Ġclass", "ĠB", "Ġ{", "Ġpublic", ":", "ĠA", "Ġa", ";", "Ġ};", "Ċ", "static", "ĠB", "<", "int", ">", "Ġb", "_", "int", ";", "Ċ", "static", "ĠB", "<", "char", ">", "Ġb", "_", "char", ";", "Ċ", "static", "ĠB", "<", "unsigned", "Ġchar", ">", "Ġb", "_", "uchar", ";", "Ċ", "Ċ", "int", "Ġfoo", "Ġ()", "Ġ{", "Ġreturn", "Ġb", "_", "int", ".", "a", "Ġ+", "Ġb", "_", "char", ".", "a", "Ġ+", "Ġb", "_", "uchar", ".", "a", ";", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::417", "code": "#include \"ThinObject.h\"\n#include \"Object.h\"\n#include \"SnowString.h\"\n#include \"Exception.h\"\n\nnamespace snow {\n\tstatic volatile uintx global_object_id_counter = 1;\n\n\tvoid ThinObject::init() {\n\t\tm_Info.frozen = false;\n\t\tm_Info.gc_lock = false;\n\t\t// XXX: With multithreading, this will most certainly go wrong.\n\t\t#ifdef ARCH_IS_64_BIT\n\t\tASSERT(global_object_id_counter < (1LU<<61));\n\t\t#else\n\t\tASSERT(global_object_id_counter < (1<<29));\n\t\t#endif\n\t\tm_Info.id = global_object_id_counter++;\n\t}\n\n\tValue ThinObject::get_raw(Symbol name) const {\n\t\t return prototype()->get_raw(name);\n\t}\n\t\n\tValue ThinObject::set_raw(Symbol name, const Value&) {\n\t\tthrow_exception(new String(\"Thin objects cannot have members assigned. Modify the prototype, or create a wrapper.\"));\n\t\treturn nil();\n\t}\n\t\n\tValue ThinObject::set(const Value& self, Symbol member, const Value& val) {\n\t\treturn prototype()->set(self, member, val);\n\t}\n\n\tValue ThinObject::get(const Value& self, Symbol member) const {\n\t\treturn prototype()->get(self, member);\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Thin", "Object", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Object", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "S", "now", "String", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Exception", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġs", "now", "Ġ{", "Ċ", "ĉ", "static", "Ġvolatile", "Ġuint", "x", "Ġglobal", "_", "object", "_", "id", "_", "counter", "Ġ=", "Ġ1", ";", "Ċ", "Ċ", "ĉ", "void", "ĠTh", "in", "Object", "::", "init", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "m", "_", "Info", ".", "frozen", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "m", "_", "Info", ".", "gc", "_", "lock", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "//", "ĠXXX", ":", "ĠWith", "Ġmult", "ith", "reading", ",", "Ġthis", "Ġwill", "Ġmost", "Ġcertain", "ly", "Ġgo", "Ġwrong", ".", "Ċ", "ĉ", "ĉ", "#", "ifdef", "ĠARCH", "_", "IS", "_", "64", "_", "BIT", "Ċ", "ĉ", "ĉ", "ASSERT", "(", "global", "_", "object", "_", "id", "_", "counter", "Ġ<", "Ġ(", "1", "LU", "<<", "61", "));", "Ċ", "ĉ", "ĉ", "#", "else", "Ċ", "ĉ", "ĉ", "ASSERT", "(", "global", "_", "object", "_", "id", "_", "counter", "Ġ<", "Ġ(", "1", "<<", "29", "));", "Ċ", "ĉ", "ĉ", "#", "endif", "Ċ", "ĉ", "ĉ", "m", "_", "Info", ".", "id", "Ġ=", "Ġglobal", "_", "object", "_", "id", "_", "counter", "++;", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "Value", "ĠTh", "in", "Object", "::", "get", "_", "raw", "(", "Symbol", "Ġname", ")", "Ġconst", "Ġ{", "Ċ", "ĉĉ", "Ġreturn", "Ġprototype", "()->", "get", "_", "raw", "(", "name", ");", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉ", "Value", "ĠTh", "in", "Object", "::", "set", "_", "raw", "(", "Symbol", "Ġname", ",", "Ġconst", "ĠValue", "&)", "Ġ{", "Ċ", "ĉ", "ĉ", "throw", "_", "exception", "(", "new", "ĠString", "(\"", "Thin", "Ġobjects", "Ġcannot", "Ġhave", "Ġmembers", "Ġassigned", ".", "ĠModify", "Ġthe", "Ġprototype", ",", "Ġor", "Ġcreate", "Ġa", "Ġwrapper", ".\"));", "Ċ", "ĉ", "ĉ", "return", "Ġnil", "();", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉ", "Value", "ĠTh", "in", "Object", "::", "set", "(", "const", "ĠValue", "&", "Ġself", ",", "ĠSymbol", "Ġmember", ",", "Ġconst", "ĠValue", "&", "Ġval", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġprototype", "()->", "set", "(", "self", ",", "Ġmember", ",", "Ġval", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "Value", "ĠTh", "in", "Object", "::", "get", "(", "const", "ĠValue", "&", "Ġself", ",", "ĠSymbol", "Ġmember", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġprototype", "()->", "get", "(", "self", ",", "Ġmember", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::418", "code": "\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <iostream>\n#include <set>\n#include <sstream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n\n  while (true) {\n    int N, M;\n    cin >> N;\n    if (!cin)\n      break;\n\n    multiset<int> prices;\n    for (int i = 0; i < N; ++i) {\n      int p;\n      cin >> p;\n      prices.insert(p);\n    }\n\n    cin >> M;\n\n    int best_i, best_j;\n    bool got_best = false;\n    for (multiset<int>::const_iterator itr = prices.begin();\n\t itr != prices.end();\n\t ++itr) {\n      int i = *itr, j = M - i;\n\n      if ( (j <= 0) ||\n\t   (prices.count(j) == 0) ||\n\t   ((i == j) && (prices.count(i) < 2)) )\n\tcontinue;\n\n      if (!got_best || (abs(i - j) < abs(best_i - best_j))) {\n\tbest_i = i;\n\tbest_j = j;\n\tgot_best = true;\n      }\n    }\n    \n    if (best_i > best_j) {\n      swap(best_i, best_j);\n    }\n\n    cout << \"Peter should buy books whose prices are \" << best_i << \" and \" << best_j << \".\" << endl << endl;\n  }\n\n  return 0;\n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġwhile", "Ġ(", "true", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "ĠN", ",", "ĠM", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "ĠN", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "cin", ")", "Ċ", "ĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġmulti", "set", "<", "int", ">", "Ġpri", "ces", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠN", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġint", "Ġp", ";", "Ċ", "ĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġp", ";", "Ċ", "ĠĠĠĠĠ", "Ġpri", "ces", ".", "insert", "(", "p", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "ĠM", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġint", "Ġbest", "_", "i", ",", "Ġbest", "_", "j", ";", "Ċ", "ĠĠĠ", "Ġbool", "Ġgot", "_", "best", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "multiset", "<", "int", ">::", "const", "_", "iterator", "Ġitr", "Ġ=", "Ġpri", "ces", ".", "begin", "();", "Ċ", "ĉ", "Ġitr", "Ġ!=", "Ġpri", "ces", ".", "end", "();", "Ċ", "ĉ", "Ġ++", "itr", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġint", "Ġi", "Ġ=", "Ġ*", "itr", ",", "Ġj", "Ġ=", "ĠM", "Ġ-", "Ġi", ";", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "Ġ(", "j", "Ġ<=", "Ġ0", ")", "Ġ||", "Ċ", "ĉĠĠ", "Ġ(", "prices", ".", "count", "(", "j", ")", "Ġ==", "Ġ0", ")", "Ġ||", "Ċ", "ĉĠĠ", "Ġ((", "i", "Ġ==", "Ġj", ")", "Ġ&&", "Ġ(", "prices", ".", "count", "(", "i", ")", "Ġ<", "Ġ2", "))", "Ġ)", "Ċ", "ĉ", "continue", ";", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(!", "got", "_", "best", "Ġ||", "Ġ(", "abs", "(", "i", "Ġ-", "Ġj", ")", "Ġ<", "Ġabs", "(", "best", "_", "i", "Ġ-", "Ġbest", "_", "j", ")))", "Ġ{", "Ċ", "ĉ", "best", "_", "i", "Ġ=", "Ġi", ";", "Ċ", "ĉ", "best", "_", "j", "Ġ=", "Ġj", ";", "Ċ", "ĉ", "got", "_", "best", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġif", "Ġ(", "best", "_", "i", "Ġ>", "Ġbest", "_", "j", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġswap", "(", "best", "_", "i", ",", "Ġbest", "_", "j", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "P", "eter", "Ġshould", "Ġbu", "y", "Ġbook", "s", "Ġwhose", "Ġpri", "ces", "Ġare", "Ġ\"", "Ġ<<", "Ġbest", "_", "i", "Ġ<<", "Ġ\"", "Ġand", "Ġ\"", "Ġ<<", "Ġbest", "_", "j", "Ġ<<", "Ġ\".\"", "Ġ<<", "Ġendl", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::419", "code": "/**\n * @file routing.hpp\n * @brief this file implements the application routing.\n * @author nocotan\n * @date 2016/11/4\n */\n#ifndef ROUTING_HPP\n#define ROUTING_HPP\n\n#include <functional>\n#include <string>\n\n\nnamespace ots {\n\n    /**\n     * @struct header\n     * @brief header\n     */\n    struct header {\n        const std::string name;\n        const std::string value;\n    };\n\n    /**\n     * @struct request\n     * @brief request\n     */\n    struct request {\n        const std::string method;\n        const std::string path;\n        const std::string source;\n        const std::string destination;\n        const std::string body;\n        const std::vector<header> headers;\n    };\n\n    /**\n     * @struct otusRouting\n     * @brief routing\n     */\n    struct otusRouting {\n        const std::string route;\n        const std::string method;\n        const std::function<std::string(request)> action;\n    };\n\n}\n\n#endif\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "file", "Ġrouting", ".", "hpp", "Ċ", "Ġ*", "Ġ@", "brief", "Ġthis", "Ġfile", "Ġimplements", "Ġthe", "Ġapplication", "Ġrouting", ".", "Ċ", "Ġ*", "Ġ@", "author", "Ġno", "co", "tan", "Ċ", "Ġ*", "Ġ@", "date", "Ġ2016", "/", "11", "/", "4", "Ċ", "Ġ*/", "Ċ", "#", "ifndef", "ĠR", "OUT", "ING", "_", "HP", "P", "Ċ", "#", "define", "ĠR", "OUT", "ING", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "Ċ", "namespace", "Ġo", "ts", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "struct", "Ġheader", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "brief", "Ġheader", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġstruct", "Ġheader", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġname", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġvalue", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "struct", "Ġrequest", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "brief", "Ġrequest", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġstruct", "Ġrequest", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġmethod", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġpath", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġsource", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġdestination", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġbody", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "header", ">", "Ġheaders", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "struct", "Ġot", "us", "Routing", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "brief", "Ġrouting", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġstruct", "Ġot", "us", "Routing", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġroute", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġmethod", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "function", "<", "std", "::", "string", "(", "request", ")>", "Ġaction", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::420", "code": "#pragma once\r\n\r\n#include <QtGlobal>\r\n\r\nclass Helper\r\n{\r\npublic:\r\n    static void encodeByte(\r\n        char *buffer, quint16 position, char byte, quint8 positionOffset = 0\r\n    );\r\n    static char decodeByte(\r\n        char *buffer, quint16 position, quint8 positionOffset = 0\r\n    );\r\n};\r\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "Qt", "Global", ">", "č", "Ċ", "č", "Ċ", "class", "ĠHelper", "č", "Ċ", "{", "č", "Ċ", "public", ":", "č", "Ċ", "ĠĠĠ", "Ġstatic", "Ġvoid", "Ġencode", "Byte", "(", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchar", "Ġ*", "buffer", ",", "Ġquint", "16", "Ġposition", ",", "Ġchar", "Ġbyte", ",", "Ġquint", "8", "Ġposition", "Offset", "Ġ=", "Ġ0", "č", "Ċ", "ĠĠĠ", "Ġ);", "č", "Ċ", "ĠĠĠ", "Ġstatic", "Ġchar", "Ġdecode", "Byte", "(", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchar", "Ġ*", "buffer", ",", "Ġquint", "16", "Ġposition", ",", "Ġquint", "8", "Ġposition", "Offset", "Ġ=", "Ġ0", "č", "Ċ", "ĠĠĠ", "Ġ);", "č", "Ċ", "};", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::421", "code": "\n#include \"texture.h\"\n\nusing namespace gl;\n\n/**\n * Constructs a new Texture object, storing the specified textureID for binding\n * @param textureID the Integer representing the texture that can be bound\n */\nTexture::Texture(std::string associatedFileName, gl::GLuint textureID) : textureID(textureID), associatedFileName(associatedFileName)\n{\n}\n\n/**\n * Binds the texture using GL11. The texture will remain bound until the next bind() call of a different\n * texture object, or manual call to GL11.glBindTexture(...)\n */\nvoid Texture::bind()\n{\n    glBindTexture(GL_TEXTURE_2D, textureID);\n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "texture", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġgl", ";", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠConstructs", "Ġa", "Ġnew", "ĠTexture", "Ġobject", ",", "Ġstoring", "Ġthe", "Ġspecified", "Ġtexture", "ID", "Ġfor", "Ġbinding", "Ċ", "Ġ*", "Ġ@", "param", "Ġtexture", "ID", "Ġthe", "ĠInteger", "Ġrepresenting", "Ġthe", "Ġtexture", "Ġthat", "Ġcan", "Ġbe", "Ġbound", "Ċ", "Ġ*/", "Ċ", "Texture", "::", "Texture", "(", "std", "::", "string", "Ġassociated", "FileName", ",", "Ġgl", "::", "GLuint", "Ġtexture", "ID", ")", "Ġ:", "Ġtexture", "ID", "(", "texture", "ID", "),", "Ġassociated", "FileName", "(", "associated", "FileName", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠBind", "s", "Ġthe", "Ġtexture", "Ġusing", "ĠGL", "11", ".", "ĠThe", "Ġtexture", "Ġwill", "Ġremain", "Ġbound", "Ġuntil", "Ġthe", "Ġnext", "Ġbind", "()", "Ġcall", "Ġof", "Ġa", "Ġdifferent", "Ċ", "Ġ*", "Ġtexture", "Ġobject", ",", "Ġor", "Ġmanual", "Ġcall", "Ġto", "ĠGL", "11", ".", "glBind", "Texture", "(...)", "Ċ", "Ġ*/", "Ċ", "void", "ĠTexture", "::", "bind", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠglBind", "Texture", "(", "GL", "_", "TEXTURE", "_", "2", "D", ",", "Ġtexture", "ID", ");", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::422", "code": "#include \"Core.h\"\n#include \"Async/ActionGraph.h\"\n#include \"ActionGraphImplementation.h\"\n\nstd::shared_ptr<ActionGraphInterface> ActionGraphInterface::c_graphImp = nullptr;\n\nstd::weak_ptr<ActionGraphInterface> ActionGraphInterface::Get()\n{\n\t// if it`s not init, just crash.\n\tcheck(c_graphImp != nullptr);\n\treturn c_graphImp;\n}\n\nvoid ActionGraphInterface::Init(const unsigned int& inWorkThreadNum)\n{\n\tc_graphImp = std::shared_ptr<ActionGraphInterface>(new ActionGraphImplementation());\n\tc_graphImp->ConstructWorkThread(inWorkThreadNum);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Core", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Async", "/", "Action", "Graph", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Action", "Graph", "Implementation", ".", "h", "\"", "Ċ", "Ċ", "std", "::", "shared", "_", "ptr", "<", "Action", "Graph", "Interface", ">", "ĠAction", "Graph", "Interface", "::", "c", "_", "graph", "Imp", "Ġ=", "Ġnullptr", ";", "Ċ", "Ċ", "std", "::", "weak", "_", "ptr", "<", "Action", "Graph", "Interface", ">", "ĠAction", "Graph", "Interface", "::", "Get", "()", "Ċ", "{", "Ċ", "ĉ", "//", "Ġif", "Ġit", "`", "s", "Ġnot", "Ġinit", ",", "Ġjust", "Ġcrash", ".", "Ċ", "ĉ", "check", "(", "c", "_", "graph", "Imp", "Ġ!=", "Ġnullptr", ");", "Ċ", "ĉ", "return", "Ġc", "_", "graph", "Imp", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAction", "Graph", "Interface", "::", "Init", "(", "const", "Ġunsigned", "Ġint", "&", "Ġin", "Work", "Thread", "Num", ")", "Ċ", "{", "Ċ", "ĉ", "c", "_", "graph", "Imp", "Ġ=", "Ġstd", "::", "shared", "_", "ptr", "<", "Action", "Graph", "Interface", ">(", "new", "ĠAction", "Graph", "Implementation", "());", "Ċ", "ĉ", "c", "_", "graph", "Imp", "->", "Construct", "Work", "Thread", "(", "in", "Work", "Thread", "Num", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::423", "code": "//\n//\n//\n#include \"network.hpp\"\n#include \"session.hpp\"\n\nnamespace led_d\n{\n\n  network_t::network_t (asio::io_service &io_service,\n                        core::port_t::value_t port,\n                        queue_t &queue)\n    : m_acceptor (io_service, asio::ip::tcp::endpoint (asio::ip::tcp::v4 (), port)),\n      m_socket (io_service),\n      m_queue (queue)\n  {\n    do_accept ();\n  }\n\n  void network_t::do_accept ()\n  {\n    m_acceptor.async_accept\n      (m_socket,\n       [this] (std::error_code err_code)\n       {\n         if (!err_code) {\n           std::make_shared<session_t>(std::move (m_socket), m_queue)->start ();\n         }\n         do_accept ();\n       }\n       );\n  }\n\n} // namespace led_d\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ċ", "//", "Ċ", "#", "include", "Ġ\"", "network", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "session", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġled", "_", "d", "Ċ", "{", "Ċ", "Ċ", "Ġ", "Ġnetwork", "_", "t", "::", "network", "_", "t", "Ġ(", "asio", "::", "io", "_", "service", "Ġ&", "io", "_", "service", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcore", "::", "port", "_", "t", "::", "value", "_", "t", "Ġport", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġqueue", "_", "t", "Ġ&", "queue", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġm", "_", "accept", "or", "Ġ(", "io", "_", "service", ",", "Ġasio", "::", "ip", "::", "tcp", "::", "endpoint", "Ġ(", "asio", "::", "ip", "::", "tcp", "::", "v", "4", "Ġ(),", "Ġport", ")),", "Ċ", "ĠĠĠĠĠ", "Ġm", "_", "socket", "Ġ(", "io", "_", "service", "),", "Ċ", "ĠĠĠĠĠ", "Ġm", "_", "queue", "Ġ(", "queue", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġdo", "_", "accept", "Ġ();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġnetwork", "_", "t", "::", "do", "_", "accept", "Ġ()", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġm", "_", "accept", "or", ".", "async", "_", "accept", "Ċ", "ĠĠĠĠĠ", "Ġ(", "m", "_", "socket", ",", "Ċ", "ĠĠĠĠĠĠ", "Ġ[", "this", "]", "Ġ(", "std", "::", "error", "_", "code", "Ġerr", "_", "code", ")", "Ċ", "ĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "err", "_", "code", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "make", "_", "shared", "<", "session", "_", "t", ">(", "std", "::", "move", "Ġ(", "m", "_", "socket", "),", "Ġm", "_", "queue", ")->", "start", "Ġ();", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġdo", "_", "accept", "Ġ();", "Ċ", "ĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠ", "Ġ);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġled", "_", "d", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::424", "code": "#include <cstdio>\n#include <vector>\nusing namespace std;\n\nlong long phi(long long n)\n{\n  long long ans = n;\n  for (long long i = 2LL; i*i <= n; i++) {\n    if (n % i == 0LL) {\n      ans -= ans / i;\n      while (n % i == 0LL) {\n        n /= i;\n      }\n    }\n  }\n  if (n > 1) {\n    ans -= ans / n;\n  }\n  return ans;\n}\n\nvector<long long> factorize(long long n)\n{\n  vector<long long> fs;\n  for (long long i = 1LL; i*i <= n; i++) {\n    if (n % i == 0LL) {\n      fs.push_back(i);\n      if (i*i != n) {\n        fs.push_back(n/i);\n      }\n    }\n  }\n  return fs;\n}\nint main()\n{\n  long long N;\n  while (scanf(\"%lld\", &N) != EOF) {\n    long long ans = 0;\n    const vector<long long> fs = factorize(N);\n    ans = 0;\n    for (vector<long long>::const_iterator it = fs.begin(); it != fs.end(); ++it) {\n      ans += *it * phi(N / *it);\n    }\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "long", "Ġlong", "Ġphi", "(", "long", "Ġlong", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġlong", "Ġlong", "Ġans", "Ġ=", "Ġn", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "long", "Ġlong", "Ġi", "Ġ=", "Ġ2", "LL", ";", "Ġi", "*", "i", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "n", "Ġ%", "Ġi", "Ġ==", "Ġ0", "LL", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ-=", "Ġans", "Ġ/", "Ġi", ";", "Ċ", "ĠĠĠĠĠ", "Ġwhile", "Ġ(", "n", "Ġ%", "Ġi", "Ġ==", "Ġ0", "LL", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġn", "Ġ/=", "Ġi", ";", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ(", "n", "Ġ>", "Ġ1", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġans", "Ġ-=", "Ġans", "Ġ/", "Ġn", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġans", ";", "Ċ", "}", "Ċ", "Ċ", "vector", "<", "long", "Ġlong", ">", "Ġfactor", "ize", "(", "long", "Ġlong", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġvector", "<", "long", "Ġlong", ">", "Ġfs", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "long", "Ġlong", "Ġi", "Ġ=", "Ġ1", "LL", ";", "Ġi", "*", "i", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "n", "Ġ%", "Ġi", "Ġ==", "Ġ0", "LL", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġfs", ".", "push", "_", "back", "(", "i", ");", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "i", "*", "i", "Ġ!=", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfs", ".", "push", "_", "back", "(", "n", "/", "i", ");", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġfs", ";", "Ċ", "}", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġlong", "Ġlong", "ĠN", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "scanf", "(\"%", "lld", "\",", "Ġ&", "N", ")", "Ġ!=", "ĠEOF", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġlong", "Ġlong", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġconst", "Ġvector", "<", "long", "Ġlong", ">", "Ġfs", "Ġ=", "Ġfactor", "ize", "(", "N", ");", "Ċ", "ĠĠĠ", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "vector", "<", "long", "Ġlong", ">::", "const", "_", "iterator", "Ġit", "Ġ=", "Ġfs", ".", "begin", "();", "Ġit", "Ġ!=", "Ġfs", ".", "end", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġans", "Ġ+=", "Ġ*", "it", "Ġ*", "Ġphi", "(", "N", "Ġ/", "Ġ*", "it", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġprintf", "(\"%", "lld", "\\", "n", "\",", "Ġans", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::425", "code": "#include \"benchmark/benchmark.h\"\n\n#include \"c4/log.hpp\"\n#include \"c4/allocator.hpp\"\n#include \"../list_types.hpp\"\n\nnamespace bm = benchmark;\n\nnamespace c4 {\n\ntemplate< class List >\nvoid BM_ListPushBack(bm::State& st)\n{\n    List li;\n    using T = typename List::value_type;\n    T v{};\n    size_t count = 0;\n    while(st.KeepRunning())\n    {\n        for(int i = 0, e = st.range(0); i < e; ++i)\n        {\n            if(li.size() == li.max_size()) li.clear();\n            li.push_back(v);\n            ++count;\n        }\n        li.clear();\n    }\n    st.SetComplexityN(st.range(0));\n    st.SetItemsProcessed(count);\n    st.SetBytesProcessed(count * sizeof(T));\n}\n\nBENCHMARK_TEMPLATE(BM_ListPushBack, split_list__paged_rt< int C4_COMMA  int32_t >)\n    ->RangeMultiplier(2)\n    ->Range(4, 1<<19)\n    ->Complexity();\n\n} // end namespace c4\n\nBENCHMARK_MAIN()", "code_tokens": ["Ġ#", "include", "Ġ\"", "benchmark", "/", "benchmark", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "c", "4", "/", "log", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "c", "4", "/", "allocator", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "list", "_", "types", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġbm", "Ġ=", "Ġbenchmark", ";", "Ċ", "Ċ", "namespace", "Ġc", "4", "Ġ{", "Ċ", "Ċ", "template", "<", "Ġclass", "ĠList", "Ġ>", "Ċ", "void", "ĠBM", "_", "List", "PushBack", "(", "bm", "::", "State", "&", "Ġst", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠList", "Ġli", ";", "Ċ", "ĠĠĠ", "Ġusing", "ĠT", "Ġ=", "Ġtypename", "ĠList", "::", "value", "_", "type", ";", "Ċ", "ĠĠĠ", "ĠT", "Ġv", "{};", "Ċ", "ĠĠĠ", "Ġsize", "_", "t", "Ġcount", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġwhile", "(", "st", ".", "Keep", "Running", "())", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ",", "Ġe", "Ġ=", "Ġst", ".", "range", "(", "0", ");", "Ġi", "Ġ<", "Ġe", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "li", ".", "size", "()", "Ġ==", "Ġli", ".", "max", "_", "size", "())", "Ġli", ".", "clear", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġli", ".", "push", "_", "back", "(", "v", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "count", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġli", ".", "clear", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġst", ".", "Set", "Complexity", "N", "(", "st", ".", "range", "(", "0", "));", "Ċ", "ĠĠĠ", "Ġst", ".", "Set", "Items", "Processed", "(", "count", ");", "Ċ", "ĠĠĠ", "Ġst", ".", "SetBytes", "Processed", "(", "count", "Ġ*", "Ġsizeof", "(", "T", "));", "Ċ", "}", "Ċ", "Ċ", "B", "ENCH", "MARK", "_", "TEMPLATE", "(", "BM", "_", "List", "PushBack", ",", "Ġsplit", "_", "list", "__", "paged", "_", "rt", "<", "Ġint", "ĠC", "4", "_", "COMMA", "Ġ", "Ġint", "32", "_", "t", "Ġ>", ")", "Ċ", "ĠĠĠ", "Ġ->", "Range", "Multiplier", "(", "2", ")", "Ċ", "ĠĠĠ", "Ġ->", "Range", "(", "4", ",", "Ġ1", "<<", "19", ")", "Ċ", "ĠĠĠ", "Ġ->", "Complexity", "();", "Ċ", "Ċ", "}", "Ġ//", "Ġend", "Ġnamespace", "Ġc", "4", "Ċ", "Ċ", "B", "ENCH", "MARK", "_", "MAIN", "()"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::426", "code": "#include \"BinaryLLHeap.h\"\n\nint main(int argc, char* argv[])\n{\n  BinaryLLHeap <int> heap;\n  heap.insert(5);\n  return 0;\n}\n \n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Binary", "LL", "Heap", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ċ", "{", "Ċ", "Ġ", "ĠBinary", "LL", "Heap", "Ġ<", "int", ">", "Ġheap", ";", "Ċ", "Ġ", "Ġheap", ".", "insert", "(", "5", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "ĠĊ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::427", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ull = unsigned long long;\n\null arr[int(1e5)+5];\nint n, q, x;\n\nint bs(int key) {\n\tint l = 0, r = n-1, mid, ans=-1;\n\n\twhile (l <= r) {\n\t\tmid = l + (r - l + 1)/2;\n\n\t\tif (arr[mid] == key) {\n\t\t\tr = mid - 1;\n\t\t\tans = mid;\n\t\t}\n\t\telse if (arr[mid] < key) l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\n\treturn ans;\n}\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\n\tcin >> n >> q;\n\n\tfor (int i = 0; i < n; ++i) cin >> x, arr[i] = x + INT_MAX;\n\n\tfor (int i = 0; i < q; ++i) {\n\t\tcin >> x;\n\t\tcout << bs(x + INT_MAX) << '\\n';\n\t}\n\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "using", "Ġ", "ull", "Ġ=", "Ġunsigned", "Ġlong", "Ġlong", ";", "Ċ", "Ċ", "ull", "Ġarr", "[", "int", "(", "1", "e", "5", ")+", "5", "];", "Ċ", "int", "Ġn", ",", "Ġq", ",", "Ġx", ";", "Ċ", "Ċ", "int", "Ġbs", "(", "int", "Ġkey", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġl", "Ġ=", "Ġ0", ",", "Ġr", "Ġ=", "Ġn", "-", "1", ",", "Ġmid", ",", "Ġans", "=-", "1", ";", "Ċ", "Ċ", "ĉ", "while", "Ġ(", "l", "Ġ<=", "Ġr", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "mid", "Ġ=", "Ġl", "Ġ+", "Ġ(", "r", "Ġ-", "Ġl", "Ġ+", "Ġ1", ")/", "2", ";", "Ċ", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "arr", "[", "mid", "]", "Ġ==", "Ġkey", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "r", "Ġ=", "Ġmid", "Ġ-", "Ġ1", ";", "Ċ", "ĉĉ", "ĉ", "ans", "Ġ=", "Ġmid", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ġif", "Ġ(", "arr", "[", "mid", "]", "Ġ<", "Ġkey", ")", "Ġl", "Ġ=", "Ġmid", "Ġ+", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "else", "Ġr", "Ġ=", "Ġmid", "Ġ-", "Ġ1", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġans", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "ios", "::", "sync", "_", "with", "_", "stdio", "(", "0", ");", "Ċ", "ĉ", "cin", ".", "tie", "(", "0", ");", "Ċ", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", "Ġ>>", "Ġq", ";", "Ċ", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġcin", "Ġ>>", "Ġx", ",", "Ġarr", "[", "i", "]", "Ġ=", "Ġx", "Ġ+", "ĠINT", "_", "MAX", ";", "Ċ", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġq", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġx", ";", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġbs", "(", "x", "Ġ+", "ĠINT", "_", "MAX", ")", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::428", "code": "#include <unistd.h>\n#include <string.h>\n#include <stdio.h>\n#include <iostream>\n\nusing namespace std;\n\nvoid foo(char* p){\n    memcpy(p, \"01234567890\", 32);\n}\n\nvoid foo2(char *p) {\n  for (int i = 0; i < 100; i++) {\n    cout << \"start p[\" << i << \"]\" << endl;\n    p[i] = 'a';\n    cout << \"p[\" << i << \"] ok \" << endl;\n  }\n} \nint main(int argc, char** argv){\n    char* p = new char[10];\n    //foo(p);\n    delete []p;\n    foo2(p);\n    printf(\"p=%s\\n\", p);\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġfoo", "(", "char", "*", "Ġp", "){", "Ċ", "ĠĠĠ", "Ġmemcpy", "(", "p", ",", "Ġ\"", "0", "1234567890", "\",", "Ġ32", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġfoo", "2", "(", "char", "Ġ*", "p", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "start", "Ġp", "[\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"]\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġp", "[", "i", "]", "Ġ=", "Ġ'", "a", "';", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "p", "[\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"]", "Ġok", "Ġ\"", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ġ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", "){", "Ċ", "ĠĠĠ", "Ġchar", "*", "Ġp", "Ġ=", "Ġnew", "Ġchar", "[", "10", "];", "Ċ", "ĠĠĠ", "Ġ//", "foo", "(", "p", ");", "Ċ", "ĠĠĠ", "Ġdelete", "Ġ[]", "p", ";", "Ċ", "ĠĠĠ", "Ġfoo", "2", "(", "p", ");", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "p", "=%", "s", "\\", "n", "\",", "Ġp", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::429", "code": "// Copyright (c) 2009-2010 Satoshi Nakamoto\n// Copyright (c) 2009-2017 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n#include <galaxycash.h>\n\n#include <chainparams.h>\n#include <hash.h>\n#include <memory>\n#include <pow.h>\n#include <uint256.h>\n#include <util.h>\n\n#include <stdint.h>\n\n\nCGalaxyCashStateRef g_galaxycash;\n\n\nCGalaxyCashDB::CGalaxyCashDB(size_t nCacheSize, bool fMemory, bool fWipe) : CDBWrapper(GetDataDir() / \"galaxycash\" / \"database\", nCacheSize, fMemory, fWipe)\n{\n}\n\n\nclass CGalaxyCashVM\n{\npublic:\n    CGalaxyCashVM();\n    ~CGalaxyCashVM();\n};\n\nCGalaxyCashVM::CGalaxyCashVM()\n{\n}\n\nCGalaxyCashState::CGalaxyCashState() : pdb(new CGalaxyCashDB((gArgs.GetArg(\"-gchdbcache\", 128) << 20), false, gArgs.GetBoolArg(\"-reindex\", false)))\n{\n}\nCGalaxyCashState::~CGalaxyCashState()\n{\n    delete pdb;\n}\n\nvoid CGalaxyCashState::EvalScript()\n{\n}\n\nbool CGalaxyCashConsensus::CheckSignature() const\n{\n    return true;\n}", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2010", "ĠSat", "os", "hi", "ĠN", "ak", "am", "oto", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2017", "ĠThe", "ĠBitcoin", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠCOPY", "ING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "licenses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "#", "include", "Ġ<", "g", "alax", "yc", "ash", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "chain", "params", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "hash", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "pow", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "uint", "256", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "util", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "Ċ", "Ċ", "CG", "alaxy", "Cash", "StateRef", "Ġg", "_", "g", "alax", "yc", "ash", ";", "Ċ", "Ċ", "Ċ", "CG", "alaxy", "Cash", "DB", "::", "CG", "alaxy", "Cash", "DB", "(", "size", "_", "t", "Ġn", "CacheSize", ",", "Ġbool", "Ġf", "Memory", ",", "Ġbool", "Ġf", "W", "ipe", ")", "Ġ:", "ĠC", "DB", "Wrapper", "(", "GetData", "Dir", "()", "Ġ/", "Ġ\"", "g", "alax", "yc", "ash", "\"", "Ġ/", "Ġ\"", "database", "\",", "Ġn", "CacheSize", ",", "Ġf", "Memory", ",", "Ġf", "W", "ipe", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "class", "ĠCG", "alaxy", "Cash", "VM", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠCG", "alaxy", "Cash", "VM", "();", "Ċ", "ĠĠĠ", "Ġ~", "CG", "alaxy", "Cash", "VM", "();", "Ċ", "};", "Ċ", "Ċ", "CG", "alaxy", "Cash", "VM", "::", "CG", "alaxy", "Cash", "VM", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "CG", "alaxy", "Cash", "State", "::", "CG", "alaxy", "Cash", "State", "()", "Ġ:", "Ġpdb", "(", "new", "ĠCG", "alaxy", "Cash", "DB", "((", "g", "Args", ".", "GetArg", "(\"-", "g", "ch", "db", "cache", "\",", "Ġ128", ")", "Ġ<<", "Ġ20", "),", "Ġfalse", ",", "Ġg", "Args", ".", "GetBool", "Arg", "(\"-", "re", "index", "\",", "Ġfalse", ")))", "Ċ", "{", "Ċ", "}", "Ċ", "CG", "alaxy", "Cash", "State", "::~", "CG", "alaxy", "Cash", "State", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġpdb", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCG", "alaxy", "Cash", "State", "::", "Eval", "Script", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠCG", "alaxy", "Cash", "Consensus", "::", "Check", "Signature", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::430", "code": "#if UNIT_TEST_PROG == true\n#include \"tests/unit_tests.hpp\"\n#endif\n\n#include <utility>\n\n#include \"common/global/program_data.hpp\"\n#include \"menus/budget_menu.hpp\"\n\n\nnamespace\n{\n    global::program_data load_program_data();\n    int start_prog();\n    \n    \n    /**\n     * @brief Returns a global::program_data that is initialized to program defaults.\n     * This function will also be the place where the data is loaded from files, \n     * should program_data be loaded from a file in the future.\n     * @return the default program data.\n     */\n    inline global::program_data load_program_data()\n    {\n        //a place for future initialization, should that be added.\n        global::program_data pdat;\n        pdat.budget_files = std::move(global::budget_paths(pdat.budget_folder));\n        return pdat;\n    }\n    \n    __attribute__((unused)) inline int start_prog()\n    {\n        global::program_data pdat(std::move(load_program_data()));\n        return !menu::budget_list_menu(pdat);\n    }\n    \n}\n\n\nint main(int count __attribute__((unused)), char **vec __attribute__((unused)))\n{\n#if UNIT_TEST_PROG == true\n    run_tests();\n    return 0;\n#else\n    return start_prog();\n#endif\n}\n\n", "code_tokens": ["Ġ#", "if", "ĠUNIT", "_", "TEST", "_", "PROG", "Ġ==", "Ġtrue", "Ċ", "#", "include", "Ġ\"", "tests", "/", "unit", "_", "tests", ".", "hpp", "\"", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "common", "/", "global", "/", "program", "_", "data", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "menus", "/", "budget", "_", "menu", ".", "hpp", "\"", "Ċ", "Ċ", "Ċ", "namespace", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġglobal", "::", "program", "_", "data", "Ġload", "_", "program", "_", "data", "();", "Ċ", "ĠĠĠ", "Ġint", "Ġstart", "_", "prog", "();", "Ċ", "ĠĠĠĠĊ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "brief", "ĠReturns", "Ġa", "Ġglobal", "::", "program", "_", "data", "Ġthat", "Ġis", "Ġinitialized", "Ġto", "Ġprogram", "Ġdefaults", ".", "Ċ", "ĠĠĠĠ", "Ġ*", "ĠThis", "Ġfunction", "Ġwill", "Ġalso", "Ġbe", "Ġthe", "Ġplace", "Ġwhere", "Ġthe", "Ġdata", "Ġis", "Ġloaded", "Ġfrom", "Ġfiles", ",", "ĠĊ", "ĠĠĠĠ", "Ġ*", "Ġshould", "Ġprogram", "_", "data", "Ġbe", "Ġloaded", "Ġfrom", "Ġa", "Ġfile", "Ġin", "Ġthe", "Ġfuture", ".", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "return", "Ġthe", "Ġdefault", "Ġprogram", "Ġdata", ".", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġinline", "Ġglobal", "::", "program", "_", "data", "Ġload", "_", "program", "_", "data", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "a", "Ġplace", "Ġfor", "Ġfuture", "Ġinitialization", ",", "Ġshould", "Ġthat", "Ġbe", "Ġadded", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġglobal", "::", "program", "_", "data", "Ġp", "dat", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġp", "dat", ".", "budget", "_", "files", "Ġ=", "Ġstd", "::", "move", "(", "global", "::", "budget", "_", "paths", "(", "p", "dat", ".", "budget", "_", "folder", "));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġp", "dat", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ__", "attribute", "__((", "unused", "))", "Ġinline", "Ġint", "Ġstart", "_", "prog", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġglobal", "::", "program", "_", "data", "Ġp", "dat", "(", "std", "::", "move", "(", "load", "_", "program", "_", "data", "()));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ!", "menu", "::", "budget", "_", "list", "_", "menu", "(", "p", "dat", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠ", "Ċ", "}", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġcount", "Ġ__", "attribute", "__((", "unused", ")),", "Ġchar", "Ġ**", "vec", "Ġ__", "attribute", "__((", "unused", ")))", "Ċ", "{", "Ċ", "#", "if", "ĠUNIT", "_", "TEST", "_", "PROG", "Ġ==", "Ġtrue", "Ċ", "ĠĠĠ", "Ġrun", "_", "tests", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "#", "else", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstart", "_", "prog", "();", "Ċ", "#", "endif", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::431", "code": "/*\n * Fiahil\n * 12.05.2012\n */\n\n#if !defined(__Bomberman_Bonus_h)\n#define __Bomberman_Bonus_h\n\n#include <Model.hpp>\n#include \"enum.hpp\"\n#include \"AObj.hpp\"\n\nclass Bonus : public AObj\n{\npublic:\n  Bonus(BonusType::eBonus t, Point const&, gdl::Model&);\n  virtual ~Bonus();\n\nprivate:\n  BonusType::eBonus\t_type;\n  gdl::Model&\t\t_model;\n\npublic:\n  BonusType::eBonus\tgetType(void) const;\n\n  void\t\tinitialize(void);\n  void\t\tdraw();\n  void\t\tupdate(gdl::GameClock const&, gdl::Input&);\n};\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠF", "ia", "hil", "Ċ", "Ġ*", "Ġ12", ".", "05", ".", "2012", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "if", "Ġ!", "defined", "(__", "B", "om", "ber", "man", "_", "Bonus", "_", "h", ")", "Ċ", "#", "define", "Ġ__", "B", "om", "ber", "man", "_", "Bonus", "_", "h", "Ċ", "Ċ", "#", "include", "Ġ<", "Model", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "enum", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "A", "Obj", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠB", "onus", "Ġ:", "Ġpublic", "ĠA", "Obj", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠB", "onus", "(", "Bonus", "Type", "::", "e", "Bonus", "Ġt", ",", "ĠPoint", "Ġconst", "&,", "Ġg", "dl", "::", "Model", "&", ");", "Ċ", "Ġ", "Ġvirtual", "Ġ~", "Bonus", "();", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "ĠB", "onus", "Type", "::", "e", "Bonus", "ĉ", "_", "type", ";", "Ċ", "Ġ", "Ġg", "dl", "::", "Model", "&", "ĉ", "ĉ", "_", "model", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "ĠB", "onus", "Type", "::", "e", "Bonus", "ĉ", "getType", "(", "void", ")", "Ġconst", ";", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĉ", "ĉ", "initialize", "(", "void", ");", "Ċ", "Ġ", "Ġvoid", "ĉ", "ĉ", "draw", "();", "Ċ", "Ġ", "Ġvoid", "ĉ", "ĉ", "update", "(", "g", "dl", "::", "Game", "Clock", "Ġconst", "&,", "Ġg", "dl", "::", "Input", "&", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::432", "code": "#include \"DirectFormOscillator.h\"\r\n\r\nusing namespace DSP;\r\n\r\nDirectFormOscillator::DirectFormOscillator(){\r\n    init = false;\r\n}\r\n\r\nvoid DirectFormOscillator::setFrequency(float frequency, float sampleRate){\r\n    if(fo != frequency){\r\n        flush();\r\n        fo = frequency;\r\n    }\r\n    fs = sampleRate;\r\n\ttheta = 2 * PI * fo / fs;\r\n    b1 = -2 * cosf(theta);\r\n    b2 = 1.0f;\r\n    if(!init){\r\n        yn1 = sinf(-1 * theta);\r\n        yn2 = sinf(-2 * theta);\r\n        init = true;\r\n    }\r\n}\r\n\r\nfloat DirectFormOscillator::getNextSample(float input){\r\n    float output = - (b1 * yn1) - (b2 * yn2);\r\n    yn2 = yn1;\r\n    yn1 = output;\r\n    return output;\r\n}\r\n\r\nvoid DirectFormOscillator::flush(){\r\n    yn1 = yn2 = 0;\r\n    init = false;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Direct", "Form", "Osc", "illator", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "ĠDSP", ";", "č", "Ċ", "č", "Ċ", "Direct", "Form", "Osc", "illator", "::", "Direct", "Form", "Osc", "illator", "(){", "č", "Ċ", "ĠĠĠ", "Ġinit", "Ġ=", "Ġfalse", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDirect", "Form", "Osc", "illator", "::", "set", "Frequency", "(", "float", "Ġfrequency", ",", "Ġfloat", "ĠsampleRate", "){", "č", "Ċ", "ĠĠĠ", "Ġif", "(", "fo", "Ġ!=", "Ġfrequency", "){", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġflush", "();", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfo", "Ġ=", "Ġfrequency", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġfs", "Ġ=", "ĠsampleRate", ";", "č", "Ċ", "ĉ", "theta", "Ġ=", "Ġ2", "Ġ*", "ĠPI", "Ġ*", "Ġfo", "Ġ/", "Ġfs", ";", "č", "Ċ", "ĠĠĠ", "Ġb", "1", "Ġ=", "Ġ-", "2", "Ġ*", "Ġcos", "f", "(", "theta", ");", "č", "Ċ", "ĠĠĠ", "Ġb", "2", "Ġ=", "Ġ1", ".", "0", "f", ";", "č", "Ċ", "ĠĠĠ", "Ġif", "(!", "init", "){", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ", "yn", "1", "Ġ=", "Ġs", "inf", "(-", "1", "Ġ*", "Ġtheta", ");", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ", "yn", "2", "Ġ=", "Ġs", "inf", "(-", "2", "Ġ*", "Ġtheta", ");", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġinit", "Ġ=", "Ġtrue", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "float", "ĠDirect", "Form", "Osc", "illator", "::", "getNext", "Sample", "(", "float", "Ġinput", "){", "č", "Ċ", "ĠĠĠ", "Ġfloat", "Ġoutput", "Ġ=", "Ġ-", "Ġ(", "b", "1", "Ġ*", "Ġ", "yn", "1", ")", "Ġ-", "Ġ(", "b", "2", "Ġ*", "Ġ", "yn", "2", ");", "č", "Ċ", "ĠĠĠ", "Ġ", "yn", "2", "Ġ=", "Ġ", "yn", "1", ";", "č", "Ċ", "ĠĠĠ", "Ġ", "yn", "1", "Ġ=", "Ġoutput", ";", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġoutput", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDirect", "Form", "Osc", "illator", "::", "flush", "(){", "č", "Ċ", "ĠĠĠ", "Ġ", "yn", "1", "Ġ=", "Ġ", "yn", "2", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĠĠĠ", "Ġinit", "Ġ=", "Ġfalse", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::433", "code": "#define BOOST_TEST_DYN_LINK\n#include <boost/test/unit_test.hpp>\n#include \"utils/VerticalLinearizer2D.hpp\"\n#include <cstdlib>\n\nvoid verticalLinearizer2D_test_array(const std::size_t width, const std::size_t height)\n{\n  VerticalLinearizer2D linearizer (width, height, -10, -20);\n\n  std::size_t linearized = 0;\n\n  for(int y = -20; y < height; ++y) {\n    for(int x = -10; x < width; ++x) {\n      BOOST_REQUIRE(linearizer.getX(linearized) == x);\n      BOOST_REQUIRE(linearizer.getY(linearized) == y);\n      BOOST_REQUIRE(linearizer.linearize(x, y) == linearized);\n      linearized += 1;\n    }\n  }\n}\n\nBOOST_AUTO_TEST_CASE( VerticalLinearizer2DTest )\n{\n  verticalLinearizer2D_test_array(0, 0);\n  verticalLinearizer2D_test_array(10, 10);\n  verticalLinearizer2D_test_array(20, 60);\n  verticalLinearizer2D_test_array(60, 20);\n}\n", "code_tokens": ["Ġ#", "define", "ĠBOOST", "_", "TEST", "_", "DYN", "_", "LINK", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "unit", "_", "test", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "utils", "/", "Vertical", "Linear", "izer", "2", "D", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "Ċ", "void", "Ġvertical", "Linear", "izer", "2", "D", "_", "test", "_", "array", "(", "const", "Ġstd", "::", "size", "_", "t", "Ġwidth", ",", "Ġconst", "Ġstd", "::", "size", "_", "t", "Ġheight", ")", "Ċ", "{", "Ċ", "Ġ", "ĠVertical", "Linear", "izer", "2", "D", "Ġlinear", "izer", "Ġ(", "width", ",", "Ġheight", ",", "Ġ-", "10", ",", "Ġ-", "20", ");", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "size", "_", "t", "Ġlinear", "ized", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "Ġ", "Ġfor", "(", "int", "Ġy", "Ġ=", "Ġ-", "20", ";", "Ġy", "Ġ<", "Ġheight", ";", "Ġ++", "y", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġx", "Ġ=", "Ġ-", "10", ";", "Ġx", "Ġ<", "Ġwidth", ";", "Ġ++", "x", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "ĠBOOST", "_", "REQUIRE", "(", "linear", "izer", ".", "getX", "(", "linear", "ized", ")", "Ġ==", "Ġx", ");", "Ċ", "ĠĠĠĠĠ", "ĠBOOST", "_", "REQUIRE", "(", "linear", "izer", ".", "getY", "(", "linear", "ized", ")", "Ġ==", "Ġy", ");", "Ċ", "ĠĠĠĠĠ", "ĠBOOST", "_", "REQUIRE", "(", "linear", "izer", ".", "linear", "ize", "(", "x", ",", "Ġy", ")", "Ġ==", "Ġlinear", "ized", ");", "Ċ", "ĠĠĠĠĠ", "Ġlinear", "ized", "Ġ+=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "CASE", "(", "ĠVertical", "Linear", "izer", "2", "D", "Test", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġvertical", "Linear", "izer", "2", "D", "_", "test", "_", "array", "(", "0", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġvertical", "Linear", "izer", "2", "D", "_", "test", "_", "array", "(", "10", ",", "Ġ10", ");", "Ċ", "Ġ", "Ġvertical", "Linear", "izer", "2", "D", "_", "test", "_", "array", "(", "20", ",", "Ġ60", ");", "Ċ", "Ġ", "Ġvertical", "Linear", "izer", "2", "D", "_", "test", "_", "array", "(", "60", ",", "Ġ20", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::434", "code": "#include <seqan/sequence.h>\n#include <seqan/index.h>\n\nusing namespace seqan;\n\nint main()\n{\n    String<Dna5> genome = \"TTATTAAGCGTATAGCCCTATAAATATAA\";\n    Index<String<Dna5>, IndexEsa<> > esaIndex(genome); \n    Finder<Index<String<Dna5>, IndexEsa<> > > esaFinder(esaIndex);\n\n    while(find(esaFinder, \"TATAA\")){  \n    std::cout << position(esaFinder) << '\\n'; // -> 0\n    }\n    \n}", "code_tokens": ["Ġ#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "index", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠString", "<", "D", "na", "5", ">", "Ġgenome", "Ġ=", "Ġ\"", "TT", "ATT", "AA", "G", "CG", "T", "AT", "AG", "CC", "CT", "AT", "AA", "AT", "AT", "AA", "\";", "Ċ", "ĠĠĠ", "ĠIndex", "<", "String", "<", "D", "na", "5", ">,", "ĠIndex", "E", "sa", "<>", "Ġ>", "Ġes", "a", "Index", "(", "gen", "ome", ");", "ĠĊ", "ĠĠĠ", "ĠFind", "er", "<", "Index", "<", "String", "<", "D", "na", "5", ">,", "ĠIndex", "E", "sa", "<>", "Ġ>", "Ġ>", "Ġes", "a", "Finder", "(", "esa", "Index", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "(", "find", "(", "esa", "Finder", ",", "Ġ\"", "T", "AT", "AA", "\")){", "ĠĠĊ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġposition", "(", "esa", "Finder", ")", "Ġ<<", "Ġ'\\", "n", "';", "Ġ//", "Ġ->", "Ġ0", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::435", "code": "#include \"ofApp.h\"\n\nvoid ofApp::setup() {\n\tofSetVerticalSync(true);\n\tcam.initGrabber(1280, 720);\n\tbulgeEffect.setup(1280, 720);\n}\n\nvoid ofApp::update() {\n\tcam.update();\n}\n\nvoid ofApp::draw() {\n\tif(ofGetMousePressed()) {\n\t\tbulgeEffect.addBulge(ofGetWidth() / 2 - mouseX, ofGetHeight() / 2, mouseY);\n\t\tbulgeEffect.addBulge(ofGetWidth() / 2 + mouseX, ofGetHeight() / 2, mouseY);\n\t} else {\n\t\tofSeedRandom(0);\n\t\tfor(int i = 0; i < 64; i++) {\n\t\t\tfloat x = ofMap(sin(ofGetElapsedTimef() * ofRandom(3)), -1, 1, 0, ofGetWidth());\n\t\t\tfloat y = ofMap(sin(ofGetElapsedTimef() * ofRandom(3)), -1, 1, 0, ofGetHeight());\n\t\t\tbulgeEffect.addBulge(x, y, ofRandom(64, 512));\n\t\t}\n\t}\n\t\n\tbulgeEffect.draw(cam.getTextureReference(), 0, 0);\n\t\n\tofDrawBitmapStringHighlight(ofToString((int) ofGetFrameRate()), 10, 20);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "of", "App", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠofApp", "::", "setup", "()", "Ġ{", "Ċ", "ĉ", "of", "Set", "Vertical", "Sync", "(", "true", ");", "Ċ", "ĉ", "cam", ".", "init", "Gra", "bber", "(", "1280", ",", "Ġ7", "20", ");", "Ċ", "ĉ", "bul", "ge", "Effect", ".", "setup", "(", "1280", ",", "Ġ7", "20", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠofApp", "::", "update", "()", "Ġ{", "Ċ", "ĉ", "cam", ".", "update", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠofApp", "::", "draw", "()", "Ġ{", "Ċ", "ĉ", "if", "(", "of", "Get", "Mouse", "Pressed", "())", "Ġ{", "Ċ", "ĉ", "ĉ", "bul", "ge", "Effect", ".", "add", "B", "ul", "ge", "(", "of", "GetWidth", "()", "Ġ/", "Ġ2", "Ġ-", "Ġmouse", "X", ",", "Ġof", "GetHeight", "()", "Ġ/", "Ġ2", ",", "Ġmouse", "Y", ");", "Ċ", "ĉ", "ĉ", "bul", "ge", "Effect", ".", "add", "B", "ul", "ge", "(", "of", "GetWidth", "()", "Ġ/", "Ġ2", "Ġ+", "Ġmouse", "X", ",", "Ġof", "GetHeight", "()", "Ġ/", "Ġ2", ",", "Ġmouse", "Y", ");", "Ċ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "of", "Seed", "Random", "(", "0", ");", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ64", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉĉ", "ĉ", "float", "Ġx", "Ġ=", "Ġof", "Map", "(", "sin", "(", "of", "Get", "ElapsedTime", "f", "()", "Ġ*", "Ġof", "Random", "(", "3", ")),", "Ġ-", "1", ",", "Ġ1", ",", "Ġ0", ",", "Ġof", "GetWidth", "());", "Ċ", "ĉĉ", "ĉ", "float", "Ġy", "Ġ=", "Ġof", "Map", "(", "sin", "(", "of", "Get", "ElapsedTime", "f", "()", "Ġ*", "Ġof", "Random", "(", "3", ")),", "Ġ-", "1", ",", "Ġ1", ",", "Ġ0", ",", "Ġof", "GetHeight", "());", "Ċ", "ĉĉ", "ĉ", "bul", "ge", "Effect", ".", "add", "B", "ul", "ge", "(", "x", ",", "Ġy", ",", "Ġof", "Random", "(", "64", ",", "Ġ512", "));", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉ", "bul", "ge", "Effect", ".", "draw", "(", "cam", ".", "getTexture", "Reference", "(),", "Ġ0", ",", "Ġ0", ");", "Ċ", "ĉĊ", "ĉ", "of", "Draw", "Bitmap", "String", "Highlight", "(", "of", "ToString", "((", "int", ")", "Ġof", "Get", "FrameRate", "()),", "Ġ10", ",", "Ġ20", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::436", "code": "#ifndef RT_Rectangle_HH\n#define RT_Rectangle_HH\n\n#include \"SceneObj.hh\"\n\nclass Rectangle : public SceneObj {\npublic:\n  Rectangle();\n\n  ~Rectangle() = default;\n  Rectangle(const Rectangle &other) = default;\n  Rectangle(Rectangle &&other) = default;\n  Rectangle &operator=(const Rectangle &other) = default;\n  Rectangle &operator=(Rectangle &&other) = default;\n\n  double intersect(Vector rayVec, Camera camera) const;\n  void calcNormal(Vector &normVec, const Position &impact) const;\n\nprivate:\n  double height;\n  double width;\n};\n\n#endif /* end of include guard: RT_Rectangle_HH */\n", "code_tokens": ["Ġ#", "ifndef", "ĠRT", "_", "Rectangle", "_", "HH", "Ċ", "#", "define", "ĠRT", "_", "Rectangle", "_", "HH", "Ċ", "Ċ", "#", "include", "Ġ\"", "Scene", "Obj", ".", "hh", "\"", "Ċ", "Ċ", "class", "ĠRectangle", "Ġ:", "Ġpublic", "ĠScene", "Obj", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠRectangle", "();", "Ċ", "Ċ", "Ġ", "Ġ~", "Rectangle", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ġ", "ĠRectangle", "(", "const", "ĠRectangle", "Ġ&", "other", ")", "Ġ=", "Ġdefault", ";", "Ċ", "Ġ", "ĠRectangle", "(", "Rectangle", "Ġ&&", "other", ")", "Ġ=", "Ġdefault", ";", "Ċ", "Ġ", "ĠRectangle", "Ġ&", "operator", "=(", "const", "ĠRectangle", "Ġ&", "other", ")", "Ġ=", "Ġdefault", ";", "Ċ", "Ġ", "ĠRectangle", "Ġ&", "operator", "=(", "Rectangle", "Ġ&&", "other", ")", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "Ġ", "Ġdouble", "Ġintersect", "(", "Vector", "Ġray", "Vec", ",", "ĠCamera", "Ġcamera", ")", "Ġconst", ";", "Ċ", "Ġ", "Ġvoid", "Ġcalc", "Normal", "(", "Vector", "Ġ&", "norm", "Vec", ",", "Ġconst", "ĠPosition", "Ġ&", "impact", ")", "Ġconst", ";", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġdouble", "Ġheight", ";", "Ċ", "Ġ", "Ġdouble", "Ġwidth", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ/*", "Ġend", "Ġof", "Ġinclude", "Ġguard", ":", "ĠRT", "_", "Rectangle", "_", "HH", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::437", "code": "#include <cpp3ds/Config.hpp>\n#include <map>\n\nnamespace cpp3ds {\n    namespace priv {\n\n        struct ResourceInfo {\n            ResourceInfo() : data(nullptr), size(0) { }\n            ResourceInfo(const Uint8 *x, const Uint32 y) : data(x), size(y) { }\n            const Uint8 *data;\n            const Uint32 size;\n        };\n\n        // Defined by source file generated by res_compile.py\n\t\textern std::map<std::string, ResourceInfo> core_resources;\n\n    } // namespace priv\n} // namespace cpp3ds", "code_tokens": ["Ġ#", "include", "Ġ<", "cpp", "3", "ds", "/", "Config", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "namespace", "Ġcpp", "3", "ds", "Ġ{", "Ċ", "ĠĠĠ", "Ġnamespace", "Ġpriv", "Ġ{", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstruct", "ĠResource", "Info", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠResource", "Info", "()", "Ġ:", "Ġdata", "(", "nullptr", "),", "Ġsize", "(", "0", ")", "Ġ{", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠResource", "Info", "(", "const", "ĠUint", "8", "Ġ*", "x", ",", "Ġconst", "ĠUint", "32", "Ġy", ")", "Ġ:", "Ġdata", "(", "x", "),", "Ġsize", "(", "y", ")", "Ġ{", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "ĠUint", "8", "Ġ*", "data", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "ĠUint", "32", "Ġsize", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ};", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠDef", "ined", "Ġby", "Ġsource", "Ġfile", "Ġgenerated", "Ġby", "Ġres", "_", "compile", ".", "py", "Ċ", "ĉ", "ĉ", "extern", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠResource", "Info", ">", "Ġcore", "_", "resources", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ}", "Ġ//", "Ġnamespace", "Ġpriv", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġcpp", "3", "ds"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::438", "code": "/**\n * @file\texpectation.cpp\n * @author\tChris Vig (chris@invictus.so)\n * @date\t2016/12/30\n */\n\n/* -- Includes -- */\n\n#include <sstream>\n#include <string>\n\n#include <spookshow/spookshow.hpp>\n\n/* -- Namespaces -- */\n\nusing namespace spookshow;\n\n/* -- Procedures -- */\n\nexpectation::expectation(const std::string& name, int required_count)\n  : m_name(name),\n    m_required_count(required_count),\n    m_order(expectation_order::current_order()),\n    m_count(0)\n{\n  if (m_order)\n    m_order->enqueue_expectation(this);\n}\n\nexpectation::~expectation()\n{\n  if (is_fulfilled())\n    return;\n\n  std::ostringstream message;\n  message << \"Unfulfilled expectation! [\" << name()\n          << \"] Expected \" << m_required_count << \" call\" << (m_required_count == 1 ? \"\" : \"s\")\n          << \", received \" << m_count << \" call\" << (m_count == 1 ? \"\" : \"s\") << \".\";\n  internal::handle_failure(message.str());\n}\n\nvoid expectation::fulfill()\n{\n  if (m_order && m_count == 0)\n  {\n    if (m_order->is_expectation_next(this))\n      m_order->dequeue_expectation();\n    else\n    {\n      std::ostringstream message;\n      message << \"Expectation fulfilled out of order! [\" << name() << \"]\";\n      internal::handle_failure(message.str());\n    }\n  }\n  ++m_count;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "file", "ĉ", "expectation", ".", "cpp", "Ċ", "Ġ*", "Ġ@", "author", "ĉ", "Chr", "is", "ĠV", "ig", "Ġ(", "chris", "@", "in", "vict", "us", ".", "so", ")", "Ċ", "Ġ*", "Ġ@", "date", "ĉ", "2016", "/", "12", "/", "30", "Ċ", "Ġ*/", "Ċ", "Ċ", "/*", "Ġ--", "ĠInclude", "s", "Ġ--", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "sp", "ook", "show", "/", "sp", "ook", "show", ".", "hpp", ">", "Ċ", "Ċ", "/*", "Ġ--", "ĠName", "spaces", "Ġ--", "Ġ*/", "Ċ", "Ċ", "using", "Ġnamespace", "Ġs", "po", "ok", "show", ";", "Ċ", "Ċ", "/*", "Ġ--", "ĠPro", "cedures", "Ġ--", "Ġ*/", "Ċ", "Ċ", "expectation", "::", "expectation", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ",", "Ġint", "Ġrequired", "_", "count", ")", "Ċ", "Ġ", "Ġ:", "Ġm", "_", "name", "(", "name", "),", "Ċ", "ĠĠĠ", "Ġm", "_", "required", "_", "count", "(", "required", "_", "count", "),", "Ċ", "ĠĠĠ", "Ġm", "_", "order", "(", "expectation", "_", "order", "::", "current", "_", "order", "()),", "Ċ", "ĠĠĠ", "Ġm", "_", "count", "(", "0", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "m", "_", "order", ")", "Ċ", "ĠĠĠ", "Ġm", "_", "order", "->", "enqueue", "_", "expectation", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "expectation", "::~", "expectation", "()", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "is", "_", "ful", "filled", "())", "Ċ", "ĠĠĠ", "Ġreturn", ";", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "ostringstream", "Ġmessage", ";", "Ċ", "Ġ", "Ġmessage", "Ġ<<", "Ġ\"", "Un", "ful", "filled", "Ġexpectation", "!", "Ġ[\"", "Ġ<<", "Ġname", "()", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ<<", "Ġ\"]", "ĠExpected", "Ġ\"", "Ġ<<", "Ġm", "_", "required", "_", "count", "Ġ<<", "Ġ\"", "Ġcall", "\"", "Ġ<<", "Ġ(", "m", "_", "required", "_", "count", "Ġ==", "Ġ1", "Ġ?", "Ġ\"\"", "Ġ:", "Ġ\"", "s", "\")", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ<<", "Ġ\",", "Ġreceived", "Ġ\"", "Ġ<<", "Ġm", "_", "count", "Ġ<<", "Ġ\"", "Ġcall", "\"", "Ġ<<", "Ġ(", "m", "_", "count", "Ġ==", "Ġ1", "Ġ?", "Ġ\"\"", "Ġ:", "Ġ\"", "s", "\")", "Ġ<<", "Ġ\".\";", "Ċ", "Ġ", "Ġinternal", "::", "handle", "_", "failure", "(", "message", ".", "str", "());", "Ċ", "}", "Ċ", "Ċ", "void", "Ġexpectation", "::", "ful", "fill", "()", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "m", "_", "order", "Ġ&&", "Ġm", "_", "count", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "_", "order", "->", "is", "_", "expectation", "_", "next", "(", "this", "))", "Ċ", "ĠĠĠĠĠ", "Ġm", "_", "order", "->", "dequeue", "_", "expectation", "();", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "ostringstream", "Ġmessage", ";", "Ċ", "ĠĠĠĠĠ", "Ġmessage", "Ġ<<", "Ġ\"", "Expectation", "Ġfulfilled", "Ġout", "Ġof", "Ġorder", "!", "Ġ[\"", "Ġ<<", "Ġname", "()", "Ġ<<", "Ġ\"]\";", "Ċ", "ĠĠĠĠĠ", "Ġinternal", "::", "handle", "_", "failure", "(", "message", ".", "str", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ++", "m", "_", "count", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::439", "code": "#include <cstdio>\n#include <vector>\nusing namespace std;\n\nint k;\nint s[13], result[6];\n\nvoid dfs(int start, int depth) {\n    if (depth == 6) { // 숫자 6개를 선택했을 때\n        for (int i = 0; i < 6; i++) {\n            printf(\"%d \", result[i]);\n        }\n        printf(\"\\n\");\n        return;\n    }\n    \n    for (int i = start; i < k; i++) { // 숫자 선택\n        result[depth] = s[i];\n        dfs(i + 1, depth + 1);\n    }\n}\n\nint main() {\n    while (scanf(\"%d\", &k) && k) {\n        for (int i = 0; i < k; i++) {\n            scanf(\"%d\", &s[i]);\n        }\n        \n        dfs(0, 0);\n        \n        printf(\"\\n\");\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġk", ";", "Ċ", "int", "Ġs", "[", "13", "],", "Ġresult", "[", "6", "];", "Ċ", "Ċ", "void", "Ġdfs", "(", "int", "Ġstart", ",", "Ġint", "Ġdepth", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "depth", "Ġ==", "Ġ6", ")", "Ġ{", "Ġ//", "Ġì", "Ī", "«", "ìŀ", "Ĳ", "Ġ6", "ê°", "ľ", "ë¥", "¼", "Ġì", "Ħ", "ł", "í", "ĥ", "Ŀ", "í", "ĸ", "Ī", "ìĿ", "Ħ", "Ġë", "ķ", "Į", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ6", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "d", "Ġ\",", "Ġresult", "[", "i", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġstart", ";", "Ġi", "Ġ<", "Ġk", ";", "Ġi", "++)", "Ġ{", "Ġ//", "Ġì", "Ī", "«", "ìŀ", "Ĳ", "Ġì", "Ħ", "ł", "í", "ĥ", "Ŀ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "[", "depth", "]", "Ġ=", "Ġs", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdfs", "(", "i", "Ġ+", "Ġ1", ",", "Ġdepth", "Ġ+", "Ġ1", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "scanf", "(\"%", "d", "\",", "Ġ&", "k", ")", "Ġ&&", "Ġk", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġk", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "\",", "Ġ&", "s", "[", "i", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġdfs", "(", "0", ",", "Ġ0", ");", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::440", "code": "#ifndef __BD_SO_BROADCASTCENTER__\n#define __BD_SO_BROADCASTCENTER__\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <string>\n#include <cstring>\n#include <strings.h>\nconst int MAXDATASIZE = 256;\nnamespace bd_so {\n\tclass BroadcastCenter {\n\t\tprivate:\n\t\tbool is_sender; /// is a caster;\n\t\tbool is_casting; /// is sending broadcast \n\t\tbool is_receiving; /// is waiting broadcast\n\t\tvoid init_addr(); /// init sockets\n\t\tint socket_fd;\n\t\tstruct sockaddr_in my_addr,user_addr;\n\t\tchar buf[MAXDATASIZE];\n\t\tint so_broadcast = 1;\n\t\tchar my_ip[20];\n\t\tpublic:\n\t\tBroadcastCenter(bool is_s):is_sender(is_s) {\n\t\t\tinit_addr();\n\t\t}\t\t\n\t\tvoid startSend(std::string msg,std::string &server_ip); \n\t\tstatic void start_listen_thread(void);\n\t\tfriend void startReceiving(void *);\n\t};\n\tvoid startReceiving(void *);\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "Ġ__", "BD", "_", "SO", "_", "BROADCAST", "CENTER", "__", "Ċ", "#", "define", "Ġ__", "BD", "_", "SO", "_", "BROADCAST", "CENTER", "__", "Ċ", "#", "include", "Ġ<", "sys", "/", "socket", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "ar", "pa", "/", "inet", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "#", "include", "Ġ<", "strings", ".", "h", ">", "Ċ", "const", "Ġint", "ĠMAX", "DATA", "SIZE", "Ġ=", "Ġ256", ";", "Ċ", "namespace", "Ġbd", "_", "so", "Ġ{", "Ċ", "ĉ", "class", "ĠBroadcast", "Center", "Ġ{", "Ċ", "ĉ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "bool", "Ġis", "_", "sender", ";", "Ġ///", "Ġis", "Ġa", "Ġc", "aster", ";", "Ċ", "ĉ", "ĉ", "bool", "Ġis", "_", "cast", "ing", ";", "Ġ///", "Ġis", "Ġsending", "Ġbroadcast", "ĠĊ", "ĉ", "ĉ", "bool", "Ġis", "_", "rece", "iving", ";", "Ġ///", "Ġis", "Ġwaiting", "Ġbroadcast", "Ċ", "ĉ", "ĉ", "void", "Ġinit", "_", "addr", "();", "Ġ///", "Ġinit", "Ġsockets", "Ċ", "ĉ", "ĉ", "int", "Ġsocket", "_", "fd", ";", "Ċ", "ĉ", "ĉ", "struct", "Ġsockaddr", "_", "in", "Ġmy", "_", "addr", ",", "user", "_", "addr", ";", "Ċ", "ĉ", "ĉ", "char", "Ġbuf", "[", "MAX", "DATA", "SIZE", "];", "Ċ", "ĉ", "ĉ", "int", "Ġso", "_", "broadcast", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "char", "Ġmy", "_", "ip", "[", "20", "];", "Ċ", "ĉ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "Broadcast", "Center", "(", "bool", "Ġis", "_", "s", "):", "is", "_", "sender", "(", "is", "_", "s", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "init", "_", "addr", "();", "Ċ", "ĉ", "ĉ", "}", "ĉĉĊ", "ĉ", "ĉ", "void", "Ġstart", "Send", "(", "std", "::", "string", "Ġmsg", ",", "std", "::", "string", "Ġ&", "server", "_", "ip", ");", "ĠĊ", "ĉ", "ĉ", "static", "Ġvoid", "Ġstart", "_", "listen", "_", "thread", "(", "void", ");", "Ċ", "ĉ", "ĉ", "friend", "Ġvoid", "Ġstart", "Rece", "iving", "(", "void", "Ġ*);", "Ċ", "ĉ", "};", "Ċ", "ĉ", "void", "Ġstart", "Rece", "iving", "(", "void", "Ġ*);", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::441", "code": "/*\n * Copyright (C) 2015-2017 Pavel Dolgov\n *\n * See the LICENSE file for terms of use.\n */\n\n#include <bits/stdc++.h>\n\ntypedef long double LLD;\n\nint Vp, Vf;\nLLD Oy;\n\nLLD getTime(LLD coordinate) {\n    LLD field_dist = std::sqrt(\n        coordinate * coordinate + (1 - Oy) * (1 - Oy)\n    );\n    LLD forest_dist = std::sqrt(\n        (1 - coordinate) * (1 - coordinate) + Oy * Oy\n    );\n    return forest_dist / Vf + field_dist / Vp;\n}\n\nLLD ternarySearch(LLD l, LLD r) {\n    while (r - l > 1e-15) {\n        LLD m1 = l + (r - l) / 3;\n        LLD m2 = r - (r - l) / 3;\n        if ((getTime(m2) - getTime(m1)) > 1e-25) {\n            r = m2;\n        } else {\n            l = m1;\n        }\n    }\n    return (l + r) / 2;\n}\n\nint main() {\n    std::cin >> Vp >> Vf;\n    std::cin >> Oy;\n    std::cout << std::setprecision(9) << std::fixed;\n    std::cout << ternarySearch(0, 1) << std::endl;\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "-", "2017", "ĠP", "avel", "ĠD", "ol", "gov", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLICENSE", "Ġfile", "Ġfor", "Ġterms", "Ġof", "Ġuse", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "typedef", "Ġlong", "Ġdouble", "ĠL", "LD", ";", "Ċ", "Ċ", "int", "ĠV", "p", ",", "ĠV", "f", ";", "Ċ", "LL", "D", "ĠO", "y", ";", "Ċ", "Ċ", "LL", "D", "ĠgetTime", "(", "LL", "D", "Ġcoordinate", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠL", "LD", "Ġfield", "_", "dist", "Ġ=", "Ġstd", "::", "sqrt", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcoordinate", "Ġ*", "Ġcoordinate", "Ġ+", "Ġ(", "1", "Ġ-", "ĠO", "y", ")", "Ġ*", "Ġ(", "1", "Ġ-", "ĠO", "y", ")", "Ċ", "ĠĠĠ", "Ġ);", "Ċ", "ĠĠĠ", "ĠL", "LD", "Ġfore", "st", "_", "dist", "Ġ=", "Ġstd", "::", "sqrt", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ(", "1", "Ġ-", "Ġcoordinate", ")", "Ġ*", "Ġ(", "1", "Ġ-", "Ġcoordinate", ")", "Ġ+", "ĠO", "y", "Ġ*", "ĠO", "y", "Ċ", "ĠĠĠ", "Ġ);", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfore", "st", "_", "dist", "Ġ/", "ĠV", "f", "Ġ+", "Ġfield", "_", "dist", "Ġ/", "ĠV", "p", ";", "Ċ", "}", "Ċ", "Ċ", "LL", "D", "Ġt", "ern", "ary", "Search", "(", "LL", "D", "Ġl", ",", "ĠL", "LD", "Ġr", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "r", "Ġ-", "Ġl", "Ġ>", "Ġ1", "e", "-", "15", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠL", "LD", "Ġm", "1", "Ġ=", "Ġl", "Ġ+", "Ġ(", "r", "Ġ-", "Ġl", ")", "Ġ/", "Ġ3", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠL", "LD", "Ġm", "2", "Ġ=", "Ġr", "Ġ-", "Ġ(", "r", "Ġ-", "Ġl", ")", "Ġ/", "Ġ3", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ((", "getTime", "(", "m", "2", ")", "Ġ-", "ĠgetTime", "(", "m", "1", "))", "Ġ>", "Ġ1", "e", "-", "25", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġr", "Ġ=", "Ġm", "2", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġl", "Ġ=", "Ġm", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ(", "l", "Ġ+", "Ġr", ")", "Ġ/", "Ġ2", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cin", "Ġ>>", "ĠV", "p", "Ġ>>", "ĠV", "f", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cin", "Ġ>>", "ĠO", "y", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "set", "precision", "(", "9", ")", "Ġ<<", "Ġstd", "::", "fixed", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġt", "ern", "ary", "Search", "(", "0", ",", "Ġ1", ")", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::442", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n#include <_ccrfg_detect_alret.hpp>\n\n\nSTART_ATF_NAMESPACE\n    namespace Info\n    {\n        using _ccrfg_detect_alretsize2_ptr = int (WINAPIV*)(struct _ccrfg_detect_alret*);\n        using _ccrfg_detect_alretsize2_clbk = int (WINAPIV*)(struct _ccrfg_detect_alret*, _ccrfg_detect_alretsize2_ptr);\n    }; // end namespace Info\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "_", "ccr", "fg", "_", "detect", "_", "al", "ret", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġnamespace", "ĠInfo", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "ccr", "fg", "_", "detect", "_", "al", "ret", "size", "2", "_", "ptr", "Ġ=", "Ġint", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "ccr", "fg", "_", "detect", "_", "al", "ret", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "ccr", "fg", "_", "detect", "_", "al", "ret", "size", "2", "_", "cl", "bk", "Ġ=", "Ġint", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "ccr", "fg", "_", "detect", "_", "al", "ret", "*,", "Ġ_", "ccr", "fg", "_", "detect", "_", "al", "ret", "size", "2", "_", "ptr", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ġ//", "Ġend", "Ġnamespace", "ĠInfo", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::443", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n#include <_insert_trc_infoInfo.hpp>\n\n\nSTART_ATF_NAMESPACE\n    namespace Detail\n    {\n        extern ::std::array<hook_record, 1> _insert_trc_info_functions;\n    }; // end namespace Detail\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "_", "insert", "_", "trc", "_", "info", "Info", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġnamespace", "ĠDet", "ail", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġextern", "Ġ::", "std", "::", "array", "<", "hook", "_", "record", ",", "Ġ1", ">", "Ġ_", "insert", "_", "trc", "_", "info", "_", "functions", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ġ//", "Ġend", "Ġnamespace", "ĠDet", "ail", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::444", "code": "#include <nan.h>\n\nusing namespace v8;\n\nNAN_METHOD(Length) {\n  Nan::MaybeLocal<String> maybeStr = Nan::To<String>(info[0]);\n  v8::Local<String> str;\n\n  if(maybeStr.ToLocal(&str) == false) {\n    Nan::ThrowError(\"Error converting first argument to string\");\n  }\n\n  int len = strlen(*String::Utf8Value(str));\n\n  info.GetReturnValue().Set(len);\n}\n\nNAN_MODULE_INIT(Init) {\n  Nan::Set(target, Nan::New(\"length\").ToLocalChecked(),\n      Nan::GetFunction(Nan::New<FunctionTemplate>(Delay)).ToLocalChecked());\n}\n\nNODE_MODULE(myaddon, Init)\n", "code_tokens": ["Ġ#", "include", "Ġ<", "nan", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġv", "8", ";", "Ċ", "Ċ", "NAN", "_", "METHOD", "(", "Length", ")", "Ġ{", "Ċ", "Ġ", "ĠNan", "::", "Maybe", "Local", "<", "String", ">", "Ġmaybe", "Str", "Ġ=", "ĠNan", "::", "To", "<", "String", ">(", "info", "[", "0", "]);", "Ċ", "Ġ", "Ġv", "8", "::", "Local", "<", "String", ">", "Ġstr", ";", "Ċ", "Ċ", "Ġ", "Ġif", "(", "maybe", "Str", ".", "ToLocal", "(&", "str", ")", "Ġ==", "Ġfalse", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠNan", "::", "Throw", "Error", "(\"", "Error", "Ġconverting", "Ġfirst", "Ġargument", "Ġto", "Ġstring", "\");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġint", "Ġlen", "Ġ=", "Ġstrlen", "(*", "String", "::", "Utf", "8", "Value", "(", "str", "));", "Ċ", "Ċ", "Ġ", "Ġinfo", ".", "Get", "ReturnValue", "().", "Set", "(", "len", ");", "Ċ", "}", "Ċ", "Ċ", "NAN", "_", "MODULE", "_", "INIT", "(", "Init", ")", "Ġ{", "Ċ", "Ġ", "ĠNan", "::", "Set", "(", "target", ",", "ĠNan", "::", "New", "(\"", "length", "\").", "ToLocal", "Checked", "(),", "Ċ", "ĠĠĠĠĠ", "ĠNan", "::", "GetFunction", "(", "Nan", "::", "New", "<", "Function", "Template", ">(", "Delay", ")).", "ToLocal", "Checked", "());", "Ċ", "}", "Ċ", "Ċ", "NODE", "_", "MODULE", "(", "my", "addon", ",", "ĠInit", ")", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::445", "code": "#include \"util/mapper.h\"\n#include \"method.h\"\n\nnamespace frost {\n    cstr_map_t<http_method> http_method_assist::_desc;\n   // frost::unordered_map<std::string, http_method> http_method_assist::_desc\n   //         = mapper<std::string, http_method>()\n   //                 (\"OPTIONS\", http_method::OPTIONS)\n   //                 (\"GET\", http_method::GET)\n   //                 (\"HEAD\", http_method::HEAD)\n   //                 (\"POST\", http_method::POST)\n   //                 (\"PUT\", http_method::PUT)\n   //                 (\"DELETE\", http_method::DELETE)\n   //                 (\"TRACE\", http_method::TRACE)\n   //                 (\"CONNECT\", http_method::CONNECT)\n   // ;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "util", "/", "mapper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "method", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġf", "ro", "st", "Ġ{", "Ċ", "ĠĠĠ", "Ġc", "str", "_", "map", "_", "t", "<", "http", "_", "method", ">", "Ġhttp", "_", "method", "_", "ass", "ist", "::_", "desc", ";", "Ċ", "ĠĠ", "Ġ//", "Ġf", "ro", "st", "::", "unordered", "_", "map", "<", "std", "::", "string", ",", "Ġhttp", "_", "method", ">", "Ġhttp", "_", "method", "_", "ass", "ist", "::_", "desc", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠ", "Ġ=", "Ġmapper", "<", "std", "::", "string", ",", "Ġhttp", "_", "method", ">()", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(\"", "OPTIONS", "\",", "Ġhttp", "_", "method", "::", "OPTIONS", ")", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(\"", "GET", "\",", "Ġhttp", "_", "method", "::", "GET", ")", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(\"", "HEAD", "\",", "Ġhttp", "_", "method", "::", "HEAD", ")", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(\"", "POST", "\",", "Ġhttp", "_", "method", "::", "POST", ")", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(\"", "PUT", "\",", "Ġhttp", "_", "method", "::", "PUT", ")", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(\"", "DELETE", "\",", "Ġhttp", "_", "method", "::", "DELETE", ")", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(\"", "TRACE", "\",", "Ġhttp", "_", "method", "::", "TRACE", ")", "Ċ", "ĠĠ", "Ġ//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(\"", "CONNECT", "\",", "Ġhttp", "_", "method", "::", "CONNECT", ")", "Ċ", "ĠĠ", "Ġ//", "Ġ;", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::446", "code": "#include \"stage.h\"\n\n#include <assert.h>\n#include <map>\n#include <string>\n#include <vector>\n\n#include \"util.h\"\n\nstatic std::vector<std::string> stageStrings = {\"planning\", \"alpha\", \"beta\", \"release\", \"mature\", \"inactive\",\n        \"abandoned\", \"deleted\", \"unknown\"};\n\nstatic std::map<std::string, Stage> stageMap = std::map<std::string, Stage>();\nstatic std::map<Stage, std::string> stageMap2 = std::map<Stage, std::string>(); // idgaf anymore\n\nstatic void initMaps() {\n    if (stageMap.empty()) {\n        for (int i = Stage::kAlpha; i != Stage::kUnknown; i++) {\n            stageMap[stageStrings[i - Stage::kAlpha]] = (Stage) i;\n            stageMap2[(Stage) i] = stageStrings[i - Stage::kAlpha];\n        }\n    }\n}\n\nStage stageFromString(std::string str) {\n    initMaps();\n    if (stageMap.count(str) > 0) {\n        return stageMap[str];\n    } else {\n        return Stage::kUnknown;\n    }\n}\n\nstd::string stringFromStage(Stage stage) {\n    initMaps();\n    return stageMap2[stage];\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "stage", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", ".", "h", "\"", "Ċ", "Ċ", "static", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġstage", "Strings", "Ġ=", "Ġ{\"", "pl", "anning", "\",", "Ġ\"", "alpha", "\",", "Ġ\"", "beta", "\",", "Ġ\"", "release", "\",", "Ġ\"", "mature", "\",", "Ġ\"", "inactive", "\",", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ\"", "ab", "and", "oned", "\",", "Ġ\"", "deleted", "\",", "Ġ\"", "unknown", "\"};", "Ċ", "Ċ", "static", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠStage", ">", "Ġstage", "Map", "Ġ=", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠStage", ">();", "Ċ", "static", "Ġstd", "::", "map", "<", "Stage", ",", "Ġstd", "::", "string", ">", "Ġstage", "Map", "2", "Ġ=", "Ġstd", "::", "map", "<", "Stage", ",", "Ġstd", "::", "string", ">();", "Ġ//", "Ġid", "g", "af", "Ġanymore", "Ċ", "Ċ", "static", "Ġvoid", "Ġinit", "Maps", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "stage", "Map", ".", "empty", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "ĠStage", "::", "k", "Alpha", ";", "Ġi", "Ġ!=", "ĠStage", "::", "k", "Unknown", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstage", "Map", "[", "stage", "Strings", "[", "i", "Ġ-", "ĠStage", "::", "k", "Alpha", "]]", "Ġ=", "Ġ(", "Stage", ")", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstage", "Map", "2", "[(", "Stage", ")", "Ġi", "]", "Ġ=", "Ġstage", "Strings", "[", "i", "Ġ-", "ĠStage", "::", "k", "Alpha", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Stage", "Ġstage", "FromString", "(", "std", "::", "string", "Ġstr", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġinit", "Maps", "();", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "stage", "Map", ".", "count", "(", "str", ")", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġstage", "Map", "[", "str", "];", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠStage", "::", "k", "Unknown", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "Ġstring", "From", "Stage", "(", "Stage", "Ġstage", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġinit", "Maps", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstage", "Map", "2", "[", "stage", "];", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::447", "code": "/*\nNihonium Engine\nThis file is licensed under the terms of the MIT License.\nSee LICENCE.txt for the full licence.\n*/\n\n#include \"../common/object.h\"\n#include \"../common/screen.h\"\n#include \"../windows/windows_filesystem.h\"\n#include \"../windows/windows_input.h\"\n#include \"../windows/windows_audio.h\"\n\nint main(int argc, char** argv) {\n\n  filesystem::instance = new filesystem::WindowsFilesystem();\n  input::instance = new input::WindowsInput();\n  audio::instance = new audio::WindowsAudio();\n  audio::instance->init(nullptr);\n  audio::BaseMusic* music = audio::instance->new_music(\"resources/music/music.ogg\"); // TODO: This is a temporary testing feature.\n  audio::instance->play_music(music);\n\n  screen::init();\n\n  object::load_scene(\"resources/scenes/main.lua\");\n\n  while (!screen::should_close) {\n    double frame_time = screen::get_frame_time();\n    object::update(frame_time, object::root);\n    screen::end_frame();\n  }\n\n  screen::uninit();\n\n  return 0;\n\n}", "code_tokens": ["Ġ/*", "Ċ", "N", "ih", "on", "ium", "ĠEngine", "Ċ", "This", "Ġfile", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠMIT", "ĠLicense", ".", "Ċ", "See", "ĠLIC", "ENCE", ".", "txt", "Ġfor", "Ġthe", "Ġfull", "Ġlic", "ence", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"../", "common", "/", "object", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "common", "/", "screen", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "windows", "/", "windows", "_", "filesystem", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "windows", "/", "windows", "_", "input", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "windows", "/", "windows", "_", "audio", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġfilesystem", "::", "instance", "Ġ=", "Ġnew", "Ġfilesystem", "::", "Windows", "Filesystem", "();", "Ċ", "Ġ", "Ġinput", "::", "instance", "Ġ=", "Ġnew", "Ġinput", "::", "Windows", "Input", "();", "Ċ", "Ġ", "Ġaudio", "::", "instance", "Ġ=", "Ġnew", "Ġaudio", "::", "Windows", "Audio", "();", "Ċ", "Ġ", "Ġaudio", "::", "instance", "->", "init", "(", "nullptr", ");", "Ċ", "Ġ", "Ġaudio", "::", "Base", "Music", "*", "Ġmusic", "Ġ=", "Ġaudio", "::", "instance", "->", "new", "_", "music", "(\"", "resources", "/", "music", "/", "music", ".", "ogg", "\");", "Ġ//", "ĠTODO", ":", "ĠThis", "Ġis", "Ġa", "Ġtemporary", "Ġtesting", "Ġfeature", ".", "Ċ", "Ġ", "Ġaudio", "::", "instance", "->", "play", "_", "music", "(", "music", ");", "Ċ", "Ċ", "Ġ", "Ġscreen", "::", "init", "();", "Ċ", "Ċ", "Ġ", "Ġobject", "::", "load", "_", "scene", "(\"", "resources", "/", "sc", "enes", "/", "main", ".", "lua", "\");", "Ċ", "Ċ", "Ġ", "Ġwhile", "Ġ(!", "screen", "::", "should", "_", "close", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġdouble", "Ġframe", "_", "time", "Ġ=", "Ġscreen", "::", "get", "_", "frame", "_", "time", "();", "Ċ", "ĠĠĠ", "Ġobject", "::", "update", "(", "frame", "_", "time", ",", "Ġobject", "::", "root", ");", "Ċ", "ĠĠĠ", "Ġscreen", "::", "end", "_", "frame", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġscreen", "::", "uninit", "();", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::448", "code": "#include \"jai_texture_object.h\"\n#include \"jai_shader_define.h\"\n\nnamespace jai { namespace drawable {\n    TextureObject::TextureObject()\n    {\n        mColorEffect.setIdentity();\n    }\n    \n    void TextureObject::_prepareDraw(int sample, Mat4 const & transform)\n    {\n        using namespace jai::ogl;\n        \n        auto sct = mShader ? mShader : ShaderCoordSample::GetNoraml();\n        sct->use();\n        \n        unsigned char * buffer = (unsigned char *)mVertexts.data();\n        \n        draw::SetVertexAttribData(sct->mACoord, 4, EDataType::Float, false, sizeof(Vertext), buffer + JumpPos);\n\t\t\n        draw::SetVertexAttribData(sct->mASmpCoord, 2, EDataType::Float, false, sizeof(Vertext), buffer + JumpTV);\n        \n        if(sct->hasEffect()) draw::SetUniformMat(sct->mUEffect, mColorEffect);\n        \n        draw::SetUniformInt(sct->mUSmp, sample);\n        draw::SetUniformFloat(sct->mUColor, mColor.red, mColor.green, mColor.blue, mColor.alpha);\n        \n        draw::SetUniformMat(sct->mUTransform, transform);\n        \n        draw::EnableVertexAttrib(sct->mACoord);\n        draw::EnableVertexAttrib(sct->mASmpCoord);\n    }\n}}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "j", "ai", "_", "texture", "_", "object", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "j", "ai", "_", "shader", "_", "define", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġj", "ai", "Ġ{", "Ġnamespace", "Ġdrawable", "Ġ{", "Ċ", "ĠĠĠ", "ĠTexture", "Object", "::", "Texture", "Object", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "Color", "Effect", ".", "set", "Identity", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġvoid", "ĠTexture", "Object", "::_", "prepare", "Draw", "(", "int", "Ġsample", ",", "ĠMat", "4", "Ġconst", "Ġ&", "Ġtransform", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġnamespace", "Ġj", "ai", "::", "og", "l", ";", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġauto", "Ġs", "ct", "Ġ=", "Ġm", "Shader", "Ġ?", "Ġm", "Shader", "Ġ:", "ĠShader", "Coord", "Sample", "::", "Get", "Nor", "aml", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġs", "ct", "->", "use", "();", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġunsigned", "Ġchar", "Ġ*", "Ġbuffer", "Ġ=", "Ġ(", "unsigned", "Ġchar", "Ġ*)", "m", "Ver", "texts", ".", "data", "();", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġdraw", "::", "Set", "VertexAttrib", "Data", "(", "s", "ct", "->", "m", "AC", "o", "ord", ",", "Ġ4", ",", "ĠE", "DataType", "::", "Float", ",", "Ġfalse", ",", "Ġsizeof", "(", "Ver", "text", "),", "Ġbuffer", "Ġ+", "ĠJump", "Pos", ");", "Ċ", "ĉĉĊ", "ĠĠĠĠĠĠĠ", "Ġdraw", "::", "Set", "VertexAttrib", "Data", "(", "s", "ct", "->", "m", "AS", "mp", "Coord", ",", "Ġ2", ",", "ĠE", "DataType", "::", "Float", ",", "Ġfalse", ",", "Ġsizeof", "(", "Ver", "text", "),", "Ġbuffer", "Ġ+", "ĠJump", "TV", ");", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "s", "ct", "->", "has", "Effect", "())", "Ġdraw", "::", "Set", "Uniform", "Mat", "(", "s", "ct", "->", "m", "UE", "ffect", ",", "Ġm", "Color", "Effect", ");", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġdraw", "::", "Set", "Uniform", "Int", "(", "s", "ct", "->", "m", "US", "mp", ",", "Ġsample", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdraw", "::", "Set", "Uniform", "Float", "(", "s", "ct", "->", "mU", "Color", ",", "Ġm", "Color", ".", "red", ",", "Ġm", "Color", ".", "green", ",", "Ġm", "Color", ".", "blue", ",", "Ġm", "Color", ".", "alpha", ");", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġdraw", "::", "Set", "Uniform", "Mat", "(", "s", "ct", "->", "mU", "Transform", ",", "Ġtransform", ");", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġdraw", "::", "Enable", "VertexAttrib", "(", "s", "ct", "->", "m", "AC", "o", "ord", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdraw", "::", "Enable", "VertexAttrib", "(", "s", "ct", "->", "m", "AS", "mp", "Coord", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::449", "code": "#include <string>\n\n\ntemplate std::allocator<char>::allocator();\ntemplate std::allocator<char>::~allocator();\ntemplate std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(const char*, const std::allocator<char>&);\ntemplate std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string();\ntemplate const char* std::basic_string<char, std::char_traits<char>, std::allocator<char>>::c_str() const noexcept;\n", "code_tokens": ["Ġ#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "Ċ", "template", "Ġstd", "::", "allocator", "<", "char", ">::", "allocator", "();", "Ċ", "template", "Ġstd", "::", "allocator", "<", "char", ">::", "~", "allocator", "();", "Ċ", "template", "Ġstd", "::", "basic", "_", "string", "<", "char", ",", "Ġstd", "::", "char", "_", "traits", "<", "char", ">,", "Ġstd", "::", "allocator", "<", "char", ">>", "::", "basic", "_", "string", "(", "const", "Ġchar", "*,", "Ġconst", "Ġstd", "::", "allocator", "<", "char", ">&", ");", "Ċ", "template", "Ġstd", "::", "basic", "_", "string", "<", "char", ",", "Ġstd", "::", "char", "_", "traits", "<", "char", ">,", "Ġstd", "::", "allocator", "<", "char", ">>", "::~", "basic", "_", "string", "();", "Ċ", "template", "Ġconst", "Ġchar", "*", "Ġstd", "::", "basic", "_", "string", "<", "char", ",", "Ġstd", "::", "char", "_", "traits", "<", "char", ">,", "Ġstd", "::", "allocator", "<", "char", ">>", "::", "c", "_", "str", "()", "Ġconst", "Ġnoexcept", ";", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::450", "code": "// Copyright (c) 2018 The PIVX developers\n// Distributed under the MIT/X11 software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"masternode-budget.h\"\n#include \"tinyformat.h\"\n#include \"utilmoneystr.h\"\n#include \"test_syndicate.h\"\n\n#include <boost/test/unit_test.hpp>\n\nBOOST_FIXTURE_TEST_SUITE(budget_tests, TestingSetup)\n\nvoid CheckBudgetValue(int nHeight, std::string strNetwork, CAmount nExpectedValue)\n{\n    CBudgetManager budget;\n    CAmount nBudget = budget.GetTotalBudget(nHeight);\n    std::string strError = strprintf(\"Budget is not as expected for %s. Result: %s, Expected: %s\", strNetwork, FormatMoney(nBudget), FormatMoney(nExpectedValue));\n    BOOST_CHECK_MESSAGE(nBudget == nExpectedValue, strError);\n}\n\nBOOST_AUTO_TEST_CASE(budget_value)\n{\n    SelectParams(CBaseChainParams::TESTNET);\n    int nHeightTest = Params().Zerocoin_Block_V2_Start() + 1;\n    CheckBudgetValue(nHeightTest, \"testnet\", 7300*COIN);\n\n    SelectParams(CBaseChainParams::MAIN);\n    nHeightTest = Params().Zerocoin_Block_V2_Start() + 1;\n    CheckBudgetValue(nHeightTest, \"mainnet\", 43200*COIN);\n}\n\nBOOST_AUTO_TEST_SUITE_END()\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ201", "8", "ĠThe", "ĠP", "IV", "X", "Ġdevelopers", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "/", "X", "11", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠCOPY", "ING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "licenses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "master", "node", "-", "budget", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "tiny", "format", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "money", "str", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "test", "_", "syn", "d", "icate", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "unit", "_", "test", ".", "hpp", ">", "Ċ", "Ċ", "BOOST", "_", "FI", "XT", "URE", "_", "TEST", "_", "SUITE", "(", "budget", "_", "tests", ",", "ĠTesting", "Setup", ")", "Ċ", "Ċ", "void", "ĠCheck", "Bu", "d", "getValue", "(", "int", "ĠnHeight", ",", "Ġstd", "::", "string", "Ġstr", "Network", ",", "ĠCAmount", "Ġn", "Expected", "Value", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠC", "Budget", "Manager", "Ġbudget", ";", "Ċ", "ĠĠĠ", "ĠCAmount", "Ġn", "Budget", "Ġ=", "Ġbudget", ".", "Get", "Total", "Budget", "(", "nHeight", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "ĠstrError", "Ġ=", "Ġstrprintf", "(\"", "Budget", "Ġis", "Ġnot", "Ġas", "Ġexpected", "Ġfor", "Ġ%", "s", ".", "ĠResult", ":", "Ġ%", "s", ",", "ĠExpected", ":", "Ġ%", "s", "\",", "Ġstr", "Network", ",", "ĠFormat", "Money", "(", "n", "Budget", "),", "ĠFormat", "Money", "(", "n", "Expected", "Value", "));", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "CHECK", "_", "MESSAGE", "(", "n", "Budget", "Ġ==", "Ġn", "Expected", "Value", ",", "ĠstrError", ");", "Ċ", "}", "Ċ", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "CASE", "(", "budget", "_", "value", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠSelect", "Params", "(", "CBase", "Chain", "Params", "::", "TEST", "NET", ");", "Ċ", "ĠĠĠ", "Ġint", "ĠnHeight", "Test", "Ġ=", "ĠParams", "().", "Zero", "coin", "_", "Block", "_", "V", "2", "_", "Start", "()", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠ", "ĠCheck", "Bu", "d", "getValue", "(", "nHeight", "Test", ",", "Ġ\"", "test", "net", "\",", "Ġ7", "300", "*", "COIN", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠSelect", "Params", "(", "CBase", "Chain", "Params", "::", "MAIN", ");", "Ċ", "ĠĠĠ", "ĠnHeight", "Test", "Ġ=", "ĠParams", "().", "Zero", "coin", "_", "Block", "_", "V", "2", "_", "Start", "()", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠ", "ĠCheck", "Bu", "d", "getValue", "(", "nHeight", "Test", ",", "Ġ\"", "main", "net", "\",", "Ġ4", "3200", "*", "COIN", ");", "Ċ", "}", "Ċ", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "SUITE", "_", "END", "()", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::451", "code": "/*******************************************************************************\n * refn - All content 2016 Trent Reed, all rights reserved.\n *------------------------------------------------------------------------------\n * A type containing information for type qualifications and declarators.\n ******************************************************************************/\n\n#ifndef   REFN_QUALIFIERS_HPP\n#define   REFN_QUALIFIERS_HPP\n\n#include <vector>\n\nnamespace RefN {\n/*******************************************************************************\n * Public Types\n ******************************************************************************/\nclass Qualifier {\npublic:\n  // Types\n  enum Type {\n    LValueReference,\n    RValueReference,\n    ConstVolatileQualifier,\n    ConstQualifier,\n    VolatileQualifier,\n    IncompleteArrayExtent,\n    ArrayExtent,\n    Pointer\n  };\n\n  // Constructors / Destructors\n  Qualifier() = default;\n  inline Qualifier(Type type, size_t extent = 0) :\n    m_type(type), m_extent(extent)\n  {\n    // Intentionally Empty\n  }\n\n  // Public Accessors\n  inline size_t getExtent() const {\n    return m_extent;\n  }\n\n  inline Type getType() const {\n    return m_type;\n  }\n\nprivate:\n  Type m_type;\n  size_t m_extent;\n};\n\nusing Qualifiers = std::vector<Qualifier>;\n\n}\n\n#endif // REFN_QUALIFIERS_HPP\n", "code_tokens": ["Ġ/", "************************************************************************", "*******", "Ċ", "Ġ*", "Ġre", "fn", "Ġ-", "ĠAll", "Ġcontent", "Ġ2016", "ĠT", "rent", "ĠRe", "ed", ",", "Ġall", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*------------------------------------------------------------------------", "------", "Ċ", "Ġ*", "ĠA", "Ġtype", "Ġcontaining", "Ġinformation", "Ġfor", "Ġtype", "Ġqual", "ifications", "Ġand", "Ġdecl", "ar", "ators", ".", "Ċ", "Ġ******************************************************************************/", "Ċ", "Ċ", "#", "ifndef", "ĠĠ", "ĠRE", "FN", "_", "QUAL", "IFI", "ERS", "_", "HP", "P", "Ċ", "#", "define", "ĠĠ", "ĠRE", "FN", "_", "QUAL", "IFI", "ERS", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "namespace", "ĠRef", "N", "Ġ{", "Ċ", "/*******************************************************************************", "Ċ", "Ġ*", "ĠPublic", "ĠTypes", "Ċ", "Ġ******************************************************************************/", "Ċ", "class", "ĠQual", "ifier", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ//", "ĠTypes", "Ċ", "Ġ", "Ġenum", "ĠType", "Ġ{", "Ċ", "ĠĠĠ", "ĠL", "Value", "Reference", ",", "Ċ", "ĠĠĠ", "ĠR", "Value", "Reference", ",", "Ċ", "ĠĠĠ", "ĠConst", "Volatile", "Qualifier", ",", "Ċ", "ĠĠĠ", "ĠConst", "Qualifier", ",", "Ċ", "ĠĠĠ", "ĠVol", "atile", "Qualifier", ",", "Ċ", "ĠĠĠ", "ĠIn", "complete", "Array", "Extent", ",", "Ċ", "ĠĠĠ", "ĠArray", "Extent", ",", "Ċ", "ĠĠĠ", "ĠPointer", "Ċ", "Ġ", "Ġ};", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠConstructor", "s", "Ġ/", "ĠDestructor", "s", "Ċ", "Ġ", "ĠQual", "ifier", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ġ", "Ġinline", "ĠQual", "ifier", "(", "Type", "Ġtype", ",", "Ġsize", "_", "t", "Ġextent", "Ġ=", "Ġ0", ")", "Ġ:", "Ċ", "ĠĠĠ", "Ġm", "_", "type", "(", "type", "),", "Ġm", "_", "extent", "(", "extent", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "ĠInt", "ention", "ally", "ĠEmpty", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠPublic", "ĠAccess", "ors", "Ċ", "Ġ", "Ġinline", "Ġsize", "_", "t", "Ġget", "Extent", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġm", "_", "extent", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġinline", "ĠType", "ĠgetType", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġm", "_", "type", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "ĠType", "Ġm", "_", "type", ";", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġm", "_", "extent", ";", "Ċ", "};", "Ċ", "Ċ", "using", "ĠQual", "ifiers", "Ġ=", "Ġstd", "::", "vector", "<", "Qualifier", ">;", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠRE", "FN", "_", "QUAL", "IFI", "ERS", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::452", "code": "/*\n * File:   frmHelp.cpp\n * Author: matej\n *\n * Created on July 24, 2011, 8:33 PM\n */\n\n#include \"frmHelp.h\"\n#include <QFile>\n\nfrmHelp::frmHelp()\n{\n    widget.setupUi(this);\n}\n\nfrmHelp::~frmHelp()\n{\n}\n\nvoid frmHelp::loadHelpFile( QString helpFile )\n{\n    QFile file( helpFile );\n    if( !file.open( QIODevice::ReadOnly | QIODevice::Text ) )\n    {\n        widget.textHelp->setText( \"Sorry, help file not found.\" );\n    }\n    widget.textHelp->setHtml( file.readAll() );\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠFile", ":", "ĠĠ", "Ġfrm", "Help", ".", "cpp", "Ċ", "Ġ*", "ĠAuthor", ":", "Ġm", "ate", "j", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCreated", "Ġon", "ĠJul", "y", "Ġ24", ",", "Ġ2011", ",", "Ġ8", ":", "33", "ĠPM", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "frm", "Help", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "QFile", ">", "Ċ", "Ċ", "frm", "Help", "::", "frm", "Help", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġwidget", ".", "setup", "Ui", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "frm", "Help", "::~", "frm", "Help", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "Ġfrm", "Help", "::", "load", "Help", "File", "(", "ĠQString", "Ġhelp", "File", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQFile", "Ġfile", "(", "Ġhelp", "File", "Ġ);", "Ċ", "ĠĠĠ", "Ġif", "(", "Ġ!", "file", ".", "open", "(", "ĠQ", "IODevice", "::", "ReadOnly", "Ġ|", "ĠQ", "IODevice", "::", "Text", "Ġ)", "Ġ)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwidget", ".", "text", "Help", "->", "setText", "(", "Ġ\"", "Sorry", ",", "Ġhelp", "Ġfile", "Ġnot", "Ġfound", ".\"", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġwidget", ".", "text", "Help", "->", "setHtml", "(", "Ġfile", ".", "readAll", "()", "Ġ);", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::453", "code": "#include <chrono>\n#include <thread>\n\n#include \"./input.h\"\n#include \"../common/SharedState.h\"\n#include \"../common/Logger.h\"\n#include \"./FaceDetector.h\"\n\nusing namespace std;\n\nvoid inputLoop()\n{\n    SharedState& state = SharedState::getInstance();\n    Logger& logger = Logger::getInstance();\n    double posX = 0.5;\n\n    FaceDetector fd;\n    fd.load();\n\n    while(true)\n    {\n        if(state.isGameOver())\n            break;\n\n        bool isSmilingOld = fd.isSmiling;\n\n        fd.read();\n        fd.detect();\n\n        state.setHeadPositionX(fd.headPosX);\n        state.setHeadPositionY(fd.headPosY);\n\n        if (!isSmilingOld && fd.isSmiling)\n            state.pushCommand(Command::SHOOT);\n\n        this_thread::sleep_for(chrono::milliseconds(10));\n    }\n\n    fd.cleanup();\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "chrono", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "Ċ", "#", "include", "Ġ\"./", "input", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "common", "/", "Shared", "State", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "common", "/", "Logger", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"./", "Face", "Detector", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġinput", "Loop", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠShared", "State", "&", "Ġstate", "Ġ=", "ĠShared", "State", "::", "getInstance", "();", "Ċ", "ĠĠĠ", "ĠLogger", "&", "Ġlogger", "Ġ=", "ĠLogger", "::", "getInstance", "();", "Ċ", "ĠĠĠ", "Ġdouble", "Ġpos", "X", "Ġ=", "Ġ0", ".", "5", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠFace", "Detector", "Ġfd", ";", "Ċ", "ĠĠĠ", "Ġfd", ".", "load", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "(", "true", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "state", ".", "is", "Game", "Over", "())", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġis", "Sm", "iling", "Old", "Ġ=", "Ġfd", ".", "is", "Sm", "iling", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfd", ".", "read", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfd", ".", "detect", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstate", ".", "set", "Head", "Position", "X", "(", "fd", ".", "head", "PosX", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstate", ".", "set", "Head", "Position", "Y", "(", "fd", ".", "head", "PosY", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "is", "Sm", "iling", "Old", "Ġ&&", "Ġfd", ".", "is", "Sm", "iling", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstate", ".", "push", "Command", "(", "Command", "::", "SHO", "OT", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthis", "_", "thread", "::", "sleep", "_", "for", "(", "chrono", "::", "milliseconds", "(", "10", "));", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġfd", ".", "cleanup", "();", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::454", "code": "#include \"export_node.hpp\"\n\n#include <sstream>\n\n#include \"constant_mappings.hpp\"\n\nnamespace opossum {\n\nExportNode::ExportNode(const std::string& init_table_name, const std::string& init_file_name,\n                       const FileType init_file_type)\n    : AbstractNonQueryNode(LQPNodeType::Export),\n      table_name(init_table_name),\n      file_name(init_file_name),\n      file_type(init_file_type) {}\n\nstd::string ExportNode::description(const DescriptionMode mode) const {\n  std::ostringstream stream;\n  stream << \"[Export] Name: '\" << table_name << \"'\";\n  return stream.str();\n}\n\nsize_t ExportNode::_on_shallow_hash() const {\n  auto hash = boost::hash_value(table_name);\n  boost::hash_combine(hash, file_name);\n  boost::hash_combine(hash, file_type);\n  return hash;\n}\n\nstd::shared_ptr<AbstractLQPNode> ExportNode::_on_shallow_copy(LQPNodeMapping& node_mapping) const {\n  return ExportNode::make(table_name, file_name, file_type);\n}\n\nbool ExportNode::_on_shallow_equals(const AbstractLQPNode& rhs, const LQPNodeMapping& node_mapping) const {\n  const auto& export_node = static_cast<const ExportNode&>(rhs);\n  return table_name == export_node.table_name && file_name == export_node.file_name &&\n         file_type == export_node.file_type;\n}\n\n}  // namespace opossum\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "export", "_", "node", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "constant", "_", "mappings", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġo", "po", "ss", "um", "Ġ{", "Ċ", "Ċ", "Export", "Node", "::", "Export", "Node", "(", "const", "Ġstd", "::", "string", "&", "Ġinit", "_", "table", "_", "name", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġinit", "_", "file", "_", "name", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "ĠFile", "Type", "Ġinit", "_", "file", "_", "type", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠAbstract", "NonQuery", "Node", "(", "L", "QP", "NodeType", "::", "Export", "),", "Ċ", "ĠĠĠĠĠ", "Ġtable", "_", "name", "(", "init", "_", "table", "_", "name", "),", "Ċ", "ĠĠĠĠĠ", "Ġfile", "_", "name", "(", "init", "_", "file", "_", "name", "),", "Ċ", "ĠĠĠĠĠ", "Ġfile", "_", "type", "(", "init", "_", "file", "_", "type", ")", "Ġ{}", "Ċ", "Ċ", "std", "::", "string", "ĠExport", "Node", "::", "description", "(", "const", "ĠDescription", "Mode", "Ġmode", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "ostringstream", "Ġstream", ";", "Ċ", "Ġ", "Ġstream", "Ġ<<", "Ġ\"[", "Export", "]", "ĠName", ":", "Ġ'\"", "Ġ<<", "Ġtable", "_", "name", "Ġ<<", "Ġ\"'\";", "Ċ", "Ġ", "Ġreturn", "Ġstream", ".", "str", "();", "Ċ", "}", "Ċ", "Ċ", "size", "_", "t", "ĠExport", "Node", "::_", "on", "_", "shallow", "_", "hash", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġhash", "Ġ=", "Ġboost", "::", "hash", "_", "value", "(", "table", "_", "name", ");", "Ċ", "Ġ", "Ġboost", "::", "hash", "_", "combine", "(", "hash", ",", "Ġfile", "_", "name", ");", "Ċ", "Ġ", "Ġboost", "::", "hash", "_", "combine", "(", "hash", ",", "Ġfile", "_", "type", ");", "Ċ", "Ġ", "Ġreturn", "Ġhash", ";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "shared", "_", "ptr", "<", "Abstract", "L", "QP", "Node", ">", "ĠExport", "Node", "::_", "on", "_", "shallow", "_", "copy", "(", "L", "QP", "Node", "Mapping", "&", "Ġnode", "_", "mapping", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "ĠExport", "Node", "::", "make", "(", "table", "_", "name", ",", "Ġfile", "_", "name", ",", "Ġfile", "_", "type", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠExport", "Node", "::_", "on", "_", "shallow", "_", "equals", "(", "const", "ĠAbstract", "L", "QP", "Node", "&", "Ġrhs", ",", "Ġconst", "ĠL", "QP", "Node", "Mapping", "&", "Ġnode", "_", "mapping", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġauto", "&", "Ġexport", "_", "node", "Ġ=", "Ġstatic", "_", "cast", "<", "const", "ĠExport", "Node", "&", ">(", "rhs", ");", "Ċ", "Ġ", "Ġreturn", "Ġtable", "_", "name", "Ġ==", "Ġexport", "_", "node", ".", "table", "_", "name", "Ġ&&", "Ġfile", "_", "name", "Ġ==", "Ġexport", "_", "node", ".", "file", "_", "name", "Ġ&&", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġfile", "_", "type", "Ġ==", "Ġexport", "_", "node", ".", "file", "_", "type", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġo", "po", "ss", "um", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::455", "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\ntypedef pair<int, int> pii;\n\nstring sub() {\n    string s;\n    int k;\n    cin >> s >> k;\n    \n    int cnt = 0;\n    for (int i = 0; i < (int)s.size(); i++) {\n        if (s[i] == '+')\n            continue;\n        else {\n            if (i + k - 1 >= (int)s.size())\n                return \"IMPOSSIBLE\";\n            cnt++;\n            for (int z = i; z < i + k; z++)\n                if (s[z] == '+')\n                    s[z] = '-';\n                else\n                    s[z] = '+';\n        }\n    }\n\n    stringstream ss;\n    ss << cnt;\n    string res;\n    ss >> res;\n    return res;\n}\n\nint main() {\n    int t;\n    cin >> t;\n    for (int i = 0; i < t; i++)\n        cout << \"Case #\" << i + 1 << \": \" << sub() << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "typedef", "Ġlong", "Ġlong", "Ġint", "Ġll", ";", "Ċ", "typedef", "Ġpair", "<", "int", ",", "Ġint", ">", "Ġp", "ii", ";", "Ċ", "Ċ", "string", "Ġsub", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstring", "Ġs", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġk", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġs", "Ġ>>", "Ġk", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġint", "Ġcnt", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ(", "int", ")", "s", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "s", "[", "i", "]", "Ġ==", "Ġ'+')", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "i", "Ġ+", "Ġk", "Ġ-", "Ġ1", "Ġ>=", "Ġ(", "int", ")", "s", ".", "size", "())", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ\"", "IMP", "OSS", "IBLE", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcnt", "++;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġz", "Ġ=", "Ġi", ";", "Ġz", "Ġ<", "Ġi", "Ġ+", "Ġk", ";", "Ġz", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "s", "[", "z", "]", "Ġ==", "Ġ'+')", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġs", "[", "z", "]", "Ġ=", "Ġ'-';", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġs", "[", "z", "]", "Ġ=", "Ġ'+", "';", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġstring", "stream", "Ġss", ";", "Ċ", "ĠĠĠ", "Ġss", "Ġ<<", "Ġcnt", ";", "Ċ", "ĠĠĠ", "Ġstring", "Ġres", ";", "Ċ", "ĠĠĠ", "Ġss", "Ġ>>", "Ġres", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġres", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġt", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġt", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġt", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "Case", "Ġ#\"", "Ġ<<", "Ġi", "Ġ+", "Ġ1", "Ġ<<", "Ġ\":", "Ġ\"", "Ġ<<", "Ġsub", "()", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::456", "code": "/* Copyright (c) 2009-2010 Satoshi Nakamoto\n   Copyright (c) 2009-2012 The Bitcoin developers\n   Copyright (c) 2013-2014 The StealthCoin/StealthSend Developers */\n/* Copyright (c) 2014-2015, Triangles Developers */\n/* See LICENSE for licensing information */\n\n#include \"anonymize.h\"\n#include \"util.h\"\n\n#include <boost/filesystem.hpp>\n#include <boost/thread/thread.hpp>\n#include <boost/thread/mutex.hpp>\n#include <string>\n#include <cstring>\n\nchar const* anonymize_tor_data_directory(\n) {\n    static std::string const retrieved = (\n        GetDataDir(\n        ) / \"tor\"\n    ).string(\n    );\n    return retrieved.c_str(\n    );\n}\n\nchar const* anonymize_service_directory(\n) {\n    static std::string const retrieved = (\n        GetDataDir(\n        ) / \"onion\"\n    ).string(\n    );\n    return retrieved.c_str(\n    );\n}\n\nint check_interrupted(\n) {\n    return boost::this_thread::interruption_requested(\n    ) ? 1 : 0;\n}\n\nstatic boost::mutex initializing;\n\nstatic std::auto_ptr<boost::unique_lock<boost::mutex> > uninitialized(\n    new boost::unique_lock<boost::mutex>(\n        initializing\n    )\n);\n\nvoid set_initialized(\n) {\n    uninitialized.reset();\n}\n\nvoid wait_initialized(\n) {\n    boost::unique_lock<boost::mutex> checking(initializing);\n}\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2010", "ĠSat", "os", "hi", "ĠN", "ak", "am", "oto", "Ċ", "ĠĠ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2012", "ĠThe", "ĠBitcoin", "Ġdevelopers", "Ċ", "ĠĠ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2013", "-", "2014", "ĠThe", "ĠSte", "alth", "Coin", "/", "Ste", "alth", "Send", "ĠDe", "velopers", "Ġ*/", "Ċ", "/*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", "-", "2015", ",", "ĠTri", "angles", "ĠDe", "velopers", "Ġ*/", "Ċ", "/*", "ĠSee", "ĠLICENSE", "Ġfor", "Ġlic", "ensing", "Ġinformation", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "anon", "ym", "ize", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "filesystem", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "thread", "/", "thread", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "thread", "/", "mutex", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "Ċ", "char", "Ġconst", "*", "Ġan", "onym", "ize", "_", "tor", "_", "data", "_", "directory", "(", "Ċ", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġstatic", "Ġstd", "::", "string", "Ġconst", "Ġretrieved", "Ġ=", "Ġ(", "Ċ", "ĠĠĠĠĠĠĠ", "ĠGetData", "Dir", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ)", "Ġ/", "Ġ\"", "tor", "\"", "Ċ", "ĠĠĠ", "Ġ).", "string", "(", "Ċ", "ĠĠĠ", "Ġ);", "Ċ", "ĠĠĠ", "Ġreturn", "Ġretrieved", ".", "c", "_", "str", "(", "Ċ", "ĠĠĠ", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "char", "Ġconst", "*", "Ġan", "onym", "ize", "_", "service", "_", "directory", "(", "Ċ", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġstatic", "Ġstd", "::", "string", "Ġconst", "Ġretrieved", "Ġ=", "Ġ(", "Ċ", "ĠĠĠĠĠĠĠ", "ĠGetData", "Dir", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ)", "Ġ/", "Ġ\"", "on", "ion", "\"", "Ċ", "ĠĠĠ", "Ġ).", "string", "(", "Ċ", "ĠĠĠ", "Ġ);", "Ċ", "ĠĠĠ", "Ġreturn", "Ġretrieved", ".", "c", "_", "str", "(", "Ċ", "ĠĠĠ", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġcheck", "_", "interrupted", "(", "Ċ", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġboost", "::", "this", "_", "thread", "::", "int", "erru", "ption", "_", "requested", "(", "Ċ", "ĠĠĠ", "Ġ)", "Ġ?", "Ġ1", "Ġ:", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "static", "Ġboost", "::", "mutex", "Ġinitializing", ";", "Ċ", "Ċ", "static", "Ġstd", "::", "auto", "_", "ptr", "<", "boost", "::", "unique", "_", "lock", "<", "boost", "::", "mutex", ">", "Ġ>", "Ġuninitialized", "(", "Ċ", "ĠĠĠ", "Ġnew", "Ġboost", "::", "unique", "_", "lock", "<", "boost", "::", "mutex", ">(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġinitializing", "Ċ", "ĠĠĠ", "Ġ)", "Ċ", ");", "Ċ", "Ċ", "void", "Ġset", "_", "initialized", "(", "Ċ", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġuninitialized", ".", "reset", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ġwait", "_", "initialized", "(", "Ċ", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġboost", "::", "unique", "_", "lock", "<", "boost", "::", "mutex", ">", "Ġchecking", "(", "init", "ializing", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::457", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n#include <CashDbWorker.hpp>\n#include <_param_cash_update.hpp>\n\n\nSTART_ATF_NAMESPACE\n    struct  CCashDbWorkerTH : CashDbWorker\n    {\n    public:\n        CCashDbWorkerTH();\n        void ctor_CCashDbWorkerTH();\n        void GetUseCashQueryStr(struct _param_cash_update* rParam, int nIdx, char* wszQuery, uint64_t tBufferSize);\n        ~CCashDbWorkerTH();\n        void dtor_CCashDbWorkerTH();\n    };\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Cash", "Db", "Worker", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "_", "param", "_", "cash", "_", "update", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġstruct", "Ġ", "ĠCC", "ash", "Db", "Worker", "TH", "Ġ:", "ĠC", "ash", "Db", "Worker", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠCC", "ash", "Db", "Worker", "TH", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġctor", "_", "CC", "ash", "Db", "Worker", "TH", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "ĠGet", "Use", "Cash", "Query", "Str", "(", "struct", "Ġ_", "param", "_", "cash", "_", "update", "*", "Ġr", "Param", ",", "Ġint", "Ġn", "Idx", ",", "Ġchar", "*", "Ġwsz", "Query", ",", "Ġuint", "64", "_", "t", "Ġt", "BufferSize", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ~", "CC", "ash", "Db", "Worker", "TH", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġdt", "or", "_", "CC", "ash", "Db", "Worker", "TH", "();", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::458", "code": "#include <iostream>\n\nint main(int argc, char const *argv[])\n{\n    int i = 5, i2 = 20;\n    int *ptr1 = &i, *ptr2 = &i;\n    ptr1 = &i2;\n    *ptr2 = 10;\n    std::cout << i << \" \" << i2 << std::endl;\n    std::cout << *ptr1 << \" \" << *ptr2 << std::endl;\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġconst", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġi", "Ġ=", "Ġ5", ",", "Ġi", "2", "Ġ=", "Ġ20", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġ*", "ptr", "1", "Ġ=", "Ġ&", "i", ",", "Ġ*", "ptr", "2", "Ġ=", "Ġ&", "i", ";", "Ċ", "ĠĠĠ", "Ġptr", "1", "Ġ=", "Ġ&", "i", "2", ";", "Ċ", "ĠĠĠ", "Ġ*", "ptr", "2", "Ġ=", "Ġ10", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġi", "2", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ*", "ptr", "1", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġ*", "ptr", "2", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::459", "code": "#pragma once\n\n#include <utki/span.hpp>\n\n#include <r4/vector.hpp>\n\n#include <morda/render/vertex_buffer.hpp>\n\n#include \"opengl_buffer.hpp\"\n\nnamespace morda{ namespace render_opengl2{\n\nclass vertex_buffer : public morda::vertex_buffer, public opengl_buffer{\npublic:\n\tconst GLint numComponents;\n\tconst GLenum type;\n\t\n\tvertex_buffer(utki::span<const r4::vector4<float>> vertices);\n\t\n\tvertex_buffer(utki::span<const r4::vector3<float>> vertices);\n\t\n\tvertex_buffer(utki::span<const r4::vector2<float>> vertices);\n\t\n\tvertex_buffer(utki::span<const float> vertices);\n\t\n\tvertex_buffer(const vertex_buffer&) = delete;\n\tvertex_buffer& operator=(const vertex_buffer&) = delete;\n\nprivate:\n\tvoid init(GLsizeiptr size, const GLvoid* data);\n};\n\n}}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ki", "/", "span", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "r", "4", "/", "vector", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "m", "ord", "a", "/", "render", "/", "vertex", "_", "buffer", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "open", "gl", "_", "buffer", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġm", "ord", "a", "{", "Ġnamespace", "Ġrender", "_", "open", "gl", "2", "{", "Ċ", "Ċ", "class", "Ġvertex", "_", "buffer", "Ġ:", "Ġpublic", "Ġm", "ord", "a", "::", "vertex", "_", "buffer", ",", "Ġpublic", "Ġopen", "gl", "_", "buffer", "{", "Ċ", "public", ":", "Ċ", "ĉ", "const", "ĠGLint", "Ġnum", "Components", ";", "Ċ", "ĉ", "const", "ĠGLenum", "Ġtype", ";", "Ċ", "ĉĊ", "ĉ", "vertex", "_", "buffer", "(", "ut", "ki", "::", "span", "<", "const", "Ġr", "4", "::", "vector", "4", "<", "float", ">>", "Ġvertices", ");", "Ċ", "ĉĊ", "ĉ", "vertex", "_", "buffer", "(", "ut", "ki", "::", "span", "<", "const", "Ġr", "4", "::", "vector", "3", "<", "float", ">>", "Ġvertices", ");", "Ċ", "ĉĊ", "ĉ", "vertex", "_", "buffer", "(", "ut", "ki", "::", "span", "<", "const", "Ġr", "4", "::", "vector", "2", "<", "float", ">>", "Ġvertices", ");", "Ċ", "ĉĊ", "ĉ", "vertex", "_", "buffer", "(", "ut", "ki", "::", "span", "<", "const", "Ġfloat", ">", "Ġvertices", ");", "Ċ", "ĉĊ", "ĉ", "vertex", "_", "buffer", "(", "const", "Ġvertex", "_", "buffer", "&)", "Ġ=", "Ġdelete", ";", "Ċ", "ĉ", "vertex", "_", "buffer", "&", "Ġoperator", "=(", "const", "Ġvertex", "_", "buffer", "&)", "Ġ=", "Ġdelete", ";", "Ċ", "Ċ", "private", ":", "Ċ", "ĉ", "void", "Ġinit", "(", "GL", "size", "ip", "tr", "Ġsize", ",", "Ġconst", "ĠGL", "void", "*", "Ġdata", ");", "Ċ", "};", "Ċ", "Ċ", "}}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::460", "code": "#ifndef KALAH_BOARD_H\n#define KALAH_BOARD_H\n\n#include <vector>\n\n#include \"houseContainer.hpp\"\n#include \"storeContainer.hpp\"\n\nusing namespace std;\n\nclass kalahBoard\n{\n\npublic:\n  kalahBoard(unsigned int numberOfHousesIn);\n  void fillHouses(vector<unsigned int> homeHouseInitialSeedCount,\n      vector<unsigned int> awayHouseInitialSeedCount);\n  unsigned int getNumberOfHouses();\n  vector<houseContainer> homeHouses;\n  vector<houseContainer> awayHouses;\n  storeContainer homeStore;\n  storeContainer awayStore;\n\nprivate:\n  void assignContainerRefs();\n  unsigned int numberOfHouses;\n\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠK", "AL", "AH", "_", "BOARD", "_", "H", "Ċ", "#", "define", "ĠK", "AL", "AH", "_", "BOARD", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "house", "Container", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "store", "Container", ".", "hpp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "Ġk", "al", "ah", "Board", "Ċ", "{", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġk", "al", "ah", "Board", "(", "unsigned", "Ġint", "ĠnumberOf", "House", "sIn", ");", "Ċ", "Ġ", "Ġvoid", "Ġfill", "House", "s", "(", "vector", "<", "unsigned", "Ġint", ">", "Ġhome", "House", "Initial", "Seed", "Count", ",", "Ċ", "ĠĠĠĠĠ", "Ġvector", "<", "unsigned", "Ġint", ">", "Ġaway", "House", "Initial", "Seed", "Count", ");", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġget", "NumberOf", "House", "s", "();", "Ċ", "Ġ", "Ġvector", "<", "house", "Container", ">", "Ġhome", "House", "s", ";", "Ċ", "Ġ", "Ġvector", "<", "house", "Container", ">", "Ġaway", "House", "s", ";", "Ċ", "Ġ", "Ġstore", "Container", "Ġhome", "Store", ";", "Ċ", "Ġ", "Ġstore", "Container", "Ġaway", "Store", ";", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġvoid", "Ġassign", "Container", "Refs", "();", "Ċ", "Ġ", "Ġunsigned", "Ġint", "ĠnumberOf", "House", "s", ";", "Ċ", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::461", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nlong long unsigned v[63], a, b;\n\nlong long unsigned S(long long unsigned n){\n\tif(!n) return 0;\n\tif((1LL<<((sizeof(long long)<<3) - __builtin_clzll(n)))-1 == n)\n\t\treturn v[(sizeof(long long)<<3) - __builtin_clzll(n)];\n\treturn v[(sizeof(long long)<<3) - __builtin_clzll(n)-1] + S(n^(1LL<<((sizeof(long long))<<3) - __builtin_clzll(n)-1)) + n - ((1LL << ((sizeof(long long)<<3) - __builtin_clzll(n)-1))-1);\n}\n\nint main(){\n\tv[0] = 0;\n\tfor(int i=1; i<63; i++)\n\t\tv[i] = (v[i-1]<<1) + (1LL<<(i-1));\n\twhile(scanf(\"%llu %llu\", &a, &b) != EOF)\n\t\tprintf(\"%llu\\n\", S(b)-S(a-1));\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "long", "Ġlong", "Ġunsigned", "Ġv", "[", "63", "],", "Ġa", ",", "Ġb", ";", "Ċ", "Ċ", "long", "Ġlong", "Ġunsigned", "ĠS", "(", "long", "Ġlong", "Ġunsigned", "Ġn", "){", "Ċ", "ĉ", "if", "(!", "n", ")", "Ġreturn", "Ġ0", ";", "Ċ", "ĉ", "if", "((", "1", "LL", "<<", "((", "sizeof", "(", "long", "Ġlong", ")<<", "3", ")", "Ġ-", "Ġ__", "builtin", "_", "cl", "z", "ll", "(", "n", ")))", "-", "1", "Ġ==", "Ġn", ")", "Ċ", "ĉ", "ĉ", "return", "Ġv", "[(", "sizeof", "(", "long", "Ġlong", ")<<", "3", ")", "Ġ-", "Ġ__", "builtin", "_", "cl", "z", "ll", "(", "n", ")];", "Ċ", "ĉ", "return", "Ġv", "[(", "sizeof", "(", "long", "Ġlong", ")<<", "3", ")", "Ġ-", "Ġ__", "builtin", "_", "cl", "z", "ll", "(", "n", ")-", "1", "]", "Ġ+", "ĠS", "(", "n", "^(", "1", "LL", "<<", "((", "sizeof", "(", "long", "Ġlong", "))", "<<", "3", ")", "Ġ-", "Ġ__", "builtin", "_", "cl", "z", "ll", "(", "n", ")-", "1", "))", "Ġ+", "Ġn", "Ġ-", "Ġ((", "1", "LL", "Ġ<<", "Ġ((", "sizeof", "(", "long", "Ġlong", ")<<", "3", ")", "Ġ-", "Ġ__", "builtin", "_", "cl", "z", "ll", "(", "n", ")-", "1", "))-", "1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "v", "[", "0", "]", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "Ġi", "<", "63", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "v", "[", "i", "]", "Ġ=", "Ġ(", "v", "[", "i", "-", "1", "]<<", "1", ")", "Ġ+", "Ġ(", "1", "LL", "<<(", "i", "-", "1", "));", "Ċ", "ĉ", "while", "(", "scanf", "(\"%", "llu", "Ġ%", "llu", "\",", "Ġ&", "a", ",", "Ġ&", "b", ")", "Ġ!=", "ĠEOF", ")", "Ċ", "ĉ", "ĉ", "printf", "(\"%", "llu", "\\", "n", "\",", "ĠS", "(", "b", ")-", "S", "(", "a", "-", "1", "));", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::462", "code": "/*\n * Balance.hpp\n *\n *  Created on: Apr 24, 2014\n *      Author: f3r0x\n */\n\n#ifndef BALANCE_HPP_\n#define BALANCE_HPP_\n\n// BalanceSheet\n#include \"SheetItem.hpp\"\n\nnamespace bs {\n\nclass Balance {\n\nprivate:\n\n\tstd::string name;\n\tSheetItem assets;\n\tSheetItem liabilities;\n\npublic:\n\tBalance();\n\tBalance(std::string name);\n\tvirtual ~Balance();\n\tvoid init();\n\tvoid print();\n};\n\n} /* namespace bs */\n#endif /* BALANCE_HPP_ */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠB", "alance", ".", "hpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠApr", "Ġ24", ",", "Ġ2014", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "Ġf", "3", "r", "0", "x", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠB", "AL", "ANCE", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠB", "AL", "ANCE", "_", "HP", "P", "_", "Ċ", "Ċ", "//", "ĠB", "alance", "Sheet", "Ċ", "#", "include", "Ġ\"", "Sheet", "Item", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġbs", "Ġ{", "Ċ", "Ċ", "class", "ĠB", "alance", "Ġ{", "Ċ", "Ċ", "private", ":", "Ċ", "Ċ", "ĉ", "std", "::", "string", "Ġname", ";", "Ċ", "ĉ", "Sheet", "Item", "Ġassets", ";", "Ċ", "ĉ", "Sheet", "Item", "Ġli", "abilities", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "Balance", "();", "Ċ", "ĉ", "Balance", "(", "std", "::", "string", "Ġname", ");", "Ċ", "ĉ", "virtual", "Ġ~", "Balance", "();", "Ċ", "ĉ", "void", "Ġinit", "();", "Ċ", "ĉ", "void", "Ġprint", "();", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġbs", "Ġ*/", "Ċ", "#", "endif", "Ġ/*", "ĠB", "AL", "ANCE", "_", "HP", "P", "_", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::463", "code": "#include <iostream>\n#include <locale>\n#include <sstream>\n#include \"hash.h\"\n#include \"bloomierHasher.h\"\n\nusing namespace std;\n\nnamespace bloomier\n{\n\nvoid BloomierHasher::getNeighborhood(string key, unsigned char result[])\n{\n    Hash::getHash(key, hashSeed, m, k, result);\n    // for (int i = 0; i < k; i++)\n    // {\n    //     cout << result[i] << endl;\n    // }\n}\n\nvoid BloomierHasher::getM(string key, unsigned char array[], int byteSize)\n{\n    locale loc;\n    const collate<char>& coll = use_facet<collate<char> >(loc);\n    int seed = coll.hash(key.data(),key.data()+key.length());\n    srand (seed);\n    for (int i = 0; i < byteSize; i++)\n        array[i] = rand() % 255;\n}\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "locale", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ\"", "hash", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "bloom", "ier", "Hasher", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "namespace", "Ġbloom", "ier", "Ċ", "{", "Ċ", "Ċ", "void", "ĠB", "loom", "ier", "Hasher", "::", "get", "Neighbor", "hood", "(", "string", "Ġkey", ",", "Ġunsigned", "Ġchar", "Ġresult", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠHash", "::", "getHash", "(", "key", ",", "Ġhash", "Seed", ",", "Ġm", ",", "Ġk", ",", "Ġresult", ");", "Ċ", "ĠĠĠ", "Ġ//", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġk", ";", "Ġi", "++)", "Ċ", "ĠĠĠ", "Ġ//", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "ĠĠĠĠ", "Ġcout", "Ġ<<", "Ġresult", "[", "i", "]", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ//", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠB", "loom", "ier", "Hasher", "::", "getM", "(", "string", "Ġkey", ",", "Ġunsigned", "Ġchar", "Ġarray", "[],", "Ġint", "Ġbyte", "Size", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġlocale", "Ġloc", ";", "Ċ", "ĠĠĠ", "Ġconst", "Ġcol", "late", "<", "char", ">&", "Ġcoll", "Ġ=", "Ġuse", "_", "facet", "<", "collate", "<", "char", ">", "Ġ>(", "loc", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġseed", "Ġ=", "Ġcoll", ".", "hash", "(", "key", ".", "data", "(),", "key", ".", "data", "()+", "key", ".", "length", "());", "Ċ", "ĠĠĠ", "Ġs", "rand", "Ġ(", "seed", ");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġbyte", "Size", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġarray", "[", "i", "]", "Ġ=", "Ġrand", "()", "Ġ%", "Ġ255", ";", "Ċ", "}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::464", "code": "#include <iostream>\n#include <algorithm>\n#include <numeric>\n\n/*\n * 原来是自己在初始化f数组时长度没有指定好。233\n */\n\nusing namespace std;\n\nint T, n;\nint coins[105];\nint f[50005];\n\nint main() {\n    cin >> T;\n    while (T-- > 0) {\n        cin >> n;\n        fill(f, f + 50005, 0);\n        for (int i = 0; i < n; ++i)\n            cin >> coins[i];\n        int total = accumulate(coins, coins + n, 0);\n        for (int i = 0; i < n; ++i)\n            for (int j = total / 2; j - coins[i] >= 0; --j)\n                f[j] = max(f[j], f[j - coins[i]] + coins[i]);\n        cout << total - 2 * f[total / 2] << endl;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "numeric", ">", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ġ", "åİŁ", "æĿ¥", "æĺ¯", "èĩª", "å·", "±", "åľ¨", "åĪĿå§ĭåĮĸ", "f", "æķ°ç»Ħ", "æĹ¶", "éķ¿åº¦", "æ²¡æľī", "æĮĩå®ļ", "å¥½", "ãĢĤ", "233", "Ċ", "Ġ*/", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "ĠT", ",", "Ġn", ";", "Ċ", "int", "Ġcoins", "[", "105", "];", "Ċ", "int", "Ġf", "[", "5000", "5", "];", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "ĠT", ";", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "T", "--", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġn", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfill", "(", "f", ",", "Ġf", "Ġ+", "Ġ5000", "5", ",", "Ġ0", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġcoins", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġtotal", "Ġ=", "Ġaccumulate", "(", "coins", ",", "Ġcoins", "Ġ+", "Ġn", ",", "Ġ0", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġtotal", "Ġ/", "Ġ2", ";", "Ġj", "Ġ-", "Ġcoins", "[", "i", "]", "Ġ>=", "Ġ0", ";", "Ġ--", "j", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġf", "[", "j", "]", "Ġ=", "Ġmax", "(", "f", "[", "j", "],", "Ġf", "[", "j", "Ġ-", "Ġcoins", "[", "i", "]]", "Ġ+", "Ġcoins", "[", "i", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġtotal", "Ġ-", "Ġ2", "Ġ*", "Ġf", "[", "total", "Ġ/", "Ġ2", "]", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::465", "code": "#include \"configure.h\"\n#include \"gtest/gtest.h\"\n\nTEST(Configure, addItem)\n{\n    Configure *pc = new Configure();\n\n    ASSERT_TRUE(pc != NULL);\n\n    pc->AddItem(\"A\");\n    pc->AddItem(\"B\");\n    pc->AddItem(\"C\");\n    pc->AddItem(\"A\"); \n\n    EXPECT_EQ(pc->Size(), 3);\n    EXPECT_EQ(pc->GetItem(0), \"A\");\n    EXPECT_EQ(pc->GetItem(1), \"B\");\n    EXPECT_EQ(pc->GetItem(2), \"C\");\n\n    delete pc; \n}\n\nint main(int argc, char** argv)\n{\n    testing::InitGoogleTest(&argc, argv);\n\n    return RUN_ALL_TESTS();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "configure", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gtest", "/", "gtest", ".", "h", "\"", "Ċ", "Ċ", "TEST", "(", "Configure", ",", "Ġadd", "Item", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠConfigure", "Ġ*", "pc", "Ġ=", "Ġnew", "ĠConfigure", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠASSERT", "_", "TRUE", "(", "pc", "Ġ!=", "ĠNULL", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġpc", "->", "AddItem", "(\"", "A", "\");", "Ċ", "ĠĠĠ", "Ġpc", "->", "AddItem", "(\"", "B", "\");", "Ċ", "ĠĠĠ", "Ġpc", "->", "AddItem", "(\"", "C", "\");", "Ċ", "ĠĠĠ", "Ġpc", "->", "AddItem", "(\"", "A", "\");", "ĠĊ", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "pc", "->", "Size", "(),", "Ġ3", ");", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "pc", "->", "GetItem", "(", "0", "),", "Ġ\"", "A", "\");", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "pc", "->", "GetItem", "(", "1", "),", "Ġ\"", "B", "\");", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "pc", "->", "GetItem", "(", "2", "),", "Ġ\"", "C", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġdelete", "Ġpc", ";", "Ġ", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtesting", "::", "Init", "Google", "Test", "(&", "argc", ",", "Ġargv", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "ĠRUN", "_", "ALL", "_", "TESTS", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::466", "code": "/***************************************************************************\n *   Copyright (C) 2009 by Tamino Dauth                                    *\n *   tamino@cdauth.eu                                                      *\n *                                                                         *\n *   This program is free software; you can redistribute it and/or modify  *\n *   it under the terms of the GNU General Public License as published by  *\n *   the Free Software Foundation; either version 2 of the License, or     *\n *   (at your option) any later version.                                   *\n *                                                                         *\n *   This program is distributed in the hope that it will be useful,       *\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n *   GNU General Public License for more details.                          *\n *                                                                         *\n *   You should have received a copy of the GNU General Public License     *\n *   along with this program; if not, write to the                         *\n *   Free Software Foundation, Inc.,                                       *\n *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *\n ***************************************************************************/\n\n#ifndef WC3LIB_MDLX_TEXTUREANIMATIONTRANSLATION_HPP\n#define WC3LIB_MDLX_TEXTUREANIMATIONTRANSLATION_HPP\n\n#include \"mdlxtranslation.hpp\"\n#include \"textureanimationtranslations.hpp\"\n\nnamespace wc3lib\n{\n\nnamespace mdlx\n{\n\nclass TextureAnimationTranslation : public MdlxTranslation\n{\n\tpublic:\n\t\tTextureAnimationTranslation(class TextureAnimationTranslations *translations);\n\n\t\tclass TextureAnimationTranslations* translations() const;\n};\n\ninline class TextureAnimationTranslations* TextureAnimationTranslation::translations() const\n{\n\treturn boost::polymorphic_cast<class TextureAnimationTranslations*>(this->mdlxScalings());\n}\n\n}\n\n}\n\n#endif\n", "code_tokens": ["Ġ/", "************************************************************************", "***", "Ċ", "Ġ*", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2009", "Ġby", "ĠT", "am", "ino", "ĠD", "auth", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġt", "am", "ino", "@", "cd", "auth", ".", "eu", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "ĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "ĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "ĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*************************************************************************", "**/", "Ċ", "Ċ", "#", "ifndef", "ĠWC", "3", "LIB", "_", "MD", "LX", "_", "TEXTURE", "ANIM", "ATION", "TRANSL", "ATION", "_", "HP", "P", "Ċ", "#", "define", "ĠWC", "3", "LIB", "_", "MD", "LX", "_", "TEXTURE", "ANIM", "ATION", "TRANSL", "ATION", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "md", "lx", "translation", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "texture", "animation", "translations", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġwc", "3", "lib", "Ċ", "{", "Ċ", "Ċ", "namespace", "Ġmd", "lx", "Ċ", "{", "Ċ", "Ċ", "class", "ĠTexture", "Animation", "Translation", "Ġ:", "Ġpublic", "ĠM", "d", "lx", "Translation", "Ċ", "{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "Texture", "Animation", "Translation", "(", "class", "ĠTexture", "Animation", "Translations", "Ġ*", "translations", ");", "Ċ", "Ċ", "ĉ", "ĉ", "class", "ĠTexture", "Animation", "Translations", "*", "Ġtranslations", "()", "Ġconst", ";", "Ċ", "};", "Ċ", "Ċ", "inline", "Ġclass", "ĠTexture", "Animation", "Translations", "*", "ĠTexture", "Animation", "Translation", "::", "translations", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġboost", "::", "pol", "ymorphic", "_", "cast", "<", "class", "ĠTexture", "Animation", "Translations", "*>(", "this", "->", "md", "lx", "Sc", "al", "ings", "());", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::467", "code": "// ====================================================================================================================\n// Copyright (C) 2015  Lukas Georgieff\n// Last modified: 06/04/2015\n// Description: Declares a class for an HTTP GET request to the translation service.\n// ====================================================================================================================\n\n// ====================================================================================================================\n// This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public\n// License as published by the Free Software Foundation in version 2.\n//\n// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n// warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\n// details.\n//\n// You should have received a copy of the GNU General Public License along with this program; if/ not, write to the\n// Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n// ====================================================================================================================\n\n#ifndef HTTP_GET_REQUEST_HPP_\n#define HTTP_GET_REQUEST_HPP_\n\n#include \"http_request.hpp\"\n\n#include <string>\n\nnamespace lgeorgieff {\nnamespace translate {\nnamespace client {\nclass HttpGetRequest : public HttpRequest {\n public:\n  // === Constructors and destructor ==================================================================================\n  explicit HttpGetRequest(const std::string &);\n  virtual ~HttpGetRequest();\n\n  // The actual method that handles the curl HTTP request and must be implemented in each derived class from\n  // HttpRequest\n  std::string operator()() override;\n};  // HttpGetRequest\n}  // client\n}  // translate\n}  // lgeorgieff\n\n#endif  // HTTP_GET_REQUEST_HPP_\n", "code_tokens": ["Ġ//", "Ġ=================================================================", "================================================", "===", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "Ġ", "ĠL", "uk", "as", "ĠGe", "org", "ie", "ff", "Ċ", "//", "ĠLast", "Ġmodified", ":", "Ġ06", "/", "04", "/", "2015", "Ċ", "//", "ĠDescription", ":", "ĠDec", "la", "res", "Ġa", "Ġclass", "Ġfor", "Ġan", "ĠHTTP", "ĠGET", "Ġrequest", "Ġto", "Ġthe", "Ġtranslation", "Ġservice", ".", "Ċ", "//", "Ġ=================================================================", "================================================", "===", "Ċ", "Ċ", "//", "Ġ=================================================================", "================================================", "===", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "Ċ", "//", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", "Ġin", "Ġversion", "Ġ2", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ċ", "//", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ċ", "//", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "/", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "//", "Ġ=================================================================", "================================================", "===", "Ċ", "Ċ", "#", "ifndef", "ĠHTTP", "_", "GET", "_", "REQUEST", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠHTTP", "_", "GET", "_", "REQUEST", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ\"", "http", "_", "request", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "namespace", "Ġl", "georg", "ie", "ff", "Ġ{", "Ċ", "namespace", "Ġtranslate", "Ġ{", "Ċ", "namespace", "Ġclient", "Ġ{", "Ċ", "class", "ĠHttp", "GetRequest", "Ġ:", "Ġpublic", "ĠHttpRequest", "Ġ{", "Ċ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ//", "Ġ===", "ĠConstructor", "s", "Ġand", "Ġdestructor", "Ġ=================================================================", "=================", "Ċ", "Ġ", "Ġexplicit", "ĠHttp", "GetRequest", "(", "const", "Ġstd", "::", "string", "Ġ&", ");", "Ċ", "Ġ", "Ġvirtual", "Ġ~", "Http", "GetRequest", "();", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠThe", "Ġactual", "Ġmethod", "Ġthat", "Ġhandles", "Ġthe", "Ġcurl", "ĠHTTP", "Ġrequest", "Ġand", "Ġmust", "Ġbe", "Ġimplemented", "Ġin", "Ġeach", "Ġderived", "Ġclass", "Ġfrom", "Ċ", "Ġ", "Ġ//", "ĠHttpRequest", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġoperator", "()", "()", "Ġoverride", ";", "Ċ", "};", "Ġ", "Ġ//", "ĠHttp", "GetRequest", "Ċ", "}", "Ġ", "Ġ//", "Ġclient", "Ċ", "}", "Ġ", "Ġ//", "Ġtranslate", "Ċ", "}", "Ġ", "Ġ//", "Ġl", "georg", "ie", "ff", "Ċ", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠHTTP", "_", "GET", "_", "REQUEST", "_", "HP", "P", "_", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::468", "code": "#include <sys/time.h>\n#include <pangomm/init.h>\n#include \"pbd/compose.h\"\n#include \"pbd/xml++.h\"\n#include \"canvas/group.h\"\n#include \"canvas/canvas.h\"\n#include \"canvas/root_group.h\"\n#include \"canvas/rectangle.h\"\n#include \"benchmark.h\"\n\nusing namespace std;\nusing namespace Canvas;\n\nclass RenderFromLog : public Benchmark\n{\npublic:\n\tRenderFromLog (string const & session) : Benchmark (session) {}\n\n\tvoid do_run (ImageCanvas& canvas)\n\t{\n\t\tcanvas.set_log_renders (false);\n\n\t\tlist<Rect> const & renders = canvas.renders ();\n\t\t\n\t\tfor (list<Rect>::const_iterator i = renders.begin(); i != renders.end(); ++i) {\n\t\t\tcanvas.render_to_image (*i);\n\t\t}\n\t}\n};\n\nint main (int argc, char* argv[])\n{\n\tif (argc < 2) {\n\t\tcerr << \"Syntax: render_parts <session>\\n\";\n\t\texit (EXIT_FAILURE);\n\t}\n\n\tPango::init ();\n\n\tRenderFromLog render_from_log (argv[1]);\n\tcout << render_from_log.run () << \"\\n\";\n\n\treturn 0;\n}\n\n\t\n", "code_tokens": ["Ġ#", "include", "Ġ<", "sys", "/", "time", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "p", "ang", "om", "m", "/", "init", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "pb", "d", "/", "compose", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "pb", "d", "/", "xml", "++", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "canvas", "/", "group", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "canvas", "/", "canvas", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "canvas", "/", "root", "_", "group", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "canvas", "/", "rectangle", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "benchmark", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "ĠCanvas", ";", "Ċ", "Ċ", "class", "ĠRender", "From", "Log", "Ġ:", "Ġpublic", "ĠBenchmark", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "Render", "From", "Log", "Ġ(", "string", "Ġconst", "Ġ&", "Ġsession", ")", "Ġ:", "ĠBenchmark", "Ġ(", "session", ")", "Ġ{}", "Ċ", "Ċ", "ĉ", "void", "Ġdo", "_", "run", "Ġ(", "Image", "Canvas", "&", "Ġcanvas", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "canvas", ".", "set", "_", "log", "_", "rend", "ers", "Ġ(", "false", ");", "Ċ", "Ċ", "ĉ", "ĉ", "list", "<", "Rect", ">", "Ġconst", "Ġ&", "Ġrenders", "Ġ=", "Ġcanvas", ".", "rend", "ers", "Ġ();", "Ċ", "ĉĉĊ", "ĉ", "ĉ", "for", "Ġ(", "list", "<", "Rect", ">::", "const", "_", "iterator", "Ġi", "Ġ=", "Ġrenders", ".", "begin", "();", "Ġi", "Ġ!=", "Ġrenders", ".", "end", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "canvas", ".", "render", "_", "to", "_", "image", "Ġ(*", "i", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "argc", "Ġ<", "Ġ2", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cerr", "Ġ<<", "Ġ\"", "Syntax", ":", "Ġrender", "_", "parts", "Ġ<", "session", ">\\", "n", "\";", "Ċ", "ĉ", "ĉ", "exit", "Ġ(", "EXIT", "_", "FAILURE", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "P", "ango", "::", "init", "Ġ();", "Ċ", "Ċ", "ĉ", "Render", "From", "Log", "Ġrender", "_", "from", "_", "log", "Ġ(", "argv", "[", "1", "]);", "Ċ", "ĉ", "cout", "Ġ<<", "Ġrender", "_", "from", "_", "log", ".", "run", "Ġ()", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "ĉĊ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::469", "code": "#ifndef BOX_H\n#define BOX_H\n\nclass MyBox: public Gtk::Frame\n{\n\tpublic:\n\t\tMyBox(const Glib::ustring& label, Gtk::Orientation orientation);\n\t\tvoid pack_start(Widget& child);\n\n\tprivate:\n\t\tGtk::Box* p_child;\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠBO", "X", "_", "H", "Ċ", "#", "define", "ĠBO", "X", "_", "H", "Ċ", "Ċ", "class", "ĠMy", "Box", ":", "Ġpublic", "ĠGtk", "::", "Frame", "Ċ", "{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "My", "Box", "(", "const", "ĠG", "lib", "::", "u", "string", "&", "Ġlabel", ",", "ĠGtk", "::", "Orientation", "Ġorientation", ");", "Ċ", "ĉ", "ĉ", "void", "Ġpack", "_", "start", "(", "Widget", "&", "Ġchild", ");", "Ċ", "Ċ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "Gtk", "::", "Box", "*", "Ġp", "_", "child", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::470", "code": "/*____________________________________________________________________________\r\n\r\n   ExifPro Image Viewer\r\n\r\n   Copyright (C) 2000-2015 Michael Kowalski\r\n____________________________________________________________________________*/\r\n\r\n// CopyProgressDlg.cpp : implementation file\r\n//\r\n\r\n#include \"stdafx.h\"\r\n#include \"resource.h\"\r\n#include \"CopyProgressDlg.h\"\r\n\r\n\r\n// CopyProgressDlg dialog\r\n\r\nCopyProgressDlg::CopyProgressDlg(CWnd* parent /*=NULL*/)\r\n\t: CDialog(CopyProgressDlg::IDD, parent)\r\n{\r\n}\r\n\r\nCopyProgressDlg::~CopyProgressDlg()\r\n{\r\n}\r\n\r\nvoid CopyProgressDlg::DoDataExchange(CDataExchange* DX)\r\n{\r\n\tCDialog::DoDataExchange(DX);\r\n\tDDX_Control(DX, IDC_ANIMATION, animation_);\r\n}\r\n\r\n\r\nBEGIN_MESSAGE_MAP(CopyProgressDlg, CDialog)\r\nEND_MESSAGE_MAP()\r\n\r\n\r\n// CopyProgressDlg message handlers\r\n\r\n\r\nBOOL CopyProgressDlg::OnInitDialog()\r\n{\r\n\tCDialog::OnInitDialog();\r\n\r\n\tanimation_.Open(IDR_COPY_ANIM);\r\n\r\n\treturn TRUE;  // return TRUE unless you set the focus to a control\r\n\t// EXCEPTION: OCX Property Pages should return FALSE\r\n}\r\n", "code_tokens": ["Ġ/*", "________________________________", "________________________________", "________", "____", "č", "Ċ", "č", "Ċ", "ĠĠ", "ĠEx", "if", "Pro", "ĠImage", "ĠView", "er", "č", "Ċ", "č", "Ċ", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "-", "2015", "ĠM", "ichael", "ĠK", "ow", "al", "ski", "č", "Ċ", "________________________________", "________________________________", "________", "____", "*/", "č", "Ċ", "č", "Ċ", "//", "ĠCopy", "Progress", "Dlg", ".", "cpp", "Ġ:", "Ġimplementation", "Ġfile", "č", "Ċ", "//", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "resource", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Copy", "Progress", "Dlg", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "č", "Ċ", "//", "ĠCopy", "Progress", "Dlg", "Ġdialog", "č", "Ċ", "č", "Ċ", "Copy", "Progress", "Dlg", "::", "Copy", "Progress", "Dlg", "(", "C", "Wnd", "*", "Ġparent", "Ġ/*=", "NULL", "*/)", "č", "Ċ", "ĉ", ":", "ĠC", "Dialog", "(", "Copy", "Progress", "Dlg", "::", "ID", "D", ",", "Ġparent", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Copy", "Progress", "Dlg", "::~", "Copy", "Progress", "Dlg", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠCopy", "Progress", "Dlg", "::", "Do", "Data", "Exchange", "(", "CData", "Exchange", "*", "ĠDX", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "CD", "ialog", "::", "Do", "Data", "Exchange", "(", "DX", ");", "č", "Ċ", "ĉ", "DDX", "_", "Control", "(", "DX", ",", "ĠIDC", "_", "ANIM", "ATION", ",", "Ġanimation", "_);", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "BEGIN", "_", "MESSAGE", "_", "MAP", "(", "Copy", "Progress", "Dlg", ",", "ĠC", "Dialog", ")", "č", "Ċ", "END", "_", "MESSAGE", "_", "MAP", "()", "č", "Ċ", "č", "Ċ", "č", "Ċ", "//", "ĠCopy", "Progress", "Dlg", "Ġmessage", "Ġhandlers", "č", "Ċ", "č", "Ċ", "č", "Ċ", "BOOL", "ĠCopy", "Progress", "Dlg", "::", "OnInit", "Dialog", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "CD", "ialog", "::", "OnInit", "Dialog", "();", "č", "Ċ", "č", "Ċ", "ĉ", "animation", "_.", "Open", "(", "IDR", "_", "COPY", "_", "ANIM", ");", "č", "Ċ", "č", "Ċ", "ĉ", "return", "ĠTRUE", ";", "Ġ", "Ġ//", "Ġreturn", "ĠTRUE", "Ġunless", "Ġyou", "Ġset", "Ġthe", "Ġfocus", "Ġto", "Ġa", "Ġcontrol", "č", "Ċ", "ĉ", "//", "ĠEXCEPTION", ":", "ĠOC", "X", "ĠProperty", "ĠPages", "Ġshould", "Ġreturn", "ĠFALSE", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::471", "code": "/*************************************************************************\n    > File Name: random.cpp\n    > Author: qiaoyihan\n    > Email: yihqiao@126 \n    > Created Time: Sun May 15 11:20:00 2016\n ************************************************************************/\n\n#include<iostream>\n#include<string>\n#include<cstdlib>\n#include<ctime>\n\nusing std::cout;\nusing std::endl;\nusing std::string;\n\n\nint main()\n{\n\tstd::srand(std::time(0)); // use current time as seed for random generator\n\tcout << std::rand() % 3 << endl;\n\treturn 0;\n}\n", "code_tokens": ["Ġ/", "************************************************************************", "*", "Ċ", "ĠĠĠ", "Ġ>", "ĠFile", "ĠName", ":", "Ġrandom", ".", "cpp", "Ċ", "ĠĠĠ", "Ġ>", "ĠAuthor", ":", "Ġq", "ia", "oy", "ih", "an", "Ċ", "ĠĠĠ", "Ġ>", "ĠEmail", ":", "Ġy", "ih", "q", "ia", "o", "@", "126", "ĠĊ", "ĠĠĠ", "Ġ>", "ĠCreated", "ĠTime", ":", "ĠSun", "ĠMay", "Ġ15", "Ġ11", ":", "20", ":", "00", "Ġ2016", "Ċ", "Ġ*****************************************************************", "*******/", "Ċ", "Ċ", "#", "include", "<", "i", "ostream", ">", "Ċ", "#", "include", "<", "string", ">", "Ċ", "#", "include", "<", "c", "stdlib", ">", "Ċ", "#", "include", "<", "ctime", ">", "Ċ", "Ċ", "using", "Ġstd", "::", "cout", ";", "Ċ", "using", "Ġstd", "::", "endl", ";", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "std", "::", "sr", "and", "(", "std", "::", "time", "(", "0", "));", "Ġ//", "Ġuse", "Ġcurrent", "Ġtime", "Ġas", "Ġseed", "Ġfor", "Ġrandom", "Ġgenerator", "Ċ", "ĉ", "cout", "Ġ<<", "Ġstd", "::", "rand", "()", "Ġ%", "Ġ3", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::472", "code": "#include <iostream>\n\nusing namespace std;\nstruct Node\n{\n    int inf;\n    Node *next;\n}*start,*newptr,*save,*ptr,*rear;\nNode* Create_New_Node(int n)\n{\n    newptr=new Node;\n    newptr->inf=n;\n    newptr->next=NULL;\n    return newptr;\n}\nvoid Insert_End(Node *np)\n{\n    if(start==NULL)\n        start=rear=np;\n    else\n    {\n        rear->next=np;\n        rear=np;\n    }\n}\nvoid display(Node *np)\n{\n    while(np!=NULL)\n    {\n        cout<<np->inf<<\"->\";\n        np=np->next;\n    }\n    cout<<\"!!!\";\n}\nvoid pop()\n{\n    if(start==NULL)\n    {\n        cout<<\"Underflow!!\";\n        return;\n    }\n    ptr=start;\n    start=start->next;\n    delete ptr;\n}\nint main()\n{\n    start=NULL;\n    int n;\n    char ch='y';\n    while(ch=='y'||ch=='Y')\n    {\n        cout<<\"Enter information for new node: \";\n        cin>>n;\n        ptr=Create_New_Node(n);\n        Insert_End(ptr);\n        display(start);\n        cout<<\"\\nWant to enter more (y/n) : \";\n        cin>>ch;\n    }\n    ch='y';\n    while(ch=='y'||ch=='Y')\n    {\n        cout<<\"The list now is: \";\n        display(start);\n        cout<<\"Want to delete element (y/n): \";\n        cin>>ch;\n        if(ch=='y'||ch=='Y')\n            pop();\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "struct", "ĠNode", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġinf", ";", "Ċ", "ĠĠĠ", "ĠNode", "Ġ*", "next", ";", "Ċ", "}", "*", "start", ",*", "new", "ptr", ",*", "save", ",*", "ptr", ",*", "re", "ar", ";", "Ċ", "Node", "*", "ĠCreate", "_", "New", "_", "Node", "(", "int", "Ġn", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġnew", "ptr", "=", "new", "ĠNode", ";", "Ċ", "ĠĠĠ", "Ġnew", "ptr", "->", "inf", "=", "n", ";", "Ċ", "ĠĠĠ", "Ġnew", "ptr", "->", "next", "=", "NULL", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnew", "ptr", ";", "Ċ", "}", "Ċ", "void", "ĠInsert", "_", "End", "(", "Node", "Ġ*", "np", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(", "start", "==", "NULL", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstart", "=", "re", "ar", "=", "np", ";", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġre", "ar", "->", "next", "=", "np", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġre", "ar", "=", "np", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "void", "Ġdisplay", "(", "Node", "Ġ*", "np", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġwhile", "(", "np", "!=", "NULL", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "<<", "np", "->", "inf", "<<\"", "->", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġnp", "=", "np", "->", "next", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcout", "<<\"", "!!!", "\";", "Ċ", "}", "Ċ", "void", "Ġpop", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(", "start", "==", "NULL", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "<<\"", "Under", "flow", "!!", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġptr", "=", "start", ";", "Ċ", "ĠĠĠ", "Ġstart", "=", "start", "->", "next", ";", "Ċ", "ĠĠĠ", "Ġdelete", "Ġptr", ";", "Ċ", "}", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstart", "=", "NULL", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġchar", "Ġch", "='", "y", "';", "Ċ", "ĠĠĠ", "Ġwhile", "(", "ch", "=='", "y", "'", "||", "ch", "=='", "Y", "')", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "<<\"", "Enter", "Ġinformation", "Ġfor", "Ġnew", "Ġnode", ":", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", ">>", "n", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġptr", "=", "Create", "_", "New", "_", "Node", "(", "n", ");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠInsert", "_", "End", "(", "ptr", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdisplay", "(", "start", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "<<", "\"\\", "n", "Want", "Ġto", "Ġenter", "Ġmore", "Ġ(", "y", "/", "n", ")", "Ġ:", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", ">>", "ch", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġch", "='", "y", "';", "Ċ", "ĠĠĠ", "Ġwhile", "(", "ch", "=='", "y", "'", "||", "ch", "=='", "Y", "')", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "<<\"", "The", "Ġlist", "Ġnow", "Ġis", ":", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdisplay", "(", "start", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "<<\"", "Want", "Ġto", "Ġdelete", "Ġelement", "Ġ(", "y", "/", "n", "):", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", ">>", "ch", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "ch", "=='", "y", "'", "||", "ch", "=='", "Y", "')", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġpop", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::473", "code": "/*\n * JSExceptionArgNoBool.cpp\n *\n *  Created on: 15/gen/2015\n *      Author: Paolo Achdjian\n */\n\n#include <sstream>\n\n#include \"JSExceptionArgNoBool.h\"\n\nnamespace zigbee {\n\nJSExceptionArgNoBool::JSExceptionArgNoBool() {\n\tstd::stringstream stream;\n\tstream << \"Invalid parameter: expected an argument of type boolean\";\n\tmessage = stream.str();\n\n}\n\nJSExceptionArgNoBool::~JSExceptionArgNoBool() {\n}\n\n} /* namespace zigbee */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠJS", "Exception", "Arg", "No", "Bool", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ15", "/", "gen", "/", "2015", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "ĠP", "ao", "lo", "ĠA", "ch", "dj", "ian", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "JS", "Exception", "Arg", "No", "Bool", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġz", "ig", "bee", "Ġ{", "Ċ", "Ċ", "JS", "Exception", "Arg", "No", "Bool", "::", "JS", "Exception", "Arg", "No", "Bool", "()", "Ġ{", "Ċ", "ĉ", "std", "::", "stringstream", "Ġstream", ";", "Ċ", "ĉ", "stream", "Ġ<<", "Ġ\"", "Invalid", "Ġparameter", ":", "Ġexpected", "Ġan", "Ġargument", "Ġof", "Ġtype", "Ġboolean", "\";", "Ċ", "ĉ", "message", "Ġ=", "Ġstream", ".", "str", "();", "Ċ", "Ċ", "}", "Ċ", "Ċ", "JS", "Exception", "Arg", "No", "Bool", "::~", "JS", "Exception", "Arg", "No", "Bool", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġz", "ig", "bee", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::474", "code": "// CellError.hpp\n//\n// Copyright (C) 2006-2007 Peter Graves <peter@armedbear.org>\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\n#ifndef __CELL_ERROR_HPP\n#define __CELL_ERROR_HPP\n\nclass CellError : public Condition\n{\nprivate:\n  static Layout * get_layout_for_class();\n\npublic:\n  CellError()\n    : Condition(WIDETAG_CONDITION, get_layout_for_class())\n  {\n    set_slot_value(S_name, NIL);\n  }\n\n  CellError(Value name)\n    : Condition(WIDETAG_CONDITION, get_layout_for_class())\n  {\n    set_slot_value(S_name, name);\n  }\n\n  void initialize(Value initargs);\n\n  virtual Value type_of() const\n  {\n    return S_cell_error;\n  }\n\n  virtual Value class_of() const\n  {\n    return C_cell_error;\n  }\n\n  virtual bool typep(Value type) const;\n};\n\n#endif // CellError.hpp\n", "code_tokens": ["Ġ//", "ĠCell", "Error", ".", "hpp", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "-", "2007", "ĠP", "eter", "ĠGra", "ves", "Ġ<", "p", "eter", "@", "ar", "med", "be", "ar", ".", "org", ">", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "//", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "//", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "//", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "Ċ", "#", "ifndef", "Ġ__", "CELL", "_", "ERROR", "_", "HP", "P", "Ċ", "#", "define", "Ġ__", "CELL", "_", "ERROR", "_", "HP", "P", "Ċ", "Ċ", "class", "ĠCell", "Error", "Ġ:", "Ġpublic", "ĠCondition", "Ċ", "{", "Ċ", "private", ":", "Ċ", "Ġ", "Ġstatic", "ĠLayout", "Ġ*", "Ġget", "_", "layout", "_", "for", "_", "class", "();", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "ĠCell", "Error", "()", "Ċ", "ĠĠĠ", "Ġ:", "ĠCondition", "(", "WID", "ET", "AG", "_", "CONDITION", ",", "Ġget", "_", "layout", "_", "for", "_", "class", "())", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġset", "_", "slot", "_", "value", "(", "S", "_", "name", ",", "ĠNIL", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "ĠCell", "Error", "(", "Value", "Ġname", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠCondition", "(", "WID", "ET", "AG", "_", "CONDITION", ",", "Ġget", "_", "layout", "_", "for", "_", "class", "())", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġset", "_", "slot", "_", "value", "(", "S", "_", "name", ",", "Ġname", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġinitialize", "(", "Value", "Ġinit", "args", ");", "Ċ", "Ċ", "Ġ", "Ġvirtual", "ĠValue", "Ġtype", "_", "of", "()", "Ġconst", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "ĠS", "_", "cell", "_", "error", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġvirtual", "ĠValue", "Ġclass", "_", "of", "()", "Ġconst", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "ĠC", "_", "cell", "_", "error", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġvirtual", "Ġbool", "Ġtype", "p", "(", "Value", "Ġtype", ")", "Ġconst", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠCell", "Error", ".", "hpp", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::475", "code": "//------------------------------------------------\n// The Virtual Monte Carlo examples\n// Copyright (C) 2007 - 2014 Ivana Hrivnacova\n// All rights reserved.\n//\n// For the licensing terms see geant4_vmc/LICENSE.\n// Contact: root-vmc@cern.ch\n//-------------------------------------------------\n\n\n/// \\file E01/g3Config.C\n/// \\brief Configuration macro for Geant3 VMC for Example01 \n\nvoid Config()\n{\n/// The configuration function for Geant3 VMC for Example01\n/// called during MC application initialization. \n\n  new  TGeant3(\"C++ Interface to Geant3\");\n\n  cout << \"Geant3 has been created.\" << endl;\n}\n\n\n", "code_tokens": ["Ġ//", "------------------------------------------------", "Ċ", "//", "ĠThe", "ĠVirtual", "ĠMon", "te", "ĠCar", "lo", "Ġexamples", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "Ġ-", "Ġ2014", "ĠI", "v", "ana", "ĠH", "riv", "na", "co", "va", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠFor", "Ġthe", "Ġlic", "ensing", "Ġterms", "Ġsee", "Ġge", "ant", "4", "_", "vm", "c", "/", "LICENSE", ".", "Ċ", "//", "ĠContact", ":", "Ġroot", "-", "vm", "c", "@", "cern", ".", "ch", "Ċ", "//-------------------------------------------------", "Ċ", "Ċ", "Ċ", "///", "Ġ\\", "file", "ĠE", "01", "/", "g", "3", "Config", ".", "C", "Ċ", "///", "Ġ\\", "brief", "ĠConfiguration", "Ġmacro", "Ġfor", "ĠGe", "ant", "3", "ĠV", "MC", "Ġfor", "ĠExample", "01", "ĠĊ", "Ċ", "void", "ĠConfig", "()", "Ċ", "{", "Ċ", "///", "ĠThe", "Ġconfiguration", "Ġfunction", "Ġfor", "ĠGe", "ant", "3", "ĠV", "MC", "Ġfor", "ĠExample", "01", "Ċ", "///", "Ġcalled", "Ġduring", "ĠMC", "Ġapplication", "Ġinitialization", ".", "ĠĊ", "Ċ", "Ġ", "Ġnew", "Ġ", "ĠT", "Ge", "ant", "3", "(\"", "C", "++", "ĠInterface", "Ġto", "ĠGe", "ant", "3", "\");", "Ċ", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Ge", "ant", "3", "Ġhas", "Ġbeen", "Ġcreated", ".\"", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::476", "code": "#include <cstdio>\nint b[8] = {0,1,10,11,100,101,110,111};\nint main()\n{\n    char c = getchar();\n    printf(\"%d\", b[c-'0']);\n    while((c = getchar()) != '\\n')\n        printf(\"%03d\", b[c-'0']);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "int", "Ġb", "[", "8", "]", "Ġ=", "Ġ{", "0", ",", "1", ",", "10", ",", "11", ",", "100", ",", "101", ",", "110", ",", "111", "};", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġchar", "Ġc", "Ġ=", "Ġget", "char", "();", "Ċ", "ĠĠĠ", "Ġprintf", "(\"%", "d", "\",", "Ġb", "[", "c", "-'", "0", "']);", "Ċ", "ĠĠĠ", "Ġwhile", "((", "c", "Ġ=", "Ġget", "char", "())", "Ġ!=", "Ġ'\\", "n", "')", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "03", "d", "\",", "Ġb", "[", "c", "-'", "0", "']);", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::477", "code": "#include <gtkmm/application.h>\n#include <gtkmm/window.h>\n#include <glibmm/main.h>\n\n#include \"MyArea.h\"\n\nint main(int argc, char** argv) {\n\tauto app = Gtk::Application::create(argc, argv, \"org.gtkmm.example\");\n\tGtk::Window win;\n\twin.set_title(\"Cairo example\");\n\tMyArea my_area;\n\twin.add(my_area);\n\tmy_area.show();\n\treturn app->run(win);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "gtk", "mm", "/", "application", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "gtk", "mm", "/", "window", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "g", "lib", "mm", "/", "main", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "My", "Area", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġapp", "Ġ=", "ĠGtk", "::", "Application", "::", "create", "(", "argc", ",", "Ġargv", ",", "Ġ\"", "org", ".", "gtk", "mm", ".", "example", "\");", "Ċ", "ĉ", "Gtk", "::", "Window", "Ġwin", ";", "Ċ", "ĉ", "win", ".", "set", "_", "title", "(\"", "Cairo", "Ġexample", "\");", "Ċ", "ĉ", "My", "Area", "Ġmy", "_", "area", ";", "Ċ", "ĉ", "win", ".", "add", "(", "my", "_", "area", ");", "Ċ", "ĉ", "my", "_", "area", ".", "show", "();", "Ċ", "ĉ", "return", "Ġapp", "->", "run", "(", "win", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::478", "code": "/*\n  Apery, a USI shogi playing engine derived from Stockfish, a UCI chess playing engine.\n  Copyright (C) 2004-2008 Tord Romstad (Glaurung author)\n  Copyright (C) 2008-2015 Marco Costalba, Joona Kiiski, Tord Romstad\n  Copyright (C) 2015-2018 Marco Costalba, Joona Kiiski, Gary Linscott, Tord Romstad\n  Copyright (C) 2011-2018 Hiraoka Takuya\n\n  Apery is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  Apery is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include \"mt64bit.hpp\"\n\n//MT64bit g_mt64bit(std::chrono::system_clock::now().time_since_epoch().count());\nMT64bit g_mt64bit; // seed が固定値である必要は特に無い。\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "ĠA", "per", "y", ",", "Ġa", "ĠU", "SI", "Ġsh", "og", "i", "Ġplaying", "Ġengine", "Ġderived", "Ġfrom", "ĠSto", "ck", "fish", ",", "Ġa", "ĠU", "CI", "Ġche", "ss", "Ġplaying", "Ġengine", ".", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2004", "-", "2008", "ĠT", "ord", "ĠR", "om", "st", "ad", "Ġ(", "G", "la", "ur", "ung", "Ġauthor", ")", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2015", "ĠMar", "co", "ĠCost", "al", "ba", ",", "ĠJ", "oon", "a", "ĠK", "i", "isk", "i", ",", "ĠT", "ord", "ĠR", "om", "st", "ad", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "-", "2018", "ĠMar", "co", "ĠCost", "al", "ba", ",", "ĠJ", "oon", "a", "ĠK", "i", "isk", "i", ",", "ĠG", "ary", "ĠL", "ins", "co", "tt", ",", "ĠT", "ord", "ĠR", "om", "st", "ad", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "-", "2018", "ĠHi", "ra", "ok", "a", "ĠT", "ak", "u", "ya", "Ċ", "Ċ", "Ġ", "ĠA", "per", "y", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠA", "per", "y", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "mt", "64", "bit", ".", "hpp", "\"", "Ċ", "Ċ", "//", "MT", "64", "bit", "Ġg", "_", "mt", "64", "bit", "(", "std", "::", "chrono", "::", "system", "_", "clock", "::", "now", "().", "time", "_", "since", "_", "epoch", "().", "count", "());", "Ċ", "MT", "64", "bit", "Ġg", "_", "mt", "64", "bit", ";", "Ġ//", "Ġseed", "Ġ", "ãģĮ", "åĽ", "º", "å®ļ", "åĢ¤", "ãģ§", "ãģĤ", "ãĤĭ", "å¿ħ", "è¦ģ", "ãģ¯", "çī¹", "ãģ«", "çĦ", "¡", "ãģĦ", "ãĢĤ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::479", "code": "#pragma once\n\n/*  This file is part of Imagine.\n\n\tImagine is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tImagine is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with Imagine.  If not, see <http://www.gnu.org/licenses/> */\n\n#include <imagine/config/defs.hh>\n\n#ifdef __APPLE__\n#include <imagine/thread/MachSemaphore.hh>\n#else\n#include <imagine/thread/PosixSemaphore.hh>\n#endif\n\nnamespace IG\n{\n\nclass Semaphore : public SemaphoreImpl\n{\npublic:\n\tSemaphore(unsigned int startValue);\n\tvoid wait();\n\tvoid notify();\n};\n\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "/*", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠI", "mag", "ine", ".", "Ċ", "Ċ", "ĉ", "Imag", "ine", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĉ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĉ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĉ", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĉ", "Imag", "ine", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĉ", "but", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĉ", "MER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĉ", "GNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĉ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĉ", "al", "ong", "Ġwith", "ĠI", "mag", "ine", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "imag", "ine", "/", "config", "/", "defs", ".", "hh", ">", "Ċ", "Ċ", "#", "ifdef", "Ġ__", "APPLE", "__", "Ċ", "#", "include", "Ġ<", "imag", "ine", "/", "thread", "/", "Mach", "Semaphore", ".", "hh", ">", "Ċ", "#", "else", "Ċ", "#", "include", "Ġ<", "imag", "ine", "/", "thread", "/", "Posix", "Semaphore", ".", "hh", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "namespace", "ĠIG", "Ċ", "{", "Ċ", "Ċ", "class", "ĠSem", "aphore", "Ġ:", "Ġpublic", "ĠSem", "aphore", "Impl", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "Semaphore", "(", "unsigned", "Ġint", "Ġstart", "Value", ");", "Ċ", "ĉ", "void", "Ġwait", "();", "Ċ", "ĉ", "void", "Ġnotify", "();", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::480", "code": "#include <iostream>\n#include <stdexcept>\n#include \"game.h\"\n\nint main()\n{\n    try\n    {\n        Game game;\n        game.run();\n    }\n    catch (std::exception& e)\n    {\n        std::cout << \"\\nEXCEPTION: \" << e.what() <<std::endl;\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "st", "dex", "cept", ">", "Ċ", "#", "include", "Ġ\"", "game", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtry", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠGame", "Ġgame", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġgame", ".", "run", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcatch", "Ġ(", "std", "::", "exception", "&", "Ġe", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"\\", "n", "EXCEPTION", ":", "Ġ\"", "Ġ<<", "Ġe", ".", "what", "()", "Ġ<<", "std", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::481", "code": "#include <vector>\n#include <iostream>\n#include <iomanip>\n#include \"drvg.hpp\"\n#include \"random.hpp\"\n#include \"timer.hpp\"\n\nusing namespace std;\nusing namespace wat;\n\ntemplate<typename T>\nvoid test(const vector<double>& prob, int number)\n{\n    T ge(prob.begin(), prob.end());\n    std::vector<int> sum(prob.size());\n    timer ti;\n    ti.start();\n    for (int i = 0; i < number; ++i)\n    {\n        ++sum[ge()];\n    }\n    ti.stop();\n    std::cout << std::setw(11) << ti.time() << std::endl;\n}\n\nint main()\n{\n    vector<double> prob;\n    int size = 100000;\n    int number = 1000000;\n    for (int i = 0; i < size; ++i)\n    {\n        prob.push_back(wat::random_01());\n    }\n    std::cout << std::setw(23) << \"sequential search:\" << \" size=\" << number / 100;\n    test<drvg_sequential_search>(prob, number / 100);\n    std::cout << std::setw(23) << \"binary search:\" << \" size=\" << number;\n    test<drvg_binary_search>(prob, number);\n    return 0;\n};\n", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "Ċ", "#", "include", "Ġ\"", "drv", "g", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "random", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "timer", ".", "hpp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "Ġw", "at", ";", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "Ċ", "void", "Ġtest", "(", "const", "Ġvector", "<", "double", ">&", "Ġprob", ",", "Ġint", "Ġnumber", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠT", "Ġge", "(", "prob", ".", "begin", "(),", "Ġprob", ".", "end", "());", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "int", ">", "Ġsum", "(", "prob", ".", "size", "());", "Ċ", "ĠĠĠ", "Ġtimer", "Ġti", ";", "Ċ", "ĠĠĠ", "Ġti", ".", "start", "();", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnumber", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ++", "sum", "[", "ge", "()];", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġti", ".", "stop", "();", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "setw", "(", "11", ")", "Ġ<<", "Ġti", ".", "time", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġvector", "<", "double", ">", "Ġprob", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġsize", "Ġ=", "Ġ100000", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġnumber", "Ġ=", "Ġ1000000", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġsize", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprob", ".", "push", "_", "back", "(", "w", "at", "::", "random", "_", "01", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "setw", "(", "23", ")", "Ġ<<", "Ġ\"", "se", "quential", "Ġsearch", ":\"", "Ġ<<", "Ġ\"", "Ġsize", "=\"", "Ġ<<", "Ġnumber", "Ġ/", "Ġ100", ";", "Ċ", "ĠĠĠ", "Ġtest", "<", "drv", "g", "_", "se", "quential", "_", "search", ">(", "prob", ",", "Ġnumber", "Ġ/", "Ġ100", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "setw", "(", "23", ")", "Ġ<<", "Ġ\"", "binary", "Ġsearch", ":\"", "Ġ<<", "Ġ\"", "Ġsize", "=\"", "Ġ<<", "Ġnumber", ";", "Ċ", "ĠĠĠ", "Ġtest", "<", "drv", "g", "_", "binary", "_", "search", ">(", "prob", ",", "Ġnumber", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::482", "code": "#ifndef IMAGECONVERTER_HPP\n#define IMAGECONVERTER_HPP\n\n#include <QImage>\n#include <QDebug>\n\n#include <opencv2/core.hpp>\n#include <opencv2/imgproc.hpp>\n\n#include \"Logger.hpp\"\n\n\nclass ImageConverter {\npublic:\n    ImageConverter() = default;\n    static QImage Mat2QImage(const cv::Mat &cvImage);\n    static cv::Mat QImage2Mat(const QImage& image);\n};\n\n#endif // IMAGECONVERTER_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠIMAGE", "CON", "VER", "TER", "_", "HP", "P", "Ċ", "#", "define", "ĠIMAGE", "CON", "VER", "TER", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "QImage", ">", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "open", "cv", "2", "/", "core", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "open", "cv", "2", "/", "img", "proc", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Logger", ".", "hpp", "\"", "Ċ", "Ċ", "Ċ", "class", "ĠImage", "Converter", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠImage", "Converter", "()", "Ġ=", "Ġdefault", ";", "Ċ", "ĠĠĠ", "Ġstatic", "ĠQImage", "ĠMat", "2", "QImage", "(", "const", "Ġcv", "::", "Mat", "Ġ&", "cv", "Image", ");", "Ċ", "ĠĠĠ", "Ġstatic", "Ġcv", "::", "Mat", "ĠQImage", "2", "Mat", "(", "const", "ĠQImage", "&", "Ġimage", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠIMAGE", "CON", "VER", "TER", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::483", "code": "#include \"Display.h\"\n#include <memory>\n#include <GL/glew.h>\n#include <SFML/Graphics.hpp>\n\n/* Display source file\n * Used for handling and managing the display portion of the engine\n */\nnamespace Display {\n\n    constexpr static int Width = 640;\n    constexpr static int Height = 480;\n\n    std::unique_ptr<sf::RenderWindow> window;\n\n    void init() {\n        sf::ContextSettings settings;\n        settings.depthBits = 24;\n        // Set the openGL\n        settings.majorVersion = 4;\n        settings.minorVersion = 4;\n\n        window = std::make_unique<sf::RenderWindow>(sf::VideoMode(Width, Height), \"qDoom\", sf::Style::Close, settings);\n\n        // Initialize GLEW and set the drawing area\n        glewInit();\n        glViewport(0, 0, Width, Height);\n    }\n\n    void close() {\n        window->close();\n    }\n\n    void clear() {\n        glClearColor(0.0, 0.0, 0.0, 1.0);\n        glClear(GL_DEPTH_BUFFER_BIT | GL_COLOR_BUFFER_BIT);\n    }\n\n    void update() {\n        window->display();\n    }\n\n    void checkClose() {\n        sf::Event e;\n        while(window->pollEvent(e)) {\n            if(e.type == sf::Event::Closed) {\n                close();\n            }\n        }\n    }\n\n    bool isOpen() {\n        return window->isOpen();\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Display", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "GL", "/", "gle", "w", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "SF", "ML", "/", "Graphics", ".", "hpp", ">", "Ċ", "Ċ", "/*", "ĠDisplay", "Ġsource", "Ġfile", "Ċ", "Ġ*", "ĠUsed", "Ġfor", "Ġhandling", "Ġand", "Ġmanag", "ing", "Ġthe", "Ġdisplay", "Ġportion", "Ġof", "Ġthe", "Ġengine", "Ċ", "Ġ*/", "Ċ", "namespace", "ĠDisplay", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġconstexpr", "Ġstatic", "Ġint", "ĠWidth", "Ġ=", "Ġ640", ";", "Ċ", "ĠĠĠ", "Ġconstexpr", "Ġstatic", "Ġint", "ĠHeight", "Ġ=", "Ġ480", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "ptr", "<", "sf", "::", "Render", "Window", ">", "Ġwindow", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġinit", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsf", "::", "Context", "Settings", "Ġsettings", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsettings", ".", "depth", "Bits", "Ġ=", "Ġ24", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠSet", "Ġthe", "Ġopen", "GL", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsettings", ".", "majorVersion", "Ġ=", "Ġ4", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsettings", ".", "minorVersion", "Ġ=", "Ġ4", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwindow", "Ġ=", "Ġstd", "::", "make", "_", "unique", "<", "sf", "::", "Render", "Window", ">(", "sf", "::", "Video", "Mode", "(", "Width", ",", "ĠHeight", "),", "Ġ\"", "q", "Do", "om", "\",", "Ġsf", "::", "Style", "::", "Close", ",", "Ġsettings", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠInitialize", "ĠG", "LE", "W", "Ġand", "Ġset", "Ġthe", "Ġdrawing", "Ġarea", "Ċ", "ĠĠĠĠĠĠĠ", "Ġg", "lew", "Init", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġgl", "Viewport", "(", "0", ",", "Ġ0", ",", "ĠWidth", ",", "ĠHeight", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġclose", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwindow", "->", "close", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġclear", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġgl", "Clear", "Color", "(", "0", ".", "0", ",", "Ġ0", ".", "0", ",", "Ġ0", ".", "0", ",", "Ġ1", ".", "0", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġgl", "Clear", "(", "GL", "_", "DEPTH", "_", "BUFFER", "_", "BIT", "Ġ|", "ĠGL", "_", "COLOR", "_", "BUFFER", "_", "BIT", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġupdate", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwindow", "->", "display", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġcheck", "Close", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsf", "::", "Event", "Ġe", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "window", "->", "poll", "Event", "(", "e", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "e", ".", "type", "Ġ==", "Ġsf", "::", "Event", "::", "Closed", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġclose", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġbool", "ĠisOpen", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġwindow", "->", "isOpen", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::484", "code": "/*\n * PT2314PreAmp.cpp\n *\n *  Created on: 28.12.2017\n *      Author: wmarkowski\n */\n\n#include \"PT2314PreAmp.h\"\n\nPT2314PreAmp::PT2314PreAmp(PT2314 *pt2314)\n{\n   this->pt2314 = pt2314;\n   this->volume = 0;\n   this->inputChannel = 0;\n}\n\nvoid PT2314PreAmp::setVolume(uint8_t newVolume)\n{\n   if (getVolume() == newVolume)\n   {\n      return;\n   }\n\n   this->volume = newVolume;\n   pt2314->volume(newVolume);\n}\n\nuint8_t PT2314PreAmp::getVolume()\n{\n   return volume;\n}\n\nvoid PT2314PreAmp::setInputChannel(uint8_t channel)\n{\n   this->inputChannel = channel;\n   pt2314->channel(channel);\n}\n\nuint8_t PT2314PreAmp::getInputChannel()\n{\n   return inputChannel;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠPT", "23", "14", "Pre", "Amp", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ28", ".", "12", ".", "2017", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "Ġw", "mark", "ow", "ski", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "PT", "23", "14", "Pre", "Amp", ".", "h", "\"", "Ċ", "Ċ", "PT", "23", "14", "Pre", "Amp", "::", "PT", "23", "14", "Pre", "Amp", "(", "PT", "23", "14", "Ġ*", "pt", "23", "14", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġthis", "->", "pt", "23", "14", "Ġ=", "Ġpt", "23", "14", ";", "Ċ", "ĠĠ", "Ġthis", "->", "volume", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠ", "Ġthis", "->", "input", "Channel", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPT", "23", "14", "Pre", "Amp", "::", "set", "Volume", "(", "uint", "8", "_", "t", "Ġnew", "Volume", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġif", "Ġ(", "get", "Volume", "()", "Ġ==", "Ġnew", "Volume", ")", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠ", "Ġthis", "->", "volume", "Ġ=", "Ġnew", "Volume", ";", "Ċ", "ĠĠ", "Ġpt", "23", "14", "->", "volume", "(", "new", "Volume", ");", "Ċ", "}", "Ċ", "Ċ", "uint", "8", "_", "t", "ĠPT", "23", "14", "Pre", "Amp", "::", "get", "Volume", "()", "Ċ", "{", "Ċ", "ĠĠ", "Ġreturn", "Ġvolume", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPT", "23", "14", "Pre", "Amp", "::", "setInput", "Channel", "(", "uint", "8", "_", "t", "Ġchannel", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġthis", "->", "input", "Channel", "Ġ=", "Ġchannel", ";", "Ċ", "ĠĠ", "Ġpt", "23", "14", "->", "channel", "(", "channel", ");", "Ċ", "}", "Ċ", "Ċ", "uint", "8", "_", "t", "ĠPT", "23", "14", "Pre", "Amp", "::", "getInput", "Channel", "()", "Ċ", "{", "Ċ", "ĠĠ", "Ġreturn", "Ġinput", "Channel", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::485", "code": "#include <QtGui/QApplication>\n#include \"dialog.h\"\n\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    Dialog w;\n    w.show();\n    return a.exec();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Qt", "Gui", "/", "Q", "Application", ">", "Ċ", "#", "include", "Ġ\"", "dialog", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "ĠDialog", "Ġw", ";", "Ċ", "ĠĠĠ", "Ġw", ".", "show", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::486", "code": "#include \"fizzbuzz.h\"\n#include <iostream>\n\nint main(int /*argc*/, char* /*argv*/[]) {\n  playFizzBuzz();\n  return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "f", "izz", "bu", "zz", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġ/*", "argc", "*/,", "Ġchar", "*", "Ġ/*", "argv", "*/", "[])", "Ġ{", "Ċ", "Ġ", "Ġplay", "F", "izz", "Bu", "zz", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::487", "code": "#pragma once\n\n#include <Poco/Types.h>\n\nnamespace Burst\n{\n\tstruct CalculatedDeadline\n\t{\n\t\tPoco::UInt64 deadline;\n\t\tPoco::UInt64 nonce;\n\t};\n\n\tenum class MemoryType\n\t{\n\t\tBuffer,\n\t\tGensig,\n\t\tDeadlines,\n\t\tBytes\n\t};\n\n\tenum class MemoryCopyDirection\n\t{\n\t\tToHost,\n\t\tToDevice\n\t};\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "Poco", "/", "Types", ".", "h", ">", "Ċ", "Ċ", "namespace", "ĠB", "urst", "Ċ", "{", "Ċ", "ĉ", "struct", "ĠCalcul", "ated", "Deadline", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Poco", "::", "UInt", "64", "Ġdeadline", ";", "Ċ", "ĉ", "ĉ", "Poco", "::", "UInt", "64", "Ġnonce", ";", "Ċ", "ĉ", "};", "Ċ", "Ċ", "ĉ", "enum", "Ġclass", "ĠMemory", "Type", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Buffer", ",", "Ċ", "ĉ", "ĉ", "G", "ens", "ig", ",", "Ċ", "ĉ", "ĉ", "Dead", "lines", ",", "Ċ", "ĉ", "ĉ", "Bytes", "Ċ", "ĉ", "};", "Ċ", "Ċ", "ĉ", "enum", "Ġclass", "ĠMemory", "Copy", "Direction", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ToHost", ",", "Ċ", "ĉ", "ĉ", "To", "Device", "Ċ", "ĉ", "};", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::488", "code": "/* \n * File:   SynIO.hpp\n * Author: Matteo Di Carlo\n * Created on March 17, 2016, 9:05 PM\n * \n * Copyright (C) 2016 Matteo Di Carlo - www.gleeno.com\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#ifndef SYNIO_HPP\n#define\tSYNIO_HPP\n\n#include <iostream>\n#include <fstream>\n#include \"Synapsis/Common/Status.hpp\"\n#include <json/json.h>\n\nclass SynIO {\npublic:\n    status_t getTextFile(std::string* source, std::string* result);\n    //todo: setTextFile\n    status_t getJsonFile (std::string* source, Json::Value* result);\n    static int toJson(void* source, Json::Value* result);\n};\n#endif\t/* SYNIO_HPP */\n\n", "code_tokens": ["Ġ/*", "ĠĊ", "Ġ*", "ĠFile", ":", "ĠĠ", "ĠSyn", "IO", ".", "hpp", "Ċ", "Ġ*", "ĠAuthor", ":", "ĠMat", "te", "o", "ĠDi", "ĠCar", "lo", "Ċ", "Ġ*", "ĠCreated", "Ġon", "ĠM", "arch", "Ġ17", ",", "Ġ2016", ",", "Ġ9", ":", "05", "ĠPM", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2016", "ĠMat", "te", "o", "ĠDi", "ĠCar", "lo", "Ġ-", "Ġwww", ".", "gle", "eno", ".", "com", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠSYN", "IO", "_", "HP", "P", "Ċ", "#", "define", "ĉ", "SYN", "IO", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ\"", "Syn", "aps", "is", "/", "Common", "/", "Status", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "json", "/", "json", ".", "h", ">", "Ċ", "Ċ", "class", "ĠSyn", "IO", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġstatus", "_", "t", "ĠgetText", "File", "(", "std", "::", "string", "*", "Ġsource", ",", "Ġstd", "::", "string", "*", "Ġresult", ");", "Ċ", "ĠĠĠ", "Ġ//", "todo", ":", "ĠsetText", "File", "Ċ", "ĠĠĠ", "Ġstatus", "_", "t", "Ġget", "Json", "File", "Ġ(", "std", "::", "string", "*", "Ġsource", ",", "ĠJson", "::", "Value", "*", "Ġresult", ");", "Ċ", "ĠĠĠ", "Ġstatic", "Ġint", "Ġto", "Json", "(", "void", "*", "Ġsource", ",", "ĠJson", "::", "Value", "*", "Ġresult", ");", "Ċ", "};", "Ċ", "#", "endif", "ĉ", "/*", "ĠSYN", "IO", "_", "HP", "P", "Ġ*/", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::489", "code": "507. Perfect Number\nWe define the Perfect Number is a positive integer that is equal to the sum of all its positive divisors except itself.\n\nNow, given an integer n, write a function that returns true when it is a perfect number and false when it is not.\nExample:\nInput: 28\nOutput: True\nExplanation: 28 = 1 + 2 + 4 + 7 + 14\nNote: The input number n will not exceed 100,000,000. (1e8)\n\n题目大意：完美数字是指它的所有可以整除的正数中除了它本身，其他数字之和等于这个数字的数。给一个正整数n，写一个函数，当它是一个完美数字的时候返回true否则false。\n分析：从2～sqrt(num)，累加所有i和num/i【因为如果从1～num一个个试是否可以整除的话会超时，而且也没必要，因为知道了除数a必然就知道了num/a这个数字也是它的除数】因为最后还有一个1没有加，所以sum一开始为1，然后返回num == sum，注意如果num本身为1，则要return false，因为1的唯一一个除数1是它本身不能累加，所以1不满足条件。\n\nclass Solution {\npublic:\n    bool checkPerfectNumber(int num) {\n        if (num == 1) return false;\n        int sum = 1;\n        for (int i = 2; i <= sqrt(num); i++)\n            if (num % i == 0) sum = sum + (num / i) + i;\n        return num == sum;\n    }\n};", "code_tokens": ["Ġ5", "07", ".", "ĠPerf", "ect", "ĠNumber", "Ċ", "We", "Ġdefine", "Ġthe", "ĠPerf", "ect", "ĠNumber", "Ġis", "Ġa", "Ġpositive", "Ġinteger", "Ġthat", "Ġis", "Ġequal", "Ġto", "Ġthe", "Ġsum", "Ġof", "Ġall", "Ġits", "Ġpositive", "Ġdiv", "is", "ors", "Ġexcept", "Ġitself", ".", "Ċ", "Ċ", "Now", ",", "Ġgiven", "Ġan", "Ġinteger", "Ġn", ",", "Ġwrite", "Ġa", "Ġfunction", "Ġthat", "Ġreturns", "Ġtrue", "Ġwhen", "Ġit", "Ġis", "Ġa", "Ġperfect", "Ġnumber", "Ġand", "Ġfalse", "Ġwhen", "Ġit", "Ġis", "Ġnot", ".", "Ċ", "Example", ":", "Ċ", "Input", ":", "Ġ28", "Ċ", "Output", ":", "ĠTrue", "Ċ", "Ex", "planation", ":", "Ġ28", "Ġ=", "Ġ1", "Ġ+", "Ġ2", "Ġ+", "Ġ4", "Ġ+", "Ġ7", "Ġ+", "Ġ14", "Ċ", "Note", ":", "ĠThe", "Ġinput", "Ġnumber", "Ġn", "Ġwill", "Ġnot", "Ġexceed", "Ġ100", ",", "000", ",", "000", ".", "Ġ(", "1", "e", "8", ")", "Ċ", "Ċ", "é¢ĺ", "çĽ®", "å¤§", "æĦı", "ï¼ļ", "å®Į", "ç¾", "İ", "æķ°", "åŃĹ", "æĺ¯", "æĮĩ", "å®", "ĥ", "çļĦ", "æīĢæľī", "åı¯ä»¥", "æķ´", "éĻ¤", "çļĦ", "æŃ£", "æķ°", "ä¸Ń", "éĻ¤", "äºĨ", "å®", "ĥ", "æľ¬", "è", "º", "«", "ï¼Į", "åħ¶", "ä»ĸ", "æķ°", "åŃĹ", "ä¹ĭ", "åĴĮ", "çŃī", "äºİ", "è¿Ļä¸ª", "æķ°", "åŃĹ", "çļĦ", "æķ°", "ãĢĤ", "ç»Ļ", "ä¸Ģä¸ª", "æŃ£", "æķ´", "æķ°", "n", "ï¼Į", "åĨĻ", "ä¸Ģä¸ª", "åĩ½æķ°", "ï¼Į", "å½ĵ", "å®", "ĥ", "æĺ¯", "ä¸Ģä¸ª", "å®Į", "ç¾", "İ", "æķ°", "åŃĹ", "çļĦ", "æĹ¶", "åĢĻ", "è¿ĶåĽŀ", "true", "åĲ¦", "åĪĻ", "false", "ãĢĤ", "Ċ", "åĪĨ", "æŀĲ", "ï¼ļ", "ä»İ", "2", "ï½", "ŀ", "sqrt", "(", "num", ")", "ï¼Į", "ç´", "¯", "åĬł", "æīĢæľī", "i", "åĴĮ", "num", "/", "i", "ãĢĲ", "åĽł", "ä¸º", "å¦Ĥæŀľ", "ä»İ", "1", "ï½", "ŀ", "num", "ä¸Ģä¸ª", "ä¸ª", "è¯ķ", "æĺ¯åĲ¦", "åı¯ä»¥", "æķ´", "éĻ¤", "çļĦ", "è¯Ŀ", "ä¼ļ", "è¶ħ", "æĹ¶", "ï¼Į", "èĢ", "Į", "ä¸", "Ķ", "ä¹Ł", "æ²¡", "å¿ħ", "è¦ģ", "ï¼Į", "åĽł", "ä¸º", "çŁ¥", "éģ", "ĵ", "äºĨ", "éĻ¤", "æķ°", "a", "å¿ħ", "çĦ¶", "å°±", "çŁ¥", "éģ", "ĵ", "äºĨ", "num", "/", "a", "è¿Ļä¸ª", "æķ°", "åŃĹ", "ä¹Ł", "æĺ¯", "å®", "ĥ", "çļĦ", "éĻ¤", "æķ°", "ãĢĳ", "åĽł", "ä¸º", "æľĢ", "åĲİ", "è¿ĺ", "æľī", "ä¸Ģä¸ª", "1", "æ²¡æľī", "åĬł", "ï¼Į", "æīĢ", "ä»¥", "sum", "ä¸Ģ", "å¼Ģå§ĭ", "ä¸º", "1", "ï¼Į", "çĦ¶", "åĲİ", "è¿ĶåĽŀ", "num", "Ġ==", "Ġsum", "ï¼Į", "æ³¨", "æĦı", "å¦Ĥæŀľ", "num", "æľ¬", "è", "º", "«", "ä¸º", "1", "ï¼Į", "åĪĻ", "è¦ģ", "return", "Ġfalse", "ï¼Į", "åĽł", "ä¸º", "1", "çļĦ", "å", "Ķ¯", "ä¸Ģ", "ä¸Ģä¸ª", "éĻ¤", "æķ°", "1", "æĺ¯", "å®", "ĥ", "æľ¬", "è", "º", "«", "ä¸įèĥ½", "ç´", "¯", "åĬł", "ï¼Į", "æīĢ", "ä»¥", "1", "ä¸į", "æ»", "¡", "è¶", "³", "æĿ¡ä»¶", "ãĢĤ", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġbool", "Ġcheck", "Perf", "ect", "Number", "(", "int", "Ġnum", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "num", "Ġ==", "Ġ1", ")", "Ġreturn", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġsum", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<=", "Ġsqrt", "(", "num", ");", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "num", "Ġ%", "Ġi", "Ġ==", "Ġ0", ")", "Ġsum", "Ġ=", "Ġsum", "Ġ+", "Ġ(", "num", "Ġ/", "Ġi", ")", "Ġ+", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnum", "Ġ==", "Ġsum", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::490", "code": "// This file is part of Aspect-Oriented-IP.\n//\n// Aspect-Oriented-IP is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// \n// Aspect-Oriented-IP is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// \n// You should have received a copy of the GNU General Public License\n// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.\n// \n// Copyright (C) 2011 Christoph Borchert\n\n\n#include \"Demux.h\"\n\nnamespace ipstack {\n\nDemux Demux::inst_; //create singleton instance\n\nvoid Demux::demux(const void* data, unsigned len, Interface* interface){\n  //Aspects to be weaved here!\n}\n\n} // namespace ipstack\n\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠAs", "pect", "-", "Ori", "ented", "-", "IP", ".", "Ċ", "//", "Ċ", "//", "ĠAs", "pect", "-", "Ori", "ented", "-", "IP", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠAs", "pect", "-", "Ori", "ented", "-", "IP", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "ĠAs", "pect", "-", "Ori", "ented", "-", "IP", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "ĠCh", "ri", "stop", "h", "ĠB", "or", "ch", "ert", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "Dem", "ux", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġip", "stack", "Ġ{", "Ċ", "Ċ", "Dem", "ux", "ĠDem", "ux", "::", "inst", "_;", "Ġ//", "create", "Ġsingleton", "Ġinstance", "Ċ", "Ċ", "void", "ĠDem", "ux", "::", "demux", "(", "const", "Ġvoid", "*", "Ġdata", ",", "Ġunsigned", "Ġlen", ",", "ĠInterface", "*", "Ġinterface", "){", "Ċ", "Ġ", "Ġ//", "Aspect", "s", "Ġto", "Ġbe", "Ġwe", "aved", "Ġhere", "!", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġip", "stack", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::491", "code": "#include \"button.h\"\n#include \"util.h\"\n\nnamespace GUI\n{\n\nvoid ZCGtkButton::onClick(GtkButton*, ZCGtkButton* btn)\n{\n    btn->onClickFunc();\n}\n\nZCGtkButton::ZCGtkButton(const std::string& text, boost::function<void(void)> c):\n    onClickFunc(c)\n{\n    std::string mod=convertMnemonic(text);\n    button=gtk_button_new_with_mnemonic(mod.c_str());\n    gtk_widget_set_halign(button, GTK_ALIGN_CENTER);\n    gtk_widget_set_valign(button, GTK_ALIGN_START);\n    g_signal_connect(button, \"destroy\", G_CALLBACK(gtk_widget_destroyed), &button);\n    g_signal_connect(button, \"clicked\", G_CALLBACK(onClick), this);\n}\n\nGtkWidget* ZCGtkButton::get()\n{\n    return button;\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "button", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠGUI", "Ċ", "{", "Ċ", "Ċ", "void", "ĠZ", "CG", "tk", "Button", "::", "onClick", "(", "Gtk", "Button", "*,", "ĠZ", "CG", "tk", "Button", "*", "Ġbtn", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġbtn", "->", "onClick", "Func", "();", "Ċ", "}", "Ċ", "Ċ", "Z", "CG", "tk", "Button", "::", "Z", "CG", "tk", "Button", "(", "const", "Ġstd", "::", "string", "&", "Ġtext", ",", "Ġboost", "::", "function", "<", "void", "(", "void", ")>", "Ġc", "):", "Ċ", "ĠĠĠ", "ĠonClick", "Func", "(", "c", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġmod", "=", "convert", "Mnemonic", "(", "text", ");", "Ċ", "ĠĠĠ", "Ġbutton", "=", "gtk", "_", "button", "_", "new", "_", "with", "_", "mn", "emonic", "(", "mod", ".", "c", "_", "str", "());", "Ċ", "ĠĠĠ", "Ġgtk", "_", "widget", "_", "set", "_", "h", "align", "(", "button", ",", "ĠGTK", "_", "ALIGN", "_", "CENTER", ");", "Ċ", "ĠĠĠ", "Ġgtk", "_", "widget", "_", "set", "_", "val", "ign", "(", "button", ",", "ĠGTK", "_", "ALIGN", "_", "START", ");", "Ċ", "ĠĠĠ", "Ġg", "_", "signal", "_", "connect", "(", "button", ",", "Ġ\"", "destroy", "\",", "ĠG", "_", "CALLBACK", "(", "gtk", "_", "widget", "_", "destroyed", "),", "Ġ&", "button", ");", "Ċ", "ĠĠĠ", "Ġg", "_", "signal", "_", "connect", "(", "button", ",", "Ġ\"", "clicked", "\",", "ĠG", "_", "CALLBACK", "(", "onClick", "),", "Ġthis", ");", "Ċ", "}", "Ċ", "Ċ", "GtkWidget", "*", "ĠZ", "CG", "tk", "Button", "::", "get", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġbutton", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::492", "code": "//  Copyright 2016 Martin Fracker, Jr.\n//  All Rights Reserved.\n// \n//  This project is free software, released under the terms\n//  of the GNU General Public License v3. Please see the\n//  file LICENSE in the root directory or visit\n//  www.gnu.org/licenses/gpl-3.0.en.html for license terms.\n\n#pragma once\n\n#include \"delegate/entity.hh\"\n#include \"tween/tween.hh\"\n#include \"util/dragger.hh\"\n#include \"util/mouseHome.hh\"\n#include \"util/tweenable.hh\"\n\n#include <GL/glut.h>\n\n// draws and controls a hexagon on the screen\nclass A2Object : public Entity {\npublic:\n  A2Object(int x, int y);\n\n  virtual void update() override;\n  virtual void draw() override;\n\n  virtual void keyboardEvent(unsigned char key, Vector2 mousePosition) override;\n  virtual void leftMouse() override;\n  virtual void middleMouse() override;\n  virtual void rightMouse() override;\n\nprivate:\n  Vector2 dimensions;\n  bool spinning; // whether we are spinning\n  bool reverse; // whether spin velocity should be reversed\n  MouseHome mouseHome;\n  Tweenable spinSpeed; // how fast we are spinning\n  GLenum hexagonMode; // openGL mode used when drawing the hexagon\n  Dragger drag; // mechanism for dragging myself\n\n  void mouseDown(bool reverse);\n  void spinLayer();\n  void updateSpinSpeed();\n  void updateSpin();\n};\n", "code_tokens": ["Ġ//", "Ġ", "ĠCopyright", "Ġ2016", "ĠM", "art", "in", "ĠF", "rack", "er", ",", "ĠJ", "r", ".", "Ċ", "//", "Ġ", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "//", "Ġ", "Ċ", "//", "Ġ", "ĠThis", "Ġproject", "Ġis", "Ġfree", "Ġsoftware", ",", "Ġreleased", "Ġunder", "Ġthe", "Ġterms", "Ċ", "//", "Ġ", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġv", "3", ".", "ĠPlease", "Ġsee", "Ġthe", "Ċ", "//", "Ġ", "Ġfile", "ĠLICENSE", "Ġin", "Ġthe", "Ġroot", "Ġdirectory", "Ġor", "Ġvisit", "Ċ", "//", "Ġ", "Ġwww", ".", "gnu", ".", "org", "/", "licenses", "/", "g", "pl", "-", "3", ".", "0", ".", "en", ".", "html", "Ġfor", "Ġlicense", "Ġterms", ".", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "delegate", "/", "entity", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "tween", "/", "tween", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "drag", "ger", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "mouse", "Home", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "t", "we", "enable", ".", "hh", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "GL", "/", "gl", "ut", ".", "h", ">", "Ċ", "Ċ", "//", "Ġdraw", "s", "Ġand", "Ġcontrols", "Ġa", "Ġhex", "agon", "Ġon", "Ġthe", "Ġscreen", "Ċ", "class", "ĠA", "2", "Object", "Ġ:", "Ġpublic", "ĠEntity", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠA", "2", "Object", "(", "int", "Ġx", ",", "Ġint", "Ġy", ");", "Ċ", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġupdate", "()", "Ġoverride", ";", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġdraw", "()", "Ġoverride", ";", "Ċ", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġkeyboard", "Event", "(", "unsigned", "Ġchar", "Ġkey", ",", "ĠVector", "2", "Ġmouse", "Position", ")", "Ġoverride", ";", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġleft", "Mouse", "()", "Ġoverride", ";", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġmiddle", "Mouse", "()", "Ġoverride", ";", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġright", "Mouse", "()", "Ġoverride", ";", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "ĠVector", "2", "Ġdimensions", ";", "Ċ", "Ġ", "Ġbool", "Ġspin", "ning", ";", "Ġ//", "Ġwhether", "Ġwe", "Ġare", "Ġspin", "ning", "Ċ", "Ġ", "Ġbool", "Ġreverse", ";", "Ġ//", "Ġwhether", "Ġspin", "Ġvelocity", "Ġshould", "Ġbe", "Ġreversed", "Ċ", "Ġ", "ĠMouse", "Home", "Ġmouse", "Home", ";", "Ċ", "Ġ", "ĠT", "we", "enable", "Ġspin", "Speed", ";", "Ġ//", "Ġhow", "Ġfast", "Ġwe", "Ġare", "Ġspin", "ning", "Ċ", "Ġ", "ĠGLenum", "Ġhex", "agon", "Mode", ";", "Ġ//", "Ġopen", "GL", "Ġmode", "Ġused", "Ġwhen", "Ġdrawing", "Ġthe", "Ġhex", "agon", "Ċ", "Ġ", "ĠDrag", "ger", "Ġdrag", ";", "Ġ//", "Ġmechanism", "Ġfor", "Ġdragging", "Ġmy", "self", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġmouse", "Down", "(", "bool", "Ġreverse", ");", "Ċ", "Ġ", "Ġvoid", "Ġspin", "Layer", "();", "Ċ", "Ġ", "Ġvoid", "Ġupdate", "Spin", "Speed", "();", "Ċ", "Ġ", "Ġvoid", "Ġupdate", "Spin", "();", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::493", "code": "/* ---------------------------------------------------------------------------\n * Programa: lee_lineas\n * Entradas: Una serie de líneas de texto\n * Salidas:  - La línea más larga (si no se introduce ninguna se muestra una cadena vacía)\n *           - La línea menor lexicográficamente (si no se introduce ninguna se\n *             muestra la cadena FIN)\n * --------------------------------------------------------------------------- */\n\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main ()\n{\n\tconst string CENTINELA = \"FIN\";\n\tstring masLarga = \"\"; // tiene longitud 0\n\tstring linea;\n\n\tcout << \"Introduzca una línea (\" << CENTINELA << \" para acabar): \";\n\tgetline (cin, linea);\n\tstring menor = linea; // se inicia la menor a la primera línea leída\n\twhile (linea != CENTINELA) {\n\t\tif (linea.length () > masLarga.length ())\n\t\t\tmasLarga = linea;\n\t\tif (linea < menor)\n\t\t\tmenor = linea;\n\t\tcout << \"Introduzca una línea (\" << CENTINELA << \" para acabar): \";\n\t\tgetline (cin, linea);\n\t}\n\n\tcout << \"Línea más larga: \" << masLarga << endl;\n\tcout << \"Línea menor lexicográficamente: \" << menor << endl;\n\treturn 0;\n}\n", "code_tokens": ["Ġ/*", "Ġ---------------------------------------------------------------------------", "Ċ", "Ġ*", "ĠProgram", "a", ":", "Ġle", "e", "_", "line", "as", "Ċ", "Ġ*", "ĠEn", "tr", "ad", "as", ":", "ĠUn", "a", "Ġser", "ie", "Ġde", "Ġl", "ÃŃ", "ne", "as", "Ġde", "Ġtex", "to", "Ċ", "Ġ*", "ĠS", "alid", "as", ":", "Ġ", "Ġ-", "ĠLa", "Ġl", "ÃŃ", "ne", "a", "Ġm", "Ã¡", "s", "Ġlarg", "a", "Ġ(", "si", "Ġno", "Ġse", "Ġintroduce", "Ġn", "ing", "una", "Ġse", "Ġm", "ue", "stra", "Ġun", "a", "Ġc", "ad", "ena", "Ġv", "ac", "ÃŃ", "a", ")", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠ", "Ġ-", "ĠLa", "Ġl", "ÃŃ", "ne", "a", "Ġmen", "or", "Ġlex", "ic", "og", "r", "Ã¡", "f", "ic", "am", "ente", "Ġ(", "si", "Ġno", "Ġse", "Ġintroduce", "Ġn", "ing", "una", "Ġse", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "ue", "stra", "Ġla", "Ġc", "ad", "ena", "ĠFIN", ")", "Ċ", "Ġ*", "Ġ---------------------------------------------------------------------------", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "ĉ", "const", "Ġstring", "ĠC", "ENT", "INE", "LA", "Ġ=", "Ġ\"", "FIN", "\";", "Ċ", "ĉ", "string", "Ġm", "as", "Larg", "a", "Ġ=", "Ġ\"\";", "Ġ//", "Ġti", "ene", "Ġlong", "it", "ud", "Ġ0", "Ċ", "ĉ", "string", "Ġline", "a", ";", "Ċ", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Intro", "du", "z", "ca", "Ġun", "a", "Ġl", "ÃŃ", "ne", "a", "Ġ(\"", "Ġ<<", "ĠC", "ENT", "INE", "LA", "Ġ<<", "Ġ\"", "Ġpara", "Ġac", "ab", "ar", "):", "Ġ\";", "Ċ", "ĉ", "getline", "Ġ(", "cin", ",", "Ġline", "a", ");", "Ċ", "ĉ", "string", "Ġmen", "or", "Ġ=", "Ġline", "a", ";", "Ġ//", "Ġse", "Ġin", "ic", "ia", "Ġla", "Ġmen", "or", "Ġa", "Ġla", "Ġpr", "imer", "a", "Ġl", "ÃŃ", "ne", "a", "Ġle", "ÃŃ", "da", "Ċ", "ĉ", "while", "Ġ(", "line", "a", "Ġ!=", "ĠC", "ENT", "INE", "LA", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "line", "a", ".", "length", "Ġ()", "Ġ>", "Ġm", "as", "Larg", "a", ".", "length", "Ġ())", "Ċ", "ĉĉ", "ĉ", "mas", "Larg", "a", "Ġ=", "Ġline", "a", ";", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "line", "a", "Ġ<", "Ġmen", "or", ")", "Ċ", "ĉĉ", "ĉ", "men", "or", "Ġ=", "Ġline", "a", ";", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Intro", "du", "z", "ca", "Ġun", "a", "Ġl", "ÃŃ", "ne", "a", "Ġ(\"", "Ġ<<", "ĠC", "ENT", "INE", "LA", "Ġ<<", "Ġ\"", "Ġpara", "Ġac", "ab", "ar", "):", "Ġ\";", "Ċ", "ĉ", "ĉ", "getline", "Ġ(", "cin", ",", "Ġline", "a", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "L", "ÃŃ", "ne", "a", "Ġm", "Ã¡", "s", "Ġlarg", "a", ":", "Ġ\"", "Ġ<<", "Ġm", "as", "Larg", "a", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "L", "ÃŃ", "ne", "a", "Ġmen", "or", "Ġlex", "ic", "og", "r", "Ã¡", "f", "ic", "am", "ente", ":", "Ġ\"", "Ġ<<", "Ġmen", "or", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::494", "code": "// InputExtraTimeDlg.cpp : implementation file\n//\n\n#include \"stdafx.h\"\n#include \"TimeM.h\"\n#include \"InputExtraTimeDlg.h\"\n\n\n// CInputExtraTimeDlg dialog\n\nIMPLEMENT_DYNAMIC(CInputExtraTimeDlg, CDialog)\n\nCInputExtraTimeDlg::CInputExtraTimeDlg(CWnd* pParent /*=NULL*/)\n\t: CDialog(CInputExtraTimeDlg::IDD, pParent)\n\t, m_strTimeExtra(_T(\"00:00:00,000\"))\n{\n\n}\n\nCInputExtraTimeDlg::~CInputExtraTimeDlg()\n{\n}\n\nvoid CInputExtraTimeDlg::DoDataExchange(CDataExchange* pDX)\n{\n\tCDialog::DoDataExchange(pDX);\n\tDDX_Control(pDX, IDC_EDIT_TIME_OFFSET, m_TimeExtra);\n\tDDX_Text(pDX, IDC_EDIT_TIME_OFFSET, m_strTimeExtra);\n}\n\nBEGIN_MESSAGE_MAP(CInputExtraTimeDlg, CDialog)\nEND_MESSAGE_MAP()\n\n// CInputExtraTimeDlg message handlers\n", "code_tokens": ["Ġ//", "ĠInput", "Extra", "Time", "Dlg", ".", "cpp", "Ġ:", "Ġimplementation", "Ġfile", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Time", "M", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Input", "Extra", "Time", "Dlg", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "//", "ĠC", "Input", "Extra", "Time", "Dlg", "Ġdialog", "Ċ", "Ċ", "IMPLEMENT", "_", "DYNAMIC", "(", "C", "Input", "Extra", "Time", "Dlg", ",", "ĠC", "Dialog", ")", "Ċ", "Ċ", "C", "Input", "Extra", "Time", "Dlg", "::", "C", "Input", "Extra", "Time", "Dlg", "(", "C", "Wnd", "*", "ĠpParent", "Ġ/*=", "NULL", "*/)", "Ċ", "ĉ", ":", "ĠC", "Dialog", "(", "C", "Input", "Extra", "Time", "Dlg", "::", "ID", "D", ",", "ĠpParent", ")", "Ċ", "ĉ", ",", "Ġm", "_", "str", "Time", "Extra", "(_", "T", "(\"", "00", ":", "00", ":", "00", ",", "000", "\"))", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "C", "Input", "Extra", "Time", "Dlg", "::~", "C", "Input", "Extra", "Time", "Dlg", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Input", "Extra", "Time", "Dlg", "::", "Do", "Data", "Exchange", "(", "CData", "Exchange", "*", "Ġp", "DX", ")", "Ċ", "{", "Ċ", "ĉ", "CD", "ialog", "::", "Do", "Data", "Exchange", "(", "pDX", ");", "Ċ", "ĉ", "DDX", "_", "Control", "(", "pDX", ",", "ĠIDC", "_", "EDIT", "_", "TIME", "_", "OFFSET", ",", "Ġm", "_", "Time", "Extra", ");", "Ċ", "ĉ", "DDX", "_", "Text", "(", "pDX", ",", "ĠIDC", "_", "EDIT", "_", "TIME", "_", "OFFSET", ",", "Ġm", "_", "str", "Time", "Extra", ");", "Ċ", "}", "Ċ", "Ċ", "BEGIN", "_", "MESSAGE", "_", "MAP", "(", "C", "Input", "Extra", "Time", "Dlg", ",", "ĠC", "Dialog", ")", "Ċ", "END", "_", "MESSAGE", "_", "MAP", "()", "Ċ", "Ċ", "//", "ĠC", "Input", "Extra", "Time", "Dlg", "Ġmessage", "Ġhandlers", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::495", "code": "#include<iostream>\nusing namespace std;\nint main()\n{\n\tint a,d,x[20],y[20],a1,temp,i,j;\n\twhile(1)\n\t{\n\t\ta1=20000;\n\t\tcin>>a>>d;\n\t\tif(a==0 & d==0)\n\t\t\tbreak;\n\t\tfor(i=0;i<a;i++)\n\t\t{\n\t\t\tcin>>x[i];\n\t\t\tif(x[i]<a1)\n\t\t\t\ta1=x[i];\n\t\t}\n\t\tfor(i=0;i<d;i++)\n\t\t{\n\t\t\tcin>>y[i];\n\t\t}\n\t\tfor(i=0;i<2;i++)\n\t\t{\n\t\t\tfor(j=i+1;j<d;j++)\n\t\t\t{\n\t\t\t\tif(y[i]>y[j])\n\t\t\t\t{\n\t\t\t\t\ttemp=y[i];\n\t\t\t\t\ty[i]=y[j];\n\t\t\t\t\ty[j]=temp;\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(a1>=y[1] || (a1>=y[0] && a1>=y[1]))\n\t\t{\n\t\t\tcout<<\"N\\n\";\n\t\t}\n\t\telse\n\t\t\tcout<<\"Y\\n\";\n\t}\n}\n\n", "code_tokens": ["Ġ#", "include", "<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġa", ",", "d", ",", "x", "[", "20", "],", "y", "[", "20", "],", "a", "1", ",", "temp", ",", "i", ",", "j", ";", "Ċ", "ĉ", "while", "(", "1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "a", "1", "=", "20000", ";", "Ċ", "ĉ", "ĉ", "cin", ">>", "a", ">>", "d", ";", "Ċ", "ĉ", "ĉ", "if", "(", "a", "==", "0", "Ġ&", "Ġd", "==", "0", ")", "Ċ", "ĉĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "a", ";", "i", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "cin", ">>", "x", "[", "i", "];", "Ċ", "ĉĉ", "ĉ", "if", "(", "x", "[", "i", "]<", "a", "1", ")", "Ċ", "ĉĉĉ", "ĉ", "a", "1", "=", "x", "[", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "d", ";", "i", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "cin", ">>", "y", "[", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "2", ";", "i", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "for", "(", "j", "=", "i", "+", "1", ";", "j", "<", "d", ";", "j", "++)", "Ċ", "ĉĉ", "ĉ", "{", "Ċ", "ĉĉĉ", "ĉ", "if", "(", "y", "[", "i", "]>", "y", "[", "j", "])", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉ", "ĉ", "temp", "=", "y", "[", "i", "];", "Ċ", "ĉĉĉĉ", "ĉ", "y", "[", "i", "]=", "y", "[", "j", "];", "Ċ", "ĉĉĉĉ", "ĉ", "y", "[", "j", "]=", "temp", ";", "ĉĊ", "ĉĉĉ", "ĉ", "}", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "if", "(", "a", "1", ">=", "y", "[", "1", "]", "Ġ||", "Ġ(", "a", "1", ">=", "y", "[", "0", "]", "Ġ&&", "Ġa", "1", ">=", "y", "[", "1", "]))", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "cout", "<<\"", "N", "\\", "n", "\";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉĉ", "ĉ", "cout", "<<\"", "Y", "\\", "n", "\";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::496", "code": "#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <set>\nusing namespace std;\n\n#define all(t) begin(t), end(t)\n#define sp << \" \" <<\n\nlong gcd(long m, long n) {\n  while (m != 0) {\n    long k = n%m;\n    n=m;\n    m=k;\n  }\n  return n;\n}\n\nbool is_square(long S) {\n  long sqr = sqrt(S);\n  return sqr*sqr == S;\n}\n\nint main() {\n  long sum{0};\n  while (cin) {\n    long n;\n    cin >> n;\n    if (cin) {if (is_square(n)) {cout << n << endl;sum += n;}}\n  }\n  cout << endl << sum << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "define", "Ġall", "(", "t", ")", "Ġbegin", "(", "t", "),", "Ġend", "(", "t", ")", "Ċ", "#", "define", "Ġsp", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ċ", "Ċ", "long", "Ġgcd", "(", "long", "Ġm", ",", "Ġlong", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġwhile", "Ġ(", "m", "Ġ!=", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġlong", "Ġk", "Ġ=", "Ġn", "%", "m", ";", "Ċ", "ĠĠĠ", "Ġn", "=", "m", ";", "Ċ", "ĠĠĠ", "Ġm", "=", "k", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġn", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "Ġis", "_", "square", "(", "long", "ĠS", ")", "Ġ{", "Ċ", "Ġ", "Ġlong", "Ġsq", "r", "Ġ=", "Ġsqrt", "(", "S", ");", "Ċ", "Ġ", "Ġreturn", "Ġsq", "r", "*", "sqr", "Ġ==", "ĠS", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġlong", "Ġsum", "{", "0", "};", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cin", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġlong", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "cin", ")", "Ġ{", "if", "Ġ(", "is", "_", "square", "(", "n", "))", "Ġ{", "cout", "Ġ<<", "Ġn", "Ġ<<", "Ġendl", ";", "sum", "Ġ+=", "Ġn", ";}}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġendl", "Ġ<<", "Ġsum", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::497", "code": "//========= Copyright © 1996-2002, Valve LLC, All rights reserved. ============\n//\n// Purpose: \n//\n// $NoKeywords: $\n//=============================================================================\n#include \"cbase.h\"\n#include \"c_order_assist.h\"\n\n\nIMPLEMENT_CLIENTCLASS_DT( C_OrderAssist, DT_OrderAssist, COrderAssist )\nEND_RECV_TABLE()\n\n\nvoid C_OrderAssist::GetDescription( char *pDest, int bufferSize )\n{\n\tchar targetDesc[512];\n\tGetTargetDescription( targetDesc, sizeof( targetDesc ) );\n\n\tQ_snprintf( pDest, bufferSize, \"Assist %s\", targetDesc );\n}\n\n", "code_tokens": ["Ġ//", "=========", "ĠCopyright", "ĠÂ", "©", "Ġ199", "6", "-", "2002", ",", "ĠVal", "ve", "ĠLLC", ",", "ĠAll", "Ġrights", "Ġreserved", ".", "Ġ=", "===========", "Ċ", "//", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ċ", "//", "Ċ", "//", "Ġ$", "No", "Keywords", ":", "Ġ$", "Ċ", "//================================================================", "=============", "Ċ", "#", "include", "Ġ\"", "c", "base", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "c", "_", "order", "_", "ass", "ist", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "IMPLEMENT", "_", "CLIENT", "CLASS", "_", "DT", "(", "ĠC", "_", "Order", "Ass", "ist", ",", "ĠDT", "_", "Order", "Ass", "ist", ",", "ĠC", "Order", "Ass", "ist", "Ġ)", "Ċ", "END", "_", "RECV", "_", "TABLE", "()", "Ċ", "Ċ", "Ċ", "void", "ĠC", "_", "Order", "Ass", "ist", "::", "Get", "Description", "(", "Ġchar", "Ġ*", "pDest", ",", "Ġint", "ĠbufferSize", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "char", "Ġtarget", "Desc", "[", "512", "];", "Ċ", "ĉ", "GetTarget", "Description", "(", "Ġtarget", "Desc", ",", "Ġsizeof", "(", "Ġtarget", "Desc", "Ġ)", "Ġ);", "Ċ", "Ċ", "ĉ", "Q", "_", "snprintf", "(", "Ġp", "Dest", ",", "ĠbufferSize", ",", "Ġ\"", "Ass", "ist", "Ġ%", "s", "\",", "Ġtarget", "Desc", "Ġ);", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::498", "code": "#include \"voro++_2d.hh\"\nusing namespace voro;\n\n// This function returns a random floating point number between 0 and 1\ndouble rnd() {return double(rand())/RAND_MAX;}\n\nint main() {\n\tdouble x,y;\n\tvoronoicell_nonconvex_2d v;\n\n\t// Initialize the Voronoi cell to be a cube of side length 2, centered\n\t// on the origin\n\tv.init_nonconvex(-1,0.8,-1,0.4,4,5,5,4);\n\tv.draw_gnuplot(0,0,\"nonconvex_cell.gnu\");\n\tv.plane(0.3,0);\n\tv.plane(0.4,0);\n\n\t// Cut the cell by 100 random planes which are all a distance 1 away\n\t// from the origin, to make an approximation to a sphere\n\t/*for(int i=0;i<100;i++) {\n\t\tx=2*rnd()-1;\n\t\ty=2*rnd()-1;\n\t\trsq=x*x+y*y;\n\t\tif(rsq>0.01&&rsq<1) {\n\t\t\tr=1/sqrt(rsq);x*=r;y*=r;\n\t\t\tv.plane(x,y,1);\n\t\t}\n\t}*/\n\n\t// Print out several statistics about the computed cell\n\tv.centroid(x,y);\n\tprintf(\"Perimeter is %g\\n\"\n\t       \"Area is %g\\n\"\n       \t       \"Centroid is (%g,%g)\\n\",v.perimeter(),v.area(),x,y);\n\n\t// Output the Voronoi cell to a file, in the gnuplot format\n\tv.draw_gnuplot(0,0,\"nonconvex_cell2.gnu\");\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "vor", "o", "++", "_", "2", "d", ".", "hh", "\"", "Ċ", "using", "Ġnamespace", "Ġv", "oro", ";", "Ċ", "Ċ", "//", "ĠThis", "Ġfunction", "Ġreturns", "Ġa", "Ġrandom", "Ġfloating", "Ġpoint", "Ġnumber", "Ġbetween", "Ġ0", "Ġand", "Ġ1", "Ċ", "double", "Ġrnd", "()", "Ġ{", "return", "Ġdouble", "(", "rand", "())", "/", "RAND", "_", "MAX", ";}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "double", "Ġx", ",", "y", ";", "Ċ", "ĉ", "vor", "on", "o", "ice", "ll", "_", "non", "convex", "_", "2", "d", "Ġv", ";", "Ċ", "Ċ", "ĉ", "//", "ĠInitialize", "Ġthe", "ĠV", "oronoi", "Ġcell", "Ġto", "Ġbe", "Ġa", "Ġcube", "Ġof", "Ġside", "Ġlength", "Ġ2", ",", "Ġcentered", "Ċ", "ĉ", "//", "Ġon", "Ġthe", "Ġorigin", "Ċ", "ĉ", "v", ".", "init", "_", "non", "convex", "(-", "1", ",", "0", ".", "8", ",-", "1", ",", "0", ".", "4", ",", "4", ",", "5", ",", "5", ",", "4", ");", "Ċ", "ĉ", "v", ".", "draw", "_", "gn", "uplot", "(", "0", ",", "0", ",\"", "non", "convex", "_", "cell", ".", "gnu", "\");", "Ċ", "ĉ", "v", ".", "plane", "(", "0", ".", "3", ",", "0", ");", "Ċ", "ĉ", "v", ".", "plane", "(", "0", ".", "4", ",", "0", ");", "Ċ", "Ċ", "ĉ", "//", "ĠCut", "Ġthe", "Ġcell", "Ġby", "Ġ100", "Ġrandom", "Ġplanes", "Ġwhich", "Ġare", "Ġall", "Ġa", "Ġdistance", "Ġ1", "Ġaway", "Ċ", "ĉ", "//", "Ġfrom", "Ġthe", "Ġorigin", ",", "Ġto", "Ġmake", "Ġan", "Ġapproximation", "Ġto", "Ġa", "Ġsphere", "Ċ", "ĉ", "/*", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "100", ";", "i", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "x", "=", "2", "*", "rnd", "()-", "1", ";", "Ċ", "ĉ", "ĉ", "y", "=", "2", "*", "rnd", "()-", "1", ";", "Ċ", "ĉ", "ĉ", "rs", "q", "=", "x", "*", "x", "+", "y", "*", "y", ";", "Ċ", "ĉ", "ĉ", "if", "(", "rs", "q", ">", "0", ".", "01", "&&", "rs", "q", "<", "1", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "r", "=", "1", "/", "sqrt", "(", "rs", "q", ");", "x", "*=", "r", ";", "y", "*=", "r", ";", "Ċ", "ĉĉ", "ĉ", "v", ".", "plane", "(", "x", ",", "y", ",", "1", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}*/", "Ċ", "Ċ", "ĉ", "//", "ĠPrint", "Ġout", "Ġseveral", "Ġstatistics", "Ġabout", "Ġthe", "Ġcomputed", "Ġcell", "Ċ", "ĉ", "v", ".", "centroid", "(", "x", ",", "y", ");", "Ċ", "ĉ", "printf", "(\"", "Per", "imeter", "Ġis", "Ġ%", "g", "\\", "n", "\"", "Ċ", "ĉĠĠĠĠĠĠ", "Ġ\"", "Area", "Ġis", "Ġ%", "g", "\\", "n", "\"", "Ċ", "ĠĠĠĠĠĠĠ", "ĉĠĠĠĠĠĠ", "Ġ\"", "Cent", "roid", "Ġis", "Ġ(%", "g", ",%", "g", ")\\", "n", "\",", "v", ".", "perim", "eter", "(),", "v", ".", "area", "(),", "x", ",", "y", ");", "Ċ", "Ċ", "ĉ", "//", "ĠOutput", "Ġthe", "ĠV", "oronoi", "Ġcell", "Ġto", "Ġa", "Ġfile", ",", "Ġin", "Ġthe", "Ġgn", "uplot", "Ġformat", "Ċ", "ĉ", "v", ".", "draw", "_", "gn", "uplot", "(", "0", ",", "0", ",\"", "non", "convex", "_", "cell", "2", ".", "gnu", "\");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::499", "code": "/* TimerEvent.cc -*- c++ -*-\n * Copyright (c) 2009 Ross Biro\n *\n * An event that posts itself after a predetermined about of time.\n * Similiar to Timer, but Timer doesn't use events since the\n * EventQueue timeouts are built on it.\n */\n\n/*\n *   This program is free software: you can redistribute it and/or\n *   modify it under the terms of the GNU General Public License as\n *   published by the Free Software Foundation, version 3 of the\n *   License.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *   General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License\n *   along with this program.  If not, see\n *   <http://www.gnu.org/licenses/>.\n *\n */\n\n#include \"textus/event/TimerEvent.h\"\n\nnamespace textus { namespace event {\n\nvoid TimerEvent::timeOut()\n{\n  if (!first_time_out) {\n    Event::timeOut();\n    return;\n  }\n  first_time_out = false;\n  post();\n}\n\n}} // namespace\n", "code_tokens": ["Ġ/*", "ĠTimer", "Event", ".", "cc", "Ġ-", "*-", "Ġc", "++", "Ġ-", "*-", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "ĠRo", "ss", "ĠB", "iro", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠAn", "Ġevent", "Ġthat", "Ġposts", "Ġitself", "Ġafter", "Ġa", "Ġpre", "determin", "ed", "Ġabout", "Ġof", "Ġtime", ".", "Ċ", "Ġ*", "ĠSim", "ili", "ar", "Ġto", "ĠTimer", ",", "Ġbut", "ĠTimer", "Ġdoesn", "'t", "Ġuse", "Ġevents", "Ġsince", "Ġthe", "Ċ", "Ġ*", "ĠEvent", "Queue", "Ġtimeouts", "Ġare", "Ġbuilt", "Ġon", "Ġit", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "ĠĠ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ċ", "Ġ*", "ĠĠ", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġversion", "Ġ3", "Ġof", "Ġthe", "Ċ", "Ġ*", "ĠĠ", "ĠLicense", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ*", "ĠĠ", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "ĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ċ", "Ġ*", "ĠĠ", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "text", "us", "/", "event", "/", "Timer", "Event", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġtext", "us", "Ġ{", "Ġnamespace", "Ġevent", "Ġ{", "Ċ", "Ċ", "void", "ĠTimer", "Event", "::", "time", "Out", "()", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(!", "first", "_", "time", "_", "out", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠEvent", "::", "time", "Out", "();", "Ċ", "ĠĠĠ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġfirst", "_", "time", "_", "out", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġpost", "();", "Ċ", "}", "Ċ", "Ċ", "}}", "Ġ//", "Ġnamespace", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::500", "code": "#include \"buttonpress.h\"\n#include <iostream>\n\nvoid button::shutdown()\n{\n    std::cout << \"Shutdown\" << std::endl;\n}\n\nvoid button::pause48h()\n{\n    std::cout << \"Pause\" << std::endl;\n}\n\nvoid button::masterButton()\n{\n    std::cout << \"Master\" << std::endl;\n}\n\nvoid button::button1Pressed()\n{\n    std::cout << \"Button 1\" << std::endl;\n}\n\nvoid button::button2Pressed()\n{\n    std::cout << \"Button 2\" << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "button", "press", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "void", "Ġbutton", "::", "shutdown", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Shutdown", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbutton", "::", "pause", "48", "h", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Pause", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbutton", "::", "master", "Button", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Master", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbutton", "::", "button", "1", "Pressed", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Button", "Ġ1", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbutton", "::", "button", "2", "Pressed", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Button", "Ġ2", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::501", "code": "#include \"animation_manager.hpp\"\n\nusing namespace engine;\n\nAnimationManager AnimationManager::instance;\nvoid AnimationManager::add_animation_quad(AnimationQuad* newQuad){\n    animationQuads.push_back(newQuad);\n}\n\nvoid AnimationManager::add_collider(SDL_Rect* newQuad){\n    colliderRects.push_back(newQuad);\n}\n\nvoid AnimationManager::clearAnimationQuads(){\n    animationQuads.clear();\n}\n\nvoid AnimationManager::draw_quads(){\n        //ORDER QUADS BY Y;\n    std::sort(animationQuads.begin(), animationQuads.end(),[](const AnimationQuad* lhs, const AnimationQuad* rhs){ return lhs->y < rhs->y; });\n    for(AnimationQuad * quad : animationQuads) {\n        SDL_RenderCopy(WindowManager::getGameCanvas(), quad->getTexture(), quad->getClipRect(), quad->getRenderQuad());\n    }\n    draw_colliders();\n    clearAnimationQuads();\n}\n\nvoid AnimationManager::draw_colliders(){\n    SDL_SetRenderDrawColor(WindowManager::getGameCanvas(), 0, 0, 0, 255);\n    for(SDL_Rect * quad : colliderRects) {\n        SDL_RenderDrawRect(WindowManager::getGameCanvas(), quad);\n    }\n    colliderRects.clear();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "animation", "_", "manager", ".", "hpp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġengine", ";", "Ċ", "Ċ", "Animation", "Manager", "ĠAnimation", "Manager", "::", "instance", ";", "Ċ", "void", "ĠAnimation", "Manager", "::", "add", "_", "animation", "_", "quad", "(", "Animation", "Quad", "*", "Ġnew", "Quad", "){", "Ċ", "ĠĠĠ", "Ġanimation", "Quads", ".", "push", "_", "back", "(", "new", "Quad", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAnimation", "Manager", "::", "add", "_", "coll", "ider", "(", "SDL", "_", "Rect", "*", "Ġnew", "Quad", "){", "Ċ", "ĠĠĠ", "Ġcollider", "Rects", ".", "push", "_", "back", "(", "new", "Quad", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAnimation", "Manager", "::", "clear", "Animation", "Quads", "(){", "Ċ", "ĠĠĠ", "Ġanimation", "Quads", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAnimation", "Manager", "::", "draw", "_", "qu", "ads", "(){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ORDER", "ĠQU", "AD", "S", "ĠBY", "ĠY", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "sort", "(", "animation", "Quads", ".", "begin", "(),", "Ġanimation", "Quads", ".", "end", "(),", "[]", "(", "const", "ĠAnimation", "Quad", "*", "Ġlhs", ",", "Ġconst", "ĠAnimation", "Quad", "*", "Ġrhs", "){", "Ġreturn", "Ġlhs", "->", "y", "Ġ<", "Ġrhs", "->", "y", ";", "Ġ});", "Ċ", "ĠĠĠ", "Ġfor", "(", "Animation", "Quad", "Ġ*", "Ġquad", "Ġ:", "Ġanimation", "Quads", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSDL", "_", "Render", "Copy", "(", "WindowManager", "::", "get", "Game", "Canvas", "(),", "Ġquad", "->", "getTexture", "(),", "Ġquad", "->", "get", "Clip", "Rect", "(),", "Ġquad", "->", "get", "Render", "Quad", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġdraw", "_", "coll", "iders", "();", "Ċ", "ĠĠĠ", "Ġclear", "Animation", "Quads", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAnimation", "Manager", "::", "draw", "_", "coll", "iders", "(){", "Ċ", "ĠĠĠ", "ĠSDL", "_", "Set", "Render", "Draw", "Color", "(", "WindowManager", "::", "get", "Game", "Canvas", "(),", "Ġ0", ",", "Ġ0", ",", "Ġ0", ",", "Ġ255", ");", "Ċ", "ĠĠĠ", "Ġfor", "(", "SDL", "_", "Rect", "Ġ*", "Ġquad", "Ġ:", "Ġcollider", "Rects", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSDL", "_", "Render", "Draw", "Rect", "(", "WindowManager", "::", "get", "Game", "Canvas", "(),", "Ġquad", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcollider", "Rects", ".", "clear", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::502", "code": "#ifndef METASHELL_PRAGMA_HELP_HPP\n#define METASHELL_PRAGMA_HELP_HPP\n\n// Metashell - Interactive C++ template metaprogramming shell\n// Copyright (C) 2014, Abel Sinkovics (abel@sinkovics.hu)\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#include <metashell/iface/pragma_handler.hpp>\n\nnamespace metashell\n{\n  namespace pragma\n  {\n    class help : public iface::pragma_handler\n    {\n    public:\n      std::string arguments() const override;\n      std::string description() const override;\n\n      void run(const data::command::iterator& name_begin_,\n               const data::command::iterator& name_end_,\n               const data::command::iterator& args_begin_,\n               const data::command::iterator& args_end_,\n               iface::main_shell& shell_,\n               iface::displayer& displayer_) const override;\n\n      data::code_completion code_complete(data::command::const_iterator,\n                                          data::command::const_iterator,\n                                          iface::main_shell&) const override;\n    };\n  }\n}\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠMET", "AS", "HE", "LL", "_", "PR", "AG", "MA", "_", "HELP", "_", "HP", "P", "Ċ", "#", "define", "ĠMET", "AS", "HE", "LL", "_", "PR", "AG", "MA", "_", "HELP", "_", "HP", "P", "Ċ", "Ċ", "//", "ĠMet", "ash", "ell", "Ġ-", "ĠInter", "active", "ĠC", "++", "Ġtemplate", "Ġmet", "ap", "rogram", "ming", "Ġshell", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", ",", "ĠAb", "el", "ĠSink", "ov", "ics", "Ġ(", "abel", "@", "sink", "ov", "ics", ".", "hu", ")", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "met", "ash", "ell", "/", "iface", "/", "pragma", "_", "handler", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġmet", "ash", "ell", "Ċ", "{", "Ċ", "Ġ", "Ġnamespace", "Ġpragma", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġclass", "Ġhelp", "Ġ:", "Ġpublic", "Ġiface", "::", "pragma", "_", "handler", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "string", "Ġarguments", "()", "Ġconst", "Ġoverride", ";", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "string", "Ġdescription", "()", "Ġconst", "Ġoverride", ";", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġvoid", "Ġrun", "(", "const", "Ġdata", "::", "command", "::", "iterator", "&", "Ġname", "_", "begin", "_,", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġdata", "::", "command", "::", "iterator", "&", "Ġname", "_", "end", "_,", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġdata", "::", "command", "::", "iterator", "&", "Ġargs", "_", "begin", "_,", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġdata", "::", "command", "::", "iterator", "&", "Ġargs", "_", "end", "_,", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġiface", "::", "main", "_", "shell", "&", "Ġshell", "_,", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġiface", "::", "disp", "layer", "&", "Ġdisp", "layer", "_)", "Ġconst", "Ġoverride", ";", "Ċ", "Ċ", "ĠĠĠĠĠ", "Ġdata", "::", "code", "_", "completion", "Ġcode", "_", "complete", "(", "data", "::", "command", "::", "const", "_", "iterator", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdata", "::", "command", "::", "const", "_", "iterator", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġiface", "::", "main", "_", "shell", "&)", "Ġconst", "Ġoverride", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::503", "code": "#include \"log.h\"\n\n#include <iostream>\n\nusing WhatsAcppi::Util::Log;\n\nusing std::cout;\nusing std::endl;\n\nLog::LogMsgType Log::logLevel = CriticalMsg;\n\nLog::Log(Log::LogMsgType type) : level(type) {\n}\n\nLog::~Log(){\n\tcout << this->ss.str() << endl;\n}\n\nvoid Log::setLogLevel(Log::LogMsgType level){\n\tLog::logLevel = level;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "log", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "ĠWh", "ats", "Ac", "ppi", "::", "Util", "::", "Log", ";", "Ċ", "Ċ", "using", "Ġstd", "::", "cout", ";", "Ċ", "using", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "Log", "::", "Log", "MsgType", "ĠLog", "::", "logLevel", "Ġ=", "ĠCritical", "Msg", ";", "Ċ", "Ċ", "Log", "::", "Log", "(", "Log", "::", "Log", "MsgType", "Ġtype", ")", "Ġ:", "Ġlevel", "(", "type", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Log", "::~", "Log", "(){", "Ċ", "ĉ", "cout", "Ġ<<", "Ġthis", "->", "ss", ".", "str", "()", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLog", "::", "set", "LogLevel", "(", "Log", "::", "Log", "MsgType", "Ġlevel", "){", "Ċ", "ĉ", "Log", "::", "logLevel", "Ġ=", "Ġlevel", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::504", "code": "#ifndef SELECT_ALIEN_HPP\n#define SELECT_ALIEN_HPP\n\n#include \"animation.hpp\"\n#include \"game_object.hpp\"\n#include \"text.hpp\"\n\nusing namespace engine;\n\nclass Header: public GameObject{\npublic:\n    Header(double positionX, double positionY, int maxPapers, int stageNumber);\n    ~Header();\n    void update(double timeElapsed);\n    void draw();\n    void init();\n    void setAlienSelect(int select);\n    Animation * getAnimation();\n    void updatePaperQuantity(int newValue);\nprivate:\n    Animation* animator;\n    Animation* paper_icon;\n    Text* paper_text;\n    Text* stage_text;\n    int total_papers; //declareting variables total papers\n    int alien_select; // declareting variables alien selection\n    Text* convertToText(int newValue);\n    void verifySelect();\n\n};\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠSELECT", "_", "ALI", "EN", "_", "HP", "P", "Ċ", "#", "define", "ĠSELECT", "_", "ALI", "EN", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "animation", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "game", "_", "object", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "text", ".", "hpp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġengine", ";", "Ċ", "Ċ", "class", "ĠHeader", ":", "Ġpublic", "ĠGameObject", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠHeader", "(", "double", "Ġposition", "X", ",", "Ġdouble", "Ġposition", "Y", ",", "Ġint", "Ġmax", "P", "ap", "ers", ",", "Ġint", "Ġstage", "Number", ");", "Ċ", "ĠĠĠ", "Ġ~", "Header", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġupdate", "(", "double", "Ġtime", "Elapsed", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġdraw", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġinit", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "Alien", "Select", "(", "int", "Ġselect", ");", "Ċ", "ĠĠĠ", "ĠAnimation", "Ġ*", "Ġget", "Animation", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġupdate", "Paper", "Quantity", "(", "int", "ĠnewValue", ");", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "ĠAnimation", "*", "Ġanimator", ";", "Ċ", "ĠĠĠ", "ĠAnimation", "*", "Ġpaper", "_", "icon", ";", "Ċ", "ĠĠĠ", "ĠText", "*", "Ġpaper", "_", "text", ";", "Ċ", "ĠĠĠ", "ĠText", "*", "Ġstage", "_", "text", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġtotal", "_", "pap", "ers", ";", "Ġ//", "dec", "la", "ret", "ing", "Ġvariables", "Ġtotal", "Ġp", "ap", "ers", "Ċ", "ĠĠĠ", "Ġint", "Ġali", "en", "_", "select", ";", "Ġ//", "Ġdec", "la", "ret", "ing", "Ġvariables", "Ġali", "en", "Ġselection", "Ċ", "ĠĠĠ", "ĠText", "*", "ĠconvertTo", "Text", "(", "int", "ĠnewValue", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġverify", "Select", "();", "Ċ", "Ċ", "};", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::505", "code": "#include <ui_animationControls.hh>\n\n#if QT_VERSION >= 0x050000 \n  #include <QtWidgets>\n#else\n  #include <QtGui>\n#endif\n\n\nclass AnimationToolboxWidget : public QWidget, public Ui::AnimationControls\n{\n  Q_OBJECT\n\n  public:\n    AnimationToolboxWidget(QWidget *parent = 0);\n};\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "ui", "_", "animation", "Controls", ".", "hh", ">", "Ċ", "Ċ", "#", "if", "ĠQT", "_", "VERSION", "Ġ>=", "Ġ0", "x", "05", "0000", "ĠĊ", "Ġ", "Ġ#", "include", "Ġ<", "Qt", "Widgets", ">", "Ċ", "#", "else", "Ċ", "Ġ", "Ġ#", "include", "Ġ<", "Qt", "Gui", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "Ċ", "class", "ĠAnimation", "Toolbox", "Widget", "Ġ:", "Ġpublic", "ĠQWidget", ",", "Ġpublic", "ĠUi", "::", "Animation", "Controls", "Ċ", "{", "Ċ", "Ġ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "ĠAnimation", "Toolbox", "Widget", "(", "QWidget", "Ġ*", "parent", "Ġ=", "Ġ0", ");", "Ċ", "};", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::506", "code": "#include \"Utility.hpp\"\r\nstd::string prefix;\r\ntime_t rawtime ;\r\nstd::string return_file_name(const std::string file_name)\r\n{\r\n    std::string result_file_name;\r\n    if(prefix.length()>0)\r\n        result_file_name=prefix+\".\"+file_name;\r\n    else\r\n        result_file_name=file_name;\r\n    return   result_file_name;\r\n\r\n}\r\nvoid delete_created_file(const std::string file_name)\r\n{\r\n     \r\n    if( remove( file_name.c_str() ) != 0 )\r\n     std::cerr<<\"--- error deleting the file. \"<<file_name<<std::endl;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Utility", ".", "hpp", "\"", "č", "Ċ", "std", "::", "string", "Ġprefix", ";", "č", "Ċ", "time", "_", "t", "Ġraw", "time", "Ġ;", "č", "Ċ", "std", "::", "string", "Ġreturn", "_", "file", "_", "name", "(", "const", "Ġstd", "::", "string", "Ġfile", "_", "name", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġresult", "_", "file", "_", "name", ";", "č", "Ċ", "ĠĠĠ", "Ġif", "(", "prefix", ".", "length", "()>", "0", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "_", "file", "_", "name", "=", "prefix", "+\".", "\"+", "file", "_", "name", ";", "č", "Ċ", "ĠĠĠ", "Ġelse", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "_", "file", "_", "name", "=", "file", "_", "name", ";", "č", "Ċ", "ĠĠĠ", "Ġreturn", "ĠĠ", "Ġresult", "_", "file", "_", "name", ";", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "void", "Ġdelete", "_", "created", "_", "file", "(", "const", "Ġstd", "::", "string", "Ġfile", "_", "name", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠĠĠ", "č", "Ċ", "ĠĠĠ", "Ġif", "(", "Ġremove", "(", "Ġfile", "_", "name", ".", "c", "_", "str", "()", "Ġ)", "Ġ!=", "Ġ0", "Ġ)", "č", "Ċ", "ĠĠĠĠ", "Ġstd", "::", "cerr", "<<\"", "---", "Ġerror", "Ġdeleting", "Ġthe", "Ġfile", ".", "Ġ\"<<", "file", "_", "name", "<<", "std", "::", "endl", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::507", "code": "//  (c) Copyright Fernando Luis Cacciola Carballal 2000-2004\n//  Use, modification, and distribution is subject to the Boost Software\n//  License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at\n//  http://www.boost.org/LICENSE_1_0.txt)\n\n//  See library home page at http://www.boost.org/libs/numeric/conversion\n//\n// Contact the author at: fernando_cacciola@hotmail.com\n// \n#ifndef BOOST_NUMERIC_CONVERSION_CONVERSION_TRAITS_FLC_12NOV2002_HPP\n#define BOOST_NUMERIC_CONVERSION_CONVERSION_TRAITS_FLC_12NOV2002_HPP\n\n#include \"boost/numeric/conversion/detail/conversion_traits.hpp\"\n#include \"boost/detail/workaround.hpp\"\n#include \"boost/config.hpp\"\n\nnamespace abt_boost{} namespace boost = abt_boost; namespace abt_boost{ namespace numeric\n{\n\ntemplate<class T, class S>\nstruct conversion_traits \n    : convdetail::get_conversion_traits<T,S>::type \n{\n#if BOOST_WORKAROUND(BOOST_MSVC, <= 1300)\n    typedef typename convdetail::get_conversion_traits<T,S>::type base_;\n    typedef typename base_::target_type     target_type;\n    typedef typename base_::source_type     source_type;\n    typedef typename base_::result_type     result_type;\n    typedef typename base_::argument_type   argument_type;\n#endif\n} ;\n\n} } // namespace abt_boost::numeric\n\n#endif\n//\n///////////////////////////////////////////////////////////////////////////////////////////////\n\n\n", "code_tokens": ["Ġ//", "Ġ", "Ġ(", "c", ")", "ĠCopyright", "ĠF", "ern", "ando", "ĠL", "uis", "ĠC", "ac", "ci", "ola", "ĠC", "arball", "al", "Ġ2000", "-", "2004", "Ċ", "//", "Ġ", "ĠUse", ",", "Ġmodification", ",", "Ġand", "Ġdistribution", "Ġis", "Ġsubject", "Ġto", "Ġthe", "ĠBo", "ost", "ĠSoftware", "Ċ", "//", "Ġ", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "//", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "//", "Ġ", "ĠSee", "Ġlibrary", "Ġhome", "Ġpage", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "libs", "/", "numeric", "/", "conversion", "Ċ", "//", "Ċ", "//", "ĠContact", "Ġthe", "Ġauthor", "Ġat", ":", "Ġf", "ern", "ando", "_", "cac", "ci", "ola", "@", "hot", "mail", ".", "com", "Ċ", "//", "Ġ", "Ċ", "#", "ifndef", "ĠBOOST", "_", "NUMERIC", "_", "CONVERSION", "_", "CONVERSION", "_", "TRA", "ITS", "_", "FL", "C", "_", "12", "NO", "V", "2002", "_", "HP", "P", "Ċ", "#", "define", "ĠBOOST", "_", "NUMERIC", "_", "CONVERSION", "_", "CONVERSION", "_", "TRA", "ITS", "_", "FL", "C", "_", "12", "NO", "V", "2002", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "boost", "/", "numeric", "/", "conversion", "/", "detail", "/", "conversion", "_", "traits", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "boost", "/", "detail", "/", "workaround", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "boost", "/", "config", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġa", "bt", "_", "boost", "{}", "Ġnamespace", "Ġboost", "Ġ=", "Ġa", "bt", "_", "boost", ";", "Ġnamespace", "Ġa", "bt", "_", "boost", "{", "Ġnamespace", "Ġnumeric", "Ċ", "{", "Ċ", "Ċ", "template", "<", "class", "ĠT", ",", "Ġclass", "ĠS", ">", "Ċ", "struct", "Ġconversion", "_", "traits", "ĠĊ", "ĠĠĠ", "Ġ:", "Ġconv", "detail", "::", "get", "_", "conversion", "_", "traits", "<", "T", ",", "S", ">::", "type", "Ġ", "Ċ", "{", "Ċ", "#", "if", "ĠBOOST", "_", "WORK", "AR", "O", "UND", "(", "BOOST", "_", "MS", "VC", ",", "Ġ<=", "Ġ13", "00", ")", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġtypename", "Ġconv", "detail", "::", "get", "_", "conversion", "_", "traits", "<", "T", ",", "S", ">::", "type", "Ġbase", "_;", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġtypename", "Ġbase", "_", "::", "target", "_", "type", "ĠĠĠĠ", "Ġtarget", "_", "type", ";", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġtypename", "Ġbase", "_", "::", "source", "_", "type", "ĠĠĠĠ", "Ġsource", "_", "type", ";", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġtypename", "Ġbase", "_", "::", "result", "_", "type", "ĠĠĠĠ", "Ġresult", "_", "type", ";", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġtypename", "Ġbase", "_", "::", "argument", "_", "type", "ĠĠ", "Ġargument", "_", "type", ";", "Ċ", "#", "endif", "Ċ", "}", "Ġ;", "Ċ", "Ċ", "}", "Ġ}", "Ġ//", "Ġnamespace", "Ġa", "bt", "_", "boost", "::", "numeric", "Ċ", "Ċ", "#", "endif", "Ċ", "//", "Ċ", "////////////////////////////////////////////////////////////////", "////////////////////////", "///////", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::508", "code": "\n#include \"t05.h\"\n#include <iostream>\n\nint main(int argc, char* argv[]) \n{\n   RibbonTrail a;\n\n   std::cout << \"done\" << std::endl;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "t", "05", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ġ", "Ċ", "{", "Ċ", "ĠĠ", "ĠR", "i", "bbon", "Trail", "Ġa", ";", "Ċ", "Ċ", "ĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "done", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::509", "code": "\r\n#include \"PreCompiled.h\"\r\n\r\n#include \"Mod/Assembly/App/ConstraintGroup.h\"\r\n#include \"Mod/Assembly/App/ConstraintPy.h\"\r\n\r\n// inclusion of the generated files (generated out of ConstraintGroupPy.xml)\r\n#include \"ConstraintGroupPy.h\"\r\n#include \"ConstraintGroupPy.cpp\"\r\n\r\nusing namespace Assembly;\r\n\r\n// returns a string which represents the object e.g. when printed in python\r\nstd::string ConstraintGroupPy::representation(void) const\r\n{\r\n    return std::string(\"<ConstraintGroup object>\");\r\n}\r\n\r\nPyObject *ConstraintGroupPy::getCustomAttributes(const char* /*attr*/) const\r\n{\r\n    return 0;\r\n}\r\n\r\nint ConstraintGroupPy::setCustomAttributes(const char* /*attr*/, PyObject* /*obj*/)\r\n{\r\n    return 0; \r\n}\r\n\r\n\r\n", "code_tokens": ["č", "Ċ", "#", "include", "Ġ\"", "Pre", "Compiled", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Mod", "/", "Assembly", "/", "App", "/", "Constraint", "Group", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Mod", "/", "Assembly", "/", "App", "/", "Constraint", "Py", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "//", "Ġinclusion", "Ġof", "Ġthe", "Ġgenerated", "Ġfiles", "Ġ(", "generated", "Ġout", "Ġof", "ĠConstraint", "Group", "Py", ".", "xml", ")", "č", "Ċ", "#", "include", "Ġ\"", "Constraint", "Group", "Py", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Constraint", "Group", "Py", ".", "cpp", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "ĠAssembly", ";", "č", "Ċ", "č", "Ċ", "//", "Ġreturns", "Ġa", "Ġstring", "Ġwhich", "Ġrepresents", "Ġthe", "Ġobject", "Ġe", ".", "g", ".", "Ġwhen", "Ġprinted", "Ġin", "Ġpython", "č", "Ċ", "std", "::", "string", "ĠConstraint", "Group", "Py", "::", "representation", "(", "void", ")", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstd", "::", "string", "(\"<", "Constraint", "Group", "Ġobject", ">\");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "PyObject", "Ġ*", "Constraint", "Group", "Py", "::", "getCustom", "Attributes", "(", "const", "Ġchar", "*", "Ġ/*", "attr", "*/)", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠConstraint", "Group", "Py", "::", "set", "CustomAttributes", "(", "const", "Ġchar", "*", "Ġ/*", "attr", "*/,", "ĠPyObject", "*", "Ġ/*", "obj", "*/)", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ġ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::510", "code": "/*\r\n * Copyright (c) 2016 by Alexander Schroeder\r\n */\r\n#include <agge/graphics/render_context.hpp>\r\n#include \"agge/graphics/index_buffer.hpp\"\r\n\r\n#include \"directxtest_test.hpp\"\r\n\r\nusing agge::graphics::index_buffer;\r\nusing agge::graphics::index_type;\r\n\r\nnamespace agge {\r\n    namespace directx {\r\n        class index_buffer_test : public agge::directx::directxtest_with_context\r\n        {\r\n        };\r\n\r\n        TEST_F(index_buffer_test, create_and_destroy)\r\n        {\r\n            auto buffer = context->create_index_buffer(\r\n                            agge::graphics::index_type::UINT32,\r\n                            100 * sizeof(uint32_t));\r\n            void *ptr = buffer->lock();\r\n            ASSERT_EQ(100 * sizeof(uint32_t), buffer->size());\r\n            memset(ptr, 0, buffer->size());\r\n            buffer->unlock();\r\n        }\r\n    }\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2016", "Ġby", "ĠA", "lex", "ander", "ĠSch", "ro", "eder", "č", "Ċ", "Ġ*/", "č", "Ċ", "#", "include", "Ġ<", "ag", "ge", "/", "graphics", "/", "render", "_", "context", ".", "hpp", ">", "č", "Ċ", "#", "include", "Ġ\"", "ag", "ge", "/", "graphics", "/", "index", "_", "buffer", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "d", "ire", "ctx", "test", "_", "test", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġag", "ge", "::", "graphics", "::", "index", "_", "buffer", ";", "č", "Ċ", "using", "Ġag", "ge", "::", "graphics", "::", "index", "_", "type", ";", "č", "Ċ", "č", "Ċ", "namespace", "Ġag", "ge", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġnamespace", "Ġd", "ire", "ctx", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġclass", "Ġindex", "_", "buffer", "_", "test", "Ġ:", "Ġpublic", "Ġag", "ge", "::", "d", "ire", "ctx", "::", "d", "ire", "ctx", "test", "_", "with", "_", "context", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ};", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠTEST", "_", "F", "(", "index", "_", "buffer", "_", "test", ",", "Ġcreate", "_", "and", "_", "destroy", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "Ġbuffer", "Ġ=", "Ġcontext", "->", "create", "_", "index", "_", "buffer", "(", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġag", "ge", "::", "graphics", "::", "index", "_", "type", "::", "UINT", "32", ",", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ100", "Ġ*", "Ġsizeof", "(", "uint", "32", "_", "t", "));", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġvoid", "Ġ*", "ptr", "Ġ=", "Ġbuffer", "->", "lock", "();", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠASSERT", "_", "EQ", "(", "100", "Ġ*", "Ġsizeof", "(", "uint", "32", "_", "t", "),", "Ġbuffer", "->", "size", "());", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġmemset", "(", "ptr", ",", "Ġ0", ",", "Ġbuffer", "->", "size", "());", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbuffer", "->", "unlock", "();", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::511", "code": "//\r\n// \"$Id: Fl_Fill_Dial.H 9637 2012-07-24 04:37:22Z matt $\"\r\n//\r\n// Filled dial header file for the Fast Light Tool Kit (FLTK).\r\n//\r\n// Copyright 1998-2010 by Bill Spitzak and others.\r\n//\r\n// This library is free software. Distribution and use rights are outlined in\r\n// the file \"COPYING\" which should have been included with this file.  If this\r\n// file is missing or damaged, see the license at:\r\n//\r\n//     http://www.fltk.org/COPYING.php\r\n//\r\n// Please report all bugs and problems on the following page:\r\n//\r\n//     http://www.fltk.org/str.php\r\n//\r\n\r\n/* \\file\r\n   Fl_Fill_Dial widget . */\r\n\r\n#ifndef Fl_Fill_Dial_H\r\n#define Fl_Fill_Dial_H\r\n\r\n#include \"Fl_Dial.H\"\r\n\r\n/** Draws a dial with a filled arc */\r\nclass FL_EXPORT Fl_Fill_Dial : public Fl_Dial\r\n{\r\npublic:\r\n\t/** Creates a filled dial, also setting its type to FL_FILL_DIAL. */\r\n\tFl_Fill_Dial(int X,int Y,int W,int H, const char *L) : Fl_Dial(X,Y,W,H,L)\r\n\t{\r\n\t\ttype(FL_FILL_DIAL);\r\n\t}\r\n};\r\n\r\n#endif\r\n\r\n//\r\n// End of \"$Id: Fl_Fill_Dial.H 9637 2012-07-24 04:37:22Z matt $\".\r\n//\r\n", "code_tokens": ["Ġ//", "č", "Ċ", "//", "Ġ\"$", "Id", ":", "ĠFl", "_", "Fill", "_", "Dial", ".", "H", "Ġ96", "37", "Ġ2012", "-", "07", "-", "24", "Ġ04", ":", "37", ":", "22", "Z", "Ġmat", "t", "Ġ$\"", "č", "Ċ", "//", "č", "Ċ", "//", "ĠF", "illed", "Ġdial", "Ġheader", "Ġfile", "Ġfor", "Ġthe", "ĠFast", "ĠLight", "ĠTool", "ĠK", "it", "Ġ(", "FLT", "K", ").", "č", "Ċ", "//", "č", "Ċ", "//", "ĠCopyright", "Ġ199", "8", "-", "2010", "Ġby", "ĠB", "ill", "ĠSp", "it", "z", "ak", "Ġand", "Ġothers", ".", "č", "Ċ", "//", "č", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ".", "ĠDistribution", "Ġand", "Ġuse", "Ġrights", "Ġare", "Ġout", "lined", "Ġin", "č", "Ċ", "//", "Ġthe", "Ġfile", "Ġ\"", "COPY", "ING", "\"", "Ġwhich", "Ġshould", "Ġhave", "Ġbeen", "Ġincluded", "Ġwith", "Ġthis", "Ġfile", ".", "Ġ", "ĠIf", "Ġthis", "č", "Ċ", "//", "Ġfile", "Ġis", "Ġmissing", "Ġor", "Ġdam", "aged", ",", "Ġsee", "Ġthe", "Ġlicense", "Ġat", ":", "č", "Ċ", "//", "č", "Ċ", "//", "ĠĠĠĠ", "Ġhttp", "://", "www", ".", "flt", "k", ".", "org", "/", "COPY", "ING", ".", "php", "č", "Ċ", "//", "č", "Ċ", "//", "ĠPlease", "Ġreport", "Ġall", "Ġbugs", "Ġand", "Ġproblems", "Ġon", "Ġthe", "Ġfollowing", "Ġpage", ":", "č", "Ċ", "//", "č", "Ċ", "//", "ĠĠĠĠ", "Ġhttp", "://", "www", ".", "flt", "k", ".", "org", "/", "str", ".", "php", "č", "Ċ", "//", "č", "Ċ", "č", "Ċ", "/*", "Ġ\\", "file", "č", "Ċ", "ĠĠ", "ĠFl", "_", "Fill", "_", "Dial", "Ġwidget", "Ġ.", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "ifndef", "ĠFl", "_", "Fill", "_", "Dial", "_", "H", "č", "Ċ", "#", "define", "ĠFl", "_", "Fill", "_", "Dial", "_", "H", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Fl", "_", "Dial", ".", "H", "\"", "č", "Ċ", "č", "Ċ", "/**", "ĠDraw", "s", "Ġa", "Ġdial", "Ġwith", "Ġa", "Ġfilled", "Ġarc", "Ġ*/", "č", "Ċ", "class", "ĠFL", "_", "EXPORT", "ĠFl", "_", "Fill", "_", "Dial", "Ġ:", "Ġpublic", "ĠFl", "_", "Dial", "č", "Ċ", "{", "č", "Ċ", "public", ":", "č", "Ċ", "ĉ", "/**", "ĠCreates", "Ġa", "Ġfilled", "Ġdial", ",", "Ġalso", "Ġsetting", "Ġits", "Ġtype", "Ġto", "ĠFL", "_", "FILL", "_", "DI", "AL", ".", "Ġ*/", "č", "Ċ", "ĉ", "Fl", "_", "Fill", "_", "Dial", "(", "int", "ĠX", ",", "int", "ĠY", ",", "int", "ĠW", ",", "int", "ĠH", ",", "Ġconst", "Ġchar", "Ġ*", "L", ")", "Ġ:", "ĠFl", "_", "Dial", "(", "X", ",", "Y", ",", "W", ",", "H", ",", "L", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "type", "(", "FL", "_", "FILL", "_", "DI", "AL", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "};", "č", "Ċ", "č", "Ċ", "#", "endif", "č", "Ċ", "č", "Ċ", "//", "č", "Ċ", "//", "ĠEnd", "Ġof", "Ġ\"$", "Id", ":", "ĠFl", "_", "Fill", "_", "Dial", ".", "H", "Ġ96", "37", "Ġ2012", "-", "07", "-", "24", "Ġ04", ":", "37", ":", "22", "Z", "Ġmat", "t", "Ġ$", "\".", "č", "Ċ", "//", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::512", "code": "#include \"utest_helper.hpp\"\n\nstatic void compiler_fill_image(void)\n{\n  const size_t w = 512;\n  const size_t h = 512;\n  uint32_t color = 0x12345678;\n  cl_image_format format;\n\n  format.image_channel_order = CL_RGBA;\n  format.image_channel_data_type = CL_UNSIGNED_INT8;\n\n  // Setup kernel and images\n  OCL_CREATE_KERNEL(\"test_fill_image\");\n\n  OCL_CREATE_IMAGE2D(buf[0], 0, &format, w, h, 0, NULL);\n\n  // Run the kernel\n  OCL_SET_ARG(0, sizeof(cl_mem), &buf[0]);\n  OCL_SET_ARG(1, sizeof(color), &color);\n  globals[0] = w;\n  globals[1] = h;\n  locals[0] = 16;\n  locals[1] = 16;\n  OCL_NDRANGE(2);\n\n  // Check result\n  OCL_MAP_BUFFER(0);\n  for (uint32_t j = 0; j < h; ++j)\n    for (uint32_t i = 0; i < w; i++)\n      OCL_ASSERT(((uint32_t*)buf_data[0])[j * w + i] == 0x78563412);\n  OCL_UNMAP_BUFFER(0);\n}\n\nMAKE_UTEST_FROM_FUNCTION(compiler_fill_image);\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "u", "test", "_", "helper", ".", "hpp", "\"", "Ċ", "Ċ", "static", "Ġvoid", "Ġcompiler", "_", "fill", "_", "image", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġconst", "Ġsize", "_", "t", "Ġw", "Ġ=", "Ġ512", ";", "Ċ", "Ġ", "Ġconst", "Ġsize", "_", "t", "Ġh", "Ġ=", "Ġ512", ";", "Ċ", "Ġ", "Ġuint", "32", "_", "t", "Ġcolor", "Ġ=", "Ġ0", "x", "12345678", ";", "Ċ", "Ġ", "Ġcl", "_", "image", "_", "format", "Ġformat", ";", "Ċ", "Ċ", "Ġ", "Ġformat", ".", "image", "_", "channel", "_", "order", "Ġ=", "ĠCL", "_", "RGBA", ";", "Ċ", "Ġ", "Ġformat", ".", "image", "_", "channel", "_", "data", "_", "type", "Ġ=", "ĠCL", "_", "UNSIGNED", "_", "INT", "8", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠSetup", "Ġkernel", "Ġand", "Ġimages", "Ċ", "Ġ", "ĠO", "CL", "_", "CREATE", "_", "KERNEL", "(\"", "test", "_", "fill", "_", "image", "\");", "Ċ", "Ċ", "Ġ", "ĠO", "CL", "_", "CREATE", "_", "IMAGE", "2", "D", "(", "buf", "[", "0", "],", "Ġ0", ",", "Ġ&", "format", ",", "Ġw", ",", "Ġh", ",", "Ġ0", ",", "ĠNULL", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠRun", "Ġthe", "Ġkernel", "Ċ", "Ġ", "ĠO", "CL", "_", "SET", "_", "ARG", "(", "0", ",", "Ġsizeof", "(", "cl", "_", "mem", "),", "Ġ&", "buf", "[", "0", "]);", "Ċ", "Ġ", "ĠO", "CL", "_", "SET", "_", "ARG", "(", "1", ",", "Ġsizeof", "(", "color", "),", "Ġ&", "color", ");", "Ċ", "Ġ", "Ġglobals", "[", "0", "]", "Ġ=", "Ġw", ";", "Ċ", "Ġ", "Ġglobals", "[", "1", "]", "Ġ=", "Ġh", ";", "Ċ", "Ġ", "Ġlocals", "[", "0", "]", "Ġ=", "Ġ16", ";", "Ċ", "Ġ", "Ġlocals", "[", "1", "]", "Ġ=", "Ġ16", ";", "Ċ", "Ġ", "ĠO", "CL", "_", "ND", "RANGE", "(", "2", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠCheck", "Ġresult", "Ċ", "Ġ", "ĠO", "CL", "_", "MAP", "_", "BUFFER", "(", "0", ");", "Ċ", "Ġ", "Ġfor", "Ġ(", "uint", "32", "_", "t", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġh", ";", "Ġ++", "j", ")", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "uint", "32", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġw", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠ", "ĠO", "CL", "_", "ASSERT", "(((", "uint", "32", "_", "t", "*)", "buf", "_", "data", "[", "0", "])[", "j", "Ġ*", "Ġw", "Ġ+", "Ġi", "]", "Ġ==", "Ġ0", "x", "78", "56", "34", "12", ");", "Ċ", "Ġ", "ĠO", "CL", "_", "UNMAP", "_", "BUFFER", "(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "MAKE", "_", "UT", "EST", "_", "FROM", "_", "FUNCTION", "(", "compiler", "_", "fill", "_", "image", ");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::513", "code": "#include <gtest/gtest.h>\n#include \"solution.h\"\n\nTEST(test, testcase0)\n{\n    Stack s;\n    EXPECT_EQ(true, s.empty());\n    s.push(1);\n    s.push(2);\n    s.push(3);\n    EXPECT_EQ(false, s.empty());\n    EXPECT_EQ(3, s.top());\n    s.pop();\n    EXPECT_EQ(2, s.top());\n    s.pop();\n    EXPECT_EQ(1, s.top());\n    s.pop();\n    EXPECT_EQ(true, s.empty());\n}\n\nint main(int argc, char **argv)\n{\n    ::testing::InitGoogleTest(&argc, argv);\n    return RUN_ALL_TESTS();\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "solution", ".", "h", "\"", "Ċ", "Ċ", "TEST", "(", "test", ",", "Ġtestcase", "0", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠStack", "Ġs", ";", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "true", ",", "Ġs", ".", "empty", "());", "Ċ", "ĠĠĠ", "Ġs", ".", "push", "(", "1", ");", "Ċ", "ĠĠĠ", "Ġs", ".", "push", "(", "2", ");", "Ċ", "ĠĠĠ", "Ġs", ".", "push", "(", "3", ");", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "false", ",", "Ġs", ".", "empty", "());", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "3", ",", "Ġs", ".", "top", "());", "Ċ", "ĠĠĠ", "Ġs", ".", "pop", "();", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "2", ",", "Ġs", ".", "top", "());", "Ċ", "ĠĠĠ", "Ġs", ".", "pop", "();", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "1", ",", "Ġs", ".", "top", "());", "Ċ", "ĠĠĠ", "Ġs", ".", "pop", "();", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "EQ", "(", "true", ",", "Ġs", ".", "empty", "());", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ::", "testing", "::", "Init", "Google", "Test", "(&", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "Ġreturn", "ĠRUN", "_", "ALL", "_", "TESTS", "();", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::514", "code": "/** \\PAT 1058\n *\n * \\ AC!\n * \\ Yitian\n * \\ 20130924\n *\n */\n\n\n#include <iostream>\n#include <string>\n#include <cstdlib>\n\nusing namespace std;\n\nlong long radix[] = {1, 29 , 29 * 17};\nlong long CurrencyConvert(string & str)\n{\n    long long sum = 0;\n    long long num = 0, pow = 1;\n    int count = 0;\n    int i = str.length() - 1;\n    while (i >= 0)\n    {\n        if (str[i] == '.')\n        {\n            sum += num * radix[count];\n            ++count;\n            num = 0;\n            pow = 1;\n        }\n        else\n        {\n            num += (str[i] - '0') * pow;\n            pow *= 10;\n        }\n        --i;\n    }\n    sum += num * radix[count];\n    return sum;\n}\n\nint main()\n{\n    string A, B;\n\n    while (cin >> A >> B)\n    {\n        long long ans = CurrencyConvert(A) + CurrencyConvert(B);\n        cout << (ans / radix[2]) << \".\";\n        ans %= radix[2];\n        cout << (ans / radix[1]) << \".\";\n        ans %= radix[1];\n        cout << ans << endl;\n    }\n}\n", "code_tokens": ["Ġ/**", "Ġ\\", "PAT", "Ġ10", "58", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ\\", "ĠAC", "!", "Ċ", "Ġ*", "Ġ\\", "ĠY", "it", "ian", "Ċ", "Ġ*", "Ġ\\", "Ġ2013", "09", "24", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "long", "Ġlong", "Ġradix", "[]", "Ġ=", "Ġ{", "1", ",", "Ġ29", "Ġ,", "Ġ29", "Ġ*", "Ġ17", "};", "Ċ", "long", "Ġlong", "ĠCurrency", "Convert", "(", "string", "Ġ&", "Ġstr", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġlong", "Ġlong", "Ġsum", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġlong", "Ġlong", "Ġnum", "Ġ=", "Ġ0", ",", "Ġpow", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġcount", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġi", "Ġ=", "Ġstr", ".", "length", "()", "Ġ-", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "i", "Ġ>=", "Ġ0", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "str", "[", "i", "]", "Ġ==", "Ġ'.')", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "Ġ+=", "Ġnum", "Ġ*", "Ġradix", "[", "count", "];", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "count", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġnum", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġpow", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġnum", "Ġ+=", "Ġ(", "str", "[", "i", "]", "Ġ-", "Ġ'", "0", "')", "Ġ*", "Ġpow", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġpow", "Ġ*=", "Ġ10", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ--", "i", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġsum", "Ġ+=", "Ġnum", "Ġ*", "Ġradix", "[", "count", "];", "Ċ", "ĠĠĠ", "Ġreturn", "Ġsum", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstring", "ĠA", ",", "ĠB", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "ĠA", "Ġ>>", "ĠB", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġlong", "Ġlong", "Ġans", "Ġ=", "ĠCurrency", "Convert", "(", "A", ")", "Ġ+", "ĠCurrency", "Convert", "(", "B", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ(", "ans", "Ġ/", "Ġradix", "[", "2", "])", "Ġ<<", "Ġ\".\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġans", "Ġ%=", "Ġradix", "[", "2", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ(", "ans", "Ġ/", "Ġradix", "[", "1", "])", "Ġ<<", "Ġ\".\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġans", "Ġ%=", "Ġradix", "[", "1", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġans", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::515", "code": "#include \"cuehandler.hpp\"\n\nCueHandler *CueHandler::New(){\n  return new CueHandler;\n}\n\n/*void CueHandler::Execute(vtkObject *vtkNotUsed(caller), unsigned long event, void *calldata){\n  if((this->animator != 0) && (this->renderer != 0)){\n    vtkAnimationCue::AnimationCueInfo *info =\n      static_cast<vtkAnimationCue::AnimationCueInfo *>(calldata);\n    switch(event){\n      case vtkCommand::StartAnimationCueEvent:\n        animator->Start(info, this->renderer);\n        break;\n      case vtkCommand::AnimationCueTickEvent:\n        animator->Tick(info, this->renderer);\n        break;\n      case vtkCommand::EndAnimationCueEvent:\n        animator->Stop(info, this->renderer);\n        break;\n    }\n  }\n}\n*/\n\nvoid CueHandler::Execute(vtkObject *vtkNotUsed(caller), unsigned long event, void *calldata){\n  animator->render();\n}\n\nvoid CueHandler::RegisterAnimator(std::shared_ptr<ImageAnimator> animatorptr){\n  this->animator = animatorptr;\n}\n\nvoid CueHandler::RegisterRenderer(vtkRenderer* renderptr){\n  this->renderer = renderptr;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "cue", "handler", ".", "hpp", "\"", "Ċ", "Ċ", "Cue", "Handler", "Ġ*", "Cue", "Handler", "::", "New", "(){", "Ċ", "Ġ", "Ġreturn", "Ġnew", "ĠC", "ue", "Handler", ";", "Ċ", "}", "Ċ", "Ċ", "/*", "void", "ĠC", "ue", "Handler", "::", "Execute", "(", "vtk", "Object", "Ġ*", "vtk", "Not", "Used", "(", "caller", "),", "Ġunsigned", "Ġlong", "Ġevent", ",", "Ġvoid", "Ġ*", "call", "data", "){", "Ċ", "Ġ", "Ġif", "((", "this", "->", "anim", "ator", "Ġ!=", "Ġ0", ")", "Ġ&&", "Ġ(", "this", "->", "renderer", "Ġ!=", "Ġ0", ")){", "Ċ", "ĠĠĠ", "Ġv", "tk", "Animation", "Cue", "::", "Animation", "Cue", "Info", "Ġ*", "info", "Ġ=", "Ċ", "ĠĠĠĠĠ", "Ġstatic", "_", "cast", "<", "vtk", "Animation", "Cue", "::", "Animation", "Cue", "Info", "Ġ*>(", "call", "data", ");", "Ċ", "ĠĠĠ", "Ġswitch", "(", "event", "){", "Ċ", "ĠĠĠĠĠ", "Ġcase", "Ġv", "tk", "Command", "::", "Start", "Animation", "Cue", "Event", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġanimator", "->", "Start", "(", "info", ",", "Ġthis", "->", "renderer", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠ", "Ġcase", "Ġv", "tk", "Command", "::", "Animation", "Cue", "Tick", "Event", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġanimator", "->", "Tick", "(", "info", ",", "Ġthis", "->", "renderer", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠ", "Ġcase", "Ġv", "tk", "Command", "::", "End", "Animation", "Cue", "Event", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġanimator", "->", "Stop", "(", "info", ",", "Ġthis", "->", "renderer", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "*/", "Ċ", "Ċ", "void", "ĠC", "ue", "Handler", "::", "Execute", "(", "vtk", "Object", "Ġ*", "vtk", "Not", "Used", "(", "caller", "),", "Ġunsigned", "Ġlong", "Ġevent", ",", "Ġvoid", "Ġ*", "call", "data", "){", "Ċ", "Ġ", "Ġanimator", "->", "render", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "ue", "Handler", "::", "Register", "Animator", "(", "std", "::", "shared", "_", "ptr", "<", "Image", "Animator", ">", "Ġanimator", "ptr", "){", "Ċ", "Ġ", "Ġthis", "->", "anim", "ator", "Ġ=", "Ġanimator", "ptr", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "ue", "Handler", "::", "Register", "Renderer", "(", "vtk", "Renderer", "*", "Ġrender", "ptr", "){", "Ċ", "Ġ", "Ġthis", "->", "renderer", "Ġ=", "Ġrender", "ptr", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::516", "code": "/*\n *  Copyright (c) 2016, https://github.com/nebula-im/nebula\n *  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include \"nebula/redis_client/redis_client.h\"\n\nbool RedisConnPoolMgr::Initialize(const std::vector<RedisAddrInfo>& redis_addr_list) {\n  for (const auto & addr : redis_addr_list) {\n    auto pool = std::make_shared<RedisConnPool>();\n    pool->Initialize(addr);\n    conn_pools_.insert(std::make_pair(addr.name, pool));\n  }\n  return true;\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2016", ",", "Ġhttps", "://", "github", ".", "com", "/", "ne", "b", "ula", "-", "im", "/", "ne", "b", "ula", "Ċ", "Ġ*", "Ġ", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "ne", "b", "ula", "/", "redis", "_", "client", "/", "redis", "_", "client", ".", "h", "\"", "Ċ", "Ċ", "bool", "ĠRedis", "Conn", "Pool", "Mgr", "::", "Initialize", "(", "const", "Ġstd", "::", "vector", "<", "Redis", "Addr", "Info", ">&", "Ġredis", "_", "addr", "_", "list", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "Ġ&", "Ġaddr", "Ġ:", "Ġredis", "_", "addr", "_", "list", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġauto", "Ġpool", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "Redis", "Conn", "Pool", ">();", "Ċ", "ĠĠĠ", "Ġpool", "->", "Initialize", "(", "addr", ");", "Ċ", "ĠĠĠ", "Ġconn", "_", "pools", "_.", "insert", "(", "std", "::", "make", "_", "pair", "(", "addr", ".", "name", ",", "Ġpool", "));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::517", "code": "/* Lantern - A path tracer\n*\n* Lantern is the legal property of Adrian Astley\n* Copyright Adrian Astley 2015 - 2016\n*/\n\n#include \"scene/obj_loader.h\"\n\n#include \"math/int_types.h\"\n\n#include <tiny_obj_loader/tiny_obj_loader.h>\n\n\nnamespace Lantern {\n\nvoid LoadMeshesFromObj(const char *filePath, std::vector<Mesh> &meshes) {\n\tstd::vector<tinyobj::shape_t> tinyObjShapes;\n\tstd::vector<tinyobj::material_t> tinyObjMaterials;\n\tstd::string err;\n\n\ttinyobj::LoadObj(tinyObjShapes, tinyObjMaterials, err, filePath);\n\n\t// We ignore materials for now\n\n\t// Copy over the vertices and indices\n\tfor (auto &shape : tinyObjShapes) {\n\t\tMesh mesh;\n\t\tfor (uint i = 0; i < shape.mesh.positions.size(); i += 3) {\n\t\t\t// tiny_obj_loader uses LH coords\n\t\t\tmesh.Positions.emplace_back(shape.mesh.positions[i], shape.mesh.positions[i + 1], shape.mesh.positions[i + 2]);\n\t\t}\n\t\tfor (uint i = 0; i < shape.mesh.normals.size(); i += 3) {\n\t\t\t// tiny_obj_loader uses LH coords\n\t\t\tmesh.Normals.emplace_back(shape.mesh.normals[i], shape.mesh.normals[i + 1], shape.mesh.normals[i + 2]);\n\t\t}\n\t\tfor (uint i = 0; i < shape.mesh.indices.size(); ++i) {\n\t\t\tmesh.Indices.push_back(shape.mesh.indices[i]);\n\t\t}\n\n\t\tmeshes.push_back(mesh);\n\t}\n}\n\n} // End of namespace Lantern\n", "code_tokens": ["Ġ/*", "ĠLan", "tern", "Ġ-", "ĠA", "Ġpath", "Ġtracer", "Ċ", "*", "Ċ", "*", "ĠLan", "tern", "Ġis", "Ġthe", "Ġlegal", "Ġproperty", "Ġof", "ĠAd", "ri", "an", "ĠAst", "ley", "Ċ", "*", "ĠCopyright", "ĠAd", "ri", "an", "ĠAst", "ley", "Ġ2015", "Ġ-", "Ġ2016", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "scene", "/", "obj", "_", "loader", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "math", "/", "int", "_", "types", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "tiny", "_", "obj", "_", "loader", "/", "tiny", "_", "obj", "_", "loader", ".", "h", ">", "Ċ", "Ċ", "Ċ", "namespace", "ĠLan", "tern", "Ġ{", "Ċ", "Ċ", "void", "ĠLoad", "Meshes", "From", "Obj", "(", "const", "Ġchar", "Ġ*", "filePath", ",", "Ġstd", "::", "vector", "<", "Mesh", ">", "Ġ&", "mesh", "es", ")", "Ġ{", "Ċ", "ĉ", "std", "::", "vector", "<", "tiny", "obj", "::", "shape", "_", "t", ">", "Ġtiny", "Obj", "Shapes", ";", "Ċ", "ĉ", "std", "::", "vector", "<", "tiny", "obj", "::", "material", "_", "t", ">", "Ġtiny", "Obj", "Materials", ";", "Ċ", "ĉ", "std", "::", "string", "Ġerr", ";", "Ċ", "Ċ", "ĉ", "tiny", "obj", "::", "Load", "Obj", "(", "tiny", "Obj", "Shapes", ",", "Ġtiny", "Obj", "Materials", ",", "Ġerr", ",", "ĠfilePath", ");", "Ċ", "Ċ", "ĉ", "//", "ĠWe", "Ġignore", "Ġmaterials", "Ġfor", "Ġnow", "Ċ", "Ċ", "ĉ", "//", "ĠCopy", "Ġover", "Ġthe", "Ġvertices", "Ġand", "Ġindices", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġ&", "shape", "Ġ:", "Ġtiny", "Obj", "Shapes", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "Mesh", "Ġmesh", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "uint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġshape", ".", "mesh", ".", "positions", ".", "size", "();", "Ġi", "Ġ+=", "Ġ3", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "//", "Ġtiny", "_", "obj", "_", "loader", "Ġuses", "ĠLH", "Ġcoords", "Ċ", "ĉĉ", "ĉ", "mesh", ".", "Positions", ".", "emplace", "_", "back", "(", "shape", ".", "mesh", ".", "positions", "[", "i", "],", "Ġshape", ".", "mesh", ".", "positions", "[", "i", "Ġ+", "Ġ1", "],", "Ġshape", ".", "mesh", ".", "positions", "[", "i", "Ġ+", "Ġ2", "]);", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "uint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġshape", ".", "mesh", ".", "normals", ".", "size", "();", "Ġi", "Ġ+=", "Ġ3", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "//", "Ġtiny", "_", "obj", "_", "loader", "Ġuses", "ĠLH", "Ġcoords", "Ċ", "ĉĉ", "ĉ", "mesh", ".", "Normals", ".", "emplace", "_", "back", "(", "shape", ".", "mesh", ".", "normals", "[", "i", "],", "Ġshape", ".", "mesh", ".", "normals", "[", "i", "Ġ+", "Ġ1", "],", "Ġshape", ".", "mesh", ".", "normals", "[", "i", "Ġ+", "Ġ2", "]);", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "uint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġshape", ".", "mesh", ".", "indices", ".", "size", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "mesh", ".", "Indices", ".", "push", "_", "back", "(", "shape", ".", "mesh", ".", "indices", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "mesh", "es", ".", "push", "_", "back", "(", "mesh", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "ĠEnd", "Ġof", "Ġnamespace", "ĠLan", "tern", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::518", "code": "// NOLINT(namespace-envoy)\n#include <string>\n#include <unordered_map>\n\n#include \"proxy_wasm_intrinsics.h\"\n\nclass ExampleContext : public Context {\npublic:\n  explicit ExampleContext(uint32_t id, RootContext* root) : Context(id, root) {}\n\n  FilterHeadersStatus onRequestHeaders(uint32_t) override;\n};\nstatic RegisterContextFactory register_ExampleContext(CONTEXT_FACTORY(ExampleContext));\n\nFilterHeadersStatus ExampleContext::onRequestHeaders(uint32_t) {\n  auto context_id = id();\n  auto callback = [context_id](uint32_t, size_t body_size, uint32_t) {\n    auto response_headers = getHeaderMapPairs(HeaderMapType::HttpCallResponseHeaders);\n    // Switch context after getting headers, but before getting body to exercise both code paths.\n    getContext(context_id)->setEffectiveContext();\n    auto body = getBufferBytes(BufferType::HttpCallResponseBody, 0, body_size);\n    auto response_trailers = getHeaderMapPairs(HeaderMapType::HttpCallResponseTrailers);\n    for (auto& p : response_headers->pairs()) {\n      logInfo(std::string(p.first) + std::string(\" -> \") + std::string(p.second));\n    }\n    logDebug(std::string(body->view()));\n    for (auto& p : response_trailers->pairs()) {\n      logWarn(std::string(p.first) + std::string(\" -> \") + std::string(p.second));\n    }\n  };\n  root()->httpCall(\"cluster\", {{\":method\", \"POST\"}, {\":path\", \"/\"}, {\":authority\", \"foo\"}},\n                   \"hello world\", {{\"trail\", \"cow\"}}, 1000, callback);\n  return FilterHeadersStatus::StopIteration;\n}\n", "code_tokens": ["Ġ//", "ĠN", "OL", "INT", "(", "namespace", "-", "en", "vo", "y", ")", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "unordered", "_", "map", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "proxy", "_", "wasm", "_", "intr", "insics", ".", "h", "\"", "Ċ", "Ċ", "class", "ĠExample", "Context", "Ġ:", "Ġpublic", "ĠContext", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġexplicit", "ĠExample", "Context", "(", "uint", "32", "_", "t", "Ġid", ",", "ĠRoot", "Context", "*", "Ġroot", ")", "Ġ:", "ĠContext", "(", "id", ",", "Ġroot", ")", "Ġ{}", "Ċ", "Ċ", "Ġ", "ĠFilter", "Headers", "Status", "Ġon", "RequestHeaders", "(", "uint", "32", "_", "t", ")", "Ġoverride", ";", "Ċ", "};", "Ċ", "static", "ĠRegister", "Context", "Factory", "Ġregister", "_", "Example", "Context", "(", "CONTEXT", "_", "FACTORY", "(", "Example", "Context", "));", "Ċ", "Ċ", "Filter", "Headers", "Status", "ĠExample", "Context", "::", "on", "RequestHeaders", "(", "uint", "32", "_", "t", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġcontext", "_", "id", "Ġ=", "Ġid", "();", "Ċ", "Ġ", "Ġauto", "Ġcallback", "Ġ=", "Ġ[", "context", "_", "id", "](", "uint", "32", "_", "t", ",", "Ġsize", "_", "t", "Ġbody", "_", "size", ",", "Ġuint", "32", "_", "t", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġauto", "Ġresponse", "_", "headers", "Ġ=", "Ġget", "Header", "Map", "Pairs", "(", "Header", "MapType", "::", "Http", "Call", "ResponseHeaders", ");", "Ċ", "ĠĠĠ", "Ġ//", "ĠSwitch", "Ġcontext", "Ġafter", "Ġgetting", "Ġheaders", ",", "Ġbut", "Ġbefore", "Ġgetting", "Ġbody", "Ġto", "Ġex", "ercise", "Ġboth", "Ġcode", "Ġpaths", ".", "Ċ", "ĠĠĠ", "ĠgetContext", "(", "context", "_", "id", ")->", "set", "Effective", "Context", "();", "Ċ", "ĠĠĠ", "Ġauto", "Ġbody", "Ġ=", "Ġget", "Buffer", "Bytes", "(", "Buffer", "Type", "::", "Http", "Call", "ResponseBody", ",", "Ġ0", ",", "Ġbody", "_", "size", ");", "Ċ", "ĠĠĠ", "Ġauto", "Ġresponse", "_", "trail", "ers", "Ġ=", "Ġget", "Header", "Map", "Pairs", "(", "Header", "MapType", "::", "Http", "Call", "Response", "Tra", "ilers", ");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "&", "Ġp", "Ġ:", "Ġresponse", "_", "headers", "->", "pairs", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġlog", "Info", "(", "std", "::", "string", "(", "p", ".", "first", ")", "Ġ+", "Ġstd", "::", "string", "(\"", "Ġ->", "Ġ\")", "Ġ+", "Ġstd", "::", "string", "(", "p", ".", "second", "));", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġlog", "Debug", "(", "std", "::", "string", "(", "body", "->", "view", "()));", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "&", "Ġp", "Ġ:", "Ġresponse", "_", "trail", "ers", "->", "pairs", "())", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġlog", "Warn", "(", "std", "::", "string", "(", "p", ".", "first", ")", "Ġ+", "Ġstd", "::", "string", "(\"", "Ġ->", "Ġ\")", "Ġ+", "Ġstd", "::", "string", "(", "p", ".", "second", "));", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġroot", "()->", "http", "Call", "(\"", "cluster", "\",", "Ġ{{", "\":", "method", "\",", "Ġ\"", "POST", "\"},", "Ġ{", "\":", "path", "\",", "Ġ\"/", "\"},", "Ġ{", "\":", "authority", "\",", "Ġ\"", "foo", "\"}},", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\"", "hello", "Ġworld", "\",", "Ġ{", "{\"", "trail", "\",", "Ġ\"", "cow", "\"}},", "Ġ1000", ",", "Ġcallback", ");", "Ċ", "Ġ", "Ġreturn", "ĠFilter", "Headers", "Status", "::", "Stop", "Iteration", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::519", "code": "#include <stdio.h>\n#include <string.h>\nchar haab[19][10] = { \"pop\", \"no\", \"zip\", \"zotz\", \"tzec\", \"xul\", \"yoxkin\", \"mol\", \"chen\", \"yax\", \"zac\", \"ceh\", \"mac\", \"kankin\", \"muan\", \"pax\", \"koyab\", \"cumhu\", \"uayet\" };\nchar tzolkin[20][10] = { \"imix\", \"ik\", \"akbal\", \"kan\", \"chicchan\", \"cimi\", \"manik\", \"lamat\", \"muluk\", \"ok\", \"chuen\", \"eb\", \"ben\", \"ix\", \"mem\", \"cib\", \"caban\", \"eznab\", \"canac\", \"ahau\" };\nint main(void)\n{\n  int n;\n  int d, m, y; \n  int sum;\n  char month[10];\n\n  scanf(\"%d\", &n);\n\n  printf(\"%d\\n\", n);\n  while (n--) {\n    scanf(\" %d. %s %d\", &d, month, &y);\n\n    for (int i = 0; i < 19; i++)\n      if (!strcmp(month, haab[i])) {\n        m = i;\n        break;\n      }\n\n    \n    sum = y*365 + m*20 + d;\n    printf(\"%d %s %d\\n\", sum%260%13+1, tzolkin[sum%260%20], sum/260);\n  }\n\n\n  return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "char", "Ġha", "ab", "[", "19", "][", "10", "]", "Ġ=", "Ġ{", "Ġ\"", "pop", "\",", "Ġ\"", "no", "\",", "Ġ\"", "zip", "\",", "Ġ\"", "z", "ot", "z", "\",", "Ġ\"", "tz", "ec", "\",", "Ġ\"", "x", "ul", "\",", "Ġ\"", "y", "ox", "kin", "\",", "Ġ\"", "mol", "\",", "Ġ\"", "chen", "\",", "Ġ\"", "y", "ax", "\",", "Ġ\"", "z", "ac", "\",", "Ġ\"", "ce", "h", "\",", "Ġ\"", "mac", "\",", "Ġ\"", "k", "ank", "in", "\",", "Ġ\"", "mu", "an", "\",", "Ġ\"", "pax", "\",", "Ġ\"", "ko", "y", "ab", "\",", "Ġ\"", "cum", "hu", "\",", "Ġ\"", "u", "ay", "et", "\"", "Ġ};", "Ċ", "char", "Ġtz", "ol", "kin", "[", "20", "][", "10", "]", "Ġ=", "Ġ{", "Ġ\"", "im", "ix", "\",", "Ġ\"", "ik", "\",", "Ġ\"", "ak", "bal", "\",", "Ġ\"", "kan", "\",", "Ġ\"", "ch", "ic", "chan", "\",", "Ġ\"", "c", "im", "i", "\",", "Ġ\"", "man", "ik", "\",", "Ġ\"", "lam", "at", "\",", "Ġ\"", "mul", "uk", "\",", "Ġ\"", "ok", "\",", "Ġ\"", "ch", "u", "en", "\",", "Ġ\"", "eb", "\",", "Ġ\"", "ben", "\",", "Ġ\"", "ix", "\",", "Ġ\"", "mem", "\",", "Ġ\"", "c", "ib", "\",", "Ġ\"", "cab", "an", "\",", "Ġ\"", "ez", "n", "ab", "\",", "Ġ\"", "can", "ac", "\",", "Ġ\"", "a", "ha", "u", "\"", "Ġ};", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġint", "Ġd", ",", "Ġm", ",", "Ġy", ";", "ĠĊ", "Ġ", "Ġint", "Ġsum", ";", "Ċ", "Ġ", "Ġchar", "Ġmonth", "[", "10", "];", "Ċ", "Ċ", "Ġ", "Ġscanf", "(\"%", "d", "\",", "Ġ&", "n", ");", "Ċ", "Ċ", "Ġ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "Ġn", ");", "Ċ", "Ġ", "Ġwhile", "Ġ(", "n", "--)", "Ġ{", "Ċ", "ĠĠĠ", "Ġscanf", "(\"", "Ġ%", "d", ".", "Ġ%", "s", "Ġ%", "d", "\",", "Ġ&", "d", ",", "Ġmonth", ",", "Ġ&", "y", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ19", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(!", "strcmp", "(", "month", ",", "Ġha", "ab", "[", "i", "]))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "Ġ=", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġsum", "Ġ=", "Ġy", "*", "365", "Ġ+", "Ġm", "*", "20", "Ġ+", "Ġd", ";", "Ċ", "ĠĠĠ", "Ġprintf", "(\"%", "d", "Ġ%", "s", "Ġ%", "d", "\\", "n", "\",", "Ġsum", "%", "260", "%", "13", "+", "1", ",", "Ġtz", "ol", "kin", "[", "sum", "%", "260", "%", "20", "],", "Ġsum", "/", "260", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::520", "code": "#include <primitiv/config.h>\n\n#include <cstring>\n\n#include <primitiv/devices/eigen/device.h>\n#include <primitiv/devices/eigen/ops/common.h>\n\nnamespace primitiv {\nnamespace devices {\n\nstd::vector<float> Eigen::tensor_to_vector_impl(const Tensor &x) {\n  const std::uint32_t num_elements = x.shape().size();\n  std::vector<float> ret(num_elements);\n  std::memcpy(&ret[0], CDATA(x), sizeof(float) * num_elements);\n  return ret;\n}\n\n}  // namespace devices\n}  // namespace primitiv\n", "code_tokens": ["Ġ#", "include", "Ġ<", "pr", "imit", "iv", "/", "config", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "pr", "imit", "iv", "/", "devices", "/", "eigen", "/", "device", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "pr", "imit", "iv", "/", "devices", "/", "eigen", "/", "ops", "/", "common", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġpr", "imit", "iv", "Ġ{", "Ċ", "namespace", "Ġdevices", "Ġ{", "Ċ", "Ċ", "std", "::", "vector", "<", "float", ">", "ĠEigen", "::", "tensor", "_", "to", "_", "vector", "_", "impl", "(", "const", "ĠTensor", "Ġ&", "x", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "uint", "32", "_", "t", "Ġnum", "_", "elements", "Ġ=", "Ġx", ".", "shape", "().", "size", "();", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "float", ">", "Ġret", "(", "num", "_", "elements", ");", "Ċ", "Ġ", "Ġstd", "::", "memcpy", "(&", "ret", "[", "0", "],", "ĠCDATA", "(", "x", "),", "Ġsizeof", "(", "float", ")", "Ġ*", "Ġnum", "_", "elements", ");", "Ċ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġdevices", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġpr", "imit", "iv", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::521", "code": "#include \"common/api/os_sys_calls_impl_hot_restart.h\"\n\n#include <cerrno>\n\nnamespace Envoy {\nnamespace Api {\n\nSysCallIntResult HotRestartOsSysCallsImpl::shmOpen(const char* name, int oflag, mode_t mode) {\n  const int rc = ::shm_open(name, oflag, mode);\n  return {rc, errno};\n}\n\nSysCallIntResult HotRestartOsSysCallsImpl::shmUnlink(const char* name) {\n  const int rc = ::shm_unlink(name);\n  return {rc, errno};\n}\n\n} // namespace Api\n} // namespace Envoy\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "common", "/", "api", "/", "os", "_", "sys", "_", "calls", "_", "impl", "_", "hot", "_", "restart", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "errno", ">", "Ċ", "Ċ", "namespace", "ĠEn", "vo", "y", "Ġ{", "Ċ", "namespace", "ĠApi", "Ġ{", "Ċ", "Ċ", "Sys", "Call", "Int", "Result", "ĠHot", "Restart", "Os", "Sys", "Calls", "Impl", "::", "shm", "Open", "(", "const", "Ġchar", "*", "Ġname", ",", "Ġint", "Ġof", "lag", ",", "Ġmode", "_", "t", "Ġmode", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġrc", "Ġ=", "Ġ::", "shm", "_", "open", "(", "name", ",", "Ġof", "lag", ",", "Ġmode", ");", "Ċ", "Ġ", "Ġreturn", "Ġ{", "rc", ",", "Ġerrno", "};", "Ċ", "}", "Ċ", "Ċ", "Sys", "Call", "Int", "Result", "ĠHot", "Restart", "Os", "Sys", "Calls", "Impl", "::", "shm", "Unlink", "(", "const", "Ġchar", "*", "Ġname", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġrc", "Ġ=", "Ġ::", "shm", "_", "unlink", "(", "name", ");", "Ċ", "Ġ", "Ġreturn", "Ġ{", "rc", ",", "Ġerrno", "};", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠApi", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠEn", "vo", "y", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::522", "code": "#include <bits/stdc++.h>\n\ntemplate<typename T> T gcd(T a, T b) {\n    if(!b) return a;\n    return gcd(b, a % b);\n}\ntemplate<typename T> T lcm(T a, T b) {\n    return a * b / gcd(a, b);\n}\n\ntemplate<typename T> void chmin(T& a, T b) { a = (a > b) ? b : a; }\ntemplate<typename T> void chmax(T& a, T b) { a = (a < b) ? b : a; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef unsigned uint;\n\nconst int MAXN = 35;\n\nint N;\nstring S, P[MAXN];\n\nbool cmp(string a, string b) {\n\tfor (int i = 0; i < min(a.size(), b.size()); i++) {\n\t\tint p = S.find(a[i]);\n\t\tint q = S.find(b[i]);\n\n\t\tif (p != q) return p < q;\n\t}\n\treturn a.size() < b.size();\n}\n\nint main(void) {\n\tint t = 1;\n\tfor ( ; scanf(\"%d\", &N) == 1 && N != 0; ) {\n\t\tcin >> S;\n\t\t\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tcin >> P[i];\n\t\t}\n\n\t\tsort(P, P + N, cmp);\n\n\t\tcout << \"year \" << t++ << \"\\n\";\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tcout << P[i] << \"\\n\";\n\t\t}\n\t}\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "ĠT", "Ġgcd", "(", "T", "Ġa", ",", "ĠT", "Ġb", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "(!", "b", ")", "Ġreturn", "Ġa", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġgcd", "(", "b", ",", "Ġa", "Ġ%", "Ġb", ");", "Ċ", "}", "Ċ", "template", "<", "typename", "ĠT", ">", "ĠT", "Ġl", "cm", "(", "T", "Ġa", ",", "ĠT", "Ġb", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġa", "Ġ*", "Ġb", "Ġ/", "Ġgcd", "(", "a", ",", "Ġb", ");", "Ċ", "}", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "Ġvoid", "Ġch", "min", "(", "T", "&", "Ġa", ",", "ĠT", "Ġb", ")", "Ġ{", "Ġa", "Ġ=", "Ġ(", "a", "Ġ>", "Ġb", ")", "Ġ?", "Ġb", "Ġ:", "Ġa", ";", "Ġ}", "Ċ", "template", "<", "typename", "ĠT", ">", "Ġvoid", "Ġch", "max", "(", "T", "&", "Ġa", ",", "ĠT", "Ġb", ")", "Ġ{", "Ġa", "Ġ=", "Ġ(", "a", "Ġ<", "Ġb", ")", "Ġ?", "Ġb", "Ġ:", "Ġa", ";", "Ġ}", "Ċ", "int", "Ġin", "()", "Ġ{", "Ġint", "Ġx", ";", "Ġscanf", "(\"%", "d", "\",", "Ġ&", "x", ");", "Ġreturn", "Ġx", ";", "Ġ}", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "typedef", "Ġlong", "Ġlong", "ĠInt", ";", "Ċ", "typedef", "Ġunsigned", "Ġuint", ";", "Ċ", "Ċ", "const", "Ġint", "ĠMAX", "N", "Ġ=", "Ġ35", ";", "Ċ", "Ċ", "int", "ĠN", ";", "Ċ", "string", "ĠS", ",", "ĠP", "[", "MAX", "N", "];", "Ċ", "Ċ", "bool", "Ġcmp", "(", "string", "Ġa", ",", "Ġstring", "Ġb", ")", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġmin", "(", "a", ".", "size", "(),", "Ġb", ".", "size", "());", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "Ġp", "Ġ=", "ĠS", ".", "find", "(", "a", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "int", "Ġq", "Ġ=", "ĠS", ".", "find", "(", "b", "[", "i", "]);", "Ċ", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "p", "Ġ!=", "Ġq", ")", "Ġreturn", "Ġp", "Ġ<", "Ġq", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġa", ".", "size", "()", "Ġ<", "Ġb", ".", "size", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġt", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "for", "Ġ(", "Ġ;", "Ġscanf", "(\"%", "d", "\",", "Ġ&", "N", ")", "Ġ==", "Ġ1", "Ġ&&", "ĠN", "Ġ!=", "Ġ0", ";", "Ġ)", "Ġ{", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "ĠS", ";", "Ċ", "ĉĉĊ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠN", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉĉ", "ĉ", "cin", "Ġ>>", "ĠP", "[", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "sort", "(", "P", ",", "ĠP", "Ġ+", "ĠN", ",", "Ġcmp", ");", "Ċ", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "year", "Ġ\"", "Ġ<<", "Ġt", "++", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠN", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "ĠP", "[", "i", "]", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::523", "code": "class Solution {\npublic:\n    int coinChange(vector<int>& coins, int amount) {\n        const int n = coins.size();\n        int dp[amount + 1];\n        \n        \n        for (int i = 1; i <= amount; ++i) {\n            dp[i] = -1;\n        }\n        dp[0] = 0;\n        \n\n\n        for (int i = 0; i <= amount; ++i) {\n            for (int j = 0; j < n; ++j) {\n                int val = coins[j] + i;\n                if (val <= amount && dp[i] != -1) {\n                    if (dp[val] == -1) {\n                        dp[val] = dp[i] + 1;\n                    } else {\n                        dp[val] = min(dp[val], dp[i] + 1);\n                    }\n                }\n            }\n            // for (int k = 0; k <= amount; ++k) {\n            //     printf(\"%d \", dp[k]);\n            // }\n            // printf(\"\\n\");\n        }\n\n        return dp[amount];\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġint", "Ġcoin", "Change", "(", "vector", "<", "int", ">&", "Ġcoins", ",", "Ġint", "Ġamount", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġint", "Ġn", "Ġ=", "Ġcoins", ".", "size", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġdp", "[", "amount", "Ġ+", "Ġ1", "];", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġamount", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdp", "[", "i", "]", "Ġ=", "Ġ-", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdp", "[", "0", "]", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġamount", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġval", "Ġ=", "Ġcoins", "[", "j", "]", "Ġ+", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "val", "Ġ<=", "Ġamount", "Ġ&&", "Ġdp", "[", "i", "]", "Ġ!=", "Ġ-", "1", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "dp", "[", "val", "]", "Ġ==", "Ġ-", "1", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdp", "[", "val", "]", "Ġ=", "Ġdp", "[", "i", "]", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdp", "[", "val", "]", "Ġ=", "Ġmin", "(", "dp", "[", "val", "],", "Ġdp", "[", "i", "]", "Ġ+", "Ġ1", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ġfor", "Ġ(", "int", "Ġk", "Ġ=", "Ġ0", ";", "Ġk", "Ġ<=", "Ġamount", ";", "Ġ++", "k", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠĠĠĠ", "Ġprintf", "(\"%", "d", "Ġ\",", "Ġdp", "[", "k", "]);", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġdp", "[", "amount", "];", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::524", "code": "#include <sltbench/Bench.h>\n\n#include <iomanip>\n#include <iostream>\n\n\nnamespace {\n\nclass MyReporter : public sltbench::reporter::IReporter\n{\npublic:\n\tMyReporter() = default;\n\t~MyReporter() override = default;\n\npublic:\n\tvoid ReportBenchmarkStarted() override\n\t{\n\t\t// for example, ignore this event\n\t}\n\n\tvoid ReportBenchmarkFinished() override\n\t{\n\t\t// for example, ignore this event\n\t}\n\n\tvoid Report(\n\t\tconst std::string& name,\n\t\tconst std::string& params,\n\t\tsltbench::Verdict verdict,\n\t\tstd::chrono::nanoseconds timing_result) override\n\t{\n\t\tstd::cout\n\t\t\t<< std::left << std::setw(60) << name\n\t\t\t<< std::left << std::setw(25) << params\n\t\t\t<< std::left << std::setw(9) << ToString(verdict)\n\t\t\t<< std::right << std::setw(20) << timing_result.count() << std::endl;\n\t}\n\n\tvoid ReportWarning(sltbench::RunWarning warning) override\n\t{\n\t\t// for example, do not report warnings.\n\t}\n};\n\n} // namespace\n\nSLTBENCH_CONFIG().SetReporter(std::unique_ptr<MyReporter>(new MyReporter()));\n", "code_tokens": ["Ġ#", "include", "Ġ<", "slt", "bench", "/", "Bench", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "class", "ĠMy", "Reporter", "Ġ:", "Ġpublic", "Ġs", "lt", "bench", "::", "reporter", "::", "I", "Reporter", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "My", "Reporter", "()", "Ġ=", "Ġdefault", ";", "Ċ", "ĉ", "~", "My", "Reporter", "()", "Ġoverride", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "void", "ĠReport", "Benchmark", "Started", "()", "Ġoverride", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġfor", "Ġexample", ",", "Ġignore", "Ġthis", "Ġevent", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠReport", "Benchmark", "Finished", "()", "Ġoverride", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġfor", "Ġexample", ",", "Ġignore", "Ġthis", "Ġevent", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠReport", "(", "Ċ", "ĉ", "ĉ", "const", "Ġstd", "::", "string", "&", "Ġname", ",", "Ċ", "ĉ", "ĉ", "const", "Ġstd", "::", "string", "&", "Ġparams", ",", "Ċ", "ĉ", "ĉ", "slt", "bench", "::", "Ver", "dict", "Ġver", "dict", ",", "Ċ", "ĉ", "ĉ", "std", "::", "chrono", "::", "nan", "oseconds", "Ġtiming", "_", "result", ")", "Ġoverride", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ċ", "ĉĉ", "ĉ", "<<", "Ġstd", "::", "left", "Ġ<<", "Ġstd", "::", "setw", "(", "60", ")", "Ġ<<", "Ġname", "Ċ", "ĉĉ", "ĉ", "<<", "Ġstd", "::", "left", "Ġ<<", "Ġstd", "::", "setw", "(", "25", ")", "Ġ<<", "Ġparams", "Ċ", "ĉĉ", "ĉ", "<<", "Ġstd", "::", "left", "Ġ<<", "Ġstd", "::", "setw", "(", "9", ")", "Ġ<<", "ĠToString", "(", "ver", "dict", ")", "Ċ", "ĉĉ", "ĉ", "<<", "Ġstd", "::", "right", "Ġ<<", "Ġstd", "::", "setw", "(", "20", ")", "Ġ<<", "Ġtiming", "_", "result", ".", "count", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠReport", "Warning", "(", "slt", "bench", "::", "Run", "Warning", "Ġwarning", ")", "Ġoverride", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġfor", "Ġexample", ",", "Ġdo", "Ġnot", "Ġreport", "Ġwarnings", ".", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "S", "LT", "B", "ENCH", "_", "CONFIG", "().", "Set", "Reporter", "(", "std", "::", "unique", "_", "ptr", "<", "My", "Reporter", ">(", "new", "ĠMy", "Reporter", "()));", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::525", "code": "/*\n * arraytokenizer.hpp\n *\n *  Created on: Sep 28, 2015\n *      Author: zmij\n */\n\n#ifndef LIB_PG_ASYNC_INCLUDE_TIP_DB_PG_DETAIL_ARRAY_TOKENIZER_HPP_\n#define LIB_PG_ASYNC_INCLUDE_TIP_DB_PG_DETAIL_ARRAY_TOKENIZER_HPP_\n\n#include <tip/db/pg/detail/tokenizer_base.hpp>\n\nnamespace tip {\nnamespace db {\nnamespace pg {\nnamespace io {\nnamespace detail {\n\ntemplate < typename InputIterator >\nclass array_tokenizer {\npublic:\n\ttypedef InputIterator\t\t\t\t\t\t\t\titerator_type;\n\ttypedef tokenizer_base< InputIterator, '{', '}' >\ttokenizer_type;\npublic:\n\ttemplate< typename OutputIterator >\n\tarray_tokenizer(iterator_type& begin, iterator_type end, OutputIterator out)\n\t{\n\t\ttokenizer_type(begin, end, out);\n\t}\n};\n\n} /* namespace detail */\n}  // namespace io\n} /* namespace pg */\n} /* namespace db */\n} /* namespace tip */\n\n#endif /* LIB_PG_ASYNC_INCLUDE_TIP_DB_PG_DETAIL_ARRAY_TOKENIZER_HPP_ */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġarray", "tokenizer", ".", "hpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠSep", "Ġ28", ",", "Ġ2015", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "Ġz", "mi", "j", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠLIB", "_", "PG", "_", "ASYNC", "_", "INCLUDE", "_", "TIP", "_", "DB", "_", "PG", "_", "DETAIL", "_", "ARRAY", "_", "TOKEN", "IZER", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠLIB", "_", "PG", "_", "ASYNC", "_", "INCLUDE", "_", "TIP", "_", "DB", "_", "PG", "_", "DETAIL", "_", "ARRAY", "_", "TOKEN", "IZER", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "tip", "/", "db", "/", "pg", "/", "detail", "/", "tokenizer", "_", "base", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġtip", "Ġ{", "Ċ", "namespace", "Ġdb", "Ġ{", "Ċ", "namespace", "Ġpg", "Ġ{", "Ċ", "namespace", "Ġio", "Ġ{", "Ċ", "namespace", "Ġdetail", "Ġ{", "Ċ", "Ċ", "template", "Ġ<", "Ġtypename", "ĠInput", "Iterator", "Ġ>", "Ċ", "class", "Ġarray", "_", "tokenizer", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "typedef", "ĠInput", "Iterator", "ĉĉĉĉĉĉĉ", "ĉ", "iterator", "_", "type", ";", "Ċ", "ĉ", "typedef", "Ġtokenizer", "_", "base", "<", "ĠInput", "Iterator", ",", "Ġ'{", "',", "Ġ'}'", "Ġ>", "ĉ", "tokenizer", "_", "type", ";", "Ċ", "public", ":", "Ċ", "ĉ", "template", "<", "Ġtypename", "ĠOutput", "Iterator", "Ġ>", "Ċ", "ĉ", "array", "_", "tokenizer", "(", "iterator", "_", "type", "&", "Ġbegin", ",", "Ġiterator", "_", "type", "Ġend", ",", "ĠOutput", "Iterator", "Ġout", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "tokenizer", "_", "type", "(", "begin", ",", "Ġend", ",", "Ġout", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġdetail", "Ġ*/", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġio", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġpg", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġdb", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġtip", "Ġ*/", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠLIB", "_", "PG", "_", "ASYNC", "_", "INCLUDE", "_", "TIP", "_", "DB", "_", "PG", "_", "DETAIL", "_", "ARRAY", "_", "TOKEN", "IZER", "_", "HP", "P", "_", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::526", "code": "// Copyright (c) 2014, Ruslan Baratov\r\n// All rights reserved.\r\n\r\nclass Foo {\r\n public:\r\n  Foo() {\r\n  }\r\n};\r\n\r\nint main() {\r\n#include <leathers/push>\r\n#if !defined(SHOW_WARNINGS)\r\n# include <leathers/static-ctor-not-thread-safe>\r\n#endif\r\n  static Foo foo;\r\n#include <leathers/pop>\r\n}\r\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", ",", "ĠR", "us", "lan", "ĠBar", "at", "ov", "č", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "č", "Ċ", "č", "Ċ", "class", "ĠFoo", "Ġ{", "č", "Ċ", "Ġpublic", ":", "č", "Ċ", "Ġ", "ĠFoo", "()", "Ġ{", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "};", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "#", "include", "Ġ<", "le", "ath", "ers", "/", "push", ">", "č", "Ċ", "#", "if", "Ġ!", "defined", "(", "SHOW", "_", "WARNING", "S", ")", "č", "Ċ", "#", "Ġinclude", "Ġ<", "le", "ath", "ers", "/", "static", "-", "ctor", "-", "not", "-", "thread", "-", "safe", ">", "č", "Ċ", "#", "endif", "č", "Ċ", "Ġ", "Ġstatic", "ĠFoo", "Ġfoo", ";", "č", "Ċ", "#", "include", "Ġ<", "le", "ath", "ers", "/", "pop", ">", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::527", "code": "--- ./base/security_unittest.cc.orig\t2014-04-30 22:41:43.000000000 +0200\n+++ ./base/security_unittest.cc\t2014-05-04 14:38:46.000000000 +0200\n@@ -159,7 +159,7 @@\n // FAILS_ is too clunky.\n void OverflowTestsSoftExpectTrue(bool overflow_detected) {\n   if (!overflow_detected) {\n-#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_MACOSX)\n+#if defined(OS_POSIX) && !defined(OS_NACL)\n     // Sadly, on Linux, Android, and OSX we don't have a good story yet. Don't\n     // fail the test, but report.\n     printf(\"Platform has overflow: %s\\n\",\n", "code_tokens": ["Ġ---", "Ġ./", "base", "/", "security", "_", "unittest", ".", "cc", ".", "orig", "ĉ", "2014", "-", "04", "-", "30", "Ġ22", ":", "41", ":", "43", ".", "000000000", "Ġ+", "0200", "Ċ", "+++", "Ġ./", "base", "/", "security", "_", "unittest", ".", "cc", "ĉ", "2014", "-", "05", "-", "04", "Ġ14", ":", "38", ":", "46", ".", "000000000", "Ġ+", "0200", "Ċ", "@@", "Ġ-", "159", ",", "7", "Ġ+", "159", ",", "7", "Ġ@@", "Ċ", "Ġ//", "ĠFAIL", "S", "_", "Ġis", "Ġtoo", "Ġcl", "unk", "y", ".", "Ċ", "Ġvoid", "ĠOverflow", "Tests", "Soft", "Expect", "True", "(", "bool", "Ġoverflow", "_", "detected", ")", "Ġ{", "Ċ", "ĠĠ", "Ġif", "Ġ(!", "overflow", "_", "detected", ")", "Ġ{", "Ċ", "-", "#", "if", "Ġdefined", "(", "OS", "_", "LINUX", ")", "Ġ||", "Ġdefined", "(", "OS", "_", "ANDROID", ")", "Ġ||", "Ġdefined", "(", "OS", "_", "MAC", "OSX", ")", "Ċ", "+#", "if", "Ġdefined", "(", "OS", "_", "POSIX", ")", "Ġ&&", "Ġ!", "defined", "(", "OS", "_", "N", "ACL", ")", "Ċ", "ĠĠĠĠ", "Ġ//", "ĠS", "ad", "ly", ",", "Ġon", "ĠLinux", ",", "ĠAndroid", ",", "Ġand", "ĠOS", "X", "Ġwe", "Ġdon", "'t", "Ġhave", "Ġa", "Ġgood", "Ġstory", "Ġyet", ".", "ĠDon", "'t", "Ċ", "ĠĠĠĠ", "Ġ//", "Ġfail", "Ġthe", "Ġtest", ",", "Ġbut", "Ġreport", ".", "Ċ", "ĠĠĠĠ", "Ġprintf", "(\"", "Platform", "Ġhas", "Ġoverflow", ":", "Ġ%", "s", "\\", "n", "\",", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::528", "code": "/// HEADER\n#include <csapex/io/protcol/node_notes.h>\n\n/// PROJECT\n#include <csapex/serialization/io/std_io.h>\n#include <csapex/serialization/note_serializer.h>\n\nCSAPEX_REGISTER_NOTE_SERIALIZER(NodeNote)\n\nusing namespace csapex;\n\nNodeNote::NodeNote()\n{\n}\n\nNodeNote::NodeNote(NodeNoteType request_type, const AUUID& uuid) : NoteImplementation(uuid), note_type_(request_type)\n{\n}\n\nNodeNote::NodeNote(NodeNoteType request_type, const AUUID& uuid, const std::vector<std::any>& payload) : NoteImplementation(uuid), note_type_(request_type), payload_(payload)\n{\n}\n\nvoid NodeNote::serialize(SerializationBuffer& data, SemanticVersion& version) const\n{\n    Note::serialize(data, version);\n\n    data << note_type_;\n    data << payload_;\n}\n\nvoid NodeNote::deserialize(const SerializationBuffer& data, const SemanticVersion& version)\n{\n    Note::deserialize(data, version);\n\n    data >> note_type_;\n    data >> payload_;\n}\n", "code_tokens": ["Ġ///", "ĠHEADER", "Ċ", "#", "include", "Ġ<", "csa", "pex", "/", "io", "/", "prot", "col", "/", "node", "_", "notes", ".", "h", ">", "Ċ", "Ċ", "///", "ĠPRO", "JECT", "Ċ", "#", "include", "Ġ<", "csa", "pex", "/", "serialization", "/", "io", "/", "std", "_", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "csa", "pex", "/", "serialization", "/", "note", "_", "serializer", ".", "h", ">", "Ċ", "Ċ", "C", "SA", "PE", "X", "_", "REGISTER", "_", "NOTE", "_", "SERIAL", "IZER", "(", "Node", "Note", ")", "Ċ", "Ċ", "using", "Ġnamespace", "Ġc", "sa", "pex", ";", "Ċ", "Ċ", "Node", "Note", "::", "Node", "Note", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Node", "Note", "::", "Node", "Note", "(", "Node", "Note", "Type", "Ġrequest", "_", "type", ",", "Ġconst", "ĠA", "UUID", "&", "Ġuuid", ")", "Ġ:", "ĠNote", "Implementation", "(", "uuid", "),", "Ġnote", "_", "type", "_(", "request", "_", "type", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Node", "Note", "::", "Node", "Note", "(", "Node", "Note", "Type", "Ġrequest", "_", "type", ",", "Ġconst", "ĠA", "UUID", "&", "Ġuuid", ",", "Ġconst", "Ġstd", "::", "vector", "<", "std", "::", "any", ">&", "Ġpayload", ")", "Ġ:", "ĠNote", "Implementation", "(", "uuid", "),", "Ġnote", "_", "type", "_(", "request", "_", "type", "),", "Ġpayload", "_(", "payload", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNode", "Note", "::", "serialize", "(", "Serialization", "Buffer", "&", "Ġdata", ",", "ĠSemantic", "Version", "&", "Ġversion", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠNote", "::", "serialize", "(", "data", ",", "Ġversion", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġdata", "Ġ<<", "Ġnote", "_", "type", "_;", "Ċ", "ĠĠĠ", "Ġdata", "Ġ<<", "Ġpayload", "_;", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNode", "Note", "::", "deserialize", "(", "const", "ĠSerialization", "Buffer", "&", "Ġdata", ",", "Ġconst", "ĠSemantic", "Version", "&", "Ġversion", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠNote", "::", "deserialize", "(", "data", ",", "Ġversion", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġdata", "Ġ>>", "Ġnote", "_", "type", "_;", "Ċ", "ĠĠĠ", "Ġdata", "Ġ>>", "Ġpayload", "_;", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::529", "code": "#include <iostream>\n\nusing namespace std;\n\n/**\n * Definition for singly-linked list.\n */\nstruct ListNode {\n    int val;\n    ListNode *next;\n    ListNode(int x) : val(x), next(NULL) {}\n};\n\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if (!head)\n            return head;\n        ListNode *ret = head;\n        ListNode *pos = head;\n        head = pos->next;\n        while (head) {\n            if (head->val == pos->val) {\n                pos->next = head->next;\n                delete head;\n            } else {\n                pos = pos->next;\n            }\n            head = pos->next;\n        }\n        return ret;\n    }\n};\n\nint main(void)\n{\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠDefinition", "Ġfor", "Ġs", "ing", "ly", "-", "linked", "Ġlist", ".", "Ċ", "Ġ*/", "Ċ", "struct", "ĠList", "Node", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġval", ";", "Ċ", "ĠĠĠ", "ĠList", "Node", "Ġ*", "next", ";", "Ċ", "ĠĠĠ", "ĠList", "Node", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġnext", "(", "NULL", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠList", "Node", "*", "Ġdelete", "Duplicates", "(", "ListNode", "*", "Ġhead", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "head", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġhead", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠList", "Node", "Ġ*", "ret", "Ġ=", "Ġhead", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠList", "Node", "Ġ*", "pos", "Ġ=", "Ġhead", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġhead", "Ġ=", "Ġpos", "->", "next", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "head", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "head", "->", "val", "Ġ==", "Ġpos", "->", "val", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġpos", "->", "next", "Ġ=", "Ġhead", "->", "next", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdelete", "Ġhead", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġpos", "Ġ=", "Ġpos", "->", "next", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġhead", "Ġ=", "Ġpos", "->", "next", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġret", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::530", "code": "\n#include <luabind/luabind.hpp>\n#include \"scheduler.h\"\n\nnamespace graphic\n{\n\nvoid Scheduler::bind(lua_State *L)\n{\n\tusing namespace luabind;\n\n\tmodule_(L, \"graphic\")\n\t[\n\t\tclass_<Scheduler, SchedulerPtr >(\"Scheduler\")\n\t\t.def(constructor<RendererPtr const &>())\n\t\t.def(\"add\", &Scheduler::add)\n\t\t.def(\"flush\", &Scheduler::flush)\n\t\t.def(\"get_visible_calls_count\", &Scheduler::get_visible_calls_count)\n\t\t.def(\"get_invisible_calls_count\", &Scheduler::get_invisible_calls_count)\n\t];\n}\n\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "lu", "ab", "ind", "/", "lu", "ab", "ind", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "scheduler", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġgraphic", "Ċ", "{", "Ċ", "Ċ", "void", "ĠScheduler", "::", "bind", "(", "lua", "_", "State", "Ġ*", "L", ")", "Ċ", "{", "Ċ", "ĉ", "using", "Ġnamespace", "Ġlu", "ab", "ind", ";", "Ċ", "Ċ", "ĉ", "module", "_(", "L", ",", "Ġ\"", "graphic", "\")", "Ċ", "ĉ", "[", "Ċ", "ĉ", "ĉ", "class", "_<", "Scheduler", ",", "ĠScheduler", "Ptr", "Ġ>", "(\"", "Scheduler", "\")", "Ċ", "ĉ", "ĉ", ".", "def", "(", "constructor", "<", "Renderer", "Ptr", "Ġconst", "Ġ&", ">())", "Ċ", "ĉ", "ĉ", ".", "def", "(\"", "add", "\",", "Ġ&", "Scheduler", "::", "add", ")", "Ċ", "ĉ", "ĉ", ".", "def", "(\"", "flush", "\",", "Ġ&", "Scheduler", "::", "flush", ")", "Ċ", "ĉ", "ĉ", ".", "def", "(\"", "get", "_", "visible", "_", "calls", "_", "count", "\",", "Ġ&", "Scheduler", "::", "get", "_", "visible", "_", "calls", "_", "count", ")", "Ċ", "ĉ", "ĉ", ".", "def", "(\"", "get", "_", "invisible", "_", "calls", "_", "count", "\",", "Ġ&", "Scheduler", "::", "get", "_", "invisible", "_", "calls", "_", "count", ")", "Ċ", "ĉ", "];", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::531", "code": "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"components/performance_manager/persistence/site_data/site_data_reader.h\"\n\n#include <utility>\n\n#include \"base/bind.h\"\n#include \"base/callback.h\"\n#include \"components/performance_manager/persistence/site_data/site_data_impl.h\"\n\nnamespace performance_manager {\n\nSiteDataReader::SiteDataReader(scoped_refptr<internal::SiteDataImpl> impl)\n    : impl_(std::move(impl)) {}\n\nSiteDataReader::~SiteDataReader() {}\n\nperformance_manager::SiteFeatureUsage\nSiteDataReader::UpdatesFaviconInBackground() const {\n  return impl_->UpdatesFaviconInBackground();\n}\n\nperformance_manager::SiteFeatureUsage SiteDataReader::UpdatesTitleInBackground()\n    const {\n  return impl_->UpdatesTitleInBackground();\n}\n\nperformance_manager::SiteFeatureUsage SiteDataReader::UsesAudioInBackground()\n    const {\n  return impl_->UsesAudioInBackground();\n}\n\nbool SiteDataReader::DataLoaded() const {\n  return impl_->DataLoaded();\n}\n\nvoid SiteDataReader::RegisterDataLoadedCallback(base::OnceClosure&& callback) {\n  // Register a closure that is bound using a weak pointer to this instance.\n  // In that way it won't be invoked by the underlying |impl_| after this\n  // reader is destroyed.\n  base::OnceClosure closure(base::BindOnce(&SiteDataReader::RunClosure,\n                                           weak_factory_.GetWeakPtr(),\n                                           std::move(callback)));\n  impl_->RegisterDataLoadedCallback(std::move(closure));\n}\n\nvoid SiteDataReader::RunClosure(base::OnceClosure&& closure) {\n  std::move(closure).Run();\n}\n\n}  // namespace performance_manager\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ201", "9", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "components", "/", "performance", "_", "manager", "/", "persistence", "/", "site", "_", "data", "/", "site", "_", "data", "_", "reader", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "bind", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "callback", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "components", "/", "performance", "_", "manager", "/", "persistence", "/", "site", "_", "data", "/", "site", "_", "data", "_", "impl", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġperformance", "_", "manager", "Ġ{", "Ċ", "Ċ", "Site", "DataReader", "::", "Site", "DataReader", "(", "scoped", "_", "ref", "ptr", "<", "internal", "::", "Site", "Data", "Impl", ">", "Ġimpl", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġimpl", "_(", "std", "::", "move", "(", "impl", "))", "Ġ{}", "Ċ", "Ċ", "Site", "DataReader", "::~", "Site", "DataReader", "()", "Ġ{}", "Ċ", "Ċ", "performance", "_", "manager", "::", "Site", "Feature", "Usage", "Ċ", "Site", "DataReader", "::", "Updates", "Fav", "icon", "In", "Background", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġimpl", "_->", "Updates", "Fav", "icon", "In", "Background", "();", "Ċ", "}", "Ċ", "Ċ", "performance", "_", "manager", "::", "Site", "Feature", "Usage", "ĠSite", "DataReader", "::", "Updates", "Title", "In", "Background", "()", "Ċ", "ĠĠĠ", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġimpl", "_->", "Updates", "Title", "In", "Background", "();", "Ċ", "}", "Ċ", "Ċ", "performance", "_", "manager", "::", "Site", "Feature", "Usage", "ĠSite", "DataReader", "::", "Uses", "Audio", "In", "Background", "()", "Ċ", "ĠĠĠ", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġimpl", "_->", "Uses", "Audio", "In", "Background", "();", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠSite", "DataReader", "::", "Data", "Loaded", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġimpl", "_->", "Data", "Loaded", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSite", "DataReader", "::", "Register", "Data", "Loaded", "Callback", "(", "base", "::", "Once", "Closure", "&&", "Ġcallback", ")", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠRegister", "Ġa", "Ġclosure", "Ġthat", "Ġis", "Ġbound", "Ġusing", "Ġa", "Ġweak", "Ġpointer", "Ġto", "Ġthis", "Ġinstance", ".", "Ċ", "Ġ", "Ġ//", "ĠIn", "Ġthat", "Ġway", "Ġit", "Ġwon", "'t", "Ġbe", "Ġinvoked", "Ġby", "Ġthe", "Ġunderlying", "Ġ|", "impl", "_", "|", "Ġafter", "Ġthis", "Ċ", "Ġ", "Ġ//", "Ġreader", "Ġis", "Ġdestroyed", ".", "Ċ", "Ġ", "Ġbase", "::", "Once", "Closure", "Ġclosure", "(", "base", "::", "Bind", "Once", "(&", "Site", "DataReader", "::", "Run", "Closure", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġweak", "_", "factory", "_.", "Get", "Weak", "Ptr", "(),", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "move", "(", "callback", ")));", "Ċ", "Ġ", "Ġimpl", "_->", "Register", "Data", "Loaded", "Callback", "(", "std", "::", "move", "(", "closure", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSite", "DataReader", "::", "Run", "Closure", "(", "base", "::", "Once", "Closure", "&&", "Ġclosure", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "move", "(", "closure", ").", "Run", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġperformance", "_", "manager", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::532", "code": "#ifndef INSTANCE_H\n#define INSTANCE_H\n\n#include \"ECStd.hpp\"\n#include \"Graphics.hpp\"\n#include \"InputMan.hpp\"\n\nclass Instance\n{\n    bool _running;\npublic: \n    const uint WIDTH = 1024, \n               HEIGHT = 768;\n\n    SDL_Surface* surface;\n\n    InputMan* in;\n    Bitmap* screen;\n\n    Instance();\n    virtual ~Instance();\n\n    // Call this to stop the main loop\n    void stop(void);\n\n    // The main run loop - unmodifiable by inheritors\n    // Call to start\n    bool run(void);\n\n    /* Abstract Methods (Must be implemented) */\n\n    // Called when the main loop startd\n    virtual bool on_start(void) = 0;\n\n    // Called on stop\n    virtual void on_stop(void) = 0;\n\n    // Called by the main loop. ALL RENDERING SHOULD BE DONE HERE.\n    virtual void render(Graphics* g) = 0;\n\n    // Called by the main loop. Use to 'tick' components (eg entities, level)\n    virtual void tick(void) = 0;\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠINST", "ANCE", "_", "H", "Ċ", "#", "define", "ĠINST", "ANCE", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ\"", "EC", "Std", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Graphics", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Input", "Man", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠInstance", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġbool", "Ġ_", "running", ";", "Ċ", "public", ":", "ĠĊ", "ĠĠĠ", "Ġconst", "Ġuint", "ĠWIDTH", "Ġ=", "Ġ1024", ",", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠHE", "IGHT", "Ġ=", "Ġ768", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠSDL", "_", "Surface", "*", "Ġsurface", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠInput", "Man", "*", "Ġin", ";", "Ċ", "ĠĠĠ", "ĠBitmap", "*", "Ġscreen", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠInstance", "();", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "Instance", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠCall", "Ġthis", "Ġto", "Ġstop", "Ġthe", "Ġmain", "Ġloop", "Ċ", "ĠĠĠ", "Ġvoid", "Ġstop", "(", "void", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠThe", "Ġmain", "Ġrun", "Ġloop", "Ġ-", "Ġun", "modifiable", "Ġby", "Ġin", "her", "itor", "s", "Ċ", "ĠĠĠ", "Ġ//", "ĠCall", "Ġto", "Ġstart", "Ċ", "ĠĠĠ", "Ġbool", "Ġrun", "(", "void", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ/*", "ĠAbstract", "ĠMethods", "Ġ(", "Must", "Ġbe", "Ġimplemented", ")", "Ġ*/", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠCalled", "Ġwhen", "Ġthe", "Ġmain", "Ġloop", "Ġstart", "d", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "Ġon", "_", "start", "(", "void", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠCalled", "Ġon", "Ġstop", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġon", "_", "stop", "(", "void", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠCalled", "Ġby", "Ġthe", "Ġmain", "Ġloop", ".", "ĠALL", "ĠRE", "NDER", "ING", "ĠSHOULD", "ĠBE", "ĠDONE", "ĠH", "ERE", ".", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġrender", "(", "Graphics", "*", "Ġg", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠCalled", "Ġby", "Ġthe", "Ġmain", "Ġloop", ".", "ĠUse", "Ġto", "Ġ'", "tick", "'", "Ġcomponents", "Ġ(", "eg", "Ġentities", ",", "Ġlevel", ")", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġtick", "(", "void", ")", "Ġ=", "Ġ0", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::533", "code": "#ifndef _FEEDFORWARD_H_\n#define _FEEDFORWARD_H_\n\n#include <vector>\n\n#include \"Layer.hpp\"\n#include \"Loss.hpp\"\n#include \"types.hpp\"\n\nclass FeedForward\n{\n\tpublic:\n\t\tFeedForward(const std::vector<Layer *> &layervec, Loss *lf);\n\t\tvirtual ~FeedForward();\n\t\tvoid save(std::ostream &os);\n\t\tvoid load(std::istream &is);\n\t\tvoid train(const nnet_float *features, const nnet_float *labels, const std::size_t numInstances, std::uint32_t epochs, std::uint32_t batchSize);\n\t\tvoid predict(const nnet_float *features, nnet_float *labels);\n\t\tstd::string toString() const;\n\t\tsize_t outputsSize() const;\n\t\tconst std::vector<Layer *> &getLayers() const;\n\n\tprivate:\n\t\tstd::uint32_t numFeatures;\n\t\tstd::uint32_t numLabels;\n\t\tLoss *lossFunction;\n\n\t\tstd::vector<Layer *> layers;\n\t\tnnet_float *hypothesis;\n\n\t\tvoid forward(const nnet_float *features);\n\t\tvoid backward(const nnet_float *features);\n\t\tvoid update(const unsigned int batchSize);\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "Ġ_", "FEED", "FORWARD", "_", "H", "_", "Ċ", "#", "define", "Ġ_", "FEED", "FORWARD", "_", "H", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Layer", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Loss", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "types", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠFeed", "Forward", "Ċ", "{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "Feed", "Forward", "(", "const", "Ġstd", "::", "vector", "<", "Layer", "Ġ*>", "Ġ&", "layer", "vec", ",", "ĠLo", "ss", "Ġ*", "lf", ");", "Ċ", "ĉ", "ĉ", "virtual", "Ġ~", "Feed", "Forward", "();", "Ċ", "ĉ", "ĉ", "void", "Ġsave", "(", "std", "::", "ostream", "Ġ&", "os", ");", "Ċ", "ĉ", "ĉ", "void", "Ġload", "(", "std", "::", "istream", "Ġ&", "is", ");", "Ċ", "ĉ", "ĉ", "void", "Ġtrain", "(", "const", "Ġn", "net", "_", "float", "Ġ*", "features", ",", "Ġconst", "Ġn", "net", "_", "float", "Ġ*", "labels", ",", "Ġconst", "Ġstd", "::", "size", "_", "t", "Ġnum", "Instances", ",", "Ġstd", "::", "uint", "32", "_", "t", "Ġepochs", ",", "Ġstd", "::", "uint", "32", "_", "t", "ĠbatchSize", ");", "Ċ", "ĉ", "ĉ", "void", "Ġpredict", "(", "const", "Ġn", "net", "_", "float", "Ġ*", "features", ",", "Ġn", "net", "_", "float", "Ġ*", "labels", ");", "Ċ", "ĉ", "ĉ", "std", "::", "string", "ĠtoString", "()", "Ġconst", ";", "Ċ", "ĉ", "ĉ", "size", "_", "t", "Ġoutputs", "Size", "()", "Ġconst", ";", "Ċ", "ĉ", "ĉ", "const", "Ġstd", "::", "vector", "<", "Layer", "Ġ*>", "Ġ&", "get", "Layers", "()", "Ġconst", ";", "Ċ", "Ċ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "std", "::", "uint", "32", "_", "t", "Ġnum", "Features", ";", "Ċ", "ĉ", "ĉ", "std", "::", "uint", "32", "_", "t", "Ġnum", "Labels", ";", "Ċ", "ĉ", "ĉ", "Loss", "Ġ*", "loss", "Function", ";", "Ċ", "Ċ", "ĉ", "ĉ", "std", "::", "vector", "<", "Layer", "Ġ*>", "Ġlayers", ";", "Ċ", "ĉ", "ĉ", "n", "net", "_", "float", "Ġ*", "hy", "pothesis", ";", "Ċ", "Ċ", "ĉ", "ĉ", "void", "Ġforward", "(", "const", "Ġn", "net", "_", "float", "Ġ*", "features", ");", "Ċ", "ĉ", "ĉ", "void", "Ġbackward", "(", "const", "Ġn", "net", "_", "float", "Ġ*", "features", ");", "Ċ", "ĉ", "ĉ", "void", "Ġupdate", "(", "const", "Ġunsigned", "Ġint", "ĠbatchSize", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::534", "code": "#include \"orca_gazebo/orca_gazebo_util.h\"\n\nvoid testGaussianKernel()\n{\n  // Anything outside of 4 stddev on either side is an outlier, and go in the first and last buckets\n\n  constexpr int NUM_BUCKETS = 10;\n  constexpr double MEAN = NUM_BUCKETS / 2;\n  constexpr double STDDEV = 1;\n  constexpr double BUCKET_WIDTH = STDDEV * 8 / (NUM_BUCKETS - 2);\n\n  std::vector<int>h(NUM_BUCKETS);\n\n  for (int s = 0; s < 10000; ++s)\n  {\n    double m = orca_gazebo::gaussianKernel(MEAN, STDDEV);\n    int i = static_cast<int>(m / BUCKET_WIDTH);\n    if (i < 0) i = 0;\n    if (i >= NUM_BUCKETS) i = NUM_BUCKETS - 1;\n    h[i]++;\n  }\n\n  for (int i = 0; i < h.size(); ++i)\n  {\n    std::cout << \"Bucket \" << i << \", \" << h[i] << std::endl;\n  }\n}\n\nint main(int argc, char** argv)\n{\n  testGaussianKernel();\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "or", "ca", "_", "g", "aze", "bo", "/", "or", "ca", "_", "g", "aze", "bo", "_", "util", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġtest", "Gaussian", "Kernel", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠAnything", "Ġoutside", "Ġof", "Ġ4", "Ġstddev", "Ġon", "Ġeither", "Ġside", "Ġis", "Ġan", "Ġout", "lier", ",", "Ġand", "Ġgo", "Ġin", "Ġthe", "Ġfirst", "Ġand", "Ġlast", "Ġbuckets", "Ċ", "Ċ", "Ġ", "Ġconstexpr", "Ġint", "ĠNUM", "_", "BUCKET", "S", "Ġ=", "Ġ10", ";", "Ċ", "Ġ", "Ġconstexpr", "Ġdouble", "ĠME", "AN", "Ġ=", "ĠNUM", "_", "BUCKET", "S", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġconstexpr", "Ġdouble", "ĠSTD", "DEV", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġconstexpr", "Ġdouble", "ĠBU", "CK", "ET", "_", "WIDTH", "Ġ=", "ĠSTD", "DEV", "Ġ*", "Ġ8", "Ġ/", "Ġ(", "NUM", "_", "BUCKET", "S", "Ġ-", "Ġ2", ");", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "h", "(", "NUM", "_", "BUCKET", "S", ");", "Ċ", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġs", "Ġ=", "Ġ0", ";", "Ġs", "Ġ<", "Ġ10000", ";", "Ġ++", "s", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġdouble", "Ġm", "Ġ=", "Ġor", "ca", "_", "g", "aze", "bo", "::", "gaussian", "Kernel", "(", "ME", "AN", ",", "ĠSTD", "DEV", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġi", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "m", "Ġ/", "ĠBU", "CK", "ET", "_", "WIDTH", ");", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "i", "Ġ<", "Ġ0", ")", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "i", "Ġ>=", "ĠNUM", "_", "BUCKET", "S", ")", "Ġi", "Ġ=", "ĠNUM", "_", "BUCKET", "S", "Ġ-", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġh", "[", "i", "]++;", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġh", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Bucket", "Ġ\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġh", "[", "i", "]", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "Gaussian", "Kernel", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::535", "code": "#ifndef I_ASSET_PRESENTATION_PROVIDER_HPP\n#define I_ASSET_PRESENTATION_PROVIDER_HPP\n\n#include \"core_data_model/i_item.hpp\"\n\nnamespace wgt\n{\nclass IAssetObjectItem;\n\n/**\n IAssetPresentationProviderOld\n An interface to a class that can provide the specific presentation data for studio assets. Each studio or plugin\n will need to implement a provider that will interpret asset data per their specifications (e.g. file type icons,\n thumbnail generation/rendering routines, etc.).\n\n NOTE: This class is a temporary measure to provide presentation support. Once the data models have been cleaned\n       up to remove file system dependencies, this will all be moved back into custom IAssetObjectItem implementations.\n */\nclass IAssetPresentationProvider\n{\npublic:\n\tIAssetPresentationProvider()\n\t{\n\t}\n\tvirtual ~IAssetPresentationProvider()\n\t{\n\t}\n\n\tvirtual ThumbnailData getThumbnail(const IAssetObjectItem* asset) = 0;\n\tvirtual ThumbnailData getStatusIconData(const IAssetObjectItem* asset) = 0;\n\tvirtual const char* getTypeIconResourceString(const IAssetObjectItem* asset) const = 0;\n};\n} // end namespace wgt\n#endif // I_ASSET_PRESENTATION_PROVIDER_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠI", "_", "ASSET", "_", "PRESENT", "ATION", "_", "PROVIDER", "_", "HP", "P", "Ċ", "#", "define", "ĠI", "_", "ASSET", "_", "PRESENT", "ATION", "_", "PROVIDER", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "core", "_", "data", "_", "model", "/", "i", "_", "item", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġw", "gt", "Ċ", "{", "Ċ", "class", "ĠI", "Asset", "Object", "Item", ";", "Ċ", "Ċ", "/**", "Ċ", "ĠI", "Asset", "Presentation", "Provider", "Old", "Ċ", "ĠAn", "Ġinterface", "Ġto", "Ġa", "Ġclass", "Ġthat", "Ġcan", "Ġprovide", "Ġthe", "Ġspecific", "Ġpresentation", "Ġdata", "Ġfor", "Ġst", "udio", "Ġassets", ".", "ĠEach", "Ġst", "udio", "Ġor", "Ġplugin", "Ċ", "Ġwill", "Ġneed", "Ġto", "Ġimplement", "Ġa", "Ġprovider", "Ġthat", "Ġwill", "Ġinterpret", "Ġasset", "Ġdata", "Ġper", "Ġtheir", "Ġspecifications", "Ġ(", "e", ".", "g", ".", "Ġfile", "Ġtype", "Ġicons", ",", "Ċ", "Ġthumbnail", "Ġgeneration", "/", "rendering", "Ġroutines", ",", "Ġetc", ".", ").", "Ċ", "Ċ", "ĠNOTE", ":", "ĠThis", "Ġclass", "Ġis", "Ġa", "Ġtemporary", "Ġmeasure", "Ġto", "Ġprovide", "Ġpresentation", "Ġsupport", ".", "ĠOnce", "Ġthe", "Ġdata", "Ġmodels", "Ġhave", "Ġbeen", "Ġcleaned", "Ċ", "ĠĠĠĠĠĠ", "Ġup", "Ġto", "Ġremove", "Ġfile", "Ġsystem", "Ġdependencies", ",", "Ġthis", "Ġwill", "Ġall", "Ġbe", "Ġmoved", "Ġback", "Ġinto", "Ġcustom", "ĠI", "Asset", "Object", "Item", "Ġimplementations", ".", "Ċ", "Ġ*/", "Ċ", "class", "ĠI", "Asset", "Presentation", "Provider", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "I", "Asset", "Presentation", "Provider", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "ĉ", "virtual", "Ġ~", "I", "Asset", "Presentation", "Provider", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "virtual", "ĠTh", "umbnail", "Data", "Ġget", "Thumbnail", "(", "const", "ĠI", "Asset", "Object", "Item", "*", "Ġasset", ")", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "virtual", "ĠTh", "umbnail", "Data", "ĠgetStatus", "Icon", "Data", "(", "const", "ĠI", "Asset", "Object", "Item", "*", "Ġasset", ")", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "virtual", "Ġconst", "Ġchar", "*", "ĠgetType", "Icon", "Resource", "String", "(", "const", "ĠI", "Asset", "Object", "Item", "*", "Ġasset", ")", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "};", "Ċ", "}", "Ġ//", "Ġend", "Ġnamespace", "Ġw", "gt", "Ċ", "#", "endif", "Ġ//", "ĠI", "_", "ASSET", "_", "PRESENT", "ATION", "_", "PROVIDER", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::536", "code": "#include \"sdl_initerror.hpp\"\n\n///\n/// \\brief SDL_InitError::SDL_InitError - Initializes the custom exception class, gets the most recent error message\n///\nSDL_InitError::SDL_InitError():\n    exception(), msg(SDL_GetError()) {}\n\n///\n/// \\brief SDL_InitError::SDL_InitError - Initializes the custom exception class, sets the error message to a user defined string\n/// \\param m\n///\nSDL_InitError::SDL_InitError(const std::string& m):\n    exception(), msg(m) {}\n\n///\n/// \\brief SDL_InitError::~SDL_InitError - Destructor, does nothing, there is nothing ot be released\n///\nSDL_InitError::~SDL_InitError() throw() {}\n\n///\n/// \\brief SDL_InitError::what - Returns either the most recent error message or a user defined message, depending on which constructor was used\n/// \\return - The error message\n///\nconst char* SDL_InitError::what_failed() const throw() {\n    return this->msg.c_str();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "sdl", "_", "init", "error", ".", "hpp", "\"", "Ċ", "Ċ", "///", "Ċ", "///", "Ġ\\", "brief", "ĠSDL", "_", "Init", "Error", "::", "SDL", "_", "Init", "Error", "Ġ-", "ĠInitializes", "Ġthe", "Ġcustom", "Ġexception", "Ġclass", ",", "Ġgets", "Ġthe", "Ġmost", "Ġrecent", "Ġerror", "Ġmessage", "Ċ", "///", "Ċ", "SDL", "_", "Init", "Error", "::", "SDL", "_", "Init", "Error", "():", "Ċ", "ĠĠĠ", "Ġexception", "(),", "Ġmsg", "(", "SDL", "_", "GetError", "())", "Ġ{}", "Ċ", "Ċ", "///", "Ċ", "///", "Ġ\\", "brief", "ĠSDL", "_", "Init", "Error", "::", "SDL", "_", "Init", "Error", "Ġ-", "ĠInitializes", "Ġthe", "Ġcustom", "Ġexception", "Ġclass", ",", "Ġsets", "Ġthe", "Ġerror", "Ġmessage", "Ġto", "Ġa", "Ġuser", "Ġdefined", "Ġstring", "Ċ", "///", "Ġ\\", "param", "Ġm", "Ċ", "///", "Ċ", "SDL", "_", "Init", "Error", "::", "SDL", "_", "Init", "Error", "(", "const", "Ġstd", "::", "string", "&", "Ġm", "):", "Ċ", "ĠĠĠ", "Ġexception", "(),", "Ġmsg", "(", "m", ")", "Ġ{}", "Ċ", "Ċ", "///", "Ċ", "///", "Ġ\\", "brief", "ĠSDL", "_", "Init", "Error", "::~", "SDL", "_", "Init", "Error", "Ġ-", "ĠDestructor", ",", "Ġdoes", "Ġnothing", ",", "Ġthere", "Ġis", "Ġnothing", "Ġot", "Ġbe", "Ġreleased", "Ċ", "///", "Ċ", "SDL", "_", "Init", "Error", "::~", "SDL", "_", "Init", "Error", "()", "Ġthrow", "()", "Ġ{}", "Ċ", "Ċ", "///", "Ċ", "///", "Ġ\\", "brief", "ĠSDL", "_", "Init", "Error", "::", "what", "Ġ-", "ĠReturns", "Ġeither", "Ġthe", "Ġmost", "Ġrecent", "Ġerror", "Ġmessage", "Ġor", "Ġa", "Ġuser", "Ġdefined", "Ġmessage", ",", "Ġdepending", "Ġon", "Ġwhich", "Ġconstructor", "Ġwas", "Ġused", "Ċ", "///", "Ġ\\", "return", "Ġ-", "ĠThe", "Ġerror", "Ġmessage", "Ċ", "///", "Ċ", "const", "Ġchar", "*", "ĠSDL", "_", "Init", "Error", "::", "what", "_", "failed", "()", "Ġconst", "Ġthrow", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġthis", "->", "msg", ".", "c", "_", "str", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::537", "code": "//Kappy ; While Loop program\n//While.cpp : Shows how the while loop is used\n\n#include <iostream>\n\nusing namespace std;\n\nvoid main()\n{\n\tdouble amountOfSyrup, numOfWaffles;\n\tamountOfSyrup = 2.6;\n\n\tcout << \"How many waffles do you have? \";\n\tcin >> numOfWaffles;\n\tcout << endl;\n\n\twhile(amountOfSyrup > 0 && numOfWaffles > 0)\n\t{\n\t\tnumOfWaffles = numOfWaffles - 0.25;\n\t\tamountOfSyrup = amountOfSyrup - 0.125;\n\t}\n\n\tif(amountOfSyrup < 0)\n\t{\n\t\tcout << \"You ran out of syrup!\" << endl;\n\t}\n\telse if(numOfWaffles == 0)\n\t{\n\t\tcout << \"You ran out of waffles!\" << endl;\n\t}\n\n\tsystem(\"PAUSE\");\n}", "code_tokens": ["Ġ//", "K", "appy", "Ġ;", "ĠWhile", "ĠLoop", "Ġprogram", "Ċ", "//", "While", ".", "cpp", "Ġ:", "ĠShow", "s", "Ġhow", "Ġthe", "Ġwhile", "Ġloop", "Ġis", "Ġused", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "double", "Ġamount", "Of", "Sy", "r", "up", ",", "ĠnumOf", "W", "aff", "les", ";", "Ċ", "ĉ", "amount", "Of", "Sy", "r", "up", "Ġ=", "Ġ2", ".", "6", ";", "Ċ", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "How", "Ġmany", "Ġw", "aff", "les", "Ġdo", "Ġyou", "Ġhave", "?", "Ġ\";", "Ċ", "ĉ", "cin", "Ġ>>", "ĠnumOf", "W", "aff", "les", ";", "Ċ", "ĉ", "cout", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĉ", "while", "(", "amount", "Of", "Sy", "r", "up", "Ġ>", "Ġ0", "Ġ&&", "ĠnumOf", "W", "aff", "les", "Ġ>", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "numOf", "W", "aff", "les", "Ġ=", "ĠnumOf", "W", "aff", "les", "Ġ-", "Ġ0", ".", "25", ";", "Ċ", "ĉ", "ĉ", "amount", "Of", "Sy", "r", "up", "Ġ=", "Ġamount", "Of", "Sy", "r", "up", "Ġ-", "Ġ0", ".", "125", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "if", "(", "amount", "Of", "Sy", "r", "up", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "You", "Ġran", "Ġout", "Ġof", "Ġsy", "r", "up", "!\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġif", "(", "numOf", "W", "aff", "les", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "You", "Ġran", "Ġout", "Ġof", "Ġw", "aff", "les", "!\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "system", "(\"", "PAUSE", "\");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::538", "code": "#include <boost/container/vector.hpp>\n#include <boost/move/utility_core.hpp>\n#include <cassert>\n\n// Non-copyable class\nclass non_copyable {\n\tBOOST_MOVABLE_BUT_NOT_COPYABLE(non_copyable)\n\n  public:\n\t  non_copyable() {}\n\t  non_copyable(BOOST_RV_REF(non_copyable)) {}\n\t  non_copyable& operator=(BOOST_RV_REF(non_copyable)) {\n\t\t  return *this;\n\t  }\n};\n\nint main() {\n\tusing namespace boost::container;\n\n\t// Store non-copyable objects in a vector\n\tvector<non_copyable> v;\n\tnon_copyable nc;\n\tv.push_back(boost::move(nc));\n\tassert(v.size() == 1);\n\n\t// Reserve no longer needs copy-constructible\n\tv.reserve(100);\n\tassert(v.capacity() >= 100);\n\n\t// This resize overload only needs movable and default constructible\n\tv.resize(200);\n\tassert(v.size() == 200);\n\n\t// Containers are also movable\n\tvector<non_copyable> v_other(boost::move(v));\n\tassert(v_other.size() == 200);\n\tassert(v.empty());\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "boost", "/", "container", "/", "vector", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "move", "/", "utility", "_", "core", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "//", "ĠNon", "-", "copy", "able", "Ġclass", "Ċ", "class", "Ġnon", "_", "copy", "able", "Ġ{", "Ċ", "ĉ", "BOOST", "_", "MOV", "ABLE", "_", "B", "UT", "_", "NOT", "_", "COPY", "ABLE", "(", "non", "_", "copy", "able", ")", "Ċ", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĉĠ", "Ġnon", "_", "copy", "able", "()", "Ġ{}", "Ċ", "ĉĠ", "Ġnon", "_", "copy", "able", "(", "BOOST", "_", "RV", "_", "REF", "(", "non", "_", "copy", "able", "))", "Ġ{}", "Ċ", "ĉĠ", "Ġnon", "_", "copy", "able", "&", "Ġoperator", "=(", "BOOST", "_", "RV", "_", "REF", "(", "non", "_", "copy", "able", "))", "Ġ{", "Ċ", "ĉĉĠ", "Ġreturn", "Ġ*", "this", ";", "Ċ", "ĉĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "using", "Ġnamespace", "Ġboost", "::", "container", ";", "Ċ", "Ċ", "ĉ", "//", "ĠStore", "Ġnon", "-", "copy", "able", "Ġobjects", "Ġin", "Ġa", "Ġvector", "Ċ", "ĉ", "vector", "<", "non", "_", "copy", "able", ">", "Ġv", ";", "Ċ", "ĉ", "non", "_", "copy", "able", "Ġnc", ";", "Ċ", "ĉ", "v", ".", "push", "_", "back", "(", "boost", "::", "move", "(", "nc", "));", "Ċ", "ĉ", "assert", "(", "v", ".", "size", "()", "Ġ==", "Ġ1", ");", "Ċ", "Ċ", "ĉ", "//", "ĠReserve", "Ġno", "Ġlonger", "Ġneeds", "Ġcopy", "-", "construct", "ible", "Ċ", "ĉ", "v", ".", "reserve", "(", "100", ");", "Ċ", "ĉ", "assert", "(", "v", ".", "capacity", "()", "Ġ>=", "Ġ100", ");", "Ċ", "Ċ", "ĉ", "//", "ĠThis", "Ġresize", "Ġoverload", "Ġonly", "Ġneeds", "Ġmov", "able", "Ġand", "Ġdefault", "Ġconstruct", "ible", "Ċ", "ĉ", "v", ".", "resize", "(", "200", ");", "Ċ", "ĉ", "assert", "(", "v", ".", "size", "()", "Ġ==", "Ġ200", ");", "Ċ", "Ċ", "ĉ", "//", "ĠCont", "ain", "ers", "Ġare", "Ġalso", "Ġmov", "able", "Ċ", "ĉ", "vector", "<", "non", "_", "copy", "able", ">", "Ġv", "_", "other", "(", "boost", "::", "move", "(", "v", "));", "Ċ", "ĉ", "assert", "(", "v", "_", "other", ".", "size", "()", "Ġ==", "Ġ200", ");", "Ċ", "ĉ", "assert", "(", "v", ".", "empty", "());", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::539", "code": "// Copyright (c) 2015, Samvel Khalatyan. All rights reserved.\n\n#include <unistd.h>\n#include <stdio.h>\n\n#include <initializer_list>\n\nnamespace {\n\nconst char* StdFilename(int fd) {\n    if (fd > STDERR_FILENO) {\n        return \"invalid file descriptor\";\n    }\n    const char* fnames[] {\"stdin\", \"stdout\", \"stderr\"};\n    return fnames[fd];\n}\n\nvoid Seek(int fd) {\n    off_t offset = lseek(fd, 0, SEEK_CUR);\n    if (-1 == offset) {\n        printf(\"%s offset: can not be seeked\\n\", StdFilename(fd));\n    } else {\n        printf(\"%s offset: %ld\\n\", StdFilename(fd), offset);\n    }\n}\n\n}  // namespace\n\nint main(int, char* []) {\n    for (auto fd : {STDIN_FILENO, STDOUT_FILENO, STDERR_FILENO}) {\n        Seek(fd);\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", ",", "ĠSam", "vel", "ĠK", "hal", "aty", "an", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "initializer", "_", "list", ">", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "const", "Ġchar", "*", "ĠStd", "Filename", "(", "int", "Ġfd", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "fd", "Ġ>", "ĠSTD", "ERR", "_", "FILENO", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ\"", "invalid", "Ġfile", "Ġdescriptor", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġconst", "Ġchar", "*", "Ġf", "names", "[]", "Ġ{\"", "stdin", "\",", "Ġ\"", "stdout", "\",", "Ġ\"", "stderr", "\"};", "Ċ", "ĠĠĠ", "Ġreturn", "Ġf", "names", "[", "fd", "];", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSeek", "(", "int", "Ġfd", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġoff", "_", "t", "Ġoffset", "Ġ=", "Ġl", "seek", "(", "fd", ",", "Ġ0", ",", "ĠSEEK", "_", "CUR", ");", "Ċ", "ĠĠĠ", "Ġif", "Ġ(-", "1", "Ġ==", "Ġoffset", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "s", "Ġoffset", ":", "Ġcan", "Ġnot", "Ġbe", "Ġseek", "ed", "\\", "n", "\",", "ĠStd", "Filename", "(", "fd", "));", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "s", "Ġoffset", ":", "Ġ%", "ld", "\\", "n", "\",", "ĠStd", "Filename", "(", "fd", "),", "Ġoffset", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "*", "Ġ[])", "Ġ{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġfd", "Ġ:", "Ġ{", "STDIN", "_", "FILENO", ",", "ĠSTDOUT", "_", "FILENO", ",", "ĠSTD", "ERR", "_", "FILENO", "})", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSeek", "(", "fd", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::540", "code": "#include \"server.h\"\n#include <QApplication>\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    Server w;\n    w.show();\n\n    return a.exec();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "server", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "ĠServer", "Ġw", ";", "Ċ", "ĠĠĠ", "Ġw", ".", "show", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::541", "code": "/*  DocManager.H\n *\n *  Copyright (C) 2006 Richard Spindler <richard.spindler AT gmail.com>\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n */\n\n#ifndef _DOC_MANAGER_H_\n#define _DOC_MANAGER_H_\n\nnamespace nle\n{\n\nclass Command;\n\ntypedef struct _command_node {\n\tstruct _command_node *next;\n\tCommand* command;\n} command_node;\n\nclass DocManager\n{\n\tpublic:\n\t\tDocManager();\n\t\t~DocManager();\n\t\tvoid undo();\n\t\tvoid redo();\n\t\tvoid submit( Command* cmd );\n\t\tbool canUndo();\n\t\tbool canRedo();\n\tprivate:\n\t\tvoid setButtons();\n\t\tcommand_node* m_undoList;\n\t\tcommand_node* m_redoList;\n};\n\nextern DocManager* g_docManager;\ninline void submit( Command* cmd ) { g_docManager->submit( cmd ); }\n\n} /* namespace nle */\n\n#endif /* _DOC_MANAGER_H_ */\n", "code_tokens": ["Ġ/*", "Ġ", "ĠDoc", "Manager", ".", "H", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "ĠRich", "ard", "ĠSp", "ind", "ler", "Ġ<", "rich", "ard", ".", "sp", "ind", "ler", "ĠAT", "Ġg", "mail", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "Ġ_", "DOC", "_", "MANAGER", "_", "H", "_", "Ċ", "#", "define", "Ġ_", "DOC", "_", "MANAGER", "_", "H", "_", "Ċ", "Ċ", "namespace", "Ġn", "le", "Ċ", "{", "Ċ", "Ċ", "class", "ĠCommand", ";", "Ċ", "Ċ", "typedef", "Ġstruct", "Ġ_", "command", "_", "node", "Ġ{", "Ċ", "ĉ", "struct", "Ġ_", "command", "_", "node", "Ġ*", "next", ";", "Ċ", "ĉ", "Command", "*", "Ġcommand", ";", "Ċ", "}", "Ġcommand", "_", "node", ";", "Ċ", "Ċ", "class", "ĠDoc", "Manager", "Ċ", "{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "Doc", "Manager", "();", "Ċ", "ĉ", "ĉ", "~", "Doc", "Manager", "();", "Ċ", "ĉ", "ĉ", "void", "Ġundo", "();", "Ċ", "ĉ", "ĉ", "void", "Ġredo", "();", "Ċ", "ĉ", "ĉ", "void", "Ġsubmit", "(", "ĠCommand", "*", "Ġcmd", "Ġ);", "Ċ", "ĉ", "ĉ", "bool", "Ġcan", "Undo", "();", "Ċ", "ĉ", "ĉ", "bool", "Ġcan", "Redo", "();", "Ċ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "void", "Ġset", "Buttons", "();", "Ċ", "ĉ", "ĉ", "command", "_", "node", "*", "Ġm", "_", "undo", "List", ";", "Ċ", "ĉ", "ĉ", "command", "_", "node", "*", "Ġm", "_", "redo", "List", ";", "Ċ", "};", "Ċ", "Ċ", "extern", "ĠDoc", "Manager", "*", "Ġg", "_", "doc", "Manager", ";", "Ċ", "inline", "Ġvoid", "Ġsubmit", "(", "ĠCommand", "*", "Ġcmd", "Ġ)", "Ġ{", "Ġg", "_", "doc", "Manager", "->", "submit", "(", "Ġcmd", "Ġ);", "Ġ}", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġn", "le", "Ġ*/", "Ċ", "Ċ", "#", "endif", "Ġ/*", "Ġ_", "DOC", "_", "MANAGER", "_", "H", "_", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::542", "code": "/******************************************************************************\n * Icinga 2                                                                   *\n * Copyright (C) 2012-2018 Icinga Development Team (https://www.icinga.com/)  *\n *                                                                            *\n * This program is free software; you can redistribute it and/or              *\n * modify it under the terms of the GNU General Public License                *\n * as published by the Free Software Foundation; either version 2             *\n * of the License, or (at your option) any later version.                     *\n *                                                                            *\n * This program is distributed in the hope that it will be useful,            *\n * but WITHOUT ANY WARRANTY; without even the implied warranty of             *\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *\n * GNU General Public License for more details.                               *\n *                                                                            *\n * You should have received a copy of the GNU General Public License          *\n * along with this program; if not, write to the Free Software Foundation     *\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.             *\n ******************************************************************************/\n\n#ifndef INFOHANDLER_H\n#define INFOHANDLER_H\n\n#include \"remote/httphandler.hpp\"\n\nnamespace icinga\n{\n\nclass InfoHandler final : public HttpHandler\n{\npublic:\n\tDECLARE_PTR_TYPEDEFS(InfoHandler);\n\n\tbool HandleRequest(const ApiUser::Ptr& user, HttpRequest& request,\n\t\tHttpResponse& response, const Dictionary::Ptr& params) override;\n};\n\n}\n\n#endif /* INFOHANDLER_H */\n", "code_tokens": ["Ġ/", "************************************************************************", "******", "Ċ", "Ġ*", "ĠI", "cing", "a", "Ġ2", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "2018", "ĠI", "cing", "a", "ĠDe", "velopment", "ĠTeam", "Ġ(", "https", "://", "www", ".", "icing", "a", ".", "com", "/)", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "ĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", "ĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ******************************************************************************/", "Ċ", "Ċ", "#", "ifndef", "ĠINFO", "HANDLER", "_", "H", "Ċ", "#", "define", "ĠINFO", "HANDLER", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ\"", "remote", "/", "htt", "ph", "andler", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġic", "ing", "a", "Ċ", "{", "Ċ", "Ċ", "class", "ĠInfo", "Handler", "Ġfinal", "Ġ:", "Ġpublic", "ĠHttp", "Handler", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "DECLARE", "_", "PTR", "_", "TYPE", "DE", "FS", "(", "Info", "Handler", ");", "Ċ", "Ċ", "ĉ", "bool", "ĠHandle", "Request", "(", "const", "ĠApi", "User", "::", "Ptr", "&", "Ġuser", ",", "ĠHttpRequest", "&", "Ġrequest", ",", "Ċ", "ĉ", "ĉ", "HttpResponse", "&", "Ġresponse", ",", "Ġconst", "ĠDictionary", "::", "Ptr", "&", "Ġparams", ")", "Ġoverride", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠINFO", "HANDLER", "_", "H", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::543", "code": "// { dg-options \"-std=gnu++1y\" }\n\n// Copyright (C) 2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// basic_string_view constructors.\n\n#include <experimental/string_view>\n#include <testsuite_hooks.h>\n\nvoid\ntest03()\n{\n  bool test [[gnu::unused]] = true;\n  const wchar_t* with_nulls = L\"This contains \\0 a zero byte.\";\n\n  // These are tests to see how basic_string_view handles data with NUL\n  // bytes.  Obviously basic_string_view(char*) will halt at the first one, but\n  // nothing else should.\n  std::experimental::wstring_view s1 (with_nulls, 28);\n  VERIFY( s1.size() == 28 );\n  std::experimental::wstring_view s2 (s1);\n  VERIFY( s2.size() == 28 );\n}\n\nint\nmain()\n{ \n  test03();\n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "1", "y", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "Ġbasic", "_", "string", "_", "view", "Ġconstructors", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "experimental", "/", "string", "_", "view", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "03", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ[[", "gnu", "::", "unused", "]]", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġconst", "Ġwchar", "_", "t", "*", "Ġwith", "_", "nulls", "Ġ=", "ĠL", "\"", "This", "Ġcontains", "Ġ\\", "0", "Ġa", "Ġzero", "Ġbyte", ".\";", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠThese", "Ġare", "Ġtests", "Ġto", "Ġsee", "Ġhow", "Ġbasic", "_", "string", "_", "view", "Ġhandles", "Ġdata", "Ġwith", "ĠNUL", "Ċ", "Ġ", "Ġ//", "Ġbytes", ".", "Ġ", "ĠOb", "vious", "ly", "Ġbasic", "_", "string", "_", "view", "(", "char", "*)", "Ġwill", "Ġhalt", "Ġat", "Ġthe", "Ġfirst", "Ġone", ",", "Ġbut", "Ċ", "Ġ", "Ġ//", "Ġnothing", "Ġelse", "Ġshould", ".", "Ċ", "Ġ", "Ġstd", "::", "experimental", "::", "wstring", "_", "view", "Ġs", "1", "Ġ(", "with", "_", "nulls", ",", "Ġ28", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġs", "1", ".", "size", "()", "Ġ==", "Ġ28", "Ġ);", "Ċ", "Ġ", "Ġstd", "::", "experimental", "::", "wstring", "_", "view", "Ġs", "2", "Ġ(", "s", "1", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġs", "2", ".", "size", "()", "Ġ==", "Ġ28", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "ĠĊ", "Ġ", "Ġtest", "03", "();", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::544", "code": "/*\nCopyright_License {\n\n  XCSoar Glide Computer - http://www.xcsoar.org/\n  Copyright (C) 2000-2012 The XCSoar Project\n  A detailed list of copyright holders can be found in the file \"AUTHORS\".\n\n  This program is free software; you can redistribute it and/or\n  modify it under the terms of the GNU General Public License\n  as published by the Free Software Foundation; either version 2\n  of the License, or (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, write to the Free Software\n  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n}\n*/\n\n#ifndef XCSOAR_CONDITION_MONITOR_START_RULES_HPP\n#define XCSOAR_CONDITION_MONITOR_START_RULES_HPP\n\n#include \"ConditionMonitor.hpp\"\n\n/**\n * Checks whether aircraft in start sector is within height/speed rules\n */\nclass ConditionMonitorStartRules: public ConditionMonitor\n{\n  bool withinMargin;\n\npublic:\n  ConditionMonitorStartRules():ConditionMonitor(60, 1), withinMargin(false) {}\n\nprotected:\n  bool CheckCondition(const GlideComputer& cmp);\n  void Notify();\n  void SaveLast() {}\n};\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "_", "License", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠX", "CS", "o", "ar", "ĠG", "lide", "ĠComput", "er", "Ġ-", "Ġhttp", "://", "www", ".", "x", "cs", "o", "ar", ".", "org", "/", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "-", "2012", "ĠThe", "ĠX", "CS", "o", "ar", "ĠProject", "Ċ", "Ġ", "ĠA", "Ġdetailed", "Ġlist", "Ġof", "Ġcopyright", "Ġhold", "ers", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "Ġ\"", "AUTH", "ORS", "\".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ċ", "}", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠX", "CS", "O", "AR", "_", "CONDITION", "_", "MONITOR", "_", "START", "_", "RULE", "S", "_", "HP", "P", "Ċ", "#", "define", "ĠX", "CS", "O", "AR", "_", "CONDITION", "_", "MONITOR", "_", "START", "_", "RULE", "S", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "Condition", "Monitor", ".", "hpp", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠChecks", "Ġwhether", "Ġa", "ircraft", "Ġin", "Ġstart", "Ġsector", "Ġis", "Ġwithin", "Ġheight", "/", "speed", "Ġrules", "Ċ", "Ġ*/", "Ċ", "class", "ĠCondition", "Monitor", "Start", "Rules", ":", "Ġpublic", "ĠCondition", "Monitor", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġwithin", "Margin", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "ĠCondition", "Monitor", "Start", "Rules", "():", "Condition", "Monitor", "(", "60", ",", "Ġ1", "),", "Ġwithin", "Margin", "(", "false", ")", "Ġ{}", "Ċ", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġbool", "ĠCheck", "Condition", "(", "const", "ĠG", "lide", "Computer", "&", "Ġcmp", ");", "Ċ", "Ġ", "Ġvoid", "ĠNotify", "();", "Ċ", "Ġ", "Ġvoid", "ĠSave", "Last", "()", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::545", "code": "/* vim: set sw=4 sts=4 et foldmethod=syntax : */\n\n/*\n * Copyright (c) 2008 Ciaran McCreesh\n *\n * This file is part of the Paludis package manager. Paludis is free software;\n * you can redistribute it and/or modify it under the terms of the GNU General\n * Public License version 2, as published by the Free Software Foundation.\n *\n * Paludis is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n * details.\n *\n * You should have received a copy of the GNU General Public License along with\n * this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n * Place, Suite 330, Boston, MA  02111-1307  USA\n */\n\n#ifndef PALUDIS_GUARD_SRC_CLIENTS_CAVE_CMD_PRINT_ID_CONTENTS_HH\n#define PALUDIS_GUARD_SRC_CLIENTS_CAVE_CMD_PRINT_ID_CONTENTS_HH 1\n\n#include \"command.hh\"\n\nnamespace paludis\n{\n    namespace cave\n    {\n        class PALUDIS_VISIBLE PrintIDContentsCommand :\n            public Command\n        {\n            public:\n                int run(\n                        const std::tr1::shared_ptr<Environment> &,\n                        const std::tr1::shared_ptr<const Sequence<std::string > > & args\n                        );\n\n                std::tr1::shared_ptr<args::ArgsHandler> make_doc_cmdline();\n        };\n    }\n}\n\n\n#endif\n", "code_tokens": ["Ġ/*", "Ġvim", ":", "Ġset", "Ġsw", "=", "4", "Ġsts", "=", "4", "Ġet", "Ġfold", "method", "=", "syntax", "Ġ:", "Ġ*/", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2008", "ĠCi", "ar", "an", "ĠM", "c", "Cre", "esh", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠP", "al", "ud", "is", "Ġpackage", "Ġmanager", ".", "ĠP", "al", "ud", "is", "Ġis", "Ġfree", "Ġsoftware", ";", "Ċ", "Ġ*", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "Ċ", "Ġ*", "ĠPublic", "ĠLicense", "Ġversion", "Ġ2", ",", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠP", "al", "ud", "is", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "ĠANY", "Ċ", "Ġ*", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "Ċ", "Ġ*", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ċ", "Ġ*", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ġwith", "Ċ", "Ġ*", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "Ċ", "Ġ*", "ĠPlace", ",", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", "Ġ", "ĠUSA", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠPAL", "UD", "IS", "_", "GUARD", "_", "SRC", "_", "CLIENT", "S", "_", "CA", "VE", "_", "CMD", "_", "PRINT", "_", "ID", "_", "CONTENT", "S", "_", "HH", "Ċ", "#", "define", "ĠPAL", "UD", "IS", "_", "GUARD", "_", "SRC", "_", "CLIENT", "S", "_", "CA", "VE", "_", "CMD", "_", "PRINT", "_", "ID", "_", "CONTENT", "S", "_", "HH", "Ġ1", "Ċ", "Ċ", "#", "include", "Ġ\"", "command", ".", "hh", "\"", "Ċ", "Ċ", "namespace", "Ġpal", "ud", "is", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġnamespace", "Ġc", "ave", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġclass", "ĠPAL", "UD", "IS", "_", "VISIBLE", "ĠPrint", "ID", "Contents", "Command", "Ġ:", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġpublic", "ĠCommand", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġrun", "(", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "tr", "1", "::", "shared", "_", "ptr", "<", "Environment", ">", "Ġ&,", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "tr", "1", "::", "shared", "_", "ptr", "<", "const", "ĠSequence", "<", "std", "::", "string", "Ġ>", "Ġ>", "Ġ&", "Ġargs", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ);", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "tr", "1", "::", "shared", "_", "ptr", "<", "args", "::", "Args", "Handler", ">", "Ġmake", "_", "doc", "_", "cmdline", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::546", "code": "// 2001-08-15 Benjamin Kosnik  <bkoz@redhat.com>\n\n// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 2, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING.  If not, write to the Free\n// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n// USA.\n\n// 22.2.4.1.1 collate members\n\n// { dg-do run }\n// { dg-xfail-if \"\" { \"*-*-hpux11.23\" } { \"*\" } { \"\" } } */\n// { dg-options \"-finput-charset=ISO8859-1\" }\n// { dg-require-iconv \"ISO8859-1\" }\n\n#include <testsuite_hooks.h>\n\n#define main discard_main_2\n#include \"2.cc\"\n#undef main \n\nint main()\n{\n  using namespace __gnu_test;\n  func_callback two;\n  two.push_back(&test02);\n  run_tests_wrapped_env(\"de_DE\", \"LANG\", two);\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ200", "1", "-", "08", "-", "15", "ĠB", "en", "jam", "in", "ĠK", "os", "n", "ik", "Ġ", "Ġ<", "bk", "oz", "@", "red", "hat", ".", "com", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ200", "1", ",", "Ġ200", "2", ",", "Ġ2003", "ĠFree", "ĠSoftware", "ĠFoundation", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "Ċ", "//", "ĠSoftware", "ĠFoundation", ",", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ02", "111", "-", "13", "07", ",", "Ċ", "//", "ĠUSA", ".", "Ċ", "Ċ", "//", "Ġ22", ".", "2", ".", "4", ".", "1", ".", "1", "Ġcol", "late", "Ġmembers", "Ċ", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġrun", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "x", "fail", "-", "if", "Ġ\"\"", "Ġ{", "Ġ\"*", "-*", "-", "h", "pu", "x", "11", ".", "23", "\"", "Ġ}", "Ġ{", "Ġ\"*\"", "Ġ}", "Ġ{", "Ġ\"\"", "Ġ}", "Ġ}", "Ġ*/", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "f", "input", "-", "charset", "=", "ISO", "8859", "-", "1", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "iconv", "Ġ\"", "ISO", "8859", "-", "1", "\"", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "#", "define", "Ġmain", "Ġdiscard", "_", "main", "_", "2", "Ċ", "#", "include", "Ġ\"", "2", ".", "cc", "\"", "Ċ", "#", "undef", "Ġmain", "ĠĊ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġ__", "gnu", "_", "test", ";", "Ċ", "Ġ", "Ġfunc", "_", "callback", "Ġtwo", ";", "Ċ", "Ġ", "Ġtwo", ".", "push", "_", "back", "(&", "test", "02", ");", "Ċ", "Ġ", "Ġrun", "_", "tests", "_", "wrapped", "_", "env", "(\"", "de", "_", "DE", "\",", "Ġ\"", "LANG", "\",", "Ġtwo", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::547", "code": "// Copyright (C) 2010 EPITA Research and Development Laboratory (LRDE)\n//\n// This file is part of Olena.\n//\n// Olena is free software: you can redistribute it and/or modify it under\n// the terms of the GNU General Public License as published by the Free\n// Software Foundation, version 2 of the License.\n//\n// Olena is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Olena.  If not, see <http://www.gnu.org/licenses/>.\n\n#ifndef SCRIBO_DEMO_VIEWER_PREFERENCES_DIALOG_HH\n# define SCRIBO_DEMO_VIEWER_PREFERENCES_DIALOG_HH\n\n# include <QtGui>\n# include <preferences_dialog.ui.h>\n\nclass preferences_dialog : public QDialog, private Ui::PreferencesDialog\n{\n  Q_OBJECT;\n\npublic:\n  preferences_dialog(QWidget *parent = 0);\n  ~preferences_dialog();\n\nprivate slots:\n  void on_optionList_currentRowChanged(int row);\n  virtual void accept();\n  virtual void reject();\n\nprivate: // Methods\n  void load_option_list();\n  void select_option_widget(int row);\n\nprivate: // Attributes\n  QVector<QWidget *> widgets_;\n\n};\n\n#endif // ! SCRIBO_DEMO_VIEWER_PREFERENCES_DIALOG_HH\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠEP", "IT", "A", "ĠRe", "search", "Ġand", "ĠDe", "velopment", "ĠL", "ab", "or", "atory", "Ġ(", "LR", "DE", ")", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠO", "len", "a", ".", "Ċ", "//", "Ċ", "//", "ĠO", "len", "a", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ċ", "//", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "Ċ", "//", "ĠSoftware", "ĠFoundation", ",", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ".", "Ċ", "//", "Ċ", "//", "ĠO", "len", "a", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "//", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "ĠO", "len", "a", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "ifndef", "ĠSCR", "I", "BO", "_", "DE", "MO", "_", "V", "IE", "WER", "_", "PRE", "FERENCE", "S", "_", "DIALOG", "_", "HH", "Ċ", "#", "Ġdefine", "ĠSCR", "I", "BO", "_", "DE", "MO", "_", "V", "IE", "WER", "_", "PRE", "FERENCE", "S", "_", "DIALOG", "_", "HH", "Ċ", "Ċ", "#", "Ġinclude", "Ġ<", "Qt", "Gui", ">", "Ċ", "#", "Ġinclude", "Ġ<", "preferences", "_", "dialog", ".", "ui", ".", "h", ">", "Ċ", "Ċ", "class", "Ġpreferences", "_", "dialog", "Ġ:", "Ġpublic", "ĠQDialog", ",", "Ġprivate", "ĠUi", "::", "Preferences", "Dialog", "Ċ", "{", "Ċ", "Ġ", "ĠQ", "_", "OBJECT", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġpreferences", "_", "dialog", "(", "QWidget", "Ġ*", "parent", "Ġ=", "Ġ0", ");", "Ċ", "Ġ", "Ġ~", "preferences", "_", "dialog", "();", "Ċ", "Ċ", "private", "Ġslots", ":", "Ċ", "Ġ", "Ġvoid", "Ġon", "_", "option", "List", "_", "currentRow", "Changed", "(", "int", "Ġrow", ");", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġaccept", "();", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġreject", "();", "Ċ", "Ċ", "private", ":", "Ġ//", "ĠMethods", "Ċ", "Ġ", "Ġvoid", "Ġload", "_", "option", "_", "list", "();", "Ċ", "Ġ", "Ġvoid", "Ġselect", "_", "option", "_", "widget", "(", "int", "Ġrow", ");", "Ċ", "Ċ", "private", ":", "Ġ//", "ĠAttributes", "Ċ", "Ġ", "ĠQVector", "<", "QWidget", "Ġ*>", "Ġwidgets", "_;", "Ċ", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "Ġ!", "ĠSCR", "I", "BO", "_", "DE", "MO", "_", "V", "IE", "WER", "_", "PRE", "FERENCE", "S", "_", "DIALOG", "_", "HH", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::548", "code": "#ifndef EVENTLOGIN_H\n#define EVENTLOGIN_H\n\n#include <memory>\n#include \"IEvent.hpp\"\n\n\nclass EventQueue;\n/// Event for checking if the user's credentials are correct\nclass EventLogin : public IEvent {\n    void* data;\n    std::string username;\n    std::string password;\npublic:\n    /// Constructor\n    ///\n    /// \\param data Custom data for identification purposes\n    /// \\param username Login username\n    /// \\param password Login password\n    EventLogin(void* data, const std::string& username, const std::string& password);\n\n    static constexpr UUID uuid = 4;\n    virtual UUID getEventUuid() const override;\n\n    EventQueue* getTarget() const;\n    void* getData() const;\n    std::string getUsername() const;\n    std::string getPassword() const;\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠEVENT", "LOGIN", "_", "H", "Ċ", "#", "define", "ĠEVENT", "LOGIN", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ\"", "I", "Event", ".", "hpp", "\"", "Ċ", "Ċ", "Ċ", "class", "ĠEvent", "Queue", ";", "Ċ", "///", "ĠEvent", "Ġfor", "Ġchecking", "Ġif", "Ġthe", "Ġuser", "'s", "Ġcredentials", "Ġare", "Ġcorrect", "Ċ", "class", "ĠEvent", "Login", "Ġ:", "Ġpublic", "ĠI", "Event", "Ġ{", "Ċ", "ĠĠĠ", "Ġvoid", "*", "Ġdata", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġusername", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġpassword", ";", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġ///", "ĠConstructor", "Ċ", "ĠĠĠ", "Ġ///", "Ċ", "ĠĠĠ", "Ġ///", "Ġ\\", "param", "Ġdata", "ĠCustom", "Ġdata", "Ġfor", "Ġidentification", "Ġpurposes", "Ċ", "ĠĠĠ", "Ġ///", "Ġ\\", "param", "Ġusername", "ĠLogin", "Ġusername", "Ċ", "ĠĠĠ", "Ġ///", "Ġ\\", "param", "Ġpassword", "ĠLogin", "Ġpassword", "Ċ", "ĠĠĠ", "ĠEvent", "Login", "(", "void", "*", "Ġdata", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġusername", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġpassword", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġstatic", "Ġconstexpr", "ĠUUID", "Ġuuid", "Ġ=", "Ġ4", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "ĠUUID", "ĠgetEvent", "Uuid", "()", "Ġconst", "Ġoverride", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠEvent", "Queue", "*", "ĠgetTarget", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġvoid", "*", "ĠgetData", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġget", "Username", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġget", "Password", "()", "Ġconst", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::549", "code": "//\n// Created by sascha on 18.09.15.\n//\n#include \"matador/sql/statement_impl.hpp\"\n\nnamespace matador {\n\nnamespace detail {\n\nstatement_impl::statement_impl(basic_dialect *dialect, const matador::sql &stmt)\n{\n  std::tie(sql_, bind_vars_, columns_) = dialect->prepare(stmt);\n\n}\n\nstd::string statement_impl::str() const\n{\n  return sql_;\n}\n\nconst std::vector<std::string> &statement_impl::bind_vars() const\n{\n  return bind_vars_;\n}\n\nconst std::vector<std::string> &statement_impl::columns() const\n{\n  return columns_;\n}\n\nvoid statement_impl::log(const std::string &stmt) const\n{\n  if (log_enabled_) {\n    std::cout << \"SQL: \" << stmt << \"\\n\";\n  }\n}\n\nvoid statement_impl::enable_log()\n{\n  log_enabled_ = true;\n}\n\nvoid statement_impl::disable_log()\n{\n  log_enabled_ = false;\n}\n\nbool statement_impl::is_log_enabled() const {\n  return log_enabled_;\n}\n}\n\n}", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "Ġsas", "cha", "Ġon", "Ġ18", ".", "09", ".", "15", ".", "Ċ", "//", "Ċ", "#", "include", "Ġ\"", "mat", "ador", "/", "sql", "/", "statement", "_", "impl", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġmat", "ador", "Ġ{", "Ċ", "Ċ", "namespace", "Ġdetail", "Ġ{", "Ċ", "Ċ", "statement", "_", "impl", "::", "statement", "_", "impl", "(", "basic", "_", "dialect", "Ġ*", "dialect", ",", "Ġconst", "Ġmat", "ador", "::", "sql", "Ġ&", "stmt", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "tie", "(", "sql", "_,", "Ġbind", "_", "vars", "_,", "Ġcolumns", "_)", "Ġ=", "Ġdialect", "->", "prepare", "(", "stmt", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "Ġstatement", "_", "impl", "::", "str", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġsql", "_;", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġ&", "statement", "_", "impl", "::", "bind", "_", "vars", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġbind", "_", "vars", "_;", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġ&", "statement", "_", "impl", "::", "columns", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġcolumns", "_;", "Ċ", "}", "Ċ", "Ċ", "void", "Ġstatement", "_", "impl", "::", "log", "(", "const", "Ġstd", "::", "string", "Ġ&", "stmt", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "log", "_", "enabled", "_)", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "SQL", ":", "Ġ\"", "Ġ<<", "Ġstmt", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġstatement", "_", "impl", "::", "enable", "_", "log", "()", "Ċ", "{", "Ċ", "Ġ", "Ġlog", "_", "enabled", "_", "Ġ=", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġstatement", "_", "impl", "::", "disable", "_", "log", "()", "Ċ", "{", "Ċ", "Ġ", "Ġlog", "_", "enabled", "_", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "Ġstatement", "_", "impl", "::", "is", "_", "log", "_", "enabled", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġlog", "_", "enabled", "_;", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::550", "code": "#include <iostream>\n#include <vector>\nusing namespace std;\nint main() {\n    int n, sum = 0, cnt = 1, num[110] = {0}, id_school[100001] = {0};\n    cin >> n;\n    vector<vector<int>> v(n+1);\n    for(int i = 1; i <= n; i++)\n        cin >> num[i];\n    while(1) {\n        bool flag = true;\n        for(int i = 1; i < v.size(); i++) {\n            if(v[i].size() < num[i] * 10) {\n                if(id_school[cnt-1] != i) {\n                    id_school[cnt] = i;\n                    v[i].push_back(cnt);\n                    cnt++;\n                } else {\n                    id_school[cnt+1] = i;\n                    v[i].push_back(cnt+1);\n                    cnt = cnt + 2;\n                }\n                flag = false;\n            }\n        }\n        if(flag) break;\n    }\n    for(int i = 1; i < v.size(); i++) {\n        cout << \"#\" << i << endl;\n        for(int j = 0; j < v[i].size(); j++) {\n            if(j != 0 && j % 10 != 0) cout << \" \";\n            if(j != 0 && j % 10 == 0) cout << endl;\n            cout << v[i][j];\n        }\n        cout << endl;\n    }\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "Ġsum", "Ġ=", "Ġ0", ",", "Ġcnt", "Ġ=", "Ġ1", ",", "Ġnum", "[", "110", "]", "Ġ=", "Ġ{", "0", "},", "Ġid", "_", "school", "[", "10000", "1", "]", "Ġ=", "Ġ{", "0", "};", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġvector", "<", "vector", "<", "int", ">>", "Ġv", "(", "n", "+", "1", ");", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġnum", "[", "i", "];", "Ċ", "ĠĠĠ", "Ġwhile", "(", "1", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġflag", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġv", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "v", "[", "i", "].", "size", "()", "Ġ<", "Ġnum", "[", "i", "]", "Ġ*", "Ġ10", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "id", "_", "school", "[", "cnt", "-", "1", "]", "Ġ!=", "Ġi", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġid", "_", "school", "[", "cnt", "]", "Ġ=", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġv", "[", "i", "].", "push", "_", "back", "(", "cnt", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcnt", "++;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġid", "_", "school", "[", "cnt", "+", "1", "]", "Ġ=", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġv", "[", "i", "].", "push", "_", "back", "(", "cnt", "+", "1", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcnt", "Ġ=", "Ġcnt", "Ġ+", "Ġ2", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġflag", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "flag", ")", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġv", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"#\"", "Ġ<<", "Ġi", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġv", "[", "i", "].", "size", "();", "Ġj", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "j", "Ġ!=", "Ġ0", "Ġ&&", "Ġj", "Ġ%", "Ġ10", "Ġ!=", "Ġ0", ")", "Ġcout", "Ġ<<", "Ġ\"", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "j", "Ġ!=", "Ġ0", "Ġ&&", "Ġj", "Ġ%", "Ġ10", "Ġ==", "Ġ0", ")", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġv", "[", "i", "][", "j", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::551", "code": "//\n//  File = con_hamm.cpp\n//\n\n#include <iostream>\n#include <math.h>\n#include \"typedefs.h\"\n#include \"con_hamm.h\"\n#include \"misdefs.h\"\n#include \"sinc.h\"\n\nusing namespace std;\n\nContHammingMagResp::ContHammingMagResp(istream& uin, ostream& uout)\n  : ContinWindowResponse(uin, uout)\n{\n  double x, amp0, tau, freq, freq_exp, freq_cyc;\n\n  tau = 1.0;\n  freq_cyc = 2.0;\n  amp0 = 0.54;\n\n  for (int n = 0; n < Num_Resp_Pts; n++) {\n    freq_exp = 1.0 + freq_cyc * (n - Num_Resp_Pts) / ((double)Num_Resp_Pts);\n    freq = pow((double)10.0, freq_exp);\n    x = 0.54 * tau * sinc(PI * tau * freq);\n    x += (0.23 * tau * sinc(PI * tau * (freq - tau)));\n    x += (0.23 * tau * sinc(PI * tau * (freq + tau)));\n    if (Db_Scale_Enab)\n      x = 20.0 * log10(fabs(x / amp0));\n    (*Response_File) << freq << \", \" << x << std::endl;\n  }\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠFile", "Ġ=", "Ġcon", "_", "ham", "m", ".", "cpp", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "type", "defs", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "con", "_", "ham", "m", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mis", "defs", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sin", "c", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Cont", "H", "am", "ming", "Mag", "Resp", "::", "Cont", "H", "am", "ming", "Mag", "Resp", "(", "istream", "&", "Ġu", "in", ",", "Ġo", "stream", "&", "Ġu", "out", ")", "Ċ", "Ġ", "Ġ:", "ĠCont", "in", "Window", "Response", "(", "u", "in", ",", "Ġu", "out", ")", "Ċ", "{", "Ċ", "Ġ", "Ġdouble", "Ġx", ",", "Ġamp", "0", ",", "Ġtau", ",", "Ġfreq", ",", "Ġfreq", "_", "exp", ",", "Ġfreq", "_", "cyc", ";", "Ċ", "Ċ", "Ġ", "Ġtau", "Ġ=", "Ġ1", ".", "0", ";", "Ċ", "Ġ", "Ġfreq", "_", "cyc", "Ġ=", "Ġ2", ".", "0", ";", "Ċ", "Ġ", "Ġamp", "0", "Ġ=", "Ġ0", ".", "54", ";", "Ċ", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġn", "Ġ=", "Ġ0", ";", "Ġn", "Ġ<", "ĠNum", "_", "Resp", "_", "Pts", ";", "Ġn", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġfreq", "_", "exp", "Ġ=", "Ġ1", ".", "0", "Ġ+", "Ġfreq", "_", "cyc", "Ġ*", "Ġ(", "n", "Ġ-", "ĠNum", "_", "Resp", "_", "Pts", ")", "Ġ/", "Ġ((", "double", ")", "Num", "_", "Resp", "_", "Pts", ");", "Ċ", "ĠĠĠ", "Ġfreq", "Ġ=", "Ġpow", "((", "double", ")", "10", ".", "0", ",", "Ġfreq", "_", "exp", ");", "Ċ", "ĠĠĠ", "Ġx", "Ġ=", "Ġ0", ".", "54", "Ġ*", "Ġtau", "Ġ*", "Ġs", "inc", "(", "PI", "Ġ*", "Ġtau", "Ġ*", "Ġfreq", ");", "Ċ", "ĠĠĠ", "Ġx", "Ġ+=", "Ġ(", "0", ".", "23", "Ġ*", "Ġtau", "Ġ*", "Ġs", "inc", "(", "PI", "Ġ*", "Ġtau", "Ġ*", "Ġ(", "freq", "Ġ-", "Ġtau", ")));", "Ċ", "ĠĠĠ", "Ġx", "Ġ+=", "Ġ(", "0", ".", "23", "Ġ*", "Ġtau", "Ġ*", "Ġs", "inc", "(", "PI", "Ġ*", "Ġtau", "Ġ*", "Ġ(", "freq", "Ġ+", "Ġtau", ")));", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Db", "_", "Scale", "_", "En", "ab", ")", "Ċ", "ĠĠĠĠĠ", "Ġx", "Ġ=", "Ġ20", ".", "0", "Ġ*", "Ġlog", "10", "(", "fabs", "(", "x", "Ġ/", "Ġamp", "0", "));", "Ċ", "ĠĠĠ", "Ġ(*", "Response", "_", "File", ")", "Ġ<<", "Ġfreq", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġx", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::552", "code": "//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n//\n//  File = stepresp.cpp\n//\n//\n\n#include <math.h>\n#include <stdlib.h>\n#include <iostream>\n\n#include \"complex.h\"\n#include \"stepresp.h\"\n\nusing namespace std;\n\n#ifdef _DEBUG\nextern std::ofstream DebugFile;\n#endif\n\n//===========================================================\n//  constructors\n\nStepResponse::StepResponse(FilterTransFunc* trans_func, int num_resp_pts,\n                           double delta_time)\n{\n  Delta_Time = delta_time;\n  Num_Resp_Pts = num_resp_pts;\n  Imp_Resp = new ImpulseResponse(trans_func, num_resp_pts, delta_time);\n\n  return;\n};\n\n//=========================================================\nvoid\nStepResponse::GenerateResponse(void)\n{\n  int resp_indx;\n  double h_of_t, time, delta_t;\n  //  double u_of_t; //Why is this uninitialized? -Ansel\n  double u_of_t = 0;\n\n  Response_File = new ofstream(\"stp_anal.txt\", ios::out);\n\n  //-----------------------------------------------\n  // compute samples of impulse response\n\n  delta_t = Delta_Time;\n\n  for (resp_indx = 0; resp_indx < Num_Resp_Pts; resp_indx++) {\n    time = delta_t * resp_indx;\n    h_of_t = Imp_Resp->ComputeSample(time);\n    u_of_t += (delta_t * h_of_t);\n    (*Response_File) << time << \",  \" << u_of_t << std::endl;\n  }\n  Response_File->close();\n  return;\n}\n", "code_tokens": ["Ġ//", "++++++++++++++++", "++++++++++++++++", "++++++++++++++++", "++++++++++++++++", "+++", "Ċ", "//", "Ċ", "//", "Ġ", "ĠFile", "Ġ=", "Ġstep", "resp", ".", "cpp", "Ċ", "//", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "complex", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "step", "resp", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "ifdef", "Ġ_", "DEBUG", "Ċ", "extern", "Ġstd", "::", "ofstream", "ĠDebug", "File", ";", "Ċ", "#", "endif", "Ċ", "Ċ", "//================================================", "===========", "Ċ", "//", "Ġ", "Ġconstructors", "Ċ", "Ċ", "Step", "Response", "::", "Step", "Response", "(", "Filter", "Trans", "Func", "*", "Ġtrans", "_", "func", ",", "Ġint", "Ġnum", "_", "resp", "_", "pts", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdouble", "Ġdelta", "_", "time", ")", "Ċ", "{", "Ċ", "Ġ", "ĠDelta", "_", "Time", "Ġ=", "Ġdelta", "_", "time", ";", "Ċ", "Ġ", "ĠNum", "_", "Resp", "_", "Pts", "Ġ=", "Ġnum", "_", "resp", "_", "pts", ";", "Ċ", "Ġ", "ĠImp", "_", "Resp", "Ġ=", "Ġnew", "ĠImp", "ulse", "Response", "(", "trans", "_", "func", ",", "Ġnum", "_", "resp", "_", "pts", ",", "Ġdelta", "_", "time", ");", "Ċ", "Ċ", "Ġ", "Ġreturn", ";", "Ċ", "};", "Ċ", "Ċ", "//=========================================================", "Ċ", "void", "Ċ", "Step", "Response", "::", "Generate", "Response", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġresp", "_", "indx", ";", "Ċ", "Ġ", "Ġdouble", "Ġh", "_", "of", "_", "t", ",", "Ġtime", ",", "Ġdelta", "_", "t", ";", "Ċ", "Ġ", "Ġ//", "Ġ", "Ġdouble", "Ġu", "_", "of", "_", "t", ";", "Ġ//", "Wh", "y", "Ġis", "Ġthis", "Ġuninitialized", "?", "Ġ-", "An", "sel", "Ċ", "Ġ", "Ġdouble", "Ġu", "_", "of", "_", "t", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "Ġ", "ĠResponse", "_", "File", "Ġ=", "Ġnew", "Ġof", "stream", "(\"", "stp", "_", "an", "al", ".", "txt", "\",", "Ġios", "::", "out", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "----------------------------------------", "-------", "Ċ", "Ġ", "Ġ//", "Ġcompute", "Ġsamples", "Ġof", "Ġimpulse", "Ġresponse", "Ċ", "Ċ", "Ġ", "Ġdelta", "_", "t", "Ġ=", "ĠDelta", "_", "Time", ";", "Ċ", "Ċ", "Ġ", "Ġfor", "Ġ(", "resp", "_", "indx", "Ġ=", "Ġ0", ";", "Ġresp", "_", "indx", "Ġ<", "ĠNum", "_", "Resp", "_", "Pts", ";", "Ġresp", "_", "indx", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġtime", "Ġ=", "Ġdelta", "_", "t", "Ġ*", "Ġresp", "_", "indx", ";", "Ċ", "ĠĠĠ", "Ġh", "_", "of", "_", "t", "Ġ=", "ĠImp", "_", "Resp", "->", "Compute", "Sample", "(", "time", ");", "Ċ", "ĠĠĠ", "Ġu", "_", "of", "_", "t", "Ġ+=", "Ġ(", "delta", "_", "t", "Ġ*", "Ġh", "_", "of", "_", "t", ");", "Ċ", "ĠĠĠ", "Ġ(*", "Response", "_", "File", ")", "Ġ<<", "Ġtime", "Ġ<<", "Ġ\",", "Ġ", "Ġ\"", "Ġ<<", "Ġu", "_", "of", "_", "t", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "ĠResponse", "_", "File", "->", "close", "();", "Ċ", "Ġ", "Ġreturn", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::553", "code": "#include \"factory_meas_periodic.hpp\"\n\nFactoryMeasPeriodic::FactoryMeasPeriodic() {\n  namePrefix = \"stats_\";\n  bufferMax = 365;\n  calcInterval = 5*60*1000;\n  interval = 24*60*60*1000;\n}\n\nvoid FactoryMeasPeriodic::makeItSo(std::shared_ptr<MeasTypeArray> measTypeArray, std::shared_ptr<AddonsArray> addonsArray) {\n  for(std::vector<std::shared_ptr<MeasType>>::iterator it = measTypeArray->measTypes.begin(); it != measTypeArray->measTypes.end(); ++it) {\n    std::shared_ptr<MeasType> measType = *it;\n\n    std::unique_ptr<MeasPeriodicStatsAddon> mps = std::make_unique<MeasPeriodicStatsAddon>();\n\n    mps->name = namePrefix + measType->name;\n    mps->bufferMax = bufferMax;\n    mps->calcInterval = calcInterval;\n    mps->interval = interval;\n    mps->measName = measType->name;\n\n    addonsArray->addons.push_back(std::move(mps));\n\n  }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "factory", "_", "meas", "_", "periodic", ".", "hpp", "\"", "Ċ", "Ċ", "Factory", "Me", "as", "Periodic", "::", "Factory", "Me", "as", "Periodic", "()", "Ġ{", "Ċ", "Ġ", "Ġname", "Prefix", "Ġ=", "Ġ\"", "stats", "_", "\";", "Ċ", "Ġ", "Ġbuffer", "Max", "Ġ=", "Ġ365", ";", "Ċ", "Ġ", "Ġcalc", "Interval", "Ġ=", "Ġ5", "*", "60", "*", "1000", ";", "Ċ", "Ġ", "Ġinterval", "Ġ=", "Ġ24", "*", "60", "*", "60", "*", "1000", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFactory", "Me", "as", "Periodic", "::", "make", "It", "So", "(", "std", "::", "shared", "_", "ptr", "<", "Me", "as", "Type", "Array", ">", "Ġmeas", "Type", "Array", ",", "Ġstd", "::", "shared", "_", "ptr", "<", "Add", "ons", "Array", ">", "Ġadd", "ons", "Array", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "(", "std", "::", "vector", "<", "std", "::", "shared", "_", "ptr", "<", "Me", "as", "Type", ">>", "::", "iterator", "Ġit", "Ġ=", "Ġmeas", "Type", "Array", "->", "meas", "Types", ".", "begin", "();", "Ġit", "Ġ!=", "Ġmeas", "Type", "Array", "->", "meas", "Types", ".", "end", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "Me", "as", "Type", ">", "Ġmeas", "Type", "Ġ=", "Ġ*", "it", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "ptr", "<", "Me", "as", "Periodic", "Stats", "Addon", ">", "Ġm", "ps", "Ġ=", "Ġstd", "::", "make", "_", "unique", "<", "Me", "as", "Periodic", "Stats", "Addon", ">();", "Ċ", "Ċ", "ĠĠĠ", "Ġm", "ps", "->", "name", "Ġ=", "Ġname", "Prefix", "Ġ+", "Ġmeas", "Type", "->", "name", ";", "Ċ", "ĠĠĠ", "Ġm", "ps", "->", "buffer", "Max", "Ġ=", "Ġbuffer", "Max", ";", "Ċ", "ĠĠĠ", "Ġm", "ps", "->", "calc", "Interval", "Ġ=", "Ġcalc", "Interval", ";", "Ċ", "ĠĠĠ", "Ġm", "ps", "->", "interval", "Ġ=", "Ġinterval", ";", "Ċ", "ĠĠĠ", "Ġm", "ps", "->", "meas", "Name", "Ġ=", "Ġmeas", "Type", "->", "name", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġadd", "ons", "Array", "->", "addons", ".", "push", "_", "back", "(", "std", "::", "move", "(", "mps", "));", "Ċ", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::554", "code": "// Functor\n// Source: ./examples/functor.cpp\n#include <qpp.h>\nusing namespace qpp;\nusing std::cout;\nusing std::endl;\n\n// test function used by qpp::cwise()\ncplx pow3(const cplx& z)\n{\n    return std::pow(z, 3);\n}\n\nint main()\n{\n    // functor test\n    cout << \">> Functor z^3 acting component-wise on:\" << endl;\n    cmat A(2, 2);\n    A << 1, 2, 3, 4;\n    cout << disp(A) << endl;\n\n    cout << \">> Result (with lambda):\" << endl;\n    // functor z^3 componentwise, specify OutputScalar and Derived for lambdas\n    cout << disp(cwise<cplx, cmat>(A, [](const cplx& z) -> cplx\n    {\n        return z * z * z;\n    })) << endl;\n\n    cout << \">> Result (with genuine function):\" << endl;\n    // automatic type deduction for proper functions\n    cout << disp(cwise(A, &pow3)) << endl;\n}\n", "code_tokens": ["Ġ//", "ĠF", "un", "ctor", "Ċ", "//", "ĠSource", ":", "Ġ./", "examples", "/", "functor", ".", "cpp", "Ċ", "#", "include", "Ġ<", "q", "pp", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġq", "pp", ";", "Ċ", "using", "Ġstd", "::", "cout", ";", "Ċ", "using", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "//", "Ġtest", "Ġfunction", "Ġused", "Ġby", "Ġq", "pp", "::", "c", "wise", "()", "Ċ", "cpl", "x", "Ġpow", "3", "(", "const", "Ġcpl", "x", "&", "Ġz", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstd", "::", "pow", "(", "z", ",", "Ġ3", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġfun", "ctor", "Ġtest", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", ">>", "ĠF", "un", "ctor", "Ġz", "^", "3", "Ġact", "ing", "Ġcomponent", "-", "wise", "Ġon", ":\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġc", "mat", "ĠA", "(", "2", ",", "Ġ2", ");", "Ċ", "ĠĠĠ", "ĠA", "Ġ<<", "Ġ1", ",", "Ġ2", ",", "Ġ3", ",", "Ġ4", ";", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġdisp", "(", "A", ")", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", ">>", "ĠResult", "Ġ(", "with", "Ġlambda", "):\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ//", "Ġfun", "ctor", "Ġz", "^", "3", "Ġcomponent", "wise", ",", "Ġspecify", "ĠOutput", "Scalar", "Ġand", "ĠDerived", "Ġfor", "Ġl", "amb", "das", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġdisp", "(", "c", "wise", "<", "cpl", "x", ",", "Ġc", "mat", ">(", "A", ",", "Ġ[](", "const", "Ġcpl", "x", "&", "Ġz", ")", "Ġ->", "Ġcpl", "x", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġz", "Ġ*", "Ġz", "Ġ*", "Ġz", ";", "Ċ", "ĠĠĠ", "Ġ}))", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", ">>", "ĠResult", "Ġ(", "with", "Ġg", "enu", "ine", "Ġfunction", "):\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ//", "Ġautomatic", "Ġtype", "Ġde", "d", "uction", "Ġfor", "Ġproper", "Ġfunctions", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġdisp", "(", "c", "wise", "(", "A", ",", "Ġ&", "pow", "3", "))", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::555", "code": "//project\n#include \"SuperRegion.h\"\n\nSuperRegion::SuperRegion()\n\t: reward(0)\n{\n}\n\nSuperRegion::SuperRegion(const int& pReward)\n\t: reward(pReward)\n{\n}\n\nSuperRegion::~SuperRegion()\n{\n}\n\nvoid SuperRegion::addRegion(const int& region)\n{\n\tregions.push_back(region);\n}\n", "code_tokens": ["Ġ//", "project", "Ċ", "#", "include", "Ġ\"", "Super", "Region", ".", "h", "\"", "Ċ", "Ċ", "Super", "Region", "::", "Super", "Region", "()", "Ċ", "ĉ", ":", "Ġreward", "(", "0", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Super", "Region", "::", "Super", "Region", "(", "const", "Ġint", "&", "Ġp", "Reward", ")", "Ċ", "ĉ", ":", "Ġreward", "(", "p", "Reward", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Super", "Region", "::~", "Super", "Region", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSuper", "Region", "::", "add", "Region", "(", "const", "Ġint", "&", "Ġregion", ")", "Ċ", "{", "Ċ", "ĉ", "regions", ".", "push", "_", "back", "(", "region", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::556", "code": "#ifndef FORMAT_HH\n#define FORMAT_HH\n\nnamespace CASM {\n\n  int format_command(int argc, char *argv[]);\n\n}\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠFORMAT", "_", "HH", "Ċ", "#", "define", "ĠFORMAT", "_", "HH", "Ċ", "Ċ", "namespace", "ĠC", "ASM", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġint", "Ġformat", "_", "command", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[]", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::557", "code": "#include \"LODNode.hpp\"\n\n#include <boost/python.hpp>\n#include <avango/python/register_field.h>\n#include <avango/gua/scenegraph/LODNode.hpp>\n\nusing namespace boost::python;\nusing namespace av::python;\n\nnamespace boost\n {\n  namespace python\n   {\n    template <class T> struct pointee<av::Link<T> >\n     {\n       using type = T;\n     };\n   }\n }\n\nvoid init_LODNode()\n {\n  register_field<av::gua::SFLODNode>(\"SFLODNode\");\n  register_multifield<av::gua::MFLODNode>(\"MFLODNode\");\n  class_<av::gua::LODNode, av::Link<av::gua::LODNode>, bases<av::gua::TransformNode>, boost::noncopyable >(\"LODNode\", \"docstring\", no_init);\n }\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "LOD", "Node", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "python", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "av", "ango", "/", "python", "/", "register", "_", "field", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "av", "ango", "/", "g", "ua", "/", "scene", "graph", "/", "LOD", "Node", ".", "hpp", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġboost", "::", "python", ";", "Ċ", "using", "Ġnamespace", "Ġav", "::", "python", ";", "Ċ", "Ċ", "namespace", "Ġboost", "Ċ", "Ġ{", "Ċ", "Ġ", "Ġnamespace", "Ġpython", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġtemplate", "Ġ<", "class", "ĠT", ">", "Ġstruct", "Ġpo", "inte", "e", "<", "av", "::", "Link", "<", "T", ">", "Ġ>", "Ċ", "ĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠ", "Ġusing", "Ġtype", "Ġ=", "ĠT", ";", "Ċ", "ĠĠĠĠ", "Ġ};", "Ċ", "ĠĠ", "Ġ}", "Ċ", "Ġ}", "Ċ", "Ċ", "void", "Ġinit", "_", "LOD", "Node", "()", "Ċ", "Ġ{", "Ċ", "Ġ", "Ġregister", "_", "field", "<", "av", "::", "g", "ua", "::", "S", "FLO", "D", "Node", ">(\"", "S", "FLO", "D", "Node", "\");", "Ċ", "Ġ", "Ġregister", "_", "mult", "if", "ield", "<", "av", "::", "g", "ua", "::", "M", "FLO", "D", "Node", ">(\"", "M", "FLO", "D", "Node", "\");", "Ċ", "Ġ", "Ġclass", "_<", "av", "::", "g", "ua", "::", "LOD", "Node", ",", "Ġav", "::", "Link", "<", "av", "::", "g", "ua", "::", "LOD", "Node", ">,", "Ġbases", "<", "av", "::", "g", "ua", "::", "Transform", "Node", ">,", "Ġboost", "::", "non", "copy", "able", "Ġ>", "(\"", "LOD", "Node", "\",", "Ġ\"", "docstring", "\",", "Ġno", "_", "init", ");", "Ċ", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::558", "code": "//\n// CertificateHandlerFactory.cpp\n//\n// Library: NetSSL_OpenSSL\n// Package: SSLCore\n// Module:  CertificateHandlerFactory\n//\n// Copyright (c) 2006-2009, Applied Informatics Software Engineering GmbH.\n// and Contributors.\n//\n// SPDX-License-Identifier:\tBSL-1.0\n//\n\n\n#include \"Poco/Net/CertificateHandlerFactory.h\"\n#include \"Poco/Net/SSLManager.h\"\n\n\nnamespace Poco {\nnamespace Net {\n\n\nCertificateHandlerFactory::CertificateHandlerFactory()\n{\n}\n\n\nCertificateHandlerFactory::~CertificateHandlerFactory()\n{\n}\n\n\nCertificateHandlerFactoryRegistrar::CertificateHandlerFactoryRegistrar(const std::string& name, CertificateHandlerFactory* pFactory)\n{\n\tSSLManager::instance().certificateHandlerFactoryMgr().setFactory(name, pFactory);\n}\n\n\nCertificateHandlerFactoryRegistrar::~CertificateHandlerFactoryRegistrar()\n{\n}\n\n\n} } // namespace Poco::Net\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCertificate", "Handler", "Factory", ".", "cpp", "Ċ", "//", "Ċ", "//", "ĠLibrary", ":", "ĠNet", "SSL", "_", "Open", "SSL", "Ċ", "//", "ĠPackage", ":", "ĠSSL", "Core", "Ċ", "//", "ĠModule", ":", "Ġ", "ĠCertificate", "Handler", "Factory", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2006", "-", "2009", ",", "ĠApp", "lied", "ĠIn", "form", "atic", "s", "ĠSoftware", "ĠEngine", "ering", "ĠG", "mb", "H", ".", "Ċ", "//", "Ġand", "ĠCon", "trib", "utors", ".", "Ċ", "//", "Ċ", "//", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĉ", "B", "SL", "-", "1", ".", "0", "Ċ", "//", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "Poco", "/", "Net", "/", "Certificate", "Handler", "Factory", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Poco", "/", "Net", "/", "SSL", "Manager", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "namespace", "ĠPo", "co", "Ġ{", "Ċ", "namespace", "ĠNet", "Ġ{", "Ċ", "Ċ", "Ċ", "Certificate", "Handler", "Factory", "::", "Certificate", "Handler", "Factory", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Certificate", "Handler", "Factory", "::~", "Certificate", "Handler", "Factory", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Certificate", "Handler", "Factory", "Registrar", "::", "Certificate", "Handler", "Factory", "Registrar", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ",", "ĠCertificate", "Handler", "Factory", "*", "Ġp", "Factory", ")", "Ċ", "{", "Ċ", "ĉ", "SSL", "Manager", "::", "instance", "().", "certificate", "Handler", "Factory", "Mgr", "().", "set", "Factory", "(", "name", ",", "Ġp", "Factory", ");", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Certificate", "Handler", "Factory", "Registrar", "::~", "Certificate", "Handler", "Factory", "Registrar", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "}", "Ġ}", "Ġ//", "Ġnamespace", "ĠPo", "co", "::", "Net", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::559", "code": "// Copyright (C) 2017 by Pedro Mendes, Virginia Tech Intellectual\n// Properties, Inc., University of Heidelberg, and University of\n// of Connecticut School of Medicine.\n// All rights reserved.\n\n// Copyright (C) 2010 - 2016 by Pedro Mendes, Virginia Tech Intellectual\n// Properties, Inc., University of Heidelberg, and The University\n// of Manchester.\n// All rights reserved.\n\n// Copyright (C) 2008 - 2009 by Pedro Mendes, Virginia Tech Intellectual\n// Properties, Inc., EML Research, gGmbH, University of Heidelberg,\n// and The University of Manchester.\n// All rights reserved.\n\n#ifndef TEST_000007_HPP__\n#define TEST_000007_HPP__\n\n#include <cppunit/TestFixture.h>\n#include <cppunit/TestSuite.h>\n#include <cppunit/TestResult.h>\n#include <cppunit/extensions/HelperMacros.h>\n\nclass CDataModel;\n\nclass test000007 : public CppUnit::TestFixture\n{\n  CPPUNIT_TEST_SUITE(test000007);\n  CPPUNIT_TEST(test_references_to_species);\n  CPPUNIT_TEST_SUITE_END();\n\nprotected:\n  static const char* MODEL_STRING;\n  static CDataModel* pCOPASIDATAMODEL;\n\npublic:\n  void setUp();\n\n  void tearDown();\n\n  void test_references_to_species();\n};\n\n#endif /* TEST000007_HPP__ */\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2017", "Ġby", "ĠP", "ed", "ro", "ĠM", "en", "des", ",", "ĠV", "ir", "gin", "ia", "ĠTech", "ĠIntel", "lect", "ual", "Ċ", "//", "ĠProperties", ",", "ĠInc", ".,", "ĠUn", "ivers", "ity", "Ġof", "ĠHe", "ide", "l", "berg", ",", "Ġand", "ĠUn", "ivers", "ity", "Ġof", "Ċ", "//", "Ġof", "ĠConnect", "ic", "ut", "ĠSch", "ool", "Ġof", "ĠM", "ed", "ic", "ine", ".", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "Ġ-", "Ġ2016", "Ġby", "ĠP", "ed", "ro", "ĠM", "en", "des", ",", "ĠV", "ir", "gin", "ia", "ĠTech", "ĠIntel", "lect", "ual", "Ċ", "//", "ĠProperties", ",", "ĠInc", ".,", "ĠUn", "ivers", "ity", "Ġof", "ĠHe", "ide", "l", "berg", ",", "Ġand", "ĠThe", "ĠUn", "ivers", "ity", "Ċ", "//", "Ġof", "ĠM", "anch", "ester", ".", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "Ġ-", "Ġ2009", "Ġby", "ĠP", "ed", "ro", "ĠM", "en", "des", ",", "ĠV", "ir", "gin", "ia", "ĠTech", "ĠIntel", "lect", "ual", "Ċ", "//", "ĠProperties", ",", "ĠInc", ".,", "ĠE", "ML", "ĠRe", "search", ",", "Ġg", "G", "mb", "H", ",", "ĠUn", "ivers", "ity", "Ġof", "ĠHe", "ide", "l", "berg", ",", "Ċ", "//", "Ġand", "ĠThe", "ĠUn", "ivers", "ity", "Ġof", "ĠM", "anch", "ester", ".", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "#", "ifndef", "ĠTEST", "_", "0000", "07", "_", "HP", "P", "__", "Ċ", "#", "define", "ĠTEST", "_", "0000", "07", "_", "HP", "P", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "Test", "Fixture", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "TestSuite", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "TestResult", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "extensions", "/", "Helper", "Macros", ".", "h", ">", "Ċ", "Ċ", "class", "ĠC", "DataModel", ";", "Ċ", "Ċ", "class", "Ġtest", "0000", "07", "Ġ:", "Ġpublic", "ĠCpp", "Unit", "::", "Test", "Fixture", "Ċ", "{", "Ċ", "Ġ", "ĠCPPUNIT", "_", "TEST", "_", "SUITE", "(", "test", "0000", "07", ");", "Ċ", "Ġ", "ĠCPPUNIT", "_", "TEST", "(", "test", "_", "references", "_", "to", "_", "species", ");", "Ċ", "Ġ", "ĠCPPUNIT", "_", "TEST", "_", "SUITE", "_", "END", "();", "Ċ", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġstatic", "Ġconst", "Ġchar", "*", "ĠMODE", "L", "_", "STRING", ";", "Ċ", "Ġ", "Ġstatic", "ĠC", "DataModel", "*", "Ġp", "COP", "AS", "ID", "AT", "AM", "ODE", "L", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġvoid", "ĠsetUp", "();", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĠtearDown", "();", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġtest", "_", "references", "_", "to", "_", "species", "();", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠTEST", "0000", "07", "_", "HP", "P", "__", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::560", "code": "/////////////////////////////////////////////////////////////\n// Copyright (C) 2003-2006 Bryan Clark and Kenneth Esler   //\n//                                                         //\n// This program is free software; you can redistribute it  //\n// and/or modify it under the terms of the GNU General     //\n// Public License as published by the Free Software        //\n// Foundation; either version 2 of the License, or         //\n// (at your option) any later version.  This program is    //\n// distributed in the hope that it will be useful, but     //\n// WITHOUT ANY WARRANTY; without even the implied warranty //\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. //  \n// See the GNU General Public License for more details.    //\n// For more information, please see the PIMC++ Home Page:  //\n//           http://pathintegrals.info                     //\n/////////////////////////////////////////////////////////////\n\n#include \"PotentialBase.h\"\n\nbool \nPotential::IsPH()     \n{ \n  return false; \n}\n\nbool\nPotential::NeedsRel()\n{\n  return false;\n}\n\ndouble\nPotential::V(int l, double r)\n{  return V(r); }\n\ndouble\nPotential::dVdr(int l, double r)\n{  return dVdr(r); }\n\ndouble\nPotential::d2Vdr2(int l, double r)\n{  return d2Vdr2(r); }\n", "code_tokens": ["Ġ//", "////////////////////////////////////////////////////////", "///", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "-", "2006", "ĠB", "ry", "an", "ĠCl", "ark", "Ġand", "ĠK", "en", "n", "eth", "ĠE", "sl", "er", "ĠĠ", "Ġ//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġ", "Ġ//", "Ċ", "//", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠĠĠĠ", "Ġ//", "Ċ", "//", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠĠĠĠĠĠĠ", "Ġ//", "Ċ", "//", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "ĠĠĠĠĠĠĠĠ", "Ġ//", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ġ", "ĠThis", "Ġprogram", "Ġis", "ĠĠĠ", "Ġ//", "Ċ", "//", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠĠĠĠ", "Ġ//", "Ċ", "//", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġ//", "Ċ", "//", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ//", "ĠĠ", "Ċ", "//", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĠĠĠ", "Ġ//", "Ċ", "//", "ĠFor", "Ġmore", "Ġinformation", ",", "Ġplease", "Ġsee", "Ġthe", "ĠP", "IM", "C", "++", "ĠHome", "ĠPage", ":", "Ġ", "Ġ//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠ", "Ġhttp", "://", "path", "integr", "als", ".", "info", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ċ", "////////////////////////////////////////////////////////", "/////", "Ċ", "Ċ", "#", "include", "Ġ\"", "Potential", "Base", ".", "h", "\"", "Ċ", "Ċ", "bool", "Ġ", "Ċ", "Potential", "::", "Is", "PH", "()", "ĠĠĠĠĠ", "Ċ", "{", "ĠĊ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ġ", "Ċ", "}", "Ċ", "Ċ", "bool", "Ċ", "Potential", "::", "Needs", "Rel", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "double", "Ċ", "Potential", "::", "V", "(", "int", "Ġl", ",", "Ġdouble", "Ġr", ")", "Ċ", "{", "Ġ", "Ġreturn", "ĠV", "(", "r", ");", "Ġ}", "Ċ", "Ċ", "double", "Ċ", "Potential", "::", "dV", "dr", "(", "int", "Ġl", ",", "Ġdouble", "Ġr", ")", "Ċ", "{", "Ġ", "Ġreturn", "Ġd", "V", "dr", "(", "r", ");", "Ġ}", "Ċ", "Ċ", "double", "Ċ", "Potential", "::", "d", "2", "V", "dr", "2", "(", "int", "Ġl", ",", "Ġdouble", "Ġr", ")", "Ċ", "{", "Ġ", "Ġreturn", "Ġd", "2", "V", "dr", "2", "(", "r", ");", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::561", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE127_Buffer_Underread__wchar_t_alloca_memcpy_81_bad.cpp\r\nLabel Definition File: CWE127_Buffer_Underread.stack.label.xml\r\nTemplate File: sources-sink-81_bad.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 127 Buffer Under-read\r\n * BadSource:  Set data pointer to before the allocated memory buffer\r\n * GoodSource: Set data pointer to the allocated memory buffer\r\n * Sinks: memcpy\r\n *    BadSink : Copy data to string using memcpy\r\n * Flow Variant: 81 Data flow: data passed in a parameter to an virtual method called via a reference\r\n *\r\n * */\r\n#ifndef OMITBAD\r\n\r\n#include \"std_testcase.h\"\r\n#include \"CWE127_Buffer_Underread__wchar_t_alloca_memcpy_81.h\"\r\n\r\nnamespace CWE127_Buffer_Underread__wchar_t_alloca_memcpy_81\r\n{\r\n\r\nvoid CWE127_Buffer_Underread__wchar_t_alloca_memcpy_81_bad::action(wchar_t * data) const\r\n{\r\n    {\r\n        wchar_t dest[100];\r\n        wmemset(dest, L'C', 100-1); /* fill with 'C's */\r\n        dest[100-1] = L'\\0'; /* null terminate */\r\n        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */\r\n        memcpy(dest, data, 100*sizeof(wchar_t));\r\n        /* Ensure null termination */\r\n        dest[100-1] = L'\\0';\r\n        printWLine(dest);\r\n    }\r\n}\r\n\r\n}\r\n#endif /* OMITBAD */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "127", "_", "Buffer", "_", "Under", "read", "__", "wchar", "_", "t", "_", "alloca", "_", "memcpy", "_", "81", "_", "bad", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "127", "_", "Buffer", "_", "Under", "read", ".", "stack", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "-", "81", "_", "bad", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ127", "ĠBuffer", "ĠUnder", "-", "read", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġ", "ĠSet", "Ġdata", "Ġpointer", "Ġto", "Ġbefore", "Ġthe", "Ġallocated", "Ġmemory", "Ġbuffer", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠSet", "Ġdata", "Ġpointer", "Ġto", "Ġthe", "Ġallocated", "Ġmemory", "Ġbuffer", "č", "Ċ", "Ġ*", "ĠSink", "s", ":", "Ġmemcpy", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "ĠCopy", "Ġdata", "Ġto", "Ġstring", "Ġusing", "Ġmemcpy", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ81", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġin", "Ġa", "Ġparameter", "Ġto", "Ġan", "Ġvirtual", "Ġmethod", "Ġcalled", "Ġvia", "Ġa", "Ġreference", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "BAD", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "CWE", "127", "_", "Buffer", "_", "Under", "read", "__", "wchar", "_", "t", "_", "alloca", "_", "memcpy", "_", "81", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "127", "_", "Buffer", "_", "Under", "read", "__", "wchar", "_", "t", "_", "alloca", "_", "memcpy", "_", "81", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "ĠCWE", "127", "_", "Buffer", "_", "Under", "read", "__", "wchar", "_", "t", "_", "alloca", "_", "memcpy", "_", "81", "_", "bad", "::", "action", "(", "wchar", "_", "t", "Ġ*", "Ġdata", ")", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwchar", "_", "t", "Ġdest", "[", "100", "];", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġw", "memset", "(", "dest", ",", "ĠL", "'", "C", "',", "Ġ100", "-", "1", ");", "Ġ/*", "Ġfill", "Ġwith", "Ġ'", "C", "'s", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdest", "[", "100", "-", "1", "]", "Ġ=", "ĠL", "'\\", "0", "';", "Ġ/*", "Ġnull", "Ġterminate", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "ĠP", "OT", "ENTIAL", "ĠF", "LA", "W", ":", "ĠPo", "ssibly", "Ġcopy", "Ġfrom", "Ġa", "Ġmemory", "Ġlocation", "Ġlocated", "Ġbefore", "Ġthe", "Ġsource", "Ġbuffer", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġmemcpy", "(", "dest", ",", "Ġdata", ",", "Ġ100", "*", "sizeof", "(", "wchar", "_", "t", "));", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "ĠEnsure", "Ġnull", "Ġtermination", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdest", "[", "100", "-", "1", "]", "Ġ=", "ĠL", "'\\", "0", "';", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprint", "W", "Line", "(", "dest", ");", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "BAD", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::562", "code": "#ifndef PYTHONIC_INCLUDE_MATH_ERF_HPP\n#define PYTHONIC_INCLUDE_MATH_ERF_HPP\n\n#include \"pythonic/include/utils/functor.hpp\"\n#include <cmath>\n\nPYTHONIC_NS_BEGIN\n\nnamespace math\n{\n  DEFINE_FUNCTOR_2(erf, std::erf);\n}\nPYTHONIC_NS_END\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠPY", "THON", "IC", "_", "INCLUDE", "_", "MATH", "_", "ER", "F", "_", "HP", "P", "Ċ", "#", "define", "ĠPY", "THON", "IC", "_", "INCLUDE", "_", "MATH", "_", "ER", "F", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "python", "ic", "/", "include", "/", "utils", "/", "functor", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "Ċ", "PYTHON", "IC", "_", "NS", "_", "BEGIN", "Ċ", "Ċ", "namespace", "Ġmath", "Ċ", "{", "Ċ", "Ġ", "ĠDEFINE", "_", "FUN", "CTOR", "_", "2", "(", "er", "f", ",", "Ġstd", "::", "er", "f", ");", "Ċ", "}", "Ċ", "PYTHON", "IC", "_", "NS", "_", "END", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::563", "code": "#include <QtTest>\n\n#include <timing/onofftiming.h>\n#include <controller/ntpcontroller.h>\n\nclass TestOnOffTiming : public QObject\n{\n    Q_OBJECT\n\nprivate slots:\n    void nextRuns()\n    {\n        NtpController ntp;\n        ntp.init();\n\n        QDateTime start = ntp.currentDateTime();\n        OnOffTiming timing(start);\n\n        QCOMPARE(timing.type(), QLatin1String(\"onoff\"));\n        qDebug(\"start timing now\");\n        QCOMPARE(timing.nextRun(), start);\n        qDebug(\"reset timing\");\n        QCOMPARE(timing.reset(), false);\n    }\n};\n\nQTEST_MAIN(TestOnOffTiming)\n\n#include \"tst_onofftiming.moc\"\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Qt", "Test", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "timing", "/", "on", "off", "timing", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "controller", "/", "n", "tp", "controller", ".", "h", ">", "Ċ", "Ċ", "class", "ĠTest", "On", "Off", "Timing", "Ġ:", "Ġpublic", "ĠQObject", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "private", "Ġslots", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġnext", "Runs", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠN", "tp", "Controller", "Ġn", "tp", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġn", "tp", ".", "init", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQDateTime", "Ġstart", "Ġ=", "Ġn", "tp", ".", "current", "DateTime", "();", "Ċ", "ĠĠĠĠĠĠĠ", "ĠOn", "Off", "Timing", "Ġtiming", "(", "start", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQCOMPARE", "(", "timing", ".", "type", "(),", "ĠQLatin", "1", "String", "(\"", "on", "off", "\"));", "Ċ", "ĠĠĠĠĠĠĠ", "ĠqDebug", "(\"", "start", "Ġtiming", "Ġnow", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQCOMPARE", "(", "timing", ".", "next", "Run", "(),", "Ġstart", ");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠqDebug", "(\"", "reset", "Ġtiming", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQCOMPARE", "(", "timing", ".", "reset", "(),", "Ġfalse", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "Q", "TEST", "_", "MAIN", "(", "Test", "On", "Off", "Timing", ")", "Ċ", "Ċ", "#", "include", "Ġ\"", "tst", "_", "on", "off", "timing", ".", "m", "oc", "\"", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::564", "code": "/******************************************************\n* copyright 2011, 2012, 2013 AbdAllah Aly Saad , aaly90[@]gmail.com\n* Part of Mesklinux Installer\n* See LICENSE file for more info\n******************************************************/\n\n#ifndef LICENSEPAGE_H\n#define LICENSEPAGE_H\n\n#include <MPF/Pages/pageBase.hpp>\n#include \"ui_licensePage.h\"\n\nclass licensePage : public pageBase, private Ui::licensePage\n{\n    Q_OBJECT\n\npublic:\n    explicit licensePage(QWidget *parent = 0);\n    ~licensePage();\n    int     initAll();\n\nprivate:\n    QString licenseFilePath;\n\n    void changeEvent(QEvent* event);\nprivate slots:\n    int setReady();\n};\n\n#endif // LICENSEPAGE_H\n", "code_tokens": ["Ġ/", "************************************************", "******", "Ċ", "*", "Ġcopyright", "Ġ2011", ",", "Ġ2012", ",", "Ġ2013", "ĠA", "bd", "Al", "la", "h", "ĠA", "ly", "ĠS", "aad", "Ġ,", "Ġa", "aly", "90", "[@", "]", "gmail", ".", "com", "Ċ", "*", "ĠPart", "Ġof", "ĠM", "es", "k", "linux", "ĠInstall", "er", "Ċ", "*", "ĠSee", "ĠLICENSE", "Ġfile", "Ġfor", "Ġmore", "Ġinfo", "Ċ", "************************************************", "******/", "Ċ", "Ċ", "#", "ifndef", "ĠLICENSE", "PAGE", "_", "H", "Ċ", "#", "define", "ĠLICENSE", "PAGE", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "MP", "F", "/", "Pages", "/", "page", "Base", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "ui", "_", "license", "Page", ".", "h", "\"", "Ċ", "Ċ", "class", "Ġlicense", "Page", "Ġ:", "Ġpublic", "Ġpage", "Base", ",", "Ġprivate", "ĠUi", "::", "license", "Page", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġexplicit", "Ġlicense", "Page", "(", "QWidget", "Ġ*", "parent", "Ġ=", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġ~", "license", "Page", "();", "Ċ", "ĠĠĠ", "Ġint", "ĠĠĠĠ", "Ġinit", "All", "();", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "ĠQString", "Ġlicense", "FilePath", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġchange", "Event", "(", "QEvent", "*", "Ġevent", ");", "Ċ", "private", "Ġslots", ":", "Ċ", "ĠĠĠ", "Ġint", "Ġset", "Ready", "();", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠLICENSE", "PAGE", "_", "H", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::565", "code": "/*------------------------------------------------------------------------------\n * test.cpp : for socket functions testing.\n * \n * author   : Guangli Dong\n *\n * history  : 2016/07/07 new\n *\n *----------------------------------------------------------------------------*/\n\n#include <conio.h>\n#include \"socket_lib.h\"\n\nint main(int argc, char *argv[])\n{\n    int sockfd;\n    int recvnum, i;\n    unsigned char buff[4096];\n    FILE *output;\n    const char ip[] = \"192.168.0.2\";\n    int port = 8888;\n\n    /* set for SiNan data stream */\n    sockfd = creat_client_socket(ip, port);\n    \n    /* set output file */\n    output = fopen(\"log.bin\", \"wb\");\n\n    if(0==sockfd) exit(0);\n    \n    while(!_kbhit()) {   // use keyboard hit action to stop loops\n        memset(buff, 0x00, sizeof(buff));\n        recvnum = recv(sockfd, (char *)buff, 4000, 0);\n\n        if(SOCKET_ERROR==recvnum || 0==recvnum) {\n            close_client_socket(sockfd);\n            SLEEP(2000);\n            printf(\"reconnecting...\\n\");\n            sockfd = creat_client_socket(ip, port);\n            continue;\n        }\n        for(i = 0; i<recvnum; i++) {\n            fwrite(&(buff[i]), 1, 1, output);\n#if 1\n            if((i%16) == 0) printf(\"\\n\");\n            printf(\"%02X \", buff[i]);\n#endif\n#if 0\n            printf(\"%c\", buff[i]);\n#endif\n        }\n    }\n\n    fclose(output);\n    close_client_socket(sockfd);\n\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "------------------------------------------------------------------------------", "Ċ", "Ġ*", "Ġtest", ".", "cpp", "Ġ:", "Ġfor", "Ġsocket", "Ġfunctions", "Ġtesting", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "Ġauthor", "ĠĠ", "Ġ:", "ĠGu", "ang", "li", "ĠD", "ong", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġhistory", "Ġ", "Ġ:", "Ġ2016", "/", "07", "/", "07", "Ġnew", "Ċ", "Ġ*", "Ċ", "Ġ*------------------------------------------------------------------------", "----*/", "Ċ", "Ċ", "#", "include", "Ġ<", "con", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "socket", "_", "lib", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġsock", "fd", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġrecv", "num", ",", "Ġi", ";", "Ċ", "ĠĠĠ", "Ġunsigned", "Ġchar", "Ġbuff", "[", "4096", "];", "Ċ", "ĠĠĠ", "ĠFILE", "Ġ*", "output", ";", "Ċ", "ĠĠĠ", "Ġconst", "Ġchar", "Ġip", "[]", "Ġ=", "Ġ\"", "192", ".", "168", ".", "0", ".", "2", "\";", "Ċ", "ĠĠĠ", "Ġint", "Ġport", "Ġ=", "Ġ8", "888", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ/*", "Ġset", "Ġfor", "ĠSi", "Nan", "Ġdata", "Ġstream", "Ġ*/", "Ċ", "ĠĠĠ", "Ġsock", "fd", "Ġ=", "Ġcre", "at", "_", "client", "_", "socket", "(", "ip", ",", "Ġport", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ/*", "Ġset", "Ġoutput", "Ġfile", "Ġ*/", "Ċ", "ĠĠĠ", "Ġoutput", "Ġ=", "Ġfopen", "(\"", "log", ".", "bin", "\",", "Ġ\"", "wb", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "(", "0", "==", "sockfd", ")", "Ġexit", "(", "0", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġwhile", "(!_", "k", "bh", "it", "())", "Ġ{", "ĠĠ", "Ġ//", "Ġuse", "Ġkeyboard", "Ġhit", "Ġaction", "Ġto", "Ġstop", "Ġloops", "Ċ", "ĠĠĠĠĠĠĠ", "Ġmemset", "(", "buff", ",", "Ġ0", "x", "00", ",", "Ġsizeof", "(", "buff", "));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġrecv", "num", "Ġ=", "Ġrecv", "(", "sockfd", ",", "Ġ(", "char", "Ġ*)", "buff", ",", "Ġ4000", ",", "Ġ0", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "SOCKET", "_", "ERROR", "==", "recv", "num", "Ġ||", "Ġ0", "==", "recv", "num", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġclose", "_", "client", "_", "socket", "(", "sockfd", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠS", "LEEP", "(", "2000", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"", "reconnect", "ing", "...\\", "n", "\");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsock", "fd", "Ġ=", "Ġcre", "at", "_", "client", "_", "socket", "(", "ip", ",", "Ġport", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "i", "Ġ=", "Ġ0", ";", "Ġi", "<", "recv", "num", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfwrite", "(&(", "buff", "[", "i", "]),", "Ġ1", ",", "Ġ1", ",", "Ġoutput", ");", "Ċ", "#", "if", "Ġ1", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "((", "i", "%", "16", ")", "Ġ==", "Ġ0", ")", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "02", "X", "Ġ\",", "Ġbuff", "[", "i", "]);", "Ċ", "#", "endif", "Ċ", "#", "if", "Ġ0", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "c", "\",", "Ġbuff", "[", "i", "]);", "Ċ", "#", "endif", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġfclose", "(", "output", ");", "Ċ", "ĠĠĠ", "Ġclose", "_", "client", "_", "socket", "(", "sockfd", ");", "Ċ", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::566", "code": "#pragma once\n\n#include \"messages/search/MessagePredicate.hpp\"\n\nnamespace chatterino {\n\n/**\n * @brief MessagePredicate checking whether a link exists in the message.\n *\n * This predicate will only allow messages that contain a link.\n */\nclass LinkPredicate : public MessagePredicate\n{\npublic:\n    LinkPredicate();\n\n    /**\n     * @brief Checks whether the message contains a link.\n     *\n     * @param message the message to check\n     * @return true if the message contains a link, false otherwise\n     */\n    bool appliesTo(const Message &message);\n};\n\n}  // namespace chatterino\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "messages", "/", "search", "/", "Message", "Predicate", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġch", "atter", "ino", "Ġ{", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "brief", "ĠMessage", "Predicate", "Ġchecking", "Ġwhether", "Ġa", "Ġlink", "Ġexists", "Ġin", "Ġthe", "Ġmessage", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġpredicate", "Ġwill", "Ġonly", "Ġallow", "Ġmessages", "Ġthat", "Ġcontain", "Ġa", "Ġlink", ".", "Ċ", "Ġ*/", "Ċ", "class", "ĠLink", "Predicate", "Ġ:", "Ġpublic", "ĠMessage", "Predicate", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠLink", "Predicate", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "brief", "ĠChecks", "Ġwhether", "Ġthe", "Ġmessage", "Ġcontains", "Ġa", "Ġlink", ".", "Ċ", "ĠĠĠĠ", "Ġ*", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "param", "Ġmessage", "Ġthe", "Ġmessage", "Ġto", "Ġcheck", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "return", "Ġtrue", "Ġif", "Ġthe", "Ġmessage", "Ġcontains", "Ġa", "Ġlink", ",", "Ġfalse", "Ġotherwise", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġbool", "Ġapplies", "To", "(", "const", "ĠMessage", "Ġ&", "message", ");", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġch", "atter", "ino", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::567", "code": "//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n//\n// UNSUPPORTED: libcpp-has-no-threads, c++98, c++03\n\n// <mutex>\n\n// template <class Mutex> class unique_lock;\n\n// unique_lock& operator=(unique_lock&& u);\n\n#include <mutex>\n#include <cassert>\n#include \"nasty_containers.hpp\"\n\nint main()\n{\n    {\n    typedef std::mutex M;\n\tM m0;\n\tM m1;\n    std::unique_lock<M> lk0(m0);\n    std::unique_lock<M> lk1(m1);\n    lk1 = std::move(lk0);\n    assert(lk1.mutex() == std::addressof(m0));\n    assert(lk1.owns_lock() == true);\n    assert(lk0.mutex() == nullptr);\n    assert(lk0.owns_lock() == false);\n    }\n    {\n    typedef nasty_mutex M;\n\tM m0;\n\tM m1;\n    std::unique_lock<M> lk0(m0);\n    std::unique_lock<M> lk1(m1);\n    lk1 = std::move(lk0);\n    assert(lk1.mutex() == std::addressof(m0));\n    assert(lk1.owns_lock() == true);\n    assert(lk0.mutex() == nullptr);\n    assert(lk0.owns_lock() == false);\n    }\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------------", "===//", "Ċ", "//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠThe", "ĠLLVM", "ĠCompiler", "ĠInf", "rastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUn", "ivers", "ity", "Ġof", "ĠI", "ll", "ino", "is", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLICENSE", ".", "TXT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "//", "Ċ", "//", "ĠUN", "SUPPORTED", ":", "Ġlibc", "pp", "-", "has", "-", "no", "-", "threads", ",", "Ġc", "++", "98", ",", "Ġc", "++", "03", "Ċ", "Ċ", "//", "Ġ<", "mutex", ">", "Ċ", "Ċ", "//", "Ġtemplate", "Ġ<", "class", "ĠMutex", ">", "Ġclass", "Ġunique", "_", "lock", ";", "Ċ", "Ċ", "//", "Ġunique", "_", "lock", "&", "Ġoperator", "=(", "unique", "_", "lock", "&&", "Ġu", ");", "Ċ", "Ċ", "#", "include", "Ġ<", "mutex", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ\"", "n", "ast", "y", "_", "containers", ".", "hpp", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "mutex", "ĠM", ";", "Ċ", "ĉ", "M", "Ġm", "0", ";", "Ċ", "ĉ", "M", "Ġm", "1", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "lock", "<", "M", ">", "Ġlk", "0", "(", "m", "0", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "lock", "<", "M", ">", "Ġlk", "1", "(", "m", "1", ");", "Ċ", "ĠĠĠ", "Ġlk", "1", "Ġ=", "Ġstd", "::", "move", "(", "lk", "0", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "lk", "1", ".", "mutex", "()", "Ġ==", "Ġstd", "::", "address", "of", "(", "m", "0", "));", "Ċ", "ĠĠĠ", "Ġassert", "(", "lk", "1", ".", "owns", "_", "lock", "()", "Ġ==", "Ġtrue", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "lk", "0", ".", "mutex", "()", "Ġ==", "Ġnullptr", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "lk", "0", ".", "owns", "_", "lock", "()", "Ġ==", "Ġfalse", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġn", "ast", "y", "_", "mutex", "ĠM", ";", "Ċ", "ĉ", "M", "Ġm", "0", ";", "Ċ", "ĉ", "M", "Ġm", "1", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "lock", "<", "M", ">", "Ġlk", "0", "(", "m", "0", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "lock", "<", "M", ">", "Ġlk", "1", "(", "m", "1", ");", "Ċ", "ĠĠĠ", "Ġlk", "1", "Ġ=", "Ġstd", "::", "move", "(", "lk", "0", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "lk", "1", ".", "mutex", "()", "Ġ==", "Ġstd", "::", "address", "of", "(", "m", "0", "));", "Ċ", "ĠĠĠ", "Ġassert", "(", "lk", "1", ".", "owns", "_", "lock", "()", "Ġ==", "Ġtrue", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "lk", "0", ".", "mutex", "()", "Ġ==", "Ġnullptr", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "lk", "0", ".", "owns", "_", "lock", "()", "Ġ==", "Ġfalse", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::568", "code": "/***************************************************************************\n**\n** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).\n** All rights reserved.\n** Contact: Karoliina T. Salminen <karoliina.t.salminen@nokia.com>\n**\n** This file is part of duicontrolpanel.\n**\n**\n** This program is free software; you can redistribute it and/or\n** modify it under the terms of the GNU Lesser General Public\n** License version 2.1 as published by the Free Software Foundation\n** and appearing in the file LICENSE.LGPL included in the packaging\n** of this file.\n**\n****************************************************************************/\n\n#include <QtGui>\n#include <QDebug>\n#include <MAction>\n#include <DcpWidget>\n#include \"buttonapplet.h\"\n#include \"button.h\"\n#include \"buttonbrief.h\"\n\nQ_EXPORT_PLUGIN2(buttonapplet, ButtonApplet)\n\nvoid ButtonApplet::init()\n{\n};\n\nDcpWidget* ButtonApplet::constructWidget(int widgetId)\n{\n    Q_UNUSED(widgetId);\n    return 0;\n}\n\nQString ButtonApplet::title() const\n{\n    return \"\";\n}\n\nQVector<MAction*> ButtonApplet::viewMenuItems()\n{\n    QVector<MAction*> vector(1);\n    return vector;\n}\n\nDcpBrief* ButtonApplet::constructBrief(int)\n{\n    return new ButtonBrief();\n}\n\n", "code_tokens": ["Ġ/", "************************************************************************", "***", "Ċ", "**", "Ċ", "**", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠN", "ok", "ia", "ĠCor", "poration", "Ġand", "/", "or", "Ġits", "Ġsubs", "idi", "ary", "(-", "ies", ").", "Ċ", "**", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "**", "ĠContact", ":", "ĠK", "ar", "ol", "i", "ina", "ĠT", ".", "ĠS", "al", "min", "en", "Ġ<", "k", "ar", "ol", "i", "ina", ".", "t", ".", "sal", "min", "en", "@", "n", "ok", "ia", ".", "com", ">", "Ċ", "**", "Ċ", "**", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġdu", "ic", "ont", "rol", "panel", ".", "Ċ", "**", "Ċ", "**", "Ċ", "**", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "**", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "**", "ĠLicense", "Ġversion", "Ġ2", ".", "1", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", "Ċ", "**", "Ġand", "Ġappear", "ing", "Ġin", "Ġthe", "Ġfile", "ĠLICENSE", ".", "LG", "PL", "Ġincluded", "Ġin", "Ġthe", "Ġpack", "aging", "Ċ", "**", "Ġof", "Ġthis", "Ġfile", ".", "Ċ", "**", "Ċ", "************************************************************************", "****/", "Ċ", "Ċ", "#", "include", "Ġ<", "Qt", "Gui", ">", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "#", "include", "Ġ<", "MA", "ction", ">", "Ċ", "#", "include", "Ġ<", "D", "cp", "Widget", ">", "Ċ", "#", "include", "Ġ\"", "button", "applet", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "button", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "button", "brief", ".", "h", "\"", "Ċ", "Ċ", "Q", "_", "EXPORT", "_", "PLUGIN", "2", "(", "button", "applet", ",", "ĠButton", "App", "let", ")", "Ċ", "Ċ", "void", "ĠButton", "App", "let", "::", "init", "()", "Ċ", "{", "Ċ", "};", "Ċ", "Ċ", "D", "cp", "Widget", "*", "ĠButton", "App", "let", "::", "construct", "Widget", "(", "int", "Ġwidget", "Id", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "UNUSED", "(", "widget", "Id", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "QString", "ĠButton", "App", "let", "::", "title", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ\"\";", "Ċ", "}", "Ċ", "Ċ", "Q", "Vector", "<", "MA", "ction", "*>", "ĠButton", "App", "let", "::", "view", "MenuItems", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQVector", "<", "MA", "ction", "*>", "Ġvector", "(", "1", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġvector", ";", "Ċ", "}", "Ċ", "Ċ", "D", "cp", "B", "rief", "*", "ĠButton", "App", "let", "::", "construct", "B", "rief", "(", "int", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnew", "ĠButton", "B", "rief", "();", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::569", "code": "#include <cstdint>\n\n#include <Magick++/Blob.h>\n#include <Magick++/Image.h>\n\n#include \"utils.cc\"\n#include \"encoder_utils.cc\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {\n  return fuzzEncoderWithStringFilename(\"gradient\", Data, Size);\n}\n\n#include \"travis.cc\"\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "int", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Magick", "++", "/", "Blob", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Magick", "++", "/", "Image", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "utils", ".", "cc", "\"", "Ċ", "#", "include", "Ġ\"", "encoder", "_", "utils", ".", "cc", "\"", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "ĠLLVM", "Fuzz", "er", "Test", "One", "Input", "(", "const", "Ġuint", "8", "_", "t", "Ġ*", "Data", ",", "Ġsize", "_", "t", "ĠSize", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġfuzz", "Encoder", "WithString", "Filename", "(\"", "gradient", "\",", "ĠData", ",", "ĠSize", ");", "Ċ", "}", "Ċ", "Ċ", "#", "include", "Ġ\"", "trav", "is", ".", "cc", "\"", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::570", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/medialive/model/CreateTagsRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n\n#include <utility>\n\nusing namespace Aws::MediaLive::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\n\nCreateTagsRequest::CreateTagsRequest() : \n    m_resourceArnHasBeenSet(false),\n    m_tagsHasBeenSet(false)\n{\n}\n\nAws::String CreateTagsRequest::SerializePayload() const\n{\n  JsonValue payload;\n\n  if(m_tagsHasBeenSet)\n  {\n   JsonValue tagsJsonMap;\n   for(auto& tagsItem : m_tags)\n   {\n     tagsJsonMap.WithString(tagsItem.first, tagsItem.second);\n   }\n   payload.WithObject(\"tags\", std::move(tagsJsonMap));\n\n  }\n\n  return payload.View().WriteReadable();\n}\n\n\n\n\n", "code_tokens": ["Ġ", "ï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaff", "ili", "ates", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "med", "ial", "ive", "/", "model", "/", "Create", "Tags", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "Json", "Serializer", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Media", "Live", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Utils", "::", "Json", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Utils", ";", "Ċ", "Ċ", "Create", "Tags", "Request", "::", "Create", "Tags", "Request", "()", "Ġ:", "ĠĊ", "ĠĠĠ", "Ġm", "_", "resource", "Arn", "HasBeenSet", "(", "false", "),", "Ċ", "ĠĠĠ", "Ġm", "_", "tags", "HasBeenSet", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Aws", "::", "String", "ĠCreate", "Tags", "Request", "::", "Serialize", "Payload", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠJsonValue", "Ġpayload", ";", "Ċ", "Ċ", "Ġ", "Ġif", "(", "m", "_", "tags", "HasBeenSet", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠ", "ĠJsonValue", "Ġtags", "Json", "Map", ";", "Ċ", "ĠĠ", "Ġfor", "(", "auto", "&", "Ġtags", "Item", "Ġ:", "Ġm", "_", "tags", ")", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠ", "Ġtags", "Json", "Map", ".", "WithString", "(", "tags", "Item", ".", "first", ",", "Ġtags", "Item", ".", "second", ");", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġpayload", ".", "With", "Object", "(\"", "tags", "\",", "Ġstd", "::", "move", "(", "tags", "Json", "Map", "));", "Ċ", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġpayload", ".", "View", "().", "Write", "Readable", "();", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::571", "code": "/*\n * Copyright 2021 Google LLC\n *\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n#include \"src/core/SkFontMgrPriv.h\"\n#include \"tools/flags/CommandLineFlags.h\"\n#include \"tools/flags/CommonFlags.h\"\n#include \"tools/fonts/TestFontMgr.h\"\n\n#if defined(SK_BUILD_FOR_WIN)\n#include \"include/ports/SkTypeface_win.h\"\n#endif\n\nnamespace CommonFlags {\n\n\nstatic DEFINE_bool(nativeFonts,\n                   true,\n                   \"If true, use native font manager and rendering. \"\n                   \"If false, fonts will draw as portably as possible.\");\n#if defined(SK_BUILD_FOR_WIN)\nstatic DEFINE_bool(gdi, false, \"Use GDI instead of DirectWrite for font rendering.\");\n#endif\n\nvoid SetDefaultFontMgr() {\n    if (!FLAGS_nativeFonts) {\n        gSkFontMgr_DefaultFactory = &ToolUtils::MakePortableFontMgr;\n    }\n#if defined(SK_BUILD_FOR_WIN)\n    if (FLAGS_gdi) {\n        gSkFontMgr_DefaultFactory = &SkFontMgr_New_GDI;\n    }\n#endif\n}\n\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2", "021", "ĠGoogle", "ĠLLC", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "Ġ*", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "src", "/", "core", "/", "Sk", "Font", "Mgr", "Priv", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "tools", "/", "flags", "/", "CommandLine", "Flags", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "tools", "/", "flags", "/", "Common", "Flags", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "tools", "/", "fonts", "/", "Test", "Font", "Mgr", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "Ġdefined", "(", "SK", "_", "BUILD", "_", "FOR", "_", "WIN", ")", "Ċ", "#", "include", "Ġ\"", "include", "/", "ports", "/", "Sk", "Typeface", "_", "win", ".", "h", "\"", "Ċ", "#", "endif", "Ċ", "Ċ", "namespace", "ĠCommon", "Flags", "Ġ{", "Ċ", "Ċ", "Ċ", "static", "ĠDEFINE", "_", "bool", "(", "native", "Fonts", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġtrue", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\"", "If", "Ġtrue", ",", "Ġuse", "Ġnative", "Ġfont", "Ġmanager", "Ġand", "Ġrendering", ".", "Ġ\"", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\"", "If", "Ġfalse", ",", "Ġfonts", "Ġwill", "Ġdraw", "Ġas", "Ġport", "ably", "Ġas", "Ġpossible", ".\");", "Ċ", "#", "if", "Ġdefined", "(", "SK", "_", "BUILD", "_", "FOR", "_", "WIN", ")", "Ċ", "static", "ĠDEFINE", "_", "bool", "(", "g", "di", ",", "Ġfalse", ",", "Ġ\"", "Use", "ĠG", "DI", "Ġinstead", "Ġof", "ĠDirect", "Write", "Ġfor", "Ġfont", "Ġrendering", ".\");", "Ċ", "#", "endif", "Ċ", "Ċ", "void", "ĠSet", "Default", "Font", "Mgr", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "FLAGS", "_", "native", "Fonts", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġg", "Sk", "Font", "Mgr", "_", "Default", "Factory", "Ġ=", "Ġ&", "Tool", "Utils", "::", "Make", "Portable", "Font", "Mgr", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "#", "if", "Ġdefined", "(", "SK", "_", "BUILD", "_", "FOR", "_", "WIN", ")", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "FLAGS", "_", "g", "di", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġg", "Sk", "Font", "Mgr", "_", "Default", "Factory", "Ġ=", "Ġ&", "Sk", "Font", "Mgr", "_", "New", "_", "G", "DI", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "#", "endif", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::572", "code": "/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */\n\n/*\n Copyright (C) 2008 Andreas Gaida\n Copyright (C) 2008 Ralph Schreyer\n Copyright (C) 2008 Klaus Spanderen\n\n This file is part of QuantLib, a free-software/open-source library\n for financial quantitative analysts and developers - http://quantlib.org/\n\n QuantLib is free software: you can redistribute it and/or modify it\n under the terms of the QuantLib license.  You should have received a\n copy of the license along with this program; if not, please email\n <quantlib-dev@lists.sf.net>. The license is also available online at\n <http://quantlib.org/license.shtml>.\n\n This program is distributed in the hope that it will be useful, but WITHOUT\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n FOR A PARTICULAR PURPOSE.  See the license for more details.\n*/\n\n/*! \\file secondordermixedderivativeop.hpp\n    \\brief second order mixed derivative linear operator\n*/\n\n#ifndef quantlib_second_order_mixed_derivative_hpp\n#define quantlib_second_order_mixed_derivative_hpp\n\n#include <ql/methods/finitedifferences/operators/ninepointlinearop.hpp>\n\nnamespace QuantLib {\n\n    class SecondOrderMixedDerivativeOp : public NinePointLinearOp {\n    public:\n        SecondOrderMixedDerivativeOp(\n            Size d0, Size d1, const boost::shared_ptr<FdmMesher>& mesher);\n    };\n}\n\n#endif\n", "code_tokens": ["Ġ/*", "Ġ-", "*-", "Ġmode", ":", "Ġc", "++;", "Ġtab", "-", "width", ":", "Ġ4", ";", "Ġindent", "-", "tabs", "-", "mode", ":", "Ġnil", ";", "Ġc", "-", "basic", "-", "offset", ":", "Ġ4", "Ġ-", "*-", "Ġ*/", "Ċ", "Ċ", "/*", "Ċ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "ĠAnd", "re", "as", "ĠG", "aid", "a", "Ċ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "ĠR", "alph", "ĠSch", "re", "yer", "Ċ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "ĠK", "la", "us", "ĠSpan", "de", "ren", "Ċ", "Ċ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠQuant", "Lib", ",", "Ġa", "Ġfree", "-", "software", "/", "open", "-", "source", "Ġlibrary", "Ċ", "Ġfor", "Ġfin", "ancial", "Ġquant", "itative", "Ġan", "al", "yst", "s", "Ġand", "Ġdevelopers", "Ġ-", "Ġhttp", "://", "quant", "lib", ".", "org", "/", "Ċ", "Ċ", "ĠQuant", "Lib", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ċ", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠQuant", "Lib", "Ġlicense", ".", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ċ", "Ġcopy", "Ġof", "Ġthe", "Ġlicense", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġplease", "Ġemail", "Ċ", "Ġ<", "quant", "lib", "-", "dev", "@", "lists", ".", "sf", ".", "net", ">.", "ĠThe", "Ġlicense", "Ġis", "Ġalso", "Ġavailable", "Ġonline", "Ġat", "Ċ", "Ġ<", "http", "://", "quant", "lib", ".", "org", "/", "license", ".", "s", "html", ">.", "Ċ", "Ċ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "Ċ", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "Ċ", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ġlicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "*/", "Ċ", "Ċ", "/*!", "Ġ\\", "file", "Ġsecond", "order", "mixed", "der", "ivative", "op", ".", "hpp", "Ċ", "ĠĠĠ", "Ġ\\", "brief", "Ġsecond", "Ġorder", "Ġmixed", "Ġderivative", "Ġlinear", "Ġoperator", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "Ġquant", "lib", "_", "second", "_", "order", "_", "mixed", "_", "der", "ivative", "_", "hpp", "Ċ", "#", "define", "Ġquant", "lib", "_", "second", "_", "order", "_", "mixed", "_", "der", "ivative", "_", "hpp", "Ċ", "Ċ", "#", "include", "Ġ<", "ql", "/", "methods", "/", "fin", "ited", "if", "ferences", "/", "operators", "/", "n", "ine", "point", "linear", "op", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "ĠQuant", "Lib", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġclass", "ĠSecond", "Order", "Mixed", "Derivative", "Op", "Ġ:", "Ġpublic", "ĠN", "ine", "Point", "Linear", "Op", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSecond", "Order", "Mixed", "Derivative", "Op", "(", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠSize", "Ġd", "0", ",", "ĠSize", "Ġd", "1", ",", "Ġconst", "Ġboost", "::", "shared", "_", "ptr", "<", "F", "dm", "Mes", "her", ">&", "Ġmes", "her", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::573", "code": "// { dg-do run { target c++11 } }\n// 2010-03-10  Paolo Carlini  <paolo.carlini@oracle.com>\n//\n// Copyright (C) 2010-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <unordered_set>\n#include <testsuite_hooks.h>\n\n// DR 1189. Awkward interface for changing the number of buckets\n// in an unordered associative container\nvoid test01() \n{\n  std::unordered_multiset<int> ms1;\n  ms1.reserve(10);\n  VERIFY( ms1.bucket_count() >= 10 );\n\n  ms1.reserve(100);\n  VERIFY( ms1.bucket_count() >= 100 );\n\n  std::unordered_multiset<int> ms2(100);\n  VERIFY( ms2.bucket_count() >= 100 );\n\n  ms2.reserve(1000);\n  VERIFY( ms2.bucket_count() >= 1000 );\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġrun", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "//", "Ġ2010", "-", "03", "-", "10", "Ġ", "ĠP", "ao", "lo", "ĠCar", "lin", "i", "Ġ", "Ġ<", "pa", "o", "lo", ".", "car", "lin", "i", "@", "oracle", ".", "com", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "-", "202", "1", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "unordered", "_", "set", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "//", "ĠDR", "Ġ1", "189", ".", "ĠA", "wk", "ward", "Ġinterface", "Ġfor", "Ġchanging", "Ġthe", "Ġnumber", "Ġof", "Ġbuckets", "Ċ", "//", "Ġin", "Ġan", "Ġunordered", "Ġassociative", "Ġcontainer", "Ċ", "void", "Ġtest", "01", "()", "Ġ", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "unordered", "_", "multiset", "<", "int", ">", "Ġms", "1", ";", "Ċ", "Ġ", "Ġms", "1", ".", "reserve", "(", "10", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġms", "1", ".", "bucket", "_", "count", "()", "Ġ>=", "Ġ10", "Ġ);", "Ċ", "Ċ", "Ġ", "Ġms", "1", ".", "reserve", "(", "100", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġms", "1", ".", "bucket", "_", "count", "()", "Ġ>=", "Ġ100", "Ġ);", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "unordered", "_", "multiset", "<", "int", ">", "Ġms", "2", "(", "100", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġms", "2", ".", "bucket", "_", "count", "()", "Ġ>=", "Ġ100", "Ġ);", "Ċ", "Ċ", "Ġ", "Ġms", "2", ".", "reserve", "(", "1000", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "Ġms", "2", ".", "bucket", "_", "count", "()", "Ġ>=", "Ġ1000", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::574", "code": "// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n//\n// Copyright (C) 2004-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n//\n// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n\n#include <tr1/type_traits>\n\n// { dg-do compile }\n\nvoid test01()\n{\n  // Check for required typedefs\n  typedef std::tr1::has_trivial_destructor<int>     test_type;\n  typedef test_type::value_type               value_type;\n  typedef test_type::type                     type;\n  typedef test_type::type::value_type         type_value_type;\n  typedef test_type::type::type               type_type;\n}\n", "code_tokens": ["Ġ//", "Ġ2004", "-", "12", "-", "26", "Ġ", "ĠP", "ao", "lo", "ĠCar", "lin", "i", "Ġ", "Ġ<", "pc", "ar", "lin", "i", "@", "s", "use", ".", "de", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2004", "-", "202", "1", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "Ċ", "//", "ĠNB", ":", "ĠThis", "Ġfile", "Ġis", "Ġfor", "Ġtesting", "Ġtr", "1", "/", "type", "_", "traits", "Ġwith", "ĠNO", "ĠOTHER", "ĠIN", "CLU", "DES", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "tr", "1", "/", "type", "_", "traits", ">", "Ċ", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠCheck", "Ġfor", "Ġrequired", "Ġtypedef", "s", "Ċ", "Ġ", "Ġtypedef", "Ġstd", "::", "tr", "1", "::", "has", "_", "trivial", "_", "destructor", "<", "int", ">", "ĠĠĠĠ", "Ġtest", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġtest", "_", "type", "::", "value", "_", "type", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġvalue", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġtest", "_", "type", "::", "type", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġtype", ";", "Ċ", "Ġ", "Ġtypedef", "Ġtest", "_", "type", "::", "type", "::", "value", "_", "type", "ĠĠĠĠĠĠĠĠ", "Ġtype", "_", "value", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġtest", "_", "type", "::", "type", "::", "type", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġtype", "_", "type", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::575", "code": "#include <apt-pkg/init.h>\n#include <iostream>\n\n#include \"config.h\"\n#include \"rpackagelister.h\"\n#include \"rpackage.h\"\n\nusing namespace std;\n\nint main(int argc, char **argv)\n{\n   pkgInitConfig(*_config);\n   pkgInitSystem(*_config, _system);\n   \n   RPackageLister *lister = new RPackageLister();\n   lister->openCache();\n   RPackage *pkg = lister->getPackage(\"eog\");\n   cerr << \"pkg: \" << pkg->name() << endl;\n   cerr << \"Bugs: \" << pkg->findTagFromPkgRecord(\"Bugs\") << endl;\n\n   vector<DepInformation> deps = pkg->enumDeps();\n   for(unsigned int i=0;i<deps.size();i++) {\n      cerr << \"deps: \" << deps[i].name << endl;\n   }\n   cerr << \"size: \" << deps.size() << endl;\n\n   // go over the cache with findTagFromPkgRecord()\n   vector<RPackage *> all = lister->getPackages();\n   for(int i=0;i<all.size();i++) {\n      all[i]->findTagFromPkgRecord(\"Bugs\");\n   }\n   \n   // go over the cache with findTagFromPkgRecord()\n   string s;\n   unsigned long now = clock();\n   for(int i=0;i<all.size();i++) {\n      s = all[i]->getRawRecord();\n   }\n   cerr << \"iterating each record: \" << float(clock()-now)/CLOCKS_PER_SEC << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "apt", "-", "pkg", "/", "init", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "config", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "r", "pack", "ag", "el", "ister", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "r", "package", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġpkg", "Init", "Config", "(*", "_", "config", ");", "Ċ", "ĠĠ", "Ġpkg", "Init", "System", "(*", "_", "config", ",", "Ġ_", "system", ");", "Ċ", "ĠĠĠĊ", "ĠĠ", "ĠR", "Package", "Lister", "Ġ*", "list", "er", "Ġ=", "Ġnew", "ĠR", "Package", "Lister", "();", "Ċ", "ĠĠ", "Ġlist", "er", "->", "open", "Cache", "();", "Ċ", "ĠĠ", "ĠR", "Package", "Ġ*", "pkg", "Ġ=", "Ġlist", "er", "->", "getPackage", "(\"", "e", "og", "\");", "Ċ", "ĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "pkg", ":", "Ġ\"", "Ġ<<", "Ġpkg", "->", "name", "()", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "Bu", "gs", ":", "Ġ\"", "Ġ<<", "Ġpkg", "->", "find", "Tag", "From", "Pkg", "Record", "(\"", "Bu", "gs", "\")", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠ", "Ġvector", "<", "Dep", "Information", ">", "Ġdeps", "Ġ=", "Ġpkg", "->", "enum", "Deps", "();", "Ċ", "ĠĠ", "Ġfor", "(", "unsigned", "Ġint", "Ġi", "=", "0", ";", "i", "<", "deps", ".", "size", "();", "i", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "deps", ":", "Ġ\"", "Ġ<<", "Ġdeps", "[", "i", "].", "name", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "size", ":", "Ġ\"", "Ġ<<", "Ġdeps", ".", "size", "()", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠ", "Ġ//", "Ġgo", "Ġover", "Ġthe", "Ġcache", "Ġwith", "Ġfind", "Tag", "From", "Pkg", "Record", "()", "Ċ", "ĠĠ", "Ġvector", "<", "R", "Package", "Ġ*>", "Ġall", "Ġ=", "Ġlist", "er", "->", "get", "Packages", "();", "Ċ", "ĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "all", ".", "size", "();", "i", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġall", "[", "i", "]->", "find", "Tag", "From", "Pkg", "Record", "(\"", "Bu", "gs", "\");", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠĠĊ", "ĠĠ", "Ġ//", "Ġgo", "Ġover", "Ġthe", "Ġcache", "Ġwith", "Ġfind", "Tag", "From", "Pkg", "Record", "()", "Ċ", "ĠĠ", "Ġstring", "Ġs", ";", "Ċ", "ĠĠ", "Ġunsigned", "Ġlong", "Ġnow", "Ġ=", "Ġclock", "();", "Ċ", "ĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "all", ".", "size", "();", "i", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġs", "Ġ=", "Ġall", "[", "i", "]->", "getRaw", "Record", "();", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "iter", "ating", "Ġeach", "Ġrecord", ":", "Ġ\"", "Ġ<<", "Ġfloat", "(", "clock", "()-", "now", ")/", "CLOCK", "S", "_", "PER", "_", "SEC", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::576", "code": "// { dg-do compile { target c++11 } }\n\n// Copyright (C) 2016-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <type_traits>\n#include <utility>\n\nstruct derived;\nstruct base\n{\n  operator derived & () &;\n  operator derived const & () const &;\n  operator derived && () &&;\n};\n\nstruct derived : base {};\n\nbase::operator derived & () &\n{\n  return *static_cast<derived *>(this);\n}\n\nbase::operator derived const & () const &\n{\n  return *static_cast<derived const *>(this);\n}\n\nbase::operator derived && () &&\n{\n  return std::move(*static_cast<derived *>(this));\n}\n\nint main()\n{\n  base b;\n  derived&& d(static_cast<derived&&>(std::move(b)));\n  derived&& d2(std::move(b));\n  static_assert(std::is_constructible<derived&&, base&&>::value, \"\");\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2016", "-", "202", "1", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "type", "_", "traits", ">", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "struct", "Ġderived", ";", "Ċ", "struct", "Ġbase", "Ċ", "{", "Ċ", "Ġ", "Ġoperator", "Ġderived", "Ġ&", "Ġ()", "Ġ&", ";", "Ċ", "Ġ", "Ġoperator", "Ġderived", "Ġconst", "Ġ&", "Ġ()", "Ġconst", "Ġ&", ";", "Ċ", "Ġ", "Ġoperator", "Ġderived", "Ġ&&", "Ġ()", "Ġ&&", ";", "Ċ", "};", "Ċ", "Ċ", "struct", "Ġderived", "Ġ:", "Ġbase", "Ġ{};", "Ċ", "Ċ", "base", "::", "operator", "Ġderived", "Ġ&", "Ġ()", "Ġ&", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ*", "static", "_", "cast", "<", "derived", "Ġ*>(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "base", "::", "operator", "Ġderived", "Ġconst", "Ġ&", "Ġ()", "Ġconst", "Ġ&", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ*", "static", "_", "cast", "<", "derived", "Ġconst", "Ġ*>(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "base", "::", "operator", "Ġderived", "Ġ&&", "Ġ()", "Ġ&&", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġstd", "::", "move", "(*", "static", "_", "cast", "<", "derived", "Ġ*>(", "this", "));", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbase", "Ġb", ";", "Ċ", "Ġ", "Ġderived", "&&", "Ġd", "(", "static", "_", "cast", "<", "derived", "&&", ">(", "std", "::", "move", "(", "b", ")));", "Ċ", "Ġ", "Ġderived", "&&", "Ġd", "2", "(", "std", "::", "move", "(", "b", "));", "Ċ", "Ġ", "Ġstatic", "_", "assert", "(", "std", "::", "is", "_", "construct", "ible", "<", "derived", "&&", ",", "Ġbase", "&&", ">::", "value", ",", "Ġ\"\");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::577", "code": "/*\n* Simpatico - Simulation Package for Polymeric and Molecular Liquids\n*\n* Copyright 2010 - 2014, The Regents of the University of Minnesota\n* Distributed under the terms of the GNU General Public License.\n*/\n\n#include \"PressureAnalyzer.h\"\n#include <ddMd/simulation/Simulation.h>\n\n#include <sstream>\n\nnamespace DdMd\n{\n\n   using namespace Util;\n\n   /*\n   * Constructor.\n   */\n   PressureAnalyzer::PressureAnalyzer(Simulation& simulation) \n    : AverageAnalyzer(simulation)\n   {  setClassName(\"PressureAnalyzer\"); }\n\n   /*\n   * Destructor.\n   */\n   PressureAnalyzer::~PressureAnalyzer() \n   {}  \n\n   /*\n   * Compute current value.\n   */\n   void PressureAnalyzer::compute() \n   {  \n      simulation().computeVirialStress(); \n      simulation().computeKineticStress(); \n   }\n\n   /*\n   * Get value current value (call only on master)\n   */\n   double PressureAnalyzer::value() \n   {\n      if (!simulation().domain().isMaster()) {\n         UTIL_THROW(\"Error: Not master processor\");\n      }\n      double pressure;\n      pressure = simulation().virialPressure();\n      pressure += simulation().kineticPressure();\n      return pressure;\n   }\n\n}\n", "code_tokens": ["Ġ/*", "Ċ", "*", "ĠS", "imp", "atic", "o", "Ġ-", "ĠSim", "ulation", "ĠPackage", "Ġfor", "ĠPol", "ym", "eric", "Ġand", "ĠM", "ole", "cular", "ĠLi", "qu", "ids", "Ċ", "*", "Ċ", "*", "ĠCopyright", "Ġ2010", "Ġ-", "Ġ2014", ",", "ĠThe", "ĠReg", "ents", "Ġof", "Ġthe", "ĠUn", "ivers", "ity", "Ġof", "ĠMin", "nes", "ota", "Ċ", "*", "ĠD", "istributed", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Pressure", "Analyzer", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "dd", "Md", "/", "sim", "ulation", "/", "Simulation", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "namespace", "ĠD", "d", "Md", "Ċ", "{", "Ċ", "Ċ", "ĠĠ", "Ġusing", "Ġnamespace", "ĠUtil", ";", "Ċ", "Ċ", "ĠĠ", "Ġ/*", "Ċ", "ĠĠ", "Ġ*", "ĠConstructor", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "ĠĠ", "ĠPress", "ure", "Analyzer", "::", "Pressure", "Analyzer", "(", "Simulation", "&", "Ġsimulation", ")", "ĠĊ", "ĠĠĠ", "Ġ:", "ĠAverage", "Analyzer", "(", "sim", "ulation", ")", "Ċ", "ĠĠ", "Ġ{", "Ġ", "Ġset", "ClassName", "(\"", "Pressure", "Analyzer", "\");", "Ġ}", "Ċ", "Ċ", "ĠĠ", "Ġ/*", "Ċ", "ĠĠ", "Ġ*", "ĠDestructor", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "ĠĠ", "ĠPress", "ure", "Analyzer", "::~", "Pressure", "Analyzer", "()", "ĠĊ", "ĠĠ", "Ġ{}", "ĠĠĊ", "Ċ", "ĠĠ", "Ġ/*", "Ċ", "ĠĠ", "Ġ*", "ĠCompute", "Ġcurrent", "Ġvalue", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "ĠĠ", "Ġvoid", "ĠPress", "ure", "Analyzer", "::", "compute", "()", "ĠĊ", "ĠĠ", "Ġ{", "ĠĠĊ", "ĠĠĠĠĠ", "Ġsimulation", "().", "compute", "Vi", "ri", "al", "Stress", "();", "ĠĊ", "ĠĠĠĠĠ", "Ġsimulation", "().", "compute", "Kin", "etic", "Stress", "();", "ĠĊ", "ĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠ", "Ġ/*", "Ċ", "ĠĠ", "Ġ*", "ĠGet", "Ġvalue", "Ġcurrent", "Ġvalue", "Ġ(", "call", "Ġonly", "Ġon", "Ġmaster", ")", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "ĠĠ", "Ġdouble", "ĠPress", "ure", "Analyzer", "::", "value", "()", "ĠĊ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(!", "sim", "ulation", "().", "domain", "().", "is", "Master", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĠUTIL", "_", "THROW", "(\"", "Error", ":", "ĠNot", "Ġmaster", "Ġprocessor", "\");", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġdouble", "Ġpressure", ";", "Ċ", "ĠĠĠĠĠ", "Ġpressure", "Ġ=", "Ġsimulation", "().", "vi", "ri", "al", "Pressure", "();", "Ċ", "ĠĠĠĠĠ", "Ġpressure", "Ġ+=", "Ġsimulation", "().", "kin", "etic", "Pressure", "();", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġpressure", ";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::578", "code": "﻿/*\n* Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\").\n* You may not use this file except in compliance with the License.\n* A copy of the License is located at\n*\n*  http://aws.amazon.com/apache2.0\n*\n* or in the \"license\" file accompanying this file. This file is distributed\n* on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n* express or implied. See the License for the specific language governing\n* permissions and limitations under the License.\n*/\n\n#include <aws/iam/model/ChangePasswordRequest.h>\n#include <aws/core/utils/StringUtils.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\nusing namespace Aws::IAM::Model;\nusing namespace Aws::Utils;\n\nChangePasswordRequest::ChangePasswordRequest() : \n    m_oldPasswordHasBeenSet(false),\n    m_newPasswordHasBeenSet(false)\n{\n}\n\nAws::String ChangePasswordRequest::SerializePayload() const\n{\n  Aws::StringStream ss;\n  ss << \"Action=ChangePassword&\";\n  if(m_oldPasswordHasBeenSet)\n  {\n    ss << \"OldPassword=\" << StringUtils::URLEncode(m_oldPassword.c_str()) << \"&\";\n  }\n\n  if(m_newPasswordHasBeenSet)\n  {\n    ss << \"NewPassword=\" << StringUtils::URLEncode(m_newPassword.c_str()) << \"&\";\n  }\n\n  ss << \"Version=2010-05-08\";\n  return ss.str();\n}\n\n\nvoid  ChangePasswordRequest::DumpBodyToUrl(Aws::Http::URI& uri ) const\n{\n  uri.SetQueryString(SerializePayload());\n}\n", "code_tokens": ["Ġ", "ï", "»", "¿", "/*", "Ċ", "*", "ĠCopyright", "Ġ2010", "-", "2017", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaff", "ili", "ates", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "*", "Ċ", "*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\").", "Ċ", "*", "ĠYou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "*", "ĠA", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġis", "Ġlocated", "Ġat", "Ċ", "*", "Ċ", "*", "Ġ", "Ġhttp", "://", "aws", ".", "amazon", ".", "com", "/", "apache", "2", ".", "0", "Ċ", "*", "Ċ", "*", "Ġor", "Ġin", "Ġthe", "Ġ\"", "license", "\"", "Ġfile", "Ġac", "company", "ing", "Ġthis", "Ġfile", ".", "ĠThis", "Ġfile", "Ġis", "Ġdistributed", "Ċ", "*", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ċ", "*", "Ġexpress", "Ġor", "Ġimplied", ".", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ċ", "*", "Ġpermissions", "Ġand", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "iam", "/", "model", "/", "Change", "Password", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "StringUtils", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "stl", "/", "AWS", "StringStream", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "IAM", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Utils", ";", "Ċ", "Ċ", "Change", "Password", "Request", "::", "Change", "Password", "Request", "()", "Ġ:", "ĠĊ", "ĠĠĠ", "Ġm", "_", "old", "Password", "HasBeenSet", "(", "false", "),", "Ċ", "ĠĠĠ", "Ġm", "_", "new", "Password", "HasBeenSet", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Aws", "::", "String", "ĠChange", "Password", "Request", "::", "Serialize", "Payload", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠAws", "::", "StringStream", "Ġss", ";", "Ċ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Action", "=", "Change", "Password", "&", "\";", "Ċ", "Ġ", "Ġif", "(", "m", "_", "old", "Password", "HasBeenSet", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġss", "Ġ<<", "Ġ\"", "Old", "Password", "=\"", "Ġ<<", "ĠStringUtils", "::", "URL", "Encode", "(", "m", "_", "old", "Password", ".", "c", "_", "str", "())", "Ġ<<", "Ġ\"&", "\";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġif", "(", "m", "_", "new", "Password", "HasBeenSet", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġss", "Ġ<<", "Ġ\"", "New", "Password", "=\"", "Ġ<<", "ĠStringUtils", "::", "URL", "Encode", "(", "m", "_", "new", "Password", ".", "c", "_", "str", "())", "Ġ<<", "Ġ\"&", "\";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Version", "=", "2010", "-", "05", "-", "08", "\";", "Ċ", "Ġ", "Ġreturn", "Ġss", ".", "str", "();", "Ċ", "}", "Ċ", "Ċ", "Ċ", "void", "Ġ", "ĠChange", "Password", "Request", "::", "Dump", "Body", "To", "Url", "(", "Aws", "::", "Http", "::", "URI", "&", "Ġuri", "Ġ)", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġuri", ".", "Set", "QueryString", "(", "Serialize", "Payload", "());", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::579", "code": "// Copyright 2013 The Flutter Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"flutter/runtime/embedder_resources.h\"\n\n#include <string.h>\n\n#include \"flutter/fml/logging.h\"\n\nnamespace flutter {\n\nusing runtime::ResourcesEntry;\n\nEmbedderResources::EmbedderResources(ResourcesEntry* resources_table)\n    : resources_table_(resources_table) {}\n\nconst int EmbedderResources::kNoSuchInstance = -1;\n\nint EmbedderResources::ResourceLookup(const char* path, const char** resource) {\n  for (int i = 0; resources_table_[i].path_ != nullptr; i++) {\n    const ResourcesEntry& entry = resources_table_[i];\n    if (strcmp(path, entry.path_) == 0) {\n      *resource = entry.resource_;\n      FML_DCHECK(entry.length_ > 0);\n      return entry.length_;\n    }\n  }\n  return kNoSuchInstance;\n}\n\nconst char* EmbedderResources::Path(int idx) {\n  FML_DCHECK(idx >= 0);\n  ResourcesEntry* entry = At(idx);\n  if (entry == nullptr) {\n    return nullptr;\n  }\n  FML_DCHECK(entry->path_ != nullptr);\n  return entry->path_;\n}\n\nResourcesEntry* EmbedderResources::At(int idx) {\n  FML_DCHECK(idx >= 0);\n  for (int i = 0; resources_table_[i].path_ != nullptr; i++) {\n    if (idx == i) {\n      return &resources_table_[i];\n    }\n  }\n  return nullptr;\n}\n\n}  // namespace flutter\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2013", "ĠThe", "ĠFl", "utter", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "fl", "utter", "/", "runtime", "/", "embed", "der", "_", "resources", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "fl", "utter", "/", "f", "ml", "/", "logging", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġfl", "utter", "Ġ{", "Ċ", "Ċ", "using", "Ġruntime", "::", "Resources", "Entry", ";", "Ċ", "Ċ", "Embed", "der", "Resources", "::", "Embed", "der", "Resources", "(", "Resources", "Entry", "*", "Ġresources", "_", "table", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġresources", "_", "table", "_(", "resources", "_", "table", ")", "Ġ{}", "Ċ", "Ċ", "const", "Ġint", "ĠEmbed", "der", "Resources", "::", "k", "NoSuch", "Instance", "Ġ=", "Ġ-", "1", ";", "Ċ", "Ċ", "int", "ĠEmbed", "der", "Resources", "::", "Resource", "Lookup", "(", "const", "Ġchar", "*", "Ġpath", ",", "Ġconst", "Ġchar", "**", "Ġresource", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġresources", "_", "table", "_[", "i", "].", "path", "_", "Ġ!=", "Ġnullptr", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġconst", "ĠResources", "Entry", "&", "Ġentry", "Ġ=", "Ġresources", "_", "table", "_[", "i", "];", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "strcmp", "(", "path", ",", "Ġentry", ".", "path", "_)", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġ*", "resource", "Ġ=", "Ġentry", ".", "resource", "_;", "Ċ", "ĠĠĠĠĠ", "ĠF", "ML", "_", "D", "CHECK", "(", "entry", ".", "length", "_", "Ġ>", "Ġ0", ");", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġentry", ".", "length", "_;", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġk", "NoSuch", "Instance", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġchar", "*", "ĠEmbed", "der", "Resources", "::", "Path", "(", "int", "Ġidx", ")", "Ġ{", "Ċ", "Ġ", "ĠF", "ML", "_", "D", "CHECK", "(", "idx", "Ġ>=", "Ġ0", ");", "Ċ", "Ġ", "ĠResources", "Entry", "*", "Ġentry", "Ġ=", "ĠAt", "(", "idx", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "entry", "Ġ==", "Ġnullptr", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnullptr", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "ĠF", "ML", "_", "D", "CHECK", "(", "entry", "->", "path", "_", "Ġ!=", "Ġnullptr", ");", "Ċ", "Ġ", "Ġreturn", "Ġentry", "->", "path", "_;", "Ċ", "}", "Ċ", "Ċ", "Resources", "Entry", "*", "ĠEmbed", "der", "Resources", "::", "At", "(", "int", "Ġidx", ")", "Ġ{", "Ċ", "Ġ", "ĠF", "ML", "_", "D", "CHECK", "(", "idx", "Ġ>=", "Ġ0", ");", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġresources", "_", "table", "_[", "i", "].", "path", "_", "Ġ!=", "Ġnullptr", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "idx", "Ġ==", "Ġi", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġ&", "resources", "_", "table", "_[", "i", "];", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġfl", "utter", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::580", "code": "/*\n * Copyright (C) 2008-2019 TrinityCore <https://www.trinitycore.org/>\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation; either version 2 of the License, or (at your\n * option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"ScriptMgr.h\"\n#include \"auchenai_crypts.h\"\n#include \"InstanceScript.h\"\n\nclass instance_auchenai_crypts : public InstanceMapScript\n{\n    public:\n        instance_auchenai_crypts() : InstanceMapScript(ACScriptName, 558) { }\n\n        struct instance_auchenai_crypts_InstanceMapScript : public InstanceScript\n        {\n            instance_auchenai_crypts_InstanceMapScript(InstanceMap* map) : InstanceScript(map)\n            {\n                SetHeaders(DataHeader);\n                SetBossNumber(EncounterCount);\n            }\n        };\n\n        InstanceScript* GetInstanceScript(InstanceMap* map) const override\n        {\n            return new instance_auchenai_crypts_InstanceMapScript(map);\n        }\n};\n\nvoid AddSC_instance_auchenai_crypts()\n{\n    new instance_auchenai_crypts();\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2019", "ĠTr", "inity", "Core", "Ġ<", "https", "://", "www", ".", "tr", "inity", "core", ".", "org", "/>", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ċ", "Ġ*", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "Ġ*", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ċ", "Ġ*", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "Ċ", "Ġ*", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "Ċ", "Ġ*", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ċ", "Ġ*", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "Ġ*", "Ġwith", "Ġthis", "Ġprogram", ".", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "ScriptMgr", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "a", "uch", "en", "ai", "_", "cry", "pts", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Instance", "Script", ".", "h", "\"", "Ċ", "Ċ", "class", "Ġinstance", "_", "a", "uch", "en", "ai", "_", "cry", "pts", "Ġ:", "Ġpublic", "ĠInstance", "Map", "Script", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġinstance", "_", "a", "uch", "en", "ai", "_", "cry", "pts", "()", "Ġ:", "ĠInstance", "Map", "Script", "(", "AC", "ScriptName", ",", "Ġ5", "58", ")", "Ġ{", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstruct", "Ġinstance", "_", "a", "uch", "en", "ai", "_", "cry", "pts", "_", "Instance", "Map", "Script", "Ġ:", "Ġpublic", "ĠInstance", "Script", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġinstance", "_", "a", "uch", "en", "ai", "_", "cry", "pts", "_", "Instance", "Map", "Script", "(", "Instance", "Map", "*", "Ġmap", ")", "Ġ:", "ĠInstance", "Script", "(", "map", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠSet", "Headers", "(", "Data", "Header", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠSet", "Bo", "ss", "Number", "(", "Encounter", "Count", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ};", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠInstance", "Script", "*", "ĠGetInstance", "Script", "(", "Instance", "Map", "*", "Ġmap", ")", "Ġconst", "Ġoverride", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "Ġinstance", "_", "a", "uch", "en", "ai", "_", "cry", "pts", "_", "Instance", "Map", "Script", "(", "map", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "void", "ĠAddSC", "_", "instance", "_", "a", "uch", "en", "ai", "_", "cry", "pts", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġnew", "Ġinstance", "_", "a", "uch", "en", "ai", "_", "cry", "pts", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::581", "code": "#include \"CObjectTableManager.h\"\n\nint CObjectTableManager::AddID(unsigned long, unsigned long *, unsigned long)\n{\n    asm(\"leave\");\n    asm(\"mov $0x08094d80, %eax\");\n    asm(\"jmp *%eax\");\n}\n\nvoid CObjectTableManager::ClearAll()\n{\n    asm(\"leave\");\n    asm(\"mov $0x08094d18, %eax\");\n    asm(\"jmp *%eax\");\n}\n\nint CObjectTableManager::CreateNewPlayer(unsigned long)\n{\n    asm(\"leave\");\n    asm(\"mov $0x0809484c, %eax\");\n    asm(\"jmp *%eax\");\n}\n\nint CObjectTableManager::GetIDFromIndex(unsigned long, unsigned long)\n{\n    asm(\"leave\");\n    asm(\"mov $0x08094e28, %eax\");\n    asm(\"jmp *%eax\");\n}\n\nint CObjectTableManager::GetIndexFromID(unsigned long, unsigned long)\n{\n    asm(\"leave\");\n    asm(\"mov $0x08094e6c, %eax\");\n    asm(\"jmp *%eax\");\n}\n\nint CObjectTableManager::RemovePlayer(unsigned long)\n{\n    asm(\"leave\");\n    asm(\"mov $0x08094cb8, %eax\");\n    asm(\"jmp *%eax\");\n}\n\nint CObjectTableManager::Touch(unsigned long, unsigned long)\n{\n    asm(\"leave\");\n    asm(\"mov $0x0809490c, %eax\");\n    asm(\"jmp *%eax\");\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "C", "Object", "Table", "Manager", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠC", "Object", "Table", "Manager", "::", "Add", "ID", "(", "unsigned", "Ġlong", ",", "Ġunsigned", "Ġlong", "Ġ*,", "Ġunsigned", "Ġlong", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "leave", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "mov", "Ġ$", "0", "x", "08", "094", "d", "80", ",", "Ġ%", "eax", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "jmp", "Ġ*", "%", "eax", "\");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Object", "Table", "Manager", "::", "Clear", "All", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "leave", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "mov", "Ġ$", "0", "x", "08", "094", "d", "18", ",", "Ġ%", "eax", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "jmp", "Ġ*", "%", "eax", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "ĠC", "Object", "Table", "Manager", "::", "CreateNew", "Player", "(", "unsigned", "Ġlong", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "leave", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "mov", "Ġ$", "0", "x", "08", "09", "48", "4", "c", ",", "Ġ%", "eax", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "jmp", "Ġ*", "%", "eax", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "ĠC", "Object", "Table", "Manager", "::", "GetID", "FromIndex", "(", "unsigned", "Ġlong", ",", "Ġunsigned", "Ġlong", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "leave", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "mov", "Ġ$", "0", "x", "08", "094", "e", "28", ",", "Ġ%", "eax", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "jmp", "Ġ*", "%", "eax", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "ĠC", "Object", "Table", "Manager", "::", "GetIndex", "From", "ID", "(", "unsigned", "Ġlong", ",", "Ġunsigned", "Ġlong", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "leave", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "mov", "Ġ$", "0", "x", "08", "094", "e", "6", "c", ",", "Ġ%", "eax", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "jmp", "Ġ*", "%", "eax", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "ĠC", "Object", "Table", "Manager", "::", "Remove", "Player", "(", "unsigned", "Ġlong", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "leave", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "mov", "Ġ$", "0", "x", "08", "094", "cb", "8", ",", "Ġ%", "eax", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "jmp", "Ġ*", "%", "eax", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "ĠC", "Object", "Table", "Manager", "::", "Touch", "(", "unsigned", "Ġlong", ",", "Ġunsigned", "Ġlong", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "leave", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "mov", "Ġ$", "0", "x", "08", "094", "90", "c", ",", "Ġ%", "eax", "\");", "Ċ", "ĠĠĠ", "Ġasm", "(\"", "jmp", "Ġ*", "%", "eax", "\");", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::582", "code": "//////////////////////////////////////////////////////////////////////////////\n//\n// (C) Copyright Ion Gaztanaga 2004-2009. Distributed under the Boost\n// Software License, Version 1.0. (See accompanying file\n// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n//\n// See http://www.boost.org/libs/interprocess for documentation.\n//\n//////////////////////////////////////////////////////////////////////////////\n\n#ifndef BOOST_INTERPROCESS_GET_PROCESS_ID_NAME_HPP\n#define BOOST_INTERPROCESS_GET_PROCESS_ID_NAME_HPP\n\n#include <boost/config.hpp>\n#include <string>    //std::string\n#include <sstream>   //std::stringstream\n#include <boost/interprocess/detail/os_thread_functions.hpp>\n\nnamespace boost{\nnamespace interprocess{\nnamespace test{\n\ninline void get_process_id_name(std::string &str)\n{\n   std::stringstream sstr;\n   sstr << \"process_\" << boost::interprocess::detail::get_current_process_id() << std::ends;\n   str = sstr.str().c_str();\n}\n\ninline const char *get_process_id_name()\n{\n   static std::string str;\n   get_process_id_name(str);\n   return str.c_str();\n}\n\ninline const char *add_to_process_id_name(const char *name)\n{\n   static std::string str;\n   get_process_id_name(str);\n   str += name;\n   return str.c_str();\n}\n\n}  //namespace test{\n}  //namespace interprocess{\n}  //namespace boost{\n\n#endif //#ifndef BOOST_INTERPROCESS_GET_PROCESS_ID_NAME_HPP\n", "code_tokens": ["Ġ//", "////////////////////////////////////////////////////////////////////////", "////", "Ċ", "//", "Ċ", "//", "Ġ(", "C", ")", "ĠCopyright", "ĠI", "on", "ĠG", "az", "t", "anag", "a", "Ġ2004", "-", "2009", ".", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "Ċ", "//", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "Ċ", "//", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//", "Ċ", "//", "ĠSee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "libs", "/", "inter", "process", "Ġfor", "Ġdocumentation", ".", "Ċ", "//", "Ċ", "//////////////////////////////////////////////////////////////////////////////", "Ċ", "Ċ", "#", "ifndef", "ĠBOOST", "_", "INTER", "PROCESS", "_", "GET", "_", "PROCESS", "_", "ID", "_", "NAME", "_", "HP", "P", "Ċ", "#", "define", "ĠBOOST", "_", "INTER", "PROCESS", "_", "GET", "_", "PROCESS", "_", "ID", "_", "NAME", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "config", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "ĠĠĠ", "Ġ//", "std", "::", "string", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "ĠĠ", "Ġ//", "std", "::", "stringstream", "Ċ", "#", "include", "Ġ<", "boost", "/", "inter", "process", "/", "detail", "/", "os", "_", "thread", "_", "functions", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġboost", "{", "Ċ", "namespace", "Ġinter", "process", "{", "Ċ", "namespace", "Ġtest", "{", "Ċ", "Ċ", "inline", "Ġvoid", "Ġget", "_", "process", "_", "id", "_", "name", "(", "std", "::", "string", "Ġ&", "str", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġstd", "::", "stringstream", "Ġs", "str", ";", "Ċ", "ĠĠ", "Ġs", "str", "Ġ<<", "Ġ\"", "process", "_\"", "Ġ<<", "Ġboost", "::", "inter", "process", "::", "detail", "::", "get", "_", "current", "_", "process", "_", "id", "()", "Ġ<<", "Ġstd", "::", "ends", ";", "Ċ", "ĠĠ", "Ġstr", "Ġ=", "Ġs", "str", ".", "str", "().", "c", "_", "str", "();", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġconst", "Ġchar", "Ġ*", "get", "_", "process", "_", "id", "_", "name", "()", "Ċ", "{", "Ċ", "ĠĠ", "Ġstatic", "Ġstd", "::", "string", "Ġstr", ";", "Ċ", "ĠĠ", "Ġget", "_", "process", "_", "id", "_", "name", "(", "str", ");", "Ċ", "ĠĠ", "Ġreturn", "Ġstr", ".", "c", "_", "str", "();", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġconst", "Ġchar", "Ġ*", "add", "_", "to", "_", "process", "_", "id", "_", "name", "(", "const", "Ġchar", "Ġ*", "name", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġstatic", "Ġstd", "::", "string", "Ġstr", ";", "Ċ", "ĠĠ", "Ġget", "_", "process", "_", "id", "_", "name", "(", "str", ");", "Ċ", "ĠĠ", "Ġstr", "Ġ+=", "Ġname", ";", "Ċ", "ĠĠ", "Ġreturn", "Ġstr", ".", "c", "_", "str", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "namespace", "Ġtest", "{", "Ċ", "}", "Ġ", "Ġ//", "namespace", "Ġinter", "process", "{", "Ċ", "}", "Ġ", "Ġ//", "namespace", "Ġboost", "{", "Ċ", "Ċ", "#", "endif", "Ġ//#", "ifndef", "ĠBOOST", "_", "INTER", "PROCESS", "_", "GET", "_", "PROCESS", "_", "ID", "_", "NAME", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::583", "code": "/*\n  Copyright 2019 Equinor ASA.\n\n  This file is part of the Open Porous Media project (OPM).\n\n  OPM is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  OPM is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with OPM.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#ifndef DECK_VALUE_HPP\n#define DECK_VALUE_HPP\n\n#include <string>\n\n#include <opm/parser/eclipse/Utility/Typetools.hpp>\n\nnamespace Opm {\n\nclass DeckValue {\n\n    public:\n        DeckValue();\n        explicit DeckValue(int);\n        explicit DeckValue(double);\n        explicit DeckValue(const std::string&);\n        \n        bool is_default() const;\n\n        template<typename T>\n        T get() const;\n\n        template<typename T>\n        bool is_compatible() const;\n\n    private:\n\n        bool default_value;\n        type_tag value_enum;\n        int int_value;\n        double double_value;\n        std::string string_value;    \n\n};\n\n}\n\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "ĠCopyright", "Ġ201", "9", "ĠEqu", "in", "or", "ĠA", "SA", ".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠOpen", "ĠP", "or", "ous", "ĠMedia", "Ġproject", "Ġ(", "OP", "M", ").", "Ċ", "Ċ", "Ġ", "ĠOP", "M", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠOP", "M", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "ĠOP", "M", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠDE", "CK", "_", "VALUE", "_", "HP", "P", "Ċ", "#", "define", "ĠDE", "CK", "_", "VALUE", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "op", "m", "/", "parser", "/", "eclipse", "/", "Utility", "/", "Ty", "pet", "ools", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "ĠO", "pm", "Ġ{", "Ċ", "Ċ", "class", "ĠDe", "ck", "Value", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠDe", "ck", "Value", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġexplicit", "ĠDe", "ck", "Value", "(", "int", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġexplicit", "ĠDe", "ck", "Value", "(", "double", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġexplicit", "ĠDe", "ck", "Value", "(", "const", "Ġstd", "::", "string", "&", ");", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġis", "_", "default", "()", "Ġconst", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtemplate", "<", "typename", "ĠT", ">", "Ċ", "ĠĠĠĠĠĠĠ", "ĠT", "Ġget", "()", "Ġconst", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtemplate", "<", "typename", "ĠT", ">", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġis", "_", "compatible", "()", "Ġconst", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġdefault", "_", "value", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtype", "_", "tag", "Ġvalue", "_", "enum", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġint", "_", "value", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġdouble", "_", "value", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "string", "Ġstring", "_", "value", ";", "ĠĠĠĠĊ", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::584", "code": "/*\n * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.\n * Copyright 2007 Red Hat, Inc.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n *\n */\n\n#ifndef CPU_ZERO_RELOCINFO_ZERO_HPP\n#define CPU_ZERO_RELOCINFO_ZERO_HPP\n\n  // machine-dependent parts of class relocInfo\n private:\n  enum {\n    // these constants mean nothing without an assembler\n    offset_unit  =  1,\n    format_width =  1\n  };\n\n public:\n\n  static bool mustIterateImmediateOopsInCode() { return true; }\n\n#endif // CPU_ZERO_RELOCINFO_ZERO_HPP\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", ",", "Ġ201", "9", ",", "ĠOracle", "Ġand", "/", "or", "Ġits", "Ġaff", "ili", "ates", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "ĠCopyright", "Ġ2007", "ĠRed", "ĠH", "at", ",", "ĠInc", ".", "Ċ", "Ġ*", "ĠDO", "ĠNOT", "ĠALTER", "ĠOR", "ĠRE", "MOVE", "ĠCOPY", "RIGHT", "ĠNOT", "ICES", "ĠOR", "ĠTHIS", "ĠFILE", "ĠHEADER", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġcode", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ċ", "Ġ*", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ġ2", "Ġonly", ",", "Ġas", "Ċ", "Ġ*", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġcode", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "Ċ", "Ġ*", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "Ċ", "Ġ*", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġversion", "Ġ2", "Ġfor", "Ġmore", "Ġdetails", "Ġ(", "a", "Ġcopy", "Ġis", "Ġincluded", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", "Ġthat", "Ċ", "Ġ*", "Ġac", "compan", "ied", "Ġthis", "Ġcode", ").", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ċ", "Ġ*", "Ġ2", "Ġalong", "Ġwith", "Ġthis", "Ġwork", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ċ", "Ġ*", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", "ĠUSA", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠPlease", "Ġcontact", "ĠOracle", ",", "Ġ500", "ĠOracle", "ĠP", "ark", "way", ",", "ĠRed", "wood", "ĠSh", "ores", ",", "ĠCA", "Ġ9", "406", "5", "ĠUSA", "Ċ", "Ġ*", "Ġor", "Ġvisit", "Ġwww", ".", "oracle", ".", "com", "Ġif", "Ġyou", "Ġneed", "Ġadditional", "Ġinformation", "Ġor", "Ġhave", "Ġany", "Ċ", "Ġ*", "Ġquestions", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠCPU", "_", "ZERO", "_", "RELOC", "INFO", "_", "ZERO", "_", "HP", "P", "Ċ", "#", "define", "ĠCPU", "_", "ZERO", "_", "RELOC", "INFO", "_", "ZERO", "_", "HP", "P", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġmachine", "-", "dependent", "Ġparts", "Ġof", "Ġclass", "Ġreloc", "Info", "Ċ", "Ġprivate", ":", "Ċ", "Ġ", "Ġenum", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "Ġthese", "Ġconstants", "Ġmean", "Ġnothing", "Ġwithout", "Ġan", "Ġassembler", "Ċ", "ĠĠĠ", "Ġoffset", "_", "unit", "Ġ", "Ġ=", "Ġ", "Ġ1", ",", "Ċ", "ĠĠĠ", "Ġformat", "_", "width", "Ġ=", "Ġ", "Ġ1", "Ċ", "Ġ", "Ġ};", "Ċ", "Ċ", "Ġpublic", ":", "Ċ", "Ċ", "Ġ", "Ġstatic", "Ġbool", "Ġmust", "Iterate", "Immediate", "O", "ops", "In", "Code", "()", "Ġ{", "Ġreturn", "Ġtrue", ";", "Ġ}", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠCPU", "_", "ZERO", "_", "RELOC", "INFO", "_", "ZERO", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::585", "code": "#include \"foobar2000.h\"\r\n\r\nnamespace {\r\n\tclass main_thread_callback_myimpl : public main_thread_callback {\r\n\tpublic:\r\n\t\tvoid callback_run() {\r\n\t\t\tm_notify->on_completion(m_code);\r\n\t\t}\r\n\r\n\t\tmain_thread_callback_myimpl(completion_notify_ptr p_notify,unsigned p_code) : m_notify(p_notify), m_code(p_code) {}\r\n\tprivate:\r\n\t\tcompletion_notify_ptr m_notify;\r\n\t\tunsigned m_code;\r\n\t};\r\n}\r\n\r\nvoid completion_notify::g_signal_completion_async(completion_notify_ptr p_notify,unsigned p_code) {\r\n\tif (p_notify.is_valid()) {\r\n\t\tstatic_api_ptr_t<main_thread_callback_manager>()->add_callback(new service_impl_t<main_thread_callback_myimpl>(p_notify,p_code));\r\n\t}\r\n}\r\n\r\nvoid completion_notify::on_completion_async(unsigned p_code) {\r\n\tstatic_api_ptr_t<main_thread_callback_manager>()->add_callback(new service_impl_t<main_thread_callback_myimpl>(this,p_code));\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "foobar", "2000", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "Ġ{", "č", "Ċ", "ĉ", "class", "Ġmain", "_", "thread", "_", "callback", "_", "my", "impl", "Ġ:", "Ġpublic", "Ġmain", "_", "thread", "_", "callback", "Ġ{", "č", "Ċ", "ĉ", "public", ":", "č", "Ċ", "ĉ", "ĉ", "void", "Ġcallback", "_", "run", "()", "Ġ{", "č", "Ċ", "ĉĉ", "ĉ", "m", "_", "notify", "->", "on", "_", "completion", "(", "m", "_", "code", ");", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "main", "_", "thread", "_", "callback", "_", "my", "impl", "(", "completion", "_", "notify", "_", "ptr", "Ġp", "_", "notify", ",", "unsigned", "Ġp", "_", "code", ")", "Ġ:", "Ġm", "_", "notify", "(", "p", "_", "notify", "),", "Ġm", "_", "code", "(", "p", "_", "code", ")", "Ġ{}", "č", "Ċ", "ĉ", "private", ":", "č", "Ċ", "ĉ", "ĉ", "completion", "_", "notify", "_", "ptr", "Ġm", "_", "notify", ";", "č", "Ċ", "ĉ", "ĉ", "unsigned", "Ġm", "_", "code", ";", "č", "Ċ", "ĉ", "};", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġcompletion", "_", "notify", "::", "g", "_", "signal", "_", "completion", "_", "async", "(", "completion", "_", "notify", "_", "ptr", "Ġp", "_", "notify", ",", "unsigned", "Ġp", "_", "code", ")", "Ġ{", "č", "Ċ", "ĉ", "if", "Ġ(", "p", "_", "notify", ".", "is", "_", "valid", "())", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "static", "_", "api", "_", "ptr", "_", "t", "<", "main", "_", "thread", "_", "callback", "_", "manager", ">()->", "add", "_", "callback", "(", "new", "Ġservice", "_", "impl", "_", "t", "<", "main", "_", "thread", "_", "callback", "_", "my", "impl", ">(", "p", "_", "notify", ",", "p", "_", "code", "));", "č", "Ċ", "ĉ", "}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġcompletion", "_", "notify", "::", "on", "_", "completion", "_", "async", "(", "unsigned", "Ġp", "_", "code", ")", "Ġ{", "č", "Ċ", "ĉ", "static", "_", "api", "_", "ptr", "_", "t", "<", "main", "_", "thread", "_", "callback", "_", "manager", ">()->", "add", "_", "callback", "(", "new", "Ġservice", "_", "impl", "_", "t", "<", "main", "_", "thread", "_", "callback", "_", "my", "impl", ">(", "this", ",", "p", "_", "code", "));", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::586", "code": "/*\n *\n * Copyright 2015 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n#include <stdbool.h>\n#include <stdint.h>\n#include <string.h>\n\n#include <grpc/support/alloc.h>\n#include <grpc/support/log.h>\n\n#include \"src/core/lib/json/json.h\"\n\nbool squelch = true;\nbool leak_check = true;\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\n  grpc_error_handle error = GRPC_ERROR_NONE;\n  auto json = grpc_core::Json::Parse(\n      absl::string_view(reinterpret_cast<const char*>(data), size), &error);\n  if (error == GRPC_ERROR_NONE) {\n    auto text2 = json.Dump();\n    auto json2 = grpc_core::Json::Parse(text2, &error);\n    GPR_ASSERT(error == GRPC_ERROR_NONE);\n    GPR_ASSERT(json == json2);\n  }\n  GRPC_ERROR_UNREF(error);\n  return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2015", "ĠgRPC", "Ġauthors", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "bool", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "grpc", "/", "support", "/", "alloc", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "grpc", "/", "support", "/", "log", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "src", "/", "core", "/", "lib", "/", "json", "/", "json", ".", "h", "\"", "Ċ", "Ċ", "bool", "Ġs", "quel", "ch", "Ġ=", "Ġtrue", ";", "Ċ", "bool", "Ġleak", "_", "check", "Ġ=", "Ġtrue", ";", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "ĠLLVM", "Fuzz", "er", "Test", "One", "Input", "(", "const", "Ġuint", "8", "_", "t", "*", "Ġdata", ",", "Ġsize", "_", "t", "Ġsize", ")", "Ġ{", "Ċ", "Ġ", "Ġgrpc", "_", "error", "_", "handle", "Ġerror", "Ġ=", "ĠG", "RPC", "_", "ERROR", "_", "NONE", ";", "Ċ", "Ġ", "Ġauto", "Ġjson", "Ġ=", "Ġgrpc", "_", "core", "::", "Json", "::", "Parse", "(", "Ċ", "ĠĠĠĠĠ", "Ġabs", "l", "::", "string", "_", "view", "(", "reinterpret", "_", "cast", "<", "const", "Ġchar", "*>(", "data", "),", "Ġsize", "),", "Ġ&", "error", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "error", "Ġ==", "ĠG", "RPC", "_", "ERROR", "_", "NONE", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġauto", "Ġtext", "2", "Ġ=", "Ġjson", ".", "Dump", "();", "Ċ", "ĠĠĠ", "Ġauto", "Ġjson", "2", "Ġ=", "Ġgrpc", "_", "core", "::", "Json", "::", "Parse", "(", "text", "2", ",", "Ġ&", "error", ");", "Ċ", "ĠĠĠ", "ĠGPR", "_", "ASSERT", "(", "error", "Ġ==", "ĠG", "RPC", "_", "ERROR", "_", "NONE", ");", "Ċ", "ĠĠĠ", "ĠGPR", "_", "ASSERT", "(", "json", "Ġ==", "Ġjson", "2", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "ĠG", "RPC", "_", "ERROR", "_", "UN", "REF", "(", "error", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::587", "code": "/*\n*  Author:      illuz <iilluzen[at]gmail.com>\n*  File:        AC_dfs_2^n.cpp\n*  Create Date: 2015-02-07 18:59:30\n*  Descripton:  Use dfs.\n*/\n\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int N = 0;\n\nclass Solution {\nprivate:\n    void dfs(int dep, vector<int> &S, vector<int> &cur,\n            vector<vector<int> > &res) {\n        if (dep == S.size()) {\n            res.push_back(cur);\n        } else {\n            // not choose\n            dfs(dep + 1, S, cur, res);\n            // choose\n            cur.push_back(S[dep]);\n            dfs(dep + 1, S, cur, res);\n            cur.pop_back();\n        }\n    }\npublic:\n    vector<vector<int> > subsets(vector<int> &S) {\n        vector<vector<int> > res;\n        vector<int> cur;\n        sort(S.begin(), S.end());\n        dfs(0, S, cur, res);\n        return res;\n    }\n};\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> S(n);\n    for (auto &i : S)\n        cin >> i;\n    Solution s;\n    vector<vector<int> > res = s.subsets(S);\n    for (auto &i : res) {\n        for (auto &j : i)\n            cout << j << ' ';\n        cout << endl;\n    }\n    return 0;\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "*", "Ġ", "ĠAuthor", ":", "ĠĠĠĠĠ", "Ġill", "uz", "Ġ<", "i", "ill", "u", "zen", "[", "at", "]", "gmail", ".", "com", ">", "Ċ", "*", "Ġ", "ĠFile", ":", "ĠĠĠĠĠĠĠ", "ĠAC", "_", "dfs", "_", "2", "^", "n", ".", "cpp", "Ċ", "*", "Ġ", "ĠCreate", "ĠDate", ":", "Ġ2015", "-", "02", "-", "07", "Ġ18", ":", "59", ":", "30", "Ċ", "*", "Ġ", "ĠDesc", "ript", "on", ":", "Ġ", "ĠUse", "Ġdfs", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "const", "Ġint", "ĠN", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġdfs", "(", "int", "Ġdep", ",", "Ġvector", "<", "int", ">", "Ġ&", "S", ",", "Ġvector", "<", "int", ">", "Ġ&", "cur", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġvector", "<", "vector", "<", "int", ">", "Ġ>", "Ġ&", "res", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "dep", "Ġ==", "ĠS", ".", "size", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġres", ".", "push", "_", "back", "(", "cur", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ġnot", "Ġchoose", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdfs", "(", "dep", "Ġ+", "Ġ1", ",", "ĠS", ",", "Ġcur", ",", "Ġres", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ġchoose", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcur", ".", "push", "_", "back", "(", "S", "[", "dep", "]);", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdfs", "(", "dep", "Ġ+", "Ġ1", ",", "ĠS", ",", "Ġcur", ",", "Ġres", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcur", ".", "pop", "_", "back", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvector", "<", "vector", "<", "int", ">", "Ġ>", "Ġsub", "sets", "(", "vector", "<", "int", ">", "Ġ&", "S", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "vector", "<", "int", ">", "Ġ>", "Ġres", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "int", ">", "Ġcur", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsort", "(", "S", ".", "begin", "(),", "ĠS", ".", "end", "());", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdfs", "(", "0", ",", "ĠS", ",", "Ġcur", ",", "Ġres", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġres", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "ĠS", "(", "n", ");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġ&", "i", "Ġ:", "ĠS", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġi", ";", "Ċ", "ĠĠĠ", "ĠSolution", "Ġs", ";", "Ċ", "ĠĠĠ", "Ġvector", "<", "vector", "<", "int", ">", "Ġ>", "Ġres", "Ġ=", "Ġs", ".", "sub", "sets", "(", "S", ");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġ&", "i", "Ġ:", "Ġres", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġ&", "j", "Ġ:", "Ġi", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġj", "Ġ<<", "Ġ'", "Ġ';", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::588", "code": "// UnixInputMonitorFactory.hh --- Factory to create input monitors.\n//\n// Copyright (C) 2007, 2012 Rob Caelers <robc@krandor.nl>\n// All rights reserved.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n//\n\n#ifndef UNIXINPUTMONITORFACTORY_HH\n#define UNIXINPUTMONITORFACTORY_HH\n\n#include <stdlib.h>\n#include <string>\n\n#include \"IInputMonitorFactory.hh\"\n\n#include <glib.h>\n\n//! Factory to create input monitors.\nclass UnixInputMonitorFactory  : public IInputMonitorFactory\n{\npublic:\n  UnixInputMonitorFactory();\n\n  virtual void init(const std::string &display);\n  virtual IInputMonitor *get_monitor(IInputMonitorFactory::MonitorCapability capability);\n\nprivate:\n  static gboolean static_report_failure(void *data);\n\n  bool error_reported;\n  std::string actual_monitor_method;\n  IInputMonitor *monitor;\n  std::string display;\n};\n\n#endif // UNIXINPUTMONITORFACTORY_HH\n", "code_tokens": ["Ġ//", "ĠUnix", "Input", "Monitor", "Factory", ".", "hh", "Ġ---", "ĠFactory", "Ġto", "Ġcreate", "Ġinput", "Ġmonitor", "s", ".", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", ",", "Ġ2012", "ĠRob", "ĠC", "ael", "ers", "Ġ<", "ro", "bc", "@", "k", "rand", "or", ".", "nl", ">", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠUNIX", "INPUT", "MONITOR", "FACTORY", "_", "HH", "Ċ", "#", "define", "ĠUNIX", "INPUT", "MONITOR", "FACTORY", "_", "HH", "Ċ", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "I", "Input", "Monitor", "Factory", ".", "hh", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "lib", ".", "h", ">", "Ċ", "Ċ", "//!", "ĠFactory", "Ġto", "Ġcreate", "Ġinput", "Ġmonitor", "s", ".", "Ċ", "class", "ĠUnix", "Input", "Monitor", "Factory", "Ġ", "Ġ:", "Ġpublic", "ĠI", "Input", "Monitor", "Factory", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠUnix", "Input", "Monitor", "Factory", "();", "Ċ", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġinit", "(", "const", "Ġstd", "::", "string", "Ġ&", "display", ");", "Ċ", "Ġ", "Ġvirtual", "ĠI", "Input", "Monitor", "Ġ*", "get", "_", "monitor", "(", "I", "Input", "Monitor", "Factory", "::", "Monitor", "Capability", "Ġcapability", ");", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġstatic", "Ġgboolean", "Ġstatic", "_", "report", "_", "failure", "(", "void", "Ġ*", "data", ");", "Ċ", "Ċ", "Ġ", "Ġbool", "Ġerror", "_", "reported", ";", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġactual", "_", "monitor", "_", "method", ";", "Ċ", "Ġ", "ĠI", "Input", "Monitor", "Ġ*", "monitor", ";", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġdisplay", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠUNIX", "INPUT", "MONITOR", "FACTORY", "_", "HH", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::589", "code": "/*\n * Copyright (c) 2015-2017 ARM. All rights reserved.\n */\n\n#include \"CppUTest/CommandLineTestRunner.h\"\n#include \"CppUTest/TestPlugin.h\"\n#include \"CppUTest/TestRegistry.h\"\n#include \"CppUTestExt/MockSupportPlugin.h\"\nint main(int ac, char** av)\n{\n    return CommandLineTestRunner::RunAllTests(ac, av);\n}\n\nIMPORT_TEST_GROUP(coap_service_api);\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "-", "2017", "ĠARM", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Cpp", "U", "Test", "/", "CommandLine", "TestRunner", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Cpp", "U", "Test", "/", "Test", "Plugin", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Cpp", "U", "Test", "/", "Test", "Registry", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Cpp", "U", "Test", "Ext", "/", "Mock", "Support", "Plugin", ".", "h", "\"", "Ċ", "int", "Ġmain", "(", "int", "Ġac", ",", "Ġchar", "**", "Ġav", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "ĠCommandLine", "TestRunner", "::", "Run", "All", "Tests", "(", "ac", ",", "Ġav", ");", "Ċ", "}", "Ċ", "Ċ", "IMPORT", "_", "TEST", "_", "GROUP", "(", "co", "ap", "_", "service", "_", "api", ");", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::590", "code": "// -*- c++ -*-\n// (c) 2009 Ulrich Germann\n// boilerplate code to declutter my usual interpret_args() routine\n#include \"ug_get_options.h\"\n#include <fstream>\n\n#include <string>\n#include <iostream>\n\nnamespace ugdiss\n{\n  using namespace std;\n\n  void\n  get_options(int ac, char* av[], progopts& o, posopts& a, optsmap& vm,\n              char const* cfgFileParam)\n  {\n    // only get named parameters from command line\n    po::store(po::command_line_parser(ac,av).options(o).run(),vm);\n\n    if (cfgFileParam && vm.count(cfgFileParam))\n      {\n        string cfgFile = vm[cfgFileParam].as<string>();\n        if (!cfgFile.empty())\n          {\n            if (!access(cfgFile.c_str(),F_OK))\n              {\n                ifstream cfg(cfgFile.c_str());\n                po::store(po::parse_config_file(cfg,o),vm);\n              }\n            else\n              {\n                cerr << \"Error: cannot find config file '\"\n\t\t     << cfgFile << \"'!\" << endl;\n                exit(1);\n              }\n          }\n      }\n\n    // process positional args, ignoring those set in the config file\n    if (a.max_total_count())\n      po::store(po::command_line_parser(ac,av)\n                .options(o).positional(a).run(),vm);\n    po::notify(vm); // IMPORTANT\n  }\n}\n", "code_tokens": ["Ġ//", "Ġ-", "*-", "Ġc", "++", "Ġ-", "*-", "Ċ", "//", "Ġ(", "c", ")", "Ġ2009", "ĠU", "lr", "ich", "ĠG", "erm", "ann", "Ċ", "//", "Ġbo", "iler", "plate", "Ġcode", "Ġto", "Ġdecl", "utter", "Ġmy", "Ġusual", "Ġinterpret", "_", "args", "()", "Ġroutine", "Ċ", "#", "include", "Ġ\"", "ug", "_", "get", "_", "options", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "namespace", "Ġu", "gd", "iss", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ċ", "Ġ", "Ġget", "_", "options", "(", "int", "Ġac", ",", "Ġchar", "*", "Ġav", "[],", "Ġpro", "go", "pts", "&", "Ġo", ",", "Ġpos", "opts", "&", "Ġa", ",", "Ġopts", "map", "&", "Ġvm", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġchar", "Ġconst", "*", "Ġcfg", "File", "Param", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "Ġonly", "Ġget", "Ġnamed", "Ġparameters", "Ġfrom", "Ġcommand", "Ġline", "Ċ", "ĠĠĠ", "Ġpo", "::", "store", "(", "po", "::", "command", "_", "line", "_", "parser", "(", "ac", ",", "av", ").", "options", "(", "o", ").", "run", "(),", "vm", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "cfg", "File", "Param", "Ġ&&", "Ġvm", ".", "count", "(", "cfg", "File", "Param", "))", "Ċ", "ĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstring", "Ġcfg", "File", "Ġ=", "Ġvm", "[", "cfg", "File", "Param", "].", "as", "<", "string", ">();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "cfg", "File", ".", "empty", "())", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "access", "(", "cfg", "File", ".", "c", "_", "str", "(),", "F", "_", "OK", "))", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "stream", "Ġcfg", "(", "cfg", "File", ".", "c", "_", "str", "());", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġpo", "::", "store", "(", "po", "::", "parse", "_", "config", "_", "file", "(", "cfg", ",", "o", "),", "vm", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "Error", ":", "Ġcannot", "Ġfind", "Ġconfig", "Ġfile", "Ġ'\"", "Ċ", "ĉĉĠĠĠĠ", "Ġ<<", "Ġcfg", "File", "Ġ<<", "Ġ\"'", "!\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġexit", "(", "1", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġprocess", "Ġpositional", "Ġargs", ",", "Ġignoring", "Ġthose", "Ġset", "Ġin", "Ġthe", "Ġconfig", "Ġfile", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "a", ".", "max", "_", "total", "_", "count", "())", "Ċ", "ĠĠĠĠĠ", "Ġpo", "::", "store", "(", "po", "::", "command", "_", "line", "_", "parser", "(", "ac", ",", "av", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ.", "options", "(", "o", ").", "positional", "(", "a", ").", "run", "(),", "vm", ");", "Ċ", "ĠĠĠ", "Ġpo", "::", "notify", "(", "vm", ");", "Ġ//", "ĠIMPORT", "ANT", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::591", "code": "// Copyright 2019 Google LLC.\n// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n#include \"tools/fiddle/examples.h\"\n// HASH=937cc166cc0e220f33fb82501141d0b3\nREG_FIDDLE(Point_isFinite, 256, 256, true, 0) {\nvoid draw(SkCanvas* canvas) {\n    SkPoint test[] = { {0, -0.f}, {-1, -2}, {SK_ScalarInfinity, 1}, {SK_ScalarNaN, -1} };\n    for (const SkPoint& pt : test) {\n        SkDebugf(\"pt: %g, %g  finite: %s\\n\", pt.fX, pt.fY, pt.isFinite() ? \"true\" : \"false\");\n    }\n}\n}  // END FIDDLE\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ201", "9", "ĠGoogle", "ĠLLC", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "#", "include", "Ġ\"", "tools", "/", "f", "iddle", "/", "examples", ".", "h", "\"", "Ċ", "//", "ĠHASH", "=", "9", "37", "cc", "166", "cc", "0", "e", "220", "f", "33", "fb", "8250", "11", "41", "d", "0", "b", "3", "Ċ", "REG", "_", "FID", "DLE", "(", "Point", "_", "isFinite", ",", "Ġ256", ",", "Ġ256", ",", "Ġtrue", ",", "Ġ0", ")", "Ġ{", "Ċ", "void", "Ġdraw", "(", "Sk", "Canvas", "*", "Ġcanvas", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠSk", "Point", "Ġtest", "[]", "Ġ=", "Ġ{", "Ġ{", "0", ",", "Ġ-", "0", ".", "f", "},", "Ġ{-", "1", ",", "Ġ-", "2", "},", "Ġ{", "SK", "_", "Scalar", "Infinity", ",", "Ġ1", "},", "Ġ{", "SK", "_", "Scalar", "NaN", ",", "Ġ-", "1", "}", "Ġ};", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "const", "ĠSk", "Point", "&", "Ġpt", "Ġ:", "Ġtest", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSk", "Debugf", "(\"", "pt", ":", "Ġ%", "g", ",", "Ġ%", "g", "Ġ", "Ġfinite", ":", "Ġ%", "s", "\\", "n", "\",", "Ġpt", ".", "fX", ",", "Ġpt", ".", "fY", ",", "Ġpt", ".", "isFinite", "()", "Ġ?", "Ġ\"", "true", "\"", "Ġ:", "Ġ\"", "false", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "ĠEND", "ĠF", "ID", "DLE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::592", "code": "// PR c++/91353 - P1331R2: Allow trivial default init in constexpr contexts.\n// { dg-do compile { target c++20 } }\n\nstruct S {\n  int a = 1;\n  constexpr S() = default;\n};\n\nconstexpr S s;\n\nunion U {\n  int a = 1;\n  constexpr U() = default;\n};\n\nconstexpr U u;\n\nstruct S2 {\n  int a;\n  constexpr S2() = default;\n};\n\nconstexpr S2 s2; // { dg-error \"uninitialized .const s2.\" }\n\nunion U2 {\n  int a;\n  constexpr U2() = default;\n};\n\nconstexpr U2 u2; // { dg-error \"uninitialized .const u2.\" }\n\nstruct S3 {\n  // FIXME if it's anonymous union, we don't give the error below\n  union {\n    int a;\n  } u;\n  constexpr S3() = default;\n};\n\nconstexpr S3 s3; // { dg-error \"uninitialized .const s3.\" }\n\nstruct S4 {\n  // FIXME if it's anonymous union, we don't give the error below\n  union {\n    int n;\n  } u;\n  constexpr S4() = default;\n};\n\nconstexpr S4 s4; // { dg-error \"uninitialized .const s4.\" }\n\nstruct S5 {\n  union {\n    int n = 0;\n  };\n  // FIXME if it's anonymous union, we don't give the error below\n  union {\n    int m;\n  } u;\n  constexpr S5() = default;\n};\n\nconstexpr S5 s5; // { dg-error \"uninitialized .const s5.|not a constant expression\" }\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "9", "13", "53", "Ġ-", "ĠP", "13", "31", "R", "2", ":", "ĠAllow", "Ġtrivial", "Ġdefault", "Ġinit", "Ġin", "Ġconstexpr", "Ġcontexts", ".", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "20", "Ġ}", "Ġ}", "Ċ", "Ċ", "struct", "ĠS", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġconstexpr", "ĠS", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "constexpr", "ĠS", "Ġs", ";", "Ċ", "Ċ", "union", "ĠU", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġconstexpr", "ĠU", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "constexpr", "ĠU", "Ġu", ";", "Ċ", "Ċ", "struct", "ĠS", "2", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ";", "Ċ", "Ġ", "Ġconstexpr", "ĠS", "2", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "constexpr", "ĠS", "2", "Ġs", "2", ";", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "uninitialized", "Ġ.", "const", "Ġs", "2", ".\"", "Ġ}", "Ċ", "Ċ", "union", "ĠU", "2", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ";", "Ċ", "Ġ", "Ġconstexpr", "ĠU", "2", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "constexpr", "ĠU", "2", "Ġu", "2", ";", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "uninitialized", "Ġ.", "const", "Ġu", "2", ".\"", "Ġ}", "Ċ", "Ċ", "struct", "ĠS", "3", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠFIXME", "Ġif", "Ġit", "'s", "Ġanonymous", "Ġunion", ",", "Ġwe", "Ġdon", "'t", "Ġgive", "Ġthe", "Ġerror", "Ġbelow", "Ċ", "Ġ", "Ġunion", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġa", ";", "Ċ", "Ġ", "Ġ}", "Ġu", ";", "Ċ", "Ġ", "Ġconstexpr", "ĠS", "3", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "constexpr", "ĠS", "3", "Ġs", "3", ";", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "uninitialized", "Ġ.", "const", "Ġs", "3", ".\"", "Ġ}", "Ċ", "Ċ", "struct", "ĠS", "4", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠFIXME", "Ġif", "Ġit", "'s", "Ġanonymous", "Ġunion", ",", "Ġwe", "Ġdon", "'t", "Ġgive", "Ġthe", "Ġerror", "Ġbelow", "Ċ", "Ġ", "Ġunion", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ}", "Ġu", ";", "Ċ", "Ġ", "Ġconstexpr", "ĠS", "4", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "constexpr", "ĠS", "4", "Ġs", "4", ";", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "uninitialized", "Ġ.", "const", "Ġs", "4", ".\"", "Ġ}", "Ċ", "Ċ", "struct", "ĠS", "5", "Ġ{", "Ċ", "Ġ", "Ġunion", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġ//", "ĠFIXME", "Ġif", "Ġit", "'s", "Ġanonymous", "Ġunion", ",", "Ġwe", "Ġdon", "'t", "Ġgive", "Ġthe", "Ġerror", "Ġbelow", "Ċ", "Ġ", "Ġunion", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġm", ";", "Ċ", "Ġ", "Ġ}", "Ġu", ";", "Ċ", "Ġ", "Ġconstexpr", "ĠS", "5", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "constexpr", "ĠS", "5", "Ġs", "5", ";", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "uninitialized", "Ġ.", "const", "Ġs", "5", ".", "|", "not", "Ġa", "Ġconstant", "Ġexpression", "\"", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::593", "code": "//! [0]\nextern void aFunction();\nQFuture<void> future = QtConcurrent::run(aFunction);\n//! [0]\n\n\n//! [1]\nextern void aFunctionWithArguments(int arg1, double arg2, const QString &string);\n\nint integer = ...;\ndouble floatingPoint = ...;\nQString string = ...;\n\nQFuture<void> future = QtConcurrent::run(aFunctionWithArguments, integer, floatingPoint, string);\n//! [1]\n\n\n//! [2]\nextern QString functionReturningAString();\nQFuture<QString> future = QtConcurrent::run(functionReturningAString);\n...\nQString result = future.result();\n//! [2]\n\n\n//! [3]\nextern QString someFunction(const QByteArray &input);\n\nQByteArray bytearray = ...;\n\nQFuture<QString> future = QtConcurrent::run(someFunction, bytearray);\n...\nQString result = future.result();\n//! [3]\n\n\n//! [4]\n// call 'QStringList QString::split(const QString &sep, SplitBehavior behavior, Qt::CaseSensitivity cs) const' in a separate thread\nQString string = ...;\nQFuture<QStringList> future = QtConcurrent::run(string, &QString::split, QString(\", \"), QString::KeepEmptyParts, Qt::CaseSensitive);\n...\nQStringList result = future.result();\n//! [4]\n\n\n//! [5]\n// call 'void QImage::invertPixels(InvertMode mode)' in a separate thread\nQImage image = ...;\nQFuture<void> future = QtConcurrent::run(image, &QImage::invertPixels, QImage::InvertRgba);\n...\nfuture.waitForFinished();\n// At this point, the pixels in 'image' have been inverted\n//! [5]\n\n\n//! [6]\nvoid someFunction(int arg1, double arg2);\nQFuture<void> future = QtConcurrent::run(boost::bind(someFunction, 1, 2.0));\n...\n//! [6]\n", "code_tokens": ["Ġ//!", "Ġ[", "0", "]", "Ċ", "extern", "Ġvoid", "Ġa", "Function", "();", "Ċ", "Q", "Future", "<", "void", ">", "Ġfuture", "Ġ=", "ĠQt", "Concurrent", "::", "run", "(", "a", "Function", ");", "Ċ", "//!", "Ġ[", "0", "]", "Ċ", "Ċ", "Ċ", "//!", "Ġ[", "1", "]", "Ċ", "extern", "Ġvoid", "Ġa", "Function", "With", "Arguments", "(", "int", "Ġarg", "1", ",", "Ġdouble", "Ġarg", "2", ",", "Ġconst", "ĠQString", "Ġ&", "string", ");", "Ċ", "Ċ", "int", "Ġinteger", "Ġ=", "Ġ...", ";", "Ċ", "double", "Ġfloating", "Point", "Ġ=", "Ġ...", ";", "Ċ", "QString", "Ġstring", "Ġ=", "Ġ...", ";", "Ċ", "Ċ", "Q", "Future", "<", "void", ">", "Ġfuture", "Ġ=", "ĠQt", "Concurrent", "::", "run", "(", "a", "Function", "With", "Arguments", ",", "Ġinteger", ",", "Ġfloating", "Point", ",", "Ġstring", ");", "Ċ", "//!", "Ġ[", "1", "]", "Ċ", "Ċ", "Ċ", "//!", "Ġ[", "2", "]", "Ċ", "extern", "ĠQString", "Ġfunction", "Returning", "AString", "();", "Ċ", "Q", "Future", "<", "QString", ">", "Ġfuture", "Ġ=", "ĠQt", "Concurrent", "::", "run", "(", "function", "Returning", "AString", ");", "Ċ", "...", "Ċ", "QString", "Ġresult", "Ġ=", "Ġfuture", ".", "result", "();", "Ċ", "//!", "Ġ[", "2", "]", "Ċ", "Ċ", "Ċ", "//!", "Ġ[", "3", "]", "Ċ", "extern", "ĠQString", "Ġsome", "Function", "(", "const", "ĠQByteArray", "Ġ&", "input", ");", "Ċ", "Ċ", "QByteArray", "Ġbytearray", "Ġ=", "Ġ...", ";", "Ċ", "Ċ", "Q", "Future", "<", "QString", ">", "Ġfuture", "Ġ=", "ĠQt", "Concurrent", "::", "run", "(", "some", "Function", ",", "Ġbytearray", ");", "Ċ", "...", "Ċ", "QString", "Ġresult", "Ġ=", "Ġfuture", ".", "result", "();", "Ċ", "//!", "Ġ[", "3", "]", "Ċ", "Ċ", "Ċ", "//!", "Ġ[", "4", "]", "Ċ", "//", "Ġcall", "Ġ'", "QStringList", "ĠQString", "::", "split", "(", "const", "ĠQString", "Ġ&", "sep", ",", "ĠSplit", "Behavior", "Ġbehavior", ",", "ĠQt", "::", "Case", "Sensitivity", "Ġcs", ")", "Ġconst", "'", "Ġin", "Ġa", "Ġseparate", "Ġthread", "Ċ", "QString", "Ġstring", "Ġ=", "Ġ...", ";", "Ċ", "Q", "Future", "<", "QStringList", ">", "Ġfuture", "Ġ=", "ĠQt", "Concurrent", "::", "run", "(", "string", ",", "Ġ&", "QString", "::", "split", ",", "ĠQString", "(\",", "Ġ\"),", "ĠQString", "::", "Keep", "Empty", "Parts", ",", "ĠQt", "::", "CaseSensitive", ");", "Ċ", "...", "Ċ", "QStringList", "Ġresult", "Ġ=", "Ġfuture", ".", "result", "();", "Ċ", "//!", "Ġ[", "4", "]", "Ċ", "Ċ", "Ċ", "//!", "Ġ[", "5", "]", "Ċ", "//", "Ġcall", "Ġ'", "void", "ĠQImage", "::", "invert", "Pixels", "(", "Invert", "Mode", "Ġmode", ")'", "Ġin", "Ġa", "Ġseparate", "Ġthread", "Ċ", "QImage", "Ġimage", "Ġ=", "Ġ...", ";", "Ċ", "Q", "Future", "<", "void", ">", "Ġfuture", "Ġ=", "ĠQt", "Concurrent", "::", "run", "(", "image", ",", "Ġ&", "QImage", "::", "invert", "Pixels", ",", "ĠQImage", "::", "Invert", "Rg", "ba", ");", "Ċ", "...", "Ċ", "future", ".", "waitFor", "Finished", "();", "Ċ", "//", "ĠAt", "Ġthis", "Ġpoint", ",", "Ġthe", "Ġpixels", "Ġin", "Ġ'", "image", "'", "Ġhave", "Ġbeen", "Ġinverted", "Ċ", "//!", "Ġ[", "5", "]", "Ċ", "Ċ", "Ċ", "//!", "Ġ[", "6", "]", "Ċ", "void", "Ġsome", "Function", "(", "int", "Ġarg", "1", ",", "Ġdouble", "Ġarg", "2", ");", "Ċ", "Q", "Future", "<", "void", ">", "Ġfuture", "Ġ=", "ĠQt", "Concurrent", "::", "run", "(", "boost", "::", "bind", "(", "some", "Function", ",", "Ġ1", ",", "Ġ2", ".", "0", "));", "Ċ", "...", "Ċ", "//!", "Ġ[", "6", "]", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::594", "code": "#include <fstream>\n#include <iostream>\n\n#include <seqan/seq_io.h>\n#include <seqan/sequence.h>\n\nint main(int argc, char const ** argv)\n{\n    if (argc != 2)\n        return 1;  // Invalid number of arguments.\n\n    // Open file and create RecordReader.\n    std::fstream in(argv[1], std::ios::binary | std::ios::in);\n    seqan::RecordReader<std::fstream, seqan::SinglePass<> > reader(in);\n\n    // Read file in one pass.\n    seqan::StringSet<seqan::CharString> ids;\n    seqan::StringSet<seqan::CharString> seqs;\n    seqan::StringSet<seqan::CharString> quals;\n    if (read2(ids, seqs, quals, reader, seqan::Fastq()) != 0)\n        return 1;  // Could not read file.\n\n    for (unsigned i = 0; i < length(ids); ++i)\n        std::cout << ids[i] << '\\t' << seqs[i] << '\\t' << quals[i] << '\\n';\n    \n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "seq", "_", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġconst", "Ġ**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "argc", "Ġ!=", "Ġ2", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ġ", "Ġ//", "ĠInvalid", "Ġnumber", "Ġof", "Ġarguments", ".", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠOpen", "Ġfile", "Ġand", "Ġcreate", "ĠRecord", "Reader", ".", "Ċ", "ĠĠĠ", "Ġstd", "::", "f", "stream", "Ġin", "(", "argv", "[", "1", "],", "Ġstd", "::", "ios", "::", "binary", "Ġ|", "Ġstd", "::", "ios", "::", "in", ");", "Ċ", "ĠĠĠ", "Ġseq", "an", "::", "Record", "Reader", "<", "std", "::", "f", "stream", ",", "Ġseq", "an", "::", "Single", "Pass", "<>", "Ġ>", "Ġreader", "(", "in", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠRead", "Ġfile", "Ġin", "Ġone", "Ġpass", ".", "Ċ", "ĠĠĠ", "Ġseq", "an", "::", "String", "Set", "<", "seq", "an", "::", "Char", "String", ">", "Ġids", ";", "Ċ", "ĠĠĠ", "Ġseq", "an", "::", "String", "Set", "<", "seq", "an", "::", "Char", "String", ">", "Ġseq", "s", ";", "Ċ", "ĠĠĠ", "Ġseq", "an", "::", "String", "Set", "<", "seq", "an", "::", "Char", "String", ">", "Ġqual", "s", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "read", "2", "(", "ids", ",", "Ġseq", "s", ",", "Ġqual", "s", ",", "Ġreader", ",", "Ġseq", "an", "::", "Fast", "q", "())", "Ġ!=", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ġ", "Ġ//", "ĠCould", "Ġnot", "Ġread", "Ġfile", ".", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "ids", ");", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġids", "[", "i", "]", "Ġ<<", "Ġ'\\", "t", "'", "Ġ<<", "Ġseq", "s", "[", "i", "]", "Ġ<<", "Ġ'\\", "t", "'", "Ġ<<", "Ġqual", "s", "[", "i", "]", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::595", "code": "\n/*\n *\n * Copyright 2003 Blur Studio Inc.\n *\n * This file is part of Arsenal.\n *\n * Arsenal is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Arsenal is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Arsenal; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n */\n\n/*\n * $Id$\n */\n\n#include <qglobal.h>\n\n#include \"common.h\"\n\nvoid * hMutex = 0;\n\nconst char * CLIENT_LOG = \"assburner.log\";\nbool QUIT_ON_DISABLE = false;\n\n#ifdef Q_WS_WIN\n\n// Windows config\nconst char * LOG_COMMAND = \"c:/blur/assburner/Tail.exe %1\";\nconst char * AF_COMMAND = \"c:/blur/assfreezer/assfreezer.exe\";\n\n#else\n\n// Linux config\nconst char * LOG_COMMAND = \"konsole -e less %1\";\nconst char * AF_COMMAND = \"/usr/bin/assfreezer\";\n\n#endif // Q_WS_WIN\n\n", "code_tokens": ["Ċ", "/*", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2003", "ĠBl", "ur", "ĠStudio", "ĠInc", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠAr", "sen", "al", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠAr", "sen", "al", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠAr", "sen", "al", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠAr", "sen", "al", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", ",", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", "Ġ", "ĠUSA", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ġ$", "Id", "$", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "q", "global", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "common", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġ*", "Ġh", "Mutex", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "const", "Ġchar", "Ġ*", "ĠCLIENT", "_", "LOG", "Ġ=", "Ġ\"", "ass", "burn", "er", ".", "log", "\";", "Ċ", "bool", "ĠQU", "IT", "_", "ON", "_", "DISABLE", "Ġ=", "Ġfalse", ";", "Ċ", "Ċ", "#", "ifdef", "ĠQ", "_", "WS", "_", "WIN", "Ċ", "Ċ", "//", "ĠWindows", "Ġconfig", "Ċ", "const", "Ġchar", "Ġ*", "ĠLOG", "_", "COMMAND", "Ġ=", "Ġ\"", "c", ":/", "blur", "/", "ass", "burn", "er", "/", "Tail", ".", "exe", "Ġ%", "1", "\";", "Ċ", "const", "Ġchar", "Ġ*", "ĠAF", "_", "COMMAND", "Ġ=", "Ġ\"", "c", ":/", "blur", "/", "ass", "free", "zer", "/", "ass", "free", "zer", ".", "exe", "\";", "Ċ", "Ċ", "#", "else", "Ċ", "Ċ", "//", "ĠLinux", "Ġconfig", "Ċ", "const", "Ġchar", "Ġ*", "ĠLOG", "_", "COMMAND", "Ġ=", "Ġ\"", "k", "on", "sole", "Ġ-", "e", "Ġless", "Ġ%", "1", "\";", "Ċ", "const", "Ġchar", "Ġ*", "ĠAF", "_", "COMMAND", "Ġ=", "Ġ\"/", "usr", "/", "bin", "/", "ass", "free", "zer", "\";", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠQ", "_", "WS", "_", "WIN", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::596", "code": "// Build don't link:\n// Origin: Jakub Jelinek <jakub@redhat.com>\n// Special g++ Options: -O3\n\nstatic void foo (int a)\n{\n  a = a;\n}\n\nstatic void bar (void)\n{\n  foo (-1);\n}\n", "code_tokens": ["Ġ//", "ĠBuild", "Ġdon", "'t", "Ġlink", ":", "Ċ", "//", "ĠOrigin", ":", "ĠJ", "ak", "ub", "ĠJ", "eline", "k", "Ġ<", "j", "ak", "ub", "@", "red", "hat", ".", "com", ">", "Ċ", "//", "ĠSpecial", "Ġg", "++", "ĠOptions", ":", "Ġ-", "O", "3", "Ċ", "Ċ", "static", "Ġvoid", "Ġfoo", "Ġ(", "int", "Ġa", ")", "Ċ", "{", "Ċ", "Ġ", "Ġa", "Ġ=", "Ġa", ";", "Ċ", "}", "Ċ", "Ċ", "static", "Ġvoid", "Ġbar", "Ġ(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġfoo", "Ġ(-", "1", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::597", "code": "// RUN: rm -rf %t\n// RUN: mkdir -p %t/Src\n// RUN: cp \"%s\" \"%t/Src/test.cpp\"\n// RUN: mkdir -p %t/Include\n// RUN: cp \"%S/Inputs/fixed-header.h\" \"%t/Include/\"\n// -I flag is relative to %t (where compile_flags is), not Src/.\n// RUN: echo '-IInclude/' >> %t/compile_flags.txt\n// RUN: echo \"  -Dklazz=class   \" >> %t/compile_flags.txt\n// RUN: echo '-std=c++11' >> %t/compile_flags.txt\n// RUN: clang-check \"%t/Src/test.cpp\" 2>&1\n// RUN: echo > %t/compile_flags.txt\n// RUN: not clang-check \"%t/Src/test.cpp\" 2>&1 | FileCheck \"%s\" -check-prefix=NODB\n\n// NODB: unknown type name 'klazz'\nklazz F{};\n\n// NODB: 'fixed-header.h' file not found\n#include \"fixed-header.h\"\nstatic_assert(SECRET_SYMBOL == 1, \"\");\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġrm", "Ġ-", "rf", "Ġ%", "t", "Ċ", "//", "ĠRUN", ":", "Ġmkdir", "Ġ-", "p", "Ġ%", "t", "/", "Src", "Ċ", "//", "ĠRUN", ":", "Ġcp", "Ġ\"%", "s", "\"", "Ġ\"%", "t", "/", "Src", "/", "test", ".", "cpp", "\"", "Ċ", "//", "ĠRUN", ":", "Ġmkdir", "Ġ-", "p", "Ġ%", "t", "/", "Include", "Ċ", "//", "ĠRUN", ":", "Ġcp", "Ġ\"%", "S", "/", "Inputs", "/", "fixed", "-", "header", ".", "h", "\"", "Ġ\"%", "t", "/", "Include", "/\"", "Ċ", "//", "Ġ-", "I", "Ġflag", "Ġis", "Ġrelative", "Ġto", "Ġ%", "t", "Ġ(", "where", "Ġcompile", "_", "flags", "Ġis", "),", "Ġnot", "ĠSrc", "/.", "Ċ", "//", "ĠRUN", ":", "Ġecho", "Ġ'-", "I", "Include", "/'", "Ġ>>", "Ġ%", "t", "/", "compile", "_", "flags", ".", "txt", "Ċ", "//", "ĠRUN", ":", "Ġecho", "Ġ\"", "Ġ", "Ġ-", "Dk", "lazz", "=", "class", "ĠĠ", "Ġ\"", "Ġ>>", "Ġ%", "t", "/", "compile", "_", "flags", ".", "txt", "Ċ", "//", "ĠRUN", ":", "Ġecho", "Ġ'-", "std", "=", "c", "++", "11", "'", "Ġ>>", "Ġ%", "t", "/", "compile", "_", "flags", ".", "txt", "Ċ", "//", "ĠRUN", ":", "Ġclang", "-", "check", "Ġ\"%", "t", "/", "Src", "/", "test", ".", "cpp", "\"", "Ġ2", ">&", "1", "Ċ", "//", "ĠRUN", ":", "Ġecho", "Ġ>", "Ġ%", "t", "/", "compile", "_", "flags", ".", "txt", "Ċ", "//", "ĠRUN", ":", "Ġnot", "Ġclang", "-", "check", "Ġ\"%", "t", "/", "Src", "/", "test", ".", "cpp", "\"", "Ġ2", ">&", "1", "Ġ|", "ĠFile", "Check", "Ġ\"%", "s", "\"", "Ġ-", "check", "-", "prefix", "=", "N", "ODB", "Ċ", "Ċ", "//", "ĠN", "ODB", ":", "Ġunknown", "Ġtype", "Ġname", "Ġ'", "k", "lazz", "'", "Ċ", "k", "lazz", "ĠF", "{};", "Ċ", "Ċ", "//", "ĠN", "ODB", ":", "Ġ'", "fixed", "-", "header", ".", "h", "'", "Ġfile", "Ġnot", "Ġfound", "Ċ", "#", "include", "Ġ\"", "fixed", "-", "header", ".", "h", "\"", "Ċ", "static", "_", "assert", "(", "SECRET", "_", "SYMBOL", "Ġ==", "Ġ1", ",", "Ġ\"\");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::598", "code": "/****************************************************************************\n *\n * Copyright 2018 Samsung Electronics All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n ****************************************************************************/\n//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n\n// <iterator>\n\n// struct output_iterator_tag {};\n\n#include <iterator>\n#include <type_traits>\n#include \"test_macros.h\"\n#include \"libcxx_tc_common.h\"\n\nint tc_libcxx_iterators_std_iterator_tags_output_iterator_tag(void)\n{\n    std::output_iterator_tag tag;\n    ((void)tag); // Prevent unused warning\n    static_assert((!std::is_base_of<std::input_iterator_tag,\n                                    std::output_iterator_tag>::value), \"\");\n    TC_SUCCESS_RESULT();\n    return 0;\n}\n", "code_tokens": ["Ġ/", "************************************************************************", "****", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ201", "8", "ĠSam", "sung", "ĠE", "lect", "ron", "ics", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ċ", "Ġ*", "Ġsoftware", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ċ", "Ġ*", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ċ", "Ġ*", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ċ", "Ġ*", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "Ċ", "Ġ****************************************************************************/", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠThe", "ĠLLVM", "ĠCompiler", "ĠInf", "rastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUn", "ivers", "ity", "Ġof", "ĠI", "ll", "ino", "is", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLICENSE", ".", "TXT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "//", "Ġ<", "iterator", ">", "Ċ", "Ċ", "//", "Ġstruct", "Ġoutput", "_", "iterator", "_", "tag", "Ġ{};", "Ċ", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "#", "include", "Ġ<", "type", "_", "traits", ">", "Ċ", "#", "include", "Ġ\"", "test", "_", "macros", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "libc", "xx", "_", "tc", "_", "common", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġtc", "_", "libc", "xx", "_", "iterator", "s", "_", "std", "_", "iterator", "_", "tags", "_", "output", "_", "iterator", "_", "tag", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "output", "_", "iterator", "_", "tag", "Ġtag", ";", "Ċ", "ĠĠĠ", "Ġ((", "void", ")", "tag", ");", "Ġ//", "ĠPrevent", "Ġunused", "Ġwarning", "Ċ", "ĠĠĠ", "Ġstatic", "_", "assert", "((!", "std", "::", "is", "_", "base", "_", "of", "<", "std", "::", "input", "_", "iterator", "_", "tag", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "output", "_", "iterator", "_", "tag", ">::", "value", "),", "Ġ\"\");", "Ċ", "ĠĠĠ", "ĠTC", "_", "SUCCESS", "_", "RESULT", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::599", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"cycle_ptrs.h\"\n\nnamespace blink {\n\nvoid A::Trace(Visitor* visitor) const {\n  visitor->Trace(m_b);\n}\n\nvoid B::Trace(Visitor* visitor) const {\n  visitor->Trace(m_a);\n}\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "cycle", "_", "ptrs", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġblink", "Ġ{", "Ċ", "Ċ", "void", "ĠA", "::", "Trace", "(", "Visitor", "*", "Ġvisitor", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġvisitor", "->", "Trace", "(", "m", "_", "b", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠB", "::", "Trace", "(", "Visitor", "*", "Ġvisitor", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġvisitor", "->", "Trace", "(", "m", "_", "a", ");", "Ċ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::600", "code": "// Copyright Louis Dionne 2013-2017\n// Distributed under the Boost Software License, Version 1.0.\n// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#include <boost/hana/assert.hpp>\n#include <boost/hana/hash.hpp>\n#include <boost/hana/not_equal.hpp>\n#include <boost/hana/string.hpp>\nnamespace hana = boost::hana;\n\n\n// `hana::hash` returns a type uniquely representing the string. The hash is\n// perfect, meaning no two different strings have the same hash value.\nBOOST_HANA_CONSTANT_CHECK(hana::not_equal(\n    hana::hash(BOOST_HANA_STRING(\"abcdef\")),\n    hana::hash(BOOST_HANA_STRING(\"abcdefg\"))\n));\n\nint main() { }\n", "code_tokens": ["Ġ//", "ĠCopyright", "ĠL", "ou", "is", "ĠD", "ion", "ne", "Ġ2013", "-", "2017", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", ".", "md", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "hana", "/", "assert", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "hana", "/", "hash", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "hana", "/", "not", "_", "equal", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "hana", "/", "string", ".", "hpp", ">", "Ċ", "namespace", "Ġh", "ana", "Ġ=", "Ġboost", "::", "hana", ";", "Ċ", "Ċ", "Ċ", "//", "Ġ`", "hana", "::", "hash", "`", "Ġreturns", "Ġa", "Ġtype", "Ġunique", "ly", "Ġrepresenting", "Ġthe", "Ġstring", ".", "ĠThe", "Ġhash", "Ġis", "Ċ", "//", "Ġperfect", ",", "Ġmeaning", "Ġno", "Ġtwo", "Ġdifferent", "Ġstrings", "Ġhave", "Ġthe", "Ġsame", "Ġhash", "Ġvalue", ".", "Ċ", "BOOST", "_", "H", "ANA", "_", "CONSTANT", "_", "CHECK", "(", "hana", "::", "not", "_", "equal", "(", "Ċ", "ĠĠĠ", "Ġh", "ana", "::", "hash", "(", "BOOST", "_", "H", "ANA", "_", "STRING", "(\"", "abcdef", "\")),", "Ċ", "ĠĠĠ", "Ġh", "ana", "::", "hash", "(", "BOOST", "_", "H", "ANA", "_", "STRING", "(\"", "abcdef", "g", "\"))", "Ċ", "));", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::601", "code": "//  SuperTux - Worldmap Direction\n//  Copyright (C) 2006 Christoph Sommer <christoph.sommer@2006.expires.deltadevelopment.de>\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#ifndef HEADER_SUPERTUX_WORLDMAP_DIRECTION_HPP\n#define HEADER_SUPERTUX_WORLDMAP_DIRECTION_HPP\n\n#include <string>\n\nnamespace worldmap {\n\nenum Direction { D_NONE, D_WEST, D_EAST, D_NORTH, D_SOUTH };\n\nDirection reverse_dir(Direction direction);\nDirection string_to_direction(const std::string& directory);\nstd::string direction_to_string(Direction direction);\n\n} // namespace worldmap\n\n#endif\n\n/* EOF */\n", "code_tokens": ["Ġ//", "Ġ", "ĠSuper", "T", "ux", "Ġ-", "ĠWorld", "map", "ĠDirection", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "ĠCh", "ri", "stop", "h", "ĠSom", "mer", "Ġ<", "ch", "ri", "stop", "h", ".", "som", "mer", "@", "2006", ".", "expires", ".", "delta", "development", ".", "de", ">", "Ċ", "//", "Ċ", "//", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "ifndef", "ĠHEADER", "_", "SUP", "ERT", "UX", "_", "WORLD", "MAP", "_", "DIRECTION", "_", "HP", "P", "Ċ", "#", "define", "ĠHEADER", "_", "SUP", "ERT", "UX", "_", "WORLD", "MAP", "_", "DIRECTION", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "namespace", "Ġworld", "map", "Ġ{", "Ċ", "Ċ", "enum", "ĠDirection", "Ġ{", "ĠD", "_", "NONE", ",", "ĠD", "_", "WEST", ",", "ĠD", "_", "E", "AST", ",", "ĠD", "_", "NOR", "TH", ",", "ĠD", "_", "S", "OUTH", "Ġ};", "Ċ", "Ċ", "Direction", "Ġreverse", "_", "dir", "(", "Direction", "Ġdirection", ");", "Ċ", "Direction", "Ġstring", "_", "to", "_", "direction", "(", "const", "Ġstd", "::", "string", "&", "Ġdirectory", ");", "Ċ", "std", "::", "string", "Ġdirection", "_", "to", "_", "string", "(", "Direction", "Ġdirection", ");", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġworld", "map", "Ċ", "Ċ", "#", "endif", "Ċ", "Ċ", "/*", "ĠEOF", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::602", "code": "//\n// detail/memory.hpp\n// ~~~~~~~~~~~~~~~~~\n//\n// Copyright (c) 2003-2017 Christopher M. Kohlhoff (chris at kohlhoff dot com)\n//\n// Distributed under the Boost Software License, Version 1.0. (See accompanying\n// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n//\n\n#ifndef BOOST_ASIO_DETAIL_MEMORY_HPP\n#define BOOST_ASIO_DETAIL_MEMORY_HPP\n\n#if defined(_MSC_VER) && (_MSC_VER >= 1200)\n# pragma once\n#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)\n\n#include <boost/asio/detail/config.hpp>\n#include <memory>\n\n#if defined(BOOST_ASIO_HAS_CXX11_ALLOCATORS)\n# define BOOST_ASIO_REBIND_ALLOC(alloc, t) \\\n  typename std::allocator_traits<alloc>::template rebind_alloc<t>\n  /**/\n#else // defined(BOOST_ASIO_HAS_CXX11_ALLOCATORS)\n# define BOOST_ASIO_REBIND_ALLOC(alloc, t) \\\n  typename alloc::template rebind<t>::other\n  /**/\n#endif // defined(BOOST_ASIO_HAS_CXX11_ALLOCATORS)\n\n#endif // BOOST_ASIO_DETAIL_MEMORY_HPP\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġdetail", "/", "memory", ".", "hpp", "Ċ", "//", "Ġ~", "~~~~~~~~~~~~~~~~", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", "-", "2017", "ĠCh", "ri", "stop", "her", "ĠM", ".", "ĠKo", "hl", "h", "off", "Ġ(", "chris", "Ġat", "Ġko", "hl", "h", "off", "Ġdot", "Ġcom", ")", "Ċ", "//", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠBOOST", "_", "A", "SIO", "_", "DETAIL", "_", "MEMORY", "_", "HP", "P", "Ċ", "#", "define", "ĠBOOST", "_", "A", "SIO", "_", "DETAIL", "_", "MEMORY", "_", "HP", "P", "Ċ", "Ċ", "#", "if", "Ġdefined", "(_", "MSC", "_", "VER", ")", "Ġ&&", "Ġ(_", "MSC", "_", "VER", "Ġ>=", "Ġ1200", ")", "Ċ", "#", "Ġpragma", "Ġonce", "Ċ", "#", "endif", "Ġ//", "Ġdefined", "(_", "MSC", "_", "VER", ")", "Ġ&&", "Ġ(_", "MSC", "_", "VER", "Ġ>=", "Ġ1200", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "asio", "/", "detail", "/", "config", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "#", "if", "Ġdefined", "(", "BOOST", "_", "A", "SIO", "_", "HAS", "_", "CXX", "11", "_", "ALLOC", "ATOR", "S", ")", "Ċ", "#", "Ġdefine", "ĠBOOST", "_", "A", "SIO", "_", "RE", "BIND", "_", "ALLOC", "(", "alloc", ",", "Ġt", ")", "Ġ\\", "Ċ", "Ġ", "Ġtypename", "Ġstd", "::", "allocator", "_", "traits", "<", "alloc", ">::", "template", "Ġre", "bind", "_", "alloc", "<", "t", ">", "Ċ", "Ġ", "Ġ/**", "/", "Ċ", "#", "else", "Ġ//", "Ġdefined", "(", "BOOST", "_", "A", "SIO", "_", "HAS", "_", "CXX", "11", "_", "ALLOC", "ATOR", "S", ")", "Ċ", "#", "Ġdefine", "ĠBOOST", "_", "A", "SIO", "_", "RE", "BIND", "_", "ALLOC", "(", "alloc", ",", "Ġt", ")", "Ġ\\", "Ċ", "Ġ", "Ġtypename", "Ġalloc", "::", "template", "Ġre", "bind", "<", "t", ">::", "other", "Ċ", "Ġ", "Ġ/**", "/", "Ċ", "#", "endif", "Ġ//", "Ġdefined", "(", "BOOST", "_", "A", "SIO", "_", "HAS", "_", "CXX", "11", "_", "ALLOC", "ATOR", "S", ")", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠBOOST", "_", "A", "SIO", "_", "DETAIL", "_", "MEMORY", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::603", "code": "#ifndef QUEUENOTIFY_HH\n#define QUEUENOTIFY_HH\n#include <click/element.hh>\n#include <click/bitvector.hh>\n#include <click/glue.hh>\n#include \"elements/standard/notifierqueue.hh\"\n/*\n * =c\n * QueueNotify\n * QueueNotify(CAPACITY)\n * =s storage\n * stores packets in a FIFO queue\n * =d\n * Stores incoming packets in a first-in-first-out queue.\n * Drops incoming packets if the queue already holds CAPACITY packets.\n * The default for CAPACITY is 1000.\n * =h length read-only\n * Returns the current number of packets in the queue.\n * =h highwater_length read-only\n * Returns the maximum number of packets that have ever been in the queue at once.\n * =h capacity read/write\n * Returns or sets the queue's capacity.\n * =h drops read-only\n * Returns the number of packets dropped by the Queue so far.\n * =h reset_counts write-only\n * When written, resets the C<drops> and C<highwater_length> counters.\n * =h reset write-only\n * When written, drops all packets in the Queue.\n * =a Queue, RED, FrontDropQueue\n */\n\nclass NotifiedElement { public:\n  virtual void notify(int i);\n};\n\nclass QueueNotify : public NotifierQueue { public:\n  static const int NODATA = 0;\n  static const int DATAREADY = 1;\n\n  QueueNotify();\n\n  const char *class_name() const { return \"QueueNotify\";}\n  void *cast(const char *);\n\n  void subscribe_notification(NotifiedElement *e);\n  void notify_subscribers(int signal);\n\n  void push(int port, Packet *);\n  Packet *pull(int port);\n\n\nprotected:\n  Vector<NotifiedElement*> _subscribers;\n\n};\n\n\n#endif\n\n", "code_tokens": ["Ġ#", "ifndef", "ĠQ", "UE", "U", "ENOT", "IFY", "_", "HH", "Ċ", "#", "define", "ĠQ", "UE", "U", "ENOT", "IFY", "_", "HH", "Ċ", "#", "include", "Ġ<", "click", "/", "element", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "click", "/", "bit", "vector", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "click", "/", "glue", ".", "hh", ">", "Ċ", "#", "include", "Ġ\"", "elements", "/", "standard", "/", "notifier", "queue", ".", "hh", "\"", "Ċ", "/*", "Ċ", "Ġ*", "Ġ=", "c", "Ċ", "Ġ*", "ĠQueue", "Notify", "Ċ", "Ġ*", "ĠQueue", "Notify", "(", "CAPACITY", ")", "Ċ", "Ġ*", "Ġ=", "s", "Ġstorage", "Ċ", "Ġ*", "Ġstores", "Ġpackets", "Ġin", "Ġa", "ĠFIFO", "Ġqueue", "Ċ", "Ġ*", "Ġ=", "d", "Ċ", "Ġ*", "ĠSto", "res", "Ġincoming", "Ġpackets", "Ġin", "Ġa", "Ġfirst", "-", "in", "-", "first", "-", "out", "Ġqueue", ".", "Ċ", "Ġ*", "ĠD", "rops", "Ġincoming", "Ġpackets", "Ġif", "Ġthe", "Ġqueue", "Ġalready", "Ġholds", "ĠCAP", "ACITY", "Ġpackets", ".", "Ċ", "Ġ*", "ĠThe", "Ġdefault", "Ġfor", "ĠCAP", "ACITY", "Ġis", "Ġ1000", ".", "Ċ", "Ġ*", "Ġ=", "h", "Ġlength", "Ġread", "-", "only", "Ċ", "Ġ*", "ĠReturns", "Ġthe", "Ġcurrent", "Ġnumber", "Ġof", "Ġpackets", "Ġin", "Ġthe", "Ġqueue", ".", "Ċ", "Ġ*", "Ġ=", "h", "Ġhigh", "water", "_", "length", "Ġread", "-", "only", "Ċ", "Ġ*", "ĠReturns", "Ġthe", "Ġmaximum", "Ġnumber", "Ġof", "Ġpackets", "Ġthat", "Ġhave", "Ġever", "Ġbeen", "Ġin", "Ġthe", "Ġqueue", "Ġat", "Ġonce", ".", "Ċ", "Ġ*", "Ġ=", "h", "Ġcapacity", "Ġread", "/", "write", "Ċ", "Ġ*", "ĠReturns", "Ġor", "Ġsets", "Ġthe", "Ġqueue", "'s", "Ġcapacity", ".", "Ċ", "Ġ*", "Ġ=", "h", "Ġdrops", "Ġread", "-", "only", "Ċ", "Ġ*", "ĠReturns", "Ġthe", "Ġnumber", "Ġof", "Ġpackets", "Ġdropped", "Ġby", "Ġthe", "ĠQueue", "Ġso", "Ġfar", ".", "Ċ", "Ġ*", "Ġ=", "h", "Ġreset", "_", "counts", "Ġwrite", "-", "only", "Ċ", "Ġ*", "ĠWhen", "Ġwritten", ",", "Ġresets", "Ġthe", "ĠC", "<", "drops", ">", "Ġand", "ĠC", "<", "high", "water", "_", "length", ">", "Ġcounters", ".", "Ċ", "Ġ*", "Ġ=", "h", "Ġreset", "Ġwrite", "-", "only", "Ċ", "Ġ*", "ĠWhen", "Ġwritten", ",", "Ġdrops", "Ġall", "Ġpackets", "Ġin", "Ġthe", "ĠQueue", ".", "Ċ", "Ġ*", "Ġ=", "a", "ĠQueue", ",", "ĠRED", ",", "ĠFront", "Drop", "Queue", "Ċ", "Ġ*/", "Ċ", "Ċ", "class", "ĠNot", "ified", "Element", "Ġ{", "Ġpublic", ":", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġnotify", "(", "int", "Ġi", ");", "Ċ", "};", "Ċ", "Ċ", "class", "ĠQueue", "Notify", "Ġ:", "Ġpublic", "ĠNot", "ifier", "Queue", "Ġ{", "Ġpublic", ":", "Ċ", "Ġ", "Ġstatic", "Ġconst", "Ġint", "ĠN", "ODATA", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġstatic", "Ġconst", "Ġint", "ĠDATA", "READY", "Ġ=", "Ġ1", ";", "Ċ", "Ċ", "Ġ", "ĠQueue", "Notify", "();", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġchar", "Ġ*", "class", "_", "name", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġ\"", "Queue", "Notify", "\";}", "Ċ", "Ġ", "Ġvoid", "Ġ*", "cast", "(", "const", "Ġchar", "Ġ*);", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġsubscribe", "_", "notification", "(", "Not", "ified", "Element", "Ġ*", "e", ");", "Ċ", "Ġ", "Ġvoid", "Ġnotify", "_", "subscribers", "(", "int", "Ġsignal", ");", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġpush", "(", "int", "Ġport", ",", "ĠPacket", "Ġ*);", "Ċ", "Ġ", "ĠPacket", "Ġ*", "pull", "(", "int", "Ġport", ");", "Ċ", "Ċ", "Ċ", "protected", ":", "Ċ", "Ġ", "ĠVector", "<", "Not", "ified", "Element", "*>", "Ġ_", "subscribers", ";", "Ċ", "Ċ", "};", "Ċ", "Ċ", "Ċ", "#", "endif", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::604", "code": "// { dg-do compile }\n\n// Copyright (C) 2007-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <utility>\n\nnamespace gnu\n{\n  using namespace std::rel_ops;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "namespace", "Ġg", "nu", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġstd", "::", "rel", "_", "ops", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::605", "code": "// { dg-require-namedlocale \"en_US\" }\n\n// Copyright (C) 2003-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 27.8.1.4 Overridden virtual functions\n\n#include <fstream>\n#include <locale>\n#include <testsuite_hooks.h>\n\n// libstdc++/13171\nvoid test01()\n{\n  bool test __attribute__((unused)) = true;\n  using namespace std;\n\n  filebuf fb;\n  \n  fb.pubimbue(locale(\"en_US\"));\n  fb.pubimbue(locale(\"en_US\"));\n  \n  fb.open(\"tmp_13171-1\", ios_base::out);\n  fb.sputc('F');\n  fb.pubsync();\n  fb.close();\n}\n\nint main()\n{\n  test01();\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "require", "-", "named", "locale", "Ġ\"", "en", "_", "US", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "Ġ27", ".", "8", ".", "1", ".", "4", "ĠOverr", "idden", "Ġvirtual", "Ġfunctions", "Ċ", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "locale", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "//", "Ġlib", "std", "c", "++", "/", "13", "171", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__((", "unused", "))", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ġ", "Ġfile", "buf", "Ġfb", ";", "Ċ", "ĠĠĊ", "Ġ", "Ġfb", ".", "pub", "imb", "ue", "(", "locale", "(\"", "en", "_", "US", "\"));", "Ċ", "Ġ", "Ġfb", ".", "pub", "imb", "ue", "(", "locale", "(\"", "en", "_", "US", "\"));", "Ċ", "ĠĠĊ", "Ġ", "Ġfb", ".", "open", "(\"", "tmp", "_", "13", "171", "-", "1", "\",", "Ġios", "_", "base", "::", "out", ");", "Ċ", "Ġ", "Ġfb", ".", "s", "putc", "('", "F", "');", "Ċ", "Ġ", "Ġfb", ".", "pub", "sync", "();", "Ċ", "Ġ", "Ġfb", ".", "close", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::606", "code": "// 2005-12-20  Paolo Carlini  <pcarlini@suse.de>\n\n// Copyright (C) 2005-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <list>\n#include \"3.h\"\n\nint main()\n{ \n  typedef char value_type;\n  typedef __gnu_test::uneq_allocator<value_type> allocator_type;\n  typedef std::list<value_type, allocator_type> list_type;\n\n  swap3<list_type>();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ2005", "-", "12", "-", "20", "Ġ", "ĠP", "ao", "lo", "ĠCar", "lin", "i", "Ġ", "Ġ<", "pc", "ar", "lin", "i", "@", "s", "use", ".", "de", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "#", "include", "Ġ\"", "3", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "ĠĊ", "Ġ", "Ġtypedef", "Ġchar", "Ġvalue", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġ__", "gnu", "_", "test", "::", "un", "eq", "_", "allocator", "<", "value", "_", "type", ">", "Ġallocator", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġstd", "::", "list", "<", "value", "_", "type", ",", "Ġallocator", "_", "type", ">", "Ġlist", "_", "type", ";", "Ċ", "Ċ", "Ġ", "Ġswap", "3", "<", "list", "_", "type", ">();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::607", "code": "// RUN: %clang_cc1 -verify %s -std=c++11\n\n// A function that is explicitly defaulted shall\nstruct A {\n  // -- be a special member function,\n  A(int) = default; // expected-error {{only special member functions may be defaulted}}\n\n  // -- have the same declared function type as if it had been implicitly\n  //    declared\n  void operator=(const A &) = default; // expected-error {{must return 'A &'}}\n  A(...) = default; // expected-error {{cannot be variadic}}\n  A(const A &, ...) = default; // expected-error {{cannot be variadic}}\n\n  //    (except for possibly differing ref-qualifiers\n  A &operator=(A &&) & = default;\n\n  //    and except that in the case of a copy constructor or copy assignment\n  //    operator, the parameter type may be \"reference to non-const T\")\n  A(A &) = default;\n  A &operator=(A &) = default;\n\n  // -- not have default arguments\n  A(double = 0.0) = default; // expected-error {{cannot have default arguments}}\n  A(const A & = 0) = default; // expected-error {{cannot have default arguments}}\n};\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "verify", "Ġ%", "s", "Ġ-", "std", "=", "c", "++", "11", "Ċ", "Ċ", "//", "ĠA", "Ġfunction", "Ġthat", "Ġis", "Ġexplicitly", "Ġde", "faulted", "Ġshall", "Ċ", "struct", "ĠA", "Ġ{", "Ċ", "Ġ", "Ġ//", "Ġ--", "Ġbe", "Ġa", "Ġspecial", "Ġmember", "Ġfunction", ",", "Ċ", "Ġ", "ĠA", "(", "int", ")", "Ġ=", "Ġdefault", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "only", "Ġspecial", "Ġmember", "Ġfunctions", "Ġmay", "Ġbe", "Ġde", "faulted", "}}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġ--", "Ġhave", "Ġthe", "Ġsame", "Ġdeclared", "Ġfunction", "Ġtype", "Ġas", "Ġif", "Ġit", "Ġhad", "Ġbeen", "Ġimplicitly", "Ċ", "Ġ", "Ġ//", "ĠĠĠ", "Ġdeclared", "Ċ", "Ġ", "Ġvoid", "Ġoperator", "=(", "const", "ĠA", "Ġ&)", "Ġ=", "Ġdefault", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "must", "Ġreturn", "Ġ'", "A", "Ġ&", "'}}", "Ċ", "Ġ", "ĠA", "(...)", "Ġ=", "Ġdefault", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "cannot", "Ġbe", "Ġvar", "iadic", "}}", "Ċ", "Ġ", "ĠA", "(", "const", "ĠA", "Ġ&,", "Ġ...)", "Ġ=", "Ġdefault", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "cannot", "Ġbe", "Ġvar", "iadic", "}}", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠĠĠ", "Ġ(", "except", "Ġfor", "Ġpossibly", "Ġdiffer", "ing", "Ġref", "-", "qual", "ifiers", "Ċ", "Ġ", "ĠA", "Ġ&", "operator", "=(", "A", "Ġ&&", ")", "Ġ&", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠĠĠ", "Ġand", "Ġexcept", "Ġthat", "Ġin", "Ġthe", "Ġcase", "Ġof", "Ġa", "Ġcopy", "Ġconstructor", "Ġor", "Ġcopy", "Ġassignment", "Ċ", "Ġ", "Ġ//", "ĠĠĠ", "Ġoperator", ",", "Ġthe", "Ġparameter", "Ġtype", "Ġmay", "Ġbe", "Ġ\"", "reference", "Ġto", "Ġnon", "-", "const", "ĠT", "\")", "Ċ", "Ġ", "ĠA", "(", "A", "Ġ&)", "Ġ=", "Ġdefault", ";", "Ċ", "Ġ", "ĠA", "Ġ&", "operator", "=(", "A", "Ġ&)", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġ--", "Ġnot", "Ġhave", "Ġdefault", "Ġarguments", "Ċ", "Ġ", "ĠA", "(", "double", "Ġ=", "Ġ0", ".", "0", ")", "Ġ=", "Ġdefault", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "cannot", "Ġhave", "Ġdefault", "Ġarguments", "}}", "Ċ", "Ġ", "ĠA", "(", "const", "ĠA", "Ġ&", "Ġ=", "Ġ0", ")", "Ġ=", "Ġdefault", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "cannot", "Ġhave", "Ġdefault", "Ġarguments", "}}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::608", "code": "//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n\n// <random>\n\n// template<class _IntType = int>\n// class uniform_int_distribution\n\n// uniform_int_distribution(const uniform_int_distribution&);\n\n#include <random>\n#include <cassert>\n\nvoid\ntest1()\n{\n    typedef std::uniform_int_distribution<long> D;\n    D d1(2, 5);\n    D d2 = d1;\n    assert(d1 == d2);\n}\n\nint main()\n{\n    test1();\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------------", "===//", "Ċ", "//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠThe", "ĠLLVM", "ĠCompiler", "ĠInf", "rastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUn", "ivers", "ity", "Ġof", "ĠI", "ll", "ino", "is", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLICENSE", ".", "TXT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "//", "Ġ<", "random", ">", "Ċ", "Ċ", "//", "Ġtemplate", "<", "class", "Ġ_", "Int", "Type", "Ġ=", "Ġint", ">", "Ċ", "//", "Ġclass", "Ġuniform", "_", "int", "_", "distribution", "Ċ", "Ċ", "//", "Ġuniform", "_", "int", "_", "distribution", "(", "const", "Ġuniform", "_", "int", "_", "distribution", "&", ");", "Ċ", "Ċ", "#", "include", "Ġ<", "random", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "void", "Ċ", "test", "1", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "uniform", "_", "int", "_", "distribution", "<", "long", ">", "ĠD", ";", "Ċ", "ĠĠĠ", "ĠD", "Ġd", "1", "(", "2", ",", "Ġ5", ");", "Ċ", "ĠĠĠ", "ĠD", "Ġd", "2", "Ġ=", "Ġd", "1", ";", "Ċ", "ĠĠĠ", "Ġassert", "(", "d", "1", "Ġ==", "Ġd", "2", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtest", "1", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::609", "code": "/* Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n#include \"tensorflow/core/kernels/cast_op_impl.h\"\n\nnamespace tensorflow {\n\ntypedef Eigen::ThreadPoolDevice CPUDevice;\ntypedef Eigen::GpuDevice GPUDevice;\n\nstd::function<void(OpKernelContext*, const Tensor&, Tensor*)>\nGetCpuCastFromBool(DataType dst_dtype) {\n  CURRY_TYPES3(CAST_CASE, CPUDevice, bool);\n  return nullptr;\n}\n\n#if GOOGLE_CUDA\nstd::function<void(OpKernelContext*, const Tensor&, Tensor*)>\nGetGpuCastFromBool(DataType dst_dtype) {\n  CURRY_TYPES3(CAST_CASE, GPUDevice, bool);\n  return nullptr;\n}\n#endif  // GOOGLE_CUDA\n\n#ifdef TENSORFLOW_USE_SYCL\ntypedef Eigen::SyclDevice SYCLDevice;\nstd::function<void(OpKernelContext*, const Tensor&, Tensor*)>\nGetSyclCastFromBool(DataType dst_dtype) {\n  CURRY_TYPES3(CAST_CASE, SYCLDevice, bool);\n  return nullptr;\n}\n#endif // TENSORFLOW_USE_SYCL\n\n}  // namespace tensorflow\n\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ2016", "ĠThe", "ĠTensorFlow", "ĠAuth", "ors", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ċ", "Lic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "you", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "You", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ċ", "ĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ċ", "Unless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "d", "istributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "WITH", "OUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "See", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "limit", "ations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "================================================================", "==============", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "tensorflow", "/", "core", "/", "kernel", "s", "/", "cast", "_", "op", "_", "impl", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġtensor", "flow", "Ġ{", "Ċ", "Ċ", "typedef", "ĠEigen", "::", "ThreadPool", "Device", "ĠCPU", "Device", ";", "Ċ", "typedef", "ĠEigen", "::", "Gpu", "Device", "ĠGPU", "Device", ";", "Ċ", "Ċ", "std", "::", "function", "<", "void", "(", "Op", "Kernel", "Context", "*,", "Ġconst", "ĠTensor", "&,", "ĠTensor", "*)", ">", "Ċ", "Get", "Cpu", "Cast", "From", "Bool", "(", "DataType", "Ġdst", "_", "dtype", ")", "Ġ{", "Ċ", "Ġ", "ĠCUR", "RY", "_", "TYPES", "3", "(", "CAST", "_", "CASE", ",", "ĠCPU", "Device", ",", "Ġbool", ");", "Ċ", "Ġ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "Ċ", "#", "if", "ĠGO", "OG", "LE", "_", "CUDA", "Ċ", "std", "::", "function", "<", "void", "(", "Op", "Kernel", "Context", "*,", "Ġconst", "ĠTensor", "&,", "ĠTensor", "*)", ">", "Ċ", "Get", "Gpu", "Cast", "From", "Bool", "(", "DataType", "Ġdst", "_", "dtype", ")", "Ġ{", "Ċ", "Ġ", "ĠCUR", "RY", "_", "TYPES", "3", "(", "CAST", "_", "CASE", ",", "ĠGPU", "Device", ",", "Ġbool", ");", "Ċ", "Ġ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠGO", "OG", "LE", "_", "CUDA", "Ċ", "Ċ", "#", "ifdef", "ĠT", "EN", "SOR", "FLOW", "_", "USE", "_", "SY", "CL", "Ċ", "typedef", "ĠEigen", "::", "Sy", "cl", "Device", "ĠSY", "CL", "Device", ";", "Ċ", "std", "::", "function", "<", "void", "(", "Op", "Kernel", "Context", "*,", "Ġconst", "ĠTensor", "&,", "ĠTensor", "*)", ">", "Ċ", "Get", "Sy", "cl", "Cast", "From", "Bool", "(", "DataType", "Ġdst", "_", "dtype", ")", "Ġ{", "Ċ", "Ġ", "ĠCUR", "RY", "_", "TYPES", "3", "(", "CAST", "_", "CASE", ",", "ĠSY", "CL", "Device", ",", "Ġbool", ");", "Ċ", "Ġ", "Ġreturn", "Ġnullptr", ";", "Ċ", "}", "Ċ", "#", "endif", "Ġ//", "ĠT", "EN", "SOR", "FLOW", "_", "USE", "_", "SY", "CL", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġtensor", "flow", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::610", "code": "/*\n * Copyright (c) 2014 Hugh Bailey <obs.jim@gmail.com>\n *\n * Permission to use, copy, modify, and distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n#pragma once\n\ntemplate<typename T> class CoTaskMemPtr {\n\tT *ptr;\n\n\tinline void Clear() {if (ptr) CoTaskMemFree(ptr);}\n\npublic:\n\tinline CoTaskMemPtr()        : ptr(NULL) {}\n\tinline CoTaskMemPtr(T *ptr_) : ptr(ptr_) {}\n\tinline ~CoTaskMemPtr()                   {Clear();}\n\n\tinline operator T*() const               {return ptr;}\n\tinline T *operator->() const             {return ptr;}\n\n\tinline CoTaskMemPtr& operator=(T* val)\n\t{\n\t\tClear();\n\t\tptr = val;\n\t}\n\n\tinline T** operator&()\n\t{\n\t\tClear();\n\t\tptr = NULL;\n\t\treturn &ptr;\n\t}\n};\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", "ĠH", "ugh", "ĠB", "a", "ile", "y", "Ġ<", "obs", ".", "j", "im", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠPermission", "Ġto", "Ġuse", ",", "Ġcopy", ",", "Ġmodify", ",", "Ġand", "Ġdistribute", "Ġthis", "Ġsoftware", "Ġfor", "Ġany", "Ċ", "Ġ*", "Ġpurpose", "Ġwith", "Ġor", "Ġwithout", "Ġfee", "Ġis", "Ġhere", "by", "Ġgranted", ",", "Ġprovided", "Ġthat", "Ġthe", "Ġabove", "Ċ", "Ġ*", "Ġcopyright", "Ġnotice", "Ġand", "Ġthis", "Ġpermission", "Ġnotice", "Ġappear", "Ġin", "Ġall", "Ġcopies", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠTHE", "ĠSOFTWARE", "ĠIS", "ĠPRO", "VID", "ED", "Ġ\"", "AS", "ĠIS", "\"", "ĠAND", "ĠTHE", "ĠAUT", "HOR", "ĠDIS", "CLA", "I", "MS", "ĠALL", "ĠWARRANTIES", "Ċ", "Ġ*", "ĠWITH", "ĠREG", "ARD", "ĠTO", "ĠTHIS", "ĠSOFTWARE", "ĠIN", "CL", "UDING", "ĠALL", "ĠIMP", "LIED", "ĠWARRANTIES", "ĠOF", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "ĠAND", "ĠF", "ITNESS", ".", "ĠIN", "ĠNO", "ĠEVENT", "ĠSH", "ALL", "ĠTHE", "ĠAUT", "HOR", "ĠBE", "ĠLI", "ABLE", "ĠFOR", "Ċ", "Ġ*", "ĠANY", "ĠSPE", "CIAL", ",", "ĠDIRECT", ",", "ĠIND", "I", "RECT", ",", "ĠOR", "ĠCON", "SE", "QU", "ENTIAL", "ĠDA", "MAGE", "S", "ĠOR", "ĠANY", "ĠDA", "MAGE", "S", "Ċ", "Ġ*", "ĠWH", "AT", "SO", "E", "VER", "ĠRESULT", "ING", "ĠFROM", "ĠLO", "SS", "ĠOF", "ĠUSE", ",", "ĠDATA", "ĠOR", "ĠPRO", "F", "ITS", ",", "ĠW", "HE", "THER", "ĠIN", "ĠAN", "Ċ", "Ġ*", "ĠACTION", "ĠOF", "ĠCON", "TRACT", ",", "ĠNE", "GL", "IG", "ENCE", "ĠOR", "ĠOTHER", "ĠT", "ORT", "IOUS", "ĠACTION", ",", "ĠAR", "IS", "ING", "ĠOUT", "ĠOF", "Ċ", "Ġ*", "ĠOR", "ĠIN", "ĠCONNECTION", "ĠWITH", "ĠTHE", "ĠUSE", "ĠOR", "ĠPER", "FOR", "MAN", "CE", "ĠOF", "ĠTHIS", "ĠSOFTWARE", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "Ġclass", "ĠCo", "Task", "Mem", "Ptr", "Ġ{", "Ċ", "ĉ", "T", "Ġ*", "ptr", ";", "Ċ", "Ċ", "ĉ", "inline", "Ġvoid", "ĠClear", "()", "Ġ{", "if", "Ġ(", "ptr", ")", "ĠCo", "Task", "Mem", "Free", "(", "ptr", ");}", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "inline", "ĠCo", "Task", "Mem", "Ptr", "()", "ĠĠĠĠĠĠĠ", "Ġ:", "Ġptr", "(", "NULL", ")", "Ġ{}", "Ċ", "ĉ", "inline", "ĠCo", "Task", "Mem", "Ptr", "(", "T", "Ġ*", "ptr", "_)", "Ġ:", "Ġptr", "(", "ptr", "_)", "Ġ{}", "Ċ", "ĉ", "inline", "Ġ~", "Co", "Task", "Mem", "Ptr", "()", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Clear", "();}", "Ċ", "Ċ", "ĉ", "inline", "Ġoperator", "ĠT", "*", "()", "Ġconst", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "return", "Ġptr", ";}", "Ċ", "ĉ", "inline", "ĠT", "Ġ*", "operator", "->", "()", "Ġconst", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "return", "Ġptr", ";}", "Ċ", "Ċ", "ĉ", "inline", "ĠCo", "Task", "Mem", "Ptr", "&", "Ġoperator", "=(", "T", "*", "Ġval", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Clear", "();", "Ċ", "ĉ", "ĉ", "ptr", "Ġ=", "Ġval", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "inline", "ĠT", "**", "Ġoperator", "&", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Clear", "();", "Ċ", "ĉ", "ĉ", "ptr", "Ġ=", "ĠNULL", ";", "Ċ", "ĉ", "ĉ", "return", "Ġ&", "ptr", ";", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::611", "code": "//=======================================================================\n// Copyright 2001 Jeremy G. Siek, Andrew Lumsdaine, Lie-Quan Lee, \n//\n// Distributed under the Boost Software License, Version 1.0. (See\n// accompanying file LICENSE_1_0.txt or copy at\n// http://www.boost.org/LICENSE_1_0.txt)\n//=======================================================================\n#include <boost/config.hpp>\n#include <fstream>\n#include <vector>\n#include <string>\n#include <boost/graph/connected_components.hpp>\n#include <boost/graph/graphviz.hpp>\n\nint\nmain()\n{\n  using namespace boost;\n  GraphvizGraph g;\n  read_graphviz(\"figs/cc-internet.dot\", g);\n\n  std::vector<int> component(num_vertices(g));\n\n  connected_components\n    (g, make_iterator_property_map(component.begin(),\n                                   get(vertex_index, g), component[0]));\n\n  property_map < GraphvizGraph, vertex_attribute_t >::type\n    vertex_attr_map = get(vertex_attribute, g);\n  std::string color[] = {\n  \"white\", \"gray\", \"black\", \"lightgray\"};\n  graph_traits < GraphvizGraph >::vertex_iterator vi, vi_end;\n  for (boost::tie(vi, vi_end) = vertices(g); vi != vi_end; ++vi) {\n    vertex_attr_map[*vi][\"color\"] = color[component[*vi]];\n    vertex_attr_map[*vi][\"style\"] = \"filled\";\n    if (vertex_attr_map[*vi][\"color\"] == \"black\")\n      vertex_attr_map[*vi][\"fontcolor\"] = \"white\";\n  }\n  write_graphviz(\"figs/cc-internet-out.dot\", g);\n\n}\n", "code_tokens": ["Ġ//", "================================================================", "=======", "Ċ", "//", "ĠCopyright", "Ġ200", "1", "ĠJ", "ere", "my", "ĠG", ".", "ĠS", "ie", "k", ",", "ĠAnd", "rew", "ĠL", "um", "sda", "ine", ",", "ĠL", "ie", "-", "Qu", "an", "ĠL", "ee", ",", "Ġ", "Ċ", "//", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ċ", "//", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "//", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//================================================================", "=======", "Ċ", "#", "include", "Ġ<", "boost", "/", "config", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "graph", "/", "connected", "_", "components", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "graph", "/", "graph", "viz", ".", "hpp", ">", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġboost", ";", "Ċ", "Ġ", "ĠGraph", "viz", "Graph", "Ġg", ";", "Ċ", "Ġ", "Ġread", "_", "graph", "viz", "(\"", "fig", "s", "/", "cc", "-", "internet", ".", "dot", "\",", "Ġg", ");", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġcomponent", "(", "num", "_", "vertices", "(", "g", "));", "Ċ", "Ċ", "Ġ", "Ġconnected", "_", "components", "Ċ", "ĠĠĠ", "Ġ(", "g", ",", "Ġmake", "_", "iterator", "_", "property", "_", "map", "(", "component", ".", "begin", "(),", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġget", "(", "vertex", "_", "index", ",", "Ġg", "),", "Ġcomponent", "[", "0", "]));", "Ċ", "Ċ", "Ġ", "Ġproperty", "_", "map", "Ġ<", "ĠGraph", "viz", "Graph", ",", "Ġvertex", "_", "attribute", "_", "t", "Ġ>::", "type", "Ċ", "ĠĠĠ", "Ġvertex", "_", "attr", "_", "map", "Ġ=", "Ġget", "(", "vertex", "_", "attribute", ",", "Ġg", ");", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġcolor", "[]", "Ġ=", "Ġ{", "Ċ", "Ġ", "Ġ\"", "white", "\",", "Ġ\"", "gray", "\",", "Ġ\"", "black", "\",", "Ġ\"", "light", "gray", "\"};", "Ċ", "Ġ", "Ġgraph", "_", "traits", "Ġ<", "ĠGraph", "viz", "Graph", "Ġ>::", "vertex", "_", "iterator", "Ġvi", ",", "Ġvi", "_", "end", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "boost", "::", "tie", "(", "vi", ",", "Ġvi", "_", "end", ")", "Ġ=", "Ġvertices", "(", "g", ");", "Ġvi", "Ġ!=", "Ġvi", "_", "end", ";", "Ġ++", "vi", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġvertex", "_", "attr", "_", "map", "[*", "vi", "][\"", "color", "\"]", "Ġ=", "Ġcolor", "[", "component", "[*", "vi", "]];", "Ċ", "ĠĠĠ", "Ġvertex", "_", "attr", "_", "map", "[*", "vi", "][\"", "style", "\"]", "Ġ=", "Ġ\"", "filled", "\";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "vertex", "_", "attr", "_", "map", "[*", "vi", "][\"", "color", "\"]", "Ġ==", "Ġ\"", "black", "\")", "Ċ", "ĠĠĠĠĠ", "Ġvertex", "_", "attr", "_", "map", "[*", "vi", "][\"", "font", "color", "\"]", "Ġ=", "Ġ\"", "white", "\";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġwrite", "_", "graph", "viz", "(\"", "fig", "s", "/", "cc", "-", "internet", "-", "out", ".", "dot", "\",", "Ġg", ");", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::612", "code": "// Copyright (c) 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"base/bind.h\"\n#include \"base/test/launcher/unit_test_launcher.h\"\n#include \"cc/test/cc_test_suite.h\"\n\nint main(int argc, char** argv) {\n  cc::CCTestSuite test_suite(argc, argv);\n\n  return base::LaunchUnitTests(\n      argc,\n      argv,\n      base::Bind(&cc::CCTestSuite::Run, base::Unretained(&test_suite)));\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2012", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "bind", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "test", "/", "launcher", "/", "unit", "_", "test", "_", "launcher", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "cc", "/", "test", "/", "cc", "_", "test", "_", "suite", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "Ġ", "Ġcc", "::", "CCT", "est", "Suite", "Ġtest", "_", "suite", "(", "argc", ",", "Ġargv", ");", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġbase", "::", "Launch", "Unit", "Tests", "(", "Ċ", "ĠĠĠĠĠ", "Ġargc", ",", "Ċ", "ĠĠĠĠĠ", "Ġargv", ",", "Ċ", "ĠĠĠĠĠ", "Ġbase", "::", "Bind", "(&", "cc", "::", "CCT", "est", "Suite", "::", "Run", ",", "Ġbase", "::", "Un", "ret", "ained", "(&", "test", "_", "suite", ")));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::613", "code": "/*\n *  Copyright (C) 1999-2000 Harri Porten (porten@kde.org)\n *  Copyright (C) 2003, 2008 Apple Inc. All rights reserved.\n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n *\n */\n\n#include \"config.h\"\n#include \"BooleanObject.h\"\n\n#include \"JSScope.h\"\n#include \"Operations.h\"\n\nnamespace JSC {\n\nASSERT_HAS_TRIVIAL_DESTRUCTOR(BooleanObject);\n\nconst ClassInfo BooleanObject::s_info = { \"Boolean\", &JSWrapperObject::s_info, 0, 0, CREATE_METHOD_TABLE(BooleanObject) };\n\nBooleanObject::BooleanObject(VM& vm, Structure* structure)\n    : JSWrapperObject(vm, structure)\n{\n}\n\nvoid BooleanObject::finishCreation(VM& vm)\n{\n    Base::finishCreation(vm);\n    ASSERT(inherits(&s_info));\n}\n\n} // namespace JSC\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ1", "999", "-", "2000", "ĠH", "ar", "ri", "ĠPort", "en", "Ġ(", "port", "en", "@", "k", "de", ".", "org", ")", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", ",", "Ġ2008", "ĠApple", "ĠInc", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "Ġ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ*", "Ġ", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ*", "Ġ", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "Ġ", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", "Ġ", "ĠUSA", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "config", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Boolean", "Object", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "J", "SS", "cope", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Operations", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠJ", "SC", "Ġ{", "Ċ", "Ċ", "ASSERT", "_", "HAS", "_", "TR", "IV", "IAL", "_", "DE", "STR", "UCTOR", "(", "Boolean", "Object", ");", "Ċ", "Ċ", "const", "ĠClass", "Info", "ĠBoolean", "Object", "::", "s", "_", "info", "Ġ=", "Ġ{", "Ġ\"", "Boolean", "\",", "Ġ&", "JS", "Wrapper", "Object", "::", "s", "_", "info", ",", "Ġ0", ",", "Ġ0", ",", "ĠCREATE", "_", "METHOD", "_", "TABLE", "(", "Boolean", "Object", ")", "Ġ};", "Ċ", "Ċ", "Boolean", "Object", "::", "Boolean", "Object", "(", "VM", "&", "Ġvm", ",", "ĠStructure", "*", "Ġstructure", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠJS", "Wrapper", "Object", "(", "vm", ",", "Ġstructure", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBoolean", "Object", "::", "finish", "Creation", "(", "VM", "&", "Ġvm", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠBase", "::", "finish", "Creation", "(", "vm", ");", "Ċ", "ĠĠĠ", "ĠASSERT", "(", "inherits", "(&", "s", "_", "info", "));", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠJ", "SC", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::614", "code": "/*\n * This file is part of BlottleshipsServer.\n * BlottleshipsServer is licenced under MIT License. See LICENSE for more details.\n */\n\n/** @file manager.cpp Definitons of the game manager. */\n\n#include <iostream>\n\n#include \"manager.h\"\n#include \"player.h\"\n\n/**\n * Constructor.\n * @param io_service Socket to listen to new connections on.\n * @param port Network port to listen on.\n */\nManager::Manager(io_service& io_service, short port)\n\t: acceptor(io_service, ip::tcp::endpoint(ip::tcp::v4(), port)),\n\t  socket(io_service)\n{\n\tthis->DoAccept();\n}\n\n/**\n * Disconnects a player, and removes them from the list.\n * @param player Player to remove.\n */\nvoid Manager::DisconnectPlayer(std::shared_ptr<Player> player)\n{\n\tauto it = std::find(this->connections.begin(), this->connections.end(), player);\n\tassert(it != this->connections.end());\n\tthis->connections.erase(it);\n}\n\n/** Accept an incoming connection */\nvoid Manager::DoAccept()\n{\n\tthis->acceptor.async_accept(this->socket,\n\t\t[this](boost::system::error_code ec)\n\t\t{\n\t\t\tif (!ec) {\n\t\t\t\tauto player = std::make_shared<Player>(std::move(this->socket), *this);\n\t\t\t\tplayer->StartRead();\n\t\t\t\tthis->connections.push_back(std::move(player));\n\t\t\t\tstd::cout << \"New client connected\" << std::endl;\n\t\t\t\tthis->DoAccept();\n\t\t\t}\n\t\t});\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠB", "lot", "tle", "ships", "Server", ".", "Ċ", "Ġ*", "ĠB", "lot", "tle", "ships", "Server", "Ġis", "Ġlic", "ence", "d", "Ġunder", "ĠMIT", "ĠLicense", ".", "ĠSee", "ĠLICENSE", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "/**", "Ġ@", "file", "Ġmanager", ".", "cpp", "ĠDef", "init", "ons", "Ġof", "Ġthe", "Ġgame", "Ġmanager", ".", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "manager", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "player", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠConstructor", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġio", "_", "service", "ĠSocket", "Ġto", "Ġlisten", "Ġto", "Ġnew", "Ġconnections", "Ġon", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġport", "ĠNetwork", "Ġport", "Ġto", "Ġlisten", "Ġon", ".", "Ċ", "Ġ*/", "Ċ", "Manager", "::", "Manager", "(", "io", "_", "service", "&", "Ġio", "_", "service", ",", "Ġshort", "Ġport", ")", "Ċ", "ĉ", ":", "Ġaccept", "or", "(", "io", "_", "service", ",", "Ġip", "::", "tcp", "::", "endpoint", "(", "ip", "::", "tcp", "::", "v", "4", "(),", "Ġport", ")),", "Ċ", "ĉĠ", "Ġsocket", "(", "io", "_", "service", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "Do", "Accept", "();", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠDisconnect", "s", "Ġa", "Ġplayer", ",", "Ġand", "Ġremoves", "Ġthem", "Ġfrom", "Ġthe", "Ġlist", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġplayer", "ĠPlayer", "Ġto", "Ġremove", ".", "Ċ", "Ġ*/", "Ċ", "void", "ĠManager", "::", "Disconnect", "Player", "(", "std", "::", "shared", "_", "ptr", "<", "Player", ">", "Ġplayer", ")", "Ċ", "{", "Ċ", "ĉ", "auto", "Ġit", "Ġ=", "Ġstd", "::", "find", "(", "this", "->", "connections", ".", "begin", "(),", "Ġthis", "->", "connections", ".", "end", "(),", "Ġplayer", ");", "Ċ", "ĉ", "assert", "(", "it", "Ġ!=", "Ġthis", "->", "connections", ".", "end", "());", "Ċ", "ĉ", "this", "->", "connections", ".", "erase", "(", "it", ");", "Ċ", "}", "Ċ", "Ċ", "/**", "ĠAccept", "Ġan", "Ġincoming", "Ġconnection", "Ġ*/", "Ċ", "void", "ĠManager", "::", "Do", "Accept", "()", "Ċ", "{", "Ċ", "ĉ", "this", "->", "accept", "or", ".", "async", "_", "accept", "(", "this", "->", "socket", ",", "Ċ", "ĉ", "ĉ", "[", "this", "](", "boost", "::", "system", "::", "error", "_", "code", "Ġec", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "if", "Ġ(!", "ec", ")", "Ġ{", "Ċ", "ĉĉĉ", "ĉ", "auto", "Ġplayer", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "Player", ">(", "std", "::", "move", "(", "this", "->", "socket", "),", "Ġ*", "this", ");", "Ċ", "ĉĉĉ", "ĉ", "player", "->", "Start", "Read", "();", "Ċ", "ĉĉĉ", "ĉ", "this", "->", "connections", ".", "push", "_", "back", "(", "std", "::", "move", "(", "player", "));", "Ċ", "ĉĉĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "New", "Ġclient", "Ġconnected", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉĉĉ", "ĉ", "this", "->", "Do", "Accept", "();", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "});", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::615", "code": "#include <iostream>\n\nint main () \n{\n    const float r1= 3.5, r2 = 7.3, pi = 3.14159;\n\n    float area1 = pi * r1*r1;\n    std::cout << \"A circle of radius \" << r1 << \" has area \" \n\t      << area1 << \".\" << std::endl;\n\n    std::cout << \"The average of \" << r1 << \" and \" << r2 << \" is \" \n\t      << (r1 + r2) / 2 << \".\" << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġconst", "Ġfloat", "Ġr", "1", "=", "Ġ3", ".", "5", ",", "Ġr", "2", "Ġ=", "Ġ7", ".", "3", ",", "Ġpi", "Ġ=", "Ġ3", ".", "14", "159", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġfloat", "Ġarea", "1", "Ġ=", "Ġpi", "Ġ*", "Ġr", "1", "*", "r", "1", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "A", "Ġcircle", "Ġof", "Ġradius", "Ġ\"", "Ġ<<", "Ġr", "1", "Ġ<<", "Ġ\"", "Ġhas", "Ġarea", "Ġ\"", "ĠĊ", "ĉĠĠĠĠĠ", "Ġ<<", "Ġarea", "1", "Ġ<<", "Ġ\".\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "The", "Ġaverage", "Ġof", "Ġ\"", "Ġ<<", "Ġr", "1", "Ġ<<", "Ġ\"", "Ġand", "Ġ\"", "Ġ<<", "Ġr", "2", "Ġ<<", "Ġ\"", "Ġis", "Ġ\"", "ĠĊ", "ĉĠĠĠĠĠ", "Ġ<<", "Ġ(", "r", "1", "Ġ+", "Ġr", "2", ")", "Ġ/", "Ġ2", "Ġ<<", "Ġ\".\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::616", "code": "#include \"IRRemoteBenq.h\"\n\nIRRemoteBenq::IRRemoteBenq(int irPin) : IRRemote(irPin){\n  setup(38, 32, 9000, 4500, 600, 1600, 520);\n}\n\nvoid IRRemoteBenq::SendCommand(String command) { \n  if(command == \"ON\")\n    send(ON);\n  if(command == \"OFF\")\n    send(OFF);\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "IR", "Remote", "B", "en", "q", ".", "h", "\"", "Ċ", "Ċ", "IR", "Remote", "B", "en", "q", "::", "IR", "Remote", "B", "en", "q", "(", "int", "Ġir", "Pin", ")", "Ġ:", "ĠIR", "Remote", "(", "ir", "Pin", "){", "Ċ", "Ġ", "Ġsetup", "(", "38", ",", "Ġ32", ",", "Ġ9", "000", ",", "Ġ4", "500", ",", "Ġ600", ",", "Ġ16", "00", ",", "Ġ5", "20", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠIR", "Remote", "B", "en", "q", "::", "Send", "Command", "(", "String", "Ġcommand", ")", "Ġ{", "ĠĊ", "Ġ", "Ġif", "(", "command", "Ġ==", "Ġ\"", "ON", "\")", "Ċ", "ĠĠĠ", "Ġsend", "(", "ON", ");", "Ċ", "Ġ", "Ġif", "(", "command", "Ġ==", "Ġ\"", "OFF", "\")", "Ċ", "ĠĠĠ", "Ġsend", "(", "OFF", ");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::617", "code": "int main() {\r\n\tint n = 5;\r\n\tTower towers[n];\r\n\tfor (int i = n - 1; i >= 0; -- i) {\r\n\t\ttowers[0].add(i);\r\n\t}\r\n\ttowers[0].moveDisks(n, towers[2], towers[1]);\r\n}\r\nclass Tower {\r\npublic:\r\n\tTower(int i) {\r\n\t\tindex = i;\r\n\t}\r\n\tint index() {\r\n\t\treturn index;\r\n\t}\r\n\tvoid add(int d) {\r\n\t\tif (! disks.empty() && disks.peek() <= d) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisks.push(d);\r\n\t\t}\r\n\t}\r\n\tvoid moveTopTo(Tower t) {\r\n\t\tint top = disks.pop();\r\n\t\tt.add(top);\r\n\t}\r\nprivate:\r\n\tstack<int> disks;\r\n\tint index;\r\n};", "code_tokens": ["Ġint", "Ġmain", "()", "Ġ{", "č", "Ċ", "ĉ", "int", "Ġn", "Ġ=", "Ġ5", ";", "č", "Ċ", "ĉ", "Tower", "Ġto", "wers", "[", "n", "];", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġn", "Ġ-", "Ġ1", ";", "Ġi", "Ġ>=", "Ġ0", ";", "Ġ--", "Ġi", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "tow", "ers", "[", "0", "].", "add", "(", "i", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "tow", "ers", "[", "0", "].", "move", "Disks", "(", "n", ",", "Ġto", "wers", "[", "2", "],", "Ġto", "wers", "[", "1", "]);", "č", "Ċ", "}", "č", "Ċ", "class", "ĠT", "ower", "Ġ{", "č", "Ċ", "public", ":", "č", "Ċ", "ĉ", "Tower", "(", "int", "Ġi", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "index", "Ġ=", "Ġi", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "int", "Ġindex", "()", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "return", "Ġindex", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "void", "Ġadd", "(", "int", "Ġd", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(!", "Ġdisks", ".", "empty", "()", "Ġ&&", "Ġdisks", ".", "peek", "()", "Ġ<=", "Ġd", ")", "Ġ{", "č", "Ċ", "ĉĉ", "ĉ", "return", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "else", "Ġ{", "č", "Ċ", "ĉĉ", "ĉ", "disks", ".", "push", "(", "d", ");", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "void", "Ġmove", "Top", "To", "(", "Tower", "Ġt", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "int", "Ġtop", "Ġ=", "Ġdisks", ".", "pop", "();", "č", "Ċ", "ĉ", "ĉ", "t", ".", "add", "(", "top", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "private", ":", "č", "Ċ", "ĉ", "stack", "<", "int", ">", "Ġdisks", ";", "č", "Ċ", "ĉ", "int", "Ġindex", ";", "č", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::618", "code": "#include \"uartserver.h\"\n\nvoid UARTserver::begin(unsigned long int baudrate) {\n    Serial.begin(baudrate);\n    while(Serial.available());\n        Serial.read();\n}\n\n#define CMD_SIZE 10\n\nchar *UARTserver::getCmd(void) {\n    int c;\n    int static index;\n    char static cmd[CMD_SIZE+1];\n\n    if ((c = Serial.read()) != -1) {\n        if (index && ((char) c == '\\r')) {\n            cmd[index] = '\\0';\n            index = 0;\n            return cmd;\n        }\n        else {\n            if (index < CMD_SIZE)\n                cmd[index++] = (char) c;\n            return 0;\n        }\n    }\n    return 0;\n}\n\nvoid UARTserver::sendMsg(const char *msg) {\n    Serial.println(msg);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "uart", "server", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠUART", "server", "::", "begin", "(", "unsigned", "Ġlong", "Ġint", "Ġbaud", "rate", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠSerial", ".", "begin", "(", "baud", "rate", ");", "Ċ", "ĠĠĠ", "Ġwhile", "(", "Serial", ".", "available", "());", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSerial", ".", "read", "();", "Ċ", "}", "Ċ", "Ċ", "#", "define", "ĠCMD", "_", "SIZE", "Ġ10", "Ċ", "Ċ", "char", "Ġ*", "UART", "server", "::", "get", "Cmd", "(", "void", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġc", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġstatic", "Ġindex", ";", "Ċ", "ĠĠĠ", "Ġchar", "Ġstatic", "Ġcmd", "[", "CMD", "_", "SIZE", "+", "1", "];", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ((", "c", "Ġ=", "ĠSerial", ".", "read", "())", "Ġ!=", "Ġ-", "1", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "index", "Ġ&&", "Ġ((", "char", ")", "Ġc", "Ġ==", "Ġ'\\", "r", "'))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcmd", "[", "index", "]", "Ġ=", "Ġ'\\", "0", "';", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġindex", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġcmd", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "index", "Ġ<", "ĠCMD", "_", "SIZE", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcmd", "[", "index", "++]", "Ġ=", "Ġ(", "char", ")", "Ġc", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠUART", "server", "::", "send", "Msg", "(", "const", "Ġchar", "Ġ*", "msg", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠSerial", ".", "println", "(", "msg", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::619", "code": "#include <iostream>\nusing namespace std;\n\nint gcd(int num1,int num2);\n\nint main()\n{\nint x=40;\nint y =150;\nint result =gcd(x,y);\ncout << \"the gcd of \" << x << \" and \" << y<<\" is \"<< result;\n\n}\n\nint gcd(int num1, int num2)\n{\n\tint m,i;\n\tif(num1>num2)\n\t{\n\t   m=num2;\n\t}\n\telse\n\t{\n\t   m=num1;\n\t}\n\n\tfor(i=m;i>=1;i--)\n\t{\n\t    if(num1%i==0 && num2%i==0)\n\t\t{\n\t\t\tm=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn m;\n\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġgcd", "(", "int", "Ġnum", "1", ",", "int", "Ġnum", "2", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "int", "Ġx", "=", "40", ";", "Ċ", "int", "Ġy", "Ġ=", "150", ";", "Ċ", "int", "Ġresult", "Ġ=", "gcd", "(", "x", ",", "y", ");", "Ċ", "cout", "Ġ<<", "Ġ\"", "the", "Ġgcd", "Ġof", "Ġ\"", "Ġ<<", "Ġx", "Ġ<<", "Ġ\"", "Ġand", "Ġ\"", "Ġ<<", "Ġy", "<<\"", "Ġis", "Ġ\"<<", "Ġresult", ";", "Ċ", "Ċ", "}", "Ċ", "Ċ", "int", "Ġgcd", "(", "int", "Ġnum", "1", ",", "Ġint", "Ġnum", "2", ")", "Ċ", "{", "Ċ", "ĉ", "int", "Ġm", ",", "i", ";", "Ċ", "ĉ", "if", "(", "num", "1", ">", "num", "2", ")", "Ċ", "ĉ", "{", "Ċ", "ĉĠĠ", "Ġm", "=", "num", "2", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ċ", "ĉ", "{", "Ċ", "ĉĠĠ", "Ġm", "=", "num", "1", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "for", "(", "i", "=", "m", ";", "i", ">=", "1", ";", "i", "--)", "Ċ", "ĉ", "{", "Ċ", "ĉĠĠĠ", "Ġif", "(", "num", "1", "%", "i", "==", "0", "Ġ&&", "Ġnum", "2", "%", "i", "==", "0", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "m", "=", "i", ";", "Ċ", "ĉĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġm", ";", "Ċ", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::620", "code": "#include \"gecko.hpp\"\n#include <string>\n#include <thread>\n#include <iostream>\n#include \"time.h\"\n\nusing namespace std;\n\n\nvoid pubt(void){\n    gecko::init();\n\n    Rate rate(2);\n\n    Publisher *p = gecko::advertise(\"bob\");\n\n    while(gecko::ok()){\n        zmq::message_t msg(\"hello\",5);\n        cout << msg << endl;\n        p->pub(msg);\n        rate.sleep();\n    }\n\n    delete p;\n}\n\n\nvoid callback(zmq::message_t& m){\n    cout << m << endl;\n}\n\nvoid subt(void){\n    gecko::init();\n    // gecko::subscribe(\"bob\", callback);\n    // gecko::spin();\n}\n\nint main(int argc, char* argv[]){\n    thread t1(pubt);\n    thread t2(subt);\n\n    t1.join();\n    t2.join();\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ge", "cko", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ\"", "time", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "void", "Ġpub", "t", "(", "void", "){", "Ċ", "ĠĠĠ", "Ġge", "cko", "::", "init", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠRate", "Ġrate", "(", "2", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠPublish", "er", "Ġ*", "p", "Ġ=", "Ġge", "cko", "::", "advertise", "(\"", "bob", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "(", "ge", "cko", "::", "ok", "()){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġzmq", "::", "message", "_", "t", "Ġmsg", "(\"", "hello", "\",", "5", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġmsg", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġp", "->", "pub", "(", "msg", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġrate", ".", "sleep", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġdelete", "Ġp", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "void", "Ġcallback", "(", "z", "mq", "::", "message", "_", "t", "&", "Ġm", "){", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġm", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsub", "t", "(", "void", "){", "Ċ", "ĠĠĠ", "Ġge", "cko", "::", "init", "();", "Ċ", "ĠĠĠ", "Ġ//", "Ġge", "cko", "::", "subscribe", "(\"", "bob", "\",", "Ġcallback", ");", "Ċ", "ĠĠĠ", "Ġ//", "Ġge", "cko", "::", "spin", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[]", "){", "Ċ", "ĠĠĠ", "Ġthread", "Ġt", "1", "(", "pub", "t", ");", "Ċ", "ĠĠĠ", "Ġthread", "Ġt", "2", "(", "sub", "t", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġt", "1", ".", "join", "();", "Ċ", "ĠĠĠ", "Ġt", "2", ".", "join", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::621", "code": "/*\n * Copyright 2017 Rowun Giles - http://github.com/rowungiles\n */\n\n#ifndef helpers\n#define helpers\n\n#include <string>\n#include <vector>\n\nnamespace HeckelDiffHelpers {\n\n    static auto components_seperated_by_delimiter(const std::string string, const char delimiter) {\n\n        uint32_t i = 0;\n\n        std::string tmp;\n        std::vector<std::string> s;\n\n        for (const auto &character : string) {\n\n            if (character != delimiter) {\n                tmp.insert(i, 1, character);\n                i += 1;\n            } else {\n                s.push_back(tmp);\n                tmp = \"\";\n                i = 0;\n            }\n        }\n\n        s.push_back(tmp);\n\n        return s;\n    }\n\n#endif //helpers\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2017", "ĠRow", "un", "ĠG", "iles", "Ġ-", "Ġhttp", "://", "github", ".", "com", "/", "row", "ung", "iles", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "Ġhelpers", "Ċ", "#", "define", "Ġhelpers", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "namespace", "ĠHe", "ck", "el", "Diff", "Helpers", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġstatic", "Ġauto", "Ġcomponents", "_", "se", "per", "ated", "_", "by", "_", "delimiter", "(", "const", "Ġstd", "::", "string", "Ġstring", ",", "Ġconst", "Ġchar", "Ġdelimiter", ")", "Ġ{", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġuint", "32", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "string", "Ġtmp", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġs", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "const", "Ġauto", "Ġ&", "character", "Ġ:", "Ġstring", ")", "Ġ{", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "character", "Ġ!=", "Ġdelimiter", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġtmp", ".", "insert", "(", "i", ",", "Ġ1", ",", "Ġcharacter", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġi", "Ġ+=", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġs", ".", "push", "_", "back", "(", "tmp", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġtmp", "Ġ=", "Ġ\"\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġs", ".", "push", "_", "back", "(", "tmp", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġs", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "#", "endif", "Ġ//", "helpers", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::622", "code": "#include <iterator>\n\n#include \"pipe/algorithm.h\"\n#include \"pipe/generator.h\"\n\n#include \"pintest.hpp\"\n\nusing namespace pipe::algorithm;\nusing namespace pipe::generator;\n\nTEST_GROUP(collect_test)\n{\n    TEST(collect_no_items)\n    {\n        std::vector<int> out {};\n        count<int>() | take_n(0) | collect(std::back_inserter(out));\n\n        test::assert::is_true(out.empty());\n    }\n\n    TEST(collect_multiple_items)\n    {\n        std::vector<int> out { };\n        count<int>() | take_n(5) | collect(std::back_inserter(out));\n\n        test::assert::equals(5, out.size());\n    }\n};", "code_tokens": ["Ġ#", "include", "Ġ<", "iterator", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "pipe", "/", "algorithm", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "pipe", "/", "generator", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "pin", "test", ".", "hpp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġpipe", "::", "algorithm", ";", "Ċ", "using", "Ġnamespace", "Ġpipe", "::", "generator", ";", "Ċ", "Ċ", "TEST", "_", "GROUP", "(", "collect", "_", "test", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠTEST", "(", "collect", "_", "no", "_", "items", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "vector", "<", "int", ">", "Ġout", "Ġ{};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcount", "<", "int", ">()", "Ġ|", "Ġtake", "_", "n", "(", "0", ")", "Ġ|", "Ġcollect", "(", "std", "::", "back", "_", "insert", "er", "(", "out", "));", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtest", "::", "assert", "::", "is", "_", "true", "(", "out", ".", "empty", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠTEST", "(", "collect", "_", "multiple", "_", "items", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "vector", "<", "int", ">", "Ġout", "Ġ{", "Ġ};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcount", "<", "int", ">()", "Ġ|", "Ġtake", "_", "n", "(", "5", ")", "Ġ|", "Ġcollect", "(", "std", "::", "back", "_", "insert", "er", "(", "out", "));", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtest", "::", "assert", "::", "equals", "(", "5", ",", "Ġout", ".", "size", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::623", "code": "#include <gtest/gtest.h>\nusing namespace std;\n\ndouble myPow1(double x, int n)\n{\n\tdouble result = 1;\n\tbool sign = false;\n\tif (n < 0)\n\t{\n\t\tsign = true;\n\t\tn = -n;\n\t}\n\n\twhile(--n >= 0)\n\t{\n\t\tresult *= x;\n\t}\n\n\tif (sign)\n\t{\n\t\tresult = 1 / result;\n\t}\n\n\treturn result;\n}\n\ndouble myPow(double x, int n)\n{\n\tif (n==0)\n\t{\n\t\treturn 1;\n\t}\n\n\tif (n < 0)\n\t{\n\t\tx = 1/x;\n\t\tif (n == 0x80000000)\n\t\t{\n\t\t\tn = 0x7FFFFFFF;\n\t\t\tx *= x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tn = -n;\n\t\t}\n\t}\n\n\treturn (n % 2==0) ? myPow(x*x,n/2) : x* myPow(x*x,n/2);\n}\n\nTEST(LeetCode, tMyPow)\n{\n\tASSERT_DOUBLE_EQ(myPow(8.88023,3),700.281482945268167);\n\tASSERT_DOUBLE_EQ(myPow(34.00515,-3),0.00003);\n\t//ASSERT_DOUBLE_EQ(myPow(2.00000,-2147483648),0.00000);\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "double", "Ġmy", "Pow", "1", "(", "double", "Ġx", ",", "Ġint", "Ġn", ")", "Ċ", "{", "Ċ", "ĉ", "double", "Ġresult", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "bool", "Ġsign", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "if", "Ġ(", "n", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "sign", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "n", "Ġ=", "Ġ-", "n", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "while", "(--", "n", "Ġ>=", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "result", "Ġ*=", "Ġx", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "if", "Ġ(", "sign", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "result", "Ġ=", "Ġ1", "Ġ/", "Ġresult", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "double", "Ġmy", "Pow", "(", "double", "Ġx", ",", "Ġint", "Ġn", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "n", "==", "0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "if", "Ġ(", "n", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "x", "Ġ=", "Ġ1", "/", "x", ";", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "n", "Ġ==", "Ġ0", "x", "80000000", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "n", "Ġ=", "Ġ0", "x", "7", "FFFFFFF", ";", "Ċ", "ĉĉ", "ĉ", "x", "Ġ*=", "Ġx", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "n", "Ġ=", "Ġ-", "n", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġ(", "n", "Ġ%", "Ġ2", "==", "0", ")", "Ġ?", "Ġmy", "Pow", "(", "x", "*", "x", ",", "n", "/", "2", ")", "Ġ:", "Ġx", "*", "Ġmy", "Pow", "(", "x", "*", "x", ",", "n", "/", "2", ");", "Ċ", "}", "Ċ", "Ċ", "TEST", "(", "Le", "et", "Code", ",", "Ġt", "My", "Pow", ")", "Ċ", "{", "Ċ", "ĉ", "ASSERT", "_", "DOUBLE", "_", "EQ", "(", "my", "Pow", "(", "8", ".", "88", "023", ",", "3", "),", "700", ".", "28", "148", "29", "45", "268", "167", ");", "Ċ", "ĉ", "ASSERT", "_", "DOUBLE", "_", "EQ", "(", "my", "Pow", "(", "34", ".", "005", "15", ",-", "3", "),", "0", ".", "0000", "3", ");", "Ċ", "ĉ", "//", "ASSERT", "_", "DOUBLE", "_", "EQ", "(", "my", "Pow", "(", "2", ".", "00000", ",-", "214748364", "8", "),", "0", ".", "00000", ");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::624", "code": "#include \"length.h\"\r\n#include \"defaultunit.h\"\r\n#include <QReadWriteLock>\r\n#include <QReadLocker>\r\n\r\nnamespace dewalls {\r\n\r\nLength::Length()\r\n    : UnitType<Length>(\"length\")\r\n{\r\n    _meters = new DefaultUnit<Length>(\"m\", this, 1.0L, 1.0L);\r\n    _centimeters = new DefaultUnit<Length>(\"cm\", this, 0.001L, _meters);\r\n    _kilometers = new DefaultUnit<Length>(\"km\", this, 1000.0L, _meters);\r\n    _feet = new DefaultUnit<Length>(\"ft\", this, 0.3048L, _meters);\r\n    _yards = new DefaultUnit<Length>(\"yd\", this, 3.0L, _feet);\r\n    _inches = new DefaultUnit<Length>(\"in\", this, 1.0L / 12.0L, _feet);\r\n\r\n    addUnit(_meters);\r\n    addUnit(_centimeters);\r\n    addUnit(_kilometers);\r\n    addUnit(_feet);\r\n    addUnit(_yards);\r\n    addUnit(_inches);\r\n}\r\n\r\nQSharedPointer<Length> Length::_type = QSharedPointer<Length>();\r\n\r\nvoid Length::init()\r\n{\r\n    if (_type.isNull())\r\n    {\r\n        _type = QSharedPointer<Length>(new Length());\r\n    }\r\n}\r\n\r\n} // namespace dewalls\r\n\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "length", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "default", "unit", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "Q", "ReadWrite", "Lock", ">", "č", "Ċ", "#", "include", "Ġ<", "Q", "Read", "Locker", ">", "č", "Ċ", "č", "Ċ", "namespace", "Ġde", "wall", "s", "Ġ{", "č", "Ċ", "č", "Ċ", "Length", "::", "Length", "()", "č", "Ċ", "ĠĠĠ", "Ġ:", "ĠUnit", "Type", "<", "Length", ">(\"", "length", "\")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ_", "m", "eters", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">(\"", "m", "\",", "Ġthis", ",", "Ġ1", ".", "0", "L", ",", "Ġ1", ".", "0", "L", ");", "č", "Ċ", "ĠĠĠ", "Ġ_", "cent", "im", "eters", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">(\"", "cm", "\",", "Ġthis", ",", "Ġ0", ".", "001", "L", ",", "Ġ_", "m", "eters", ");", "č", "Ċ", "ĠĠĠ", "Ġ_", "ki", "lo", "m", "eters", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">(\"", "km", "\",", "Ġthis", ",", "Ġ1000", ".", "0", "L", ",", "Ġ_", "m", "eters", ");", "č", "Ċ", "ĠĠĠ", "Ġ_", "fe", "et", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">(\"", "ft", "\",", "Ġthis", ",", "Ġ0", ".", "304", "8", "L", ",", "Ġ_", "m", "eters", ");", "č", "Ċ", "ĠĠĠ", "Ġ_", "y", "ards", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">(\"", "yd", "\",", "Ġthis", ",", "Ġ3", ".", "0", "L", ",", "Ġ_", "fe", "et", ");", "č", "Ċ", "ĠĠĠ", "Ġ_", "in", "ches", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">(\"", "in", "\",", "Ġthis", ",", "Ġ1", ".", "0", "L", "Ġ/", "Ġ12", ".", "0", "L", ",", "Ġ_", "fe", "et", ");", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġadd", "Unit", "(_", "m", "eters", ");", "č", "Ċ", "ĠĠĠ", "Ġadd", "Unit", "(_", "cent", "im", "eters", ");", "č", "Ċ", "ĠĠĠ", "Ġadd", "Unit", "(_", "ki", "lo", "m", "eters", ");", "č", "Ċ", "ĠĠĠ", "Ġadd", "Unit", "(_", "fe", "et", ");", "č", "Ċ", "ĠĠĠ", "Ġadd", "Unit", "(_", "y", "ards", ");", "č", "Ċ", "ĠĠĠ", "Ġadd", "Unit", "(_", "in", "ches", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Q", "SharedPointer", "<", "Length", ">", "ĠLength", "::_", "type", "Ġ=", "ĠQ", "SharedPointer", "<", "Length", ">();", "č", "Ċ", "č", "Ċ", "void", "ĠLength", "::", "init", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġif", "Ġ(_", "type", ".", "isNull", "())", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "type", "Ġ=", "ĠQ", "SharedPointer", "<", "Length", ">(", "new", "ĠLength", "());", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġde", "wall", "s", "č", "Ċ", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::625", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n\n\nSTART_ATF_NAMESPACE\n    #pragma pack(push, 1)\n    struct  _PVPPOINT_LIMIT_DB_BASE\n    {\n        __int64 tUpdatedate;\n        bool bUseUp;\n        char byLimitRate;\n        long double dOriginalPoint;\n        long double dLimitPoint;\n        long double dUsePoint;\n    public:\n        void Init();\n        _PVPPOINT_LIMIT_DB_BASE();\n        void ctor__PVPPOINT_LIMIT_DB_BASE();\n        ~_PVPPOINT_LIMIT_DB_BASE();\n        void dtor__PVPPOINT_LIMIT_DB_BASE();\n    };\n    #pragma pack(pop)    \n    static_assert(ATF::checkSize<_PVPPOINT_LIMIT_DB_BASE, 34>(), \"_PVPPOINT_LIMIT_DB_BASE\");\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġ#", "pragma", "Ġpack", "(", "push", ",", "Ġ1", ")", "Ċ", "ĠĠĠ", "Ġstruct", "Ġ", "Ġ_", "P", "VP", "POINT", "_", "LIMIT", "_", "DB", "_", "BASE", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ__", "int", "64", "Ġt", "Updated", "ate", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġb", "Use", "Up", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchar", "Ġby", "Limit", "Rate", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġlong", "Ġdouble", "Ġd", "Original", "Point", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġlong", "Ġdouble", "Ġd", "Limit", "Point", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġlong", "Ġdouble", "Ġd", "Use", "Point", ";", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "ĠInit", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "P", "VP", "POINT", "_", "LIMIT", "_", "DB", "_", "BASE", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġctor", "__", "P", "VP", "POINT", "_", "LIMIT", "_", "DB", "_", "BASE", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ~", "_", "P", "VP", "POINT", "_", "LIMIT", "_", "DB", "_", "BASE", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġdt", "or", "__", "P", "VP", "POINT", "_", "LIMIT", "_", "DB", "_", "BASE", "();", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġ#", "pragma", "Ġpack", "(", "pop", ")", "ĠĠĠĠĊ", "ĠĠĠ", "Ġstatic", "_", "assert", "(", "ATF", "::", "check", "Size", "<_", "P", "VP", "POINT", "_", "LIMIT", "_", "DB", "_", "BASE", ",", "Ġ34", ">(),", "Ġ\"_", "P", "VP", "POINT", "_", "LIMIT", "_", "DB", "_", "BASE", "\");", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::626", "code": "#include \"aboutdialog.h\"\n#include \"ui_aboutdialog.h\"\n\n#include \"clientmodel.h\"\n#include \"clientversion.h\"\n\n// Copyright year (2009-this)\n// Todo: update this when changing our copyright comments in the source\nconst int ABOUTDIALOG_COPYRIGHT_YEAR = 2017;\n\nAboutDialog::AboutDialog(QWidget *parent) :\n    QDialog(parent),\n    ui(new Ui::AboutDialog)\n{\n    ui->setupUi(this);\n\n    // Set current copyright year\n    ui->copyrightLabel->setText(tr(\"Copyright\") + QString(\" &copy; 2009-%1 \").arg(COPYRIGHT_YEAR) + tr(\"The Bitcoin developers\") + QString(\"<br>\") + tr(\"Copyright\") + QString(\" &copy; \") + tr(\"%1 Iridium\").arg(ABOUTDIALOG_COPYRIGHT_YEAR));\n}\n\nvoid AboutDialog::setModel(ClientModel *model)\n{\n    if(model)\n    {\n        ui->versionLabel->setText(model->formatFullVersion());\n    }\n}\n\nAboutDialog::~AboutDialog()\n{\n    delete ui;\n}\n\nvoid AboutDialog::on_buttonBox_accepted()\n{\n    close();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "about", "dialog", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "about", "dialog", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "client", "model", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "client", "version", ".", "h", "\"", "Ċ", "Ċ", "//", "ĠCopyright", "Ġyear", "Ġ(", "2009", "-", "this", ")", "Ċ", "//", "ĠTodo", ":", "Ġupdate", "Ġthis", "Ġwhen", "Ġchanging", "Ġour", "Ġcopyright", "Ġcomments", "Ġin", "Ġthe", "Ġsource", "Ċ", "const", "Ġint", "ĠA", "BO", "UT", "DIALOG", "_", "COPY", "RIGHT", "_", "YEAR", "Ġ=", "Ġ2017", ";", "Ċ", "Ċ", "About", "Dialog", "::", "About", "Dialog", "(", "QWidget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠQDialog", "(", "parent", "),", "Ċ", "ĠĠĠ", "Ġui", "(", "new", "ĠUi", "::", "About", "Dialog", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "setup", "Ui", "(", "this", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠSet", "Ġcurrent", "Ġcopyright", "Ġyear", "Ċ", "ĠĠĠ", "Ġui", "->", "copyright", "Label", "->", "setText", "(", "tr", "(\"", "Copyright", "\")", "Ġ+", "ĠQString", "(\"", "Ġ&", "copy", ";", "Ġ2009", "-%", "1", "Ġ\").", "arg", "(", "COPY", "RIGHT", "_", "YEAR", ")", "Ġ+", "Ġtr", "(\"", "The", "ĠBitcoin", "Ġdevelopers", "\")", "Ġ+", "ĠQString", "(\"<", "br", ">\")", "Ġ+", "Ġtr", "(\"", "Copyright", "\")", "Ġ+", "ĠQString", "(\"", "Ġ&", "copy", ";", "Ġ\")", "Ġ+", "Ġtr", "(\"%", "1", "ĠI", "rid", "ium", "\").", "arg", "(", "AB", "OUT", "DIALOG", "_", "COPY", "RIGHT", "_", "YEAR", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAb", "out", "Dialog", "::", "setModel", "(", "Client", "Model", "Ġ*", "model", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(", "model", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġui", "->", "version", "Label", "->", "setText", "(", "model", "->", "format", "Full", "Version", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "About", "Dialog", "::~", "About", "Dialog", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġui", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAb", "out", "Dialog", "::", "on", "_", "button", "Box", "_", "accepted", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclose", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::627", "code": "#include \"BitVM.h\"\n\nvoid app_main() {\n  bitvm::exec_binary((uint16_t*)bitvm::functionsAndBytecode);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Bit", "VM", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġapp", "_", "main", "()", "Ġ{", "Ċ", "Ġ", "Ġbit", "vm", "::", "exec", "_", "binary", "((", "uint", "16", "_", "t", "*)", "bit", "vm", "::", "functions", "And", "Byte", "code", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::628", "code": "#include \"openMM_app.h\"\n\n#include \"OpenMM.h\"\n#include \"stdio.h\"\n\nint main(void)\n{\n    OpenMM::System system;\n    OpenMM::NonbondedForce *lj = new OpenMM::NonbondedForce();\n    system.addForce(lj);\n\n    std::vector<OpenMM::Vec3> initPosInNm(10);\n    for (int a = 0; a < 10; ++a)\n    {\n        initPosInNm[a] = OpenMM::Vec3(0.5*a, 0, 0);\n        system.addParticle(39.95);\n        lj->addParticle(0.0, 0.3350, 0.996);\n    }\n\n    OpenMM::VerletIntegrator integrator(0.004);\n    OpenMM::Context context(system, integrator);\n\n    context.setPositions(initPosInNm);\n    integrator.step(1000);\n\n    OpenMM::State state = context.getState(OpenMM::State::Positions);\n    const std::vector<OpenMM::Vec3>& posInNm = state.getPositions();\n\n    for (int a = 0; a < (int)posInNm.size(); ++a)\n    {\n        printf(\"ATOM  %5d  AR   AR     1    \", a+1); // atom number\n        printf(\"%8.3f%8.3f%8.3f  1.00  0.00\\n\",      // coordinates\n            // \"*10\" converts nanometers to Angstroms\n            posInNm[a][0]*10, posInNm[a][1]*10, posInNm[a][2]*10);\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "open", "MM", "_", "app", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Open", "MM", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "stdio", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠOpen", "MM", "::", "System", "Ġsystem", ";", "Ċ", "ĠĠĠ", "ĠOpen", "MM", "::", "Non", "bon", "ded", "Force", "Ġ*", "lj", "Ġ=", "Ġnew", "ĠOpen", "MM", "::", "Non", "bon", "ded", "Force", "();", "Ċ", "ĠĠĠ", "Ġsystem", ".", "add", "Force", "(", "lj", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "Open", "MM", "::", "Vec", "3", ">", "Ġinit", "Pos", "In", "Nm", "(", "10", ");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġa", "Ġ=", "Ġ0", ";", "Ġa", "Ġ<", "Ġ10", ";", "Ġ++", "a", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġinit", "Pos", "In", "Nm", "[", "a", "]", "Ġ=", "ĠOpen", "MM", "::", "Vec", "3", "(", "0", ".", "5", "*", "a", ",", "Ġ0", ",", "Ġ0", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsystem", ".", "add", "Particle", "(", "39", ".", "95", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġlj", "->", "add", "Particle", "(", "0", ".", "0", ",", "Ġ0", ".", "33", "50", ",", "Ġ0", ".", "996", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠOpen", "MM", "::", "Ver", "let", "Integrator", "Ġintegr", "ator", "(", "0", ".", "004", ");", "Ċ", "ĠĠĠ", "ĠOpen", "MM", "::", "Context", "Ġcontext", "(", "system", ",", "Ġintegr", "ator", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġcontext", ".", "set", "Positions", "(", "init", "Pos", "In", "Nm", ");", "Ċ", "ĠĠĠ", "Ġintegr", "ator", ".", "step", "(", "1000", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠOpen", "MM", "::", "State", "Ġstate", "Ġ=", "Ġcontext", ".", "getState", "(", "Open", "MM", "::", "State", "::", "Positions", ");", "Ċ", "ĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "Open", "MM", "::", "Vec", "3", ">&", "Ġpos", "In", "Nm", "Ġ=", "Ġstate", ".", "get", "Positions", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġa", "Ġ=", "Ġ0", ";", "Ġa", "Ġ<", "Ġ(", "int", ")", "pos", "In", "Nm", ".", "size", "();", "Ġ++", "a", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"", "ATOM", "Ġ", "Ġ%", "5", "d", "Ġ", "ĠAR", "ĠĠ", "ĠAR", "ĠĠĠĠ", "Ġ1", "ĠĠĠ", "Ġ\",", "Ġa", "+", "1", ");", "Ġ//", "Ġatom", "Ġnumber", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "8", ".", "3", "f", "%", "8", ".", "3", "f", "%", "8", ".", "3", "f", "Ġ", "Ġ1", ".", "00", "Ġ", "Ġ0", ".", "00", "\\", "n", "\",", "ĠĠĠĠĠ", "Ġ//", "Ġcoordinates", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ġ\"*", "10", "\"", "Ġconverts", "Ġnan", "om", "eters", "Ġto", "ĠAng", "st", "rom", "s", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġpos", "In", "Nm", "[", "a", "][", "0", "]*", "10", ",", "Ġpos", "In", "Nm", "[", "a", "][", "1", "]*", "10", ",", "Ġpos", "In", "Nm", "[", "a", "][", "2", "]*", "10", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::629", "code": "#include \"ycommon/utils/assert.h\"\n\n#include <cstdio>\n#include <Windows.h>\n\n#include \"ycommon/platform/platform_handle_win.h\"\n\nnamespace {\n  HWND gMainWindowHandle = NULL;\n}\n\nnamespace ycommon { namespace utils {\n\nvoid Assert::Initialize(\n    const platform::PlatformHandle& platform_handle) {\n  const platform::WinPlatformHandle& win_handle =\n      reinterpret_cast<const platform::WinPlatformHandle&>(platform_handle);\n  gMainWindowHandle = win_handle.mHwnd;\n}\n\nvoid Assert::Terminate() {\n}\n\nvoid Assert::Assert(const char* file, uint32_t line, const char* message) {\n  char buffer[512];\n  buffer[sizeof(buffer)-1] = '\\0';\n  snprintf(buffer, sizeof(buffer)-1, \"[%s:%u] %s\", file, line, message);\n  MessageBoxA(gMainWindowHandle, buffer, \"Assertion\", MB_OK );\n  __debugbreak();\n}\n\nvoid Assert::Warn(const char* file, uint32_t line, const char* message) {\n  static_cast<void>(file);\n  static_cast<void>(line);\n  static_cast<void>(message);\n}\n\n}} // namespace ycommon { namespace utils {\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "y", "common", "/", "utils", "/", "assert", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ<", "Windows", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "y", "common", "/", "platform", "/", "platform", "_", "handle", "_", "win", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ġ", "ĠHWND", "Ġg", "MainWindow", "Handle", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġy", "common", "Ġ{", "Ġnamespace", "Ġutils", "Ġ{", "Ċ", "Ċ", "void", "ĠAssert", "::", "Initialize", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġplatform", "::", "Platform", "Handle", "&", "Ġplatform", "_", "handle", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġplatform", "::", "Win", "Platform", "Handle", "&", "Ġwin", "_", "handle", "Ġ=", "Ċ", "ĠĠĠĠĠ", "Ġreinterpret", "_", "cast", "<", "const", "Ġplatform", "::", "Win", "Platform", "Handle", "&", ">(", "platform", "_", "handle", ");", "Ċ", "Ġ", "Ġg", "MainWindow", "Handle", "Ġ=", "Ġwin", "_", "handle", ".", "m", "Hwnd", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAssert", "::", "Terminate", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAssert", "::", "Assert", "(", "const", "Ġchar", "*", "Ġfile", ",", "Ġuint", "32", "_", "t", "Ġline", ",", "Ġconst", "Ġchar", "*", "Ġmessage", ")", "Ġ{", "Ċ", "Ġ", "Ġchar", "Ġbuffer", "[", "512", "];", "Ċ", "Ġ", "Ġbuffer", "[", "sizeof", "(", "buffer", ")-", "1", "]", "Ġ=", "Ġ'\\", "0", "';", "Ċ", "Ġ", "Ġsnprintf", "(", "buffer", ",", "Ġsizeof", "(", "buffer", ")-", "1", ",", "Ġ\"[%", "s", ":%", "u", "]", "Ġ%", "s", "\",", "Ġfile", ",", "Ġline", ",", "Ġmessage", ");", "Ċ", "Ġ", "ĠMessageBox", "A", "(", "g", "MainWindow", "Handle", ",", "Ġbuffer", ",", "Ġ\"", "Assertion", "\",", "ĠMB", "_", "OK", "Ġ);", "Ċ", "Ġ", "Ġ__", "debug", "break", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAssert", "::", "Warn", "(", "const", "Ġchar", "*", "Ġfile", ",", "Ġuint", "32", "_", "t", "Ġline", ",", "Ġconst", "Ġchar", "*", "Ġmessage", ")", "Ġ{", "Ċ", "Ġ", "Ġstatic", "_", "cast", "<", "void", ">(", "file", ");", "Ċ", "Ġ", "Ġstatic", "_", "cast", "<", "void", ">(", "line", ");", "Ċ", "Ġ", "Ġstatic", "_", "cast", "<", "void", ">(", "message", ");", "Ċ", "}", "Ċ", "Ċ", "}}", "Ġ//", "Ġnamespace", "Ġy", "common", "Ġ{", "Ġnamespace", "Ġutils", "Ġ{", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::630", "code": "#include \"error.h\"\n#include <stdlib.h>\n\nvoid fatal(const char* msg, ...)\n{\n    va_list v;\n    printf(P_COLOR_RED \">> Fatal : \" P_COLOR_RESET);\n    printf(msg, v);\n    printf(\"\\n\");\n    exit(EXIT_FAILURE);\n}\n\nvoid soft(const char* msg, ...)\n{\n    va_list v;\n    printf(P_COLOR_RED \">> : \" P_COLOR_RESET);\n    printf(msg, v);\n    printf(\"\\n\");\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "error", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "Ċ", "void", "Ġfatal", "(", "const", "Ġchar", "*", "Ġmsg", ",", "Ġ...)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġva", "_", "list", "Ġv", ";", "Ċ", "ĠĠĠ", "Ġprintf", "(", "P", "_", "COLOR", "_", "RED", "Ġ\"", ">>", "ĠFatal", "Ġ:", "Ġ\"", "ĠP", "_", "COLOR", "_", "RESET", ");", "Ċ", "ĠĠĠ", "Ġprintf", "(", "msg", ",", "Ġv", ");", "Ċ", "ĠĠĠ", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġexit", "(", "EXIT", "_", "FAILURE", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsoft", "(", "const", "Ġchar", "*", "Ġmsg", ",", "Ġ...)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġva", "_", "list", "Ġv", ";", "Ċ", "ĠĠĠ", "Ġprintf", "(", "P", "_", "COLOR", "_", "RED", "Ġ\"", ">>", "Ġ:", "Ġ\"", "ĠP", "_", "COLOR", "_", "RESET", ");", "Ċ", "ĠĠĠ", "Ġprintf", "(", "msg", ",", "Ġv", ");", "Ċ", "ĠĠĠ", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::631", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n\n\nSTART_ATF_NAMESPACE\n    typedef unsigned int u_long;\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġunsigned", "Ġint", "Ġu", "_", "long", ";", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::632", "code": "#include <string>\n#include <new>\n#include <functional>\n#include \"cpu_context.h\"\n\nnamespace mlfe {\n\nstd::mt19937 CPUContext::rng = std::mt19937(1357);\n\nCPUContext::~CPUContext(){}\n\n} /* namespace mlfe */\n", "code_tokens": ["Ġ#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "new", ">", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "#", "include", "Ġ\"", "cpu", "_", "context", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġml", "fe", "Ġ{", "Ċ", "Ċ", "std", "::", "mt", "199", "37", "ĠCPU", "Context", "::", "rng", "Ġ=", "Ġstd", "::", "mt", "199", "37", "(", "13", "57", ");", "Ċ", "Ċ", "CPU", "Context", "::~", "CPU", "Context", "(){}", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġml", "fe", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::633", "code": "/*\n * Copyright (c) 2015-2017 Annemarie Mattmann, Johannes Mattmann,\n * Matthias Gazzari, Moritz Hagemann, Sebastian Artz\n * \n * Licensed under the MIT license. See the LICENSE file for details.\n */\n\n#pragma once\n\n#include <string>\n#include <vector>\n#include <SFML/Graphics.hpp>\n\nclass TextBox\n{\npublic:\n\tstruct TextElement\n\t{\n\t\tstd::string eventType;\n\t\tbool bold;\n\t\tint r;\n\t\tint g;\n\t\tint b;\n\t\tstd::string text;\n\t};\n\tTextBox(const sf::Vector2f& sceneSize);\n\tvoid appendText(TextElement* item);\n\tvoid triggerText(std::string eventType);\n\tbool enabled();\n\tvoid pushText();\n\tvoid skip();\n\tvoid draw(sf::RenderTarget &renderTarget);\nprivate:\n\tstd::vector<TextElement*> elements;\n\tstd::string currentEvent;\n\tTextElement* currentElement;\n\tsf::Text _speech;\n\tsf::RectangleShape _textRect;\n};\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "-", "2017", "ĠAn", "n", "em", "ar", "ie", "ĠMat", "tm", "ann", ",", "ĠJ", "oh", "ann", "es", "ĠMat", "tm", "ann", ",", "Ċ", "Ġ*", "ĠMat", "th", "ias", "ĠG", "az", "z", "ari", ",", "ĠM", "or", "it", "z", "ĠH", "age", "m", "ann", ",", "ĠS", "eb", "ast", "ian", "ĠAr", "tz", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠMIT", "Ġlicense", ".", "ĠSee", "Ġthe", "ĠLICENSE", "Ġfile", "Ġfor", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "SF", "ML", "/", "Graphics", ".", "hpp", ">", "Ċ", "Ċ", "class", "ĠTextBox", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "struct", "ĠText", "Element", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "string", "ĠeventType", ";", "Ċ", "ĉ", "ĉ", "bool", "Ġbold", ";", "Ċ", "ĉ", "ĉ", "int", "Ġr", ";", "Ċ", "ĉ", "ĉ", "int", "Ġg", ";", "Ċ", "ĉ", "ĉ", "int", "Ġb", ";", "Ċ", "ĉ", "ĉ", "std", "::", "string", "Ġtext", ";", "Ċ", "ĉ", "};", "Ċ", "ĉ", "TextBox", "(", "const", "Ġsf", "::", "Vector", "2", "f", "&", "Ġscene", "Size", ");", "Ċ", "ĉ", "void", "Ġappend", "Text", "(", "Text", "Element", "*", "Ġitem", ");", "Ċ", "ĉ", "void", "Ġtrigger", "Text", "(", "std", "::", "string", "ĠeventType", ");", "Ċ", "ĉ", "bool", "Ġenabled", "();", "Ċ", "ĉ", "void", "Ġpush", "Text", "();", "Ċ", "ĉ", "void", "Ġskip", "();", "Ċ", "ĉ", "void", "Ġdraw", "(", "sf", "::", "RenderTarget", "Ġ&", "renderTarget", ");", "Ċ", "private", ":", "Ċ", "ĉ", "std", "::", "vector", "<", "Text", "Element", "*>", "Ġelements", ";", "Ċ", "ĉ", "std", "::", "string", "Ġcurrent", "Event", ";", "Ċ", "ĉ", "Text", "Element", "*", "Ġcurrent", "Element", ";", "Ċ", "ĉ", "sf", "::", "Text", "Ġ_", "speech", ";", "Ċ", "ĉ", "sf", "::", "Rectangle", "Shape", "Ġ_", "text", "Rect", ";", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::634", "code": "#include <stdio.h>\n\nint main(void)\n{\n    int n, i;\n    double a0, an1, a1;\n    double c[3000];\n\n    while (scanf(\"%d\", &n) != EOF)\n    {\n        scanf(\"%lf%lf\", &a0, &an1);\n        for (i = 0; i < n; i++)\n            scanf(\"%lf\", c + i);\n        a1 = n * a0 + an1;\n        for (i = 1; i <= n; i++)\n            a1 -= 2 * i * c[n - i];\n        printf(\"%.2f\\n\", a1 / (n + 1));\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "Ġi", ";", "Ċ", "ĠĠĠ", "Ġdouble", "Ġa", "0", ",", "Ġan", "1", ",", "Ġa", "1", ";", "Ċ", "ĠĠĠ", "Ġdouble", "Ġc", "[", "3000", "];", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "scanf", "(\"%", "d", "\",", "Ġ&", "n", ")", "Ġ!=", "ĠEOF", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "lf", "%", "lf", "\",", "Ġ&", "a", "0", ",", "Ġ&", "an", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "lf", "\",", "Ġc", "Ġ+", "Ġi", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġa", "1", "Ġ=", "Ġn", "Ġ*", "Ġa", "0", "Ġ+", "Ġan", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġa", "1", "Ġ-=", "Ġ2", "Ġ*", "Ġi", "Ġ*", "Ġc", "[", "n", "Ġ-", "Ġi", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%.", "2", "f", "\\", "n", "\",", "Ġa", "1", "Ġ/", "Ġ(", "n", "Ġ+", "Ġ1", "));", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::635", "code": "#include <AreaData.hpp>\n\n\nSTART_ATF_NAMESPACE\n    AreaData::AreaData(struct AreaData* __that)\n    {\n        using org_ptr = void (WINAPIV*)(struct AreaData*, struct AreaData*);\n        (org_ptr(0x14018bdb0L))(this, __that);\n    };\n    void AreaData::ctor_AreaData(struct AreaData* __that)\n    {\n        using org_ptr = void (WINAPIV*)(struct AreaData*, struct AreaData*);\n        (org_ptr(0x14018bdb0L))(this, __that);\n    };\n    AreaData::AreaData()\n    {\n        using org_ptr = void (WINAPIV*)(struct AreaData*);\n        (org_ptr(0x14018bd50L))(this);\n    };\n    void AreaData::ctor_AreaData()\n    {\n        using org_ptr = void (WINAPIV*)(struct AreaData*);\n        (org_ptr(0x14018bd50L))(this);\n    };\n    AreaData::~AreaData()\n    {\n        using org_ptr = void (WINAPIV*)(struct AreaData*);\n        (org_ptr(0x14018bd00L))(this);\n    };\n    void AreaData::dtor_AreaData()\n    {\n        using org_ptr = void (WINAPIV*)(struct AreaData*);\n        (org_ptr(0x14018bd00L))(this);\n    };\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Area", "Data", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "ĠArea", "Data", "::", "Area", "Data", "(", "struct", "ĠArea", "Data", "*", "Ġ__", "that", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġorg", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "ĠArea", "Data", "*,", "Ġstruct", "ĠArea", "Data", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ(", "org", "_", "ptr", "(", "0", "x", "14", "018", "bdb", "0", "L", "))(", "this", ",", "Ġ__", "that", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġvoid", "ĠArea", "Data", "::", "ctor", "_", "Area", "Data", "(", "struct", "ĠArea", "Data", "*", "Ġ__", "that", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġorg", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "ĠArea", "Data", "*,", "Ġstruct", "ĠArea", "Data", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ(", "org", "_", "ptr", "(", "0", "x", "14", "018", "bdb", "0", "L", "))(", "this", ",", "Ġ__", "that", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "ĠArea", "Data", "::", "Area", "Data", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġorg", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "ĠArea", "Data", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ(", "org", "_", "ptr", "(", "0", "x", "14", "018", "bd", "50", "L", "))(", "this", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġvoid", "ĠArea", "Data", "::", "ctor", "_", "Area", "Data", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġorg", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "ĠArea", "Data", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ(", "org", "_", "ptr", "(", "0", "x", "14", "018", "bd", "50", "L", "))(", "this", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "ĠArea", "Data", "::~", "Area", "Data", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġorg", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "ĠArea", "Data", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ(", "org", "_", "ptr", "(", "0", "x", "14", "018", "bd", "00", "L", "))(", "this", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġvoid", "ĠArea", "Data", "::", "dtor", "_", "Area", "Data", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġorg", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "ĠArea", "Data", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ(", "org", "_", "ptr", "(", "0", "x", "14", "018", "bd", "00", "L", "))(", "this", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::636", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n\n\nSTART_ATF_NAMESPACE\n    struct _TypeDescriptor\n    {\n        const void *pVFTable;\n        void *spare;\n        char name[];\n    };\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġstruct", "Ġ_", "Type", "Descriptor", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġvoid", "Ġ*", "p", "VF", "Table", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġ*", "spare", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchar", "Ġname", "[];", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::637", "code": "class Solution {\n    unordered_map<int, int> angles = {\n        {1, 30},  {2, 60},  {3, 90},  {4, 120},\n        {5, 150}, {6, 180}, {7, 210}, {8, 240},\n        {9, 270}, {10, 300}, {11, 330}, {12, 0}\n    };\npublic:\n    double angleClock(int hour, int minutes) {\n        double min_angle = 1.0/60.0 * minutes * 360;\n        double displacement = 0.5 * minutes;  // the hour hand moves this much forward from its normal position at hours\n        double hour_angle = angles[hour] + displacement;\n        double angle = std::abs(hour_angle - min_angle);\n        return std::min(angle, 360 - angle);\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "ĠĠĠ", "Ġunordered", "_", "map", "<", "int", ",", "Ġint", ">", "Ġangles", "Ġ=", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "1", ",", "Ġ30", "},", "Ġ", "Ġ{", "2", ",", "Ġ60", "},", "Ġ", "Ġ{", "3", ",", "Ġ90", "},", "Ġ", "Ġ{", "4", ",", "Ġ120", "},", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "5", ",", "Ġ150", "},", "Ġ{", "6", ",", "Ġ180", "},", "Ġ{", "7", ",", "Ġ210", "},", "Ġ{", "8", ",", "Ġ240", "},", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "9", ",", "Ġ270", "},", "Ġ{", "10", ",", "Ġ300", "},", "Ġ{", "11", ",", "Ġ3", "30", "},", "Ġ{", "12", ",", "Ġ0", "}", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġdouble", "Ġangle", "Clock", "(", "int", "Ġhour", ",", "Ġint", "Ġminutes", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġmin", "_", "angle", "Ġ=", "Ġ1", ".", "0", "/", "60", ".", "0", "Ġ*", "Ġminutes", "Ġ*", "Ġ360", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġdisplacement", "Ġ=", "Ġ0", ".", "5", "Ġ*", "Ġminutes", ";", "Ġ", "Ġ//", "Ġthe", "Ġhour", "Ġhand", "Ġmoves", "Ġthis", "Ġmuch", "Ġforward", "Ġfrom", "Ġits", "Ġnormal", "Ġposition", "Ġat", "Ġhours", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġhour", "_", "angle", "Ġ=", "Ġangles", "[", "hour", "]", "Ġ+", "Ġdisplacement", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġangle", "Ġ=", "Ġstd", "::", "abs", "(", "hour", "_", "angle", "Ġ-", "Ġmin", "_", "angle", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġstd", "::", "min", "(", "angle", ",", "Ġ360", "Ġ-", "Ġangle", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::638", "code": "#include \"Followers.h\"\n#include \"../../../Bundle.h\"\n\nnamespace EasyCpp\n{\n\tnamespace Net\n\t{\n\t\tnamespace Services\n\t\t{\n\t\t\tnamespace Spotify\n\t\t\t{\n\t\t\t\tFollowers::~Followers()\n\t\t\t\t{\n\t\t\t\t}\n\n\t\t\t\tconst std::string& Followers::getHref() const\n\t\t\t\t{\n\t\t\t\t\treturn _href;\n\t\t\t\t}\n\n\t\t\t\tuint64_t Followers::getTotal() const\n\t\t\t\t{\n\t\t\t\t\treturn _total;\n\t\t\t\t}\n\n\t\t\t\tFollowers::Followers()\n\t\t\t\t{\n\t\t\t\t}\n\n\t\t\t\tAnyValue Followers::toAnyValue() const\n\t\t\t\t{\n\t\t\t\t\treturn Bundle({\n\t\t\t\t\t\t{ \"href\", _href },\n\t\t\t\t\t\t{ \"total\", _total }\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvoid Followers::fromAnyValue(const AnyValue & state)\n\t\t\t\t{\n\t\t\t\t\tBundle followers = state.as<Bundle>();\n\t\t\t\t\t_href = followers.get(\"href\").isType<std::string>() ? followers.get<std::string>(\"href\") : \"\";\n\t\t\t\t\t_total = followers.get<uint64_t>(\"total\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Follow", "ers", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../../../", "Bundle", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠEasy", "Cpp", "Ċ", "{", "Ċ", "ĉ", "namespace", "ĠNet", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "namespace", "ĠServices", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "namespace", "ĠSp", "otify", "Ċ", "ĉĉ", "ĉ", "{", "Ċ", "ĉĉĉ", "ĉ", "Follow", "ers", "::~", "Follow", "ers", "()", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "Ċ", "ĉĉĉ", "ĉ", "const", "Ġstd", "::", "string", "&", "ĠFollow", "ers", "::", "getH", "ref", "()", "Ġconst", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉ", "ĉ", "return", "Ġ_", "href", ";", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "Ċ", "ĉĉĉ", "ĉ", "uint", "64", "_", "t", "ĠFollow", "ers", "::", "getTotal", "()", "Ġconst", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉ", "ĉ", "return", "Ġ_", "total", ";", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "Ċ", "ĉĉĉ", "ĉ", "Follow", "ers", "::", "Follow", "ers", "()", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "Ċ", "ĉĉĉ", "ĉ", "Any", "Value", "ĠFollow", "ers", "::", "to", "Any", "Value", "()", "Ġconst", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉ", "ĉ", "return", "ĠBundle", "({", "Ċ", "ĉĉĉĉĉ", "ĉ", "{", "Ġ\"", "href", "\",", "Ġ_", "href", "Ġ},", "Ċ", "ĉĉĉĉĉ", "ĉ", "{", "Ġ\"", "total", "\",", "Ġ_", "total", "Ġ}", "Ċ", "ĉĉĉĉ", "ĉ", "});", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "Ċ", "ĉĉĉ", "ĉ", "void", "ĠFollow", "ers", "::", "from", "Any", "Value", "(", "const", "ĠAny", "Value", "Ġ&", "Ġstate", ")", "Ċ", "ĉĉĉ", "ĉ", "{", "Ċ", "ĉĉĉĉ", "ĉ", "Bundle", "Ġfollow", "ers", "Ġ=", "Ġstate", ".", "as", "<", "Bundle", ">();", "Ċ", "ĉĉĉĉ", "ĉ", "_", "href", "Ġ=", "Ġfollow", "ers", ".", "get", "(\"", "href", "\").", "isType", "<", "std", "::", "string", ">()", "Ġ?", "Ġfollow", "ers", ".", "get", "<", "std", "::", "string", ">(\"", "href", "\")", "Ġ:", "Ġ\"\";", "Ċ", "ĉĉĉĉ", "ĉ", "_", "total", "Ġ=", "Ġfollow", "ers", ".", "get", "<", "uint", "64", "_", "t", ">(\"", "total", "\");", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::639", "code": "#include <iostream>\n#include <thread>\n#include \"../concurrent_queue.hpp\"\n\n#define NUM_OF_THREAD 4\n#define COUNT 100000\n\nusing lime62::concurrent_queue;\n\nint main() {\n    auto pop_task = [](concurrent_queue<int> *q, int n) {\n        for (int i = 0; i < n; i++) {\n            try {\n                int v;\n                q->front_pop(v);\n            } catch (std::runtime_error re) {\n                std::cout << re.what() << std::endl;\n            }\n        }\n    };\n\n    auto push_task = [](concurrent_queue<int> *q, int n) {\n        for (int i = 0; i < n; i++) {\n            q->push(i);\n        }\n    };\n\n    concurrent_queue<int> queue;\n    std::vector<std::thread> producers;\n    std::vector<std::thread> consumers;\n\n    // consumers will wait until something is available in the queue\n    for (int i=0; i<NUM_OF_THREAD; i++)\n        consumers.emplace_back(pop_task, &queue, COUNT);\n\n    // producers will put something in the queue\n    for (int i=0; i<NUM_OF_THREAD; i++)\n        producers.emplace_back(push_task, &queue, COUNT);\n\n    // wait until they finish\n    for (std::thread& producer : producers)\n        producer.join();\n    for (std::thread& consumer : consumers)\n        consumer.join();\n\n    // produced count should be same as consumed count\n    if (!queue.empty())\n        std::cout << \"Failed. It should consume all\\n\";\n\n    std::cout << \"Succeeded. Consumed all.\\n\";\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "#", "include", "Ġ\"../", "concurrent", "_", "queue", ".", "hpp", "\"", "Ċ", "Ċ", "#", "define", "ĠNUM", "_", "OF", "_", "THREAD", "Ġ4", "Ċ", "#", "define", "ĠCOUNT", "Ġ100000", "Ċ", "Ċ", "using", "Ġl", "ime", "62", "::", "concurrent", "_", "queue", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġauto", "Ġpop", "_", "task", "Ġ=", "Ġ[](", "concurrent", "_", "queue", "<", "int", ">", "Ġ*", "q", ",", "Ġint", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtry", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġv", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġq", "->", "front", "_", "pop", "(", "v", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġcatch", "Ġ(", "std", "::", "runtime", "_", "error", "Ġre", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġre", ".", "what", "()", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "ĠĠĠ", "Ġauto", "Ġpush", "_", "task", "Ġ=", "Ġ[](", "concurrent", "_", "queue", "<", "int", ">", "Ġ*", "q", ",", "Ġint", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġq", "->", "push", "(", "i", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "ĠĠĠ", "Ġconcurrent", "_", "queue", "<", "int", ">", "Ġqueue", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "std", "::", "thread", ">", "Ġprod", "ucers", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "std", "::", "thread", ">", "Ġconsumers", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġconsumers", "Ġwill", "Ġwait", "Ġuntil", "Ġsomething", "Ġis", "Ġavailable", "Ġin", "Ġthe", "Ġqueue", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "NUM", "_", "OF", "_", "THREAD", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconsumers", ".", "emplace", "_", "back", "(", "pop", "_", "task", ",", "Ġ&", "queue", ",", "ĠCOUNT", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġprod", "ucers", "Ġwill", "Ġput", "Ġsomething", "Ġin", "Ġthe", "Ġqueue", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "NUM", "_", "OF", "_", "THREAD", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprod", "ucers", ".", "emplace", "_", "back", "(", "push", "_", "task", ",", "Ġ&", "queue", ",", "ĠCOUNT", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġwait", "Ġuntil", "Ġthey", "Ġfinish", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "std", "::", "thread", "&", "Ġproducer", "Ġ:", "Ġprod", "ucers", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġproducer", ".", "join", "();", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "std", "::", "thread", "&", "Ġconsumer", "Ġ:", "Ġconsumers", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconsumer", ".", "join", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġproduced", "Ġcount", "Ġshould", "Ġbe", "Ġsame", "Ġas", "Ġconsumed", "Ġcount", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "queue", ".", "empty", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Failed", ".", "ĠIt", "Ġshould", "Ġconsume", "Ġall", "\\", "n", "\";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Succeeded", ".", "ĠCon", "sumed", "Ġall", ".\\", "n", "\";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::640", "code": "/*\n  Tests for time_hm\n */\n\n#include <catch.hpp>\n#include <transit_time.hpp>\n\n#include <chrono>\nusing namespace std::literals;\n\nstruct time_test_item {\n    stransit::time_hm first;\n    stransit::time_hm second;\n    std::chrono::minutes expected;\n};\n\nTEST_CASE(\"time_hm::difference_to\") {\n\n    time_test_item test_items[] = {\n        {stransit::time_hm(1h, 0min), stransit::time_hm(2h, 0min), 1h},\n        {stransit::time_hm(10h, 0min), stransit::time_hm(20h, 0min), 10h},\n        {stransit::time_hm(19h, 30min), stransit::time_hm(22h, 0min), 2h + 30min},\n        {stransit::time_hm(19h, 30min), stransit::time_hm(3h, 12min), 7h + 42min},\n    };\n\n    for (auto test : test_items) {\n        std::chrono::minutes diff = test.first.difference_to(test.second);\n        INFO( test.first.to_string() << \" and \" << test.second.to_string() );\n        INFO( \"Difference is \" << diff.count() << \"min\");\n        INFO( \"Difference should be \" << test.expected.count() << \"min\");\n        CHECK( diff == test.expected );\n    }\n\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "ĠTests", "Ġfor", "Ġtime", "_", "hm", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "catch", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "trans", "it", "_", "time", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "chrono", ">", "Ċ", "using", "Ġnamespace", "Ġstd", "::", "literal", "s", ";", "Ċ", "Ċ", "struct", "Ġtime", "_", "test", "_", "item", "Ġ{", "Ċ", "ĠĠĠ", "Ġstr", "ans", "it", "::", "time", "_", "hm", "Ġfirst", ";", "Ċ", "ĠĠĠ", "Ġstr", "ans", "it", "::", "time", "_", "hm", "Ġsecond", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "chrono", "::", "minutes", "Ġexpected", ";", "Ċ", "};", "Ċ", "Ċ", "TEST", "_", "CASE", "(\"", "time", "_", "hm", "::", "difference", "_", "to", "\")", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġtime", "_", "test", "_", "item", "Ġtest", "_", "items", "[]", "Ġ=", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "str", "ans", "it", "::", "time", "_", "hm", "(", "1", "h", ",", "Ġ0", "min", "),", "Ġstr", "ans", "it", "::", "time", "_", "hm", "(", "2", "h", ",", "Ġ0", "min", "),", "Ġ1", "h", "},", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "str", "ans", "it", "::", "time", "_", "hm", "(", "10", "h", ",", "Ġ0", "min", "),", "Ġstr", "ans", "it", "::", "time", "_", "hm", "(", "20", "h", ",", "Ġ0", "min", "),", "Ġ10", "h", "},", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "str", "ans", "it", "::", "time", "_", "hm", "(", "19", "h", ",", "Ġ30", "min", "),", "Ġstr", "ans", "it", "::", "time", "_", "hm", "(", "22", "h", ",", "Ġ0", "min", "),", "Ġ2", "h", "Ġ+", "Ġ30", "min", "},", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "str", "ans", "it", "::", "time", "_", "hm", "(", "19", "h", ",", "Ġ30", "min", "),", "Ġstr", "ans", "it", "::", "time", "_", "hm", "(", "3", "h", ",", "Ġ12", "min", "),", "Ġ7", "h", "Ġ+", "Ġ42", "min", "},", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġtest", "Ġ:", "Ġtest", "_", "items", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "chrono", "::", "minutes", "Ġdiff", "Ġ=", "Ġtest", ".", "first", ".", "difference", "_", "to", "(", "test", ".", "second", ");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠINFO", "(", "Ġtest", ".", "first", ".", "to", "_", "string", "()", "Ġ<<", "Ġ\"", "Ġand", "Ġ\"", "Ġ<<", "Ġtest", ".", "second", ".", "to", "_", "string", "()", "Ġ);", "Ċ", "ĠĠĠĠĠĠĠ", "ĠINFO", "(", "Ġ\"", "Difference", "Ġis", "Ġ\"", "Ġ<<", "Ġdiff", ".", "count", "()", "Ġ<<", "Ġ\"", "min", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠINFO", "(", "Ġ\"", "Difference", "Ġshould", "Ġbe", "Ġ\"", "Ġ<<", "Ġtest", ".", "expected", ".", "count", "()", "Ġ<<", "Ġ\"", "min", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "ĠCHECK", "(", "Ġdiff", "Ġ==", "Ġtest", ".", "expected", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::641", "code": "#include \"Damper.hpp\"\r\n\r\nnamespace Phiz\r\n{\r\n\r\nDamper::Damper(Body* a, Body* b, float z)\r\n    : Link(a, b), _z(z)\r\n{\r\n}\r\n\r\nDamper::~Damper()\r\n{\r\n}\r\n\r\nvoid Damper::step(float dt)\r\n{\r\n    glm::vec3 force = -_z * (_a->cspeed() - _b->cspeed());\r\n    _a->force() += force;\r\n    _b->force() -= force;\r\n}\r\n\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "D", "amper", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "namespace", "ĠPh", "iz", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "D", "amper", "::", "D", "amper", "(", "Body", "*", "Ġa", ",", "ĠBody", "*", "Ġb", ",", "Ġfloat", "Ġz", ")", "č", "Ċ", "ĠĠĠ", "Ġ:", "ĠLink", "(", "a", ",", "Ġb", "),", "Ġ_", "z", "(", "z", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "D", "amper", "::~", "D", "amper", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠD", "amper", "::", "step", "(", "float", "Ġdt", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġglm", "::", "vec", "3", "Ġforce", "Ġ=", "Ġ-", "_", "z", "Ġ*", "Ġ(_", "a", "->", "cs", "peed", "()", "Ġ-", "Ġ_", "b", "->", "cs", "peed", "());", "č", "Ċ", "ĠĠĠ", "Ġ_", "a", "->", "force", "()", "Ġ+=", "Ġforce", ";", "č", "Ċ", "ĠĠĠ", "Ġ_", "b", "->", "force", "()", "Ġ-=", "Ġforce", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::642", "code": "#include \"train_test_workflow.h\"\n\n#include <iostream>\n\n#include \"util/data_constants.h\"\n#include \"util/data_loader.h\"\n#include \"util/timer.h\"\n\ntrain_test_workflow::train_test_workflow(base_model* model_instance) : \n  base_workflow{model_instance}, rmse{0.0} {}\n\nvoid train_test_workflow::execute() {\n  timer timer;\n  std::cout << \"Loading training data: \" << timer.return_elapsed();\n  std::string base_path = \"data/um/base.bin\";\n  auto base_data = new int[BASE_SIZE * COL_SIZE];\n  data_loader::load_data(base_path, base_data, BASE_SIZE * COL_SIZE);\n\n  std::cout << \"Loading testing data: \" << timer.return_elapsed();\n  std::string probe_path = \"data/um/probe.bin\";\n  auto probe_data = new int[PROBE_SIZE * COL_SIZE];\n  data_loader::load_data(probe_path, probe_data, PROBE_SIZE * COL_SIZE);\n\n  std::cout << \"Training model: \" << timer.return_elapsed();\n  model->train(base_data, BASE_SIZE);\n  std::cout << \"Testing model: \" << timer.return_elapsed();\n  rmse = model->test(probe_data, new int[PROBE_SIZE], PROBE_SIZE);\n\n  std::cout << \"Completed Workflow: \" << timer.return_elapsed();\n  std::cout << \"RMSE: \" << rmse << std::endl;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "train", "_", "test", "_", "workflow", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", "/", "data", "_", "constants", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "data", "_", "loader", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "timer", ".", "h", "\"", "Ċ", "Ċ", "train", "_", "test", "_", "workflow", "::", "train", "_", "test", "_", "workflow", "(", "base", "_", "model", "*", "Ġmodel", "_", "instance", ")", "Ġ:", "ĠĊ", "Ġ", "Ġbase", "_", "workflow", "{", "model", "_", "instance", "},", "Ġrm", "se", "{", "0", ".", "0", "}", "Ġ{}", "Ċ", "Ċ", "void", "Ġtrain", "_", "test", "_", "workflow", "::", "execute", "()", "Ġ{", "Ċ", "Ġ", "Ġtimer", "Ġtimer", ";", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Loading", "Ġtraining", "Ġdata", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "elapsed", "();", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġbase", "_", "path", "Ġ=", "Ġ\"", "data", "/", "um", "/", "base", ".", "bin", "\";", "Ċ", "Ġ", "Ġauto", "Ġbase", "_", "data", "Ġ=", "Ġnew", "Ġint", "[", "BASE", "_", "SIZE", "Ġ*", "ĠCOL", "_", "SIZE", "];", "Ċ", "Ġ", "Ġdata", "_", "loader", "::", "load", "_", "data", "(", "base", "_", "path", ",", "Ġbase", "_", "data", ",", "ĠBASE", "_", "SIZE", "Ġ*", "ĠCOL", "_", "SIZE", ");", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Loading", "Ġtesting", "Ġdata", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "elapsed", "();", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġprobe", "_", "path", "Ġ=", "Ġ\"", "data", "/", "um", "/", "probe", ".", "bin", "\";", "Ċ", "Ġ", "Ġauto", "Ġprobe", "_", "data", "Ġ=", "Ġnew", "Ġint", "[", "PROBE", "_", "SIZE", "Ġ*", "ĠCOL", "_", "SIZE", "];", "Ċ", "Ġ", "Ġdata", "_", "loader", "::", "load", "_", "data", "(", "probe", "_", "path", ",", "Ġprobe", "_", "data", ",", "ĠPRO", "BE", "_", "SIZE", "Ġ*", "ĠCOL", "_", "SIZE", ");", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Training", "Ġmodel", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "elapsed", "();", "Ċ", "Ġ", "Ġmodel", "->", "train", "(", "base", "_", "data", ",", "ĠBASE", "_", "SIZE", ");", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Testing", "Ġmodel", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "elapsed", "();", "Ċ", "Ġ", "Ġrm", "se", "Ġ=", "Ġmodel", "->", "test", "(", "probe", "_", "data", ",", "Ġnew", "Ġint", "[", "PROBE", "_", "SIZE", "],", "ĠPRO", "BE", "_", "SIZE", ");", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Completed", "ĠWorkflow", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "elapsed", "();", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "RM", "SE", ":", "Ġ\"", "Ġ<<", "Ġrm", "se", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::643", "code": "#ifndef CTCI_6TH_EDITION_CPP_01_ARRAYS_AND_STRINGS_03_URLIFY_URLIFY_HPP_\n#define CTCI_6TH_EDITION_CPP_01_ARRAYS_AND_STRINGS_03_URLIFY_URLIFY_HPP_\n\n#include <string>\n\nint urlify(std::string& s, int n);\n\n#endif  // CTCI_6TH_EDITION_CPP_01_ARRAYS_AND_STRINGS_03_URLIFY_URLIFY_HPP_\n", "code_tokens": ["Ġ#", "ifndef", "ĠCT", "CI", "_", "6", "TH", "_", "ED", "ITION", "_", "CPP", "_", "01", "_", "ARRAY", "S", "_", "AND", "_", "STRING", "S", "_", "03", "_", "URL", "IFY", "_", "URL", "IFY", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠCT", "CI", "_", "6", "TH", "_", "ED", "ITION", "_", "CPP", "_", "01", "_", "ARRAY", "S", "_", "AND", "_", "STRING", "S", "_", "03", "_", "URL", "IFY", "_", "URL", "IFY", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "int", "Ġurl", "ify", "(", "std", "::", "string", "&", "Ġs", ",", "Ġint", "Ġn", ");", "Ċ", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠCT", "CI", "_", "6", "TH", "_", "ED", "ITION", "_", "CPP", "_", "01", "_", "ARRAY", "S", "_", "AND", "_", "STRING", "S", "_", "03", "_", "URL", "IFY", "_", "URL", "IFY", "_", "HP", "P", "_", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::644", "code": "#include <iostream>\n#include <cstdio>\n#include \"dataset.h\"\n#include \"knn.h\"\n#include <cassert>\n#include <cmath>\n#include \"testUtils.h\"\n\n\nint main() \n{\n\tdouble rawData[] = {5.0/11, 4.0/11, 2.0 / 11, //top 1: 0 ; expected: 0 - Acertar\n\t\t\t\t\t\t5.0/11, 4.0/11, 2.0 / 11, //top 1: 0 ; expected: 0 - Acertar\n\t\t\t\t\t\t 5.0/11, 4.0/11, 2.0 / 11, //top 1: 0 ; expected: 1 - Errar\n\t\t\t\t\t \t 5.0/11, 5.0/11, 1.0 / 11}; //Empatados em 2o - rejeitar\n\n\tint labels[] = {0,0,1,1};\n\tDatasetPointer sampleData = makeDataset(4, 3, 2, rawData, labels);\n\n\tKNNResults target(sampleData);\n\n\tSingleExecutionResults actual = target.top1Result();\n\n\tassertEquals(2, actual.nSuccess);\n\tassertEquals(1, actual.nRejected);\n\n\n\tdouble MAX_ERROR = 1e-4;\n\n\tprintf(\"%s OK!\\n\", __FILE__);\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ\"", "dataset", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "k", "nn", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ\"", "test", "Utils", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ", "Ċ", "{", "Ċ", "ĉ", "double", "ĠrawData", "[]", "Ġ=", "Ġ{", "5", ".", "0", "/", "11", ",", "Ġ4", ".", "0", "/", "11", ",", "Ġ2", ".", "0", "Ġ/", "Ġ11", ",", "Ġ//", "top", "Ġ1", ":", "Ġ0", "Ġ;", "Ġexpected", ":", "Ġ0", "Ġ-", "ĠA", "cert", "ar", "Ċ", "ĉĉĉĉĉ", "ĉ", "5", ".", "0", "/", "11", ",", "Ġ4", ".", "0", "/", "11", ",", "Ġ2", ".", "0", "Ġ/", "Ġ11", ",", "Ġ//", "top", "Ġ1", ":", "Ġ0", "Ġ;", "Ġexpected", ":", "Ġ0", "Ġ-", "ĠA", "cert", "ar", "Ċ", "ĉĉĉĉĉĉ", "Ġ5", ".", "0", "/", "11", ",", "Ġ4", ".", "0", "/", "11", ",", "Ġ2", ".", "0", "Ġ/", "Ġ11", ",", "Ġ//", "top", "Ġ1", ":", "Ġ0", "Ġ;", "Ġexpected", ":", "Ġ1", "Ġ-", "ĠErr", "ar", "Ċ", "ĉĉĉĉĉ", "Ġĉ", "Ġ5", ".", "0", "/", "11", ",", "Ġ5", ".", "0", "/", "11", ",", "Ġ1", ".", "0", "Ġ/", "Ġ11", "};", "Ġ//", "Emp", "at", "ados", "Ġem", "Ġ2", "o", "Ġ-", "Ġre", "je", "it", "ar", "Ċ", "Ċ", "ĉ", "int", "Ġlabels", "[]", "Ġ=", "Ġ{", "0", ",", "0", ",", "1", ",", "1", "};", "Ċ", "ĉ", "Dataset", "Pointer", "Ġsample", "Data", "Ġ=", "Ġmake", "Dataset", "(", "4", ",", "Ġ3", ",", "Ġ2", ",", "ĠrawData", ",", "Ġlabels", ");", "Ċ", "Ċ", "ĉ", "K", "NN", "Results", "Ġtarget", "(", "sample", "Data", ");", "Ċ", "Ċ", "ĉ", "Single", "Execution", "Results", "Ġactual", "Ġ=", "Ġtarget", ".", "top", "1", "Result", "();", "Ċ", "Ċ", "ĉ", "assertEquals", "(", "2", ",", "Ġactual", ".", "n", "Success", ");", "Ċ", "ĉ", "assertEquals", "(", "1", ",", "Ġactual", ".", "n", "Rejected", ");", "Ċ", "Ċ", "Ċ", "ĉ", "double", "ĠMAX", "_", "ERROR", "Ġ=", "Ġ1", "e", "-", "4", ";", "Ċ", "Ċ", "ĉ", "printf", "(\"%", "s", "ĠOK", "!\\", "n", "\",", "Ġ__", "FILE", "__);", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::645", "code": "#include \"PagePool.h\"\n\nPagePool* PagePool::ins = nullptr;\n\nPage* PagePool::create(int itemSize) {\n\tauto p = Page::create(itemSize);\n\tmp.insert(make_pair(p->getId(), p));\n\treturn p;\n}\n\nPage* PagePool::createFromFile(const string &path, int pid) {\n\tauto buffer = new char[50];\n\tsprintf(buffer, \"%s/%d.page\", path.c_str(), pid);\n\tauto p = Page::createFromFile(buffer);\n\tmp.insert(make_pair(p->getId(), p));\n\treturn p;\t\n}\n\nPage* PagePool::get(int pid) {\n\tauto res = mp.find(pid);\n\tif (res == mp.end()) return nullptr;\n\telse return res->second;\n}\n\nvoid PagePool::writeBack() {\n\tfor (auto &pair : mp) {\n\t\tpair.second->writeBack();\n\t}\n}\n\nvoid PagePool::remove(int pid) {\n\tauto res = mp.find(pid);\n\tif (res != mp.end()) {\n\t\tdelete res->second;\n\t\tmp.erase(res);\n\t}\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Page", "Pool", ".", "h", "\"", "Ċ", "Ċ", "Page", "Pool", "*", "ĠPage", "Pool", "::", "ins", "Ġ=", "Ġnullptr", ";", "Ċ", "Ċ", "Page", "*", "ĠPage", "Pool", "::", "create", "(", "int", "Ġitem", "Size", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġp", "Ġ=", "ĠPage", "::", "create", "(", "item", "Size", ");", "Ċ", "ĉ", "mp", ".", "insert", "(", "make", "_", "pair", "(", "p", "->", "getId", "(),", "Ġp", "));", "Ċ", "ĉ", "return", "Ġp", ";", "Ċ", "}", "Ċ", "Ċ", "Page", "*", "ĠPage", "Pool", "::", "create", "FromFile", "(", "const", "Ġstring", "Ġ&", "path", ",", "Ġint", "Ġpid", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġbuffer", "Ġ=", "Ġnew", "Ġchar", "[", "50", "];", "Ċ", "ĉ", "sprintf", "(", "buffer", ",", "Ġ\"%", "s", "/%", "d", ".", "page", "\",", "Ġpath", ".", "c", "_", "str", "(),", "Ġpid", ");", "Ċ", "ĉ", "auto", "Ġp", "Ġ=", "ĠPage", "::", "create", "FromFile", "(", "buffer", ");", "Ċ", "ĉ", "mp", ".", "insert", "(", "make", "_", "pair", "(", "p", "->", "getId", "(),", "Ġp", "));", "Ċ", "ĉ", "return", "Ġp", ";", "ĉ", "Ċ", "}", "Ċ", "Ċ", "Page", "*", "ĠPage", "Pool", "::", "get", "(", "int", "Ġpid", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġres", "Ġ=", "Ġmp", ".", "find", "(", "pid", ");", "Ċ", "ĉ", "if", "Ġ(", "res", "Ġ==", "Ġmp", ".", "end", "())", "Ġreturn", "Ġnullptr", ";", "Ċ", "ĉ", "else", "Ġreturn", "Ġres", "->", "second", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPage", "Pool", "::", "write", "Back", "()", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġ&", "pair", "Ġ:", "Ġmp", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "pair", ".", "second", "->", "write", "Back", "();", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPage", "Pool", "::", "remove", "(", "int", "Ġpid", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġres", "Ġ=", "Ġmp", ".", "find", "(", "pid", ");", "Ċ", "ĉ", "if", "Ġ(", "res", "Ġ!=", "Ġmp", ".", "end", "())", "Ġ{", "Ċ", "ĉ", "ĉ", "delete", "Ġres", "->", "second", ";", "Ċ", "ĉ", "ĉ", "mp", ".", "erase", "(", "res", ");", "Ċ", "ĉ", "}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::646", "code": "#include \"multiple_light.h\"\n\n\n\nMultipleLight::MultipleLight(unsigned int size)\n{\n}\n\n\n\nMultipleLight::~MultipleLight()\n{\n}\n\nvoid MultipleLight::clear()\n{\n\tlights.clear();\n}\n\nvoid MultipleLight::addLight(Light* light)\n{\n\tif (lights.size() < size)\n\t\tlights.push_back(light);\n}\n\nvoid MultipleLight::bind(Program * program)\n{\n\tprogram->setInt(lights.size(), LIGHTS_SIZE);\n\tfor each (Light* light in lights)\n\t\tlight->bind(program);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "multiple", "_", "light", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "Ċ", "Multiple", "Light", "::", "Multiple", "Light", "(", "unsigned", "Ġint", "Ġsize", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ", "Multiple", "Light", "::~", "Multiple", "Light", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMultiple", "Light", "::", "clear", "()", "Ċ", "{", "Ċ", "ĉ", "lights", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMultiple", "Light", "::", "add", "Light", "(", "Light", "*", "Ġlight", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "lights", ".", "size", "()", "Ġ<", "Ġsize", ")", "Ċ", "ĉ", "ĉ", "lights", ".", "push", "_", "back", "(", "light", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMultiple", "Light", "::", "bind", "(", "Program", "Ġ*", "Ġprogram", ")", "Ċ", "{", "Ċ", "ĉ", "program", "->", "setInt", "(", "lights", ".", "size", "(),", "ĠL", "IGHT", "S", "_", "SIZE", ");", "Ċ", "ĉ", "for", "Ġeach", "Ġ(", "Light", "*", "Ġlight", "Ġin", "Ġlights", ")", "Ċ", "ĉ", "ĉ", "light", "->", "bind", "(", "program", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::647", "code": "#include \"timers.h\"\n\n#include <QHashIterator>\n#include <QCoreApplication>\n\nstatic QString TIMER(\"TIMER\");\n\nTimers::Timers(QObject *parent) :\n    QObject(parent)\n{\n    timer = new QTimer(this);\n    connect(timer, &QTimer::timeout, this, &Timers::tick);\n    timer->start(1000);\n}\n\nTimers::~Timers() {\n    timer->stop();\n}\n\nvoid Timers::kill()\n{\n\tQCoreApplication::exit();\n}\n\nvoid Timers::setState(const QString &service,\n\tconst QString &id,\n\tconst QString &value\n) {\n\tbool parseOk = false;\n\tint seconds = value.toInt(&parseOk);\n\tif (parseOk && (service == TIMER)) {\n\t\tif (seconds <= 0) active.remove(id);\n\t\telse active[id] = seconds;\n\t}\n}\n\nvoid Timers::updateState(const QString &service,\n\tconst QString &id\n) {\n\tif ((service == TIMER) && active.contains(id)) {\n\t\temit stateChange(TIMER, id, QString::number(active[id]));\n\t}\n}\n\nvoid Timers::tick() {\n    QStringList expired;\n    for (auto c = active.begin(); c != active.end(); ++c) {\n        if ((*c)-- == 0) {\n            expired.append(c.key());\n        }\n    }\n    for (auto &c : expired) {\n        active.remove(c);\n        emit stateChange(TIMER, c, \"0\");\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "timers", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Hash", "Iterator", ">", "Ċ", "#", "include", "Ġ<", "Q", "CoreApplication", ">", "Ċ", "Ċ", "static", "ĠQString", "ĠTIMER", "(\"", "TIMER", "\");", "Ċ", "Ċ", "Timers", "::", "Timers", "(", "QObject", "Ġ*", "parent", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠQObject", "(", "parent", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtimer", "Ġ=", "Ġnew", "ĠQ", "Timer", "(", "this", ");", "Ċ", "ĠĠĠ", "Ġconnect", "(", "timer", ",", "Ġ&", "QT", "imer", "::", "timeout", ",", "Ġthis", ",", "Ġ&", "Timers", "::", "tick", ");", "Ċ", "ĠĠĠ", "Ġtimer", "->", "start", "(", "1000", ");", "Ċ", "}", "Ċ", "Ċ", "Timers", "::~", "Timers", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġtimer", "->", "stop", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTim", "ers", "::", "kill", "()", "Ċ", "{", "Ċ", "ĉ", "Q", "CoreApplication", "::", "exit", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTim", "ers", "::", "setState", "(", "const", "ĠQString", "Ġ&", "service", ",", "Ċ", "ĉ", "const", "ĠQString", "Ġ&", "id", ",", "Ċ", "ĉ", "const", "ĠQString", "Ġ&", "value", "Ċ", ")", "Ġ{", "Ċ", "ĉ", "bool", "Ġparse", "Ok", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "int", "Ġseconds", "Ġ=", "Ġvalue", ".", "toInt", "(&", "parse", "Ok", ");", "Ċ", "ĉ", "if", "Ġ(", "parse", "Ok", "Ġ&&", "Ġ(", "service", "Ġ==", "ĠTIMER", "))", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "seconds", "Ġ<=", "Ġ0", ")", "Ġactive", ".", "remove", "(", "id", ");", "Ċ", "ĉ", "ĉ", "else", "Ġactive", "[", "id", "]", "Ġ=", "Ġseconds", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTim", "ers", "::", "update", "State", "(", "const", "ĠQString", "Ġ&", "service", ",", "Ċ", "ĉ", "const", "ĠQString", "Ġ&", "id", "Ċ", ")", "Ġ{", "Ċ", "ĉ", "if", "Ġ((", "service", "Ġ==", "ĠTIMER", ")", "Ġ&&", "Ġactive", ".", "contains", "(", "id", "))", "Ġ{", "Ċ", "ĉ", "ĉ", "emit", "Ġstate", "Change", "(", "TIMER", ",", "Ġid", ",", "ĠQString", "::", "number", "(", "active", "[", "id", "]));", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTim", "ers", "::", "tick", "()", "Ġ{", "Ċ", "ĠĠĠ", "ĠQStringList", "Ġexpired", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġc", "Ġ=", "Ġactive", ".", "begin", "();", "Ġc", "Ġ!=", "Ġactive", ".", "end", "();", "Ġ++", "c", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ((*", "c", ")", "--", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġexpired", ".", "append", "(", "c", ".", "key", "());", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġ&", "c", "Ġ:", "Ġexpired", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġactive", ".", "remove", "(", "c", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġemit", "Ġstate", "Change", "(", "TIMER", ",", "Ġc", ",", "Ġ\"", "0", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::648", "code": "#include \"rune/gameloopthread.h\"\n\nrune::GameLoopThread::GameLoopThread(Engine *parent) :\n    QThread(NULL)\n{\n    _engine = parent;\n    _engineValid = true;\n}\n\nvoid rune::GameLoopThread::invalidateEngine()\n{\n    qDebug() << \"invalidateEngine\";\n    _engineValid = false;\n}\n\nvoid rune::GameLoopThread::run()\n{\n    if(_engine == NULL)\n        return;\n\n    qDebug() << \"gameloop started running\";\n\n    while(_engineValid)\n    {\n        QQueue<rune_action_queue_item> queue = _engine->getReadyActions();\n        //qDebug() << \"ready actions: \" << queue.size();\n        bool stateChange = false;\n        while(!queue.isEmpty() && _engineValid)\n        {\n            rune_action_queue_item actItem = queue.dequeue();\n            Entity* e = _engine->getClone(actItem.uid);\n            // TODO create script interpreter and bind it here to reduce used memory by entity\n            e->call(actItem.action);\n            stateChange = true;\n        }\n        if(stateChange) _engine->fireGameStateChanged(); // send signal to engine\n    }\n    qDebug() << \"gameloop end\";\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "rune", "/", "game", "loop", "thread", ".", "h", "\"", "Ċ", "Ċ", "rune", "::", "Game", "Loop", "Thread", "::", "Game", "Loop", "Thread", "(", "Engine", "Ġ*", "parent", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠQ", "Thread", "(", "NULL", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ_", "engine", "Ġ=", "Ġparent", ";", "Ċ", "ĠĠĠ", "Ġ_", "engine", "Valid", "Ġ=", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġrune", "::", "Game", "Loop", "Thread", "::", "invalidate", "Engine", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "invalidate", "Engine", "\";", "Ċ", "ĠĠĠ", "Ġ_", "engine", "Valid", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġrune", "::", "Game", "Loop", "Thread", "::", "run", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(_", "engine", "Ġ==", "ĠNULL", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "game", "loop", "Ġstarted", "Ġrunning", "\";", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "(_", "engine", "Valid", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQ", "Queue", "<", "rune", "_", "action", "_", "queue", "_", "item", ">", "Ġqueue", "Ġ=", "Ġ_", "engine", "->", "get", "Ready", "Actions", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "qDebug", "()", "Ġ<<", "Ġ\"", "ready", "Ġactions", ":", "Ġ\"", "Ġ<<", "Ġqueue", ".", "size", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġstate", "Change", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(!", "queue", ".", "isEmpty", "()", "Ġ&&", "Ġ_", "engine", "Valid", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġrune", "_", "action", "_", "queue", "_", "item", "Ġact", "Item", "Ġ=", "Ġqueue", ".", "dequeue", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠEntity", "*", "Ġe", "Ġ=", "Ġ_", "engine", "->", "get", "Clone", "(", "act", "Item", ".", "uid", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "ĠTODO", "Ġcreate", "Ġscript", "Ġinterpreter", "Ġand", "Ġbind", "Ġit", "Ġhere", "Ġto", "Ġreduce", "Ġused", "Ġmemory", "Ġby", "Ġentity", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġe", "->", "call", "(", "act", "Item", ".", "action", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstate", "Change", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "state", "Change", ")", "Ġ_", "engine", "->", "fire", "Game", "StateChanged", "();", "Ġ//", "Ġsend", "Ġsignal", "Ġto", "Ġengine", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "Ġ<<", "Ġ\"", "game", "loop", "Ġend", "\";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::649", "code": "/* \n * OSG Model\n *\n * Copyright (c) 2009 Jérémie Decock\n */\n\n#include <osgDB/ReadFile>\n#include <osgViewer/Viewer>\n\nint main(int, char **) {\n    osg::ref_ptr<osg::Node> model = osgDB::readNodeFile(\"cessna.osg\"); // could be also .obj files, ...\n\n    osgViewer::Viewer viewer;\n    viewer.setSceneData(model);\n    viewer.run();\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "ĠĊ", "Ġ*", "ĠOS", "G", "ĠModel", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "ĠJ", "Ã©", "r", "Ã©", "m", "ie", "ĠDe", "co", "ck", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "osg", "DB", "/", "ReadFile", ">", "Ċ", "#", "include", "Ġ<", "osg", "Viewer", "/", "Viewer", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "Ġ**)", "Ġ{", "Ċ", "ĠĠĠ", "Ġosg", "::", "ref", "_", "ptr", "<", "osg", "::", "Node", ">", "Ġmodel", "Ġ=", "Ġosg", "DB", "::", "read", "Node", "File", "(\"", "cess", "na", ".", "osg", "\");", "Ġ//", "Ġcould", "Ġbe", "Ġalso", "Ġ.", "obj", "Ġfiles", ",", "Ġ...", "Ċ", "Ċ", "ĠĠĠ", "Ġosg", "Viewer", "::", "Viewer", "Ġviewer", ";", "Ċ", "ĠĠĠ", "Ġviewer", ".", "set", "Scene", "Data", "(", "model", ");", "Ċ", "ĠĠĠ", "Ġviewer", ".", "run", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::650", "code": "#ifdef INTEST\n#include \"preprocessor.hpp\"\n#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream stre(\"preprocessor.test\");\nSchemeUnit s(stre);\nint main()\n{\n    for (int i=0; i<s.lines.size(); ++i)\n      cout<<s.lines[i]<<endl;\n    return 0;\n}\n#endif\n", "code_tokens": ["Ġ#", "ifdef", "ĠIN", "TEST", "Ċ", "#", "include", "Ġ\"", "preprocessor", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "ifstream", "Ġst", "re", "(\"", "preprocessor", ".", "test", "\");", "Ċ", "Scheme", "Unit", "Ġs", "(", "st", "re", ");", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "s", ".", "lines", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "ĠĠĠĠĠ", "Ġcout", "<<", "s", ".", "lines", "[", "i", "]<<", "endl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::651", "code": "/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\nclass Solution {\npublic:\n    /**\n     * @aaram a, b, the root of binary trees.\n     * @return true if they are identical, or false.\n     */\n    bool isIdentical(TreeNode* a, TreeNode* b) {\n        // Write your code here\n        bool rt_identical_flag=false;\n        \n        if (a==NULL and b==NULL) return true;\n        if ((a==NULL and b!=NULL) or (a!=NULL and b==NULL)) return false;\n        if ((a->val == b-> val)) rt_identical_flag=true;\n            else return false;\n\n        rt_identical_flag = rt_identical_flag and isIdentical(a->left,b->left) and isIdentical(a->right,b->right);\n        return rt_identical_flag;\n    }\n};\n\n// Total Runtime: 28 ms", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠDefinition", "Ġof", "ĠTreeNode", ":", "Ċ", "Ġ*", "Ġclass", "ĠTreeNode", "Ġ{", "Ċ", "Ġ*", "Ġpublic", ":", "Ċ", "Ġ*", "ĠĠĠĠ", "Ġint", "Ġval", ";", "Ċ", "Ġ*", "ĠĠĠĠ", "ĠTreeNode", "Ġ*", "left", ",", "Ġ*", "right", ";", "Ċ", "Ġ*", "ĠĠĠĠ", "ĠTreeNode", "(", "int", "Ġval", ")", "Ġ{", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠ", "Ġthis", "->", "val", "Ġ=", "Ġval", ";", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠ", "Ġthis", "->", "left", "Ġ=", "Ġthis", "->", "right", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ*", "ĠĠĠĠ", "Ġ}", "Ċ", "Ġ*", "Ġ}", "Ċ", "Ġ*/", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "a", "aram", "Ġa", ",", "Ġb", ",", "Ġthe", "Ġroot", "Ġof", "Ġbinary", "Ġtrees", ".", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ@", "return", "Ġtrue", "Ġif", "Ġthey", "Ġare", "Ġidentical", ",", "Ġor", "Ġfalse", ".", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġbool", "Ġis", "Identical", "(", "TreeNode", "*", "Ġa", ",", "ĠTreeNode", "*", "Ġb", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠWrite", "Ġyour", "Ġcode", "Ġhere", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġrt", "_", "identical", "_", "flag", "=", "false", ";", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "a", "==", "NULL", "Ġand", "Ġb", "==", "NULL", ")", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ((", "a", "==", "NULL", "Ġand", "Ġb", "!=", "NULL", ")", "Ġor", "Ġ(", "a", "!=", "NULL", "Ġand", "Ġb", "==", "NULL", "))", "Ġreturn", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ((", "a", "->", "val", "Ġ==", "Ġb", "->", "Ġval", "))", "Ġrt", "_", "identical", "_", "flag", "=", "true", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ġreturn", "Ġfalse", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġrt", "_", "identical", "_", "flag", "Ġ=", "Ġrt", "_", "identical", "_", "flag", "Ġand", "Ġis", "Identical", "(", "a", "->", "left", ",", "b", "->", "left", ")", "Ġand", "Ġis", "Identical", "(", "a", "->", "right", ",", "b", "->", "right", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġrt", "_", "identical", "_", "flag", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "//", "ĠTotal", "ĠRuntime", ":", "Ġ28", "Ġms"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::652", "code": "#pragma once\n#include <memory>\n#include <string>\n#include <vector>\n\n#include <opencv2/opencv.hpp>\n\nclass RandomSubImage\n{\n\tpublic:\n\t\tRandomSubImage(const cv::RNG &rng, const std::vector<std::string> &fileNames);\n\n\t\tcv::Mat get (double ar, double minPercent);\n\n\tprivate:\n\t\tcv::RNG rng_;\n\t\tstd::vector<std::string> fileNames_;\n\t\tstd::vector<std::shared_ptr<cv::Mat>> images_;\n};\n\n\n\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "open", "cv", "2", "/", "open", "cv", ".", "hpp", ">", "Ċ", "Ċ", "class", "ĠRandom", "Sub", "Image", "Ċ", "{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "Random", "Sub", "Image", "(", "const", "Ġcv", "::", "RNG", "Ġ&", "rng", ",", "Ġconst", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġ&", "file", "Names", ");", "Ċ", "Ċ", "ĉ", "ĉ", "cv", "::", "Mat", "Ġget", "Ġ(", "double", "Ġar", ",", "Ġdouble", "Ġmin", "Percent", ");", "Ċ", "Ċ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "cv", "::", "RNG", "Ġrng", "_;", "Ċ", "ĉ", "ĉ", "std", "::", "vector", "<", "std", "::", "string", ">", "Ġfile", "Names", "_;", "Ċ", "ĉ", "ĉ", "std", "::", "vector", "<", "std", "::", "shared", "_", "ptr", "<", "cv", "::", "Mat", ">>", "Ġimages", "_;", "Ċ", "};", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::653", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint tab[100000][17];\n\t\n\tfor(int i=0; i<n; i++)\n\t\tfor(int j=0; 1<<j < n; j++)\n\t\t\ttab[i][j]=-1;\n\n\tfor(int i=0; i<n; i++)\n\t\ttab[i][0] = t[i];\n\n\tfor(int j=1; i<<j < n; j++)\n\t\tfor(i=0; i < n; i++)\n\t\t\tif(tab[i][j-1] != -1)\n\t\t\t\ttab[i][j] = tab[tab[i][j-1]][j-1];\n}\n\nint query(int n, int tab[100000][17], int t[100000], int l[100000], int p, int q){\n\tint temp;\n\tif(l[p] < l[q])\n\t\tswap(p,q);\n\tfor(int lg = 1; 1<<lg <= l[p]; lg++);\n\tlg--;\n\n\tfor(int i=lg; i>=0; i--)\n\t\tif(l[p] - (1<<i) >= l[q])\n\t\t\tp = tab[p][i];\n\n\tif(p==q)\treturn p;\n\n\tfor(int i=lg; i>=0; i--){\n\t\tif(tab[p][i]!=-1 && tab[p][i] != tab[q][i]){\n\t\t\tp = tab[p][i];\n\t\t\tq = tab[q][i];\n\t\t}\n\t}\n\n\treturn t[p];\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "int", "Ġn", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", ";", "Ċ", "ĉ", "int", "Ġtab", "[", "100000", "][", "17", "];", "Ċ", "ĉĊ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġj", "=", "0", ";", "Ġ1", "<<", "j", "Ġ<", "Ġn", ";", "Ġj", "++)", "Ċ", "ĉĉ", "ĉ", "tab", "[", "i", "][", "j", "]=", "-", "1", ";", "Ċ", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "tab", "[", "i", "][", "0", "]", "Ġ=", "Ġt", "[", "i", "];", "Ċ", "Ċ", "ĉ", "for", "(", "int", "Ġj", "=", "1", ";", "Ġi", "<<", "j", "Ġ<", "Ġn", ";", "Ġj", "++)", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ċ", "ĉĉ", "ĉ", "if", "(", "tab", "[", "i", "][", "j", "-", "1", "]", "Ġ!=", "Ġ-", "1", ")", "Ċ", "ĉĉĉ", "ĉ", "tab", "[", "i", "][", "j", "]", "Ġ=", "Ġtab", "[", "tab", "[", "i", "][", "j", "-", "1", "]][", "j", "-", "1", "];", "Ċ", "}", "Ċ", "Ċ", "int", "Ġquery", "(", "int", "Ġn", ",", "Ġint", "Ġtab", "[", "100000", "][", "17", "],", "Ġint", "Ġt", "[", "100000", "],", "Ġint", "Ġl", "[", "100000", "],", "Ġint", "Ġp", ",", "Ġint", "Ġq", "){", "Ċ", "ĉ", "int", "Ġtemp", ";", "Ċ", "ĉ", "if", "(", "l", "[", "p", "]", "Ġ<", "Ġl", "[", "q", "])", "Ċ", "ĉ", "ĉ", "swap", "(", "p", ",", "q", ");", "Ċ", "ĉ", "for", "(", "int", "Ġlg", "Ġ=", "Ġ1", ";", "Ġ1", "<<", "lg", "Ġ<=", "Ġl", "[", "p", "];", "Ġlg", "++);", "Ċ", "ĉ", "lg", "--;", "Ċ", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "lg", ";", "Ġi", ">=", "0", ";", "Ġi", "--)", "Ċ", "ĉ", "ĉ", "if", "(", "l", "[", "p", "]", "Ġ-", "Ġ(", "1", "<<", "i", ")", "Ġ>=", "Ġl", "[", "q", "])", "Ċ", "ĉĉ", "ĉ", "p", "Ġ=", "Ġtab", "[", "p", "][", "i", "];", "Ċ", "Ċ", "ĉ", "if", "(", "p", "==", "q", ")", "ĉ", "return", "Ġp", ";", "Ċ", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "lg", ";", "Ġi", ">=", "0", ";", "Ġi", "--){", "Ċ", "ĉ", "ĉ", "if", "(", "tab", "[", "p", "][", "i", "]", "!=-", "1", "Ġ&&", "Ġtab", "[", "p", "][", "i", "]", "Ġ!=", "Ġtab", "[", "q", "][", "i", "]){", "Ċ", "ĉĉ", "ĉ", "p", "Ġ=", "Ġtab", "[", "p", "][", "i", "];", "Ċ", "ĉĉ", "ĉ", "q", "Ġ=", "Ġtab", "[", "q", "][", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġt", "[", "p", "];", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::654", "code": "#include <tv/configtv.h>\n#include <tv.h>\n\n#ifdef TVOSf_BBOS10\n\n#include <SDL_console.h>\n#include <tv/qnx/screen.h>\n#include <tv/qnx/mouse.h>\n\nvoid THWMouseQNX::GetEvent(MouseEventType &me) {\n    me.where.x = SDL_console_get_mouse_x();\n    me.where.y = SDL_console_get_mouse_y();\n    unsigned char buttonState = SDL_console_get_mouse_button();\n    switch(buttonState) {\n    case 1:\n        me.buttons = mbLeftButton;\n        break;\n    case 2:\n        me.buttons = mbRightButton;\n        break;\n    case 3:\n        me.buttons = mbLeftButton | mbRightButton;\n        break;\n    default:\n        me.buttons = 0;\n        break;\n    }\n    me.doubleClick = false;\n}\n\nvoid THWMouseQNX::Init() {\n    noMouse = false;\n    oldButtonCount = buttonCount = 2;\n    THWMouse::GetEvent = THWMouseQNX::GetEvent;\n    Resume();\n}\n\n#else\n\n#include <tv/qnx/screen.h>\n#include <tv/qnx/mouse.h>\n\n#endif\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "tv", "/", "config", "tv", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "tv", ".", "h", ">", "Ċ", "Ċ", "#", "ifdef", "ĠTV", "OS", "f", "_", "BB", "OS", "10", "Ċ", "Ċ", "#", "include", "Ġ<", "SDL", "_", "console", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "tv", "/", "q", "nx", "/", "screen", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "tv", "/", "q", "nx", "/", "mouse", ".", "h", ">", "Ċ", "Ċ", "void", "ĠTH", "W", "Mouse", "Q", "NX", "::", "GetEvent", "(", "Mouse", "EventType", "Ġ&", "me", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġme", ".", "where", ".", "x", "Ġ=", "ĠSDL", "_", "console", "_", "get", "_", "mouse", "_", "x", "();", "Ċ", "ĠĠĠ", "Ġme", ".", "where", ".", "y", "Ġ=", "ĠSDL", "_", "console", "_", "get", "_", "mouse", "_", "y", "();", "Ċ", "ĠĠĠ", "Ġunsigned", "Ġchar", "Ġbutton", "State", "Ġ=", "ĠSDL", "_", "console", "_", "get", "_", "mouse", "_", "button", "();", "Ċ", "ĠĠĠ", "Ġswitch", "(", "button", "State", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġcase", "Ġ1", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġme", ".", "buttons", "Ġ=", "Ġmb", "LeftButton", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "Ġ2", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġme", ".", "buttons", "Ġ=", "Ġmb", "Right", "Button", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġcase", "Ġ3", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġme", ".", "buttons", "Ġ=", "Ġmb", "LeftButton", "Ġ|", "Ġmb", "Right", "Button", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġdefault", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġme", ".", "buttons", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġme", ".", "double", "Click", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTH", "W", "Mouse", "Q", "NX", "::", "Init", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġno", "Mouse", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠ", "Ġold", "Button", "Count", "Ġ=", "Ġbutton", "Count", "Ġ=", "Ġ2", ";", "Ċ", "ĠĠĠ", "ĠTH", "W", "Mouse", "::", "GetEvent", "Ġ=", "ĠTH", "W", "Mouse", "Q", "NX", "::", "GetEvent", ";", "Ċ", "ĠĠĠ", "ĠResume", "();", "Ċ", "}", "Ċ", "Ċ", "#", "else", "Ċ", "Ċ", "#", "include", "Ġ<", "tv", "/", "q", "nx", "/", "screen", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "tv", "/", "q", "nx", "/", "mouse", ".", "h", ">", "Ċ", "Ċ", "#", "endif", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::655", "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\n//#include<vector>\n#include<algorithm>\n\n#define U_DEBUG\n#define L_JUDGE\n\n#ifdef L_JUDGE\n#pragma warning(disable:4996)\n#endif\n\nusing namespace std;\ntypedef long long int LL;\nconst int MAXN=6e6;\nconst int MODU=1e8+7;\n\nbool isPrime[MODU];\nint primeList[MAXN];\nint pcnt;\n\n\n\nLL Solve(int n){\n    LL ans=1;\n    memset(isPrime,true,sizeof(isPrime));\n    pcnt=0;\n    for(int i=2;i<=n;i++){\n        if(isPrime[i]){\n            primeList[pcnt++]=i;\n            LL tmp=i;\n            while(tmp<=n)tmp*=i;\n            tmp/=i;\n            ans=ans*tmp%MODU;\n        }\n        for(int pi=0;pi<pcnt;pi++){\n            LL tmp=primeList[pi]*i;\n            if(tmp>n)break;\n            isPrime[tmp]=false;\n            if(i%primeList[pi]==0)break;\n        }\n    }\n    return ans;\n}\n\nint main(){\n\t#ifdef L_JUDGE\n\t\tfreopen(\"in.txt\",\"r\",stdin);\n//\t\tfreopen(\"out.txt\",\"w\",stdout);\n\t#endif\n    int n;\n    cin>>n;\n\n    LL ans=Solve(n);\n    cout<<ans<<endl;\n\n\t#ifdef L_JUDGE\n\t\tfclose(stdin);\n\t\tfclose(stdout);\n//\t\tsystem(\"out.txt\");\n\t#endif\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "i", "ostream", ">", "Ċ", "#", "include", "<", "c", "stdio", ">", "Ċ", "#", "include", "<", "cstring", ">", "Ċ", "//#", "include", "<", "vector", ">", "Ċ", "#", "include", "<", "algorithm", ">", "Ċ", "Ċ", "#", "define", "ĠU", "_", "DEBUG", "Ċ", "#", "define", "ĠL", "_", "J", "UD", "GE", "Ċ", "Ċ", "#", "ifdef", "ĠL", "_", "J", "UD", "GE", "Ċ", "#", "pragma", "Ġwarning", "(", "disable", ":", "4", "996", ")", "Ċ", "#", "endif", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "typedef", "Ġlong", "Ġlong", "Ġint", "ĠLL", ";", "Ċ", "const", "Ġint", "ĠMAX", "N", "=", "6", "e", "6", ";", "Ċ", "const", "Ġint", "ĠMOD", "U", "=", "1", "e", "8", "+", "7", ";", "Ċ", "Ċ", "bool", "Ġis", "Prime", "[", "MOD", "U", "];", "Ċ", "int", "Ġprime", "List", "[", "MAX", "N", "];", "Ċ", "int", "Ġp", "cnt", ";", "Ċ", "Ċ", "Ċ", "Ċ", "LL", "ĠSolve", "(", "int", "Ġn", "){", "Ċ", "ĠĠĠ", "ĠLL", "Ġans", "=", "1", ";", "Ċ", "ĠĠĠ", "Ġmemset", "(", "is", "Prime", ",", "true", ",", "sizeof", "(", "is", "Prime", "));", "Ċ", "ĠĠĠ", "Ġp", "cnt", "=", "0", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "2", ";", "i", "<=", "n", ";", "i", "++){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "is", "Prime", "[", "i", "]){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprime", "List", "[", "pc", "nt", "++]=", "i", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠLL", "Ġtmp", "=", "i", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġwhile", "(", "tmp", "<=", "n", ")", "tmp", "*=", "i", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtmp", "/=", "i", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġans", "=", "ans", "*", "tmp", "%", "MOD", "U", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġpi", "=", "0", ";", "pi", "<", "pc", "nt", ";", "pi", "++){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠLL", "Ġtmp", "=", "prime", "List", "[", "pi", "]*", "i", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "tmp", ">", "n", ")", "break", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġis", "Prime", "[", "tmp", "]=", "false", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "i", "%", "prime", "List", "[", "pi", "]==", "0", ")", "break", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġans", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "#", "ifdef", "ĠL", "_", "J", "UD", "GE", "Ċ", "ĉ", "ĉ", "fre", "open", "(\"", "in", ".", "txt", "\",\"", "r", "\",", "stdin", ");", "Ċ", "//", "ĉ", "ĉ", "fre", "open", "(\"", "out", ".", "txt", "\",\"", "w", "\",", "stdout", ");", "Ċ", "ĉ", "#", "endif", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġcin", ">>", "n", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠLL", "Ġans", "=", "Solve", "(", "n", ");", "Ċ", "ĠĠĠ", "Ġcout", "<<", "ans", "<<", "endl", ";", "Ċ", "Ċ", "ĉ", "#", "ifdef", "ĠL", "_", "J", "UD", "GE", "Ċ", "ĉ", "ĉ", "fclose", "(", "stdin", ");", "Ċ", "ĉ", "ĉ", "fclose", "(", "stdout", ");", "Ċ", "//", "ĉ", "ĉ", "system", "(\"", "out", ".", "txt", "\");", "Ċ", "ĉ", "#", "endif", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::656", "code": "#include \"../../StdAfx.h\"\n#include \"PlaylistView_MfcProxy.h\"\n#include \"PlaylistView_Win.h\"\n\nBEGIN_MESSAGE_MAP(PlaylistViewMfcProxy, CWnd)\n  ON_WM_CREATE()\n  ON_WM_SIZE()\nEND_MESSAGE_MAP()\n\nPlaylistView* PlaylistViewMfcProxy::GetView()\n{\n  return m_view.get();\n}\n\nBOOL PlaylistViewMfcProxy::Create(CWnd* pParentWnd)\n{\n  if(!CSizingControlBarG::Create(_T(\"Playlist\"), pParentWnd, 0))\n    return FALSE;\n\n  return TRUE;\n}\n\nint PlaylistViewMfcProxy::OnCreate(LPCREATESTRUCT lpcs)\n{\n  m_view.reset(new PlaylistView());\n  m_view->Create(m_hWnd);\n  return 0;\n}\n\nvoid PlaylistViewMfcProxy::OnSize(UINT nType, int cx, int cy)\n{\n  CSizingControlBarG::OnSize(nType, cx, cy);\n  // some kind of weird CSizingControlBarG mechanism that needs\n  // 2x2 offset deflate\n  m_view->SetWindowPos(NULL, 2, 2, cx-4, cy-4, SWP_NOZORDER);\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "../../", "Std", "Afx", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Play", "listView", "_", "M", "fc", "Proxy", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Play", "listView", "_", "Win", ".", "h", "\"", "Ċ", "Ċ", "BEGIN", "_", "MESSAGE", "_", "MAP", "(", "Play", "listView", "M", "fc", "Proxy", ",", "ĠC", "Wnd", ")", "Ċ", "Ġ", "ĠON", "_", "WM", "_", "CREATE", "()", "Ċ", "Ġ", "ĠON", "_", "WM", "_", "SIZE", "()", "Ċ", "END", "_", "MESSAGE", "_", "MAP", "()", "Ċ", "Ċ", "Play", "listView", "*", "ĠPlay", "listView", "M", "fc", "Proxy", "::", "GetView", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġm", "_", "view", ".", "get", "();", "Ċ", "}", "Ċ", "Ċ", "BOOL", "ĠPlay", "listView", "M", "fc", "Proxy", "::", "Create", "(", "C", "Wnd", "*", "ĠpParent", "Wnd", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "(!", "CS", "izing", "Control", "Bar", "G", "::", "Create", "(_", "T", "(\"", "Playlist", "\"),", "ĠpParent", "Wnd", ",", "Ġ0", "))", "Ċ", "ĠĠĠ", "Ġreturn", "ĠFALSE", ";", "Ċ", "Ċ", "Ġ", "Ġreturn", "ĠTRUE", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠPlay", "listView", "M", "fc", "Proxy", "::", "OnCreate", "(", "LPC", "RE", "ATE", "STRUCT", "Ġl", "pcs", ")", "Ċ", "{", "Ċ", "Ġ", "Ġm", "_", "view", ".", "reset", "(", "new", "ĠPlay", "listView", "());", "Ċ", "Ġ", "Ġm", "_", "view", "->", "Create", "(", "m", "_", "hWnd", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPlay", "listView", "M", "fc", "Proxy", "::", "On", "Size", "(", "UINT", "Ġn", "Type", ",", "Ġint", "Ġcx", ",", "Ġint", "Ġcy", ")", "Ċ", "{", "Ċ", "Ġ", "ĠCS", "izing", "Control", "Bar", "G", "::", "On", "Size", "(", "n", "Type", ",", "Ġcx", ",", "Ġcy", ");", "Ċ", "Ġ", "Ġ//", "Ġsome", "Ġkind", "Ġof", "Ġweird", "ĠCS", "izing", "Control", "Bar", "G", "Ġmechanism", "Ġthat", "Ġneeds", "Ċ", "Ġ", "Ġ//", "Ġ2", "x", "2", "Ġoffset", "Ġdeflate", "Ċ", "Ġ", "Ġm", "_", "view", "->", "SetWindow", "Pos", "(", "NULL", ",", "Ġ2", ",", "Ġ2", ",", "Ġcx", "-", "4", ",", "Ġcy", "-", "4", ",", "ĠSWP", "_", "NO", "Z", "ORDER", ");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::657", "code": "#include <queue>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <errno.h>\n#include <string.h>\n#include <pthread.h>\n\n#include \"tqnode.hh\"\n#include \"util.hh\"\n//#include \"utildefs.hh\"\n\n\nusing namespace std;\n\nclass Taudioq {\n\tUtil* util;\n\tqueue<TQNode> aq;\n\tpthread_mutex_t qmut;\n\tTQNode overflow;\n\tvolatile bool overflowed;\npublic:\n\tTaudioq(Util* util);\n\tvoid enq(char *data, size_t datalen, long fileindex, long blockindex, int samplerate=SAMPLE_RATE, int nchannels=NUM_CHANNELS, string fname=\"\", long trackSampleCount=0, bool doBoost=false, SAMPLE maxsamp=0, SAMPLE amaxsamp=0);\n\tTQNode deq(int expectSize);\n};\n", "code_tokens": ["Ġ#", "include", "Ġ<", "queue", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "errno", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "pthread", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "tq", "node", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "util", ".", "hh", "\"", "Ċ", "//#", "include", "Ġ\"", "util", "defs", ".", "hh", "\"", "Ċ", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠT", "audio", "q", "Ġ{", "Ċ", "ĉ", "Util", "*", "Ġutil", ";", "Ċ", "ĉ", "queue", "<", "TQ", "Node", ">", "Ġaq", ";", "Ċ", "ĉ", "pthread", "_", "mutex", "_", "t", "Ġq", "mut", ";", "Ċ", "ĉ", "TQ", "Node", "Ġoverflow", ";", "Ċ", "ĉ", "volatile", "Ġbool", "Ġoverflow", "ed", ";", "Ċ", "public", ":", "Ċ", "ĉ", "T", "audio", "q", "(", "Util", "*", "Ġutil", ");", "Ċ", "ĉ", "void", "Ġen", "q", "(", "char", "Ġ*", "data", ",", "Ġsize", "_", "t", "Ġdatalen", ",", "Ġlong", "Ġfile", "index", ",", "Ġlong", "Ġblock", "index", ",", "Ġint", "Ġsampler", "ate", "=", "SAMPLE", "_", "RATE", ",", "Ġint", "Ġn", "channels", "=", "NUM", "_", "CHANNELS", ",", "Ġstring", "Ġfname", "=\"\",", "Ġlong", "Ġtrack", "SampleCount", "=", "0", ",", "Ġbool", "Ġdo", "Boost", "=", "false", ",", "ĠSAMPLE", "Ġmax", "samp", "=", "0", ",", "ĠSAMPLE", "Ġam", "ax", "samp", "=", "0", ");", "Ċ", "ĉ", "TQ", "Node", "Ġde", "q", "(", "int", "Ġexpect", "Size", ");", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::658", "code": "\r\n#include \"Defines.h\"\r\nvoid fsqrt(float *a, float *b, float *c, float *d)\r\n{\r\n\t/*asm(\r\n\t \"fsqrt fr0,%0\"\r\n\t : \"=&r\"(*a)\r\n\t );*/\r\n}\r\nvoid fsqrtRC(float *a, float *b, float *c, float *d)\r\n{\r\n\t/*asm(\r\n\t\t\"fsqrt. fr0,%0\"\r\n\t\t: \"=&r\"(*a)\r\n\t\t);*/\r\n}\r\n", "code_tokens": ["č", "Ċ", "#", "include", "Ġ\"", "Defines", ".", "h", "\"", "č", "Ċ", "void", "Ġf", "sqrt", "(", "float", "Ġ*", "a", ",", "Ġfloat", "Ġ*", "b", ",", "Ġfloat", "Ġ*", "c", ",", "Ġfloat", "Ġ*", "d", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "/*", "asm", "(", "č", "Ċ", "ĉ", "Ġ\"", "fs", "qrt", "Ġfr", "0", ",%", "0", "\"", "č", "Ċ", "ĉ", "Ġ:", "Ġ\"=", "&", "r", "\"", "(*", "a", ")", "č", "Ċ", "ĉ", "Ġ);", "*/", "č", "Ċ", "}", "č", "Ċ", "void", "Ġf", "sqrt", "RC", "(", "float", "Ġ*", "a", ",", "Ġfloat", "Ġ*", "b", ",", "Ġfloat", "Ġ*", "c", ",", "Ġfloat", "Ġ*", "d", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "/*", "asm", "(", "č", "Ċ", "ĉ", "ĉ", "\"", "fs", "qrt", ".", "Ġfr", "0", ",%", "0", "\"", "č", "Ċ", "ĉ", "ĉ", ":", "Ġ\"=", "&", "r", "\"", "(*", "a", ")", "č", "Ċ", "ĉ", "ĉ", ");*/", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::659", "code": "/*\n   LK8000 Tactical Flight Computer -  WWW.LK8000.IT\n   Released under GNU/GPL License v.2 or later\n   See CREDITS.TXT file for authors and copyrights\n\n   $Id$\n*/\n\n#include \"externs.h\"\n#include \"Logger.h\"\n#include \"McReady.h\"\n#include \"Calc/Vario.h\"\n\nvoid NettoVario(NMEA_INFO *Basic, DERIVED_INFO *Calculated) {\n\n  if (!Calculated->Flying) {\n    Calculated->NettoVario = 0.0;\n    return;\n  }\n\n  // get load factor\n  const double GLoad = (Basic->AccelerationAvailable)\n          ? fabs(Basic->AccelZ)\n          : fabs(Calculated->Gload);\n\n  // calculate sink rate of glider for calculating netto vario\n  const bool replay_disabled = !ReplayLogger::IsEnabled();\n\n  const double ias = (Basic->AirspeedAvailable && replay_disabled)\n          ? Basic->IndicatedAirspeed\n          : Calculated->IndicatedAirspeedEstimated;\n\n  const double glider_sink_rate = AirDensitySinkRate(std::max(GlidePolar::Vminsink(), ias), Basic->Altitude, GLoad);\n  Calculated->GliderSinkRate = glider_sink_rate;\n\n  if (Basic->NettoVarioAvailable && replay_disabled) {\n    Calculated->NettoVario = Basic->NettoVario;\n  }\n  else if (VarioAvailable(*Basic) && replay_disabled) {\n    Calculated->NettoVario = Basic->Vario - glider_sink_rate;\n  }\n  else {\n    Calculated->NettoVario = Calculated->Vario - glider_sink_rate;\n  }\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠ", "ĠL", "K", "8000", "ĠT", "act", "ical", "ĠF", "light", "ĠComput", "er", "Ġ-", "Ġ", "ĠW", "WW", ".", "LK", "8000", ".", "IT", "Ċ", "ĠĠ", "ĠRelease", "d", "Ġunder", "ĠGNU", "/", "G", "PL", "ĠLicense", "Ġv", ".", "2", "Ġor", "Ġlater", "Ċ", "ĠĠ", "ĠSee", "ĠCRE", "DIT", "S", ".", "TXT", "Ġfile", "Ġfor", "Ġauthors", "Ġand", "Ġcopy", "rights", "Ċ", "Ċ", "ĠĠ", "Ġ$", "Id", "$", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "extern", "s", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Logger", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Mc", "Ready", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Calc", "/", "Var", "io", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠNet", "to", "Var", "io", "(", "N", "MEA", "_", "INFO", "Ġ*", "Basic", ",", "ĠDER", "IVED", "_", "INFO", "Ġ*", "Calculated", ")", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(!", "Calculated", "->", "F", "lying", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠCalcul", "ated", "->", "Net", "to", "Var", "io", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "ĠĠĠ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġget", "Ġload", "Ġfactor", "Ċ", "Ġ", "Ġconst", "Ġdouble", "ĠG", "Load", "Ġ=", "Ġ(", "Basic", "->", "Acceleration", "Available", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ?", "Ġfabs", "(", "Basic", "->", "Accel", "Z", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ:", "Ġfabs", "(", "Calculated", "->", "G", "load", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġcalculate", "Ġsink", "Ġrate", "Ġof", "Ġgl", "ider", "Ġfor", "Ġcalculating", "Ġnet", "to", "Ġvar", "io", "Ċ", "Ġ", "Ġconst", "Ġbool", "Ġreplay", "_", "disabled", "Ġ=", "Ġ!", "Replay", "Logger", "::", "IsEnabled", "();", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġdouble", "Ġi", "as", "Ġ=", "Ġ(", "Basic", "->", "Air", "speed", "Available", "Ġ&&", "Ġreplay", "_", "disabled", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ?", "ĠBasic", "->", "Ind", "icated", "Air", "speed", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ:", "ĠCalcul", "ated", "->", "Ind", "icated", "Air", "speed", "Est", "imated", ";", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġdouble", "Ġgl", "ider", "_", "sink", "_", "rate", "Ġ=", "ĠAir", "Density", "Sink", "Rate", "(", "std", "::", "max", "(", "G", "lide", "Polar", "::", "V", "min", "sink", "(),", "Ġi", "as", "),", "ĠBasic", "->", "Altitude", ",", "ĠG", "Load", ");", "Ċ", "Ġ", "ĠCalcul", "ated", "->", "Gl", "ider", "Sink", "Rate", "Ġ=", "Ġgl", "ider", "_", "sink", "_", "rate", ";", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "Basic", "->", "Net", "to", "Var", "io", "Available", "Ġ&&", "Ġreplay", "_", "disabled", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠCalcul", "ated", "->", "Net", "to", "Var", "io", "Ġ=", "ĠBasic", "->", "Net", "to", "Var", "io", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ġif", "Ġ(", "Var", "io", "Available", "(*", "Basic", ")", "Ġ&&", "Ġreplay", "_", "disabled", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠCalcul", "ated", "->", "Net", "to", "Var", "io", "Ġ=", "ĠBasic", "->", "Var", "io", "Ġ-", "Ġgl", "ider", "_", "sink", "_", "rate", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "ĠCalcul", "ated", "->", "Net", "to", "Var", "io", "Ġ=", "ĠCalcul", "ated", "->", "Var", "io", "Ġ-", "Ġgl", "ider", "_", "sink", "_", "rate", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::660", "code": "/*\n  cpu-timer.hh -- declare Cpu_timer\n\n  source file of the Flower Library\n\n  (c) 1997--2007 Han-Wen Nienhuys <hanwen@xs4all.nl>\n*/\n\n#ifndef CPU_TIMER_HH\n#define CPU_TIMER_HH\n\n#include <ctime>\nusing namespace std;\n\n#include \"real.hh\"\n\nclass Cpu_timer\n{\n  clock_t start_clock_;\npublic:\n  Cpu_timer ();\n  void restart ();\n  Real read ();\n};\n\n#endif // CPU_TIMER_HH\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "Ġcpu", "-", "timer", ".", "hh", "Ġ--", "Ġdeclare", "ĠC", "pu", "_", "timer", "Ċ", "Ċ", "Ġ", "Ġsource", "Ġfile", "Ġof", "Ġthe", "ĠF", "lower", "ĠLibrary", "Ċ", "Ċ", "Ġ", "Ġ(", "c", ")", "Ġ199", "7", "--", "2007", "ĠH", "an", "-", "W", "en", "ĠN", "ien", "hu", "ys", "Ġ<", "han", "w", "en", "@", "xs", "4", "all", ".", "nl", ">", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠCPU", "_", "TIMER", "_", "HH", "Ċ", "#", "define", "ĠCPU", "_", "TIMER", "_", "HH", "Ċ", "Ċ", "#", "include", "Ġ<", "ctime", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "include", "Ġ\"", "real", ".", "hh", "\"", "Ċ", "Ċ", "class", "ĠC", "pu", "_", "timer", "Ċ", "{", "Ċ", "Ġ", "Ġclock", "_", "t", "Ġstart", "_", "clock", "_;", "Ċ", "public", ":", "Ċ", "Ġ", "ĠC", "pu", "_", "timer", "Ġ();", "Ċ", "Ġ", "Ġvoid", "Ġrestart", "Ġ();", "Ċ", "Ġ", "ĠReal", "Ġread", "Ġ();", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠCPU", "_", "TIMER", "_", "HH", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::661", "code": "#include \"frame_rate.h\"\n\n#include <iostream>\n#include <cmath>\n\n#include \"../scgraph.h\"\n\nextern \"C\"\n{\n\tGUnit *create (size_t index, int special_index)\n\t{\n\t\treturn (GUnit*) new FrameRate (); \n\t}\n\n\tsize_t get_num_of_units ()\n\t{\n\t\treturn 1;\n\t}\n\n\tconst char *get_unit_name (size_t index)\n\t{\n\t\tif (index == 0)\n\t\t\treturn \"FrameRate\";\n\t\telse\n\t\t\treturn 0;\n\t}\n}\n\n\nFrameRate::FrameRate ()\n{\n\n}\n\nFrameRate::~FrameRate ()\n{\n\t// std::cout << \"[FrameRate]: Destructor\" << std::endl;\n}\n\nvoid FrameRate::process_c (double delta_t)\n{\n\t_control_outs[0] = 1.0/ScGraph::get_instance()->_delta_t;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "frame", "_", "rate", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "Ċ", "#", "include", "Ġ\"../", "sc", "graph", ".", "h", "\"", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ċ", "{", "Ċ", "ĉ", "G", "Unit", "Ġ*", "create", "Ġ(", "size", "_", "t", "Ġindex", ",", "Ġint", "Ġspecial", "_", "index", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġ(", "G", "Unit", "*)", "Ġnew", "ĠFrame", "Rate", "Ġ();", "ĠĊ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "size", "_", "t", "Ġget", "_", "num", "_", "of", "_", "units", "Ġ()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "const", "Ġchar", "Ġ*", "get", "_", "unit", "_", "name", "Ġ(", "size", "_", "t", "Ġindex", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "index", "Ġ==", "Ġ0", ")", "Ċ", "ĉĉ", "ĉ", "return", "Ġ\"", "FrameRate", "\";", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "Ċ", "FrameRate", "::", "FrameRate", "Ġ()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "FrameRate", "::~", "FrameRate", "Ġ()", "Ċ", "{", "Ċ", "ĉ", "//", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"[", "FrameRate", "]:", "ĠDestructor", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFrame", "Rate", "::", "process", "_", "c", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "ĉ", "_", "control", "_", "outs", "[", "0", "]", "Ġ=", "Ġ1", ".", "0", "/", "Sc", "Graph", "::", "get", "_", "instance", "()", "->_", "delta", "_", "t", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::662", "code": "#include \"Explosion.hpp\"\n\nExplosion::Explosion(){\n    ticks = 20 ;\n    team = EXPLOSION ;\n}\n\nExplosion::Explosion(std::string texturePath, const Point &origine, const sf::IntRect &box, const bool &solid, const bool &visible, const int _tick):\n    Object(texturePath, origine, box, solid, visible), ticks(_tick){\n        team = EXPLOSION ;\n}\n\nvoid Explosion::inCollide(Object* obj){\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Exp", "losion", ".", "hpp", "\"", "Ċ", "Ċ", "Exp", "losion", "::", "Exp", "losion", "(){", "Ċ", "ĠĠĠ", "Ġticks", "Ġ=", "Ġ20", "Ġ;", "Ċ", "ĠĠĠ", "Ġteam", "Ġ=", "ĠEXP", "LO", "SION", "Ġ;", "Ċ", "}", "Ċ", "Ċ", "Exp", "losion", "::", "Exp", "losion", "(", "std", "::", "string", "Ġtexture", "Path", ",", "Ġconst", "ĠPoint", "Ġ&", "orig", "ine", ",", "Ġconst", "Ġsf", "::", "Int", "Rect", "Ġ&", "box", ",", "Ġconst", "Ġbool", "Ġ&", "solid", ",", "Ġconst", "Ġbool", "Ġ&", "visible", ",", "Ġconst", "Ġint", "Ġ_", "tick", "):", "Ċ", "ĠĠĠ", "ĠObject", "(", "texture", "Path", ",", "Ġorig", "ine", ",", "Ġbox", ",", "Ġsolid", ",", "Ġvisible", "),", "Ġticks", "(_", "tick", "){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġteam", "Ġ=", "ĠEXP", "LO", "SION", "Ġ;", "Ċ", "}", "Ċ", "Ċ", "void", "ĠExp", "losion", "::", "in", "Collide", "(", "Object", "*", "Ġobj", "){", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::663", "code": "#pragma once\n\n/*\n * This file provides a macro to terminate the program in case of fatal\n * errors, that can not be handled by throwing an exception. Most importantly\n * if a thrown exception might (to easily) cause undefined behavior.\n */\n\n\n#include \"up_insight.hpp\"\n#include \"up_source.hpp\"\n\nnamespace up_terminate\n{\n\n    [[noreturn]]\n    void terminate_aux(const up::source& source, const up::insights& insights);\n\n    template <typename... Args>\n    [[noreturn]]\n    void terminate(const up::source& source, Args&&... args)\n    {\n        terminate_aux(source,\n            up::insights{up::invoke_to_insight_with_fallback(std::forward<Args>(args))...});\n    }\n\n}\n\nnamespace up\n{\n\n    using up_terminate::terminate;\n\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġprovides", "Ġa", "Ġmacro", "Ġto", "Ġterminate", "Ġthe", "Ġprogram", "Ġin", "Ġcase", "Ġof", "Ġfatal", "Ċ", "Ġ*", "Ġerrors", ",", "Ġthat", "Ġcan", "Ġnot", "Ġbe", "Ġhandled", "Ġby", "Ġthrowing", "Ġan", "Ġexception", ".", "ĠMost", "Ġimportant", "ly", "Ċ", "Ġ*", "Ġif", "Ġa", "Ġthrown", "Ġexception", "Ġmight", "Ġ(", "to", "Ġeasily", ")", "Ġcause", "Ġundefined", "Ġbehavior", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "up", "_", "ins", "ight", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "up", "_", "source", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġup", "_", "terminate", "Ċ", "{", "Ċ", "Ċ", "ĠĠĠ", "Ġ[[", "no", "return", "]]", "Ċ", "ĠĠĠ", "Ġvoid", "Ġterminate", "_", "aux", "(", "const", "Ġup", "::", "source", "&", "Ġsource", ",", "Ġconst", "Ġup", "::", "ins", "ights", "&", "Ġins", "ights", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġtemplate", "Ġ<", "typename", "...", "ĠArgs", ">", "Ċ", "ĠĠĠ", "Ġ[[", "no", "return", "]]", "Ċ", "ĠĠĠ", "Ġvoid", "Ġterminate", "(", "const", "Ġup", "::", "source", "&", "Ġsource", ",", "ĠArgs", "&&", "...", "Ġargs", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġterminate", "_", "aux", "(", "source", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġup", "::", "ins", "ights", "{", "up", "::", "invoke", "_", "to", "_", "ins", "ight", "_", "with", "_", "fallback", "(", "std", "::", "forward", "<", "Args", ">(", "args", "))", "...", "});", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġup", "Ċ", "{", "Ċ", "Ċ", "ĠĠĠ", "Ġusing", "Ġup", "_", "terminate", "::", "terminate", ";", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::664", "code": "#include <QPainter>\n\n#include \"icon.h\"\n#include \"config.h\"\n\nFloatingIcon::FloatingIcon( const QString &icon, QMenu *popup, QWidget *parent, const char *name)\n        : QDialog( parent ), icon(icon) {\n    this->setObjectName(name);\n    setAttribute(Qt::WA_QuitOnClose);\n    setAttribute(Qt::WA_TranslucentBackground);\n    setWindowFlags(Qt::FramelessWindowHint);\n    setWindowTitle(tr(\"%1 Floating Icon\").arg(QJOYPAD_NAME));\n    pop = popup;\n\n    setFixedSize(this->icon.width(),this->icon.height());\n}\n\nvoid FloatingIcon::mousePressEvent( QMouseEvent* event ) {\n    //if it was the right mouse button,\n    if (event->button() == Qt::RightButton) {\n        //bring up the popup menu.\n        pop->popup( event->globalPos() );\n        event->accept();\n    }\n    else {\n        //otherwise, treat it as a regular click.\n        emit clicked();\n    }\n}\n\nvoid FloatingIcon::paintEvent( QPaintEvent* ) {\n    QPainter painter(this);\n    painter.drawPixmap(0, 0, icon);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "QPainter", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "icon", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "config", ".", "h", "\"", "Ċ", "Ċ", "Floating", "Icon", "::", "Floating", "Icon", "(", "Ġconst", "ĠQString", "Ġ&", "icon", ",", "ĠQ", "Menu", "Ġ*", "popup", ",", "ĠQWidget", "Ġ*", "parent", ",", "Ġconst", "Ġchar", "Ġ*", "name", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ:", "ĠQDialog", "(", "Ġparent", "Ġ),", "Ġicon", "(", "icon", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "set", "ObjectName", "(", "name", ");", "Ċ", "ĠĠĠ", "ĠsetAttribute", "(", "Qt", "::", "WA", "_", "Quit", "OnClose", ");", "Ċ", "ĠĠĠ", "ĠsetAttribute", "(", "Qt", "::", "WA", "_", "Trans", "luc", "ent", "Background", ");", "Ċ", "ĠĠĠ", "Ġset", "Window", "Flags", "(", "Qt", "::", "Frame", "less", "Window", "Hint", ");", "Ċ", "ĠĠĠ", "Ġset", "WindowTitle", "(", "tr", "(\"%", "1", "ĠFloating", "ĠIcon", "\").", "arg", "(", "Q", "JO", "YP", "AD", "_", "NAME", "));", "Ċ", "ĠĠĠ", "Ġpop", "Ġ=", "Ġpopup", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġset", "FixedSize", "(", "this", "->", "icon", ".", "width", "(),", "this", "->", "icon", ".", "height", "());", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFloating", "Icon", "::", "mouse", "PressEvent", "(", "ĠQ", "MouseEvent", "*", "Ġevent", "Ġ)", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "if", "Ġit", "Ġwas", "Ġthe", "Ġright", "Ġmouse", "Ġbutton", ",", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "event", "->", "button", "()", "Ġ==", "ĠQt", "::", "Right", "Button", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "br", "ing", "Ġup", "Ġthe", "Ġpopup", "Ġmenu", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġpop", "->", "popup", "(", "Ġevent", "->", "global", "Pos", "()", "Ġ);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġevent", "->", "accept", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "otherwise", ",", "Ġtreat", "Ġit", "Ġas", "Ġa", "Ġregular", "Ġclick", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġemit", "Ġclicked", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFloating", "Icon", "::", "paint", "Event", "(", "ĠQ", "Paint", "Event", "*", "Ġ)", "Ġ{", "Ċ", "ĠĠĠ", "ĠQPainter", "Ġpainter", "(", "this", ");", "Ċ", "ĠĠĠ", "Ġpainter", ".", "draw", "Pixmap", "(", "0", ",", "Ġ0", ",", "Ġicon", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::665", "code": "/***************************************************************************\n *   Copyright (C) 2010 by Gregor Kališnik <gregor@unimatrix-one.org>      *\n *                                                                         *\n *   This program is free software; you can redistribute it and/or modify  *\n *   it under the terms of the GNU General Public License version 3        *\n *   as published by the Free Software Foundation.                         *\n *                                                                         *\n *   This program is distributed in the hope that it will be useful,       *\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n *   GNU General Public License for more details.                          *\n ***************************************************************************/\n#include \"explosions.h\"\n\n#include <ctime>\n\n#include <QtCore/QTimer>\n\n#include \"canvas.h\"\n\n#include \"explosion.h\"\n\nExplosions::Explosions(QObject *parent)\n  : QObject(parent)\n{\n  qsrand(time(0l));\n  m_timer = new QTimer(this);\n\n  connect(m_timer, SIGNAL(timeout()), SLOT(ignite()));\n\n  ignite();\n}\n\nvoid Explosions::ignite()\n{\n  Explosion *explosion = new Explosion(Vector3f(qrand() % 100 - 50, qrand() % 100 - 50, qrand() % 100 - 50));\n  BGE::Canvas::canvas()->addSceneObject(explosion);\n\n  m_timer->start(qrand() % 1000);\n}\n", "code_tokens": ["Ġ/", "************************************************************************", "***", "Ċ", "Ġ*", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "Ġby", "ĠG", "reg", "or", "ĠK", "ali", "Å¡", "n", "ik", "Ġ<", "greg", "or", "@", "un", "im", "atrix", "-", "one", ".", "org", ">", "ĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ġ3", "ĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "ĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*************************************************************************", "**/", "Ċ", "#", "include", "Ġ\"", "exp", "los", "ions", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "ctime", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Qt", "Core", "/", "QT", "imer", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "canvas", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "exp", "losion", ".", "h", "\"", "Ċ", "Ċ", "Exp", "los", "ions", "::", "Exp", "los", "ions", "(", "QObject", "Ġ*", "parent", ")", "Ċ", "Ġ", "Ġ:", "ĠQObject", "(", "parent", ")", "Ċ", "{", "Ċ", "Ġ", "Ġq", "sr", "and", "(", "time", "(", "0", "l", "));", "Ċ", "Ġ", "Ġm", "_", "timer", "Ġ=", "Ġnew", "ĠQ", "Timer", "(", "this", ");", "Ċ", "Ċ", "Ġ", "Ġconnect", "(", "m", "_", "timer", ",", "ĠSIGNAL", "(", "timeout", "()),", "ĠSLOT", "(", "ign", "ite", "()));", "Ċ", "Ċ", "Ġ", "Ġign", "ite", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠExp", "los", "ions", "::", "ign", "ite", "()", "Ċ", "{", "Ċ", "Ġ", "ĠExp", "losion", "Ġ*", "exp", "losion", "Ġ=", "Ġnew", "ĠExp", "losion", "(", "Vector", "3", "f", "(", "q", "rand", "()", "Ġ%", "Ġ100", "Ġ-", "Ġ50", ",", "Ġq", "rand", "()", "Ġ%", "Ġ100", "Ġ-", "Ġ50", ",", "Ġq", "rand", "()", "Ġ%", "Ġ100", "Ġ-", "Ġ50", "));", "Ċ", "Ġ", "ĠB", "GE", "::", "Canvas", "::", "canvas", "()->", "add", "Scene", "Object", "(", "exp", "losion", ");", "Ċ", "Ċ", "Ġ", "Ġm", "_", "timer", "->", "start", "(", "q", "rand", "()", "Ġ%", "Ġ1000", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::666", "code": "/**\n * This file is part of scleaner project.\n\n * Copyright (C) 2007 FROUIN Jean-Michel\n\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n#include <iostream>\n#include <list>\n#include <string>\n#include \"tar_archive.h\"\n\nint main()\n{\n  int Ret;\n  CTarArchive l_tar;\n  std::string l_1(\"test.txt\");\n  std::string l_2(\"test2.txt\");\n  std::list<std::string> l_list;\n  l_list.push_back(l_1);\n  l_list.push_back(l_2);\n  bool res = l_tar.Create(l_list, \"test.tar\");\n  if(res)\n  {\n    Ret = EXIT_SUCCESS;\n  }\n  else\n  {\n    Ret = EXIT_FAILURE;\n  }\n  return Ret;\n}\n\n\n/* vi:set ts=4: */\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġsc", "lean", "er", "Ġproject", ".", "Ċ", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "ĠF", "RO", "U", "IN", "ĠJ", "e", "an", "-", "M", "ich", "el", "Ċ", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "tar", "_", "archive", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "ĠRet", ";", "Ċ", "Ġ", "ĠCT", "ar", "Archive", "Ġl", "_", "tar", ";", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġl", "_", "1", "(\"", "test", ".", "txt", "\");", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġl", "_", "2", "(\"", "test", "2", ".", "txt", "\");", "Ċ", "Ġ", "Ġstd", "::", "list", "<", "std", "::", "string", ">", "Ġl", "_", "list", ";", "Ċ", "Ġ", "Ġl", "_", "list", ".", "push", "_", "back", "(", "l", "_", "1", ");", "Ċ", "Ġ", "Ġl", "_", "list", ".", "push", "_", "back", "(", "l", "_", "2", ");", "Ċ", "Ġ", "Ġbool", "Ġres", "Ġ=", "Ġl", "_", "tar", ".", "Create", "(", "l", "_", "list", ",", "Ġ\"", "test", ".", "tar", "\");", "Ċ", "Ġ", "Ġif", "(", "res", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠRet", "Ġ=", "ĠEXIT", "_", "SUCCESS", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠRet", "Ġ=", "ĠEXIT", "_", "FAILURE", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "ĠRet", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "/*", "Ġvi", ":", "set", "Ġts", "=", "4", ":", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::667", "code": "/*! \\file\n    \\brief Declaration of the bt_utmsg_punavail_wikidbg_t\n\n*/\n\n\n#ifndef __NEOIP_BT_UTMSG_PUNAVAIL_WIKIDBG_HPP__ \n#define __NEOIP_BT_UTMSG_PUNAVAIL_WIKIDBG_HPP__ \n/* system include */\n/* local include */\n#include \"neoip_namespace.hpp\"\n\n// list of include which are almost always needed when using this one\n#include \"neoip_wikidbg_obj.hpp\"\n\nNEOIP_NAMESPACE_BEGIN;\n\n// list of forward declaration\nclass wikidbg_keyword_db_t;\n\n// declaration of the wikidbg_init_cb_t for bt_swarm_t\nvoid bt_utmsg_punavail_wikidbg_init(wikidbg_keyword_db_t &keyword_db)\tthrow();\n\n\nNEOIP_NAMESPACE_END\n\n#endif\t/* __NEOIP_BT_UTMSG_PUNAVAIL_WIKIDBG_HPP__  */\n\n\n\n", "code_tokens": ["Ġ/*", "!", "Ġ\\", "file", "Ċ", "ĠĠĠ", "Ġ\\", "brief", "ĠDeclaration", "Ġof", "Ġthe", "Ġbt", "_", "ut", "msg", "_", "p", "un", "avail", "_", "wik", "id", "bg", "_", "t", "Ċ", "Ċ", "*/", "Ċ", "Ċ", "Ċ", "#", "ifndef", "Ġ__", "NE", "O", "IP", "_", "BT", "_", "UT", "MSG", "_", "PUN", "AVAIL", "_", "WI", "K", "ID", "BG", "_", "HP", "P", "__", "Ġ", "Ċ", "#", "define", "Ġ__", "NE", "O", "IP", "_", "BT", "_", "UT", "MSG", "_", "PUN", "AVAIL", "_", "WI", "K", "ID", "BG", "_", "HP", "P", "__", "Ġ", "Ċ", "/*", "Ġsystem", "Ġinclude", "Ġ*/", "Ċ", "/*", "Ġlocal", "Ġinclude", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "ne", "o", "ip", "_", "namespace", ".", "hpp", "\"", "Ċ", "Ċ", "//", "Ġlist", "Ġof", "Ġinclude", "Ġwhich", "Ġare", "Ġalmost", "Ġalways", "Ġneeded", "Ġwhen", "Ġusing", "Ġthis", "Ġone", "Ċ", "#", "include", "Ġ\"", "ne", "o", "ip", "_", "wik", "id", "bg", "_", "obj", ".", "hpp", "\"", "Ċ", "Ċ", "NE", "O", "IP", "_", "NAMESPACE", "_", "BEGIN", ";", "Ċ", "Ċ", "//", "Ġlist", "Ġof", "Ġforward", "Ġdeclaration", "Ċ", "class", "Ġw", "ik", "id", "bg", "_", "keyword", "_", "db", "_", "t", ";", "Ċ", "Ċ", "//", "Ġdeclaration", "Ġof", "Ġthe", "Ġw", "ik", "id", "bg", "_", "init", "_", "cb", "_", "t", "Ġfor", "Ġbt", "_", "swarm", "_", "t", "Ċ", "void", "Ġbt", "_", "ut", "msg", "_", "p", "un", "avail", "_", "wik", "id", "bg", "_", "init", "(", "wik", "id", "bg", "_", "keyword", "_", "db", "_", "t", "Ġ&", "keyword", "_", "db", ")", "ĉ", "throw", "();", "Ċ", "Ċ", "Ċ", "NE", "O", "IP", "_", "NAMESPACE", "_", "END", "Ċ", "Ċ", "#", "endif", "ĉ", "/*", "Ġ__", "NE", "O", "IP", "_", "BT", "_", "UT", "MSG", "_", "PUN", "AVAIL", "_", "WI", "K", "ID", "BG", "_", "HP", "P", "__", "Ġ", "Ġ*/", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::668", "code": "#include <stdio.h>\n#include <iostream>\n\nusing namespace std;\nint f(int a, int b)\n{\n    return 0;\n}\n\nint main()\n{\n    int m = printf(\"a\");\n    int n = printf(\"b\");\n    cout<<m<<n<<endl;\n    return f(printf(\"a\"), printf(\"b\"));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġf", "(", "int", "Ġa", ",", "Ġint", "Ġb", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġm", "Ġ=", "Ġprintf", "(\"", "a", "\");", "Ċ", "ĠĠĠ", "Ġint", "Ġn", "Ġ=", "Ġprintf", "(\"", "b", "\");", "Ċ", "ĠĠĠ", "Ġcout", "<<", "m", "<<", "n", "<<", "endl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġf", "(", "printf", "(\"", "a", "\"),", "Ġprintf", "(\"", "b", "\"));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::669", "code": "//This program is free software: you can redistribute it and/or modify\n//it under the terms of the GNU Lesser General Public License as published by\n//the Free Software Foundation, either version 3 of the License, or\n//(at your option) any later version.\n\n//This program is distributed in the hope that it will be useful,\n//but WITHOUT ANY WARRANTY; without even the implied warranty of\n//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//GNU Lesser General Public License for more details.\n\n// Copyright (c) Petr Bena 2018\n\n#ifndef SCRIPTFORM_HPP\n#define SCRIPTFORM_HPP\n\n#include <huggle_core/definitions.hpp>\n#include <QDialog>\n\nnamespace Ui\n{\n    class ScriptForm;\n}\n\nnamespace Huggle\n{\n    class JSHighlighter;\n\n    class ScriptForm : public QDialog\n    {\n            Q_OBJECT\n\n        public:\n            explicit ScriptForm(QWidget *parent = nullptr);\n            ~ScriptForm();\n            void EditScript(const QString& path, const QString& script_name);\n\n        private slots:\n            void on_pushButton_2_clicked();\n            void on_pushButton_clicked();\n\n        private:\n            QString editingName;\n            bool editing = false;\n            JSHighlighter *highlighter = nullptr;\n            Ui::ScriptForm *ui;\n    };\n}\n\n#endif // SCRIPTFORM_HPP\n", "code_tokens": ["Ġ//", "This", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "This", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "but", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "MER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "GNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "ĠP", "etr", "ĠB", "ena", "Ġ201", "8", "Ċ", "Ċ", "#", "ifndef", "ĠSCRIPT", "FORM", "_", "HP", "P", "Ċ", "#", "define", "ĠSCRIPT", "FORM", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "h", "ug", "gle", "_", "core", "/", "definitions", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "Q", "Dialog", ">", "Ċ", "Ċ", "namespace", "ĠUi", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclass", "ĠScript", "Form", ";", "Ċ", "}", "Ċ", "Ċ", "namespace", "ĠH", "ug", "gle", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġclass", "ĠJ", "SH", "igh", "lighter", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġclass", "ĠScript", "Form", "Ġ:", "Ġpublic", "ĠQDialog", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġexplicit", "ĠScript", "Form", "(", "QWidget", "Ġ*", "parent", "Ġ=", "Ġnullptr", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ~", "Script", "Form", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġvoid", "ĠEdit", "Script", "(", "const", "ĠQString", "&", "Ġpath", ",", "Ġconst", "ĠQString", "&", "Ġscript", "_", "name", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprivate", "Ġslots", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġvoid", "Ġon", "_", "push", "Button", "_", "2", "_", "clicked", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġvoid", "Ġon", "_", "push", "Button", "_", "clicked", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprivate", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠQString", "Ġediting", "Name", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbool", "Ġediting", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠJ", "SH", "igh", "lighter", "Ġ*", "highlighter", "Ġ=", "Ġnullptr", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠUi", "::", "Script", "Form", "Ġ*", "ui", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠSCRIPT", "FORM", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::670", "code": "/*\n * Copyright 2011 Exavideo LLC.\n * \n * This file is part of openreplay.\n * \n * openreplay is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * openreplay is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with openreplay.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include <stdlib.h>\n#include <new>\n\nvoid *operator new(std::size_t sz) throw(std::bad_alloc) {\n    if (sz == 0) {\n        sz = 1;\n    }\n\n    void *ret = malloc(sz);\n\n    if (ret == NULL) {\n        throw std::bad_alloc( );\n    } else {\n        return ret;\n    }\n}\n\nvoid operator delete(void *ptr) throw() {\n    free(ptr);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2011", "ĠEx", "a", "video", "ĠLLC", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġopen", "replay", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "Ġopen", "replay", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "Ġopen", "replay", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġopen", "replay", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "new", ">", "Ċ", "Ċ", "void", "Ġ*", "operator", "Ġnew", "(", "std", "::", "size", "_", "t", "Ġsz", ")", "Ġthrow", "(", "std", "::", "bad", "_", "alloc", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "sz", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsz", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġ*", "ret", "Ġ=", "Ġmalloc", "(", "sz", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "ret", "Ġ==", "ĠNULL", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthrow", "Ġstd", "::", "bad", "_", "alloc", "(", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġret", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġoperator", "Ġdelete", "(", "void", "Ġ*", "ptr", ")", "Ġthrow", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġfree", "(", "ptr", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::671", "code": "#pragma once\n\n#include <iosfwd>\n#include <stdint.h>\n\nnamespace block_thingy::block::enums {\n\nenum class visibility_type : uint8_t\n{\n\topaque,\n\ttranslucent,\n\tinvisible,\n};\nstd::ostream& operator<<(std::ostream&, visibility_type);\n\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "ios", "fwd", ">", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġblock", "_", "thing", "y", "::", "block", "::", "enums", "Ġ{", "Ċ", "Ċ", "enum", "Ġclass", "Ġvisibility", "_", "type", "Ġ:", "Ġuint", "8", "_", "t", "Ċ", "{", "Ċ", "ĉ", "opaque", ",", "Ċ", "ĉ", "trans", "luc", "ent", ",", "Ċ", "ĉ", "invisible", ",", "Ċ", "};", "Ċ", "std", "::", "ostream", "&", "Ġoperator", "<<(", "std", "::", "ostream", "&,", "Ġvisibility", "_", "type", ");", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::672", "code": "#include \"VROntologyUtils.h\"\n\nint guid() {\n    static int id = 0;\n    id++;\n    return id;\n}\n\nVRNamedID::VRNamedID() {\n    ID = guid();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "VR", "On", "to", "logy", "Utils", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġguid", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstatic", "Ġint", "Ġid", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġid", "++;", "Ċ", "ĠĠĠ", "Ġreturn", "Ġid", ";", "Ċ", "}", "Ċ", "Ċ", "VR", "Named", "ID", "::", "VR", "Named", "ID", "()", "Ġ{", "Ċ", "ĠĠĠ", "ĠID", "Ġ=", "Ġguid", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::673", "code": "/**\n * @file    wall_detector.cpp\n * @brief   Controller that detect walls with its front camera.\n * @return  control number\n * @author  Eduardo Sanz Ruzafa <100282586@alumnos.uc3m.es>\n * @date    2014-11-13\n */\n\n#include \"MyRobot.h\"\n\n//Main Program\nint main(int argc, char **argv)\n{\n    MyRobot* my_robot = new MyRobot();\n\n    my_robot->run();\n\n    delete my_robot;\n\n    return 0;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "file", "ĠĠĠ", "Ġwall", "_", "detector", ".", "cpp", "Ċ", "Ġ*", "Ġ@", "brief", "ĠĠ", "ĠController", "Ġthat", "Ġdetect", "Ġwall", "s", "Ġwith", "Ġits", "Ġfront", "Ġcamera", ".", "Ċ", "Ġ*", "Ġ@", "return", "Ġ", "Ġcontrol", "Ġnumber", "Ċ", "Ġ*", "Ġ@", "author", "Ġ", "ĠE", "du", "ard", "o", "ĠS", "an", "z", "ĠR", "u", "za", "fa", "Ġ<", "100", "28", "25", "86", "@", "al", "umn", "os", ".", "uc", "3", "m", ".", "es", ">", "Ċ", "Ġ*", "Ġ@", "date", "ĠĠĠ", "Ġ2014", "-", "11", "-", "13", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "My", "Robot", ".", "h", "\"", "Ċ", "Ċ", "//", "Main", "ĠProgram", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠMy", "Robot", "*", "Ġmy", "_", "robot", "Ġ=", "Ġnew", "ĠMy", "Robot", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġmy", "_", "robot", "->", "run", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġdelete", "Ġmy", "_", "robot", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::674", "code": "// This file has been generated by Py++.\n\n#ifndef OMLPopup_hpp__pyplusplus_wrapper\n#define OMLPopup_hpp__pyplusplus_wrapper\n\nvoid register_OMLPopup_class();\n\n#endif//OMLPopup_hpp__pyplusplus_wrapper\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġhas", "Ġbeen", "Ġgenerated", "Ġby", "ĠPy", "++", ".", "Ċ", "Ċ", "#", "ifndef", "ĠO", "ML", "Popup", "_", "hpp", "__", "py", "plus", "plus", "_", "wrapper", "Ċ", "#", "define", "ĠO", "ML", "Popup", "_", "hpp", "__", "py", "plus", "plus", "_", "wrapper", "Ċ", "Ċ", "void", "Ġregister", "_", "OM", "L", "Popup", "_", "class", "();", "Ċ", "Ċ", "#", "endif", "//", "OM", "L", "Popup", "_", "hpp", "__", "py", "plus", "plus", "_", "wrapper", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::675", "code": "#include <gtest/gtest.h>\n#include <gmock/gmock.h>\n\n#include <reporting_mocks.h>\n#include <eventstoreprocessor.h>\n\n#include <thread>\n\nusing namespace reporting;\nusing namespace testing;\n\nclass eventstoreprocessor_tests : public ::testing::Test\n{\n    protected:\n        eventstoreprocessor_tests() {}\n};\n\nTEST_F(eventstoreprocessor_tests, breathing)\n{\n    MockEventStore* store_p = new MockEventStore();\n    IEventStorePtr store_sp(store_p);\n\n    MockEventSubject* subject_p = new MockEventSubject();\n    IEventSubjectPtr subject_sp(subject_p);\n\n    EventStoreProcessor proc(store_sp, subject_sp, 1);\n\n    Event evt(\"test\", \"http://test.com\", 0);\n    std::vector<Event> events;\n    events.push_back(evt);\n\n    EXPECT_CALL(*store_p, removeAllEvents()).WillOnce(Return(events));\n    EXPECT_CALL(*subject_p, notify(evt));\n\n    std::thread t1(&EventStoreProcessor::start, &proc);\n    t1.detach();\n\n    std::this_thread::sleep_for(std::chrono::milliseconds(500));\n    proc.shutdown();\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "g", "mock", "/", "g", "mock", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "reporting", "_", "mocks", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "event", "store", "processor", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġreporting", ";", "Ċ", "using", "Ġnamespace", "Ġtesting", ";", "Ċ", "Ċ", "class", "Ġevent", "store", "processor", "_", "tests", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġprotected", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġevent", "store", "processor", "_", "tests", "()", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "TEST", "_", "F", "(", "event", "store", "processor", "_", "tests", ",", "Ġb", "re", "ath", "ing", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠMock", "Event", "Store", "*", "Ġstore", "_", "p", "Ġ=", "Ġnew", "ĠMock", "Event", "Store", "();", "Ċ", "ĠĠĠ", "ĠI", "Event", "Store", "Ptr", "Ġstore", "_", "sp", "(", "store", "_", "p", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠMock", "Event", "Subject", "*", "Ġsubject", "_", "p", "Ġ=", "Ġnew", "ĠMock", "Event", "Subject", "();", "Ċ", "ĠĠĠ", "ĠI", "Event", "Subject", "Ptr", "Ġsubject", "_", "sp", "(", "subject", "_", "p", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠEvent", "Store", "Processor", "Ġproc", "(", "store", "_", "sp", ",", "Ġsubject", "_", "sp", ",", "Ġ1", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠEvent", "Ġevt", "(\"", "test", "\",", "Ġ\"", "http", "://", "test", ".", "com", "\",", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "Event", ">", "Ġevents", ";", "Ċ", "ĠĠĠ", "Ġevents", ".", "push", "_", "back", "(", "evt", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "CALL", "(*", "store", "_", "p", ",", "ĠremoveAll", "Events", "()).", "Will", "Once", "(", "Return", "(", "events", "));", "Ċ", "ĠĠĠ", "ĠEXPECT", "_", "CALL", "(*", "subject", "_", "p", ",", "Ġnotify", "(", "evt", "));", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "thread", "Ġt", "1", "(&", "Event", "Store", "Processor", "::", "start", ",", "Ġ&", "proc", ");", "Ċ", "ĠĠĠ", "Ġt", "1", ".", "detach", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "this", "_", "thread", "::", "sleep", "_", "for", "(", "std", "::", "chrono", "::", "milliseconds", "(", "500", "));", "Ċ", "ĠĠĠ", "Ġproc", ".", "shutdown", "();", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::676", "code": "/* connections.cpp\n * -------------\n * Implementation of AlpacaConnection, the wrapper class for al_connection_t. */\n\n\n//#include <iostream>\n#include \"alpaca/connections.hpp\"\n#include \"alpaca/server.hpp\"\n\n//using namespace std;\n\nAlpacaConnection::AlpacaConnection(al_connection_t *connection) {\n    this->connection = connection;\n}\n\nAlpacaConnection::~AlpacaConnection() {\n    this->disconnect();\n}\n\nint AlpacaConnection::disconnect() {\n    if (this->connection == nullptr)\n        return 1;\n    \n    this->connection = nullptr;\n    return 0;\n}\n\nbool AlpacaConnection::operator==(const AlpacaConnection &rhs) {\n    return this->connection == rhs.connection;\n}\n\nbool AlpacaConnection::operator==(const al_connection_t *rhs) {\n    return this->connection == rhs;\n}\n\nint AlpacaConnection::writeString(const char *string) {\n    return al_connection_write_string(this->connection, string);\n}\n\nal_flags_t AlpacaConnection::flags() {\n    return this->connection->flags;\n}\n\nint AlpacaConnection::connectionWrote() {\n    return al_connection_wrote(this->connection);\n}\n", "code_tokens": ["Ġ/*", "Ġconnections", ".", "cpp", "Ċ", "Ġ*", "Ġ--------", "-----", "Ċ", "Ġ*", "ĠImplementation", "Ġof", "ĠAl", "pa", "ca", "Connection", ",", "Ġthe", "Ġwrapper", "Ġclass", "Ġfor", "Ġal", "_", "connection", "_", "t", ".", "Ġ*/", "Ċ", "Ċ", "Ċ", "//#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ\"", "al", "pa", "ca", "/", "connections", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "al", "pa", "ca", "/", "server", ".", "hpp", "\"", "Ċ", "Ċ", "//", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Al", "pa", "ca", "Connection", "::", "Al", "pa", "ca", "Connection", "(", "al", "_", "connection", "_", "t", "Ġ*", "connection", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "connection", "Ġ=", "Ġconnection", ";", "Ċ", "}", "Ċ", "Ċ", "Al", "pa", "ca", "Connection", "::~", "Al", "pa", "ca", "Connection", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġthis", "->", "disconnect", "();", "Ċ", "}", "Ċ", "Ċ", "int", "ĠAl", "pa", "ca", "Connection", "::", "disconnect", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "this", "->", "connection", "Ġ==", "Ġnullptr", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġthis", "->", "connection", "Ġ=", "Ġnullptr", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠAl", "pa", "ca", "Connection", "::", "operator", "==(", "const", "ĠAl", "pa", "ca", "Connection", "Ġ&", "rhs", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġthis", "->", "connection", "Ġ==", "Ġrhs", ".", "connection", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠAl", "pa", "ca", "Connection", "::", "operator", "==(", "const", "Ġal", "_", "connection", "_", "t", "Ġ*", "rhs", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġthis", "->", "connection", "Ġ==", "Ġrhs", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠAl", "pa", "ca", "Connection", "::", "writeString", "(", "const", "Ġchar", "Ġ*", "string", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġal", "_", "connection", "_", "write", "_", "string", "(", "this", "->", "connection", ",", "Ġstring", ");", "Ċ", "}", "Ċ", "Ċ", "al", "_", "flags", "_", "t", "ĠAl", "pa", "ca", "Connection", "::", "flags", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġthis", "->", "connection", "->", "flags", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠAl", "pa", "ca", "Connection", "::", "connection", "W", "rote", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġal", "_", "connection", "_", "wrote", "(", "this", "->", "connection", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::677", "code": "//\n// Created by stephen on 16-6-9.\n//\n\n#include \"client.h\"\n\nint main(int argc, char* argv[]){\n    int port;\n    sscanf(argv[1], \"%d\", &port);\n    printf(\"port: %d\\n\", port);\n    client(port);\n    return 0;\n}\n\n\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "Ġste", "phen", "Ġon", "Ġ16", "-", "6", "-", "9", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "client", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[]", "){", "Ċ", "ĠĠĠ", "Ġint", "Ġport", ";", "Ċ", "ĠĠĠ", "Ġsscanf", "(", "argv", "[", "1", "],", "Ġ\"%", "d", "\",", "Ġ&", "port", ");", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "port", ":", "Ġ%", "d", "\\", "n", "\",", "Ġport", ");", "Ċ", "ĠĠĠ", "Ġclient", "(", "port", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::678", "code": "#ifndef SEGMENTIZE_H\n#define SEGMENTIZE_H\n\n#include <vector>\n#include <map>\n\n#include \"geometry.hpp\"\n#include <boost/polygon/isotropy.hpp>\n#include <boost/polygon/segment_concept.hpp>\n#include <boost/polygon/segment_utils.hpp>\n\n/* Given a multi_linestring, return a new multiline_string where there\n * are no segments that cross any other segments.  Nor are there any T\n * shapes where the end of a linestring butts up against the center of\n * another.\n *\n * Repeats are removed, as are segments that are identical but\n * pointing in opposite directions.\n */\nstd::vector<segment_type_p> segmentize(const std::vector<segment_type_p>& all_segments) {\n  std::vector<segment_type_p> intersected_segments;\n  boost::polygon::intersect_segments(intersected_segments, all_segments.cbegin(), all_segments.cend());\n  // Sort the segments themselves.\n  std::sort(intersected_segments.begin(), intersected_segments.end());\n  auto last = std::unique(intersected_segments.begin(), intersected_segments.end());\n  intersected_segments.erase(last, intersected_segments.end());\n\n  return intersected_segments;\n}\n\n#endif //SEGMENTIZE_H\n", "code_tokens": ["Ġ#", "ifndef", "ĠSEGMENT", "IZE", "_", "H", "Ċ", "#", "define", "ĠSEGMENT", "IZE", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "geometry", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "boost", "/", "polygon", "/", "isot", "ropy", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "polygon", "/", "segment", "_", "concept", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "polygon", "/", "segment", "_", "utils", ".", "hpp", ">", "Ċ", "Ċ", "/*", "ĠGiven", "Ġa", "Ġmulti", "_", "line", "string", ",", "Ġreturn", "Ġa", "Ġnew", "Ġmultiline", "_", "string", "Ġwhere", "Ġthere", "Ċ", "Ġ*", "Ġare", "Ġno", "Ġsegments", "Ġthat", "Ġcross", "Ġany", "Ġother", "Ġsegments", ".", "Ġ", "ĠN", "or", "Ġare", "Ġthere", "Ġany", "ĠT", "Ċ", "Ġ*", "Ġshapes", "Ġwhere", "Ġthe", "Ġend", "Ġof", "Ġa", "Ġline", "string", "Ġbut", "ts", "Ġup", "Ġagainst", "Ġthe", "Ġcenter", "Ġof", "Ċ", "Ġ*", "Ġanother", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠRe", "pe", "ats", "Ġare", "Ġremoved", ",", "Ġas", "Ġare", "Ġsegments", "Ġthat", "Ġare", "Ġidentical", "Ġbut", "Ċ", "Ġ*", "Ġpointing", "Ġin", "Ġopposite", "Ġdirections", ".", "Ċ", "Ġ*/", "Ċ", "std", "::", "vector", "<", "segment", "_", "type", "_", "p", ">", "Ġsegment", "ize", "(", "const", "Ġstd", "::", "vector", "<", "segment", "_", "type", "_", "p", ">&", "Ġall", "_", "segments", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "segment", "_", "type", "_", "p", ">", "Ġinter", "se", "cted", "_", "segments", ";", "Ċ", "Ġ", "Ġboost", "::", "polygon", "::", "intersect", "_", "segments", "(", "inter", "se", "cted", "_", "segments", ",", "Ġall", "_", "segments", ".", "cbegin", "(),", "Ġall", "_", "segments", ".", "cend", "());", "Ċ", "Ġ", "Ġ//", "ĠSort", "Ġthe", "Ġsegments", "Ġthemselves", ".", "Ċ", "Ġ", "Ġstd", "::", "sort", "(", "inter", "se", "cted", "_", "segments", ".", "begin", "(),", "Ġinter", "se", "cted", "_", "segments", ".", "end", "());", "Ċ", "Ġ", "Ġauto", "Ġlast", "Ġ=", "Ġstd", "::", "unique", "(", "inter", "se", "cted", "_", "segments", ".", "begin", "(),", "Ġinter", "se", "cted", "_", "segments", ".", "end", "());", "Ċ", "Ġ", "Ġinter", "se", "cted", "_", "segments", ".", "erase", "(", "last", ",", "Ġinter", "se", "cted", "_", "segments", ".", "end", "());", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġinter", "se", "cted", "_", "segments", ";", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "SEGMENT", "IZE", "_", "H", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::679", "code": "#include <iostream>\n\n#include \"core/tuple.hpp\"\n#include \"core/alarm.h\"\n\n\n\n\n\nint main(void)\n{\n    auto t1 = std::tuple<int, std::string>{1, \"one\"};\n    auto t2 = jle::tuple<int, std::string>{2, \"two\"};\n\n    if(t1 == t2)\n        std::cout << \"yes\" << std::endl;\n    if(t1 < t2)\n        std::cout << \"yes\" << std::endl;\n\n\n    JLE_COUT_TRACE(t1);\n    JLE_COUT_TRACE(t2);\n\n    std::cout << t1 << std::endl;\n\n    return 0;\n}\n\n\n\nnamespace jle {\n\n    void alarm_msg(const jle::alarm& al)\n    {\n        std::cout << al << std::endl;\n    }\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "core", "/", "tuple", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "alarm", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġauto", "Ġt", "1", "Ġ=", "Ġstd", "::", "tuple", "<", "int", ",", "Ġstd", "::", "string", ">{", "1", ",", "Ġ\"", "one", "\"};", "Ċ", "ĠĠĠ", "Ġauto", "Ġt", "2", "Ġ=", "Ġj", "le", "::", "tuple", "<", "int", ",", "Ġstd", "::", "string", ">{", "2", ",", "Ġ\"", "two", "\"};", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "(", "t", "1", "Ġ==", "Ġt", "2", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "yes", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "t", "1", "Ġ<", "Ġt", "2", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "yes", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "Ċ", "ĠĠĠ", "ĠJ", "LE", "_", "CO", "UT", "_", "TRACE", "(", "t", "1", ");", "Ċ", "ĠĠĠ", "ĠJ", "LE", "_", "CO", "UT", "_", "TRACE", "(", "t", "2", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġt", "1", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ", "namespace", "Ġj", "le", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġalarm", "_", "msg", "(", "const", "Ġj", "le", "::", "alarm", "&", "Ġal", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġal", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::680", "code": "/*******************************************************************************\n * Li.hpp\n * Copyright (C) 2017  Mel McCalla <melmccalla@gmail.com>\n *\n * This file is part of html2LaTeX.\n *\n * html2LaTeX is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * html2LaTeX is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with html2LaTeX.  If not, see <http://www.gnu.org/licenses/>.\n *******************************************************************************/\n#ifndef SRC_HTML_ELEMENTS_NORMAL_LI_HPP_\n#define SRC_HTML_ELEMENTS_NORMAL_LI_HPP_\n\n#include \"Normal.hpp\"\n\nnamespace HTML {\nnamespace Elements {\n\n/*\n *\n */\nclass Li: public Normal {\n};\n\n} /* namespace Elements */\n} /* namespace HTML */\n\n#endif /* SRC_HTML_ELEMENTS_NORMAL_LI_HPP_ */\n", "code_tokens": ["Ġ/", "************************************************************************", "*******", "Ċ", "Ġ*", "ĠLi", ".", "hpp", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2017", "Ġ", "ĠM", "el", "ĠM", "c", "Cal", "la", "Ġ<", "mel", "mcc", "al", "la", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġhtml", "2", "La", "TeX", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġhtml", "2", "La", "TeX", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġhtml", "2", "La", "TeX", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġhtml", "2", "La", "TeX", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*************************************************************************", "******/", "Ċ", "#", "ifndef", "ĠSRC", "_", "HTML", "_", "ELEMENTS", "_", "NORMAL", "_", "LI", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠSRC", "_", "HTML", "_", "ELEMENTS", "_", "NORMAL", "_", "LI", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ\"", "Normal", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "ĠHTML", "Ġ{", "Ċ", "namespace", "ĠElements", "Ġ{", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "class", "ĠLi", ":", "Ġpublic", "ĠNormal", "Ġ{", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠElements", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠHTML", "Ġ*/", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠSRC", "_", "HTML", "_", "ELEMENTS", "_", "NORMAL", "_", "LI", "_", "HP", "P", "_", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::681", "code": "/*An integer x is said to be Noble given an array if the \nnumber of integers greater than x are equal to x. \nIf there are many Noble integers, any of them is returned. \nIf there is no noble integer, then return -1.*/\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nint Noble(vector<int> &A) {\n    int n = A.size();\n    if (n == 0) {\n        return -1;\n    }\n    sort(A.begin(), A.end());\n    for (int i = 0; i < n - 1; i++) {\n        if (A[i] == A[i + 1]) {\n            continue;\n        }\n        if (A[i] == n - (i + 1)) {\n            return A[i];\n        }\n    }\n    if (A[n - 1] == 0) {\n        return A[n - 1];\n    }\n    return -1;\n}\n\nint main () \n{\n    int n, x;\n    cout << \"Enter the size of array : \";\n    cin >> n;\n    vector<int> A(n);\n    for (int i = 0; i < n; i++) {\n        cin >> x;\n        A.push_back(x);\n    }\n    cout << \"Noble Integer = \" << Noble(A);\n\n    return 0;\n}\n\n/*\nInput :\nEnter the size of array : 6\n3 2 5 6 1 4\nOutput :\nNoble Integer = 3\n\nInput : \nEnter the size of array : 3\n2 2 2\nOutput :\nNoble Integer = -1\n*/\n", "code_tokens": ["Ġ/*", "An", "Ġinteger", "Ġx", "Ġis", "Ġsaid", "Ġto", "Ġbe", "ĠN", "ob", "le", "Ġgiven", "Ġan", "Ġarray", "Ġif", "Ġthe", "Ġ", "Ċ", "number", "Ġof", "Ġintegers", "Ġgreater", "Ġthan", "Ġx", "Ġare", "Ġequal", "Ġto", "Ġx", ".", "Ġ", "Ċ", "If", "Ġthere", "Ġare", "Ġmany", "ĠN", "ob", "le", "Ġintegers", ",", "Ġany", "Ġof", "Ġthem", "Ġis", "Ġreturned", ".", "Ġ", "Ċ", "If", "Ġthere", "Ġis", "Ġno", "Ġno", "ble", "Ġinteger", ",", "Ġthen", "Ġreturn", "Ġ-", "1", ".*/", "Ċ", "Ċ", "#", "include", "<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "ĠN", "ob", "le", "(", "vector", "<", "int", ">", "Ġ&", "A", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", "Ġ=", "ĠA", ".", "size", "();", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "n", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġsort", "(", "A", ".", "begin", "(),", "ĠA", ".", "end", "());", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", "Ġ-", "Ġ1", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "A", "[", "i", "]", "Ġ==", "ĠA", "[", "i", "Ġ+", "Ġ1", "])", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "A", "[", "i", "]", "Ġ==", "Ġn", "Ġ-", "Ġ(", "i", "Ġ+", "Ġ1", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "ĠA", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "A", "[", "n", "Ġ-", "Ġ1", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠA", "[", "n", "Ġ-", "Ġ1", "];", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "Ġx", ";", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "Enter", "Ġthe", "Ġsize", "Ġof", "Ġarray", "Ġ:", "Ġ\";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "ĠA", "(", "n", ");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġx", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠA", ".", "push", "_", "back", "(", "x", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "No", "ble", "ĠInteger", "Ġ=", "Ġ\"", "Ġ<<", "ĠN", "ob", "le", "(", "A", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "/*", "Ċ", "Input", "Ġ:", "Ċ", "Enter", "Ġthe", "Ġsize", "Ġof", "Ġarray", "Ġ:", "Ġ6", "Ċ", "3", "Ġ2", "Ġ5", "Ġ6", "Ġ1", "Ġ4", "Ċ", "Output", "Ġ:", "Ċ", "No", "ble", "ĠInteger", "Ġ=", "Ġ3", "Ċ", "Ċ", "Input", "Ġ:", "Ġ", "Ċ", "Enter", "Ġthe", "Ġsize", "Ġof", "Ġarray", "Ġ:", "Ġ3", "Ċ", "2", "Ġ2", "Ġ2", "Ċ", "Output", "Ġ:", "Ċ", "No", "ble", "ĠInteger", "Ġ=", "Ġ-", "1", "Ċ", "*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::682", "code": "/*------------------------------------------------------------------------------\n    Copyright 2014, HexWorld Authors.\n\n    This file is part of HexWorld.\n\n    HexWorld is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    HexWorld is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with HexWorld.  If not, see <http://www.gnu.org/licenses/>.\n------------------------------------------------------------------------------*/\n/** @file staticmodel.cpp\n    @brief StaticModel definitions.\n    @author Luis Cabellos\n    @date 2014-01-03\n*/\n//------------------------------------------------------------------------------\n#include \"staticmodel.hpp\"\n\n//------------------------------------------------------------------------------\nvoid StaticModel::insertNullMaterial(){\n    Material mat;\n    mat.setDiffuse( glm::vec3( 0.8, 0, 0.8 ) );\n    insertMaterial( std::move(mat) );\n}\n\n//------------------------------------------------------------------------------\nvoid StaticModel::draw( Renderer & renderer ){\n    for( auto & mesh: m_meshes ){\n        const auto & mat = m_materials[ mesh->getMaterialIdx() ];\n        mesh->draw( mat, renderer );\n    }\n}\n\n//------------------------------------------------------------------------------\n", "code_tokens": ["Ġ/*", "------------------------------------------------------------------------------", "Ċ", "ĠĠĠ", "ĠCopyright", "Ġ2014", ",", "ĠHex", "World", "ĠAuth", "ors", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠHex", "World", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠHex", "World", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĠĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĠĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠHex", "World", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠĠ", "Ġalong", "Ġwith", "ĠHex", "World", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "------------------------------------------------------------------------------", "*/", "Ċ", "/**", "Ġ@", "file", "Ġstatic", "model", ".", "cpp", "Ċ", "ĠĠĠ", "Ġ@", "brief", "ĠStatic", "Model", "Ġdefinitions", ".", "Ċ", "ĠĠĠ", "Ġ@", "author", "ĠL", "uis", "ĠC", "abel", "los", "Ċ", "ĠĠĠ", "Ġ@", "date", "Ġ2014", "-", "01", "-", "03", "Ċ", "*/", "Ċ", "//------------------------------------------------------------------------------", "Ċ", "#", "include", "Ġ\"", "static", "model", ".", "hpp", "\"", "Ċ", "Ċ", "//------------------------------------------------------------------------------", "Ċ", "void", "ĠStatic", "Model", "::", "insert", "Null", "Material", "(){", "Ċ", "ĠĠĠ", "ĠMaterial", "Ġmat", ";", "Ċ", "ĠĠĠ", "Ġmat", ".", "set", "Diffuse", "(", "Ġglm", "::", "vec", "3", "(", "Ġ0", ".", "8", ",", "Ġ0", ",", "Ġ0", ".", "8", "Ġ)", "Ġ);", "Ċ", "ĠĠĠ", "Ġinsert", "Material", "(", "Ġstd", "::", "move", "(", "mat", ")", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "//------------------------------------------------------------------------------", "Ċ", "void", "ĠStatic", "Model", "::", "draw", "(", "ĠRenderer", "Ġ&", "Ġrenderer", "Ġ){", "Ċ", "ĠĠĠ", "Ġfor", "(", "Ġauto", "Ġ&", "Ġmesh", ":", "Ġm", "_", "mesh", "es", "Ġ){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "Ġauto", "Ġ&", "Ġmat", "Ġ=", "Ġm", "_", "materials", "[", "Ġmesh", "->", "get", "Material", "Idx", "()", "Ġ];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġmesh", "->", "draw", "(", "Ġmat", ",", "Ġrenderer", "Ġ);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "//------------------------------------------------------------------------------", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::683", "code": "/*---------------------------------------------------------------------------*\\\n  =========                 |\n  \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox\n   \\\\    /   O peration     |\n    \\\\  /    A nd           | Copyright (C) 2008-2010 OpenCFD Ltd.\n     \\\\/     M anipulation  |\n-------------------------------------------------------------------------------\nLicense\n    This file is part of OpenFOAM.\n\n    OpenFOAM is free software: you can redistribute it and/or modify it\n    under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT\n    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n    for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.\n\n\\*---------------------------------------------------------------------------*/\n\ntemplate<class CloudType>\nconst Foam::dictionary& Foam::PostProcessingModel<CloudType>::dict() const\n{\n    return dict_;\n}\n\n\ntemplate<class CloudType>\nconst CloudType& Foam::PostProcessingModel<CloudType>::owner() const\n{\n    return owner_;\n}\n\n\ntemplate<class CloudType>\nCloudType& Foam::PostProcessingModel<CloudType>::owner()\n{\n    return owner_;\n}\n\n\ntemplate<class CloudType>\nconst Foam::dictionary& Foam::PostProcessingModel<CloudType>::coeffDict() const\n{\n    return coeffDict_;\n}\n\n\n// ************************ vim: set sw=4 sts=4 et: ************************ //\n", "code_tokens": ["Ġ/*", "------------------------------------------------------------------------", "---", "*\\", "Ċ", "Ġ", "Ġ=", "========", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "Ċ", "Ġ", "Ġ\\\\", "ĠĠĠĠĠ", "Ġ/", "Ġ", "ĠF", "Ġi", "eld", "ĠĠĠĠĠĠĠĠ", "Ġ|", "ĠOpen", "FO", "AM", ":", "ĠThe", "ĠOpen", "ĠSource", "ĠC", "FD", "ĠTool", "box", "Ċ", "ĠĠ", "Ġ\\\\", "ĠĠĠ", "Ġ/", "ĠĠ", "ĠO", "Ġper", "ation", "ĠĠĠĠ", "Ġ|", "Ċ", "ĠĠĠ", "Ġ\\\\", "Ġ", "Ġ/", "ĠĠĠ", "ĠA", "Ġnd", "ĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2010", "ĠOpen", "C", "FD", "ĠLtd", ".", "Ċ", "ĠĠĠĠ", "Ġ\\\\", "/", "ĠĠĠĠ", "ĠM", "Ġan", "ip", "ulation", "Ġ", "Ġ|", "Ċ", "------------------------------------------------------------------------", "-------", "Ċ", "License", "Ċ", "ĠĠĠ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠOpen", "FO", "AM", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠOpen", "FO", "AM", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ċ", "ĠĠĠ", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĠĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠOpen", "FO", "AM", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "Ċ", "ĠĠĠ", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "Ċ", "ĠĠĠ", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠĠ", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠĠ", "Ġalong", "Ġwith", "ĠOpen", "FO", "AM", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "\\*", "------------------------------------------------------------------------", "---*/", "Ċ", "Ċ", "template", "<", "class", "ĠCloud", "Type", ">", "Ċ", "const", "ĠF", "oam", "::", "dictionary", "&", "ĠF", "oam", "::", "Post", "Processing", "Model", "<", "Cloud", "Type", ">::", "dict", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġdict", "_;", "Ċ", "}", "Ċ", "Ċ", "Ċ", "template", "<", "class", "ĠCloud", "Type", ">", "Ċ", "const", "ĠCloud", "Type", "&", "ĠF", "oam", "::", "Post", "Processing", "Model", "<", "Cloud", "Type", ">::", "owner", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġowner", "_;", "Ċ", "}", "Ċ", "Ċ", "Ċ", "template", "<", "class", "ĠCloud", "Type", ">", "Ċ", "Cloud", "Type", "&", "ĠF", "oam", "::", "Post", "Processing", "Model", "<", "Cloud", "Type", ">::", "owner", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġowner", "_;", "Ċ", "}", "Ċ", "Ċ", "Ċ", "template", "<", "class", "ĠCloud", "Type", ">", "Ċ", "const", "ĠF", "oam", "::", "dictionary", "&", "ĠF", "oam", "::", "Post", "Processing", "Model", "<", "Cloud", "Type", ">::", "coeff", "Dict", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġcoeff", "Dict", "_;", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "Ġ*****************", "*******", "Ġvim", ":", "Ġset", "Ġsw", "=", "4", "Ġsts", "=", "4", "Ġet", ":", "Ġ*****************", "*******", "Ġ//", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::684", "code": "#include <Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\nLogicalVector fastMove(const NumericVector& time,\n                       const NumericVector& value,\n                       double nsec = 60,\n                       double nval = 5) {\n  \n  int n = time.size();\n  LogicalVector fast_move(n);\n  \n  int i, j;\n  double tmin, vmin, vmax;\n  \n  for (i = n - 1; i > 0; i--) {\n    tmin = time[i] - nsec;\n    vmin = value[i] - nval;\n    vmax = value[i] + nval;\n    for (j = i - 1; j > 0; j--) {\n      if (time[j] < tmin) break;\n      if (value[j] < vmin || value[j] > vmax) {\n        fast_move[i] = true;\n        break;\n      }\n    }\n  }\n  \n  return fast_move;\n}\n\n\n/*** R\n\n*/\n", "code_tokens": ["Ġ#", "include", "Ġ<", "R", "cpp", ".", "h", ">", "Ċ", "using", "Ġnamespace", "ĠRcpp", ";", "Ċ", "Ċ", "//", "Ġ[[", "R", "cpp", "::", "export", "]]", "Ċ", "Logical", "Vector", "Ġfast", "Move", "(", "const", "ĠNumeric", "Vector", "&", "Ġtime", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "ĠNumeric", "Vector", "&", "Ġvalue", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdouble", "Ġnsec", "Ġ=", "Ġ60", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdouble", "Ġn", "val", "Ġ=", "Ġ5", ")", "Ġ{", "Ċ", "ĠĠĊ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġtime", ".", "size", "();", "Ċ", "Ġ", "ĠLogical", "Vector", "Ġfast", "_", "move", "(", "n", ");", "Ċ", "ĠĠĊ", "Ġ", "Ġint", "Ġi", ",", "Ġj", ";", "Ċ", "Ġ", "Ġdouble", "Ġt", "min", ",", "Ġv", "min", ",", "Ġv", "max", ";", "Ċ", "ĠĠĊ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġn", "Ġ-", "Ġ1", ";", "Ġi", "Ġ>", "Ġ0", ";", "Ġi", "--)", "Ġ{", "Ċ", "ĠĠĠ", "Ġt", "min", "Ġ=", "Ġtime", "[", "i", "]", "Ġ-", "Ġnsec", ";", "Ċ", "ĠĠĠ", "Ġv", "min", "Ġ=", "Ġvalue", "[", "i", "]", "Ġ-", "Ġn", "val", ";", "Ċ", "ĠĠĠ", "Ġv", "max", "Ġ=", "Ġvalue", "[", "i", "]", "Ġ+", "Ġn", "val", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "j", "Ġ=", "Ġi", "Ġ-", "Ġ1", ";", "Ġj", "Ġ>", "Ġ0", ";", "Ġj", "--)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "time", "[", "j", "]", "Ġ<", "Ġt", "min", ")", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "value", "[", "j", "]", "Ġ<", "Ġv", "min", "Ġ||", "Ġvalue", "[", "j", "]", "Ġ>", "Ġv", "max", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfast", "_", "move", "[", "i", "]", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "ĠĠĊ", "Ġ", "Ġreturn", "Ġfast", "_", "move", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "/***", "ĠR", "Ċ", "Ċ", "*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::685", "code": "#include \"SQLiteWrapper.h\"\n\n\n\nSQLiteWrapper::SQLiteWrapper()\n{\n}\n\n\nSQLiteWrapper::~SQLiteWrapper()\n{\n}\n\nbool SQLiteWrapper::Connect(const std::string& _dbName)\n{\n}\n\nvoid SQLiteWrapper::Execute(const std::string& _request)\n{\n}\n\nstd::map<std::string, std::string> SQLiteWrapper::ExecuteWithReturn(const std::string& _request)\n{\n}\n\nbool SQLiteWrapper::Close()\n{\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "SQLite", "Wrapper", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "Ċ", "SQLite", "Wrapper", "::", "SQLite", "Wrapper", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "SQLite", "Wrapper", "::~", "SQLite", "Wrapper", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠSQLite", "Wrapper", "::", "Connect", "(", "const", "Ġstd", "::", "string", "&", "Ġ_", "dbName", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSQLite", "Wrapper", "::", "Execute", "(", "const", "Ġstd", "::", "string", "&", "Ġ_", "request", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "std", "::", "map", "<", "std", "::", "string", ",", "Ġstd", "::", "string", ">", "ĠSQLite", "Wrapper", "::", "Execute", "With", "Return", "(", "const", "Ġstd", "::", "string", "&", "Ġ_", "request", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠSQLite", "Wrapper", "::", "Close", "()", "Ċ", "{", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::686", "code": "/*\n * C++ Primer\n * Chap. 9 Ex. 9.18\n * Hao Zhang\n * 2016.09.17\n * main.cpp\n */\n\n#include <deque>\nusing std::deque;\n\n#include <string>\nusing std::string;\n\n#include <iostream>\nusing std::cout;\nusing std::endl;\nusing std::cin;\n\nint main()\n{\n    deque<string> deq;\n    string val;\n    while (cin >> val) {\n        deq.push_back(val);\n    }\n\n    for (auto iter = deq.cbegin(); iter != deq.cend(); ++iter) {\n        cout << *iter << \" \";\n    }\n    cout << endl;\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠC", "++", "ĠPr", "imer", "Ċ", "Ġ*", "ĠCh", "ap", ".", "Ġ9", "ĠEx", ".", "Ġ9", ".", "18", "Ċ", "Ġ*", "ĠH", "ao", "ĠZ", "hang", "Ċ", "Ġ*", "Ġ2016", ".", "09", ".", "17", "Ċ", "Ġ*", "Ġmain", ".", "cpp", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "deque", ">", "Ċ", "using", "Ġstd", "::", "deque", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġstd", "::", "cout", ";", "Ċ", "using", "Ġstd", "::", "endl", ";", "Ċ", "using", "Ġstd", "::", "cin", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdeque", "<", "string", ">", "Ġde", "q", ";", "Ċ", "ĠĠĠ", "Ġstring", "Ġval", ";", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġval", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġde", "q", ".", "push", "_", "back", "(", "val", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġiter", "Ġ=", "Ġde", "q", ".", "cbegin", "();", "Ġiter", "Ġ!=", "Ġde", "q", ".", "cend", "();", "Ġ++", "iter", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ*", "iter", "Ġ<<", "Ġ\"", "Ġ\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::687", "code": "#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint a[10001];\nint dp[10001];\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; i++) scanf(\"%d\",a+i);\n    dp[1] = a[1];\n    dp[2] = a[1] + a[2];\n    for(int i=3; i<=n; i++) \n        dp[i] = max(dp[i-1],max(dp[i-2]+a[i],dp[i-3]+a[i-1]+a[i]));\n    printf(\"%d\\n\",dp[n]);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġa", "[", "100", "01", "];", "Ċ", "int", "Ġdp", "[", "100", "01", "];", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "n", ");", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "1", ";", "Ġi", "<=", "n", ";", "Ġi", "++)", "Ġscanf", "(\"%", "d", "\",", "a", "+", "i", ");", "Ċ", "ĠĠĠ", "Ġdp", "[", "1", "]", "Ġ=", "Ġa", "[", "1", "];", "Ċ", "ĠĠĠ", "Ġdp", "[", "2", "]", "Ġ=", "Ġa", "[", "1", "]", "Ġ+", "Ġa", "[", "2", "];", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "3", ";", "Ġi", "<=", "n", ";", "Ġi", "++)", "ĠĊ", "ĠĠĠĠĠĠĠ", "Ġdp", "[", "i", "]", "Ġ=", "Ġmax", "(", "dp", "[", "i", "-", "1", "],", "max", "(", "dp", "[", "i", "-", "2", "]+", "a", "[", "i", "],", "dp", "[", "i", "-", "3", "]+", "a", "[", "i", "-", "1", "]+", "a", "[", "i", "]));", "Ċ", "ĠĠĠ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "dp", "[", "n", "]);", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::688", "code": "/*\r\n * Copyright (c) 2015-2016, Arkadiusz Materek (arekmat@poczta.fm)\r\n *\r\n * Licensed under GNU General Public License 3.0 or later.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n */\r\n\r\n#ifndef XMC_CLK_HPP_\r\n#define XMC_CLK_HPP_\r\n\r\n#include <stdint.h>\r\n\r\nnamespace xmc {\r\n\r\nclass Clock {\r\npublic:\r\n\r\n  typedef enum {\r\n    FREQ_32MHZ = 0x01,\r\n    FREQ_16MHZ = 0x02,\r\n    FREQ_10_67MHZ = 0x03,\r\n    FREQ_8MHZ = 0x04,\r\n  } Frequency;\r\n\r\n  // Initializes SCU Clock registers based on user configuration\r\n  static void init(Frequency freq);\r\n\r\n  // Returns current clock frequency\r\n  static uint32_t freq(void);\r\n\r\n};\r\n// class Clock\r\n\r\n}// namespace xmc\r\n\r\n#endif // XMC_CLK_HPP_\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "-", "2016", ",", "ĠAr", "k", "ad", "ius", "z", "ĠM", "ate", "rek", "Ġ(", "are", "k", "mat", "@", "p", "oc", "z", "ta", ".", "fm", ")", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġunder", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġ3", ".", "0", "Ġor", "Ġlater", ".", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "č", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "č", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "ifndef", "ĠX", "MC", "_", "CLK", "_", "HP", "P", "_", "č", "Ċ", "#", "define", "ĠX", "MC", "_", "CLK", "_", "HP", "P", "_", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "č", "Ċ", "č", "Ċ", "namespace", "Ġx", "mc", "Ġ{", "č", "Ċ", "č", "Ċ", "class", "ĠClock", "Ġ{", "č", "Ċ", "public", ":", "č", "Ċ", "č", "Ċ", "Ġ", "Ġtypedef", "Ġenum", "Ġ{", "č", "Ċ", "ĠĠĠ", "ĠF", "REQ", "_", "32", "MHZ", "Ġ=", "Ġ0", "x", "01", ",", "č", "Ċ", "ĠĠĠ", "ĠF", "REQ", "_", "16", "MHZ", "Ġ=", "Ġ0", "x", "02", ",", "č", "Ċ", "ĠĠĠ", "ĠF", "REQ", "_", "10", "_", "67", "MHZ", "Ġ=", "Ġ0", "x", "03", ",", "č", "Ċ", "ĠĠĠ", "ĠF", "REQ", "_", "8", "MHZ", "Ġ=", "Ġ0", "x", "04", ",", "č", "Ċ", "Ġ", "Ġ}", "ĠFrequency", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ//", "ĠInitializes", "ĠSCU", "ĠClock", "Ġregisters", "Ġbased", "Ġon", "Ġuser", "Ġconfiguration", "č", "Ċ", "Ġ", "Ġstatic", "Ġvoid", "Ġinit", "(", "Frequency", "Ġfreq", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ//", "ĠReturns", "Ġcurrent", "Ġclock", "Ġfrequency", "č", "Ċ", "Ġ", "Ġstatic", "Ġuint", "32", "_", "t", "Ġfreq", "(", "void", ");", "č", "Ċ", "č", "Ċ", "};", "č", "Ċ", "//", "Ġclass", "ĠClock", "č", "Ċ", "č", "Ċ", "}", "//", "Ġnamespace", "Ġx", "mc", "č", "Ċ", "č", "Ċ", "#", "endif", "Ġ//", "ĠX", "MC", "_", "CLK", "_", "HP", "P", "_", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::689", "code": "/******************************************************************************\n * Copyright (c) 2011-2014 Artur Molchanov <artur.molchanov@gmail.com>        *\n *                                                                            *\n * This program is free software: you can redistribute it and/or modify       *\n * it under the terms of the GNU General Public License as published by       *\n * the Free Software Foundation, either version 3 of the License, or          *\n * (at your option) any later version.                                        *\n *                                                                            *\n * This program is distributed in the hope that it will be useful,            *\n * but WITHOUT ANY WARRANTY; without even the implied warranty of             *\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *\n * GNU General Public License for more details.                               *\n *                                                                            *\n * You should have received a copy of the GNU General Public License          *\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.      *\n ******************************************************************************/\n\n#include \"codecHUFF.h\"\n#include \"shclib.h\"\n\nCodec_HUFF::Codec_HUFF() {\n}\n\nCodec_HUFF::~Codec_HUFF() {\n}\n\nvoid Codec_HUFF::decode_HUFF(DataBlock* inData) {\n    initDecoder(inData);\n\n    buffer.reserve(decodedDataSize);\n\n    sh_DecodeBlock(data, buffer.data(), encodedDataSize);\n\n    inData->setBlock(buffer.data());\n}\n\nvoid Codec_HUFF::encode_HUFF(DataBlock* inData) {\n    initEncoder(inData);\n\n    buffer.reserve(decodedDataSize + 256);\n\n    encodedDataSize = sh_EncodeBlock(data, buffer.data(), decodedDataSize);\n\n    inData->setData(buffer.data(), encodedDataSize);\n    recordOutHeader(inData->getHeader(), JAA::CodecID::HUFF_ID);\n}\n", "code_tokens": ["Ġ/", "************************************************************************", "******", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "-", "2014", "ĠArt", "ur", "ĠM", "ol", "chan", "ov", "Ġ<", "art", "ur", ".", "mol", "chan", "ov", "@", "gmail", ".", "com", ">", "ĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "ĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "ĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "ĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "ĠĠĠĠĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "ĠĠĠĠĠ", "Ġ*", "Ċ", "Ġ******************************************************************************/", "Ċ", "Ċ", "#", "include", "Ġ\"", "codec", "HU", "FF", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sh", "c", "lib", ".", "h", "\"", "Ċ", "Ċ", "Codec", "_", "HU", "FF", "::", "Codec", "_", "HU", "FF", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Codec", "_", "HU", "FF", "::~", "Codec", "_", "HU", "FF", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCodec", "_", "HU", "FF", "::", "decode", "_", "HU", "FF", "(", "Data", "Block", "*", "Ġin", "Data", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġinit", "Decoder", "(", "in", "Data", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġbuffer", ".", "reserve", "(", "decoded", "DataSize", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġsh", "_", "Decode", "Block", "(", "data", ",", "Ġbuffer", ".", "data", "(),", "Ġencoded", "DataSize", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġin", "Data", "->", "setBlock", "(", "buffer", ".", "data", "());", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCodec", "_", "HU", "FF", "::", "encode", "_", "HU", "FF", "(", "Data", "Block", "*", "Ġin", "Data", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġinit", "Encoder", "(", "in", "Data", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġbuffer", ".", "reserve", "(", "decoded", "DataSize", "Ġ+", "Ġ256", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġencoded", "DataSize", "Ġ=", "Ġsh", "_", "Encode", "Block", "(", "data", ",", "Ġbuffer", ".", "data", "(),", "Ġdecoded", "DataSize", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġin", "Data", "->", "setData", "(", "buffer", ".", "data", "(),", "Ġencoded", "DataSize", ");", "Ċ", "ĠĠĠ", "Ġrecord", "Out", "Header", "(", "in", "Data", "->", "getHeader", "(),", "ĠJ", "AA", "::", "Codec", "ID", "::", "HU", "FF", "_", "ID", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::690", "code": "#include <iostream>\n#include <cstdio>\nusing namespace std;\nint main(){\n    int n;\n    cin>>n;\n    if(n<9)printf(\"0\");\n    else if(n==9)printf(\"8\");\n    else{\n        printf(\"72\");\n        for(int i=10;i<n;i++){\n            printf(\"0\");\n        }\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġcin", ">>", "n", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "n", "<", "9", ")", "printf", "(\"", "0", "\");", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "(", "n", "==", "9", ")", "printf", "(\"", "8", "\");", "Ċ", "ĠĠĠ", "Ġelse", "{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"", "72", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "10", ";", "i", "<", "n", ";", "i", "++){", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"", "0", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::691", "code": "#include \"InitializationBlock.hpp\"\n\nnamespace GA {\n\tclass RandomInitializator : public InitializationBlock\n\t{\n\t\tprivate:\n\t\t\tGENOTYPE_TYPE init_center;\n\t\t\tGENOTYPE_TYPE init_radius;\n\t\tpublic:\n\t\t\tRandomInitializator(GENOTYPE_TYPE init_center, GENOTYPE_TYPE init_diameter);\n\t\t\tvoid init(Generation *generation);\n\t};\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Initialization", "Block", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "ĠGA", "Ġ{", "Ċ", "ĉ", "class", "ĠRandom", "Init", "ializ", "ator", "Ġ:", "Ġpublic", "ĠInitialization", "Block", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "private", ":", "Ċ", "ĉĉ", "ĉ", "GEN", "OTYPE", "_", "TYPE", "Ġinit", "_", "center", ";", "Ċ", "ĉĉ", "ĉ", "GEN", "OTYPE", "_", "TYPE", "Ġinit", "_", "radius", ";", "Ċ", "ĉ", "ĉ", "public", ":", "Ċ", "ĉĉ", "ĉ", "Random", "Init", "ializ", "ator", "(", "GEN", "OTYPE", "_", "TYPE", "Ġinit", "_", "center", ",", "ĠGEN", "OTYPE", "_", "TYPE", "Ġinit", "_", "di", "ameter", ");", "Ċ", "ĉĉ", "ĉ", "void", "Ġinit", "(", "Generation", "Ġ*", "generation", ");", "Ċ", "ĉ", "};", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::692", "code": "#ifndef _Voice\n#define _Voice\n\n#include <jack/jack.h>\n#include <iostream>\n#include <math.h>\n//#include <rubberband/RubberBandStretcher.h>\n#include <oscpack/osc/OscTypes.h>\n\n#include \"def.hpp\"\n#include \"sound.hpp\"\n\nusing namespace osc;\n\nenum VoiceStatus {VOICE_IDLE, VOICE_PLAYING, VOICE_LOOPING};\n\nclass Voice {\npublic:\n  Voice(int channels, int buffer_size, int samplerate);\n  ~Voice();\n  \n  // control\n  int play(Sound *sound, jack_nframes_t when);\n  int reset();\n  int advance();\n  bool write(sample** buffers, jack_nframes_t frame_time);\n  VoiceStatus get_status();\n\nprivate:\n  Sound *m_sound;\n\n  uint64 start_timestamp;\n\n  int m_samplerate;\n  int m_buffer_size;\n  int m_channels;\n  int m_offset;\n  jack_nframes_t m_when;\n  VoiceStatus m_status;\n\n  // RubberBand::RubberBandStretcher *m_rubber;\n\n  // here be envelopes etc...\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "Ġ_", "Voice", "Ċ", "#", "define", "Ġ_", "Voice", "Ċ", "Ċ", "#", "include", "Ġ<", "jack", "/", "jack", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "//#", "include", "Ġ<", "ru", "bber", "band", "/", "Ru", "bber", "Band", "Stretch", "er", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "osc", "pack", "/", "osc", "/", "Osc", "Types", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "def", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "sound", ".", "hpp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġosc", ";", "Ċ", "Ċ", "enum", "ĠVo", "ice", "Status", "Ġ{", "VOICE", "_", "IDLE", ",", "ĠVO", "ICE", "_", "PLAY", "ING", ",", "ĠVO", "ICE", "_", "LOOP", "ING", "};", "Ċ", "Ċ", "class", "ĠVo", "ice", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠVo", "ice", "(", "int", "Ġchannels", ",", "Ġint", "Ġbuffer", "_", "size", ",", "Ġint", "Ġsampler", "ate", ");", "Ċ", "Ġ", "Ġ~", "Voice", "();", "Ċ", "ĠĠĊ", "Ġ", "Ġ//", "Ġcontrol", "Ċ", "Ġ", "Ġint", "Ġplay", "(", "Sound", "Ġ*", "sound", ",", "Ġjack", "_", "n", "frames", "_", "t", "Ġwhen", ");", "Ċ", "Ġ", "Ġint", "Ġreset", "();", "Ċ", "Ġ", "Ġint", "Ġadvance", "();", "Ċ", "Ġ", "Ġbool", "Ġwrite", "(", "sample", "**", "Ġbuffers", ",", "Ġjack", "_", "n", "frames", "_", "t", "Ġframe", "_", "time", ");", "Ċ", "Ġ", "ĠVo", "ice", "Status", "Ġget", "_", "status", "();", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "ĠSound", "Ġ*", "m", "_", "sound", ";", "Ċ", "Ċ", "Ġ", "Ġuint", "64", "Ġstart", "_", "timestamp", ";", "Ċ", "Ċ", "Ġ", "Ġint", "Ġm", "_", "sampler", "ate", ";", "Ċ", "Ġ", "Ġint", "Ġm", "_", "buffer", "_", "size", ";", "Ċ", "Ġ", "Ġint", "Ġm", "_", "channels", ";", "Ċ", "Ġ", "Ġint", "Ġm", "_", "offset", ";", "Ċ", "Ġ", "Ġjack", "_", "n", "frames", "_", "t", "Ġm", "_", "when", ";", "Ċ", "Ġ", "ĠVo", "ice", "Status", "Ġm", "_", "status", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠR", "u", "bber", "Band", "::", "Ru", "bber", "Band", "Stretch", "er", "Ġ*", "m", "_", "ru", "bber", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġhere", "Ġbe", "Ġenvelope", "s", "Ġetc", "...", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::693", "code": "#ifndef __JSONVALUESUITE_HPP__\n#define __JSONVALUESUITE_HPP__\n\n#include <pjson/pjson.hpp>\n#include <vector>\n#include <string>\n#include <iostream>\n\nclass JsonValueSuite\n{\n\tpublic:\n\t\tJsonValueSuite() {};\n\n\t\tvoid run();\n\t\tvoid report();\n\n\tprivate:\n\t\tvoid validString();\n\t\tvoid invalidString();\n\t\tvoid validNumber();\n\t\tvoid invalidNumber();\n\t\tvoid validObject();\n\t\tvoid invalidObject();\n\t\tvoid validBool();\n\t\tvoid invalidBool();\n\t\tvoid validNull();\n\t\tvoid invalidNull();\n\t\tvoid validArray();\n\t\tvoid invalidArray();\n\t\tvoid validNested();\n\t\tvoid invalidNested();\n\t\tvoid getType();\n\t\tvoid getOperator();\n\t\tvoid invalidGetOperator();\n\n\t\tvoid invalidGet();\n\t\tvoid objectHasKey();\n\t\tvoid arrayHasKey();\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "Ġ__", "JSON", "VALUE", "SUITE", "_", "HP", "P", "__", "Ċ", "#", "define", "Ġ__", "JSON", "VALUE", "SUITE", "_", "HP", "P", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "p", "json", "/", "p", "json", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "class", "ĠJsonValue", "Suite", "Ċ", "{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "JsonValue", "Suite", "()", "Ġ{};", "Ċ", "Ċ", "ĉ", "ĉ", "void", "Ġrun", "();", "Ċ", "ĉ", "ĉ", "void", "Ġreport", "();", "Ċ", "Ċ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "void", "Ġvalid", "String", "();", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "String", "();", "Ċ", "ĉ", "ĉ", "void", "Ġvalid", "Number", "();", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "Number", "();", "Ċ", "ĉ", "ĉ", "void", "Ġvalid", "Object", "();", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "Object", "();", "Ċ", "ĉ", "ĉ", "void", "Ġvalid", "Bool", "();", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "Bool", "();", "Ċ", "ĉ", "ĉ", "void", "Ġvalid", "Null", "();", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "Null", "();", "Ċ", "ĉ", "ĉ", "void", "Ġvalid", "Array", "();", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "Array", "();", "Ċ", "ĉ", "ĉ", "void", "Ġvalid", "Nested", "();", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "Nested", "();", "Ċ", "ĉ", "ĉ", "void", "ĠgetType", "();", "Ċ", "ĉ", "ĉ", "void", "Ġget", "Operator", "();", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "Get", "Operator", "();", "Ċ", "Ċ", "ĉ", "ĉ", "void", "Ġinvalid", "Get", "();", "Ċ", "ĉ", "ĉ", "void", "Ġobject", "HasKey", "();", "Ċ", "ĉ", "ĉ", "void", "Ġarray", "HasKey", "();", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::694", "code": "#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<cctype>\r\n#include<cstring>\r\n#include<cstdlib>\r\n#include<string>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<map>\r\n#include<iomanip>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,i,N[1000],temp,cnt;\r\n\tbool flag;\r\n\r\n\twhile(cin >> n)\r\n\t{\r\n\t\tcnt=0;\r\n\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tcin >> N[i]; \r\n\t\t}\r\n\r\n\t\twhile(1)\r\n\t\t{\r\n\t\t\tflag=true;\r\n\r\n\t\t\tfor(i=1;i<n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(N[i]<N[i-1])\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp=N[i];\r\n\t\t\t\t\tN[i]=N[i-1];\r\n\t\t\t\t\tN[i-1]=temp;\r\n\t\t\t\t\tcnt++;\r\n\t\t\t\t\tflag=false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(flag)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcout << \"Minimum exchange operations : \" << cnt <<endl;\r\n\t}\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "<", "i", "ostream", ">", "č", "Ċ", "#", "include", "<", "c", "stdio", ">", "č", "Ċ", "#", "include", "<", "cm", "ath", ">", "č", "Ċ", "#", "include", "<", "c", "ctype", ">", "č", "Ċ", "#", "include", "<", "cstring", ">", "č", "Ċ", "#", "include", "<", "c", "stdlib", ">", "č", "Ċ", "#", "include", "<", "string", ">", "č", "Ċ", "#", "include", "<", "vector", ">", "č", "Ċ", "#", "include", "<", "algorithm", ">", "č", "Ċ", "#", "include", "<", "map", ">", "č", "Ċ", "#", "include", "<", "iom", "an", "ip", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġn", ",", "i", ",", "N", "[", "1000", "],", "temp", ",", "cnt", ";", "č", "Ċ", "ĉ", "bool", "Ġflag", ";", "č", "Ċ", "č", "Ċ", "ĉ", "while", "(", "cin", "Ġ>>", "Ġn", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "cnt", "=", "0", ";", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "n", ";", "i", "++)", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉĉ", "ĉ", "cin", "Ġ>>", "ĠN", "[", "i", "];", "Ġ", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "while", "(", "1", ")", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉĉ", "ĉ", "flag", "=", "true", ";", "č", "Ċ", "č", "Ċ", "ĉĉ", "ĉ", "for", "(", "i", "=", "1", ";", "i", "<", "n", ";", "i", "++)", "č", "Ċ", "ĉĉ", "ĉ", "{", "č", "Ċ", "ĉĉĉ", "ĉ", "if", "(", "N", "[", "i", "]<", "N", "[", "i", "-", "1", "])", "č", "Ċ", "ĉĉĉ", "ĉ", "{", "č", "Ċ", "ĉĉĉĉ", "ĉ", "temp", "=", "N", "[", "i", "];", "č", "Ċ", "ĉĉĉĉ", "ĉ", "N", "[", "i", "]=", "N", "[", "i", "-", "1", "];", "č", "Ċ", "ĉĉĉĉ", "ĉ", "N", "[", "i", "-", "1", "]=", "temp", ";", "č", "Ċ", "ĉĉĉĉ", "ĉ", "cnt", "++;", "č", "Ċ", "ĉĉĉĉ", "ĉ", "flag", "=", "false", ";", "č", "Ċ", "ĉĉĉ", "ĉ", "}", "č", "Ċ", "ĉĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉĉ", "ĉ", "if", "(", "flag", ")", "č", "Ċ", "ĉĉ", "ĉ", "{", "č", "Ċ", "ĉĉĉ", "ĉ", "break", ";", "č", "Ċ", "ĉĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Minimum", "Ġexchange", "Ġoperations", "Ġ:", "Ġ\"", "Ġ<<", "Ġcnt", "Ġ<<", "endl", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::695", "code": "#include \"vDos.h\"\n#include \"inout.h\"\n\n\nstatic Bit8u dummy_read(Bitu /*port*/)\n\t{\n\treturn 0;\n\t}\t\n\nstatic void dummy_write(Bitu /*port*/, Bitu /*val*/)\n\t{\n\t}\n\nstatic Bit8u read_p64(Bitu port)\n\t{\n\treturn 0x1d;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Just to get rid of of all these reads\n\t}\n\n\nvoid KEYBOARD_Init()\n\t{\n\tIO_RegisterWriteHandler(0x60, dummy_write);\n\tIO_RegisterWriteHandler(0x61, dummy_write);\n\tIO_RegisterWriteHandler(0x64, dummy_write);\n\tIO_RegisterReadHandler(0x60, dummy_read);\n\tIO_RegisterReadHandler(0x61, dummy_read);\n\tIO_RegisterReadHandler(0x64, read_p64);\n\t}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "v", "Dos", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "inout", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "static", "ĠBit", "8", "u", "Ġdummy", "_", "read", "(", "Bit", "u", "Ġ/*", "port", "*/)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "ĉĊ", "Ċ", "static", "Ġvoid", "Ġdummy", "_", "write", "(", "Bit", "u", "Ġ/*", "port", "*/,", "ĠBit", "u", "Ġ/*", "val", "*/)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "static", "ĠBit", "8", "u", "Ġread", "_", "p", "64", "(", "Bit", "u", "Ġport", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġ0", "x", "1", "d", ";", "ĉĉĉĉĉĉĉĉĉĉĉĉĉĉĉĉ", "ĉ", "//", "ĠJust", "Ġto", "Ġget", "Ġrid", "Ġof", "Ġof", "Ġall", "Ġthese", "Ġreads", "Ċ", "ĉ", "}", "Ċ", "Ċ", "Ċ", "void", "ĠKEY", "BOARD", "_", "Init", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "IO", "_", "Register", "Write", "Handler", "(", "0", "x", "60", ",", "Ġdummy", "_", "write", ");", "Ċ", "ĉ", "IO", "_", "Register", "Write", "Handler", "(", "0", "x", "61", ",", "Ġdummy", "_", "write", ");", "Ċ", "ĉ", "IO", "_", "Register", "Write", "Handler", "(", "0", "x", "64", ",", "Ġdummy", "_", "write", ");", "Ċ", "ĉ", "IO", "_", "Register", "Read", "Handler", "(", "0", "x", "60", ",", "Ġdummy", "_", "read", ");", "Ċ", "ĉ", "IO", "_", "Register", "Read", "Handler", "(", "0", "x", "61", ",", "Ġdummy", "_", "read", ");", "Ċ", "ĉ", "IO", "_", "Register", "Read", "Handler", "(", "0", "x", "64", ",", "Ġread", "_", "p", "64", ");", "Ċ", "ĉ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::696", "code": "/*********************************************************************************\n *\n * This file is part of eSRO.\n *\n * eSRO is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * eSRO is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Copyright ⓒ 2013  Rafael Dominguez (npcdoom)\n *\n *********************************************************************************/\n\n#ifndef __SLES_GATEWAY_LISTING_HPP__\n#define __SLES_GATEWAY_LISTING_HPP__\n\n#include <stdint.h>\n#include <string>\n\nstruct News\n{\n\tuint32_t id;\n\tstd::string heading;\n\tstd::string message;\n\tuint16_t month;\n\tuint16_t day;\n};\n\n#endif\n", "code_tokens": ["Ġ/", "****************************************************************", "****************", "*", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġe", "S", "RO", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġe", "S", "RO", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠA", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ċ", "Ġ*", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "Ċ", "Ġ*", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġe", "S", "RO", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠA", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠA", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġâ", "ĵ", "Ĵ", "Ġ2013", "Ġ", "ĠR", "a", "fa", "el", "ĠDom", "ing", "ue", "z", "Ġ(", "npc", "do", "om", ")", "Ċ", "Ġ*", "Ċ", "Ġ*****************************************************************", "****************", "/", "Ċ", "Ċ", "#", "ifndef", "Ġ__", "S", "LES", "_", "GATE", "WAY", "_", "LIST", "ING", "_", "HP", "P", "__", "Ċ", "#", "define", "Ġ__", "S", "LES", "_", "GATE", "WAY", "_", "LIST", "ING", "_", "HP", "P", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "struct", "ĠNew", "s", "Ċ", "{", "Ċ", "ĉ", "uint", "32", "_", "t", "Ġid", ";", "Ċ", "ĉ", "std", "::", "string", "Ġheading", ";", "Ċ", "ĉ", "std", "::", "string", "Ġmessage", ";", "Ċ", "ĉ", "uint", "16", "_", "t", "Ġmonth", ";", "Ċ", "ĉ", "uint", "16", "_", "t", "Ġday", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::697", "code": "#include <xfc/main.hh>\n#include <xfc/gtk/checkbutton.hh>\n#include <xfc/gtk/label.hh>\n#include <xfc/gtk/spinbutton.hh>\n#include <xfc/gtk/window.hh>\n\nusing namespace Xfc;\n\nclass SpinButtonWindow : public Gtk::Window\n{\n\tGtk::SpinButton *spinner1;\n\tGtk::Label *val_label;\n\nprotected:\n\tvoid on_change_digits(Gtk::SpinButton *spin);\n\tvoid on_toggle_snap(Gtk::CheckButton *button);\n\tvoid on_toggle_numeric(Gtk::CheckButton *button);\n\tvoid on_get_value(bool value_as_int);\n\npublic:\n\tSpinButtonWindow();\n\tvirtual ~SpinButtonWindow();\n};\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "xfc", "/", "main", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "xfc", "/", "gtk", "/", "check", "button", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "xfc", "/", "gtk", "/", "label", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "xfc", "/", "gtk", "/", "spin", "button", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "xfc", "/", "gtk", "/", "window", ".", "hh", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠX", "fc", ";", "Ċ", "Ċ", "class", "ĠS", "pin", "Button", "Window", "Ġ:", "Ġpublic", "ĠGtk", "::", "Window", "Ċ", "{", "Ċ", "ĉ", "Gtk", "::", "Spin", "Button", "Ġ*", "spinner", "1", ";", "Ċ", "ĉ", "Gtk", "::", "Label", "Ġ*", "val", "_", "label", ";", "Ċ", "Ċ", "protected", ":", "Ċ", "ĉ", "void", "Ġon", "_", "change", "_", "digits", "(", "Gtk", "::", "Spin", "Button", "Ġ*", "spin", ");", "Ċ", "ĉ", "void", "Ġon", "_", "toggle", "_", "snap", "(", "Gtk", "::", "Check", "Button", "Ġ*", "button", ");", "Ċ", "ĉ", "void", "Ġon", "_", "toggle", "_", "numeric", "(", "Gtk", "::", "Check", "Button", "Ġ*", "button", ");", "Ċ", "ĉ", "void", "Ġon", "_", "get", "_", "value", "(", "bool", "Ġvalue", "_", "as", "_", "int", ");", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "Spin", "Button", "Window", "();", "Ċ", "ĉ", "virtual", "Ġ~", "Spin", "Button", "Window", "();", "Ċ", "};", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::698", "code": "// -*- mode:C++; tab-width:4; c-basic-offset:4; indent-tabs-mode:nil -*-\n\n#ifndef __EXAMPLE_PROGRAM_HPP__\n#define __EXAMPLE_PROGRAM_HPP__\n\n#include <yarp/os/all.h>\n#include <yarp/dev/all.h>\n\nnamespace teo\n{\n\n/**\n * @ingroup exampleProgram\n *\n * @brief exampleProgram\n *\n */\nclass ExampleProgram : public yarp::os::RFModule {\n    public:\n        bool configure(yarp::os::ResourceFinder &rf);\n\n    protected:\n\n        virtual bool interruptModule();\n        virtual double getPeriod();\n        virtual bool updateModule();\n\n        yarp::dev::PolyDriver device;\n        int counter;\n};\n\n}  // namespace teo\n\n#endif  // __EXAMPLE_PROGRAM_HPP__\n", "code_tokens": ["Ġ//", "Ġ-", "*-", "Ġmode", ":", "C", "++;", "Ġtab", "-", "width", ":", "4", ";", "Ġc", "-", "basic", "-", "offset", ":", "4", ";", "Ġindent", "-", "tabs", "-", "mode", ":", "nil", "Ġ-", "*-", "Ċ", "Ċ", "#", "ifndef", "Ġ__", "EX", "AMPLE", "_", "PROGRAM", "_", "HP", "P", "__", "Ċ", "#", "define", "Ġ__", "EX", "AMPLE", "_", "PROGRAM", "_", "HP", "P", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "y", "arp", "/", "os", "/", "all", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "y", "arp", "/", "dev", "/", "all", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġte", "o", "Ċ", "{", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "ingroup", "Ġexample", "Program", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ@", "brief", "Ġexample", "Program", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "class", "ĠExample", "Program", "Ġ:", "Ġpublic", "Ġy", "arp", "::", "os", "::", "RF", "Module", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġconfigure", "(", "y", "arp", "::", "os", "::", "Resource", "Finder", "Ġ&", "rf", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġprotected", ":", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvirtual", "Ġbool", "Ġinterrupt", "Module", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvirtual", "Ġdouble", "Ġget", "Period", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvirtual", "Ġbool", "Ġupdate", "Module", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġy", "arp", "::", "dev", "::", "Poly", "Driver", "Ġdevice", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġcounter", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġte", "o", "Ċ", "Ċ", "#", "endif", "Ġ", "Ġ//", "Ġ__", "EX", "AMPLE", "_", "PROGRAM", "_", "HP", "P", "__", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::699", "code": "#include \"typevariant.hpp\"\n\n#include <QMimeData>\n\nTypeVariant::TypeVariant() {\n  // Empty and invalid object\n}\n\nQList<TypeVariant> TypeVariant::fromMimeData(const QMimeData* mimeData) {\n  QList<TypeVariant> tvl;\n  QByteArray data = mimeData->data(\"bevel/type-variant\");\n  QDataStream stream(data);\n  stream >> tvl;\n  return tvl;\n}\n\nTypeVariant::TypeVariant(int typeId) {\n  this->typeId = typeId;\n  this->as = NULL;\n}\n\nTypeVariant::TypeVariant(const AttributeSet& as) {\n  this->as = new AttributeSet(as);\n}\n\nTypeVariant::~TypeVariant() {\n  if (as)\n    delete as;\n}\n\n\nint TypeVariant::toTypeId() const {\n  if (as)\n    return as->prototypeId;\n  else\n    return typeId;\n}\n\nAttributeSet TypeVariant::toAttributeSet() const {\n  if (as)\n    return *as;\n  else\n    return AttributeSet::fromPrototype(typeId);\n}\n\nQDataStream& operator<<(QDataStream& stream, const TypeVariant& tv) {\n  if (tv.as)\n    stream << true << *tv.as;\n  else\n    stream << false << tv.typeId;\n  return stream;\n}\n\nQDataStream& operator>>(QDataStream& stream, TypeVariant& tv) {\n  bool custom;\n  stream >> custom;\n  if (custom) {\n    tv.as = new AttributeSet();\n    stream >> *tv.as;\n  } else {\n    stream >> tv.typeId;\n    tv.as = NULL;\n  }\n  return stream;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "type", "variant", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Mime", "Data", ">", "Ċ", "Ċ", "Type", "Variant", "::", "Type", "Variant", "()", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠEmpty", "Ġand", "Ġinvalid", "Ġobject", "Ċ", "}", "Ċ", "Ċ", "QList", "<", "Type", "Variant", ">", "ĠType", "Variant", "::", "from", "Mime", "Data", "(", "const", "ĠQ", "Mime", "Data", "*", "Ġmime", "Data", ")", "Ġ{", "Ċ", "Ġ", "ĠQList", "<", "Type", "Variant", ">", "Ġt", "vl", ";", "Ċ", "Ġ", "ĠQByteArray", "Ġdata", "Ġ=", "Ġmime", "Data", "->", "data", "(\"", "be", "vel", "/", "type", "-", "variant", "\");", "Ċ", "Ġ", "ĠQ", "DataStream", "Ġstream", "(", "data", ");", "Ċ", "Ġ", "Ġstream", "Ġ>>", "Ġt", "vl", ";", "Ċ", "Ġ", "Ġreturn", "Ġt", "vl", ";", "Ċ", "}", "Ċ", "Ċ", "Type", "Variant", "::", "Type", "Variant", "(", "int", "Ġtype", "Id", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "typeId", "Ġ=", "Ġtype", "Id", ";", "Ċ", "Ġ", "Ġthis", "->", "as", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "Type", "Variant", "::", "Type", "Variant", "(", "const", "ĠAttribute", "Set", "&", "Ġas", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "as", "Ġ=", "Ġnew", "ĠAttribute", "Set", "(", "as", ");", "Ċ", "}", "Ċ", "Ċ", "Type", "Variant", "::~", "Type", "Variant", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "as", ")", "Ċ", "ĠĠĠ", "Ġdelete", "Ġas", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "int", "ĠType", "Variant", "::", "to", "TypeId", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "as", ")", "Ċ", "ĠĠĠ", "Ġreturn", "Ġas", "->", "prototype", "Id", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtype", "Id", ";", "Ċ", "}", "Ċ", "Ċ", "AttributeSet", "ĠType", "Variant", "::", "to", "AttributeSet", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "as", ")", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ*", "as", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "ĠĠĠ", "Ġreturn", "ĠAttribute", "Set", "::", "from", "Prototype", "(", "typeId", ");", "Ċ", "}", "Ċ", "Ċ", "Q", "DataStream", "&", "Ġoperator", "<<(", "Q", "DataStream", "&", "Ġstream", ",", "Ġconst", "ĠType", "Variant", "&", "Ġtv", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "tv", ".", "as", ")", "Ċ", "ĠĠĠ", "Ġstream", "Ġ<<", "Ġtrue", "Ġ<<", "Ġ*", "tv", ".", "as", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "ĠĠĠ", "Ġstream", "Ġ<<", "Ġfalse", "Ġ<<", "Ġtv", ".", "typeId", ";", "Ċ", "Ġ", "Ġreturn", "Ġstream", ";", "Ċ", "}", "Ċ", "Ċ", "Q", "DataStream", "&", "Ġoperator", ">>(", "Q", "DataStream", "&", "Ġstream", ",", "ĠType", "Variant", "&", "Ġtv", ")", "Ġ{", "Ċ", "Ġ", "Ġbool", "Ġcustom", ";", "Ċ", "Ġ", "Ġstream", "Ġ>>", "Ġcustom", ";", "Ċ", "Ġ", "Ġif", "Ġ(", "custom", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġtv", ".", "as", "Ġ=", "Ġnew", "ĠAttribute", "Set", "();", "Ċ", "ĠĠĠ", "Ġstream", "Ġ>>", "Ġ*", "tv", ".", "as", ";", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "Ġstream", "Ġ>>", "Ġtv", ".", "typeId", ";", "Ċ", "ĠĠĠ", "Ġtv", ".", "as", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġstream", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::700", "code": "#pragma once\n\n#include \"Object.hpp\"\n#include \"Shader.hpp\"\n#include \"gl_core_3_3.h\"\n\n#include <map>\n\nnamespace glrage {\nnamespace gl {\n\nclass Program : public Object\n{\npublic:\n    Program();\n    ~Program();\n    void bind();\n    void attach(Shader& shader);\n    void detach(Shader& shader);\n    void link();\n    void fragmentData(const std::string& name);\n    GLint attributeLocation(const std::string& name);\n    GLint uniformLocation(const std::string& name);\n\n    void uniform3f(const std::string& name, GLfloat v0, GLfloat v1, GLfloat v2);\n    void uniform4f(const std::string& name, GLfloat v0, GLfloat v1, GLfloat v2,\n        GLfloat v3);\n    void uniform1i(const std::string& name, GLint v0);\n    void uniformMatrix4fv(const std::string& name, GLsizei count,\n        GLboolean transpose, const GLfloat* value);\n\n    std::string infoLog();\n\nprivate:\n    std::map<std::string, GLint> m_attributeLocations;\n    std::map<std::string, GLint> m_uniformLocations;\n};\n\n} // namespace gl\n} // namespace glrage", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "Object", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Shader", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "gl", "_", "core", "_", "3", "_", "3", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "namespace", "Ġgl", "r", "age", "Ġ{", "Ċ", "namespace", "Ġgl", "Ġ{", "Ċ", "Ċ", "class", "ĠProgram", "Ġ:", "Ġpublic", "ĠObject", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠProgram", "();", "Ċ", "ĠĠĠ", "Ġ~", "Program", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġbind", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġattach", "(", "Shader", "&", "Ġshader", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġdetach", "(", "Shader", "&", "Ġshader", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġlink", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġfragment", "Data", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ");", "Ċ", "ĠĠĠ", "ĠGLint", "Ġattribute", "Location", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ");", "Ċ", "ĠĠĠ", "ĠGLint", "Ġuniform", "Location", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġuniform", "3", "f", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ",", "ĠGLfloat", "Ġv", "0", ",", "ĠGLfloat", "Ġv", "1", ",", "ĠGLfloat", "Ġv", "2", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġuniform", "4", "f", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ",", "ĠGLfloat", "Ġv", "0", ",", "ĠGLfloat", "Ġv", "1", ",", "ĠGLfloat", "Ġv", "2", ",", "Ċ", "ĠĠĠĠĠĠĠ", "ĠGLfloat", "Ġv", "3", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġuniform", "1", "i", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ",", "ĠGLint", "Ġv", "0", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġuniform", "Matrix", "4", "fv", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ",", "ĠGLsizei", "Ġcount", ",", "Ċ", "ĠĠĠĠĠĠĠ", "ĠGL", "boolean", "Ġtranspose", ",", "Ġconst", "ĠGLfloat", "*", "Ġvalue", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġinfo", "Log", "();", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠGLint", ">", "Ġm", "_", "attribute", "Locations", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠGLint", ">", "Ġm", "_", "uniform", "Locations", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġgl", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġgl", "r", "age"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::701", "code": "// \n// Copyright (C) University College London, 2007-2012, all rights reserved.\n// \n// This file is part of HemeLB and is provided to you under the terms of\n// the GNU LGPL. Please see LICENSE in the top level directory for full\n// details.\n// \n\n#include \"extraction/PropertyWriter.h\"\n\nnamespace hemelb\n{\n  namespace extraction\n  {\n    PropertyWriter::PropertyWriter(IterableDataSource& dataSource,\n                                   const std::vector<PropertyOutputFile*>& propertyOutputs)\n    {\n      for (unsigned outputNumber = 0; outputNumber < propertyOutputs.size(); ++outputNumber)\n      {\n        localPropertyOutputs.push_back(new LocalPropertyOutput(dataSource, propertyOutputs[outputNumber]));\n      }\n    }\n\n    PropertyWriter::~PropertyWriter()\n    {\n      for (unsigned outputNumber = 0; outputNumber < localPropertyOutputs.size(); ++outputNumber)\n      {\n        delete localPropertyOutputs[outputNumber];\n      }\n    }\n\n    const std::vector<LocalPropertyOutput*>& PropertyWriter::GetPropertyOutputs() const\n    {\n      return localPropertyOutputs;\n    }\n\n    void PropertyWriter::Write(unsigned long iterationNumber) const\n    {\n      for (unsigned outputNumber = 0; outputNumber < localPropertyOutputs.size(); ++outputNumber)\n      {\n        localPropertyOutputs[outputNumber]->Write((uint64_t) iterationNumber);\n      }\n    }\n  }\n}\n", "code_tokens": ["Ġ//", "Ġ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "ĠUn", "ivers", "ity", "ĠCol", "le", "ge", "ĠL", "ond", "on", ",", "Ġ2007", "-", "2012", ",", "Ġall", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠH", "eme", "LB", "Ġand", "Ġis", "Ġprovided", "Ġto", "Ġyou", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ċ", "//", "Ġthe", "ĠGNU", "ĠL", "G", "PL", ".", "ĠPlease", "Ġsee", "ĠLICENSE", "Ġin", "Ġthe", "Ġtop", "Ġlevel", "Ġdirectory", "Ġfor", "Ġfull", "Ċ", "//", "Ġdetails", ".", "Ċ", "//", "ĠĊ", "Ċ", "#", "include", "Ġ\"", "ex", "traction", "/", "Property", "Writer", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġhe", "mel", "b", "Ċ", "{", "Ċ", "Ġ", "Ġnamespace", "Ġextraction", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠProperty", "Writer", "::", "Property", "Writer", "(", "Iterable", "DataSource", "&", "ĠdataSource", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "Property", "OutputFile", "*", ">&", "Ġproperty", "Outputs", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġoutput", "Number", "Ġ=", "Ġ0", ";", "Ġoutput", "Number", "Ġ<", "Ġproperty", "Outputs", ".", "size", "();", "Ġ++", "output", "Number", ")", "Ċ", "ĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġlocal", "Property", "Outputs", ".", "push", "_", "back", "(", "new", "ĠLocal", "Property", "Output", "(", "dataSource", ",", "Ġproperty", "Outputs", "[", "output", "Number", "]));", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠProperty", "Writer", "::~", "Property", "Writer", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġoutput", "Number", "Ġ=", "Ġ0", ";", "Ġoutput", "Number", "Ġ<", "Ġlocal", "Property", "Outputs", ".", "size", "();", "Ġ++", "output", "Number", ")", "Ċ", "ĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdelete", "Ġlocal", "Property", "Outputs", "[", "output", "Number", "];", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "Local", "Property", "Output", "*", ">&", "ĠProperty", "Writer", "::", "GetProperty", "Outputs", "()", "Ġconst", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġlocal", "Property", "Outputs", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠProperty", "Writer", "::", "Write", "(", "unsigned", "Ġlong", "Ġiteration", "Number", ")", "Ġconst", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġoutput", "Number", "Ġ=", "Ġ0", ";", "Ġoutput", "Number", "Ġ<", "Ġlocal", "Property", "Outputs", ".", "size", "();", "Ġ++", "output", "Number", ")", "Ċ", "ĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġlocal", "Property", "Outputs", "[", "output", "Number", "]->", "Write", "((", "uint", "64", "_", "t", ")", "Ġiteration", "Number", ");", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::702", "code": "#include <iostream>\nusing namespace std;\nint main(){\n\tint cv, ce, cs, cp;\n\tint fv, fe, fs, fp;\n\n\tcin >> cv >> ce >> cs;\n\tcin >> fv >> fe >> fs;\n\n\tcp = (cv*3)+ce;\n\tfp = (fv*3)+fe;\n\n\tif( cp > fp){\n\t\tcout << \"C\" << endl;\n\t}else if( fp > cp){\n\t\tcout << \"F\" << endl;\n\t}else{\n\t\tif(cs>fs){\n\t\t\tcout << \"C\" << endl;\n\t\t}else if(fs>cs){\n\t\t\tcout << \"F\" << endl;\n\t\t}else{\n\t\t\tcout << \"=\" << endl;\n\t\t}\n\t}\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "int", "Ġcv", ",", "Ġce", ",", "Ġcs", ",", "Ġcp", ";", "Ċ", "ĉ", "int", "Ġfv", ",", "Ġfe", ",", "Ġfs", ",", "Ġfp", ";", "Ċ", "Ċ", "ĉ", "cin", "Ġ>>", "Ġcv", "Ġ>>", "Ġce", "Ġ>>", "Ġcs", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġfv", "Ġ>>", "Ġfe", "Ġ>>", "Ġfs", ";", "Ċ", "Ċ", "ĉ", "cp", "Ġ=", "Ġ(", "cv", "*", "3", ")+", "ce", ";", "Ċ", "ĉ", "fp", "Ġ=", "Ġ(", "fv", "*", "3", ")+", "fe", ";", "Ċ", "Ċ", "ĉ", "if", "(", "Ġcp", "Ġ>", "Ġfp", "){", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "C", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "else", "Ġif", "(", "Ġfp", "Ġ>", "Ġcp", "){", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "F", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "if", "(", "cs", ">", "fs", "){", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "C", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "ĉ", "}", "else", "Ġif", "(", "fs", ">", "cs", "){", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "F", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "ĉ", "}", "else", "{", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"=\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::703", "code": "#ifndef GRAPHICS_BASE_INCLUDED\n#define GRAPHICS_BASE_INCLUDED\n\n#include <list>\n#include \"property.hpp\"\n#include <rapidjson/document.h>\n\nnamespace trillek {\nnamespace graphics {\n\nclass GraphicsBase {\npublic:\n    GraphicsBase() : initialize_priority(0) {}\n    virtual ~GraphicsBase() {}\n\n    /**\n     * \\brief called when the graphics system starts to initialize objects\n     * \\param std::list<Property>& information about the graphics settings\n     * \\return false on errors, true for success\n     */\n    virtual bool SystemStart(const std::list<Property> &) = 0;\n\n    /**\n     * \\brief called when the graphics system needs to reinitialize objects\n     * \\param std::list<Property>& information about the graphics settings\n     * \\return false on errors, true for success\n     */\n    virtual bool SystemReset(const std::list<Property> &) = 0;\n\n    /**\n     * \\brief parse a graphics object from json\n     * \\param[in] const std::string& object_name the name of the node\n     * \\param[in] rapidjson::Value& node The node to parse.\n     * \\return false on errors, true for success\n     */\n    virtual bool Parse(const std::string &object_name, const rapidjson::Value& node) = 0;\n\n    /**\n     * \\brief Serialize this graphics object to the provided JSON node.\n     *\n     * \\param[in] rapidjson::Document& document The document to serialize to.\n     * \\return bool False if an error occured in serializing.\n     */\n    virtual bool Serialize(rapidjson::Document& document) = 0;\n\n    unsigned int initialize_priority;\n};\n\n} // namespace graphics\n} // namespace trillek\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠGR", "APH", "ICS", "_", "BASE", "_", "IN", "CLU", "DED", "Ċ", "#", "define", "ĠGR", "APH", "ICS", "_", "BASE", "_", "IN", "CLU", "DED", "Ċ", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "#", "include", "Ġ\"", "property", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "rapid", "json", "/", "document", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġtr", "ille", "k", "Ġ{", "Ċ", "namespace", "Ġgraphics", "Ġ{", "Ċ", "Ċ", "class", "ĠGraphics", "Base", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠGraphics", "Base", "()", "Ġ:", "Ġinitialize", "_", "priority", "(", "0", ")", "Ġ{}", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "Graphics", "Base", "()", "Ġ{}", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "brief", "Ġcalled", "Ġwhen", "Ġthe", "Ġgraphics", "Ġsystem", "Ġstarts", "Ġto", "Ġinitialize", "Ġobjects", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "param", "Ġstd", "::", "list", "<", "Property", ">&", "Ġinformation", "Ġabout", "Ġthe", "Ġgraphics", "Ġsettings", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "return", "Ġfalse", "Ġon", "Ġerrors", ",", "Ġtrue", "Ġfor", "Ġsuccess", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "ĠSystem", "Start", "(", "const", "Ġstd", "::", "list", "<", "Property", ">", "Ġ&)", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "brief", "Ġcalled", "Ġwhen", "Ġthe", "Ġgraphics", "Ġsystem", "Ġneeds", "Ġto", "Ġre", "initialize", "Ġobjects", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "param", "Ġstd", "::", "list", "<", "Property", ">&", "Ġinformation", "Ġabout", "Ġthe", "Ġgraphics", "Ġsettings", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "return", "Ġfalse", "Ġon", "Ġerrors", ",", "Ġtrue", "Ġfor", "Ġsuccess", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "ĠSystem", "Reset", "(", "const", "Ġstd", "::", "list", "<", "Property", ">", "Ġ&)", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "brief", "Ġparse", "Ġa", "Ġgraphics", "Ġobject", "Ġfrom", "Ġjson", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "param", "[", "in", "]", "Ġconst", "Ġstd", "::", "string", "&", "Ġobject", "_", "name", "Ġthe", "Ġname", "Ġof", "Ġthe", "Ġnode", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "param", "[", "in", "]", "Ġ", "rapid", "json", "::", "Value", "&", "Ġnode", "ĠThe", "Ġnode", "Ġto", "Ġparse", ".", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "return", "Ġfalse", "Ġon", "Ġerrors", ",", "Ġtrue", "Ġfor", "Ġsuccess", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "ĠParse", "(", "const", "Ġstd", "::", "string", "Ġ&", "object", "_", "name", ",", "Ġconst", "Ġ", "rapid", "json", "::", "Value", "&", "Ġnode", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ/**", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "brief", "ĠSerialize", "Ġthis", "Ġgraphics", "Ġobject", "Ġto", "Ġthe", "Ġprovided", "ĠJSON", "Ġnode", ".", "Ċ", "ĠĠĠĠ", "Ġ*", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "param", "[", "in", "]", "Ġ", "rapid", "json", "::", "Document", "&", "Ġdocument", "ĠThe", "Ġdocument", "Ġto", "Ġserialize", "Ġto", ".", "Ċ", "ĠĠĠĠ", "Ġ*", "Ġ\\", "return", "Ġbool", "ĠFalse", "Ġif", "Ġan", "Ġerror", "Ġoccured", "Ġin", "Ġser", "ializing", ".", "Ċ", "ĠĠĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġbool", "ĠSerialize", "(", "rapid", "json", "::", "Document", "&", "Ġdocument", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġunsigned", "Ġint", "Ġinitialize", "_", "priority", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġgraphics", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġtr", "ille", "k", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::704", "code": "/*\n * SimpleTask plugin implementation called SimpleImple1\n */\n\n#include <Toolbox/Plugin.hpp>\n\n#include \"../SimpleTask_interface.h\"\n\n\nTOOLBOX_DEFINE_PLUGIN( SimpleTask, SimpleImple1 )\n\n\tvirtual const std::string &Operation()\n\t{\n\t\tstatic std::string Op( \"* 5\" );\n\t\treturn Op;\n\t}\n\n\tvirtual int Task( int input )\n\t{\n\t\treturn input * 5;\n\t}\n\nTOOLBOX_END_PLUGIN_DEF\n\n\nextern \"C\"\n{\n\tTOOLBOX_DEFINE_PLUGIN_INFO( \"Simple1\",\n\t\t\t\t\t\t\t\t\"1.0\",\n\t\t\t\t\t\t\t\t\"SimpleTask\" )\n\n\tTOOLBOX_DEFINE_PLUGIN_FACTORY( SimpleTask, SimpleImple1 )\n\n\t// Optional plugin event functions\n\t// void onLoad();\n\t// void onUnload();\n}\n\n\n// vim: tabstop=4 shiftwidth=4\n// astyle: --indent=tab=4 --style=ansi --indent-switches --indent-namespaces --pad-oper\n\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠSimple", "Task", "Ġplugin", "Ġimplementation", "Ġcalled", "ĠSimple", "Imp", "le", "1", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "Toolbox", "/", "Plugin", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"../", "Simple", "Task", "_", "interface", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "TOOL", "BOX", "_", "DEFINE", "_", "PLUGIN", "(", "ĠSimple", "Task", ",", "ĠSimple", "Imp", "le", "1", "Ġ)", "Ċ", "Ċ", "ĉ", "virtual", "Ġconst", "Ġstd", "::", "string", "Ġ&", "Operation", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "static", "Ġstd", "::", "string", "ĠOp", "(", "Ġ\"*", "Ġ5", "\"", "Ġ);", "Ċ", "ĉ", "ĉ", "return", "ĠOp", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "virtual", "Ġint", "ĠTask", "(", "Ġint", "Ġinput", "Ġ)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġinput", "Ġ*", "Ġ5", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "TOOL", "BOX", "_", "END", "_", "PLUGIN", "_", "DEF", "Ċ", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ċ", "{", "Ċ", "ĉ", "TOOL", "BOX", "_", "DEFINE", "_", "PLUGIN", "_", "INFO", "(", "Ġ\"", "Simple", "1", "\",", "Ċ", "ĉĉĉĉĉĉĉ", "ĉ", "\"", "1", ".", "0", "\",", "Ċ", "ĉĉĉĉĉĉĉ", "ĉ", "\"", "Simple", "Task", "\"", "Ġ)", "Ċ", "Ċ", "ĉ", "TOOL", "BOX", "_", "DEFINE", "_", "PLUGIN", "_", "FACTORY", "(", "ĠSimple", "Task", ",", "ĠSimple", "Imp", "le", "1", "Ġ)", "Ċ", "Ċ", "ĉ", "//", "ĠOptional", "Ġplugin", "Ġevent", "Ġfunctions", "Ċ", "ĉ", "//", "Ġvoid", "ĠonLoad", "();", "Ċ", "ĉ", "//", "Ġvoid", "Ġon", "Unload", "();", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "Ġvim", ":", "Ġtab", "stop", "=", "4", "Ġshift", "width", "=", "4", "Ċ", "//", "Ġa", "style", ":", "Ġ--", "indent", "=", "tab", "=", "4", "Ġ--", "style", "=", "ansi", "Ġ--", "indent", "-", "switches", "Ġ--", "indent", "-", "namespaces", "Ġ--", "pad", "-", "oper", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::705", "code": "#pragma once\r\n\r\n\r\nclass InputHandler;\r\nclass Window;\r\n\r\n\r\nnamespace eda221\r\n{\r\n    //! \\brief Wrapper class for Assignment 2\r\n    class Assignment4 {\r\n    public:\r\n        //! \\brief Default constructor.\r\n        //!\r\n        //! It will initialise various modules of bonobo and retrieve a\r\n        //! window to draw to.\r\n        Assignment4();\r\n        \r\n        //! \\brief Default destructor.\r\n        //!\r\n        //! It will release the bonobo modules initialised by the\r\n        //! constructor, as well as the window.\r\n        ~Assignment4();\r\n        \r\n        //! \\brief Contains the logic of the assignment, along with the\r\n        //! render loop.\r\n        void run();\r\n        \r\n    private:\r\n        InputHandler *inputHandler;\r\n        Window       *window;\r\n    };\r\n}", "code_tokens": ["Ġ#", "pragma", "Ġonce", "č", "Ċ", "č", "Ċ", "č", "Ċ", "class", "ĠInput", "Handler", ";", "č", "Ċ", "class", "ĠWindow", ";", "č", "Ċ", "č", "Ċ", "č", "Ċ", "namespace", "Ġed", "a", "221", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ//!", "Ġ\\", "brief", "ĠWrapper", "Ġclass", "Ġfor", "ĠAssignment", "Ġ2", "č", "Ċ", "ĠĠĠ", "Ġclass", "ĠAssignment", "4", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġpublic", ":", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "Ġ\\", "brief", "ĠDefault", "Ġconstructor", ".", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "ĠIt", "Ġwill", "Ġinitialise", "Ġvarious", "Ġmodules", "Ġof", "Ġbon", "o", "bo", "Ġand", "Ġretrieve", "Ġa", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "Ġwindow", "Ġto", "Ġdraw", "Ġto", ".", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠAssignment", "4", "();", "č", "Ċ", "ĠĠĠĠĠĠĠĠ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "Ġ\\", "brief", "ĠDefault", "Ġdestructor", ".", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "ĠIt", "Ġwill", "Ġrelease", "Ġthe", "Ġbon", "o", "bo", "Ġmodules", "Ġinitialised", "Ġby", "Ġthe", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "Ġconstructor", ",", "Ġas", "Ġwell", "Ġas", "Ġthe", "Ġwindow", ".", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ~", "Assignment", "4", "();", "č", "Ċ", "ĠĠĠĠĠĠĠĠ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "Ġ\\", "brief", "ĠContains", "Ġthe", "Ġlogic", "Ġof", "Ġthe", "Ġassignment", ",", "Ġalong", "Ġwith", "Ġthe", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//!", "Ġrender", "Ġloop", ".", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġrun", "();", "č", "Ċ", "ĠĠĠĠĠĠĠĠ", "č", "Ċ", "ĠĠĠ", "Ġprivate", ":", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠInput", "Handler", "Ġ*", "input", "Handler", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠWindow", "ĠĠĠĠĠĠ", "Ġ*", "window", ";", "č", "Ċ", "ĠĠĠ", "Ġ};", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::706", "code": "// ZServerEar.cpp : implementation file\r\n//\r\n\r\n#include \"stdafx.h\"\r\n#include \"ZenServer.h\"\r\n#include \"ZServerEar.h\"\r\n#include \"ChildView.h\"\r\n\r\n#ifdef _DEBUG\r\n#define new DEBUG_NEW\r\n#undef THIS_FILE\r\nstatic char THIS_FILE[] = __FILE__;\r\n#endif\r\n\r\n/////////////////////////////////////////////////////////////////////////////\r\n// ZServerEar\r\n\r\nZServerEar::ZServerEar()\r\n{\r\n\ttheUsers.Setup(this);\r\n}\r\n\r\nZServerEar::~ZServerEar()\r\n{\r\n}\r\n\r\n\r\n// Do not edit the following lines, which are needed by ClassWizard.\r\n#if 0\r\nBEGIN_MESSAGE_MAP(ZServerEar, CSocket)\r\n\t//{{AFX_MSG_MAP(ZServerEar)\r\n\t//}}AFX_MSG_MAP\r\nEND_MESSAGE_MAP()\r\n#endif\t// 0\r\n\r\n/////////////////////////////////////////////////////////////////////////////\r\n// ZServerEar member functions\r\n\r\nvoid ZServerEar::OnAccept(int nErrorCode) \r\n{\r\n\t// TODO: Add your specialized code here and/or call the base class\r\n\tAccept(theUsers.InsertUser()->theSocket);\r\n\tCString l;\r\n\tl = \"ZHELLO\";\r\n\ttheUsers.GetHead()->SendMessage(l);\r\n\tRefresh();\r\n\tCSocket::OnAccept(nErrorCode);\r\n}\r\n\r\nvoid ZServerEar::SendGMessage(CString &msg)\r\n{\r\ntheUsers.SendGlobalMessage(msg);\r\n}\r\n\r\nvoid ZServerEar::Render(CPaintDC &dc)\r\n{\r\ntheUsers.Render(dc);\r\n}\r\n\r\nvoid ZServerEar::Refresh()\r\n{\r\n\ttheView->Invalidate();\r\n}", "code_tokens": ["Ġ//", "ĠZ", "Server", "Ear", ".", "cpp", "Ġ:", "Ġimplementation", "Ġfile", "č", "Ċ", "//", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Z", "en", "Server", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Z", "Server", "Ear", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Child", "View", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "ifdef", "Ġ_", "DEBUG", "č", "Ċ", "#", "define", "Ġnew", "ĠDEBUG", "_", "NEW", "č", "Ċ", "#", "undef", "ĠTHIS", "_", "FILE", "č", "Ċ", "static", "Ġchar", "ĠTHIS", "_", "FILE", "[]", "Ġ=", "Ġ__", "FILE", "__;", "č", "Ċ", "#", "endif", "č", "Ċ", "č", "Ċ", "/////////////////////////////////////////////////////////////////////////////", "č", "Ċ", "//", "ĠZ", "Server", "Ear", "č", "Ċ", "č", "Ċ", "Z", "Server", "Ear", "::", "Z", "Server", "Ear", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "the", "Users", ".", "Setup", "(", "this", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Z", "Server", "Ear", "::~", "Z", "Server", "Ear", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "//", "ĠDo", "Ġnot", "Ġedit", "Ġthe", "Ġfollowing", "Ġlines", ",", "Ġwhich", "Ġare", "Ġneeded", "Ġby", "ĠClass", "Wizard", ".", "č", "Ċ", "#", "if", "Ġ0", "č", "Ċ", "BEGIN", "_", "MESSAGE", "_", "MAP", "(", "Z", "Server", "Ear", ",", "ĠC", "Socket", ")", "č", "Ċ", "ĉ", "//", "{{", "AFX", "_", "MSG", "_", "MAP", "(", "Z", "Server", "Ear", ")", "č", "Ċ", "ĉ", "//", "}}", "AFX", "_", "MSG", "_", "MAP", "č", "Ċ", "END", "_", "MESSAGE", "_", "MAP", "()", "č", "Ċ", "#", "endif", "ĉ", "//", "Ġ0", "č", "Ċ", "č", "Ċ", "/////////////////////////////////////////////////////////////////////////////", "č", "Ċ", "//", "ĠZ", "Server", "Ear", "Ġmember", "Ġfunctions", "č", "Ċ", "č", "Ċ", "void", "ĠZ", "Server", "Ear", "::", "On", "Accept", "(", "int", "Ġn", "ErrorCode", ")", "Ġ", "č", "Ċ", "{", "č", "Ċ", "ĉ", "//", "ĠTODO", ":", "ĠAdd", "Ġyour", "Ġspecialized", "Ġcode", "Ġhere", "Ġand", "/", "or", "Ġcall", "Ġthe", "Ġbase", "Ġclass", "č", "Ċ", "ĉ", "Accept", "(", "the", "Users", ".", "Insert", "User", "()->", "the", "Socket", ");", "č", "Ċ", "ĉ", "CString", "Ġl", ";", "č", "Ċ", "ĉ", "l", "Ġ=", "Ġ\"", "Z", "HELLO", "\";", "č", "Ċ", "ĉ", "the", "Users", ".", "Get", "Head", "()->", "SendMessage", "(", "l", ");", "č", "Ċ", "ĉ", "Refresh", "();", "č", "Ċ", "ĉ", "CS", "ocket", "::", "On", "Accept", "(", "n", "ErrorCode", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠZ", "Server", "Ear", "::", "Send", "G", "Message", "(", "CString", "Ġ&", "msg", ")", "č", "Ċ", "{", "č", "Ċ", "the", "Users", ".", "Send", "Global", "Message", "(", "msg", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠZ", "Server", "Ear", "::", "Render", "(", "C", "Paint", "DC", "Ġ&", "dc", ")", "č", "Ċ", "{", "č", "Ċ", "the", "Users", ".", "Render", "(", "dc", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠZ", "Server", "Ear", "::", "Refresh", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "the", "View", "->", "Invalidate", "();", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::707", "code": "#include \"qutils/TranslationHelper.h\"\n// Qt\n#include <QGuiApplication>\n#include <QTranslator>\n\nnamespace zmc\n{\n\nTranslationHelper::TranslationHelper(QObject *parent)\n    : QObject(parent)\n    , m_Translator(new QTranslator(this))\n    , m_SourceLang(\"tr_TR\")\n    , m_CurrentLang(m_SourceLang)\n    , m_TranslationsDir(\"translations\")\n{\n    loadSystemLanguage();\n}\n\nQString TranslationHelper::getLanguageChangedSignal()\n{\n    return \"\";\n}\n\nvoid TranslationHelper::setSourceLang(const QString &lang)\n{\n    m_SourceLang = lang;\n}\n\nQString TranslationHelper::getSourceLang() const\n{\n    return m_SourceLang;\n}\n\nvoid TranslationHelper::selectLanguage(const QString &language)\n{\n    if (m_CurrentLang == language) {\n        return;\n    }\n\n    if (m_SourceLang == language) {\n        removeTranslator();\n        return;\n    }\n\n    if (m_Translator->load(language, m_TranslationsDir)) {\n        m_CurrentLang = language;\n        qApp->installTranslator(m_Translator);\n        emit languageChanged();\n    }\n}\n\nQString TranslationHelper::getCurrentLang() const\n{\n    return m_CurrentLang;\n}\n\nvoid TranslationHelper::loadSystemLanguage()\n{\n    selectLanguage(QLocale::system().name());\n}\n\nvoid TranslationHelper::removeTranslator()\n{\n    if (qApp->removeTranslator(m_Translator)) {\n        emit languageChanged();\n    }\n}\n\nQString TranslationHelper::getTranslationsDir() const\n{\n    return m_TranslationsDir;\n}\n\nvoid TranslationHelper::setTranslationsDir(const QString &dir)\n{\n    m_TranslationsDir = dir;\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "q", "utils", "/", "Translation", "Helper", ".", "h", "\"", "Ċ", "//", "ĠQt", "Ċ", "#", "include", "Ġ<", "Q", "Gui", "Application", ">", "Ċ", "#", "include", "Ġ<", "Q", "Translator", ">", "Ċ", "Ċ", "namespace", "Ġz", "mc", "Ċ", "{", "Ċ", "Ċ", "Translation", "Helper", "::", "Translation", "Helper", "(", "QObject", "Ġ*", "parent", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠQObject", "(", "parent", ")", "Ċ", "ĠĠĠ", "Ġ,", "Ġm", "_", "Translator", "(", "new", "ĠQ", "Translator", "(", "this", "))", "Ċ", "ĠĠĠ", "Ġ,", "Ġm", "_", "Source", "Lang", "(\"", "tr", "_", "TR", "\")", "Ċ", "ĠĠĠ", "Ġ,", "Ġm", "_", "Current", "Lang", "(", "m", "_", "Source", "Lang", ")", "Ċ", "ĠĠĠ", "Ġ,", "Ġm", "_", "Translations", "Dir", "(\"", "translations", "\")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġload", "System", "Language", "();", "Ċ", "}", "Ċ", "Ċ", "QString", "ĠTranslation", "Helper", "::", "getLanguage", "Changed", "Signal", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ\"\";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTranslation", "Helper", "::", "setSource", "Lang", "(", "const", "ĠQString", "Ġ&", "lang", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "Source", "Lang", "Ġ=", "Ġlang", ";", "Ċ", "}", "Ċ", "Ċ", "QString", "ĠTranslation", "Helper", "::", "getSource", "Lang", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġm", "_", "Source", "Lang", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTranslation", "Helper", "::", "select", "Language", "(", "const", "ĠQString", "Ġ&", "language", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "_", "Current", "Lang", "Ġ==", "Ġlanguage", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "_", "Source", "Lang", "Ġ==", "Ġlanguage", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġremove", "Translator", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "_", "Translator", "->", "load", "(", "language", ",", "Ġm", "_", "Translations", "Dir", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "_", "Current", "Lang", "Ġ=", "Ġlanguage", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġq", "App", "->", "install", "Translator", "(", "m", "_", "Translator", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġemit", "Ġlanguage", "Changed", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "QString", "ĠTranslation", "Helper", "::", "getCurrent", "Lang", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġm", "_", "Current", "Lang", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTranslation", "Helper", "::", "load", "System", "Language", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġselect", "Language", "(", "Q", "Locale", "::", "system", "().", "name", "());", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTranslation", "Helper", "::", "remove", "Translator", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "q", "App", "->", "remove", "Translator", "(", "m", "_", "Translator", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġemit", "Ġlanguage", "Changed", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "QString", "ĠTranslation", "Helper", "::", "get", "Translations", "Dir", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġm", "_", "Translations", "Dir", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTranslation", "Helper", "::", "set", "Translations", "Dir", "(", "const", "ĠQString", "Ġ&", "dir", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "Translations", "Dir", "Ġ=", "Ġdir", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::708", "code": "#include <iostream>\r\n#include <iomanip>\r\n\r\n#include \"color/color.hpp\"\r\n\r\n\r\nint main( int argc, char *argv[] )\r\n {\r\n  ::color::argb< ::color::type::split8888_t > r;\r\n\r\n  r = ::color::constant::orange_t{}; //!< Fill with some useful information\r\n  ::color::set::alpha( r, 255 );\r\n\r\n  std::cout<< (unsigned)r[0] << \",\" << (unsigned)r[1] << \",\" << (unsigned)r[2] << \",\" << (unsigned)r[3];\r\n\r\n  std::cout<< std::endl;\r\n\r\n  return EXIT_SUCCESS;\r\n } ", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "color", "/", "color", ".", "hpp", "\"", "č", "Ċ", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[]", "Ġ)", "č", "Ċ", "Ġ{", "č", "Ċ", "Ġ", "Ġ::", "color", "::", "argb", "<", "Ġ::", "color", "::", "type", "::", "split", "8888", "_", "t", "Ġ>", "Ġr", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġr", "Ġ=", "Ġ::", "color", "::", "constant", "::", "orange", "_", "t", "{};", "Ġ//!", "<", "ĠFill", "Ġwith", "Ġsome", "Ġuseful", "Ġinformation", "č", "Ċ", "Ġ", "Ġ::", "color", "::", "set", "::", "alpha", "(", "Ġr", ",", "Ġ255", "Ġ);", "č", "Ċ", "č", "Ċ", "Ġ", "Ġstd", "::", "cout", "<<", "Ġ(", "unsigned", ")", "r", "[", "0", "]", "Ġ<<", "Ġ\",\"", "Ġ<<", "Ġ(", "unsigned", ")", "r", "[", "1", "]", "Ġ<<", "Ġ\",\"", "Ġ<<", "Ġ(", "unsigned", ")", "r", "[", "2", "]", "Ġ<<", "Ġ\",\"", "Ġ<<", "Ġ(", "unsigned", ")", "r", "[", "3", "];", "č", "Ċ", "č", "Ċ", "Ġ", "Ġstd", "::", "cout", "<<", "Ġstd", "::", "endl", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġreturn", "ĠEXIT", "_", "SUCCESS", ";", "č", "Ċ", "Ġ}", "Ġ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::709", "code": "#ifndef BOOST_METAPARSE_V1_CPP98_IMPL_PUSH_BACK_C_HPP\r\n#define BOOST_METAPARSE_V1_CPP98_IMPL_PUSH_BACK_C_HPP\r\n\r\n// Copyright Abel Sinkovics (abel@sinkovics.hu)  2013.\r\n// Distributed under the Boost Software License, Version 1.0.\r\n//    (See accompanying file LICENSE_1_0.txt or copy at\r\n//          http://www.boost.org/LICENSE_1_0.txt)\r\n\r\n#include <boost/metaparse/v1/cpp98/fwd/string.hpp>\r\n#include <boost/metaparse/v1/cpp98/impl/update_c.hpp>\r\n#include <boost/metaparse/v1/cpp98/impl/size.hpp>\r\n\r\nnamespace boost\r\n{\r\n  namespace metaparse\r\n  {\r\n    namespace v1\r\n    {\r\n      namespace impl\r\n      {\r\n        template <class S, char C>\r\n        struct push_back_c;\r\n\r\n        template <class S, char C>\r\n        struct push_back_c :\r\n          update_c<typename S::type, size<typename S::type>::type::value, C>\r\n        {};\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n#endif\r\n\r\n", "code_tokens": ["Ġ#", "ifndef", "ĠBOOST", "_", "MET", "AP", "AR", "SE", "_", "V", "1", "_", "CPP", "98", "_", "IMPL", "_", "PUSH", "_", "BACK", "_", "C", "_", "HP", "P", "č", "Ċ", "#", "define", "ĠBOOST", "_", "MET", "AP", "AR", "SE", "_", "V", "1", "_", "CPP", "98", "_", "IMPL", "_", "PUSH", "_", "BACK", "_", "C", "_", "HP", "P", "č", "Ċ", "č", "Ċ", "//", "ĠCopyright", "ĠAb", "el", "ĠSink", "ov", "ics", "Ġ(", "abel", "@", "sink", "ov", "ics", ".", "hu", ")", "Ġ", "Ġ2013", ".", "č", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "č", "Ċ", "//", "ĠĠĠ", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "č", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "met", "ap", "arse", "/", "v", "1", "/", "cpp", "98", "/", "fwd", "/", "string", ".", "hpp", ">", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "met", "ap", "arse", "/", "v", "1", "/", "cpp", "98", "/", "impl", "/", "update", "_", "c", ".", "hpp", ">", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "met", "ap", "arse", "/", "v", "1", "/", "cpp", "98", "/", "impl", "/", "size", ".", "hpp", ">", "č", "Ċ", "č", "Ċ", "namespace", "Ġboost", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġnamespace", "Ġmet", "ap", "arse", "č", "Ċ", "Ġ", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġnamespace", "Ġv", "1", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠ", "Ġnamespace", "Ġimpl", "č", "Ċ", "ĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtemplate", "Ġ<", "class", "ĠS", ",", "Ġchar", "ĠC", ">", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstruct", "Ġpush", "_", "back", "_", "c", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtemplate", "Ġ<", "class", "ĠS", ",", "Ġchar", "ĠC", ">", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstruct", "Ġpush", "_", "back", "_", "c", "Ġ:", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġupdate", "_", "c", "<", "typename", "ĠS", "::", "type", ",", "Ġsize", "<", "typename", "ĠS", "::", "type", ">::", "type", "::", "value", ",", "ĠC", ">", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{};", "č", "Ċ", "ĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "endif", "č", "Ċ", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::710", "code": "#include \"system_timer.h\"\n\nSystemTimer* SystemTimer::instance = 0;\n\nSystemTimer* SystemTimer::GetInstance(){\n\tif ( instance == 0 ){\n\t\tinstance = new SystemTimer;\n\t}\n\treturn instance;\n}\n\nbool SystemTimer::DeleteInstance(){\n\tif ( instance != 0 ){\n\t\tdelete instance;\n\t\tinstance = 0;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nSystemTimer::SystemTimer(){\n\t\n}\n\nSystemTimer::~SystemTimer(){\n\n}\n\nvoid SystemTimer::BeginTimer(){\n\tbegin_time_ = QTime::currentTime();\n}\n\nvoid SystemTimer::EndTimer(){\n\tQTime end_time = QTime::currentTime();\n\tinterval_ = begin_time_.msecsTo(end_time);\n}\n\nvoid SystemTimer::PrintTime(){\n\tqDebug() << \"Time: \" << interval_;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "system", "_", "timer", ".", "h", "\"", "Ċ", "Ċ", "System", "Timer", "*", "ĠSystem", "Timer", "::", "instance", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "System", "Timer", "*", "ĠSystem", "Timer", "::", "GetInstance", "(){", "Ċ", "ĉ", "if", "Ġ(", "Ġinstance", "Ġ==", "Ġ0", "Ġ){", "Ċ", "ĉ", "ĉ", "instance", "Ġ=", "Ġnew", "ĠSystem", "Timer", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġinstance", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠSystem", "Timer", "::", "Delete", "Instance", "(){", "Ċ", "ĉ", "if", "Ġ(", "Ġinstance", "Ġ!=", "Ġ0", "Ġ){", "Ċ", "ĉ", "ĉ", "delete", "Ġinstance", ";", "Ċ", "ĉ", "ĉ", "instance", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "System", "Timer", "::", "System", "Timer", "(){", "Ċ", "ĉ", "Ċ", "}", "Ċ", "Ċ", "System", "Timer", "::~", "System", "Timer", "(){", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSystem", "Timer", "::", "Begin", "Timer", "(){", "Ċ", "ĉ", "begin", "_", "time", "_", "Ġ=", "ĠQ", "Time", "::", "currentTime", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSystem", "Timer", "::", "End", "Timer", "(){", "Ċ", "ĉ", "Q", "Time", "Ġend", "_", "time", "Ġ=", "ĠQ", "Time", "::", "currentTime", "();", "Ċ", "ĉ", "interval", "_", "Ġ=", "Ġbegin", "_", "time", "_.", "msecs", "To", "(", "end", "_", "time", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSystem", "Timer", "::", "Print", "Time", "(){", "Ċ", "ĉ", "qDebug", "()", "Ġ<<", "Ġ\"", "Time", ":", "Ġ\"", "Ġ<<", "Ġinterval", "_;", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::711", "code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <stack>\n#include <algorithm>\nusing namespace std;\n\n\nbool isMatch(char left, char right) {\n\tif (left == '(' && right == ')') {\n\t\treturn true;\n\t} else if (left == '{' && right == '}') {\n\t\treturn true;\n\t} else if (left == '[' && right == ']') {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nint main() {\n\t/* Enter your code here. Read input from STDIN. Print output to STDOUT */\n\tstack<char> s;\n\tint n;\n\tstring str;\n\tchar topCh;\n\n\n\tcin >> n;\n\n\tfor (int t = 0; t < n; t++) {\n\t\tcin >> str;\n\t\tbool flag = true;\n\t\tfor (int i = 0; i < str.size(); i++) {\n\t\t\tif (str[i] == '{' || str[i] == '(' || str[i] == '[') {\n\t\t\t\ts.push(str[i]);\n\t\t\t} else {\n\t\t\t\tif (s.empty()) {\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttopCh = s.top();\n\t\t\t\ts.pop();\n\t\t\t\tif (!isMatch(topCh, str[i])) {\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (s.empty() && flag) {\n\t\t\tcout << \"YES\" << endl;\n\t\t} else {\n\t\t\tcout << \"NO\" << endl;\n\t\t}\n\n\t\twhile (!s.empty()) s.pop();\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "stack", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "bool", "Ġis", "Match", "(", "char", "Ġleft", ",", "Ġchar", "Ġright", ")", "Ġ{", "Ċ", "ĉ", "if", "Ġ(", "left", "Ġ==", "Ġ'('", "Ġ&&", "Ġright", "Ġ==", "Ġ')')", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ġelse", "Ġif", "Ġ(", "left", "Ġ==", "Ġ'{'", "Ġ&&", "Ġright", "Ġ==", "Ġ'}", "')", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ġelse", "Ġif", "Ġ(", "left", "Ġ==", "Ġ'['", "Ġ&&", "Ġright", "Ġ==", "Ġ']')", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "/*", "ĠEnter", "Ġyour", "Ġcode", "Ġhere", ".", "ĠRead", "Ġinput", "Ġfrom", "ĠSTD", "IN", ".", "ĠPrint", "Ġoutput", "Ġto", "ĠSTDOUT", "Ġ*/", "Ċ", "ĉ", "stack", "<", "char", ">", "Ġs", ";", "Ċ", "ĉ", "int", "Ġn", ";", "Ċ", "ĉ", "string", "Ġstr", ";", "Ċ", "ĉ", "char", "Ġtop", "Ch", ";", "Ċ", "Ċ", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", ";", "Ċ", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġt", "Ġ=", "Ġ0", ";", "Ġt", "Ġ<", "Ġn", ";", "Ġt", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġstr", ";", "Ċ", "ĉ", "ĉ", "bool", "Ġflag", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġstr", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉĉ", "ĉ", "if", "Ġ(", "str", "[", "i", "]", "Ġ==", "Ġ'{'", "Ġ||", "Ġstr", "[", "i", "]", "Ġ==", "Ġ'('", "Ġ||", "Ġstr", "[", "i", "]", "Ġ==", "Ġ'[')", "Ġ{", "Ċ", "ĉĉĉ", "ĉ", "s", ".", "push", "(", "str", "[", "i", "]);", "Ċ", "ĉĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉĉĉ", "ĉ", "if", "Ġ(", "s", ".", "empty", "())", "Ġ{", "Ċ", "ĉĉĉĉ", "ĉ", "flag", "Ġ=", "Ġfalse", ";", "Ċ", "ĉĉĉĉ", "ĉ", "break", ";", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "ĉĉĉ", "ĉ", "top", "Ch", "Ġ=", "Ġs", ".", "top", "();", "Ċ", "ĉĉĉ", "ĉ", "s", ".", "pop", "();", "Ċ", "ĉĉĉ", "ĉ", "if", "Ġ(!", "is", "Match", "(", "top", "Ch", ",", "Ġstr", "[", "i", "]))", "Ġ{", "Ċ", "ĉĉĉĉ", "ĉ", "flag", "Ġ=", "Ġfalse", ";", "Ċ", "ĉĉĉĉ", "ĉ", "break", ";", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "s", ".", "empty", "()", "Ġ&&", "Ġflag", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "YES", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "NO", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "while", "Ġ(!", "s", ".", "empty", "())", "Ġs", ".", "pop", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::712", "code": "/******************************************************************************  \n  Copyright 2015 Matthew The <matthew.the@scilifelab.se>\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  \n ******************************************************************************/\n \n#include \"PvalueTriplet.h\"\n\nnamespace maracluster {\n\nvoid PvalueTriplet::readFromString(const char* f, char** next) {\n  scannr1.readFromString(f, next); f = *next;\n  scannr2.readFromString(f, next); f = *next;\n  pval = strtod(f, next);\n}\n\nstd::ostream& operator<<(std::ostream& stream, const PvalueTriplet& t) {\n  stream << t.scannr1 << \" \" << t.scannr2 << \" \" << t.pval;\n  return stream;\n}\n\n\n} /* namespace maracluster */\n", "code_tokens": ["Ġ/", "************************************************************************", "******", "ĠĠĊ", "Ġ", "ĠCopyright", "Ġ2015", "ĠMat", "th", "ew", "ĠThe", "Ġ<", "mat", "th", "ew", ".", "the", "@", "sc", "il", "if", "el", "ab", ".", "se", ">", "Ċ", "Ġ", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ċ", "ĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ċ", "Ġ", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "ĠĠĊ", "Ġ******************************************************************************/", "Ċ", "Ġ", "Ċ", "#", "include", "Ġ\"", "P", "value", "Triple", "t", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġm", "ara", "cluster", "Ġ{", "Ċ", "Ċ", "void", "ĠP", "value", "Triple", "t", "::", "read", "FromString", "(", "const", "Ġchar", "*", "Ġf", ",", "Ġchar", "**", "Ġnext", ")", "Ġ{", "Ċ", "Ġ", "Ġsc", "ann", "r", "1", ".", "read", "FromString", "(", "f", ",", "Ġnext", ");", "Ġf", "Ġ=", "Ġ*", "next", ";", "Ċ", "Ġ", "Ġsc", "ann", "r", "2", ".", "read", "FromString", "(", "f", ",", "Ġnext", ");", "Ġf", "Ġ=", "Ġ*", "next", ";", "Ċ", "Ġ", "Ġp", "val", "Ġ=", "Ġstr", "tod", "(", "f", ",", "Ġnext", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "ostream", "&", "Ġoperator", "<<(", "std", "::", "ostream", "&", "Ġstream", ",", "Ġconst", "ĠP", "value", "Triple", "t", "&", "Ġt", ")", "Ġ{", "Ċ", "Ġ", "Ġstream", "Ġ<<", "Ġt", ".", "sc", "ann", "r", "1", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġt", ".", "sc", "ann", "r", "2", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġt", ".", "pval", ";", "Ċ", "Ġ", "Ġreturn", "Ġstream", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġm", "ara", "cluster", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::713", "code": "// This file is part of the Orbbec Astra SDK [https://orbbec3d.com]\n// Copyright (c) 2015 Orbbec 3D\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Be excellent to each other.\n#ifndef ASTRA_FILESYSTEM_H\n#define ASTRA_FILESYSTEM_H\n\n#include <string>\n#include \"astra_platform.hpp\"\n\n#if (ASTRA_PLATFORM == ASTRA_PLATFORM_WIN32)\n#include \"win32/astra_filesystem_win32.hpp\"\n#elif defined(ASTRA_UNIXISH)\n#include \"unix/astra_filesystem_unix.hpp\"\n#else\n#error \"Unsupported platform!\"\n#endif\n\nnamespace astra { namespace filesystem {\n\n    bool ends_with_path_separator(const std::string& path);\n    std::string trim_path_separator(const std::string& path);\n    std::string append_path_separator(const std::string& path);\n    std::string directory_name(const std::string& filePath);\n    std::string combine_paths(const std::string& left, const std::string& right);\n}}\n\n#endif /* ASTRA_FILESYSTEM_H */\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠOr", "bb", "ec", "ĠA", "stra", "ĠSDK", "Ġ[", "https", "://", "or", "bb", "ec", "3", "d", ".", "com", "]", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "ĠOr", "bb", "ec", "Ġ3", "D", "Ċ", "//", "Ċ", "//", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "//", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "//", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "//", "Ċ", "//", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "//", "Ċ", "//", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "//", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "//", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "//", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "//", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "//", "Ċ", "//", "ĠBe", "Ġex", "cell", "ent", "Ġto", "Ġeach", "Ġother", ".", "Ċ", "#", "ifndef", "ĠA", "STR", "A", "_", "FILE", "SYSTEM", "_", "H", "Ċ", "#", "define", "ĠA", "STR", "A", "_", "FILE", "SYSTEM", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "a", "stra", "_", "platform", ".", "hpp", "\"", "Ċ", "Ċ", "#", "if", "Ġ(", "A", "STR", "A", "_", "PLATFORM", "Ġ==", "ĠA", "STR", "A", "_", "PLATFORM", "_", "WIN", "32", ")", "Ċ", "#", "include", "Ġ\"", "win", "32", "/", "a", "stra", "_", "filesystem", "_", "win", "32", ".", "hpp", "\"", "Ċ", "#", "elif", "Ġdefined", "(", "A", "STR", "A", "_", "UNIX", "ISH", ")", "Ċ", "#", "include", "Ġ\"", "unix", "/", "a", "stra", "_", "filesystem", "_", "unix", ".", "hpp", "\"", "Ċ", "#", "else", "Ċ", "#", "error", "Ġ\"", "Unsupported", "Ġplatform", "!\"", "Ċ", "#", "endif", "Ċ", "Ċ", "namespace", "Ġa", "stra", "Ġ{", "Ġnamespace", "Ġfilesystem", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġbool", "Ġends", "_", "with", "_", "path", "_", "separator", "(", "const", "Ġstd", "::", "string", "&", "Ġpath", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġtrim", "_", "path", "_", "separator", "(", "const", "Ġstd", "::", "string", "&", "Ġpath", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġappend", "_", "path", "_", "separator", "(", "const", "Ġstd", "::", "string", "&", "Ġpath", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġdirectory", "_", "name", "(", "const", "Ġstd", "::", "string", "&", "ĠfilePath", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġcombine", "_", "paths", "(", "const", "Ġstd", "::", "string", "&", "Ġleft", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġright", ");", "Ċ", "}}", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠA", "STR", "A", "_", "FILE", "SYSTEM", "_", "H", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::714", "code": "// Morris Preorder Traversal\n// by hxdone\n\n#include <vector>\n#include <iostream>\nusing namespace std;\n\n// Definition for a binary tree node.\n struct TreeNode {\n     int val;\n     TreeNode *left;\n     TreeNode *right;\n     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n };\n\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> ret;\n        while (root != NULL) {\n            if (root->left != NULL) {\n                TreeNode* rightmost_of_left = root->left;\n                while (rightmost_of_left->right != NULL && rightmost_of_left->right != root)\n                    rightmost_of_left = rightmost_of_left->right;\n\t\t\t\tif (rightmost_of_left->right == NULL) {\n\t\t\t\t\tret.push_back(root->val);\n                \trightmost_of_left->right = root;\n\t\t\t\t\troot = root->left;\n\t\t\t\t} else {\n\t\t\t\t\trightmost_of_left->right = NULL;\n\t\t\t\t\troot = root->right;\n\t\t\t\t}\n            } else {\n            \tret.push_back(root->val);\n                root = root->right;\n            }\n        }\n        return ret;\n    }\n};\n\nint main() {\n\tTreeNode* root = new TreeNode(3);\n\troot->left = new TreeNode(1);\n\troot->left->right = new TreeNode(2);\n\n\tSolution s;\n\tvector<int> path = s.preorderTraversal(root);\n\tfor (int i = 0; i < path.size(); ++i) {\n\t\tcout << path[i] <<endl;\n\t}\n\t// delete the tree\n}\n", "code_tokens": ["Ġ//", "ĠM", "or", "ris", "ĠPre", "order", "ĠTra", "versal", "Ċ", "//", "Ġby", "Ġhx", "done", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "//", "ĠDefinition", "Ġfor", "Ġa", "Ġbinary", "Ġtree", "Ġnode", ".", "Ċ", "Ġstruct", "ĠTreeNode", "Ġ{", "Ċ", "ĠĠĠĠ", "Ġint", "Ġval", ";", "Ċ", "ĠĠĠĠ", "ĠTreeNode", "Ġ*", "left", ";", "Ċ", "ĠĠĠĠ", "ĠTreeNode", "Ġ*", "right", ";", "Ċ", "ĠĠĠĠ", "ĠTreeNode", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġleft", "(", "NULL", "),", "Ġright", "(", "NULL", ")", "Ġ{}", "Ċ", "Ġ};", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "Ġpre", "order", "Traversal", "(", "TreeNode", "*", "Ġroot", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "int", ">", "Ġret", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "root", "Ġ!=", "ĠNULL", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "root", "->", "left", "Ġ!=", "ĠNULL", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠTreeNode", "*", "Ġright", "most", "_", "of", "_", "left", "Ġ=", "Ġroot", "->", "left", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "right", "most", "_", "of", "_", "left", "->", "right", "Ġ!=", "ĠNULL", "Ġ&&", "Ġright", "most", "_", "of", "_", "left", "->", "right", "Ġ!=", "Ġroot", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġright", "most", "_", "of", "_", "left", "Ġ=", "Ġright", "most", "_", "of", "_", "left", "->", "right", ";", "Ċ", "ĉĉĉ", "ĉ", "if", "Ġ(", "right", "most", "_", "of", "_", "left", "->", "right", "Ġ==", "ĠNULL", ")", "Ġ{", "Ċ", "ĉĉĉĉ", "ĉ", "ret", ".", "push", "_", "back", "(", "root", "->", "val", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĉ", "right", "most", "_", "of", "_", "left", "->", "right", "Ġ=", "Ġroot", ";", "Ċ", "ĉĉĉĉ", "ĉ", "root", "Ġ=", "Ġroot", "->", "left", ";", "Ċ", "ĉĉĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉĉĉĉ", "ĉ", "right", "most", "_", "of", "_", "left", "->", "right", "Ġ=", "ĠNULL", ";", "Ċ", "ĉĉĉĉ", "ĉ", "root", "Ġ=", "Ġroot", "->", "right", ";", "Ċ", "ĉĉĉ", "ĉ", "}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "ĉ", "ret", ".", "push", "_", "back", "(", "root", "->", "val", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġroot", "Ġ=", "Ġroot", "->", "right", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġret", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "TreeNode", "*", "Ġroot", "Ġ=", "Ġnew", "ĠTreeNode", "(", "3", ");", "Ċ", "ĉ", "root", "->", "left", "Ġ=", "Ġnew", "ĠTreeNode", "(", "1", ");", "Ċ", "ĉ", "root", "->", "left", "->", "right", "Ġ=", "Ġnew", "ĠTreeNode", "(", "2", ");", "Ċ", "Ċ", "ĉ", "Solution", "Ġs", ";", "Ċ", "ĉ", "vector", "<", "int", ">", "Ġpath", "Ġ=", "Ġs", ".", "pre", "order", "Traversal", "(", "root", ");", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġpath", ".", "size", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġpath", "[", "i", "]", "Ġ<<", "endl", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "//", "Ġdelete", "Ġthe", "Ġtree", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::715", "code": "/*\n** Copyright 2011-2012 Centreon\n**\n** Licensed under the Apache License, Version 2.0 (the \"License\");\n** you may not use this file except in compliance with the License.\n** You may obtain a copy of the License at\n**\n**     http://www.apache.org/licenses/LICENSE-2.0\n**\n** Unless required by applicable law or agreed to in writing, software\n** distributed under the License is distributed on an \"AS IS\" BASIS,\n** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n** See the License for the specific language governing permissions and\n** limitations under the License.\n**\n** For more information : contact@centreon.com\n*/\n\n#ifndef CCB_CONFIG_PARSER_HH\n#define CCB_CONFIG_PARSER_HH\n\n#include <nlohmann/json.hpp>\n#include <string>\n#include \"com/centreon/broker/config/state.hh\"\n#include \"com/centreon/broker/namespace.hh\"\n\nCCB_BEGIN()\n\nnamespace config {\n/**\n *  @class parser parser.hh \"com/centreon/broker/config/parser.hh\"\n *  @brief Parse configuration file.\n *\n *  Parse a configuration file and generate appropriate objects for further\n *  handling.\n */\nclass parser {\n public:\n  parser();\n  parser(parser const&) = delete;\n  ~parser();\n  parser& operator=(const parser&) = delete;\n  state parse(const std::string& file);\n  static bool parse_boolean(const std::string& value);\n\n private:\n  void _parse_endpoint(const nlohmann::json& elem,\n                       endpoint& e,\n                       std::string& module);\n};\n}  // namespace config\n\nCCB_END()\n\n#endif  // !CCB_CONFIG_PARSER_HH\n", "code_tokens": ["Ġ/*", "Ċ", "**", "ĠCopyright", "Ġ2011", "-", "2012", "ĠC", "ent", "re", "on", "Ċ", "**", "Ċ", "**", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "**", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "**", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "**", "Ċ", "**", "ĠĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "**", "Ċ", "**", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "**", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "**", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "**", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "**", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "**", "Ċ", "**", "ĠFor", "Ġmore", "Ġinformation", "Ġ:", "Ġcontact", "@", "cent", "re", "on", ".", "com", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠCCB", "_", "CONFIG", "_", "PARSER", "_", "HH", "Ċ", "#", "define", "ĠCCB", "_", "CONFIG", "_", "PARSER", "_", "HH", "Ċ", "Ċ", "#", "include", "Ġ<", "n", "lo", "hm", "ann", "/", "json", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "com", "/", "cent", "re", "on", "/", "broker", "/", "config", "/", "state", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "com", "/", "cent", "re", "on", "/", "broker", "/", "namespace", ".", "hh", "\"", "Ċ", "Ċ", "CCB", "_", "BEGIN", "()", "Ċ", "Ċ", "namespace", "Ġconfig", "Ġ{", "Ċ", "/**", "Ċ", "Ġ*", "Ġ", "Ġ@", "class", "Ġparser", "Ġparser", ".", "hh", "Ġ\"", "com", "/", "cent", "re", "on", "/", "broker", "/", "config", "/", "parser", ".", "hh", "\"", "Ċ", "Ġ*", "Ġ", "Ġ@", "brief", "ĠParse", "Ġconfiguration", "Ġfile", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠParse", "Ġa", "Ġconfiguration", "Ġfile", "Ġand", "Ġgenerate", "Ġappropriate", "Ġobjects", "Ġfor", "Ġfurther", "Ċ", "Ġ*", "Ġ", "Ġhandling", ".", "Ċ", "Ġ*/", "Ċ", "class", "Ġparser", "Ġ{", "Ċ", "Ġpublic", ":", "Ċ", "Ġ", "Ġparser", "();", "Ċ", "Ġ", "Ġparser", "(", "parser", "Ġconst", "&)", "Ġ=", "Ġdelete", ";", "Ċ", "Ġ", "Ġ~", "parser", "();", "Ċ", "Ġ", "Ġparser", "&", "Ġoperator", "=(", "const", "Ġparser", "&)", "Ġ=", "Ġdelete", ";", "Ċ", "Ġ", "Ġstate", "Ġparse", "(", "const", "Ġstd", "::", "string", "&", "Ġfile", ");", "Ċ", "Ġ", "Ġstatic", "Ġbool", "Ġparse", "_", "boolean", "(", "const", "Ġstd", "::", "string", "&", "Ġvalue", ");", "Ċ", "Ċ", "Ġprivate", ":", "Ċ", "Ġ", "Ġvoid", "Ġ_", "parse", "_", "endpoint", "(", "const", "Ġn", "lo", "hm", "ann", "::", "json", "&", "Ġelem", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġendpoint", "&", "Ġe", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "string", "&", "Ġmodule", ");", "Ċ", "};", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġconfig", "Ċ", "Ċ", "CCB", "_", "END", "()", "Ċ", "Ċ", "#", "endif", "Ġ", "Ġ//", "Ġ!", "CCB", "_", "CONFIG", "_", "PARSER", "_", "HH", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::716", "code": "/*\r\n * Scratchpad.cpp\r\n *\r\n *  Created on: 29 Dec 2014\r\n *      Author: Dean Harris\r\n */\r\n\r\n#include <list>\r\n#include <string>\r\n#include \"INote.h\"\r\n#include \"ScratchPad.h\"\r\n\r\nScratchPad::ScratchPad()\r\n{\r\n\r\n}\r\n\r\nScratchPad::~ScratchPad()\r\n{\r\n\r\n}\r\n\r\nvoid ScratchPad::setNote(const std::string& noteId, INote* pNote)\r\n{\r\n  if (this->noteMap_.find(noteId) != this->noteMap_.end())\r\n  {\r\n    INote* pPreviousNote = this->noteMap_[noteId];\r\n    if (pPreviousNote != nullptr)\r\n    {\r\n      delete pPreviousNote;\r\n    }\r\n  }\r\n\r\n  this->noteMap_[noteId] = pNote;\r\n}\r\n\r\nINote* ScratchPad::getNote(const std::string& noteId)\r\n{\r\n  INote* pNote = nullptr;\r\n\r\n  std::map<std::string, INote*>::iterator it = this->noteMap_.find(noteId);\r\n  if (it != this->noteMap_.end())\r\n  {\r\n    pNote = (*it).second;\r\n  }\r\n\r\n  return pNote;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "ĠScratch", "pad", ".", "cpp", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ29", "ĠDec", "Ġ2014", "č", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "ĠDe", "an", "ĠH", "arr", "is", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "list", ">", "č", "Ċ", "#", "include", "Ġ<", "string", ">", "č", "Ċ", "#", "include", "Ġ\"", "IN", "ote", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Scratch", "Pad", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "Scratch", "Pad", "::", "Scratch", "Pad", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Scratch", "Pad", "::~", "Scratch", "Pad", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠScratch", "Pad", "::", "set", "Note", "(", "const", "Ġstd", "::", "string", "&", "Ġnote", "Id", ",", "ĠI", "Note", "*", "Ġp", "Note", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġif", "Ġ(", "this", "->", "note", "Map", "_.", "find", "(", "note", "Id", ")", "Ġ!=", "Ġthis", "->", "note", "Map", "_.", "end", "())", "č", "Ċ", "Ġ", "Ġ{", "č", "Ċ", "ĠĠĠ", "ĠI", "Note", "*", "Ġp", "Previous", "Note", "Ġ=", "Ġthis", "->", "note", "Map", "_[", "note", "Id", "];", "č", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "p", "Previous", "Note", "Ġ!=", "Ġnullptr", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠ", "Ġdelete", "Ġp", "Previous", "Note", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "Ġ", "Ġthis", "->", "note", "Map", "_[", "note", "Id", "]", "Ġ=", "Ġp", "Note", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "IN", "ote", "*", "ĠScratch", "Pad", "::", "get", "Note", "(", "const", "Ġstd", "::", "string", "&", "Ġnote", "Id", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "ĠI", "Note", "*", "Ġp", "Note", "Ġ=", "Ġnullptr", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠI", "Note", "*>::", "iterator", "Ġit", "Ġ=", "Ġthis", "->", "note", "Map", "_.", "find", "(", "note", "Id", ");", "č", "Ċ", "Ġ", "Ġif", "Ġ(", "it", "Ġ!=", "Ġthis", "->", "note", "Map", "_.", "end", "())", "č", "Ċ", "Ġ", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġp", "Note", "Ġ=", "Ġ(*", "it", ").", "second", ";", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "Ġ", "Ġreturn", "Ġp", "Note", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::717", "code": "// Generated from /POI/java/org/apache/poi/ss/usermodel/charts/DataSources.java\n\n#pragma once\n\n#include <fwd-POI.hpp>\n#include <java/lang/fwd-POI.hpp>\n#include <org/apache/poi/ss/usermodel/fwd-POI.hpp>\n#include <org/apache/poi/ss/usermodel/charts/fwd-POI.hpp>\n#include <org/apache/poi/ss/util/fwd-POI.hpp>\n#include <org/apache/poi/ss/usermodel/charts/DataSources_AbstractCellRangeDataSource.hpp>\n#include <java/lang/Number.hpp>\n\nstruct default_init_tag;\n\nclass poi::ss::usermodel::charts::DataSources_fromNumericCellRange_1\n    : public DataSources_AbstractCellRangeDataSource\n{\n\npublic:\n    typedef DataSources_AbstractCellRangeDataSource super;\n    ::java::lang::Number* getPointAt(int32_t index) override;\n    bool isNumeric() override;\n\n    // Generated\n\npublic: /* protected */\n    DataSources_fromNumericCellRange_1(::poi::ss::usermodel::Sheet* sheet, ::poi::ss::util::CellRangeAddress* cellRangeAddress);\n\npublic:\n    static ::java::lang::Class *class_();\n\nprivate:\n    virtual ::java::lang::Class* getClass0();\n    friend class DataSources;\n    friend class DataSources_fromStringCellRange_2;\n    friend class DataSources_ArrayDataSource;\n    friend class DataSources_AbstractCellRangeDataSource;\n};\n", "code_tokens": ["Ġ//", "ĠGenerated", "Ġfrom", "Ġ/", "PO", "I", "/", "java", "/", "org", "/", "apache", "/", "poi", "/", "ss", "/", "user", "model", "/", "charts", "/", "DataSources", ".", "java", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "fwd", "-", "PO", "I", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "java", "/", "lang", "/", "fwd", "-", "PO", "I", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "org", "/", "apache", "/", "poi", "/", "ss", "/", "user", "model", "/", "fwd", "-", "PO", "I", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "org", "/", "apache", "/", "poi", "/", "ss", "/", "user", "model", "/", "charts", "/", "fwd", "-", "PO", "I", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "org", "/", "apache", "/", "poi", "/", "ss", "/", "util", "/", "fwd", "-", "PO", "I", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "org", "/", "apache", "/", "poi", "/", "ss", "/", "user", "model", "/", "charts", "/", "DataSources", "_", "Abstract", "Cell", "Range", "DataSource", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "java", "/", "lang", "/", "Number", ".", "hpp", ">", "Ċ", "Ċ", "struct", "Ġdefault", "_", "init", "_", "tag", ";", "Ċ", "Ċ", "class", "Ġpo", "i", "::", "ss", "::", "user", "model", "::", "charts", "::", "DataSources", "_", "from", "Numeric", "Cell", "Range", "_", "1", "Ċ", "ĠĠĠ", "Ġ:", "Ġpublic", "ĠData", "Sources", "_", "Abstract", "Cell", "Range", "DataSource", "Ċ", "{", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġtypedef", "ĠData", "Sources", "_", "Abstract", "Cell", "Range", "DataSource", "Ġsuper", ";", "Ċ", "ĠĠĠ", "Ġ::", "java", "::", "lang", "::", "Number", "*", "Ġget", "Point", "At", "(", "int", "32", "_", "t", "Ġindex", ")", "Ġoverride", ";", "Ċ", "ĠĠĠ", "Ġbool", "Ġis", "Numeric", "()", "Ġoverride", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠGenerated", "Ċ", "Ċ", "public", ":", "Ġ/*", "Ġprotected", "Ġ*/", "Ċ", "ĠĠĠ", "ĠData", "Sources", "_", "from", "Numeric", "Cell", "Range", "_", "1", "(::", "poi", "::", "ss", "::", "user", "model", "::", "Sheet", "*", "Ġsheet", ",", "Ġ::", "poi", "::", "ss", "::", "util", "::", "Cell", "Range", "Address", "*", "Ġcell", "Range", "Address", ");", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġstatic", "Ġ::", "java", "::", "lang", "::", "Class", "Ġ*", "class", "_();", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ::", "java", "::", "lang", "::", "Class", "*", "ĠgetClass", "0", "();", "Ċ", "ĠĠĠ", "Ġfriend", "Ġclass", "ĠData", "Sources", ";", "Ċ", "ĠĠĠ", "Ġfriend", "Ġclass", "ĠData", "Sources", "_", "fromString", "Cell", "Range", "_", "2", ";", "Ċ", "ĠĠĠ", "Ġfriend", "Ġclass", "ĠData", "Sources", "_", "Array", "DataSource", ";", "Ċ", "ĠĠĠ", "Ġfriend", "Ġclass", "ĠData", "Sources", "_", "Abstract", "Cell", "Range", "DataSource", ";", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::718", "code": "class Solution {\npublic:\n    void connect(TreeLinkNode *root) {\n        if (!root)\n        \treturn;\n        if (root->left) {\n        \tif (root->right) {\n        \t\troot->left->next = root->right;\n        \t} else {\n        \t\tTreeLinkNode *p = root->next;\n        \t\twhile (p && !p->left && !p->right)\n        \t\t\tp = p->next;\n        \t\tif (p && p->left)\n        \t\t\troot->left->next = p->left;\n        \t\telse if (p && p->right)\n        \t\t\troot->left->next = p->right;\n        \t\telse\n        \t\t\troot->left->next = 0;\n        \t}\n        }\n        if (root->right) {\n    \t\tTreeLinkNode *p = root->next;\n    \t\twhile (p && !p->left && !p->right)\n    \t\t\tp = p->next;\n    \t\tif (p && p->left)\n    \t\t\troot->right->next = p->left;\n    \t\telse if (p && p->right)\n    \t\t\troot->right->next = p->right;\n    \t\telse\n    \t\t\troot->right->next = 0;\n        }\n        connect(root->right);\n        connect(root->left);\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġconnect", "(", "Tree", "Link", "Node", "Ġ*", "root", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "root", ")", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĉ", "return", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "root", "->", "left", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĉ", "if", "Ġ(", "root", "->", "right", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĉ", "ĉ", "root", "->", "left", "->", "next", "Ġ=", "Ġroot", "->", "right", ";", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĉ", "ĉ", "Tree", "Link", "Node", "Ġ*", "p", "Ġ=", "Ġroot", "->", "next", ";", "Ċ", "ĠĠĠĠĠĠĠĠĉ", "ĉ", "while", "Ġ(", "p", "Ġ&&", "Ġ!", "p", "->", "left", "Ġ&&", "Ġ!", "p", "->", "right", ")", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĉĉ", "ĉ", "p", "Ġ=", "Ġp", "->", "next", ";", "Ċ", "ĠĠĠĠĠĠĠĠĉ", "ĉ", "if", "Ġ(", "p", "Ġ&&", "Ġp", "->", "left", ")", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĉĉ", "ĉ", "root", "->", "left", "->", "next", "Ġ=", "Ġp", "->", "left", ";", "Ċ", "ĠĠĠĠĠĠĠĠĉ", "ĉ", "else", "Ġif", "Ġ(", "p", "Ġ&&", "Ġp", "->", "right", ")", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĉĉ", "ĉ", "root", "->", "left", "->", "next", "Ġ=", "Ġp", "->", "right", ";", "Ċ", "ĠĠĠĠĠĠĠĠĉ", "ĉ", "else", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĉĉ", "ĉ", "root", "->", "left", "->", "next", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠĠ", "ĉ", "}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "root", "->", "right", ")", "Ġ{", "Ċ", "ĠĠĠĠĉ", "ĉ", "Tree", "Link", "Node", "Ġ*", "p", "Ġ=", "Ġroot", "->", "next", ";", "Ċ", "ĠĠĠĠĉ", "ĉ", "while", "Ġ(", "p", "Ġ&&", "Ġ!", "p", "->", "left", "Ġ&&", "Ġ!", "p", "->", "right", ")", "Ċ", "ĠĠĠĠĉĉ", "ĉ", "p", "Ġ=", "Ġp", "->", "next", ";", "Ċ", "ĠĠĠĠĉ", "ĉ", "if", "Ġ(", "p", "Ġ&&", "Ġp", "->", "left", ")", "Ċ", "ĠĠĠĠĉĉ", "ĉ", "root", "->", "right", "->", "next", "Ġ=", "Ġp", "->", "left", ";", "Ċ", "ĠĠĠĠĉ", "ĉ", "else", "Ġif", "Ġ(", "p", "Ġ&&", "Ġp", "->", "right", ")", "Ċ", "ĠĠĠĠĉĉ", "ĉ", "root", "->", "right", "->", "next", "Ġ=", "Ġp", "->", "right", ";", "Ċ", "ĠĠĠĠĉ", "ĉ", "else", "Ċ", "ĠĠĠĠĉĉ", "ĉ", "root", "->", "right", "->", "next", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconnect", "(", "root", "->", "right", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconnect", "(", "root", "->", "left", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::719", "code": "/**\n * Copyright (c) 2015 - Andrew C. Pacifico - All Rights Reserved.\n * @author Andrew C. Pacifico <andrewcpacifico@gmail.com>\n */\n#include <iostream>\n#include <stdlib.h>\n\nusing namespace std;\n\nint main(int argc, char *argv[])\n{\n    int a, b, c;\n\n    cin >> a >> b >> c;\n\n    a = (a + b + abs(a-b))/2;\n\n    cout << (a + c + abs(a-c))/2 << \" eh o maior\" << endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "Ġ-", "ĠAnd", "rew", "ĠC", ".", "ĠP", "ac", "ific", "o", "Ġ-", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*", "Ġ@", "author", "ĠAnd", "rew", "ĠC", ".", "ĠP", "ac", "ific", "o", "Ġ<", "and", "re", "wc", "pac", "ific", "o", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġa", ",", "Ġb", ",", "Ġc", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġa", "Ġ>>", "Ġb", "Ġ>>", "Ġc", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġa", "Ġ=", "Ġ(", "a", "Ġ+", "Ġb", "Ġ+", "Ġabs", "(", "a", "-", "b", "))/", "2", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ(", "a", "Ġ+", "Ġc", "Ġ+", "Ġabs", "(", "a", "-", "c", "))/", "2", "Ġ<<", "Ġ\"", "Ġeh", "Ġo", "Ġm", "ai", "or", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::720", "code": "#pragma once\n\n#include <stdexcept>\n#include <string>\n#include <SDL2/SDL_error.h>\n\n\nclass SDL2_exception : public std::exception {\npublic:\n    explicit SDL2_exception(const char *context = nullptr) : msg(SDL_GetError())\n    {\n        using namespace std::string_literals;\n        if (context) msg += \" \"s + context;\n    }\n    const char *what() const override { return msg.c_str(); }\nprivate:\n    std::string msg;\n};\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "st", "dex", "cept", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "SDL", "2", "/", "SDL", "_", "error", ".", "h", ">", "Ċ", "Ċ", "Ċ", "class", "ĠSDL", "2", "_", "exception", "Ġ:", "Ġpublic", "Ġstd", "::", "exception", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġexplicit", "ĠSDL", "2", "_", "exception", "(", "const", "Ġchar", "Ġ*", "context", "Ġ=", "Ġnullptr", ")", "Ġ:", "Ġmsg", "(", "SDL", "_", "GetError", "())", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġnamespace", "Ġstd", "::", "string", "_", "literal", "s", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "context", ")", "Ġmsg", "Ġ+=", "Ġ\"", "Ġ\"", "s", "Ġ+", "Ġcontext", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġconst", "Ġchar", "Ġ*", "what", "()", "Ġconst", "Ġoverride", "Ġ{", "Ġreturn", "Ġmsg", ".", "c", "_", "str", "();", "Ġ}", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġmsg", ";", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::721", "code": "//\n// ICounter.cpp\n//\n// Library: IoT/Devices\n// Package: Generated\n// Module:  ICounter\n//\n// This file has been generated.\n// Warning: All changes to this will be lost when the file is re-generated.\n//\n// Copyright (c) 2014-2020, Applied Informatics Software Engineering GmbH.\n// All rights reserved.\n// \n// SPDX-License-Identifier: GPL-3.0-only\n//\n\n\n#include \"IoT/Devices/ICounter.h\"\n\n\nnamespace IoT {\nnamespace Devices {\n\n\nICounter::ICounter():\n\tIoT::Devices::IDevice(),\n\tcountChanged()\n{\n}\n\n\nICounter::~ICounter()\n{\n}\n\n\nbool ICounter::isA(const std::type_info& otherType) const\n{\n\tstd::string name(type().name());\n\treturn name == otherType.name();\n}\n\n\nconst Poco::RemotingNG::Identifiable::TypeId& ICounter::remoting__typeId()\n{\n\tstatic const std::string REMOTING__TYPE_ID(\"IoT.Devices.Counter\");\n\treturn REMOTING__TYPE_ID;\n}\n\n\nconst std::type_info& ICounter::type() const\n{\n\treturn typeid(ICounter);\n}\n\n\n} // namespace Devices\n} // namespace IoT\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠI", "Counter", ".", "cpp", "Ċ", "//", "Ċ", "//", "ĠLibrary", ":", "ĠIo", "T", "/", "Devices", "Ċ", "//", "ĠPackage", ":", "ĠGenerated", "Ċ", "//", "ĠModule", ":", "Ġ", "ĠI", "Counter", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġhas", "Ġbeen", "Ġgenerated", ".", "Ċ", "//", "ĠWarning", ":", "ĠAll", "Ġchanges", "Ġto", "Ġthis", "Ġwill", "Ġbe", "Ġlost", "Ġwhen", "Ġthe", "Ġfile", "Ġis", "Ġre", "-", "generated", ".", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", "-", "2020", ",", "ĠApp", "lied", "ĠIn", "form", "atic", "s", "ĠSoftware", "ĠEngine", "ering", "ĠG", "mb", "H", ".", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĠG", "PL", "-", "3", ".", "0", "-", "only", "Ċ", "//", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "Io", "T", "/", "Devices", "/", "IC", "o", "unter", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "namespace", "ĠIo", "T", "Ġ{", "Ċ", "namespace", "ĠDevice", "s", "Ġ{", "Ċ", "Ċ", "Ċ", "IC", "o", "unter", "::", "IC", "o", "unter", "():", "Ċ", "ĉ", "Io", "T", "::", "Devices", "::", "I", "Device", "(),", "Ċ", "ĉ", "count", "Changed", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "IC", "o", "unter", "::~", "IC", "o", "unter", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "bool", "ĠI", "Counter", "::", "isA", "(", "const", "Ġstd", "::", "type", "_", "info", "&", "Ġother", "Type", ")", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "std", "::", "string", "Ġname", "(", "type", "().", "name", "());", "Ċ", "ĉ", "return", "Ġname", "Ġ==", "Ġother", "Type", ".", "name", "();", "Ċ", "}", "Ċ", "Ċ", "Ċ", "const", "ĠPo", "co", "::", "Remoting", "NG", "::", "Ident", "ifiable", "::", "TypeId", "&", "ĠI", "Counter", "::", "rem", "oting", "__", "typeId", "()", "Ċ", "{", "Ċ", "ĉ", "static", "Ġconst", "Ġstd", "::", "string", "ĠRE", "MOT", "ING", "__", "TYPE", "_", "ID", "(\"", "Io", "T", ".", "Devices", ".", "Counter", "\");", "Ċ", "ĉ", "return", "ĠRE", "MOT", "ING", "__", "TYPE", "_", "ID", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "const", "Ġstd", "::", "type", "_", "info", "&", "ĠI", "Counter", "::", "type", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġtype", "id", "(", "IC", "o", "unter", ");", "Ċ", "}", "Ċ", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠDevice", "s", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠIo", "T", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::722", "code": "/*\n * File: IAS-LangLib/src/lang/interpreter/exe/expr/ConstructorExpr.cpp\n * \n * Copyright (C) 2015, Albert Krzymowski\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n#include \"ConstructorExpr.h\"\n#include<lang/log/LogLevel.h>\n\n#include <commonlib/commonlib.h>\n\nnamespace IAS {\nnamespace Lang {\nnamespace Interpreter {\nnamespace Exe {\nnamespace Expr {\n/*************************************************************************/\nConstructorExpr::ConstructorExpr(const IAS::DM::Type *pType){\n\tIAS_TRACER;\n\tsetType(pType);\n}\n/*************************************************************************/\nvoid ConstructorExpr::evaluate(Context *pCtx, DM::DataObjectPtr& refResult) const{\n\tIAS_TRACER;\n\n\trefResult = getType()->createDataObject();\n}\n/*************************************************************************/\n}\n}\n}\n}\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠFile", ":", "ĠI", "AS", "-", "Lang", "Lib", "/", "src", "/", "lang", "/", "interpreter", "/", "exe", "/", "expr", "/", "Constructor", "Expr", ".", "cpp", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", ",", "ĠAl", "bert", "ĠK", "rz", "ym", "ow", "ski", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "Constructor", "Expr", ".", "h", "\"", "Ċ", "#", "include", "<", "lang", "/", "log", "/", "LogLevel", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "lib", "/", "common", "lib", ".", "h", ">", "Ċ", "Ċ", "namespace", "ĠI", "AS", "Ġ{", "Ċ", "namespace", "ĠLang", "Ġ{", "Ċ", "namespace", "ĠInterpreter", "Ġ{", "Ċ", "namespace", "ĠEx", "e", "Ġ{", "Ċ", "namespace", "ĠExpr", "Ġ{", "Ċ", "/*************************************************************************/", "Ċ", "Constructor", "Expr", "::", "Constructor", "Expr", "(", "const", "ĠI", "AS", "::", "DM", "::", "Type", "Ġ*", "p", "Type", "){", "Ċ", "ĉ", "I", "AS", "_", "TR", "AC", "ER", ";", "Ċ", "ĉ", "setType", "(", "p", "Type", ");", "Ċ", "}", "Ċ", "/*************************************************************************/", "Ċ", "void", "ĠConstructor", "Expr", "::", "evaluate", "(", "Context", "Ġ*", "p", "Ctx", ",", "ĠDM", "::", "DataObject", "Ptr", "&", "Ġref", "Result", ")", "Ġconst", "{", "Ċ", "ĉ", "I", "AS", "_", "TR", "AC", "ER", ";", "Ċ", "Ċ", "ĉ", "ref", "Result", "Ġ=", "ĠgetType", "()->", "create", "DataObject", "();", "Ċ", "}", "Ċ", "/*************************************************************************/", "Ċ", "}", "Ċ", "}", "Ċ", "}", "Ċ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::723", "code": "// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// cpl_port.h must be first.\n#include \"port/cpl_port.h\"\n\n#include <stddef.h>\n#include <stdint.h>\n#include <memory>\n#include <string>\n\n#include \"logging.h\"\n#include \"autotest2/cpp/util/vsimem.h\"\n#include \"gcore/gdal.h\"\n#include \"gcore/gdal_priv.h\"\n#include \"ogr/ogrsf_frmts/csv/ogr_csv.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n  const char kFilename[] = \"/vsimem/a\";\n  const string data2(reinterpret_cast<const char *>(data), size);\n  autotest2::VsiMemTempWrapper wrapper(kFilename, data2);\n  std::unique_ptr<OGRCSVDataSource> dataset(new OGRCSVDataSource);\n  const int result = dataset->Open(kFilename, FALSE, FALSE, nullptr);\n  CHECK(result == FALSE || result == TRUE);\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2017", "ĠGoogle", "ĠInc", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "//", "Ċ", "//", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "//", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "//", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "//", "Ċ", "//", "ĠĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "//", "Ċ", "//", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "//", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "//", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "//", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "//", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ċ", "//", "Ġcpl", "_", "port", ".", "h", "Ġmust", "Ġbe", "Ġfirst", ".", "Ċ", "#", "include", "Ġ\"", "port", "/", "cpl", "_", "port", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "def", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "logging", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "auto", "test", "2", "/", "cpp", "/", "util", "/", "vs", "im", "em", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "g", "core", "/", "gd", "al", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "g", "core", "/", "gd", "al", "_", "priv", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "og", "r", "/", "og", "rs", "f", "_", "fr", "mts", "/", "csv", "/", "og", "r", "_", "csv", ".", "h", "\"", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġint", "ĠLLVM", "Fuzz", "er", "Test", "One", "Input", "(", "const", "Ġuint", "8", "_", "t", "Ġ*", "data", ",", "Ġsize", "_", "t", "Ġsize", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġchar", "Ġk", "Filename", "[]", "Ġ=", "Ġ\"/", "vs", "im", "em", "/", "a", "\";", "Ċ", "Ġ", "Ġconst", "Ġstring", "Ġdata", "2", "(", "reinterpret", "_", "cast", "<", "const", "Ġchar", "Ġ*>(", "data", "),", "Ġsize", ");", "Ċ", "Ġ", "Ġauto", "test", "2", "::", "V", "si", "Mem", "Temp", "Wrapper", "Ġwrapper", "(", "k", "Filename", ",", "Ġdata", "2", ");", "Ċ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "OGR", "CSV", "DataSource", ">", "Ġdataset", "(", "new", "ĠOGR", "CSV", "DataSource", ");", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġresult", "Ġ=", "Ġdataset", "->", "Open", "(", "k", "Filename", ",", "ĠFALSE", ",", "ĠFALSE", ",", "Ġnullptr", ");", "Ċ", "Ġ", "ĠCHECK", "(", "result", "Ġ==", "ĠFALSE", "Ġ||", "Ġresult", "Ġ==", "ĠTRUE", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::724", "code": "#include <SFML/Graphics.hpp>\n#include \"game.hpp\"\n#include \"planet.hpp\"\nint main()\n{\n\nGame motherfucker;\nmotherfucker.Start();\n\n\n    return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "SF", "ML", "/", "Graphics", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "game", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "planet", ".", "hpp", "\"", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ċ", "Game", "Ġmo", "ther", "f", "uck", "er", ";", "Ċ", "mo", "ther", "f", "uck", "er", ".", "Start", "();", "Ċ", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "ĠEXIT", "_", "SUCCESS", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::725", "code": "public int[] twoSum(int[] nums, int target) {\n     HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n        int[] defaultResult = {0, 0};\n        for (int i = 0; i < nums.length; i++) {\n            if (map.get(target-nums[i]) != null ) {\n                int[] result = {map.get(target-nums[i]) + 1, i + 1 };\n                return result;\n            }\n            map.put(nums[i], i);\n        }\n        return defaultResult;\n    }\n", "code_tokens": ["Ġpublic", "Ġint", "[]", "Ġtwo", "Sum", "(", "int", "[]", "Ġnums", ",", "Ġint", "Ġtarget", ")", "Ġ{", "Ċ", "ĠĠĠĠ", "ĠHashMap", "<", "Integer", ",", "ĠInteger", ">", "Ġmap", "Ġ=", "Ġnew", "ĠHashMap", "<", "Integer", ",", "ĠInteger", ">();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "[]", "Ġdefault", "Result", "Ġ=", "Ġ{", "0", ",", "Ġ0", "};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnums", ".", "length", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "map", ".", "get", "(", "target", "-", "nums", "[", "i", "])", "Ġ!=", "Ġnull", "Ġ)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "[]", "Ġresult", "Ġ=", "Ġ{", "map", ".", "get", "(", "target", "-", "nums", "[", "i", "])", "Ġ+", "Ġ1", ",", "Ġi", "Ġ+", "Ġ1", "Ġ};", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġresult", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġmap", ".", "put", "(", "nums", "[", "i", "],", "Ġi", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġdefault", "Result", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::726", "code": "#include \"PlayerAnimation.h\"\n\nPlayerAnimation::PlayerAnimation(Vector2D pos,SpriteAnimation *sptAnm,iComponentMediator *mediator)\n   : _animation(sptAnm),cGraphic(mediator),_pos(pos)\n{\n    timeCounter = 0;\n\n}\n\nPlayerAnimation::~PlayerAnimation()\n{\n    delete _animation;\n}\n\n\nint PlayerAnimation::DirectionFrame(iGameObject *obj)\n{\n\n    int result;\n    if(obj->acc.y <= -1)\n        result = _animation->amtOfFrames()*3;\n    else if(obj->acc.y >=  1)\n        result = 0;\n    else if(obj->acc.x >=  1)\n        result = _animation->amtOfFrames();\n    else if( obj->acc.x <= -1)\n        result = _animation->amtOfFrames()*2;\n    return result;\n}\n\nvoid PlayerAnimation::receiveMessage(int msg)\n{\n}\n\nvoid PlayerAnimation::Update(iGameObject *obj, float dt)\n{\n    timeCounter += dt;\n    if(timeCounter >= 0.25f)\n    {\n        _animation->UpdateAnimation();\n        timeCounter = 0;\n    }\n\n    if(obj->acc.x == 0 && obj->acc.y == 0)\n    {\n        _animation->setKeyFrame(_animation->getKeyFrame());\n    }\n    else\n        if(_oldAcc != obj->acc)\n            _animation->setKeyFrame(DirectionFrame(obj));\n    _oldAcc = obj->acc;\n}\n\nvoid PlayerAnimation::Render(iGameObject *obj)\n{\n    _animation->Render(_pos.x,_pos.y);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Player", "Animation", ".", "h", "\"", "Ċ", "Ċ", "Player", "Animation", "::", "Player", "Animation", "(", "Vector", "2", "D", "Ġpos", ",", "Sprite", "Animation", "Ġ*", "s", "pt", "An", "m", ",", "i", "Component", "M", "ediator", "Ġ*", "medi", "ator", ")", "Ċ", "ĠĠ", "Ġ:", "Ġ_", "animation", "(", "s", "pt", "An", "m", "),", "c", "Graphic", "(", "medi", "ator", "),", "_", "pos", "(", "pos", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtime", "Counter", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Player", "Animation", "::~", "Player", "Animation", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġ_", "animation", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "int", "ĠPlayer", "Animation", "::", "Direction", "Frame", "(", "i", "GameObject", "Ġ*", "obj", ")", "Ċ", "{", "Ċ", "Ċ", "ĠĠĠ", "Ġint", "Ġresult", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "obj", "->", "acc", ".", "y", "Ġ<=", "Ġ-", "1", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "Ġ=", "Ġ_", "animation", "->", "amt", "Of", "Frames", "()*", "3", ";", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "(", "obj", "->", "acc", ".", "y", "Ġ>=", "Ġ", "Ġ1", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "(", "obj", "->", "acc", ".", "x", "Ġ>=", "Ġ", "Ġ1", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "Ġ=", "Ġ_", "animation", "->", "amt", "Of", "Frames", "();", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "(", "Ġobj", "->", "acc", ".", "x", "Ġ<=", "Ġ-", "1", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "Ġ=", "Ġ_", "animation", "->", "amt", "Of", "Frames", "()*", "2", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPlayer", "Animation", "::", "receive", "Message", "(", "int", "Ġmsg", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPlayer", "Animation", "::", "Update", "(", "i", "GameObject", "Ġ*", "obj", ",", "Ġfloat", "Ġdt", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtime", "Counter", "Ġ+=", "Ġdt", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "time", "Counter", "Ġ>=", "Ġ0", ".", "25", "f", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "animation", "->", "Update", "Animation", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtime", "Counter", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "(", "obj", "->", "acc", ".", "x", "Ġ==", "Ġ0", "Ġ&&", "Ġobj", "->", "acc", ".", "y", "Ġ==", "Ġ0", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "animation", "->", "setKey", "Frame", "(_", "animation", "->", "getKey", "Frame", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(_", "old", "Acc", "Ġ!=", "Ġobj", "->", "acc", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "animation", "->", "setKey", "Frame", "(", "Direction", "Frame", "(", "obj", "));", "Ċ", "ĠĠĠ", "Ġ_", "old", "Acc", "Ġ=", "Ġobj", "->", "acc", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPlayer", "Animation", "::", "Render", "(", "i", "GameObject", "Ġ*", "obj", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ_", "animation", "->", "Render", "(_", "pos", ".", "x", ",_", "pos", ".", "y", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::727", "code": "//\n//  log_output.cpp\n//  vClientTemplateLib\n//\n//  Created by Virendra Shakya on 5/3/14.\n//  Copyright (c) 2014 Virendra Shakya. All rights reserved.\n//\n\n#include <iostream>\n\n#include \"logging/log_output.h\"\n\n\nnamespace logging\n{\n// -----------------------\n\nvoid ISimpleBlockingOutput::Dump(ELogLevel aLogLevel,\n                     const std::string& aTimeStamp,\n                     const std::string& aFileName,\n                     int aLineNumber,\n                     const std::string& aFunctionName,\n                     const std::string& aMessage)\n    {\n    if(aLogLevel > iLogLevel)\n        {\n        return;\n        }\n        \n#if defined(THREADSAFE_LOGGING)\n    vbase::TAutoLock guard(iLock);\n#endif\n    \n    std::ostream& out = OutputTo();\n    \n    switch (aLogLevel)\n        {\n        case eDebug:\n            {\n            out << \"DEBUG\";\n            } break;\n        case eInfo:\n            {\n            out << \"INFO\";\n            } break;\n        case eWarning:\n            {\n            out << \"WARNING\";\n            } break;\n        case eFatal:\n            {\n            out << \"FATAL\";\n            } break;\n        default:\n            {\n            out << \"ERROR\";\n            } break;\n        } //switch\n     \n    //timestamp\n    out << \" [\" << aTimeStamp << \"]\";\n    \n    out << \" : \" << aFileName << \":\" << aLineNumber << \":\"\n        << aFunctionName << \"() = \"\n        << aMessage << \"\\n\";\n    }\n    \n    \nstd::ostream& CConsoleOutput::OutputTo()\n    {\n    return std::cout;\n    }\n\n} //namespace logging\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġlog", "_", "output", ".", "cpp", "Ċ", "//", "Ġ", "Ġv", "Client", "Template", "Lib", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠV", "i", "rend", "ra", "ĠSh", "ak", "ya", "Ġon", "Ġ5", "/", "3", "/", "14", ".", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", "ĠV", "i", "rend", "ra", "ĠSh", "ak", "ya", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "logging", "/", "log", "_", "output", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "namespace", "Ġlogging", "Ċ", "{", "Ċ", "//", "Ġ----------------", "-------", "Ċ", "Ċ", "void", "ĠIS", "imple", "Blocking", "Output", "::", "Dump", "(", "E", "LogLevel", "Ġa", "LogLevel", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "&", "Ġa", "TimeStamp", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "&", "Ġa", "FileName", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġa", "LineNumber", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "&", "Ġa", "FunctionName", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "&", "Ġa", "Message", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "(", "a", "LogLevel", "Ġ>", "Ġi", "LogLevel", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ċ", "#", "if", "Ġdefined", "(", "THREAD", "SAFE", "_", "LOGGING", ")", "Ċ", "ĠĠĠ", "Ġv", "base", "::", "T", "AutoLock", "Ġguard", "(", "i", "Lock", ");", "Ċ", "#", "endif", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġstd", "::", "ostream", "&", "Ġout", "Ġ=", "ĠOutput", "To", "();", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġswitch", "Ġ(", "a", "LogLevel", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "Ġe", "Debug", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "DEBUG", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "Ġe", "Info", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "INFO", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "Ġe", "Warning", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "WARNING", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "Ġe", "Fatal", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "FATAL", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdefault", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "ERROR", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ġ//", "switch", "Ċ", "ĠĠĠĠĠĊ", "ĠĠĠ", "Ġ//", "timestamp", "Ċ", "ĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "Ġ[\"", "Ġ<<", "Ġa", "TimeStamp", "Ġ<<", "Ġ\"]\";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġout", "Ġ<<", "Ġ\"", "Ġ:", "Ġ\"", "Ġ<<", "Ġa", "FileName", "Ġ<<", "Ġ\":\"", "Ġ<<", "Ġa", "LineNumber", "Ġ<<", "Ġ\":\"", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ<<", "Ġa", "FunctionName", "Ġ<<", "Ġ\"()", "Ġ=", "Ġ\"", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ<<", "Ġa", "Message", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠĠ", "Ċ", "std", "::", "ostream", "&", "ĠC", "Console", "Output", "::", "Output", "To", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstd", "::", "cout", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "}", "Ġ//", "namespace", "Ġlogging", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::728", "code": "// image.h - image class\n// (c) 2020 Michael Fink\n// https://github.com/vividos/OldStuff/\n\n#pragma once\n\n#ifndef __image_h_\n#define __image_h_\n\n#include \"defs.h\"\n\nclass image_loader;\n\n// image, with palete or true-color image\nclass image\n{\npublic:\n  // loads an image from given filename; supported formats are: .gif, .jpg\n  static image* load(const char* filename);\n\n  word get_xres() const { return xres; }\n  word get_yres() const { return yres; }\n\n  // returns raw image data\n  byte* get_data() { return data; }\n\n  // returns palette with 256 entries, or NULL when true-color image\n  byte* get_palette() { return palette; }\n\nprivate:\n  friend class gif_loader;\n  friend class jpeg_loader;\n\n  // creates a new image object, either with palette, or as true-color image\n  image(unsigned int width, unsigned int height,\n    unsigned char bits_per_pixel, bool has_palette);\n\n  // x and y resolution\n  word xres;\n  word yres;\n\n  // image data\n  byte* data;\n\n  // palette data\n  byte* palette;\n};\n\n#endif\n", "code_tokens": ["Ġ//", "Ġimage", ".", "h", "Ġ-", "Ġimage", "Ġclass", "Ċ", "//", "Ġ(", "c", ")", "Ġ2", "020", "ĠM", "ichael", "ĠF", "ink", "Ċ", "//", "Ġhttps", "://", "github", ".", "com", "/", "vi", "vid", "os", "/", "Old", "Stuff", "/", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "ifndef", "Ġ__", "image", "_", "h", "_", "Ċ", "#", "define", "Ġ__", "image", "_", "h", "_", "Ċ", "Ċ", "#", "include", "Ġ\"", "defs", ".", "h", "\"", "Ċ", "Ċ", "class", "Ġimage", "_", "loader", ";", "Ċ", "Ċ", "//", "Ġimage", ",", "Ġwith", "Ġpal", "et", "e", "Ġor", "Ġtrue", "-", "color", "Ġimage", "Ċ", "class", "Ġimage", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ//", "Ġloads", "Ġan", "Ġimage", "Ġfrom", "Ġgiven", "Ġfilename", ";", "Ġsupported", "Ġformats", "Ġare", ":", "Ġ.", "gif", ",", "Ġ.", "jpg", "Ċ", "Ġ", "Ġstatic", "Ġimage", "*", "Ġload", "(", "const", "Ġchar", "*", "Ġfilename", ");", "Ċ", "Ċ", "Ġ", "Ġword", "Ġget", "_", "xres", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġx", "res", ";", "Ġ}", "Ċ", "Ġ", "Ġword", "Ġget", "_", "yres", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġy", "res", ";", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġreturns", "Ġraw", "Ġimage", "Ġdata", "Ċ", "Ġ", "Ġbyte", "*", "Ġget", "_", "data", "()", "Ġ{", "Ġreturn", "Ġdata", ";", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġreturns", "Ġpalette", "Ġwith", "Ġ256", "Ġentries", ",", "Ġor", "ĠNULL", "Ġwhen", "Ġtrue", "-", "color", "Ġimage", "Ċ", "Ġ", "Ġbyte", "*", "Ġget", "_", "palette", "()", "Ġ{", "Ġreturn", "Ġpalette", ";", "Ġ}", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġfriend", "Ġclass", "Ġg", "if", "_", "loader", ";", "Ċ", "Ġ", "Ġfriend", "Ġclass", "Ġjpeg", "_", "loader", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġcreates", "Ġa", "Ġnew", "Ġimage", "Ġobject", ",", "Ġeither", "Ġwith", "Ġpalette", ",", "Ġor", "Ġas", "Ġtrue", "-", "color", "Ġimage", "Ċ", "Ġ", "Ġimage", "(", "unsigned", "Ġint", "Ġwidth", ",", "Ġunsigned", "Ġint", "Ġheight", ",", "Ċ", "ĠĠĠ", "Ġunsigned", "Ġchar", "Ġbits", "_", "per", "_", "pixel", ",", "Ġbool", "Ġhas", "_", "palette", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġx", "Ġand", "Ġy", "Ġresolution", "Ċ", "Ġ", "Ġword", "Ġx", "res", ";", "Ċ", "Ġ", "Ġword", "Ġy", "res", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġimage", "Ġdata", "Ċ", "Ġ", "Ġbyte", "*", "Ġdata", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġpalette", "Ġdata", "Ċ", "Ġ", "Ġbyte", "*", "Ġpalette", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::729", "code": "\n#include <cstdio>\n#include <cstdlib>\n\n#ifdef HAVE_CONFIG_H\n#include <config.h>\n#endif\n\n#ifdef USE_PREFIX_TRIE\n#include <cedarpp.h>\n#else\n#include <cedar.h>\n#endif\n\n//typedef cedar::da<int> cedar_t;\n\ntemplate<typename T>\ninline void insert_key(cedar::da<T> &t, const char* key, T new_value)\n{\n  t.update(key) = new_value;\n}\ntemplate<typename T>\ninline bool lookup_key(cedar::da<T> &t, const char* key)\n{\n  return t.exactMatchSearch<int>(key) >= 0;\n}\n\n// --------------------------------------------------------------------------------------------------------------------\nint main (int argc, char **argv)\n{\n  cedar::da<int> trie;\n\n  insert_key(trie,\"test\",-1);\n\n  if(lookup_key(trie,\"test\")) {\n    printf(\"lookup_key %i \\n\",trie.exactMatchSearch<int>(\"test\"));\n  }\n  if (lookup_key(trie, \"none\")) {\n    printf(\"lookup_key none %i \\n\", trie.exactMatchSearch<int>(\"none\"));\n  } else {\n    printf(\"lookup_key none %i \\n\", trie.exactMatchSearch<int>(\"none\"));\n  }\n  getchar();\n  return 0;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "Ċ", "#", "ifdef", "ĠHAVE", "_", "CONFIG", "_", "H", "Ċ", "#", "include", "Ġ<", "config", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "ifdef", "ĠUSE", "_", "PREFIX", "_", "TRIE", "Ċ", "#", "include", "Ġ<", "ced", "ar", "pp", ".", "h", ">", "Ċ", "#", "else", "Ċ", "#", "include", "Ġ<", "ced", "ar", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "//", "typedef", "Ġc", "ed", "ar", "::", "da", "<", "int", ">", "Ġc", "ed", "ar", "_", "t", ";", "Ċ", "Ċ", "template", "<", "typename", "ĠT", ">", "Ċ", "inline", "Ġvoid", "Ġinsert", "_", "key", "(", "ced", "ar", "::", "da", "<", "T", ">", "Ġ&", "t", ",", "Ġconst", "Ġchar", "*", "Ġkey", ",", "ĠT", "Ġnew", "_", "value", ")", "Ċ", "{", "Ċ", "Ġ", "Ġt", ".", "update", "(", "key", ")", "Ġ=", "Ġnew", "_", "value", ";", "Ċ", "}", "Ċ", "template", "<", "typename", "ĠT", ">", "Ċ", "inline", "Ġbool", "Ġlookup", "_", "key", "(", "ced", "ar", "::", "da", "<", "T", ">", "Ġ&", "t", ",", "Ġconst", "Ġchar", "*", "Ġkey", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġt", ".", "exact", "Match", "Search", "<", "int", ">(", "key", ")", "Ġ>=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "//", "Ġ----------------------------------------------------------------", "------------------------------------------------", "----", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ċ", "{", "Ċ", "Ġ", "Ġc", "ed", "ar", "::", "da", "<", "int", ">", "Ġtrie", ";", "Ċ", "Ċ", "Ġ", "Ġinsert", "_", "key", "(", "trie", ",\"", "test", "\",", "-", "1", ");", "Ċ", "Ċ", "Ġ", "Ġif", "(", "lookup", "_", "key", "(", "trie", ",\"", "test", "\"))", "Ġ{", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "lookup", "_", "key", "Ġ%", "i", "Ġ\\", "n", "\",", "trie", ".", "exact", "Match", "Search", "<", "int", ">(\"", "test", "\"));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ(", "lookup", "_", "key", "(", "trie", ",", "Ġ\"", "none", "\"))", "Ġ{", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "lookup", "_", "key", "Ġnone", "Ġ%", "i", "Ġ\\", "n", "\",", "Ġtrie", ".", "exact", "Match", "Search", "<", "int", ">(\"", "none", "\"));", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "Ġprintf", "(\"", "lookup", "_", "key", "Ġnone", "Ġ%", "i", "Ġ\\", "n", "\",", "Ġtrie", ".", "exact", "Match", "Search", "<", "int", ">(\"", "none", "\"));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġget", "char", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::730", "code": "#pragma once\n\n#include <ostream>\n\n#include <QtCore/QProcess>\n#include <QtCore/QString>\n\n// for translation\n#define T_(str) QString(str)\n\n#if QT_VERSION < 0x050000\n#define QStringLiteral(const_str) QString(const_str)\n#endif\n\n#if QT_VERSION >= 0x050000\n#define INSTALL_QT_MSG_HANDLER(msgHandler) qInstallMessageHandler((msgHandler))\n#else\n#define INSTALL_QT_MSG_HANDLER(msgHandler) qInstallMsgHandler((msgHandler))\n#endif\n\nnamespace qt_monkey_common\n{\nQString processErrorToString(QProcess::ProcessError err);\nvoid processEventsFor(int timeoutMs);\n\n// not implement for QString because of we may need different\n// QString->QByteArray\n// conversation, for example in some cases toLocal8Bit, in some cases toUtf8\ninline std::ostream &operator<<(std::ostream &os, const QByteArray &str)\n{\n    std::copy(str.begin(), str.end(), std::ostreambuf_iterator<char>(os));\n    return os;\n}\n\nextern QString searchMaxTextInWidget(QWidget &wdg);\n} // namespace qt_monkey_common\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Qt", "Core", "/", "Q", "Process", ">", "Ċ", "#", "include", "Ġ<", "Qt", "Core", "/", "QString", ">", "Ċ", "Ċ", "//", "Ġfor", "Ġtranslation", "Ċ", "#", "define", "ĠT", "_(", "str", ")", "ĠQString", "(", "str", ")", "Ċ", "Ċ", "#", "if", "ĠQT", "_", "VERSION", "Ġ<", "Ġ0", "x", "05", "0000", "Ċ", "#", "define", "ĠQStringLiteral", "(", "const", "_", "str", ")", "ĠQString", "(", "const", "_", "str", ")", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "if", "ĠQT", "_", "VERSION", "Ġ>=", "Ġ0", "x", "05", "0000", "Ċ", "#", "define", "ĠINST", "ALL", "_", "QT", "_", "MSG", "_", "HANDLER", "(", "msg", "Handler", ")", "Ġq", "Install", "MessageHandler", "((", "msg", "Handler", "))", "Ċ", "#", "else", "Ċ", "#", "define", "ĠINST", "ALL", "_", "QT", "_", "MSG", "_", "HANDLER", "(", "msg", "Handler", ")", "Ġq", "Install", "Msg", "Handler", "((", "msg", "Handler", "))", "Ċ", "#", "endif", "Ċ", "Ċ", "namespace", "Ġqt", "_", "mon", "key", "_", "common", "Ċ", "{", "Ċ", "QString", "Ġprocess", "Error", "ToString", "(", "Q", "Process", "::", "ProcessError", "Ġerr", ");", "Ċ", "void", "Ġprocess", "Events", "For", "(", "int", "Ġtimeout", "Ms", ");", "Ċ", "Ċ", "//", "Ġnot", "Ġimplement", "Ġfor", "ĠQString", "Ġbecause", "Ġof", "Ġwe", "Ġmay", "Ġneed", "Ġdifferent", "Ċ", "//", "ĠQString", "->", "QByteArray", "Ċ", "//", "Ġconversation", ",", "Ġfor", "Ġexample", "Ġin", "Ġsome", "Ġcases", "Ġto", "Local", "8", "Bit", ",", "Ġin", "Ġsome", "Ġcases", "Ġto", "Utf", "8", "Ċ", "inline", "Ġstd", "::", "ostream", "Ġ&", "operator", "<<(", "std", "::", "ostream", "Ġ&", "os", ",", "Ġconst", "ĠQByteArray", "Ġ&", "str", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "copy", "(", "str", ".", "begin", "(),", "Ġstr", ".", "end", "(),", "Ġstd", "::", "ostream", "buf", "_", "iterator", "<", "char", ">(", "os", "));", "Ċ", "ĠĠĠ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ", "extern", "ĠQString", "Ġsearch", "Max", "Text", "In", "Widget", "(", "QWidget", "Ġ&", "wd", "g", ");", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġqt", "_", "mon", "key", "_", "common", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::731", "code": "//===-- lib/Parser/debug-parser.cpp ---------------------------------------===//\n//\n// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n//\n//===----------------------------------------------------------------------===//\n\n#include \"debug-parser.h\"\n#include \"flang/Parser/user-state.h\"\n#include <string>\n\nnamespace Fortran::parser {\n\nstd::optional<Success> DebugParser::Parse(ParseState &state) const {\n  if (auto ustate{state.userState()}) {\n    if (auto out{ustate->debugOutput()}) {\n      std::string note{str_, length_};\n      Message message{state.GetLocation(), \"parser debug: %s\"_en_US, note};\n      message.SetContext(state.context().get());\n      message.Emit(*out, ustate->cooked(), true);\n    }\n  }\n  return {Success{}};\n}\n} // namespace Fortran::parser\n", "code_tokens": ["Ġ//", "===", "--", "Ġlib", "/", "Parser", "/", "debug", "-", "parser", ".", "cpp", "Ġ--------------------------------", "-------", "===//", "Ċ", "//", "Ċ", "//", "ĠPart", "Ġof", "Ġthe", "ĠLLVM", "ĠProject", ",", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", "Ġv", "2", ".", "0", "Ġwith", "ĠLLVM", "ĠExceptions", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "llvm", ".", "org", "/", "LICENSE", ".", "txt", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "//", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĠApache", "-", "2", ".", "0", "ĠWITH", "ĠLLVM", "-", "exception", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "#", "include", "Ġ\"", "debug", "-", "parser", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "f", "lang", "/", "Parser", "/", "user", "-", "state", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "namespace", "ĠFor", "tran", "::", "parser", "Ġ{", "Ċ", "Ċ", "std", "::", "optional", "<", "Success", ">", "ĠDebug", "Parser", "::", "Parse", "(", "Parse", "State", "Ġ&", "state", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "auto", "Ġu", "state", "{", "state", ".", "user", "State", "()})", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "auto", "Ġout", "{", "ust", "ate", "->", "debug", "Output", "()})", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġstd", "::", "string", "Ġnote", "{", "str", "_,", "Ġlength", "_", "};", "Ċ", "ĠĠĠĠĠ", "ĠMessage", "Ġmessage", "{", "state", ".", "Get", "Location", "(),", "Ġ\"", "parser", "Ġdebug", ":", "Ġ%", "s", "\"_", "en", "_", "US", ",", "Ġnote", "};", "Ċ", "ĠĠĠĠĠ", "Ġmessage", ".", "SetContext", "(", "state", ".", "context", "().", "get", "());", "Ċ", "ĠĠĠĠĠ", "Ġmessage", ".", "Emit", "(*", "out", ",", "Ġu", "state", "->", "cook", "ed", "(),", "Ġtrue", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ{", "Success", "{}", "};", "Ċ", "}", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠFor", "tran", "::", "parser", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::732", "code": "﻿/**\n* @file\t\t\thmi_button\n* @brief\t\t画面按钮事件响应通道，处理SDL发送的Buttons相关的RPC请求等\n* @author\t\tfanqiang\n* @date\t\t\t2017-6-21\n* @version\t\tA001\n* @copyright\tford\n*/\n\n#include \"hmi_button.h\"\n#include <iostream>\n#include <string>\n#include \"json/json.h\"\n#include \"global_first.h\"\n\nButtons::Buttons() : Channel(200, \"Buttons\") {\n\n}\n\nButtons::~Buttons() {\n\n}\n\nvoid Buttons::onRequest(Json::Value &request) {\n  std::string method = request[\"method\"].asString();\n  int  id = request[\"id\"].asInt();\n  if (method == \"Buttons.GetCapabilities\") {\n    sendResult(id, \"GetCapabilities\");\n  } else if (method == \"Buttons.IsReady\") {\n    sendResult(id, \"IsReady\");\n  } else {\n    Channel::onRequest(request);\n  }\n}\n\n", "code_tokens": ["Ġ", "ï", "»", "¿", "/**", "Ċ", "*", "Ġ@", "file", "ĉĉ", "ĉ", "h", "mi", "_", "button", "Ċ", "*", "Ġ@", "brief", "ĉ", "ĉ", "çĶ»", "éĿ¢", "æĮī", "éĴ", "®", "äºĭä»¶", "åĵį", "åºĶ", "éĢļ", "éģ", "ĵ", "ï¼Į", "å¤ĦçĲĨ", "SDL", "åıĳéĢģ", "çļĦ", "Buttons", "çĽ¸", "åħ³", "çļĦ", "RPC", "è¯·æ±Ĥ", "çŃī", "Ċ", "*", "Ġ@", "author", "ĉ", "ĉ", "fan", "qi", "ang", "Ċ", "*", "Ġ@", "date", "ĉĉ", "ĉ", "2017", "-", "6", "-", "21", "Ċ", "*", "Ġ@", "version", "ĉ", "ĉ", "A", "001", "Ċ", "*", "Ġ@", "copyright", "ĉ", "ford", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "h", "mi", "_", "button", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "json", "/", "json", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "global", "_", "first", ".", "h", "\"", "Ċ", "Ċ", "Buttons", "::", "Buttons", "()", "Ġ:", "ĠChannel", "(", "200", ",", "Ġ\"", "Buttons", "\")", "Ġ{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Buttons", "::~", "Buttons", "()", "Ġ{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠButton", "s", "::", "on", "Request", "(", "Json", "::", "Value", "Ġ&", "request", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġmethod", "Ġ=", "Ġrequest", "[\"", "method", "\"].", "asString", "();", "Ċ", "Ġ", "Ġint", "Ġ", "Ġid", "Ġ=", "Ġrequest", "[\"", "id", "\"].", "as", "Int", "();", "Ċ", "Ġ", "Ġif", "Ġ(", "method", "Ġ==", "Ġ\"", "Buttons", ".", "Get", "Capabilities", "\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġsend", "Result", "(", "id", ",", "Ġ\"", "Get", "Capabilities", "\");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "method", "Ġ==", "Ġ\"", "Buttons", ".", "Is", "Ready", "\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġsend", "Result", "(", "id", ",", "Ġ\"", "Is", "Ready", "\");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "ĠChannel", "::", "on", "Request", "(", "request", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::733", "code": "#include \"actor-zeta/standard_handlers/add_channel.hpp\"\n\n#include <iostream>\n\n#include \"actor-zeta/behavior/request.hpp\"\n#include \"actor-zeta/behavior/response.hpp\"\n#include \"actor-zeta/channel/channel.hpp\"\n\nnamespace actor_zeta {\n\n    void error(const std::string &name) {\n        std::cerr << \"WARNING\" << std::endl;\n        std::cerr << \"Not initialization channel type:\" << name << std::endl;\n        std::cerr << \"WARNING\" << std::endl;\n    }\n\n    add_channel::add_channel() : abstract_action(\"add_channel\") {}\n\n    behavior::response add_channel::operator()(behavior::request &&request) {\n        auto channel_ = request.message().get<channel::channel>();\n        if (channel_) {\n            request.contacts().channel(channel_);\n        } else {\n            error(channel_->type());\n        }\n\n        return behavior::response();\n\n    }\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "actor", "-", "z", "eta", "/", "standard", "_", "handlers", "/", "add", "_", "channel", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "actor", "-", "z", "eta", "/", "behavior", "/", "request", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "actor", "-", "z", "eta", "/", "behavior", "/", "response", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "actor", "-", "z", "eta", "/", "channel", "/", "channel", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġactor", "_", "z", "eta", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġerror", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "WARNING", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "Not", "Ġinitialization", "Ġchannel", "Ġtype", ":\"", "Ġ<<", "Ġname", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "WARNING", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġadd", "_", "channel", "::", "add", "_", "channel", "()", "Ġ:", "Ġabstract", "_", "action", "(\"", "add", "_", "channel", "\")", "Ġ{}", "Ċ", "Ċ", "ĠĠĠ", "Ġbehavior", "::", "response", "Ġadd", "_", "channel", "::", "operator", "()(", "behavior", "::", "request", "Ġ&&", "request", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġauto", "Ġchannel", "_", "Ġ=", "Ġrequest", ".", "message", "().", "get", "<", "channel", "::", "channel", ">();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "channel", "_)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġrequest", ".", "contacts", "().", "channel", "(", "channel", "_);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġerror", "(", "channel", "_->", "type", "());", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġbehavior", "::", "response", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::734", "code": "// Copyright (C) 2011, James Webber.\n// Distributed under a 3-clause BSD license.  See COPYING.\n#ifndef PIPELINE_OBSERVER_STAGE_SEQUENCE_HPP_4sykuldr\n#define PIPELINE_OBSERVER_STAGE_SEQUENCE_HPP_4sykuldr\n\n#include \"stage_sequence.hpp\"\n\n#include \"../util/asserts.hpp\"\n#include \"../util/indirect.hpp\"\n\n#include <vector>\n\nnamespace pipeline {\n  struct observer_stage;\n\n  /*!\n   * \\ingroup grp_pipeline\n   * Simple sequence which can only handle those stages that look but don't\n   * touch.\n   */\n  class observer_stage_sequence : public stage_sequence {\n    public:\n    typedef indirect_owned_polymorph<observer_stage> stages_type;\n\n    stage_sequence::step_state sequence_step();\n    simple_stage *create_stage(stages::stage_data &cfg);\n\n    void finalise() {}\n\n    private:\n\n    stages_type &stages() { return stages_; }\n    stages_type stages_;\n  };\n\n  //! \\ingroup grp_pipeline\n  //! Identical sequence for now.\n  typedef observer_stage_sequence output_stage_sequence;\n}\n#endif\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", ",", "ĠJ", "ames", "ĠWe", "bber", ".", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġa", "Ġ3", "-", "clause", "ĠBSD", "Ġlicense", ".", "Ġ", "ĠSee", "ĠCOPY", "ING", ".", "Ċ", "#", "ifndef", "ĠPIPE", "LINE", "_", "OB", "SERVER", "_", "STAGE", "_", "SEQUENCE", "_", "HP", "P", "_", "4", "sy", "k", "uld", "r", "Ċ", "#", "define", "ĠPIPE", "LINE", "_", "OB", "SERVER", "_", "STAGE", "_", "SEQUENCE", "_", "HP", "P", "_", "4", "sy", "k", "uld", "r", "Ċ", "Ċ", "#", "include", "Ġ\"", "stage", "_", "sequence", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"../", "util", "/", "asserts", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "util", "/", "indirect", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "namespace", "Ġpipeline", "Ġ{", "Ċ", "Ġ", "Ġstruct", "Ġobserver", "_", "stage", ";", "Ċ", "Ċ", "Ġ", "Ġ/*", "!", "Ċ", "ĠĠ", "Ġ*", "Ġ\\", "ingroup", "Ġgrp", "_", "pipeline", "Ċ", "ĠĠ", "Ġ*", "ĠSimple", "Ġsequence", "Ġwhich", "Ġcan", "Ġonly", "Ġhandle", "Ġthose", "Ġstages", "Ġthat", "Ġlook", "Ġbut", "Ġdon", "'t", "Ċ", "ĠĠ", "Ġ*", "Ġtouch", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "Ġ", "Ġclass", "Ġobserver", "_", "stage", "_", "sequence", "Ġ:", "Ġpublic", "Ġstage", "_", "sequence", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġindirect", "_", "owned", "_", "pol", "ym", "orph", "<", "observer", "_", "stage", ">", "Ġstages", "_", "type", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstage", "_", "sequence", "::", "step", "_", "state", "Ġsequence", "_", "step", "();", "Ċ", "ĠĠĠ", "Ġsimple", "_", "stage", "Ġ*", "create", "_", "stage", "(", "stages", "::", "stage", "_", "data", "Ġ&", "cfg", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġfinal", "ise", "()", "Ġ{}", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "Ċ", "ĠĠĠ", "Ġstages", "_", "type", "Ġ&", "stages", "()", "Ġ{", "Ġreturn", "Ġstages", "_;", "Ġ}", "Ċ", "ĠĠĠ", "Ġstages", "_", "type", "Ġstages", "_;", "Ċ", "Ġ", "Ġ};", "Ċ", "Ċ", "Ġ", "Ġ//!", "Ġ\\", "ingroup", "Ġgrp", "_", "pipeline", "Ċ", "Ġ", "Ġ//!", "ĠIdent", "ical", "Ġsequence", "Ġfor", "Ġnow", ".", "Ċ", "Ġ", "Ġtypedef", "Ġobserver", "_", "stage", "_", "sequence", "Ġoutput", "_", "stage", "_", "sequence", ";", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::735", "code": "#include \"AMQConfigDialog.h\"\n#include \"ui_AMQConfigDialog.h\"\n\nAMQConfigDialog::AMQConfigDialog(QWidget *parent)\n    : QDialog(parent), ui(new Ui::AMQConfigDialog)\n{\n    ui->setupUi(this);\n}\n\n\nAMQConfigDialog::AMQConfigDialog( QWidget *parent, const std::string &a_domain, const std::string &a_broker_uri, const std::string &a_user, const std::string &a_pass )\n    : QDialog(parent), ui(new Ui::AMQConfigDialog), m_domain(a_domain), m_broker_uri( a_broker_uri ), m_username( a_user ), m_password( a_pass )\n{\n    ui->setupUi(this);\n    ui->domainEdit->setText( m_domain.c_str() );\n    ui->brokerEdit->setText( m_broker_uri.c_str() );\n    ui->usernameEdit->setText( m_username.c_str() );\n    ui->passwordEdit->setText( m_password.c_str() );\n}\n\nAMQConfigDialog::~AMQConfigDialog()\n{\n    delete ui;\n}\n\n\nvoid\nAMQConfigDialog::accept()\n{\n    m_domain = ui->domainEdit->text().toStdString();\n    m_broker_uri = ui->brokerEdit->text().toStdString();\n    m_username = ui->usernameEdit->text().toStdString();\n    m_password = ui->passwordEdit->text().toStdString();\n\n    if ( !m_broker_uri.empty() && !(!m_password.empty() && m_username.empty()) )\n    {\n        // Append a \".\" character to domain if needed\n        if ( !m_domain.empty() && *m_domain.rbegin() != '.' )\n            m_domain += \".\";\n\n        QDialog::accept();\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "AM", "Q", "Config", "Dialog", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "AM", "Q", "Config", "Dialog", ".", "h", "\"", "Ċ", "Ċ", "AM", "Q", "Config", "Dialog", "::", "AM", "Q", "Config", "Dialog", "(", "QWidget", "Ġ*", "parent", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠQDialog", "(", "parent", "),", "Ġui", "(", "new", "ĠUi", "::", "AM", "Q", "Config", "Dialog", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "setup", "Ui", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "Ċ", "AM", "Q", "Config", "Dialog", "::", "AM", "Q", "Config", "Dialog", "(", "ĠQWidget", "Ġ*", "parent", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "a", "_", "domain", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "a", "_", "broker", "_", "uri", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "a", "_", "user", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "a", "_", "pass", "Ġ)", "Ċ", "ĠĠĠ", "Ġ:", "ĠQDialog", "(", "parent", "),", "Ġui", "(", "new", "ĠUi", "::", "AM", "Q", "Config", "Dialog", "),", "Ġm", "_", "domain", "(", "a", "_", "domain", "),", "Ġm", "_", "broker", "_", "uri", "(", "Ġa", "_", "broker", "_", "uri", "Ġ),", "Ġm", "_", "username", "(", "Ġa", "_", "user", "Ġ),", "Ġm", "_", "password", "(", "Ġa", "_", "pass", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġui", "->", "setup", "Ui", "(", "this", ");", "Ċ", "ĠĠĠ", "Ġui", "->", "domain", "Edit", "->", "setText", "(", "Ġm", "_", "domain", ".", "c", "_", "str", "()", "Ġ);", "Ċ", "ĠĠĠ", "Ġui", "->", "broker", "Edit", "->", "setText", "(", "Ġm", "_", "broker", "_", "uri", ".", "c", "_", "str", "()", "Ġ);", "Ċ", "ĠĠĠ", "Ġui", "->", "username", "Edit", "->", "setText", "(", "Ġm", "_", "username", ".", "c", "_", "str", "()", "Ġ);", "Ċ", "ĠĠĠ", "Ġui", "->", "password", "Edit", "->", "setText", "(", "Ġm", "_", "password", ".", "c", "_", "str", "()", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "AM", "Q", "Config", "Dialog", "::~", "AM", "Q", "Config", "Dialog", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġdelete", "Ġui", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "void", "Ċ", "AM", "Q", "Config", "Dialog", "::", "accept", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "domain", "Ġ=", "Ġui", "->", "domain", "Edit", "->", "text", "().", "toStdString", "();", "Ċ", "ĠĠĠ", "Ġm", "_", "broker", "_", "uri", "Ġ=", "Ġui", "->", "broker", "Edit", "->", "text", "().", "toStdString", "();", "Ċ", "ĠĠĠ", "Ġm", "_", "username", "Ġ=", "Ġui", "->", "username", "Edit", "->", "text", "().", "toStdString", "();", "Ċ", "ĠĠĠ", "Ġm", "_", "password", "Ġ=", "Ġui", "->", "password", "Edit", "->", "text", "().", "toStdString", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Ġ!", "m", "_", "broker", "_", "uri", ".", "empty", "()", "Ġ&&", "Ġ!", "(!", "m", "_", "password", ".", "empty", "()", "Ġ&&", "Ġm", "_", "username", ".", "empty", "())", "Ġ)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "ĠAppend", "Ġa", "Ġ\".\"", "Ġcharacter", "Ġto", "Ġdomain", "Ġif", "Ġneeded", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "Ġ!", "m", "_", "domain", ".", "empty", "()", "Ġ&&", "Ġ*", "m", "_", "domain", ".", "r", "begin", "()", "Ġ!=", "Ġ'.'", "Ġ)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "_", "domain", "Ġ+=", "Ġ\".\";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQDialog", "::", "accept", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::736", "code": "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"cc/paint/skottie_wrapper.h\"\n\nnamespace cc {\n\nvoid SkottieWrapper::Seek(float t) {\n  Seek(t, FrameDataCallback());\n}\n\nvoid SkottieWrapper::Draw(SkCanvas* canvas, float t, const SkRect& rect) {\n  Draw(canvas, t, rect, FrameDataCallback());\n}\n\n}  // namespace cc\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2", "021", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "cc", "/", "paint", "/", "sk", "ot", "tie", "_", "wrapper", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġcc", "Ġ{", "Ċ", "Ċ", "void", "ĠSk", "ot", "tie", "Wrapper", "::", "Seek", "(", "float", "Ġt", ")", "Ġ{", "Ċ", "Ġ", "ĠSeek", "(", "t", ",", "ĠFrame", "Data", "Callback", "());", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSk", "ot", "tie", "Wrapper", "::", "Draw", "(", "Sk", "Canvas", "*", "Ġcanvas", ",", "Ġfloat", "Ġt", ",", "Ġconst", "ĠSk", "Rect", "&", "Ġrect", ")", "Ġ{", "Ċ", "Ġ", "ĠDraw", "(", "canvas", ",", "Ġt", ",", "Ġrect", ",", "ĠFrame", "Data", "Callback", "());", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġcc", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::737", "code": "class Solution {\n public:\n  bool transformArrayInternal(vector<int>& arr) {\n    bool changed(false);\n    int lastDigit(arr[0]);\n    for (int i = 1; i < arr.size() - 1; i++) {\n      int lastDigitNew = arr[i];\n      if (arr[i] < lastDigit && arr[i] < arr[i + 1]) {\n        changed = true;\n        arr[i]++;\n      } else if (arr[i] > lastDigit && arr[i] > arr[i + 1]) {\n        changed = true;\n        arr[i]--;\n      }\n      lastDigit = lastDigitNew;\n    }\n    //cout<<changed<<endl;\n    return changed;\n  }\n  vector<int> transformArray(vector<int>& arr) {\n    if (arr.size() <= 2) {\n      return arr;\n    }\n    while (transformArrayInternal(arr)) {\n    }\n    return arr;\n  }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "Ġpublic", ":", "Ċ", "Ġ", "Ġbool", "Ġtransform", "Array", "Internal", "(", "vector", "<", "int", ">&", "Ġarr", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġbool", "Ġchanged", "(", "false", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġlast", "Digit", "(", "arr", "[", "0", "]);", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġarr", ".", "size", "()", "Ġ-", "Ġ1", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġint", "Ġlast", "Digit", "New", "Ġ=", "Ġarr", "[", "i", "];", "Ċ", "ĠĠĠĠĠ", "Ġif", "Ġ(", "arr", "[", "i", "]", "Ġ<", "Ġlast", "Digit", "Ġ&&", "Ġarr", "[", "i", "]", "Ġ<", "Ġarr", "[", "i", "Ġ+", "Ġ1", "])", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchanged", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġarr", "[", "i", "]++;", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "arr", "[", "i", "]", "Ġ>", "Ġlast", "Digit", "Ġ&&", "Ġarr", "[", "i", "]", "Ġ>", "Ġarr", "[", "i", "Ġ+", "Ġ1", "])", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchanged", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġarr", "[", "i", "]--;", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġlast", "Digit", "Ġ=", "Ġlast", "Digit", "New", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ//", "cout", "<<", "changed", "<<", "endl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġchanged", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġvector", "<", "int", ">", "Ġtransform", "Array", "(", "vector", "<", "int", ">&", "Ġarr", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "arr", ".", "size", "()", "Ġ<=", "Ġ2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġarr", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "transform", "Array", "Internal", "(", "arr", "))", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġarr", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::738", "code": "#include \"common.hpp\"\n\ntemplate <class HostT>\nHostT vcl_scalar_to_host(const vcl::scalar<HostT>& vcl_s)\n{\n  HostT cpu_s = vcl_s;\n  return cpu_s;\n}\n\n#define EXPORT_SCALAR_CLASS(TYPE)                                       \\\n  DISAMBIGUATE_CLASS_FUNCTION_PTR(vcl::scalar<TYPE>,                    \\\n                                  const vcl::scalar<TYPE>               \\\n                                  ::handle_type&,                       \\\n                                  handle,                               \\\n                                  get_scalar_##TYPE##_handle,           \\\n                                  () const);                            \\\n  bp::class_<vcl::scalar<TYPE> >(\"scalar_\" #TYPE)                       \\\n  .def(bp::init<TYPE>())                                                \\\n  .def(bp::init<TYPE, vcl::context>())                                  \\\n  .def(bp::init<vcl::scalar<TYPE> >())                                  \\\n  .def(\"to_host\", &vcl_scalar_to_host<TYPE>)                            \\\n  .add_property(\"handle\", bp::make_function                             \\\n                (get_scalar_##TYPE##_handle,                            \\\n                 bp::return_internal_reference<>()))                    \\\n  ;\n\nPYVCL_SUBMODULE(scalars) {\n\n  EXPORT_SCALAR_CLASS(int);\n  EXPORT_SCALAR_CLASS(uint);\n  EXPORT_SCALAR_CLASS(long);\n  EXPORT_SCALAR_CLASS(ulong);\n  EXPORT_SCALAR_CLASS(float);\n  EXPORT_SCALAR_CLASS(double);\n\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "common", ".", "hpp", "\"", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠHost", "T", ">", "Ċ", "Host", "T", "Ġv", "cl", "_", "scalar", "_", "to", "_", "host", "(", "const", "Ġv", "cl", "::", "scalar", "<", "Host", "T", ">&", "Ġv", "cl", "_", "s", ")", "Ċ", "{", "Ċ", "Ġ", "ĠHost", "T", "Ġcpu", "_", "s", "Ġ=", "Ġv", "cl", "_", "s", ";", "Ċ", "Ġ", "Ġreturn", "Ġcpu", "_", "s", ";", "Ċ", "}", "Ċ", "Ċ", "#", "define", "ĠEX", "PORT", "_", "SCALAR", "_", "CLASS", "(", "TYPE", ")", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "Ġ", "ĠDIS", "AM", "BIG", "U", "ATE", "_", "CLASS", "_", "FUNCTION", "_", "PTR", "(", "v", "cl", "::", "scalar", "<", "TYPE", ">,", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġv", "cl", "::", "scalar", "<", "TYPE", ">", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ::", "handle", "_", "type", "&,", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġhandle", ",", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġget", "_", "scalar", "_", "##", "TYPE", "##", "_", "handle", ",", "ĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ()", "Ġconst", ");", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "Ġ", "Ġbp", "::", "class", "_<", "v", "cl", "::", "scalar", "<", "TYPE", ">", "Ġ>", "(\"", "scalar", "_\"", "Ġ#", "TYPE", ")", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "Ġ", "Ġ.", "def", "(", "bp", "::", "init", "<", "TYPE", ">())", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "Ġ", "Ġ.", "def", "(", "bp", "::", "init", "<", "TYPE", ",", "Ġv", "cl", "::", "context", ">())", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "Ġ", "Ġ.", "def", "(", "bp", "::", "init", "<", "v", "cl", "::", "scalar", "<", "TYPE", ">", "Ġ>", "())", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "Ġ", "Ġ.", "def", "(\"", "to", "_", "host", "\",", "Ġ&", "v", "cl", "_", "scalar", "_", "to", "_", "host", "<", "TYPE", ">)", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "Ġ", "Ġ.", "add", "_", "property", "(\"", "handle", "\",", "Ġbp", "::", "make", "_", "function", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(", "get", "_", "scalar", "_", "##", "TYPE", "##", "_", "handle", ",", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbp", "::", "return", "_", "internal", "_", "reference", "<>", "()))", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "Ċ", "Ġ", "Ġ;", "Ċ", "Ċ", "PY", "V", "CL", "_", "SUB", "MODULE", "(", "scalar", "s", ")", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠEX", "PORT", "_", "SCALAR", "_", "CLASS", "(", "int", ");", "Ċ", "Ġ", "ĠEX", "PORT", "_", "SCALAR", "_", "CLASS", "(", "uint", ");", "Ċ", "Ġ", "ĠEX", "PORT", "_", "SCALAR", "_", "CLASS", "(", "long", ");", "Ċ", "Ġ", "ĠEX", "PORT", "_", "SCALAR", "_", "CLASS", "(", "ulong", ");", "Ċ", "Ġ", "ĠEX", "PORT", "_", "SCALAR", "_", "CLASS", "(", "float", ");", "Ċ", "Ġ", "ĠEX", "PORT", "_", "SCALAR", "_", "CLASS", "(", "double", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::739", "code": "#include <iostream>\nusing namespace std;\nbool touched[103];\nint printSearch(int *arr,int j,int n,int ele){\n    int i;\n    for(i=j+1;(i<=n && arr[i]!=ele);i++);\n    touched[i]=1;\n    return i;\n}\nint main(int argc, char const *argv[]) {\n    int n,arr[103],sum=0;\n    cin>>n;\n    for(int i=1;i<=n;i++) {cin>>arr[i];sum+=arr[i];}\n    sum/=(n>>1);\n    for(int i=1;i<=(n);i++){\n        if(touched[i]) continue;\n        cout<<i<<\" \"<<printSearch(arr,i,n,sum-arr[i])<<endl;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "bool", "Ġtouched", "[", "103", "];", "Ċ", "int", "Ġprint", "Search", "(", "int", "Ġ*", "arr", ",", "int", "Ġj", ",", "int", "Ġn", ",", "int", "Ġele", "){", "Ċ", "ĠĠĠ", "Ġint", "Ġi", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "i", "=", "j", "+", "1", ";(", "i", "<=", "n", "Ġ&&", "Ġarr", "[", "i", "]!=", "ele", ");", "i", "++);", "Ċ", "ĠĠĠ", "Ġtouched", "[", "i", "]=", "1", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġi", ";", "Ċ", "}", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġconst", "Ġ*", "argv", "[])", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "arr", "[", "103", "],", "sum", "=", "0", ";", "Ċ", "ĠĠĠ", "Ġcin", ">>", "n", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "1", ";", "i", "<=", "n", ";", "i", "++)", "Ġ{", "cin", ">>", "arr", "[", "i", "];", "sum", "+=", "arr", "[", "i", "];", "}", "Ċ", "ĠĠĠ", "Ġsum", "/", "=(", "n", ">>", "1", ");", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "1", ";", "i", "<", "=(", "n", ");", "i", "++){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "touched", "[", "i", "])", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "<<", "i", "<<\"", "Ġ\"<<", "print", "Search", "(", "arr", ",", "i", ",", "n", ",", "sum", "-", "arr", "[", "i", "])<<", "endl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::740", "code": "#include \"assignment_mixin.hpp\"\n\n#include <string>\n#include <utility>\n\nclass thing : public assignment_mixin<thing> {\n    public:\n        thing() : value_{} { }\n        thing(std::string const& str) : value_{str} { }\n\n        void swap(thing& other) { value_.swap(other.value_); }\n\n    private:\n        std::string value_;\n};\n\nint main() {\n    thing one{};\n    thing two{\"two\"};\n    one = two;\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "assignment", "_", "mixin", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "class", "Ġthing", "Ġ:", "Ġpublic", "Ġassignment", "_", "mixin", "<", "thing", ">", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthing", "()", "Ġ:", "Ġvalue", "_", "{}", "Ġ{", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthing", "(", "std", "::", "string", "Ġconst", "&", "Ġstr", ")", "Ġ:", "Ġvalue", "_{", "str", "}", "Ġ{", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġswap", "(", "thing", "&", "Ġother", ")", "Ġ{", "Ġvalue", "_.", "swap", "(", "other", ".", "value", "_);", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "string", "Ġvalue", "_;", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġthing", "Ġone", "{};", "Ċ", "ĠĠĠ", "Ġthing", "Ġtwo", "{\"", "two", "\"};", "Ċ", "ĠĠĠ", "Ġone", "Ġ=", "Ġtwo", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::741", "code": "#include \"soundfile.h\"\n\n#include \"soundobjectinforeference.h\"\n\nnamespace SpriterEngine\n{\n\tSoundFile::SoundFile(std::string initialFilePath) :\n\t\tFile(initialFilePath)\n\t{\n\t}\n\n\tSoundFile *SoundFile::soundFile()\n\t{\n\t\treturn this;\n\t}\n\n\tSoundObjectInfoReference * SoundFile::newSoundInfoReference()\n\t{\n\t\treturn new SoundObjectInfoReference();\n\t}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "sound", "file", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "sound", "object", "info", "reference", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠS", "pr", "iter", "Engine", "Ċ", "{", "Ċ", "ĉ", "Sound", "File", "::", "Sound", "File", "(", "std", "::", "string", "Ġinitial", "FilePath", ")", "Ġ:", "Ċ", "ĉ", "ĉ", "File", "(", "initial", "FilePath", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "Sound", "File", "Ġ*", "Sound", "File", "::", "sound", "File", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġthis", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "Sound", "Object", "Info", "Reference", "Ġ*", "ĠSound", "File", "::", "new", "Sound", "Info", "Reference", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "ĠSound", "Object", "Info", "Reference", "();", "Ċ", "ĉ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::742", "code": "#include <Eigen/Dense>\n#include <iostream>\n\nusing namespace Eigen;\nusing namespace std;\n\nint main(int, char**)\n{\n  cout.precision(3);\n  MatrixXd m(2,3);\nm << 1,2,3,4,5,6;\ncout << \"here's the 2x3 matrix m:\" << endl << m << endl;\ncout << \"let's resize m to 3x2. This is a conservative resizing because 2*3==3*2.\" << endl;\nm.resize(3,2);\ncout << \"here's the 3x2 matrix m:\" << endl << m << endl;\ncout << \"now let's resize m to size 2x2. This is NOT a conservative resizing, so it becomes uninitialized:\" << endl;\nm.resize(2,2);\ncout << m << endl;\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Eigen", "/", "Dense", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠEigen", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**)", "Ċ", "{", "Ċ", "Ġ", "Ġcout", ".", "precision", "(", "3", ");", "Ċ", "Ġ", "ĠMatrix", "Xd", "Ġm", "(", "2", ",", "3", ");", "Ċ", "m", "Ġ<<", "Ġ1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ";", "Ċ", "cout", "Ġ<<", "Ġ\"", "here", "'s", "Ġthe", "Ġ2", "x", "3", "Ġmatrix", "Ġm", ":\"", "Ġ<<", "Ġendl", "Ġ<<", "Ġm", "Ġ<<", "Ġendl", ";", "Ċ", "cout", "Ġ<<", "Ġ\"", "let", "'s", "Ġresize", "Ġm", "Ġto", "Ġ3", "x", "2", ".", "ĠThis", "Ġis", "Ġa", "Ġconservative", "Ġresizing", "Ġbecause", "Ġ2", "*", "3", "==", "3", "*", "2", ".\"", "Ġ<<", "Ġendl", ";", "Ċ", "m", ".", "resize", "(", "3", ",", "2", ");", "Ċ", "cout", "Ġ<<", "Ġ\"", "here", "'s", "Ġthe", "Ġ3", "x", "2", "Ġmatrix", "Ġm", ":\"", "Ġ<<", "Ġendl", "Ġ<<", "Ġm", "Ġ<<", "Ġendl", ";", "Ċ", "cout", "Ġ<<", "Ġ\"", "now", "Ġlet", "'s", "Ġresize", "Ġm", "Ġto", "Ġsize", "Ġ2", "x", "2", ".", "ĠThis", "Ġis", "ĠNOT", "Ġa", "Ġconservative", "Ġresizing", ",", "Ġso", "Ġit", "Ġbecomes", "Ġuninitialized", ":\"", "Ġ<<", "Ġendl", ";", "Ċ", "m", ".", "resize", "(", "2", ",", "2", ");", "Ċ", "cout", "Ġ<<", "Ġm", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::743", "code": "#ifndef LEPP2_FILTER_SENSOR_TRUNCATE_FILTER_H__\n#define LEPP2_FILTER_SENSOR_TRUNCATE_FILTER_H__\n\n#include \"lepp2/filter/PointFilter.hpp\"\n\nnamespace {\n  int genFactor(int decimals) {\n    int factor = 1;\n    for (int i = 0; i < decimals; ++i) factor *= 10;\n\n    return factor;\n  }\n}\n\n/**\n * Truncates the x, y, z coordinates of the given point to the given number of\n * decimal points.\n */\ntemplate<class PointT>\nclass TruncateFilter : public PointFilter<PointT> {\npublic:\n  /**\n   * Creates a new `TruncateFilter` that will truncate all coordinates to the\n   * given number of decimal places.\n   */\n  TruncateFilter(int decimals) : factor_(genFactor(decimals)) {}\n  /**\n   * Implementation of the `PointFilter` interface.\n   */\n  bool apply(PointT& pt) {\n    pt.x = static_cast<int>(pt.x * factor_) / static_cast<double>(factor_);\n    pt.y = static_cast<int>(pt.y * factor_) / static_cast<double>(factor_);\n    pt.z = static_cast<int>(pt.z * factor_) / static_cast<double>(factor_);\n    return true;\n  }\n\n  void prepareNext() {}\nprivate:\n  int const factor_;\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠLE", "PP", "2", "_", "FILTER", "_", "SENSOR", "_", "TRUNCATE", "_", "FILTER", "_", "H", "__", "Ċ", "#", "define", "ĠLE", "PP", "2", "_", "FILTER", "_", "SENSOR", "_", "TRUNCATE", "_", "FILTER", "_", "H", "__", "Ċ", "Ċ", "#", "include", "Ġ\"", "le", "pp", "2", "/", "filter", "/", "Point", "Filter", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġgen", "Factor", "(", "int", "Ġdecimals", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġfactor", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġdecimals", ";", "Ġ++", "i", ")", "Ġfactor", "Ġ*=", "Ġ10", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfactor", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠTr", "unc", "ates", "Ġthe", "Ġx", ",", "Ġy", ",", "Ġz", "Ġcoordinates", "Ġof", "Ġthe", "Ġgiven", "Ġpoint", "Ġto", "Ġthe", "Ġgiven", "Ġnumber", "Ġof", "Ċ", "Ġ*", "Ġdecimal", "Ġpoints", ".", "Ċ", "Ġ*/", "Ċ", "template", "<", "class", "ĠPoint", "T", ">", "Ċ", "class", "ĠTruncate", "Filter", "Ġ:", "Ġpublic", "ĠPoint", "Filter", "<", "Point", "T", ">", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ/**", "Ċ", "ĠĠ", "Ġ*", "ĠCreates", "Ġa", "Ġnew", "Ġ`", "Truncate", "Filter", "`", "Ġthat", "Ġwill", "Ġtruncate", "Ġall", "Ġcoordinates", "Ġto", "Ġthe", "Ċ", "ĠĠ", "Ġ*", "Ġgiven", "Ġnumber", "Ġof", "Ġdecimal", "Ġplaces", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "Ġ", "ĠTruncate", "Filter", "(", "int", "Ġdecimals", ")", "Ġ:", "Ġfactor", "_(", "gen", "Factor", "(", "decimals", "))", "Ġ{}", "Ċ", "Ġ", "Ġ/**", "Ċ", "ĠĠ", "Ġ*", "ĠImplementation", "Ġof", "Ġthe", "Ġ`", "Point", "Filter", "`", "Ġinterface", ".", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "Ġ", "Ġbool", "Ġapply", "(", "Point", "T", "&", "Ġpt", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġpt", ".", "x", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "pt", ".", "x", "Ġ*", "Ġfactor", "_)", "Ġ/", "Ġstatic", "_", "cast", "<", "double", ">(", "factor", "_);", "Ċ", "ĠĠĠ", "Ġpt", ".", "y", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "pt", ".", "y", "Ġ*", "Ġfactor", "_)", "Ġ/", "Ġstatic", "_", "cast", "<", "double", ">(", "factor", "_);", "Ċ", "ĠĠĠ", "Ġpt", ".", "z", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "pt", ".", "z", "Ġ*", "Ġfactor", "_)", "Ġ/", "Ġstatic", "_", "cast", "<", "double", ">(", "factor", "_);", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġprepare", "Next", "()", "Ġ{}", "Ċ", "private", ":", "Ċ", "Ġ", "Ġint", "Ġconst", "Ġfactor", "_;", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::744", "code": "/*\n * Copyright (C) 2008-2018 TrinityCore <https://www.trinitycore.org/>\n * Copyright (C) 2005-2010 MaNGOS <http://getmangos.com/>\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation; either version 2 of the License, or (at your\n * option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"MMapFactory.h\"\n#include \"Config.h\"\n\nnamespace MMAP\n{\n    // ######################## MMapFactory ########################\n    // our global singleton copy\n    MMapManager* g_MMapManager = NULL;\n\n    MMapManager* MMapFactory::createOrGetMMapManager()\n    {\n        if (g_MMapManager == NULL)\n            g_MMapManager = new MMapManager();\n\n        return g_MMapManager;\n    }\n\n    void MMapFactory::clear()\n    {\n        if (g_MMapManager)\n        {\n            delete g_MMapManager;\n            g_MMapManager = NULL;\n        }\n    }\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2018", "ĠTr", "inity", "Core", "Ġ<", "https", "://", "www", ".", "tr", "inity", "core", ".", "org", "/>", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "-", "2010", "ĠM", "aN", "G", "OS", "Ġ<", "http", "://", "get", "m", "ang", "os", ".", "com", "/>", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ċ", "Ġ*", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "Ġ*", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ċ", "Ġ*", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "Ċ", "Ġ*", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "Ċ", "Ġ*", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ċ", "Ġ*", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "Ġ*", "Ġwith", "Ġthis", "Ġprogram", ".", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "M", "Map", "Factory", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Config", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠM", "MAP", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġ#", "################", "####", "###", "ĠM", "Map", "Factory", "Ġ#", "################", "####", "###", "Ċ", "ĠĠĠ", "Ġ//", "Ġour", "Ġglobal", "Ġsingleton", "Ġcopy", "Ċ", "ĠĠĠ", "ĠM", "Map", "Manager", "*", "Ġg", "_", "M", "Map", "Manager", "Ġ=", "ĠNULL", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠM", "Map", "Manager", "*", "ĠM", "Map", "Factory", "::", "create", "Or", "Get", "M", "Map", "Manager", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "g", "_", "M", "Map", "Manager", "Ġ==", "ĠNULL", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġg", "_", "M", "Map", "Manager", "Ġ=", "Ġnew", "ĠM", "Map", "Manager", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġg", "_", "M", "Map", "Manager", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠM", "Map", "Factory", "::", "clear", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "g", "_", "M", "Map", "Manager", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdelete", "Ġg", "_", "M", "Map", "Manager", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġg", "_", "M", "Map", "Manager", "Ġ=", "ĠNULL", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::745", "code": "/*  VideoClipArtist.H\n *\n *  Copyright (C) 2006 Richard Spindler <richard.spindler AT gmail.com>\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n */\n\n#ifndef _VIDEO_CLIP_ARTIST_H_\n#define _VIDEO_CLIP_ARTIST_H_\n\n#include \"IClipArtist.H\"\n\nnamespace nle\n{\nclass VideoClip;\n\nclass VideoClipArtist : public IClipArtist\n{\n\tpublic:\n\t\tVideoClipArtist( VideoClip* clip );\n\t\t~VideoClipArtist();\n\t\tvoid render( Rect& rect, int64_t start, int64_t stop ); \n\tprivate:\n\t\tVideoClip* m_clip;\n\t\tIClipArtist *m_audioClipArtist;\n};\n\n} /* namespace nle */\n\n#endif /* _VIDEO_CLIP_ARTIST_H_ */\n\n", "code_tokens": ["Ġ/*", "Ġ", "ĠVideo", "Clip", "Artist", ".", "H", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "ĠRich", "ard", "ĠSp", "ind", "ler", "Ġ<", "rich", "ard", ".", "sp", "ind", "ler", "ĠAT", "Ġg", "mail", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "Ġ_", "VIDEO", "_", "CLIP", "_", "AR", "TI", "ST", "_", "H", "_", "Ċ", "#", "define", "Ġ_", "VIDEO", "_", "CLIP", "_", "AR", "TI", "ST", "_", "H", "_", "Ċ", "Ċ", "#", "include", "Ġ\"", "IC", "lip", "Artist", ".", "H", "\"", "Ċ", "Ċ", "namespace", "Ġn", "le", "Ċ", "{", "Ċ", "class", "ĠVideo", "Clip", ";", "Ċ", "Ċ", "class", "ĠVideo", "Clip", "Artist", "Ġ:", "Ġpublic", "ĠI", "Clip", "Artist", "Ċ", "{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "Video", "Clip", "Artist", "(", "ĠVideo", "Clip", "*", "Ġclip", "Ġ);", "Ċ", "ĉ", "ĉ", "~", "Video", "Clip", "Artist", "();", "Ċ", "ĉ", "ĉ", "void", "Ġrender", "(", "ĠRect", "&", "Ġrect", ",", "Ġint", "64", "_", "t", "Ġstart", ",", "Ġint", "64", "_", "t", "Ġstop", "Ġ);", "ĠĊ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "Video", "Clip", "*", "Ġm", "_", "clip", ";", "Ċ", "ĉ", "ĉ", "IC", "lip", "Artist", "Ġ*", "m", "_", "audio", "Clip", "Artist", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġn", "le", "Ġ*/", "Ċ", "Ċ", "#", "endif", "Ġ/*", "Ġ_", "VIDEO", "_", "CLIP", "_", "AR", "TI", "ST", "_", "H", "_", "Ġ*/", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::746", "code": "/*\n   Copyright (C) 2009 - 2017 by Yurii Chernyi <terraninfo@terraninfo.net>\n   Part of the Battle for Wesnoth Project http://www.wesnoth.org/\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 2 of the License, or\n   (at your option) any later version.\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY.\n\n   See the COPYING file for more details.\n*/\n\n/**\n * FAI AI Support engine - creating specific ai components from config\n * @file\n */\n\n#pragma once\n\n#include \"ai/composite/engine.hpp\"\n#include \"ai/default/contexts.hpp\"\n\n//============================================================================\nnamespace ai {\n\nclass formula_ai;\n\nclass engine_fai : public engine {\npublic:\n\tengine_fai( readonly_context &context, const config &cfg );\n\n\tvirtual ~engine_fai();\n\n\tvirtual void do_parse_candidate_action_from_config( rca_context &context, const config &cfg, std::back_insert_iterator<std::vector< candidate_action_ptr > > b );\n\n\tvirtual void do_parse_stage_from_config( ai_context &context, const config &cfg, std::back_insert_iterator<std::vector< stage_ptr > > b );\n\n\tvirtual std::string evaluate(const std::string &str);\n\n\tvirtual config to_config() const;\n\n\tvirtual void set_ai_context(ai_context *context);\nprivate:\n\tstd::shared_ptr<formula_ai> formula_ai_;\n};\n\n} //end of namespace ai\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2009", "Ġ-", "Ġ2017", "Ġby", "ĠY", "uri", "i", "ĠC", "her", "ny", "i", "Ġ<", "t", "err", "an", "info", "@", "t", "err", "an", "info", ".", "net", ">", "Ċ", "ĠĠ", "ĠPart", "Ġof", "Ġthe", "ĠBattle", "Ġfor", "ĠW", "es", "no", "th", "ĠProject", "Ġhttp", "://", "www", ".", "w", "es", "no", "th", ".", "org", "/", "Ċ", "Ċ", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ".", "Ċ", "Ċ", "ĠĠ", "ĠSee", "Ġthe", "ĠCOPY", "ING", "Ġfile", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "*/", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠF", "AI", "ĠAI", "ĠSupport", "Ġengine", "Ġ-", "Ġcreating", "Ġspecific", "Ġai", "Ġcomponents", "Ġfrom", "Ġconfig", "Ċ", "Ġ*", "Ġ@", "file", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "ai", "/", "composite", "/", "engine", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "ai", "/", "default", "/", "contexts", ".", "hpp", "\"", "Ċ", "Ċ", "//================================================================", "============", "Ċ", "namespace", "Ġai", "Ġ{", "Ċ", "Ċ", "class", "Ġformula", "_", "ai", ";", "Ċ", "Ċ", "class", "Ġengine", "_", "fa", "i", "Ġ:", "Ġpublic", "Ġengine", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "engine", "_", "fa", "i", "(", "Ġreadonly", "_", "context", "Ġ&", "context", ",", "Ġconst", "Ġconfig", "Ġ&", "cfg", "Ġ);", "Ċ", "Ċ", "ĉ", "virtual", "Ġ~", "engine", "_", "fa", "i", "();", "Ċ", "Ċ", "ĉ", "virtual", "Ġvoid", "Ġdo", "_", "parse", "_", "candidate", "_", "action", "_", "from", "_", "config", "(", "Ġr", "ca", "_", "context", "Ġ&", "context", ",", "Ġconst", "Ġconfig", "Ġ&", "cfg", ",", "Ġstd", "::", "back", "_", "insert", "_", "iterator", "<", "std", "::", "vector", "<", "Ġcandidate", "_", "action", "_", "ptr", "Ġ>", "Ġ>", "Ġb", "Ġ);", "Ċ", "Ċ", "ĉ", "virtual", "Ġvoid", "Ġdo", "_", "parse", "_", "stage", "_", "from", "_", "config", "(", "Ġai", "_", "context", "Ġ&", "context", ",", "Ġconst", "Ġconfig", "Ġ&", "cfg", ",", "Ġstd", "::", "back", "_", "insert", "_", "iterator", "<", "std", "::", "vector", "<", "Ġstage", "_", "ptr", "Ġ>", "Ġ>", "Ġb", "Ġ);", "Ċ", "Ċ", "ĉ", "virtual", "Ġstd", "::", "string", "Ġevaluate", "(", "const", "Ġstd", "::", "string", "Ġ&", "str", ");", "Ċ", "Ċ", "ĉ", "virtual", "Ġconfig", "Ġto", "_", "config", "()", "Ġconst", ";", "Ċ", "Ċ", "ĉ", "virtual", "Ġvoid", "Ġset", "_", "ai", "_", "context", "(", "ai", "_", "context", "Ġ*", "context", ");", "Ċ", "private", ":", "Ċ", "ĉ", "std", "::", "shared", "_", "ptr", "<", "formula", "_", "ai", ">", "Ġformula", "_", "ai", "_;", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "end", "Ġof", "Ġnamespace", "Ġai", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::747", "code": "// RUN: %clang_cc1 -fsyntax-only -verify -std=c++0x %s\nnamespace Constructor {\nstruct A {\n  A(int);\n};\n\nstruct B {\n  explicit B(int);\n};\n\nB::B(int) { }\n\nstruct C {\n  void f(const A&);\n  void f(const B&);\n};\n\nvoid f(C c) {\n  c.f(10);\n}\n}\n\nnamespace Conversion {\n  struct A {\n    operator int();\n    explicit operator bool();\n  };\n\n  A::operator bool() { return false; } \n\n  struct B {\n    void f(int);\n    void f(bool);\n  };\n\n  void f(A a, B b) {\n    b.f(a);\n  }\n}\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "verify", "Ġ-", "std", "=", "c", "++", "0", "x", "Ġ%", "s", "Ċ", "namespace", "ĠConstructor", "Ġ{", "Ċ", "struct", "ĠA", "Ġ{", "Ċ", "Ġ", "ĠA", "(", "int", ");", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠB", "Ġ{", "Ċ", "Ġ", "Ġexplicit", "ĠB", "(", "int", ");", "Ċ", "};", "Ċ", "Ċ", "B", "::", "B", "(", "int", ")", "Ġ{", "Ġ}", "Ċ", "Ċ", "struct", "ĠC", "Ġ{", "Ċ", "Ġ", "Ġvoid", "Ġf", "(", "const", "ĠA", "&", ");", "Ċ", "Ġ", "Ġvoid", "Ġf", "(", "const", "ĠB", "&", ");", "Ċ", "};", "Ċ", "Ċ", "void", "Ġf", "(", "C", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġc", ".", "f", "(", "10", ");", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "namespace", "ĠConversion", "Ġ{", "Ċ", "Ġ", "Ġstruct", "ĠA", "Ġ{", "Ċ", "ĠĠĠ", "Ġoperator", "Ġint", "();", "Ċ", "ĠĠĠ", "Ġexplicit", "Ġoperator", "Ġbool", "();", "Ċ", "Ġ", "Ġ};", "Ċ", "Ċ", "Ġ", "ĠA", "::", "operator", "Ġbool", "()", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "ĠĊ", "Ċ", "Ġ", "Ġstruct", "ĠB", "Ġ{", "Ċ", "ĠĠĠ", "Ġvoid", "Ġf", "(", "int", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġf", "(", "bool", ");", "Ċ", "Ġ", "Ġ};", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġf", "(", "A", "Ġa", ",", "ĠB", "Ġb", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġb", ".", "f", "(", "a", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::748", "code": "#ifndef QT_SETTINGSPORTS_HPP\n#define QT_SETTINGSPORTS_HPP\n\n#include <QWidget>\n\nnamespace Ui {\nclass SettingsPorts;\n}\n\nclass SettingsPorts : public QWidget\n{\n    Q_OBJECT\n\npublic:\n    explicit SettingsPorts(QWidget *parent = nullptr);\n    ~SettingsPorts();\n\n    void save();\nprivate slots:\n    void on_checkBoxParallel3_stateChanged(int arg1);\n    void on_checkBoxParallel2_stateChanged(int arg1);\n    void on_checkBoxParallel1_stateChanged(int arg1);\n\n    void on_checkBoxParallel4_stateChanged(int arg1);\n\nprivate:\n    Ui::SettingsPorts *ui;\n};\n\n#endif // QT_SETTINGSPORTS_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠQT", "_", "SETTING", "SPORT", "S", "_", "HP", "P", "Ċ", "#", "define", "ĠQT", "_", "SETTING", "SPORT", "S", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "QWidget", ">", "Ċ", "Ċ", "namespace", "ĠUi", "Ġ{", "Ċ", "class", "ĠSettings", "Ports", ";", "Ċ", "}", "Ċ", "Ċ", "class", "ĠSettings", "Ports", "Ġ:", "Ġpublic", "ĠQWidget", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġexplicit", "ĠSettings", "Ports", "(", "QWidget", "Ġ*", "parent", "Ġ=", "Ġnullptr", ");", "Ċ", "ĠĠĠ", "Ġ~", "Settings", "Ports", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġsave", "();", "Ċ", "private", "Ġslots", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġon", "_", "checkBox", "Parallel", "3", "_", "state", "Changed", "(", "int", "Ġarg", "1", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġon", "_", "checkBox", "Parallel", "2", "_", "state", "Changed", "(", "int", "Ġarg", "1", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġon", "_", "checkBox", "Parallel", "1", "_", "state", "Changed", "(", "int", "Ġarg", "1", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġon", "_", "checkBox", "Parallel", "4", "_", "state", "Changed", "(", "int", "Ġarg", "1", ");", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "ĠUi", "::", "Settings", "Ports", "Ġ*", "ui", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠQT", "_", "SETTING", "SPORT", "S", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::749", "code": "#include \"dattod/flock.h\"\n\n#include <fstream>\n\n#include <sys/types.h>\n#include <unistd.h>\n\n#include <gtest/gtest.h>\n#include <glog/logging.h>\n\n#include <stdexcept>\n\nnamespace {\n\nusing ::datto_linux_client::Flock;\n\nTEST(FlockTest, Constructor) {\n  Flock lock(\"/tmp/test_lock\");\n}\n\nTEST(FlockTest, FailsOnBadPath) {\n  try {\n    Flock lock(\"/dir_doesnt_exist/test_lock\");\n    FAIL() << \"Locking on bad file didn't fail\";\n  } catch (const std::runtime_error &e) {\n    // good\n  }\n}\n\nTEST(FlockTest, FailsOnAlreadyLocked) {\n  Flock lock1(\"/tmp/test_lock\");\n  try {\n    Flock lock2(\"/tmp/test_lock\");\n    FAIL() << \"Locking on locked file didn't fail\";\n  } catch (const std::runtime_error &e) {\n    // good\n  }\n}\n\nTEST(FlockTest, ReleasesInDestructor) {\n  {\n    Flock lock1(\"/tmp/test_lock\");\n  }\n  Flock lock2(\"/tmp/test_lock\");\n}\n\nTEST(FlockTest, WritePID) {\n  Flock lock(\"/tmp/test_lock\");\n  lock.WritePid();\n  std::ifstream lock_ifs(\"/tmp/test_lock\");\n  pid_t file_pid;\n\n  lock_ifs >> file_pid;\n\n  EXPECT_EQ(file_pid, getpid());\n}\n\n} // namespace\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "dat", "tod", "/", "flock", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "sys", "/", "types", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "glog", "/", "logging", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "st", "dex", "cept", ">", "Ċ", "Ċ", "namespace", "Ġ{", "Ċ", "Ċ", "using", "Ġ::", "dat", "to", "_", "linux", "_", "client", "::", "F", "lock", ";", "Ċ", "Ċ", "TEST", "(", "F", "lock", "Test", ",", "ĠConstructor", ")", "Ġ{", "Ċ", "Ġ", "ĠF", "lock", "Ġlock", "(\"/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "}", "Ċ", "Ċ", "TEST", "(", "F", "lock", "Test", ",", "ĠF", "ails", "On", "Bad", "Path", ")", "Ġ{", "Ċ", "Ġ", "Ġtry", "Ġ{", "Ċ", "ĠĠĠ", "ĠF", "lock", "Ġlock", "(\"/", "dir", "_", "does", "nt", "_", "exist", "/", "test", "_", "lock", "\");", "Ċ", "ĠĠĠ", "ĠFAIL", "()", "Ġ<<", "Ġ\"", "Locking", "Ġon", "Ġbad", "Ġfile", "Ġdidn", "'t", "Ġfail", "\";", "Ċ", "Ġ", "Ġ}", "Ġcatch", "Ġ(", "const", "Ġstd", "::", "runtime", "_", "error", "Ġ&", "e", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "Ġgood", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "TEST", "(", "F", "lock", "Test", ",", "ĠF", "ails", "On", "Already", "Locked", ")", "Ġ{", "Ċ", "Ġ", "ĠF", "lock", "Ġlock", "1", "(\"/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġtry", "Ġ{", "Ċ", "ĠĠĠ", "ĠF", "lock", "Ġlock", "2", "(\"/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "ĠĠĠ", "ĠFAIL", "()", "Ġ<<", "Ġ\"", "Locking", "Ġon", "Ġlocked", "Ġfile", "Ġdidn", "'t", "Ġfail", "\";", "Ċ", "Ġ", "Ġ}", "Ġcatch", "Ġ(", "const", "Ġstd", "::", "runtime", "_", "error", "Ġ&", "e", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "Ġgood", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "TEST", "(", "F", "lock", "Test", ",", "ĠRelease", "sIn", "Destructor", ")", "Ġ{", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠF", "lock", "Ġlock", "1", "(\"/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "ĠF", "lock", "Ġlock", "2", "(\"/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "}", "Ċ", "Ċ", "TEST", "(", "F", "lock", "Test", ",", "ĠWrite", "PID", ")", "Ġ{", "Ċ", "Ġ", "ĠF", "lock", "Ġlock", "(\"/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġlock", ".", "Write", "Pid", "();", "Ċ", "Ġ", "Ġstd", "::", "ifstream", "Ġlock", "_", "ifs", "(\"/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġpid", "_", "t", "Ġfile", "_", "pid", ";", "Ċ", "Ċ", "Ġ", "Ġlock", "_", "ifs", "Ġ>>", "Ġfile", "_", "pid", ";", "Ċ", "Ċ", "Ġ", "ĠEXPECT", "_", "EQ", "(", "file", "_", "pid", ",", "Ġget", "pid", "());", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::750", "code": "// out_packet.cpp\n#include \"network/out_packet.h\"\n\nnamespace nan2 {\n\n  int OutPacket::BROADCAST = 1;\n  int OutPacket::UNICAST = 2;\n\n  OutPacket::OutPacket(int seq, const std::vector<int8_t>& data, int type, uint64_t receiver) :\n    seq_(seq),\n    type_(type),\n    receiver_(receiver) {\n    data_.resize(data.size());\n    std::copy(data.begin(), data.end(), data_.begin());\n  }\n\n  int OutPacket::seq() const {\n    return seq_;\n  }\n\n  const std::vector<char>& OutPacket::data() const {\n    return data_;\n  }\n\n  int OutPacket::type() const {\n    return type_;\n  }\n\n  uint64_t OutPacket::receiver() const {\n    return receiver_;\n  }\n}", "code_tokens": ["Ġ//", "Ġout", "_", "packet", ".", "cpp", "Ċ", "#", "include", "Ġ\"", "network", "/", "out", "_", "packet", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġnan", "2", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġint", "ĠOut", "Packet", "::", "BROADCAST", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġint", "ĠOut", "Packet", "::", "UN", "ICAST", "Ġ=", "Ġ2", ";", "Ċ", "Ċ", "Ġ", "ĠOut", "Packet", "::", "Out", "Packet", "(", "int", "Ġseq", ",", "Ġconst", "Ġstd", "::", "vector", "<", "int", "8", "_", "t", ">&", "Ġdata", ",", "Ġint", "Ġtype", ",", "Ġuint", "64", "_", "t", "Ġreceiver", ")", "Ġ:", "Ċ", "ĠĠĠ", "Ġseq", "_(", "seq", "),", "Ċ", "ĠĠĠ", "Ġtype", "_(", "type", "),", "Ċ", "ĠĠĠ", "Ġreceiver", "_(", "receiver", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġdata", "_.", "resize", "(", "data", ".", "size", "());", "Ċ", "ĠĠĠ", "Ġstd", "::", "copy", "(", "data", ".", "begin", "(),", "Ġdata", ".", "end", "(),", "Ġdata", "_.", "begin", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġint", "ĠOut", "Packet", "::", "seq", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġseq", "_;", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "vector", "<", "char", ">&", "ĠOut", "Packet", "::", "data", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġdata", "_;", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġint", "ĠOut", "Packet", "::", "type", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtype", "_;", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġuint", "64", "_", "t", "ĠOut", "Packet", "::", "receiver", "()", "Ġconst", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġreceiver", "_;", "Ċ", "Ġ", "Ġ}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::751", "code": "#include <stdlib.h>\n#include <string.h>\n#include <stdio.h>\n\nextern \"C\"\n{\nextern int CP01();\n\nint main()\n{\n    CP01();\n    return 0;\n}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ċ", "{", "Ċ", "extern", "Ġint", "ĠCP", "01", "();", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠCP", "01", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::752", "code": "class CfgFunctions {\n    class uksf_operation {\n        class operation {\n            file = \"functions\\operation\";\n            class preInit { preInit = 1; };\n            class postInit { postInit = 1; };\n            class dummy {};\n        };\n    };\n};\n", "code_tokens": ["Ġclass", "ĠC", "fg", "Functions", "Ġ{", "Ċ", "ĠĠĠ", "Ġclass", "Ġu", "ks", "f", "_", "operation", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġclass", "Ġoperation", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfile", "Ġ=", "Ġ\"", "functions", "\\", "operation", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġclass", "Ġpre", "Init", "Ġ{", "Ġpre", "Init", "Ġ=", "Ġ1", ";", "Ġ};", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġclass", "Ġpost", "Init", "Ġ{", "Ġpost", "Init", "Ġ=", "Ġ1", ";", "Ġ};", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġclass", "Ġdummy", "Ġ{};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::753", "code": "/*******************************************************************************\n *      file name: subsets.cpp                                               \n *         author: Hui Chen. (c) 2019                             \n *           mail: chenhui13@baidu.com                                        \n *   created time: 2019/03/25-09:56:29                              \n *  modified time: 2019/03/25-09:56:29                              \n *******************************************************************************/\n#include <iostream>\n#include <vector>\nusing namespace std;\nclass Solution {\npublic:\n    vector<vector<int>> subsets(vector<int>& nums) {\n\t\tvector<vector<int>> res;\n\t\tint size = nums.size();\n\t\tvector<int> vec;\n\t\tres.push_back(vec);\n\t\tif (size == 0) return res;\n\t\tvec.push_back(nums[0]);\n\t\tres.push_back(vec);\n\t\tfor (int i = 1; i < size; i++)\n\t\t{\n            int n = res.size();\n\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tvector<int> v = res[j]; \n\t\t\t\tv.push_back(nums[i]);\n\t\t\t\tres.push_back(v);\n\t\t\t}\n\t\t}\n\t\treturn res;\n    }\n};\nint main()\n{}\n", "code_tokens": ["Ġ/", "************************************************************************", "*******", "Ċ", "Ġ*", "ĠĠĠĠĠ", "Ġfile", "Ġname", ":", "Ġsub", "sets", ".", "cpp", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠ", "Ġauthor", ":", "ĠH", "ui", "ĠCh", "en", ".", "Ġ(", "c", ")", "Ġ201", "9", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠ", "Ġmail", ":", "Ġch", "en", "h", "ui", "13", "@", "baidu", ".", "com", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠĠĠĠĠĠĠĠĊ", "Ġ*", "ĠĠ", "Ġcreated", "Ġtime", ":", "Ġ201", "9", "/", "03", "/", "25", "-", "09", ":", "56", ":", "29", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ċ", "Ġ*", "Ġ", "Ġmodified", "Ġtime", ":", "Ġ201", "9", "/", "03", "/", "25", "-", "09", ":", "56", ":", "29", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ċ", "Ġ*************************************************************************", "******/", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvector", "<", "vector", "<", "int", ">>", "Ġsub", "sets", "(", "vector", "<", "int", ">&", "Ġnums", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "vector", "<", "vector", "<", "int", ">>", "Ġres", ";", "Ċ", "ĉ", "ĉ", "int", "Ġsize", "Ġ=", "Ġnums", ".", "size", "();", "Ċ", "ĉ", "ĉ", "vector", "<", "int", ">", "Ġvec", ";", "Ċ", "ĉ", "ĉ", "res", ".", "push", "_", "back", "(", "vec", ");", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "size", "Ġ==", "Ġ0", ")", "Ġreturn", "Ġres", ";", "Ċ", "ĉ", "ĉ", "vec", ".", "push", "_", "back", "(", "nums", "[", "0", "]);", "Ċ", "ĉ", "ĉ", "res", ".", "push", "_", "back", "(", "vec", ");", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġsize", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġn", "Ġ=", "Ġres", ".", "size", "();", "Ċ", "ĉĉ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġj", "++)", "Ċ", "ĉĉ", "ĉ", "{", "Ċ", "ĉĉĉ", "ĉ", "vector", "<", "int", ">", "Ġv", "Ġ=", "Ġres", "[", "j", "];", "ĠĊ", "ĉĉĉ", "ĉ", "v", ".", "push", "_", "back", "(", "nums", "[", "i", "]);", "Ċ", "ĉĉĉ", "ĉ", "res", ".", "push", "_", "back", "(", "v", ");", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "return", "Ġres", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "int", "Ġmain", "()", "Ċ", "{}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::754", "code": "/*==============================================================================\n * FILE:\t   testExp.cpp\n * OVERVIEW:   Command line test of the Exp class\n *============================================================================*/\n/*\n * $Revision$\n * 15 Jul 02 - Mike: Created from testDbase\n * 29 Jul 03 - Mike: Created from testAll\n*/\n\n\n#include \"cppunit/TextTestResult.h\"\n#include \"cppunit/TestSuite.h\"\n\n#include \"ExpTest.h\"\n\n#include <sstream>\n#include <iostream>\n\nint main(int argc, char** argv)\n{\n    CppUnit::TestSuite suite;\n\n    ExpTest\t expt(\"ExpTest\");\n\n    expt.registerTests(&suite);\n\n    CppUnit::TextTestResult res;\n\n    suite.run( &res );\n    std::cout << res << std::endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "================================================================", "==============", "Ċ", "Ġ*", "ĠFILE", ":", "ĉĠĠ", "Ġtest", "Exp", ".", "cpp", "Ċ", "Ġ*", "ĠOVER", "VIEW", ":", "ĠĠ", "ĠCommand", "Ġline", "Ġtest", "Ġof", "Ġthe", "ĠExp", "Ġclass", "Ċ", "Ġ*", "================================================================", "============", "*/", "Ċ", "/*", "Ċ", "Ġ*", "Ġ$", "Revision", "$", "Ċ", "Ġ*", "Ġ15", "ĠJul", "Ġ02", "Ġ-", "ĠM", "ike", ":", "ĠCreated", "Ġfrom", "Ġtest", "D", "base", "Ċ", "Ġ*", "Ġ29", "ĠJul", "Ġ03", "Ġ-", "ĠM", "ike", ":", "ĠCreated", "Ġfrom", "Ġtest", "All", "Ċ", "*/", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "cpp", "unit", "/", "Text", "TestResult", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "cpp", "unit", "/", "TestSuite", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Exp", "Test", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠCpp", "Unit", "::", "TestSuite", "Ġsuite", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠExp", "Test", "ĉ", "Ġex", "pt", "(\"", "Exp", "Test", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġex", "pt", ".", "register", "Tests", "(&", "suite", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠCpp", "Unit", "::", "Text", "TestResult", "Ġres", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġsuite", ".", "run", "(", "Ġ&", "res", "Ġ);", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġres", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::755", "code": "#include <iostream>\n\n#include \"activate/ActivationFunction.h\"\n\nusing namespace std;\n\nActivationFunction *ActivationFunction::fromName(std::string name) {\n    if(name == \"tanh\") {\n        return new TanhActivation();\n    } else if(name == \"scaledtanh\") {\n        return new ScaledTanhActivation();\n    } else if(name == \"sigmoid\") {\n        return new SigmoidActivation();\n    } else if(name == \"linear\") {\n        return new LinearActivation();\n    } else if(name == \"relu\") {\n        return new ReluActivation();\n    } else {\n        throw std::runtime_error(\"activation \" + name + \" not known\");\n    }\n}\n\nostream &operator<<(ostream &os, LinearActivation const&act) {\n    os << \"LinearActivation{}\";\n    return os;\n}\n\nostream &operator<<(ostream &os, TanhActivation const&act) {\n    os << \"TanhActivation{}\";\n    return os;\n}\n\nostream &operator<<(ostream &os, ScaledTanhActivation const&act) {\n    os << \"ScaledTanhActivation{}\";\n    return os;\n}\n\nostream &operator<<(ostream &os, ReluActivation const&act) {\n    os << \"ReluActivation{}\";\n    return os;\n}\n\nostream &operator<<(ostream &os, SigmoidActivation const&act) {\n    os << \"SigmoidActivation{}\";\n    return os;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "activate", "/", "Activation", "Function", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Activation", "Function", "Ġ*", "Activation", "Function", "::", "from", "Name", "(", "std", "::", "string", "Ġname", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "(", "name", "Ġ==", "Ġ\"", "tanh", "\")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠT", "an", "h", "Activation", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġif", "(", "name", "Ġ==", "Ġ\"", "scaled", "tanh", "\")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠScal", "ed", "Tan", "h", "Activation", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġif", "(", "name", "Ġ==", "Ġ\"", "sigmoid", "\")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠSig", "moid", "Activation", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġif", "(", "name", "Ġ==", "Ġ\"", "linear", "\")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠLinear", "Activation", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġif", "(", "name", "Ġ==", "Ġ\"", "relu", "\")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠRel", "u", "Activation", "();", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "activation", "Ġ\"", "Ġ+", "Ġname", "Ġ+", "Ġ\"", "Ġnot", "Ġknown", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "ostream", "Ġ&", "operator", "<<(", "ostream", "Ġ&", "os", ",", "ĠLinear", "Activation", "Ġconst", "&", "act", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġos", "Ġ<<", "Ġ\"", "Linear", "Activation", "{}", "\";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ", "ostream", "Ġ&", "operator", "<<(", "ostream", "Ġ&", "os", ",", "ĠT", "an", "h", "Activation", "Ġconst", "&", "act", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġos", "Ġ<<", "Ġ\"", "Tan", "h", "Activation", "{}", "\";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ", "ostream", "Ġ&", "operator", "<<(", "ostream", "Ġ&", "os", ",", "ĠScal", "ed", "Tan", "h", "Activation", "Ġconst", "&", "act", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġos", "Ġ<<", "Ġ\"", "Scaled", "Tan", "h", "Activation", "{}", "\";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ", "ostream", "Ġ&", "operator", "<<(", "ostream", "Ġ&", "os", ",", "ĠRel", "u", "Activation", "Ġconst", "&", "act", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġos", "Ġ<<", "Ġ\"", "Rel", "u", "Activation", "{}", "\";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ", "ostream", "Ġ&", "operator", "<<(", "ostream", "Ġ&", "os", ",", "ĠSig", "moid", "Activation", "Ġconst", "&", "act", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġos", "Ġ<<", "Ġ\"", "Sig", "moid", "Activation", "{}", "\";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::756", "code": "// RUN: %clang_cc1 -fsyntax-only -fcolor-diagnostics %s 2>&1 | FileCheck %s\n// RUN: %clang_cc1 -fsyntax-only -fcolor-diagnostics -fdiagnostics-show-template-tree %s 2>&1 | FileCheck %s -check-prefix=TREE\n// REQUIRES: ansi-escape-sequences\ntemplate<typename> struct foo {};\nvoid func(foo<int>);\nint main() {\n  func(foo<double>());\n}\n// CHECK: {{.*}}candidate function not viable: no known conversion from 'foo<{{.}}[0;1;36mdouble{{.}}[0m>' to 'foo<{{.}}[0;1;36mint{{.}}[0m>' for 1st argument{{.}}[0m\n// TREE: candidate function not viable: no known conversion from argument type to parameter type for 1st argument\n// TREE:  foo<\n// TREE:    [{{.}}[0;1;36mdouble{{.}}[0m != {{.}}[0;1;36mint{{.}}[0m]>{{.}}[0m\n\nfoo<int> A;\nfoo<double> &B = A;\n// CHECK: {{.*}}non-const lvalue reference to type 'foo<{{.}}[0;1;36mdouble{{.}}[0m{{.}}[1m>' cannot bind to a value of unrelated type 'foo<{{.}}[0;1;36mint{{.}}[0m{{.}}[1m>'{{.}}[0m\n// TREE: non-const lvalue reference cannot bind to a value of unrelated type\n// TREE:   foo<\n// TREE:     [{{.}}[0;1;36mdouble{{.}}[0m{{.}}[1m != {{.}}[0;1;36mint{{.}}[0m{{.}}[1m]>{{.}}[0m\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "f", "color", "-", "diagnostics", "Ġ%", "s", "Ġ2", ">&", "1", "Ġ|", "ĠFile", "Check", "Ġ%", "s", "Ċ", "//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fs", "yntax", "-", "only", "Ġ-", "f", "color", "-", "diagnostics", "Ġ-", "fd", "iagnostics", "-", "show", "-", "template", "-", "tree", "Ġ%", "s", "Ġ2", ">&", "1", "Ġ|", "ĠFile", "Check", "Ġ%", "s", "Ġ-", "check", "-", "prefix", "=", "TREE", "Ċ", "//", "ĠREQUI", "RES", ":", "Ġansi", "-", "escape", "-", "sequences", "Ċ", "template", "<", "typename", ">", "Ġstruct", "Ġfoo", "Ġ{};", "Ċ", "void", "Ġfunc", "(", "foo", "<", "int", ">);", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġfunc", "(", "foo", "<", "double", ">());", "Ċ", "}", "Ċ", "//", "ĠCHECK", ":", "Ġ{{.*}}", "candidate", "Ġfunction", "Ġnot", "Ġv", "iable", ":", "Ġno", "Ġknown", "Ġconversion", "Ġfrom", "Ġ'", "foo", "<", "{{", ".", "}}", "[", "0", ";", "1", ";", "36", "md", "o", "uble", "{{", ".", "}}", "[", "0", "m", ">'", "Ġto", "Ġ'", "foo", "<", "{{", ".", "}}", "[", "0", ";", "1", ";", "36", "m", "int", "{{", ".", "}}", "[", "0", "m", ">'", "Ġfor", "Ġ1", "st", "Ġargument", "{{", ".", "}}", "[", "0", "m", "Ċ", "//", "ĠTREE", ":", "Ġcandidate", "Ġfunction", "Ġnot", "Ġv", "iable", ":", "Ġno", "Ġknown", "Ġconversion", "Ġfrom", "Ġargument", "Ġtype", "Ġto", "Ġparameter", "Ġtype", "Ġfor", "Ġ1", "st", "Ġargument", "Ċ", "//", "ĠTREE", ":", "Ġ", "Ġfoo", "<", "Ċ", "//", "ĠTREE", ":", "ĠĠĠ", "Ġ[", "{{", ".", "}}", "[", "0", ";", "1", ";", "36", "md", "o", "uble", "{{", ".", "}}", "[", "0", "m", "Ġ!=", "Ġ{{", ".", "}}", "[", "0", ";", "1", ";", "36", "m", "int", "{{", ".", "}}", "[", "0", "m", "]>", "{{", ".", "}}", "[", "0", "m", "Ċ", "Ċ", "foo", "<", "int", ">", "ĠA", ";", "Ċ", "foo", "<", "double", ">", "Ġ&", "B", "Ġ=", "ĠA", ";", "Ċ", "//", "ĠCHECK", ":", "Ġ{{.*}}", "non", "-", "const", "Ġlvalue", "Ġreference", "Ġto", "Ġtype", "Ġ'", "foo", "<", "{{", ".", "}}", "[", "0", ";", "1", ";", "36", "md", "o", "uble", "{{", ".", "}}", "[", "0", "m", "{{", ".", "}}", "[", "1", "m", ">'", "Ġcannot", "Ġbind", "Ġto", "Ġa", "Ġvalue", "Ġof", "Ġun", "related", "Ġtype", "Ġ'", "foo", "<", "{{", ".", "}}", "[", "0", ";", "1", ";", "36", "m", "int", "{{", ".", "}}", "[", "0", "m", "{{", ".", "}}", "[", "1", "m", ">'", "{{", ".", "}}", "[", "0", "m", "Ċ", "//", "ĠTREE", ":", "Ġnon", "-", "const", "Ġlvalue", "Ġreference", "Ġcannot", "Ġbind", "Ġto", "Ġa", "Ġvalue", "Ġof", "Ġun", "related", "Ġtype", "Ċ", "//", "ĠTREE", ":", "ĠĠ", "Ġfoo", "<", "Ċ", "//", "ĠTREE", ":", "ĠĠĠĠ", "Ġ[", "{{", ".", "}}", "[", "0", ";", "1", ";", "36", "md", "o", "uble", "{{", ".", "}}", "[", "0", "m", "{{", ".", "}}", "[", "1", "m", "Ġ!=", "Ġ{{", ".", "}}", "[", "0", ";", "1", ";", "36", "m", "int", "{{", ".", "}}", "[", "0", "m", "{{", ".", "}}", "[", "1", "m", "]>", "{{", ".", "}}", "[", "0", "m", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::757", "code": "#ifndef DECISIONTREENODE_HPP\n#define DECISIONTREENODE_HPP\n\n#include \"DecisionStump.hpp\"\n\nnamespace boosted_learning {\n\n\nclass DecisionTreeNode : public DecisionStump\n{\npublic:\n    typedef boost::shared_ptr<DecisionTreeNode> decision_tree_node_p;\n\n    DecisionTreeNode();\n    DecisionTreeNode(const Feature &feature, const size_t feature_index, const int threshold, const int alpha, const int id);\n     \n    int _id;\n    bool _valid;\n\n    // setters\n    void set_id(const int id);\n    void set_invalid();\n\n    // getters\n    int get_id() const;\n    bool is_invalid() const;\n    int get_parent_id() const;\n    bool is_left() const;\n\n    void print(std::ostream & log_func, const int depth = 0);\n};\n\n\n} // end of namespace boosted_learning\n\n#endif // DECISIONTREENODE_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠDEC", "ISION", "T", "REEN", "ODE", "_", "HP", "P", "Ċ", "#", "define", "ĠDEC", "ISION", "T", "REEN", "ODE", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "Decision", "St", "ump", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġboost", "ed", "_", "learning", "Ġ{", "Ċ", "Ċ", "Ċ", "class", "ĠDec", "ision", "TreeNode", "Ġ:", "Ġpublic", "ĠDec", "ision", "St", "ump", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġboost", "::", "shared", "_", "ptr", "<", "Decision", "TreeNode", ">", "Ġdecision", "_", "tree", "_", "node", "_", "p", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠDec", "ision", "TreeNode", "();", "Ċ", "ĠĠĠ", "ĠDec", "ision", "TreeNode", "(", "const", "ĠFeature", "Ġ&", "feature", ",", "Ġconst", "Ġsize", "_", "t", "Ġfeature", "_", "index", ",", "Ġconst", "Ġint", "Ġthreshold", ",", "Ġconst", "Ġint", "Ġalpha", ",", "Ġconst", "Ġint", "Ġid", ");", "Ċ", "ĠĠĠĠĠĊ", "ĠĠĠ", "Ġint", "Ġ_", "id", ";", "Ċ", "ĠĠĠ", "Ġbool", "Ġ_", "valid", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġset", "ters", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "id", "(", "const", "Ġint", "Ġid", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "_", "invalid", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġget", "ters", "Ċ", "ĠĠĠ", "Ġint", "Ġget", "_", "id", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġbool", "Ġis", "_", "invalid", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġget", "_", "parent", "_", "id", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġbool", "Ġis", "_", "left", "()", "Ġconst", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġprint", "(", "std", "::", "ostream", "Ġ&", "Ġlog", "_", "func", ",", "Ġconst", "Ġint", "Ġdepth", "Ġ=", "Ġ0", ");", "Ċ", "};", "Ċ", "Ċ", "Ċ", "}", "Ġ//", "Ġend", "Ġof", "Ġnamespace", "Ġboost", "ed", "_", "learning", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠDEC", "ISION", "T", "REEN", "ODE", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::758", "code": "// This file is part of CAF, the C++ Actor Framework. See the file LICENSE in\n// the main distribution directory for license terms and copyright or visit\n// https://github.com/actor-framework/actor-framework/blob/master/LICENSE.\n\n#include \"caf/config_option_adder.hpp\"\n\n#include \"caf/config.hpp\"\n#include \"caf/config_option_set.hpp\"\n\nCAF_PUSH_DEPRECATED_WARNING\n\nnamespace caf {\n\nconfig_option_adder::config_option_adder(config_option_set& target,\n                                         string_view category)\n    : xs_(target),\n      category_(category) {\n  // nop\n}\n\nconfig_option_adder& config_option_adder::add_neg(bool& ref, string_view name,\n                                                  string_view description) {\n  return add_impl(make_negated_config_option(ref, category_,\n                                             name, description));\n}\n\nconfig_option_adder& config_option_adder::add_impl(config_option&& opt) {\n  xs_.add(std::move(opt));\n  return *this;\n}\n\n} // namespace caf\n\nCAF_POP_WARNINGS\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠC", "AF", ",", "Ġthe", "ĠC", "++", "ĠActor", "ĠFramework", ".", "ĠSee", "Ġthe", "Ġfile", "ĠLICENSE", "Ġin", "Ċ", "//", "Ġthe", "Ġmain", "Ġdistribution", "Ġdirectory", "Ġfor", "Ġlicense", "Ġterms", "Ġand", "Ġcopyright", "Ġor", "Ġvisit", "Ċ", "//", "Ġhttps", "://", "github", ".", "com", "/", "actor", "-", "framework", "/", "actor", "-", "framework", "/", "blob", "/", "master", "/", "LICENSE", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "ca", "f", "/", "config", "_", "option", "_", "add", "er", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "ca", "f", "/", "config", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "ca", "f", "/", "config", "_", "option", "_", "set", ".", "hpp", "\"", "Ċ", "Ċ", "CA", "F", "_", "PUSH", "_", "DEPRECATED", "_", "WARNING", "Ċ", "Ċ", "namespace", "Ġc", "af", "Ġ{", "Ċ", "Ċ", "config", "_", "option", "_", "add", "er", "::", "config", "_", "option", "_", "add", "er", "(", "config", "_", "option", "_", "set", "&", "Ġtarget", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstring", "_", "view", "Ġcategory", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġxs", "_(", "target", "),", "Ċ", "ĠĠĠĠĠ", "Ġcategory", "_(", "category", ")", "Ġ{", "Ċ", "Ġ", "Ġ//", "Ġnop", "Ċ", "}", "Ċ", "Ċ", "config", "_", "option", "_", "add", "er", "&", "Ġconfig", "_", "option", "_", "add", "er", "::", "add", "_", "neg", "(", "bool", "&", "Ġref", ",", "Ġstring", "_", "view", "Ġname", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstring", "_", "view", "Ġdescription", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġadd", "_", "impl", "(", "make", "_", "neg", "ated", "_", "config", "_", "option", "(", "ref", ",", "Ġcategory", "_,", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġname", ",", "Ġdescription", "));", "Ċ", "}", "Ċ", "Ċ", "config", "_", "option", "_", "add", "er", "&", "Ġconfig", "_", "option", "_", "add", "er", "::", "add", "_", "impl", "(", "config", "_", "option", "&&", "Ġopt", ")", "Ġ{", "Ċ", "Ġ", "Ġxs", "_.", "add", "(", "std", "::", "move", "(", "opt", "));", "Ċ", "Ġ", "Ġreturn", "Ġ*", "this", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġc", "af", "Ċ", "Ċ", "CA", "F", "_", "POP", "_", "WARNING", "S", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::759", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_53b.cpp\r\nLabel Definition File: CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806.label.xml\r\nTemplate File: sources-sink-53b.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 122 Heap Based Buffer Overflow\r\n * BadSource:  Initialize data as a large string\r\n * GoodSource: Initialize data as a small string\r\n * Sink: memmove\r\n *    BadSink : Copy data to string using memmove\r\n * Flow Variant: 53 Data flow: data passed as an argument from one function through two others to a fourth; all four functions are in different source files\r\n *\r\n * */\r\n\r\n#include \"std_testcase.h\"\r\n\r\n#include <wchar.h>\r\n\r\nnamespace CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_53\r\n{\r\n\r\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\r\n\r\n#ifndef OMITBAD\r\n\r\n/* bad function declaration */\r\nvoid badSink_c(char * data);\r\n\r\nvoid badSink_b(char * data)\r\n{\r\n    badSink_c(data);\r\n}\r\n\r\n#endif /* OMITBAD */\r\n\r\n#ifndef OMITGOOD\r\n\r\n/* goodG2B uses the GoodSource with the BadSink */\r\nvoid goodG2BSink_c(char * data);\r\n\r\nvoid goodG2BSink_b(char * data)\r\n{\r\n    goodG2BSink_c(data);\r\n}\r\n\r\n#endif /* OMITGOOD */\r\n\r\n} /* close namespace */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "122", "_", "Heap", "_", "Based", "_", "Buffer", "_", "Overflow", "__", "cpp", "_", "CWE", "8", "06", "_", "char", "_", "memmove", "_", "53", "b", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "122", "_", "Heap", "_", "Based", "_", "Buffer", "_", "Overflow", "__", "cpp", "_", "CWE", "8", "06", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "-", "53", "b", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ122", "ĠHeap", "ĠBased", "ĠBuffer", "ĠOverflow", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġ", "ĠInitialize", "Ġdata", "Ġas", "Ġa", "Ġlarge", "Ġstring", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠInitialize", "Ġdata", "Ġas", "Ġa", "Ġsmall", "Ġstring", "č", "Ċ", "Ġ*", "ĠSink", ":", "Ġmemmove", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "ĠCopy", "Ġdata", "Ġto", "Ġstring", "Ġusing", "Ġmemmove", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ53", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġas", "Ġan", "Ġargument", "Ġfrom", "Ġone", "Ġfunction", "Ġthrough", "Ġtwo", "Ġothers", "Ġto", "Ġa", "Ġfourth", ";", "Ġall", "Ġfour", "Ġfunctions", "Ġare", "Ġin", "Ġdifferent", "Ġsource", "Ġfiles", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "wchar", ".", "h", ">", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "122", "_", "Heap", "_", "Based", "_", "Buffer", "_", "Overflow", "__", "cpp", "_", "CWE", "8", "06", "_", "char", "_", "memmove", "_", "53", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "/*", "Ġall", "Ġthe", "Ġsink", "s", "Ġare", "Ġthe", "Ġsame", ",", "Ġwe", "Ġjust", "Ġwant", "Ġto", "Ġknow", "Ġwhere", "Ġthe", "Ġhit", "Ġorigin", "ated", "Ġif", "Ġa", "Ġtool", "Ġflags", "Ġone", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "BAD", "č", "Ċ", "č", "Ċ", "/*", "Ġbad", "Ġfunction", "Ġdeclaration", "Ġ*/", "č", "Ċ", "void", "Ġbad", "Sink", "_", "c", "(", "char", "Ġ*", "Ġdata", ");", "č", "Ċ", "č", "Ċ", "void", "Ġbad", "Sink", "_", "b", "(", "char", "Ġ*", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġbad", "Sink", "_", "c", "(", "data", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "BAD", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "GOOD", "č", "Ċ", "č", "Ċ", "/*", "Ġgood", "G", "2", "B", "Ġuses", "Ġthe", "ĠGood", "Source", "Ġwith", "Ġthe", "ĠBad", "Sink", "Ġ*/", "č", "Ċ", "void", "Ġgood", "G", "2", "BS", "ink", "_", "c", "(", "char", "Ġ*", "Ġdata", ");", "č", "Ċ", "č", "Ċ", "void", "Ġgood", "G", "2", "BS", "ink", "_", "b", "(", "char", "Ġ*", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġgood", "G", "2", "BS", "ink", "_", "c", "(", "data", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "GOOD", "Ġ*/", "č", "Ċ", "č", "Ċ", "}", "Ġ/*", "Ġclose", "Ġnamespace", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::760", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE126_Buffer_Overread__CWE129_listen_socket_82_bad.cpp\r\nLabel Definition File: CWE126_Buffer_Overread__CWE129.label.xml\r\nTemplate File: sources-sinks-82_bad.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 126 Buffer Overread\r\n * BadSource: listen_socket Read data using a listen socket (server side)\r\n * GoodSource: Larger than zero but less than 10\r\n * Sinks:\r\n *    GoodSink: Ensure the array index is valid\r\n *    BadSink : Improperly check the array index by not checking the upper bound\r\n * Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer\r\n *\r\n * */\r\n#ifndef OMITBAD\r\n\r\n#include \"std_testcase.h\"\r\n#include \"CWE126_Buffer_Overread__CWE129_listen_socket_82.h\"\r\n\r\nnamespace CWE126_Buffer_Overread__CWE129_listen_socket_82\r\n{\r\n\r\nvoid CWE126_Buffer_Overread__CWE129_listen_socket_82_bad::action(int data)\r\n{\r\n    {\r\n        int buffer[10] = { 0 };\r\n        /* POTENTIAL FLAW: Attempt to access an index of the array that is above the upper bound\r\n         * This check does not check the upper bounds of the array index */\r\n        if (data >= 0)\r\n        {\r\n            printIntLine(buffer[data]);\r\n        }\r\n        else\r\n        {\r\n            printLine(\"ERROR: Array index is negative\");\r\n        }\r\n    }\r\n}\r\n\r\n}\r\n#endif /* OMITBAD */\r\n", "code_tokens": ["Ġ/*", "ĠTEMP", "LATE", "ĠGENERATED", "ĠTEST", "CASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠCWE", "126", "_", "Buffer", "_", "Over", "read", "__", "CWE", "129", "_", "listen", "_", "socket", "_", "82", "_", "bad", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠCWE", "126", "_", "Buffer", "_", "Over", "read", "__", "CWE", "129", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "sink", "s", "-", "82", "_", "bad", ".", "tmpl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠCWE", ":", "Ġ126", "ĠBuffer", "ĠOver", "read", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġlisten", "_", "socket", "ĠRead", "Ġdata", "Ġusing", "Ġa", "Ġlisten", "Ġsocket", "Ġ(", "server", "Ġside", ")", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠL", "arg", "er", "Ġthan", "Ġzero", "Ġbut", "Ġless", "Ġthan", "Ġ10", "č", "Ċ", "Ġ*", "ĠSink", "s", ":", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠGood", "Sink", ":", "ĠEnsure", "Ġthe", "Ġarray", "Ġindex", "Ġis", "Ġvalid", "č", "Ċ", "Ġ*", "ĠĠĠ", "ĠBad", "Sink", "Ġ:", "ĠImp", "ro", "perly", "Ġcheck", "Ġthe", "Ġarray", "Ġindex", "Ġby", "Ġnot", "Ġchecking", "Ġthe", "Ġupper", "Ġbound", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ82", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġin", "Ġa", "Ġparameter", "Ġto", "Ġan", "Ġvirtual", "Ġmethod", "Ġcalled", "Ġvia", "Ġa", "Ġpointer", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "#", "ifndef", "ĠO", "MIT", "BAD", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "testcase", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "CWE", "126", "_", "Buffer", "_", "Over", "read", "__", "CWE", "129", "_", "listen", "_", "socket", "_", "82", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "namespace", "ĠCWE", "126", "_", "Buffer", "_", "Over", "read", "__", "CWE", "129", "_", "listen", "_", "socket", "_", "82", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "ĠCWE", "126", "_", "Buffer", "_", "Over", "read", "__", "CWE", "129", "_", "listen", "_", "socket", "_", "82", "_", "bad", "::", "action", "(", "int", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġbuffer", "[", "10", "]", "Ġ=", "Ġ{", "Ġ0", "Ġ};", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ/*", "ĠP", "OT", "ENTIAL", "ĠF", "LA", "W", ":", "ĠAttempt", "Ġto", "Ġaccess", "Ġan", "Ġindex", "Ġof", "Ġthe", "Ġarray", "Ġthat", "Ġis", "Ġabove", "Ġthe", "Ġupper", "Ġbound", "č", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ*", "ĠThis", "Ġcheck", "Ġdoes", "Ġnot", "Ġcheck", "Ġthe", "Ġupper", "Ġbounds", "Ġof", "Ġthe", "Ġarray", "Ġindex", "Ġ*/", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "data", "Ġ>=", "Ġ0", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprint", "Int", "Line", "(", "buffer", "[", "data", "]);", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprint", "Line", "(\"", "ERROR", ":", "ĠArray", "Ġindex", "Ġis", "Ġnegative", "\");", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "Ġ/*", "ĠO", "MIT", "BAD", "Ġ*/", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::761", "code": "/*============================================================================\n\nThe Medical Imaging Interaction Toolkit (MITK)\n\nCopyright (c) German Cancer Research Center (DKFZ)\nAll rights reserved.\n\nUse of this source code is governed by a 3-clause BSD license that can be\nfound in the LICENSE file.\n\n============================================================================*/\n\n#include \"berryAbstractHandler.h\"\n\n#include \"berryHandlerEvent.h\"\n\nnamespace berry\n{\n\nAbstractHandler::AbstractHandler() :\n  baseEnabled(true)\n{\n\n}\n\nvoid AbstractHandler::AddHandlerListener(IHandlerListener *handlerListener)\n{\n  handlerListeners.AddListener(handlerListener);\n}\n\nvoid AbstractHandler::Dispose()\n{\n  // Do nothing.\n}\n\nbool AbstractHandler::IsEnabled() const\n{\n  return baseEnabled;\n}\n\nvoid AbstractHandler::SetEnabled(const Object::Pointer& /*evaluationContext*/)\n{\n}\n\nbool AbstractHandler::IsHandled() const\n{\n  return true;\n}\n\nvoid AbstractHandler::RemoveHandlerListener(IHandlerListener *handlerListener)\n{\n  handlerListeners.RemoveListener(handlerListener);\n}\n\nvoid AbstractHandler::FireHandlerChanged(const SmartPointer<HandlerEvent>& handlerEvent)\n{\n  if (handlerEvent.IsNull())\n  {\n    throw ctkInvalidArgumentException(\"Cannot fire a null handler event\");\n  }\n\n  handlerListeners.handlerChanged(handlerEvent);\n}\n\nvoid AbstractHandler::SetBaseEnabled(bool state)\n{\n  if (baseEnabled == state)\n  {\n    return;\n  }\n  baseEnabled = state;\n  HandlerEvent::Pointer event(new HandlerEvent(IHandler::Pointer(this), true, false));\n  FireHandlerChanged(event);\n}\n\nbool AbstractHandler::HasListeners() const\n{\n  return handlerListeners.handlerChanged.HasListeners();\n}\n\n}\n", "code_tokens": ["Ġ/*", "================================================================", "============", "Ċ", "Ċ", "The", "ĠM", "ed", "ical", "ĠIm", "aging", "ĠInter", "action", "ĠTool", "kit", "Ġ(", "MIT", "K", ")", "Ċ", "Ċ", "Copyright", "Ġ(", "c", ")", "ĠG", "er", "man", "ĠCan", "cer", "ĠRe", "search", "ĠCenter", "Ġ(", "DK", "FZ", ")", "Ċ", "All", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "Use", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "Ġ3", "-", "clause", "ĠBSD", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "found", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "================================================================", "============", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "b", "erry", "Abstract", "Handler", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "b", "erry", "Handler", "Event", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġb", "erry", "Ċ", "{", "Ċ", "Ċ", "Abstract", "Handler", "::", "Abstract", "Handler", "()", "Ġ:", "Ċ", "Ġ", "Ġbase", "Enabled", "(", "true", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAbstract", "Handler", "::", "Add", "Handler", "Listener", "(", "I", "Handler", "Listener", "Ġ*", "handler", "Listener", ")", "Ċ", "{", "Ċ", "Ġ", "Ġhandler", "Listeners", ".", "Add", "Listener", "(", "handler", "Listener", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAbstract", "Handler", "::", "Dispose", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠDo", "Ġnothing", ".", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠAbstract", "Handler", "::", "IsEnabled", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġbase", "Enabled", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAbstract", "Handler", "::", "Set", "Enabled", "(", "const", "ĠObject", "::", "Pointer", "&", "Ġ/*", "evaluation", "Context", "*/)", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠAbstract", "Handler", "::", "Is", "Handled", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAbstract", "Handler", "::", "Remove", "Handler", "Listener", "(", "I", "Handler", "Listener", "Ġ*", "handler", "Listener", ")", "Ċ", "{", "Ċ", "Ġ", "Ġhandler", "Listeners", ".", "Remove", "Listener", "(", "handler", "Listener", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAbstract", "Handler", "::", "Fire", "Handler", "Changed", "(", "const", "ĠSmart", "Pointer", "<", "Handler", "Event", ">&", "Ġhandler", "Event", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "handler", "Event", ".", "IsNull", "())", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġthrow", "Ġct", "k", "InvalidArgumentException", "(\"", "Cannot", "Ġfire", "Ġa", "Ġnull", "Ġhandler", "Ġevent", "\");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġhandler", "Listeners", ".", "handler", "Changed", "(", "handler", "Event", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAbstract", "Handler", "::", "Set", "Base", "Enabled", "(", "bool", "Ġstate", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "base", "Enabled", "Ġ==", "Ġstate", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġbase", "Enabled", "Ġ=", "Ġstate", ";", "Ċ", "Ġ", "ĠHandler", "Event", "::", "Pointer", "Ġevent", "(", "new", "ĠHandler", "Event", "(", "I", "Handler", "::", "Pointer", "(", "this", "),", "Ġtrue", ",", "Ġfalse", "));", "Ċ", "Ġ", "ĠFire", "Handler", "Changed", "(", "event", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠAbstract", "Handler", "::", "Has", "Listeners", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġhandler", "Listeners", ".", "handler", "Changed", ".", "Has", "Listeners", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::762", "code": "#include \"StdAfx.h\"\r\n\r\n#include \"MultiSphereShape.h\"\r\n\r\n#define Native static_cast<btMultiSphereShape*>(_native)\r\n\r\nMultiSphereShape::MultiSphereShape(array<Vector3>^ positions, array<btScalar>^ radi)\r\n\t: ConvexInternalAabbCachingShape(0)\r\n{\r\n\tint numSpheres = (positions->Length < radi->Length) ? positions->Length : radi->Length;\r\n\r\n\tbtVector3* positionsTemp = Math::Vector3ArrayToUnmanaged(positions);\r\n\tbtScalar* radiTemp = Math::BtScalarArrayToUnmanaged(radi, numSpheres);\r\n\r\n\tUnmanagedPointer = new btMultiSphereShape(positionsTemp, radiTemp, numSpheres);\r\n\r\n\tdelete[] positionsTemp;\r\n\tdelete[] radiTemp;\r\n}\r\n\r\nVector3 MultiSphereShape::GetSpherePosition(int index)\r\n{\r\n\treturn Math::BtVector3ToVector3(&Native->getSpherePosition(index));\r\n}\r\n\r\nbtScalar MultiSphereShape::GetSphereRadius(int index)\r\n{\r\n\treturn Native->getSphereRadius(index);\r\n}\r\n\r\nint MultiSphereShape::SphereCount::get()\r\n{\r\n\treturn Native->getSphereCount();\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Std", "Afx", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Multi", "Sphere", "Shape", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "define", "ĠNative", "Ġstatic", "_", "cast", "<", "bt", "Multi", "Sphere", "Shape", "*>(", "_", "native", ")", "č", "Ċ", "č", "Ċ", "Multi", "Sphere", "Shape", "::", "Multi", "Sphere", "Shape", "(", "array", "<", "Vector", "3", ">", "^", "Ġpositions", ",", "Ġarray", "<", "btScalar", ">", "^", "Ġrad", "i", ")", "č", "Ċ", "ĉ", ":", "ĠConv", "ex", "Internal", "Aabb", "Caching", "Shape", "(", "0", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġnum", "Sp", "heres", "Ġ=", "Ġ(", "positions", "->", "Length", "Ġ<", "Ġrad", "i", "->", "Length", ")", "Ġ?", "Ġpositions", "->", "Length", "Ġ:", "Ġrad", "i", "->", "Length", ";", "č", "Ċ", "č", "Ċ", "ĉ", "btVector", "3", "*", "Ġpositions", "Temp", "Ġ=", "ĠMath", "::", "Vector", "3", "Array", "To", "Unmanaged", "(", "positions", ");", "č", "Ċ", "ĉ", "btScalar", "*", "Ġrad", "i", "Temp", "Ġ=", "ĠMath", "::", "Bt", "Scalar", "Array", "To", "Unmanaged", "(", "rad", "i", ",", "Ġnum", "Sp", "heres", ");", "č", "Ċ", "č", "Ċ", "ĉ", "Unmanaged", "Pointer", "Ġ=", "Ġnew", "Ġbt", "Multi", "Sphere", "Shape", "(", "positions", "Temp", ",", "Ġrad", "i", "Temp", ",", "Ġnum", "Sp", "heres", ");", "č", "Ċ", "č", "Ċ", "ĉ", "delete", "[]", "Ġpositions", "Temp", ";", "č", "Ċ", "ĉ", "delete", "[]", "Ġrad", "i", "Temp", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Vector", "3", "ĠMulti", "Sphere", "Shape", "::", "Get", "Sphere", "Position", "(", "int", "Ġindex", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "ĠMath", "::", "Bt", "Vector", "3", "ToVector", "3", "(&", "Native", "->", "get", "Sphere", "Position", "(", "index", "));", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "btScalar", "ĠMulti", "Sphere", "Shape", "::", "Get", "Sphere", "Radius", "(", "int", "Ġindex", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "ĠNative", "->", "get", "Sphere", "Radius", "(", "index", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠMulti", "Sphere", "Shape", "::", "Sphere", "Count", "::", "get", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "ĠNative", "->", "get", "Sphere", "Count", "();", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::763", "code": "#include \"testlib.h\"\n#include <stdio.h>\n#include <math.h>\n\nconst double EPS = 1E-6;\n\nint main(int argc, char * argv[])\n{\n    setName(\"compare two doubles, maximal absolute or relative error = %.10lf\", EPS);\n    registerTestlibCmd(argc, argv);\n    \n    double ja = ans.readDouble();\n    double pa = ouf.readDouble();\n    \n    if (!doubleCompare(ja, pa, EPS))\n        quitf(_wa, \"expected %.10lf, found %.10lf\", ja, pa);\n    \n    quitf(_ok, \"answer is %.10lf\", ja);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "test", "lib", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "Ċ", "const", "Ġdouble", "ĠE", "PS", "Ġ=", "Ġ1", "E", "-", "6", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "Ġargv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠsetName", "(\"", "compare", "Ġtwo", "Ġdoubles", ",", "Ġmaximal", "Ġabsolute", "Ġor", "Ġrelative", "Ġerror", "Ġ=", "Ġ%.", "10", "lf", "\",", "ĠE", "PS", ");", "Ċ", "ĠĠĠ", "Ġregister", "Test", "lib", "Cmd", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġdouble", "Ġja", "Ġ=", "Ġans", ".", "read", "Double", "();", "Ċ", "ĠĠĠ", "Ġdouble", "Ġpa", "Ġ=", "Ġo", "uf", ".", "read", "Double", "();", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġif", "Ġ(!", "double", "Compare", "(", "ja", ",", "Ġpa", ",", "ĠE", "PS", "))", "Ċ", "ĠĠĠĠĠĠĠ", "Ġquit", "f", "(_", "wa", ",", "Ġ\"", "expected", "Ġ%.", "10", "lf", ",", "Ġfound", "Ġ%.", "10", "lf", "\",", "Ġja", ",", "Ġpa", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġquit", "f", "(_", "ok", ",", "Ġ\"", "answer", "Ġis", "Ġ%.", "10", "lf", "\",", "Ġja", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::764", "code": "// Copyright Benoit Blanchon 2014-2017\n// MIT License\n//\n// Arduino JSON library\n// https://github.com/bblanchon/ArduinoJson\n// If you like this project, please add a star!\n\n#pragma once\n\n#include \"JsonFloat.hpp\"\n#include \"JsonInteger.hpp\"\n\nnamespace ArduinoJson {\n\n// Forward declarations\nclass JsonArray;\nclass JsonObject;\n\nnamespace Internals {\n// A union that defines the actual content of a JsonVariant.\n// The enum JsonVariantType determines which member is in use.\nunion JsonVariantContent {\n  JsonFloat asFloat;     // used for double and float\n  JsonUInt asInteger;    // used for bool, char, short, int and longs\n  const char* asString;  // asString can be null\n  JsonArray* asArray;    // asArray cannot be null\n  JsonObject* asObject;  // asObject cannot be null\n};\n}\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "ĠB", "eno", "it", "ĠBl", "anch", "on", "Ġ2014", "-", "2017", "Ċ", "//", "ĠMIT", "ĠLicense", "Ċ", "//", "Ċ", "//", "ĠAr", "duino", "ĠJSON", "Ġlibrary", "Ċ", "//", "Ġhttps", "://", "github", ".", "com", "/", "bb", "l", "anch", "on", "/", "Ar", "duino", "Json", "Ċ", "//", "ĠIf", "Ġyou", "Ġlike", "Ġthis", "Ġproject", ",", "Ġplease", "Ġadd", "Ġa", "Ġstar", "!", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "Json", "Float", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Json", "Integer", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "ĠAr", "duino", "Json", "Ġ{", "Ċ", "Ċ", "//", "ĠForward", "Ġdeclarations", "Ċ", "class", "ĠJson", "Array", ";", "Ċ", "class", "ĠJsonObject", ";", "Ċ", "Ċ", "namespace", "ĠInternal", "s", "Ġ{", "Ċ", "//", "ĠA", "Ġunion", "Ġthat", "Ġdefines", "Ġthe", "Ġactual", "Ġcontent", "Ġof", "Ġa", "ĠJson", "Variant", ".", "Ċ", "//", "ĠThe", "Ġenum", "ĠJson", "Variant", "Type", "Ġdetermines", "Ġwhich", "Ġmember", "Ġis", "Ġin", "Ġuse", ".", "Ċ", "union", "ĠJson", "Variant", "Content", "Ġ{", "Ċ", "Ġ", "ĠJson", "Float", "Ġas", "Float", ";", "ĠĠĠĠ", "Ġ//", "Ġused", "Ġfor", "Ġdouble", "Ġand", "Ġfloat", "Ċ", "Ġ", "ĠJson", "UInt", "Ġas", "Integer", ";", "ĠĠĠ", "Ġ//", "Ġused", "Ġfor", "Ġbool", ",", "Ġchar", ",", "Ġshort", ",", "Ġint", "Ġand", "Ġl", "ongs", "Ċ", "Ġ", "Ġconst", "Ġchar", "*", "Ġas", "String", ";", "Ġ", "Ġ//", "Ġas", "String", "Ġcan", "Ġbe", "Ġnull", "Ċ", "Ġ", "ĠJson", "Array", "*", "Ġas", "Array", ";", "ĠĠĠ", "Ġ//", "Ġas", "Array", "Ġcannot", "Ġbe", "Ġnull", "Ċ", "Ġ", "ĠJsonObject", "*", "Ġas", "Object", ";", "Ġ", "Ġ//", "Ġas", "Object", "Ġcannot", "Ġbe", "Ġnull", "Ċ", "};", "Ċ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::765", "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint n,m;\r\nint r;\r\n\r\nint main()\r\n{\r\n    scanf(\"%d %d\",&n,&m);\r\n\r\n    while(n>0)\r\n    {\r\n        n--;\r\n        r++;\r\n\r\n        if(r%m==0)\r\n            n++;\r\n    }\r\n\r\n    printf(\"%d\",r);\r\n    return 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġn", ",", "m", ";", "č", "Ċ", "int", "Ġr", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġscanf", "(\"%", "d", "Ġ%", "d", "\",&", "n", ",&", "m", ");", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġwhile", "(", "n", ">", "0", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġn", "--;", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġr", "++;", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "r", "%", "m", "==", "0", ")", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġn", "++;", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġprintf", "(\"%", "d", "\",", "r", ");", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::766", "code": "// David Eberly, Geometric Tools, Redmond WA 98052\n// Copyright (c) 1998-2017\n// Distributed under the Boost Software License, Version 1.0.\n// http://www.boost.org/LICENSE_1_0.txt\n// http://www.geometrictools.com/License/Boost/LICENSE_1_0.txt\n// File Version: 3.0.0 (2016/06/19)\n\n#include <GTEnginePCH.h>\n#include <Graphics/GteProgramDefines.h>\nusing namespace gte;\n\n\nProgramDefines::ProgramDefines()\n{\n}\n\nvoid ProgramDefines::Update(std::string const& name, std::string const& value)\n{\n    // If an item already exists with the specified name, update it.\n    for (auto& definition : mDefinitions)\n    {\n        if (name == definition.first)\n        {\n            definition.second = value;\n            return;\n        }\n    }\n\n    // The item is new, so append it.\n    mDefinitions.push_back(std::make_pair(name, value));\n}\n\nvoid ProgramDefines::Remove(std::string const& name)\n{\n    for (auto iter = mDefinitions.begin(); iter != mDefinitions.end(); ++iter)\n    {\n        if (name == iter->first)\n        {\n            mDefinitions.erase(iter);\n            break;\n        }\n    }\n}\n\nvoid ProgramDefines::Clear()\n{\n    mDefinitions.clear();\n}\n\n", "code_tokens": ["Ġ//", "ĠD", "av", "id", "ĠE", "ber", "ly", ",", "ĠGe", "om", "etric", "ĠTools", ",", "ĠRed", "mon", "d", "ĠWA", "Ġ9", "80", "52", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ199", "8", "-", "2017", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", "Ċ", "//", "Ġhttp", "://", "www", ".", "geom", "etri", "ct", "ools", ".", "com", "/", "License", "/", "Boost", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", "Ċ", "//", "ĠFile", "ĠVersion", ":", "Ġ3", ".", "0", ".", "0", "Ġ(", "2016", "/", "06", "/", "19", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "GT", "Engine", "PCH", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Graphics", "/", "G", "te", "Program", "Defines", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġg", "te", ";", "Ċ", "Ċ", "Ċ", "Program", "Defines", "::", "Program", "Defines", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠProgram", "Defines", "::", "Update", "(", "std", "::", "string", "Ġconst", "&", "Ġname", ",", "Ġstd", "::", "string", "Ġconst", "&", "Ġvalue", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠIf", "Ġan", "Ġitem", "Ġalready", "Ġexists", "Ġwith", "Ġthe", "Ġspecified", "Ġname", ",", "Ġupdate", "Ġit", ".", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "&", "Ġdefinition", "Ġ:", "Ġm", "Definitions", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "name", "Ġ==", "Ġdefinition", ".", "first", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdefinition", ".", "second", "Ġ=", "Ġvalue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠThe", "Ġitem", "Ġis", "Ġnew", ",", "Ġso", "Ġappend", "Ġit", ".", "Ċ", "ĠĠĠ", "Ġm", "Definitions", ".", "push", "_", "back", "(", "std", "::", "make", "_", "pair", "(", "name", ",", "Ġvalue", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠProgram", "Defines", "::", "Remove", "(", "std", "::", "string", "Ġconst", "&", "Ġname", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "auto", "Ġiter", "Ġ=", "Ġm", "Definitions", ".", "begin", "();", "Ġiter", "Ġ!=", "Ġm", "Definitions", ".", "end", "();", "Ġ++", "iter", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "name", "Ġ==", "Ġiter", "->", "first", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "Definitions", ".", "erase", "(", "iter", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠProgram", "Defines", "::", "Clear", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "Definitions", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::767", "code": "#pragma once \n\n#include <json/value.h>\n#include <json/writer.h>\n\n#include \"../encoding/HexEncoder.hpp\"\n\n#include \"../key/PrivateKey.hpp\"\n#include \"../key/SecuredPrivateKey.hpp\"\n#include \"../cipher/ScryptParams.hpp\"\n#include \"../cipher/AesCipher.hpp\"\n#include \"../cipher/DummyCipher.hpp\"\n\n#include \"KdfSerializer.hpp\"\n\n\nnamespace Ethereum{\n\n\ntemplate<class Cipher>\nclass PrivateKeySerializer\n{\n    public:\n\n        std::string serialize(const SecuredPrivateKey<Cipher> &) const;\n        Json::Value serializeToJson(const SecuredPrivateKey<Cipher> &) const;\n        SecuredPrivateKey<Cipher> unserialize(const std::string &) const;\n        SecuredPrivateKey<Cipher> unserialize(const Json::Value &) const;\n\n    private:\n        Json::Value serializeCipherParams(const Cipher &) const;\n        Json::Value serializeKDF(const ScryptParams &) const;\n        ScryptParams unserializeKDF(const Json::Value &) const;\n};\n\n\ntemplate<class KDF>\nstd::string CipherName(const AesCipher<KDF> &);\n\nstd::string CipherName(const DummyCipher &);\n\n}\n\n\n#include \"PrivateKeySerializer.ipp\"\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "ĠĊ", "Ċ", "#", "include", "Ġ<", "json", "/", "value", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "json", "/", "writer", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"../", "encoding", "/", "Hex", "Encoder", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"../", "key", "/", "PrivateKey", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "key", "/", "Sec", "ured", "PrivateKey", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "cipher", "/", "Sc", "rypt", "Params", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "cipher", "/", "A", "es", "Cipher", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "cipher", "/", "Dummy", "Cipher", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "K", "df", "Serializer", ".", "hpp", "\"", "Ċ", "Ċ", "Ċ", "namespace", "ĠE", "there", "um", "{", "Ċ", "Ċ", "Ċ", "template", "<", "class", "ĠCipher", ">", "Ċ", "class", "ĠPrivate", "Key", "Serializer", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "string", "Ġserialize", "(", "const", "ĠSec", "ured", "PrivateKey", "<", "Cipher", ">", "Ġ&)", "Ġconst", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠJson", "::", "Value", "Ġserialize", "ToJson", "(", "const", "ĠSec", "ured", "PrivateKey", "<", "Cipher", ">", "Ġ&)", "Ġconst", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSec", "ured", "PrivateKey", "<", "Cipher", ">", "Ġunserialize", "(", "const", "Ġstd", "::", "string", "Ġ&)", "Ġconst", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠSec", "ured", "PrivateKey", "<", "Cipher", ">", "Ġunserialize", "(", "const", "ĠJson", "::", "Value", "Ġ&)", "Ġconst", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠJson", "::", "Value", "Ġserialize", "Cipher", "Params", "(", "const", "ĠCipher", "Ġ&)", "Ġconst", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠJson", "::", "Value", "Ġserialize", "K", "DF", "(", "const", "ĠS", "crypt", "Params", "Ġ&)", "Ġconst", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠS", "crypt", "Params", "Ġunserialize", "K", "DF", "(", "const", "ĠJson", "::", "Value", "Ġ&)", "Ġconst", ";", "Ċ", "};", "Ċ", "Ċ", "Ċ", "template", "<", "class", "ĠK", "DF", ">", "Ċ", "std", "::", "string", "ĠCipher", "Name", "(", "const", "ĠA", "es", "Cipher", "<", "K", "DF", ">", "Ġ&", ");", "Ċ", "Ċ", "std", "::", "string", "ĠCipher", "Name", "(", "const", "ĠDummy", "Cipher", "Ġ&", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "PrivateKey", "Serializer", ".", "ipp", "\"", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::768", "code": "// { dg-options \"-std=gnu++11\" }\n\n// Copyright (C) 2007-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// Tuple\n\n#include <tuple>\n#include <testsuite_hooks.h>\n\nusing namespace std;\n\nint\nmain()\n{\n  bool test __attribute__((unused)) = true;\n\n  tuple<> ta;\n  tuple<> tb;\n  ta = tb;\n\n  tuple<int> tc(1);\n  tuple<int> td(0);\n  td = tc;\n  VERIFY(get<0>(td) == 1);\n\n  int i=0;\n  tuple<int&> te(i);\n  te = tc;\n  VERIFY(i == 1);\n\n  tuple<const int&> tf(tc);\n\n  get<0>(tc) = 2;\n  VERIFY(get<0>(tf) == 2);\n  tuple<double> tg;\n  tg = tc;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "ĠTuple", "Ċ", "Ċ", "#", "include", "Ġ<", "tuple", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__((", "unused", "))", "Ġ=", "Ġtrue", ";", "Ċ", "Ċ", "Ġ", "Ġtuple", "<>", "Ġta", ";", "Ċ", "Ġ", "Ġtuple", "<>", "Ġtb", ";", "Ċ", "Ġ", "Ġta", "Ġ=", "Ġtb", ";", "Ċ", "Ċ", "Ġ", "Ġtuple", "<", "int", ">", "Ġtc", "(", "1", ");", "Ċ", "Ġ", "Ġtuple", "<", "int", ">", "Ġtd", "(", "0", ");", "Ċ", "Ġ", "Ġtd", "Ġ=", "Ġtc", ";", "Ċ", "Ġ", "ĠVERIFY", "(", "get", "<", "0", ">(", "td", ")", "Ġ==", "Ġ1", ");", "Ċ", "Ċ", "Ġ", "Ġint", "Ġi", "=", "0", ";", "Ċ", "Ġ", "Ġtuple", "<", "int", "&", ">", "Ġte", "(", "i", ");", "Ċ", "Ġ", "Ġte", "Ġ=", "Ġtc", ";", "Ċ", "Ġ", "ĠVERIFY", "(", "i", "Ġ==", "Ġ1", ");", "Ċ", "Ċ", "Ġ", "Ġtuple", "<", "const", "Ġint", "&", ">", "Ġtf", "(", "tc", ");", "Ċ", "Ċ", "Ġ", "Ġget", "<", "0", ">(", "tc", ")", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "ĠVERIFY", "(", "get", "<", "0", ">(", "tf", ")", "Ġ==", "Ġ2", ");", "Ċ", "Ġ", "Ġtuple", "<", "double", ">", "Ġtg", ";", "Ċ", "Ġ", "Ġtg", "Ġ=", "Ġtc", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::769", "code": "// 2003-02-26 Benjamin Kosnik <bkoz@redhat.com>\n\n// Copyright (C) 2003-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// IA 64 C++ ABI - 5.1 External Names (a.k.a. Mangling)\n\n#include <testsuite_hooks.h>\n\n// Specific examples mentioned in the IA64 C++ ABI text\n// http://www.codesourcery.com/cxx-abi/abi.html#mangling\nint main()\n{\n  using namespace __gnu_test;\n\n  // extern \"C\" bool IsEmpty(char *); \n  // template<void (&)(char *)> struct CB;\n  // CB<IsEmpty> is mangled as \n  // cplus-dem FAIL\n   verify_demangle(\"2CBIL_Z7IsEmptyEE\", \"CB<IsEmpty>\");\n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ2003", "-", "02", "-", "26", "ĠB", "en", "jam", "in", "ĠK", "os", "n", "ik", "Ġ<", "bk", "oz", "@", "red", "hat", ".", "com", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "-", "202", "1", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "ĠIA", "Ġ64", "ĠC", "++", "ĠABI", "Ġ-", "Ġ5", ".", "1", "ĠExternal", "ĠNames", "Ġ(", "a", ".", "k", ".", "a", ".", "ĠM", "angling", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "//", "ĠSpecific", "Ġexamples", "Ġmention", "ed", "Ġin", "Ġthe", "ĠIA", "64", "ĠC", "++", "ĠABI", "Ġtext", "Ċ", "//", "Ġhttp", "://", "www", ".", "codes", "our", "c", "ery", ".", "com", "/", "cxx", "-", "abi", "/", "abi", ".", "html", "#", "m", "angling", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġ__", "gnu", "_", "test", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġextern", "Ġ\"", "C", "\"", "Ġbool", "ĠIsEmpty", "(", "char", "Ġ*);", "ĠĊ", "Ġ", "Ġ//", "Ġtemplate", "<", "void", "Ġ(&", ")(", "char", "Ġ*)", ">", "Ġstruct", "ĠCB", ";", "Ċ", "Ġ", "Ġ//", "ĠCB", "<", "IsEmpty", ">", "Ġis", "Ġmangled", "Ġas", "ĠĊ", "Ġ", "Ġ//", "Ġc", "plus", "-", "dem", "ĠFAIL", "Ċ", "ĠĠ", "Ġverify", "_", "dem", "angle", "(\"", "2", "CB", "IL", "_", "Z", "7", "IsEmpty", "EE", "\",", "Ġ\"", "CB", "<", "IsEmpty", ">\");", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::770", "code": "// { dg-do compile { target c++11 } }\n\n// 2007-10-14  Paolo Carlini  <pcarlini@suse.de>\n\n// Copyright (C) 2007-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n\n#include <algorithm>\n#include <testsuite_character.h>\n\nnamespace std\n{\n  using __gnu_test::pod_int;\n\n  typedef pod_int \t\tvalue_type;\n  typedef value_type* \t\titerator_type;\n  typedef std::less<value_type> compare_type;\n\n  template bool is_sorted(iterator_type, iterator_type);\n  template bool is_sorted(iterator_type, iterator_type, compare_type);\n} \n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "Ċ", "//", "Ġ2007", "-", "10", "-", "14", "Ġ", "ĠP", "ao", "lo", "ĠCar", "lin", "i", "Ġ", "Ġ<", "pc", "ar", "lin", "i", "@", "s", "use", ".", "de", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "-", "202", "1", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "character", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġstd", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġ__", "gnu", "_", "test", "::", "pod", "_", "int", ";", "Ċ", "Ċ", "Ġ", "Ġtypedef", "Ġpod", "_", "int", "Ġĉ", "ĉ", "value", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġvalue", "_", "type", "*", "Ġĉ", "ĉ", "iterator", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġstd", "::", "less", "<", "value", "_", "type", ">", "Ġcompare", "_", "type", ";", "Ċ", "Ċ", "Ġ", "Ġtemplate", "Ġbool", "Ġis", "_", "sorted", "(", "iterator", "_", "type", ",", "Ġiterator", "_", "type", ");", "Ċ", "Ġ", "Ġtemplate", "Ġbool", "Ġis", "_", "sorted", "(", "iterator", "_", "type", ",", "Ġiterator", "_", "type", ",", "Ġcompare", "_", "type", ");", "Ċ", "}", "ĠĊ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::771", "code": "/*\nCopyright_License {\n\n  XCSoar Glide Computer - http://www.xcsoar.org/\n  Copyright (C) 2000-2014 The XCSoar Project\n  A detailed list of copyright holders can be found in the file \"AUTHORS\".\n\n  This program is free software; you can redistribute it and/or\n  modify it under the terms of the GNU General Public License\n  as published by the Free Software Foundation; either version 2\n  of the License, or (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, write to the Free Software\n  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n}\n*/\n\n#ifndef XCSOAR_SCREEN_SDL_POINT_HPP\n#define XCSOAR_SCREEN_SDL_POINT_HPP\n\ntypedef int PixelScalar;\ntypedef unsigned UPixelScalar;\n\n#include \"Screen/Custom/Point.hpp\"\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "_", "License", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠX", "CS", "o", "ar", "ĠG", "lide", "ĠComput", "er", "Ġ-", "Ġhttp", "://", "www", ".", "x", "cs", "o", "ar", ".", "org", "/", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "-", "2014", "ĠThe", "ĠX", "CS", "o", "ar", "ĠProject", "Ċ", "Ġ", "ĠA", "Ġdetailed", "Ġlist", "Ġof", "Ġcopyright", "Ġhold", "ers", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "Ġ\"", "AUTH", "ORS", "\".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ċ", "}", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠX", "CS", "O", "AR", "_", "SCREEN", "_", "SDL", "_", "POINT", "_", "HP", "P", "Ċ", "#", "define", "ĠX", "CS", "O", "AR", "_", "SCREEN", "_", "SDL", "_", "POINT", "_", "HP", "P", "Ċ", "Ċ", "typedef", "Ġint", "ĠPixel", "Scalar", ";", "Ċ", "typedef", "Ġunsigned", "ĠU", "Pixel", "Scalar", ";", "Ċ", "Ċ", "#", "include", "Ġ\"", "Screen", "/", "Custom", "/", "Point", ".", "hpp", "\"", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::772", "code": "/*\n * Copyright (C) 2015 ScyllaDB\n */\n\n/*\n * This file is part of Scylla.\n *\n * Scylla is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Scylla is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Scylla.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#pragma once\n\n#include \"abstract_replication_strategy.hh\"\n\n#include <experimental/optional>\n#include <set>\n\nnamespace locator {\n\nclass simple_strategy : public abstract_replication_strategy {\nprotected:\n    virtual std::vector<inet_address> calculate_natural_endpoints(const token& search_token, token_metadata& tm) const override;\npublic:\n    simple_strategy(const sstring& keyspace_name, token_metadata& token_metadata, snitch_ptr& snitch, const std::map<sstring, sstring>& config_options);\n    virtual ~simple_strategy() {};\n    virtual size_t get_replication_factor() const override;\n    virtual void validate_options() const override;\n    virtual std::experimental::optional<std::set<sstring>> recognized_options() const override;\nprivate:\n    size_t _replication_factor = 1;\n};\n\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "ĠS", "cyl", "la", "DB", "Ċ", "Ġ*/", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠS", "cyl", "la", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠS", "cyl", "la", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠA", "ffer", "o", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠS", "cyl", "la", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠS", "cyl", "la", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "abstract", "_", "replication", "_", "strategy", ".", "hh", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "experimental", "/", "optional", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "Ċ", "namespace", "Ġlocator", "Ġ{", "Ċ", "Ċ", "class", "Ġsimple", "_", "strategy", "Ġ:", "Ġpublic", "Ġabstract", "_", "replication", "_", "strategy", "Ġ{", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġstd", "::", "vector", "<", "inet", "_", "address", ">", "Ġcalculate", "_", "natural", "_", "endpoints", "(", "const", "Ġtoken", "&", "Ġsearch", "_", "token", ",", "Ġtoken", "_", "metadata", "&", "Ġtm", ")", "Ġconst", "Ġoverride", ";", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġsimple", "_", "strategy", "(", "const", "Ġs", "string", "&", "Ġkeyspace", "_", "name", ",", "Ġtoken", "_", "metadata", "&", "Ġtoken", "_", "metadata", ",", "Ġsn", "itch", "_", "ptr", "&", "Ġsn", "itch", ",", "Ġconst", "Ġstd", "::", "map", "<", "s", "string", ",", "Ġs", "string", ">&", "Ġconfig", "_", "options", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "simple", "_", "strategy", "()", "Ġ{};", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġsize", "_", "t", "Ġget", "_", "replication", "_", "factor", "()", "Ġconst", "Ġoverride", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġvalidate", "_", "options", "()", "Ġconst", "Ġoverride", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġstd", "::", "experimental", "::", "optional", "<", "std", "::", "set", "<", "s", "string", ">>", "Ġrecognized", "_", "options", "()", "Ġconst", "Ġoverride", ";", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġsize", "_", "t", "Ġ_", "replication", "_", "factor", "Ġ=", "Ġ1", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::773", "code": "/**\n *\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include <memory>\n\n#include \"core/Core.h\"\n#include \"core/RepositoryFactory.h\"\n#include \"../TestBase.h\"\n\nTEST_CASE(\"NoRocksDBTest1\", \"[NoRocksDBTest]\") {\n  std::shared_ptr<core::Repository> prov_repo = core::createRepository(\"provenancerepository\", true);\n  REQUIRE(nullptr != prov_repo);\n}\n\nTEST_CASE(\"NoRocksDBTest2\", \"[NoRocksDBTest]\") {\n  std::shared_ptr<core::Repository> prov_repo = core::createRepository(\"flowfilerepository\", true);\n  REQUIRE(nullptr != prov_repo);\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġto", "Ġthe", "ĠApache", "ĠSoftware", "ĠFoundation", "Ġ(", "AS", "F", ")", "Ġunder", "Ġone", "Ġor", "Ġmore", "Ċ", "Ġ*", "Ġcontrib", "utor", "Ġlicense", "Ġag", "re", "em", "ents", ".", "Ġ", "ĠSee", "Ġthe", "ĠNOT", "ICE", "Ġfile", "Ġdistributed", "Ġwith", "Ċ", "Ġ*", "Ġthis", "Ġwork", "Ġfor", "Ġadditional", "Ġinformation", "Ġregarding", "Ġcopyright", "Ġownership", ".", "Ċ", "Ġ*", "ĠThe", "ĠAS", "F", "Ġlicenses", "Ġthis", "Ġfile", "Ġto", "ĠYou", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ċ", "Ġ*", "Ġ(", "the", "Ġ\"", "License", "\");", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ċ", "Ġ*", "Ġthe", "ĠLicense", ".", "Ġ", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "core", "/", "Core", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "Repository", "Factory", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "TestBase", ".", "h", "\"", "Ċ", "Ċ", "TEST", "_", "CASE", "(\"", "No", "Rock", "s", "DB", "Test", "1", "\",", "Ġ\"[", "No", "Rock", "s", "DB", "Test", "]\")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "core", "::", "Repository", ">", "Ġprov", "_", "repo", "Ġ=", "Ġcore", "::", "create", "Repository", "(\"", "pro", "venance", "repository", "\",", "Ġtrue", ");", "Ċ", "Ġ", "ĠREQUIRE", "(", "nullptr", "Ġ!=", "Ġprov", "_", "repo", ");", "Ċ", "}", "Ċ", "Ċ", "TEST", "_", "CASE", "(\"", "No", "Rock", "s", "DB", "Test", "2", "\",", "Ġ\"[", "No", "Rock", "s", "DB", "Test", "]\")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "core", "::", "Repository", ">", "Ġprov", "_", "repo", "Ġ=", "Ġcore", "::", "create", "Repository", "(\"", "flow", "file", "repository", "\",", "Ġtrue", ");", "Ċ", "Ġ", "ĠREQUIRE", "(", "nullptr", "Ġ!=", "Ġprov", "_", "repo", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::774", "code": "//  directory_symlink_parent_resolution.cpp  -------------------------------------------//\n\n//  Copyright Beman Dawes 2015\n\n//  Distributed under the Boost Software License, Version 1.0.\n//  See http://www.boost.org/LICENSE_1_0.txt\n\n//  Library home page: http://www.boost.org/libs/filesystem\n\n#include <boost/filesystem.hpp>\n#include <boost/filesystem/string_file.hpp>\n#include <boost/detail/lightweight_main.hpp>\n#include <iostream>\n#include <string>\n\nusing std::cout;\nusing std::endl;\nusing namespace boost::filesystem;\n\nint cpp_main(int argc, char* argv[])\n{\n#ifdef BOOST_WINDOWS_API\n    cout << \"BOOST_WINDOWS_API\" << endl;\n#else\n    cout << \"BOOST_POSIX_API\" << endl;\n#endif\n\n    path test_dir(current_path() / \"dspr_demo\");\n\n    remove_all(test_dir);\n    create_directories(test_dir / \"a/c/d\");\n    current_path(test_dir / \"a\");\n    create_directory_symlink(\"c/d\", \"b\");\n    save_string_file(\"name.txt\", \"Windows\");\n    save_string_file(\"c/name.txt\", \"POSIX\");\n    current_path(test_dir);\n    std::string s;\n    load_string_file(\"a/b/../name.txt\", s);\n    cout << s << endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ", "Ġdirectory", "_", "symlink", "_", "parent", "_", "resolution", ".", "cpp", "Ġ", "Ġ----------------------------------------", "---", "//", "Ċ", "Ċ", "//", "Ġ", "ĠCopyright", "ĠB", "em", "an", "ĠD", "aw", "es", "Ġ2015", "Ċ", "Ċ", "//", "Ġ", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "Ġ", "ĠSee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", "Ċ", "Ċ", "//", "Ġ", "ĠLibrary", "Ġhome", "Ġpage", ":", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "libs", "/", "filesystem", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "filesystem", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "filesystem", "/", "string", "_", "file", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "detail", "/", "light", "weight", "_", "main", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġstd", "::", "cout", ";", "Ċ", "using", "Ġstd", "::", "endl", ";", "Ċ", "using", "Ġnamespace", "Ġboost", "::", "filesystem", ";", "Ċ", "Ċ", "int", "Ġcpp", "_", "main", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ċ", "{", "Ċ", "#", "ifdef", "ĠBOOST", "_", "WINDOWS", "_", "API", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "BOOST", "_", "WINDOWS", "_", "API", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "#", "else", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "BOOST", "_", "POSIX", "_", "API", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "#", "endif", "Ċ", "Ċ", "ĠĠĠ", "Ġpath", "Ġtest", "_", "dir", "(", "current", "_", "path", "()", "Ġ/", "Ġ\"", "ds", "pr", "_", "demo", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġremove", "_", "all", "(", "test", "_", "dir", ");", "Ċ", "ĠĠĠ", "Ġcreate", "_", "directories", "(", "test", "_", "dir", "Ġ/", "Ġ\"", "a", "/", "c", "/", "d", "\");", "Ċ", "ĠĠĠ", "Ġcurrent", "_", "path", "(", "test", "_", "dir", "Ġ/", "Ġ\"", "a", "\");", "Ċ", "ĠĠĠ", "Ġcreate", "_", "directory", "_", "symlink", "(\"", "c", "/", "d", "\",", "Ġ\"", "b", "\");", "Ċ", "ĠĠĠ", "Ġsave", "_", "string", "_", "file", "(\"", "name", ".", "txt", "\",", "Ġ\"", "Windows", "\");", "Ċ", "ĠĠĠ", "Ġsave", "_", "string", "_", "file", "(\"", "c", "/", "name", ".", "txt", "\",", "Ġ\"", "POSIX", "\");", "Ċ", "ĠĠĠ", "Ġcurrent", "_", "path", "(", "test", "_", "dir", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "string", "Ġs", ";", "Ċ", "ĠĠĠ", "Ġload", "_", "string", "_", "file", "(\"", "a", "/", "b", "/", "../", "name", ".", "txt", "\",", "Ġs", ");", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġs", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::775", "code": "#if __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600)\n// OK\n#else\n#error \"C++11 is not supported\"\n#endif\n\nstatic int test() { return 0; }\n\nint main()\n{\n    auto res = test();\n    return res;\n}\n", "code_tokens": ["Ġ#", "if", "Ġ__", "c", "plus", "plus", "Ġ>=", "Ġ201", "103", "L", "Ġ||", "Ġ(", "defined", "(_", "MSC", "_", "VER", ")", "Ġ&&", "Ġ_", "MSC", "_", "VER", "Ġ>=", "Ġ16", "00", ")", "Ċ", "//", "ĠOK", "Ċ", "#", "else", "Ċ", "#", "error", "Ġ\"", "C", "++", "11", "Ġis", "Ġnot", "Ġsupported", "\"", "Ċ", "#", "endif", "Ċ", "Ċ", "static", "Ġint", "Ġtest", "()", "Ġ{", "Ġreturn", "Ġ0", ";", "Ġ}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġauto", "Ġres", "Ġ=", "Ġtest", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġres", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::776", "code": "/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n#include \"core/render/action/render_action_remove_element.h\"\n#include \"core/manager/weex_core_manager.h\"\n\nnamespace WeexCore {\n\nRenderActionRemoveElement::RenderActionRemoveElement(const std::string &page_id,\n                                                     const std::string &ref) {\n  this->page_id_ = page_id;\n  this->ref_ = ref;\n}\n\nvoid RenderActionRemoveElement::ExecuteAction() {\n  WeexCoreManager::Instance()\n      ->getPlatformBridge()\n      ->platform_side()\n      ->RemoveElement(this->page_id_.c_str(), this->ref_.c_str());\n}\n}  // namespace WeexCore\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġto", "Ġthe", "ĠApache", "ĠSoftware", "ĠFoundation", "Ġ(", "AS", "F", ")", "Ġunder", "Ġone", "Ċ", "Ġ*", "Ġor", "Ġmore", "Ġcontrib", "utor", "Ġlicense", "Ġag", "re", "em", "ents", ".", "Ġ", "ĠSee", "Ġthe", "ĠNOT", "ICE", "Ġfile", "Ċ", "Ġ*", "Ġdistributed", "Ġwith", "Ġthis", "Ġwork", "Ġfor", "Ġadditional", "Ġinformation", "Ċ", "Ġ*", "Ġregarding", "Ġcopyright", "Ġownership", ".", "Ġ", "ĠThe", "ĠAS", "F", "Ġlicenses", "Ġthis", "Ġfile", "Ċ", "Ġ*", "Ġto", "Ġyou", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ċ", "Ġ*", "Ġ\"", "License", "\");", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ċ", "Ġ*", "Ġwith", "Ġthe", "ĠLicense", ".", "Ġ", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ċ", "Ġ*", "Ġsoftware", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ċ", "Ġ*", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "Ċ", "Ġ*", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ġ", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ċ", "Ġ*", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ġlimitations", "Ċ", "Ġ*", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "core", "/", "render", "/", "action", "/", "render", "_", "action", "_", "remove", "_", "element", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "manager", "/", "weex", "_", "core", "_", "manager", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠWe", "ex", "Core", "Ġ{", "Ċ", "Ċ", "Render", "Action", "Remove", "Element", "::", "Render", "Action", "Remove", "Element", "(", "const", "Ġstd", "::", "string", "Ġ&", "page", "_", "id", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġ&", "ref", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "page", "_", "id", "_", "Ġ=", "Ġpage", "_", "id", ";", "Ċ", "Ġ", "Ġthis", "->", "ref", "_", "Ġ=", "Ġref", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRender", "Action", "Remove", "Element", "::", "Execute", "Action", "()", "Ġ{", "Ċ", "Ġ", "ĠWe", "ex", "Core", "Manager", "::", "Instance", "()", "Ċ", "ĠĠĠĠĠ", "Ġ->", "get", "Platform", "Bridge", "()", "Ċ", "ĠĠĠĠĠ", "Ġ->", "platform", "_", "side", "()", "Ċ", "ĠĠĠĠĠ", "Ġ->", "Remove", "Element", "(", "this", "->", "page", "_", "id", "_.", "c", "_", "str", "(),", "Ġthis", "->", "ref", "_.", "c", "_", "str", "());", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "ĠWe", "ex", "Core", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::777", "code": "#ifndef OSRM_PARTITIONER_INERTIAL_FLOW_HPP_\n#define OSRM_PARTITIONER_INERTIAL_FLOW_HPP_\n\n#include \"partitioner/bisection_graph_view.hpp\"\n#include \"partitioner/dinic_max_flow.hpp\"\n\nnamespace osrm\n{\nnamespace partitioner\n{\n\nDinicMaxFlow::MinCut computeInertialFlowCut(const BisectionGraphView &view,\n                                            const std::size_t num_slopes,\n                                            const double balance,\n                                            const double source_sink_rate);\n\n} // namespace partitioner\n} // namespace osrm\n\n#endif // OSRM_PARTITIONER_INERTIAL_FLOW_HPP_\n", "code_tokens": ["Ġ#", "ifndef", "ĠO", "SR", "M", "_", "PARTITION", "ER", "_", "IN", "ERT", "IAL", "_", "FLOW", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠO", "SR", "M", "_", "PARTITION", "ER", "_", "IN", "ERT", "IAL", "_", "FLOW", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ\"", "partition", "er", "/", "b", "ise", "ction", "_", "graph", "_", "view", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "partition", "er", "/", "d", "inic", "_", "max", "_", "flow", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġos", "rm", "Ċ", "{", "Ċ", "namespace", "Ġpartition", "er", "Ċ", "{", "Ċ", "Ċ", "D", "inic", "Max", "Flow", "::", "Min", "Cut", "Ġcompute", "In", "ert", "ial", "Flow", "Cut", "(", "const", "ĠB", "ise", "ction", "Graph", "View", "Ġ&", "view", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "size", "_", "t", "Ġnum", "_", "slope", "s", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġdouble", "Ġbalance", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġdouble", "Ġsource", "_", "sink", "_", "rate", ");", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġpartition", "er", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġos", "rm", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠO", "SR", "M", "_", "PARTITION", "ER", "_", "IN", "ERT", "IAL", "_", "FLOW", "_", "HP", "P", "_", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::778", "code": "// { dg-additional-options \"-fmodules-ts\" }\nexport module linkage;\n// { dg-module-cmi \"linkage\" }\n\ninline void Foo () {}\n\nexport inline void Baz () __attribute__((used));\n\ninline void Bink () {}\n\nexport inline void Baz () { Foo (); Bink (); }\n\nextern \"C\" inline void cfunc (void) __attribute__((used));\nextern \"C\" inline void cfunc (void) {}\n\nnamespace Inner\n{\n  inline void Foo2 () {}\n\n  export inline void Baz2 () __attribute__((used));\n\n  inline void Bink2 () {}\n  \n  export inline void Baz2 () { Foo2 (); Bink2 (); }\n}\n\n// These fail until namespace hack is removed\n// { dg-final { scan-assembler \"_ZW7linkageE3Foov:\" } }\n// { dg-final { scan-assembler \"_ZW7linkageE4Binkv:\" } }\n// { dg-final { scan-assembler \"_ZW7linkageEN5Inner4Foo2Ev:\" } }\n// { dg-final { scan-assembler \"_ZW7linkageEN5Inner5Bink2Ev:\" } }\n// { dg-final { scan-assembler \"_Z3Bazv:\" } }\n// { dg-final { scan-assembler \"_ZN5Inner4Baz2Ev:\" } }\n// { dg-final { scan-assembler \"cfunc:\" } }\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "additional", "-", "options", "Ġ\"-", "f", "modules", "-", "ts", "\"", "Ġ}", "Ċ", "export", "Ġmodule", "Ġlinkage", ";", "Ċ", "//", "Ġ{", "Ġdg", "-", "module", "-", "cm", "i", "Ġ\"", "link", "age", "\"", "Ġ}", "Ċ", "Ċ", "inline", "Ġvoid", "ĠFoo", "Ġ()", "Ġ{}", "Ċ", "Ċ", "export", "Ġinline", "Ġvoid", "ĠB", "az", "Ġ()", "Ġ__", "attribute", "__((", "used", "));", "Ċ", "Ċ", "inline", "Ġvoid", "ĠB", "ink", "Ġ()", "Ġ{}", "Ċ", "Ċ", "export", "Ġinline", "Ġvoid", "ĠB", "az", "Ġ()", "Ġ{", "ĠFoo", "Ġ();", "ĠB", "ink", "Ġ();", "Ġ}", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġinline", "Ġvoid", "Ġc", "func", "Ġ(", "void", ")", "Ġ__", "attribute", "__((", "used", "));", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġinline", "Ġvoid", "Ġc", "func", "Ġ(", "void", ")", "Ġ{}", "Ċ", "Ċ", "namespace", "ĠInner", "Ċ", "{", "Ċ", "Ġ", "Ġinline", "Ġvoid", "ĠFoo", "2", "Ġ()", "Ġ{}", "Ċ", "Ċ", "Ġ", "Ġexport", "Ġinline", "Ġvoid", "ĠB", "az", "2", "Ġ()", "Ġ__", "attribute", "__((", "used", "));", "Ċ", "Ċ", "Ġ", "Ġinline", "Ġvoid", "ĠB", "ink", "2", "Ġ()", "Ġ{}", "Ċ", "ĠĠĊ", "Ġ", "Ġexport", "Ġinline", "Ġvoid", "ĠB", "az", "2", "Ġ()", "Ġ{", "ĠFoo", "2", "Ġ();", "ĠB", "ink", "2", "Ġ();", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "//", "ĠThese", "Ġfail", "Ġuntil", "Ġnamespace", "Ġhack", "Ġis", "Ġremoved", "Ċ", "//", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "assembler", "Ġ\"_", "ZW", "7", "link", "age", "E", "3", "Foo", "v", ":\"", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "assembler", "Ġ\"_", "ZW", "7", "link", "age", "E", "4", "B", "ink", "v", ":\"", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "assembler", "Ġ\"_", "ZW", "7", "link", "age", "EN", "5", "Inner", "4", "Foo", "2", "Ev", ":\"", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "assembler", "Ġ\"_", "ZW", "7", "link", "age", "EN", "5", "Inner", "5", "B", "ink", "2", "Ev", ":\"", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "assembler", "Ġ\"_", "Z", "3", "Baz", "v", ":\"", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "assembler", "Ġ\"_", "ZN", "5", "Inner", "4", "Baz", "2", "Ev", ":\"", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "final", "Ġ{", "Ġscan", "-", "assembler", "Ġ\"", "c", "func", ":\"", "Ġ}", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::779", "code": "/*\n    Copyright © 2014-2019 by The qTox Project Contributors\n\n    This file is part of qTox, a Qt-based graphical interface for Tox.\n\n    qTox is libre software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    qTox is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with qTox.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include \"adjustingscrollarea.h\"\n\n#include <QDebug>\n#include <QEvent>\n#include <QLayout>\n#include <QScrollBar>\n\nAdjustingScrollArea::AdjustingScrollArea(QWidget* parent)\n    : QScrollArea(parent)\n{\n}\n\nvoid AdjustingScrollArea::resizeEvent(QResizeEvent* ev)\n{\n    int scrollBarWidth =\n        verticalScrollBar()->isVisible() ? verticalScrollBar()->sizeHint().width() : 0;\n\n    if (layoutDirection() == Qt::RightToLeft)\n        setViewportMargins(-scrollBarWidth, 0, 0, 0);\n\n    updateGeometry();\n    QScrollArea::resizeEvent(ev);\n}\n\nQSize AdjustingScrollArea::sizeHint() const\n{\n    if (widget()) {\n        int scrollbarWidth = verticalScrollBar()->isVisible() ? verticalScrollBar()->width() : 0;\n        return widget()->sizeHint() + QSize(scrollbarWidth, 0);\n    }\n\n    return QScrollArea::sizeHint();\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠĠ", "ĠCopyright", "ĠÂ", "©", "Ġ2014", "-", "2019", "Ġby", "ĠThe", "Ġq", "To", "x", "ĠProject", "ĠCon", "trib", "utors", "Ċ", "Ċ", "ĠĠĠ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġq", "To", "x", ",", "Ġa", "ĠQt", "-", "based", "Ġgraph", "ical", "Ġinterface", "Ġfor", "ĠTo", "x", ".", "Ċ", "Ċ", "ĠĠĠ", "Ġq", "To", "x", "Ġis", "Ġlib", "re", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĠĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĠĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠĠĠ", "Ġq", "To", "x", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠĠ", "Ġalong", "Ġwith", "Ġq", "To", "x", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "adjust", "ing", "sc", "rol", "lare", "a", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "#", "include", "Ġ<", "QEvent", ">", "Ċ", "#", "include", "Ġ<", "Q", "Layout", ">", "Ċ", "#", "include", "Ġ<", "Q", "ScrollBar", ">", "Ċ", "Ċ", "Adjust", "ing", "Scroll", "Area", "::", "Adjust", "ing", "Scroll", "Area", "(", "QWidget", "*", "Ġparent", ")", "Ċ", "ĠĠĠ", "Ġ:", "ĠQ", "Scroll", "Area", "(", "parent", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAdjust", "ing", "Scroll", "Area", "::", "resize", "Event", "(", "Q", "Resize", "Event", "*", "Ġev", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġscroll", "Bar", "Width", "Ġ=", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvertical", "ScrollBar", "()->", "isVisible", "()", "Ġ?", "Ġvertical", "ScrollBar", "()->", "size", "Hint", "().", "width", "()", "Ġ:", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "layout", "Direction", "()", "Ġ==", "ĠQt", "::", "RightToLeft", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġset", "Viewport", "Margins", "(-", "scroll", "Bar", "Width", ",", "Ġ0", ",", "Ġ0", ",", "Ġ0", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġupdate", "Geometry", "();", "Ċ", "ĠĠĠ", "ĠQ", "Scroll", "Area", "::", "resize", "Event", "(", "ev", ");", "Ċ", "}", "Ċ", "Ċ", "QSize", "ĠAdjust", "ing", "Scroll", "Area", "::", "size", "Hint", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "widget", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġscrollbar", "Width", "Ġ=", "Ġvertical", "ScrollBar", "()->", "isVisible", "()", "Ġ?", "Ġvertical", "ScrollBar", "()->", "width", "()", "Ġ:", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġwidget", "()->", "size", "Hint", "()", "Ġ+", "ĠQSize", "(", "scrollbarWidth", ",", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "ĠQ", "Scroll", "Area", "::", "size", "Hint", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::780", "code": "// Copyright 2019-2020 CERN and copyright holders of ALICE O2.\n// See https://alice-o2.web.cern.ch/copyright for details of the copyright holders.\n// All rights not expressly granted are reserved.\n//\n// This software is distributed under the terms of the GNU General Public\n// License v3 (GPL Version 3), copied verbatim in the file \"COPYING\".\n//\n// In applying this license CERN does not waive the privileges and immunities\n// granted to it by virtue of its status as an Intergovernmental Organization\n// or submit itself to any jurisdiction.\n\n#if !defined(__CLING__) || defined(__ROOTCLING__)\n#include <iostream>\n#include \"FairBoxGenerator.h\"\n#endif\n\nFairGenerator* fixedEnergyPionGun(double energy)\n{\n  std::cout << \"Single electron generator shooting at EMCAL with Energy \" << energy << \"GeV/c\" << std::endl;\n  auto elecgen = new FairBoxGenerator(211, 1);\n  elecgen->SetEtaRange(-0.67, 0.67);\n  elecgen->SetPhiRange(90, 340);\n  elecgen->SetPRange(energy, energy);\n  return elecgen;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ201", "9", "-", "2020", "ĠC", "ER", "N", "Ġand", "Ġcopyright", "Ġhold", "ers", "Ġof", "ĠAL", "ICE", "ĠO", "2", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "alice", "-", "o", "2", ".", "web", ".", "cern", ".", "ch", "/", "copyright", "Ġfor", "Ġdetails", "Ġof", "Ġthe", "Ġcopyright", "Ġhold", "ers", ".", "Ċ", "//", "ĠAll", "Ġrights", "Ġnot", "Ġexpress", "ly", "Ġgranted", "Ġare", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġsoftware", "Ġis", "Ġdistributed", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "Ċ", "//", "ĠLicense", "Ġv", "3", "Ġ(", "G", "PL", "ĠVersion", "Ġ3", "),", "Ġcopied", "Ġver", "batim", "Ġin", "Ġthe", "Ġfile", "Ġ\"", "COPY", "ING", "\".", "Ċ", "//", "Ċ", "//", "ĠIn", "Ġapplying", "Ġthis", "Ġlicense", "ĠC", "ER", "N", "Ġdoes", "Ġnot", "Ġwa", "ive", "Ġthe", "Ġprivileges", "Ġand", "Ġimm", "unities", "Ċ", "//", "Ġgranted", "Ġto", "Ġit", "Ġby", "Ġvirt", "ue", "Ġof", "Ġits", "Ġstatus", "Ġas", "Ġan", "ĠInter", "gover", "n", "ment", "al", "ĠOrganization", "Ċ", "//", "Ġor", "Ġsubmit", "Ġitself", "Ġto", "Ġany", "Ġj", "uris", "d", "iction", ".", "Ċ", "Ċ", "#", "if", "Ġ!", "defined", "(__", "CL", "ING", "__)", "Ġ||", "Ġdefined", "(__", "ROOT", "CL", "ING", "__)", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ\"", "F", "air", "Box", "Generator", ".", "h", "\"", "Ċ", "#", "endif", "Ċ", "Ċ", "F", "air", "Generator", "*", "Ġfixed", "Energy", "P", "ion", "Gun", "(", "double", "Ġenergy", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Single", "Ġelect", "ron", "Ġgenerator", "Ġsh", "oot", "ing", "Ġat", "ĠE", "MC", "AL", "Ġwith", "ĠEn", "ergy", "Ġ\"", "Ġ<<", "Ġenergy", "Ġ<<", "Ġ\"", "Ge", "V", "/", "c", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ġ", "Ġauto", "Ġele", "c", "gen", "Ġ=", "Ġnew", "ĠF", "air", "Box", "Generator", "(", "211", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġele", "c", "gen", "->", "Set", "E", "ta", "Range", "(-", "0", ".", "67", ",", "Ġ0", ".", "67", ");", "Ċ", "Ġ", "Ġele", "c", "gen", "->", "Set", "Phi", "Range", "(", "90", ",", "Ġ3", "40", ");", "Ċ", "Ġ", "Ġele", "c", "gen", "->", "Set", "PR", "ange", "(", "energy", ",", "Ġenergy", ");", "Ċ", "Ġ", "Ġreturn", "Ġele", "c", "gen", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::781", "code": "// t0255.cc\n// demonstrate two ambiguities that require a merge() after\n// I allowed \"template\" in TemplateId ...\n\ntemplate <class T>\nclass A {};\n\ntemplate <class T>\nA<T>& foo(T)\n{ }\n\n\ntemplate class A<char>;\ntemplate class A<int>;\n\n// requires merge of SimpleDeclaration\n// this is gnu-specific it seems, and is tested in gnu/g0002.cc\n//extern template\n//A<char>& foo(char);\n\n// requires merge of Declaration\ntemplate\nA<int>& foo(int);\n", "code_tokens": ["Ġ//", "Ġt", "02", "55", ".", "cc", "Ċ", "//", "Ġdemonstr", "ate", "Ġtwo", "Ġamb", "igu", "ities", "Ġthat", "Ġrequire", "Ġa", "Ġmerge", "()", "Ġafter", "Ċ", "//", "ĠI", "Ġallowed", "Ġ\"", "template", "\"", "Ġin", "ĠTemplate", "Id", "Ġ...", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "class", "ĠA", "Ġ{};", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "A", "<", "T", ">&", "Ġfoo", "(", "T", ")", "Ċ", "{", "Ġ}", "Ċ", "Ċ", "Ċ", "template", "Ġclass", "ĠA", "<", "char", ">;", "Ċ", "template", "Ġclass", "ĠA", "<", "int", ">;", "Ċ", "Ċ", "//", "Ġrequires", "Ġmerge", "Ġof", "ĠSimple", "Declaration", "Ċ", "//", "Ġthis", "Ġis", "Ġg", "nu", "-", "specific", "Ġit", "Ġseems", ",", "Ġand", "Ġis", "Ġtested", "Ġin", "Ġg", "nu", "/", "g", "0002", ".", "cc", "Ċ", "//", "extern", "Ġtemplate", "Ċ", "//", "A", "<", "char", ">&", "Ġfoo", "(", "char", ");", "Ċ", "Ċ", "//", "Ġrequires", "Ġmerge", "Ġof", "ĠDeclaration", "Ċ", "template", "Ċ", "A", "<", "int", ">&", "Ġfoo", "(", "int", ");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::782", "code": "\n//          Copyright Oliver Kowalke 2009.\n// Distributed under the Boost Software License, Version 1.0.\n//    (See accompanying file LICENSE_1_0.txt or copy at\n//          http://www.boost.org/LICENSE_1_0.txt)\n\n#include <cstdlib>\n#include <iostream>\n\n#include <boost/bind.hpp>\n#include <boost/coroutine/all.hpp>\n\ntypedef boost::coroutines::coroutine< void() > coroutine_t;\n\nvoid first( coroutine_t::caller_type & self)\n{\n    std::cout << \"started first! \";\n    for ( int i = 0; i < 10; ++i)\n    {\n        self();\n        std::cout << \"a\" << i;\n    }\n}\n\nvoid second( coroutine_t::caller_type & self)\n{\n    std::cout << \"started second! \";\n    for ( int i = 0; i < 10; ++i)\n    {\n        self();\n        std::cout << \"b\" << i;\n    }\n}\n\nint main( int argc, char * argv[])\n{\n    {\n        coroutine_t c1( boost::bind( first, _1) );\n        coroutine_t c2( boost::bind( second, _1) );\n        while ( c1 && c2) {\n            c1();\n            std::cout << \" \";\n            c2();\n            std::cout << \" \";\n        }\n    }\n\n    std::cout << \"\\nDone\" << std::endl;\n\n    return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ċ", "//", "ĠĠĠĠĠĠĠĠĠ", "ĠCopyright", "ĠO", "li", "ver", "ĠK", "ow", "al", "ke", "Ġ2009", ".", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "ĠĠĠ", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "bind", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "coroutine", "/", "all", ".", "hpp", ">", "Ċ", "Ċ", "typedef", "Ġboost", "::", "cor", "outines", "::", "coroutine", "<", "Ġvoid", "()", "Ġ>", "Ġcoroutine", "_", "t", ";", "Ċ", "Ċ", "void", "Ġfirst", "(", "Ġcoroutine", "_", "t", "::", "caller", "_", "type", "Ġ&", "Ġself", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "started", "Ġfirst", "!", "Ġ\";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ10", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġself", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "a", "\"", "Ġ<<", "Ġi", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsecond", "(", "Ġcoroutine", "_", "t", "::", "caller", "_", "type", "Ġ&", "Ġself", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "started", "Ġsecond", "!", "Ġ\";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ10", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġself", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "b", "\"", "Ġ<<", "Ġi", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġargc", ",", "Ġchar", "Ġ*", "Ġargv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcoroutine", "_", "t", "Ġc", "1", "(", "Ġboost", "::", "bind", "(", "Ġfirst", ",", "Ġ_", "1", ")", "Ġ);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcoroutine", "_", "t", "Ġc", "2", "(", "Ġboost", "::", "bind", "(", "Ġsecond", ",", "Ġ_", "1", ")", "Ġ);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "Ġc", "1", "Ġ&&", "Ġc", "2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "1", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "2", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Ġ\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"\\", "n", "Done", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "ĠEXIT", "_", "SUCCESS", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::783", "code": "// 'mutable' keyword\n// BZ_MUTABLE\n\nclass num {\n\npublic:\n   num(int z)\n   { \n       x_ = z; \n       numReads_ = 0;\n   }\n\n   void set(int z)\n   { x_ = z; }\n\n   int get() const\n   { \n       ++numReads_;\n       return x_;\n   }\n\nprivate:\n   int x_;\n   mutable int numReads_;\n};\n\nint main()\n{\n   num q(4);\n   q.set(5);\n   int k = q.get();\n   q.get();\n   return 0;\n}\n\n", "code_tokens": ["Ġ//", "Ġ'", "mutable", "'", "Ġkeyword", "Ċ", "//", "ĠBZ", "_", "MUT", "ABLE", "Ċ", "Ċ", "class", "Ġnum", "Ġ{", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠ", "Ġnum", "(", "int", "Ġz", ")", "Ċ", "ĠĠ", "Ġ{", "ĠĊ", "ĠĠĠĠĠĠ", "Ġx", "_", "Ġ=", "Ġz", ";", "ĠĊ", "ĠĠĠĠĠĠ", "Ġnum", "Reads", "_", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠ", "Ġvoid", "Ġset", "(", "int", "Ġz", ")", "Ċ", "ĠĠ", "Ġ{", "Ġx", "_", "Ġ=", "Ġz", ";", "Ġ}", "Ċ", "Ċ", "ĠĠ", "Ġint", "Ġget", "()", "Ġconst", "Ċ", "ĠĠ", "Ġ{", "ĠĊ", "ĠĠĠĠĠĠ", "Ġ++", "num", "Reads", "_;", "Ċ", "ĠĠĠĠĠĠ", "Ġreturn", "Ġx", "_;", "Ċ", "ĠĠ", "Ġ}", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠ", "Ġint", "Ġx", "_;", "Ċ", "ĠĠ", "Ġmutable", "Ġint", "Ġnum", "Reads", "_;", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠ", "Ġnum", "Ġq", "(", "4", ");", "Ċ", "ĠĠ", "Ġq", ".", "set", "(", "5", ");", "Ċ", "ĠĠ", "Ġint", "Ġk", "Ġ=", "Ġq", ".", "get", "();", "Ċ", "ĠĠ", "Ġq", ".", "get", "();", "Ċ", "ĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::784", "code": "#include <sys/types.h>\n\n#include <time.h>\n\n#ifdef WINDOWS\n#include <winsock2.h>\n\n#else\n#include <sys/socket.h>\n#include <sys/time.h>\n#include <unistd.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#endif\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\n#include \"peerlist.h\"\n#include \"tracker.h\"\n#include \"btcontent.h\"\n\nvoid Downloader()\n{\n  int nfds,maxfd,r;\n  struct timeval timeout;\n  time_t now;\n  fd_set rfd;\n  fd_set wfd;\n\n  for(;;){\n    time(&now);\n    if( BTCONTENT.SeedTimeout(&now) ) break;\n    \n    FD_ZERO(&rfd); FD_ZERO(&wfd);\n    maxfd = Tracker.IntervalCheck(&now,&rfd, &wfd);\n    r = WORLD.FillFDSET(&now,&rfd,&wfd);\n    if( r > maxfd ) maxfd = r;\n\n    timeout.tv_sec = 2;\n    timeout.tv_usec = 0;\n\n    nfds = select(maxfd + 1,&rfd,&wfd,(fd_set*) 0,&timeout);\n\n    if(nfds > 0){\n      if(T_FREE != Tracker.GetStatus()) Tracker.SocketReady(&rfd,&wfd,&nfds);\n      if( nfds ) WORLD.AnyPeerReady(&rfd,&wfd,&nfds);\n    }\n  }/* end for(;;) */\n  // clean \n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "sys", "/", "types", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "time", ".", "h", ">", "Ċ", "Ċ", "#", "ifdef", "ĠWINDO", "WS", "Ċ", "#", "include", "Ġ<", "wins", "ock", "2", ".", "h", ">", "Ċ", "Ċ", "#", "else", "Ċ", "#", "include", "Ġ<", "sys", "/", "socket", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "time", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "net", "inet", "/", "in", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "ar", "pa", "/", "inet", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ\"", "peer", "list", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "tracker", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "bt", "content", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠDown", "loader", "()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġnfds", ",", "max", "fd", ",", "r", ";", "Ċ", "Ġ", "Ġstruct", "Ġtimeval", "Ġtimeout", ";", "Ċ", "Ġ", "Ġtime", "_", "t", "Ġnow", ";", "Ċ", "Ġ", "Ġfd", "_", "set", "Ġr", "fd", ";", "Ċ", "Ġ", "Ġfd", "_", "set", "Ġwfd", ";", "Ċ", "Ċ", "Ġ", "Ġfor", "(;", ";){", "Ċ", "ĠĠĠ", "Ġtime", "(&", "now", ");", "Ċ", "ĠĠĠ", "Ġif", "(", "ĠBT", "CONTENT", ".", "Seed", "Timeout", "(&", "now", ")", "Ġ)", "Ġbreak", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "ĠFD", "_", "ZERO", "(&", "rfd", ");", "ĠFD", "_", "ZERO", "(&", "wfd", ");", "Ċ", "ĠĠĠ", "Ġmax", "fd", "Ġ=", "ĠTracker", ".", "Interval", "Check", "(&", "now", ",&", "rfd", ",", "Ġ&", "wfd", ");", "Ċ", "ĠĠĠ", "Ġr", "Ġ=", "ĠW", "OR", "LD", ".", "Fill", "FD", "SET", "(&", "now", ",&", "rfd", ",&", "wfd", ");", "Ċ", "ĠĠĠ", "Ġif", "(", "Ġr", "Ġ>", "Ġmax", "fd", "Ġ)", "Ġmax", "fd", "Ġ=", "Ġr", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġtimeout", ".", "tv", "_", "sec", "Ġ=", "Ġ2", ";", "Ċ", "ĠĠĠ", "Ġtimeout", ".", "tv", "_", "usec", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġnfds", "Ġ=", "Ġselect", "(", "max", "fd", "Ġ+", "Ġ1", ",&", "rfd", ",&", "wfd", ",(", "fd", "_", "set", "*)", "Ġ0", ",&", "timeout", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "(", "nfds", "Ġ>", "Ġ0", "){", "Ċ", "ĠĠĠĠĠ", "Ġif", "(", "T", "_", "FREE", "Ġ!=", "ĠTracker", ".", "GetStatus", "())", "ĠTracker", ".", "Socket", "Ready", "(&", "rfd", ",&", "wfd", ",&", "nfds", ");", "Ċ", "ĠĠĠĠĠ", "Ġif", "(", "Ġnfds", "Ġ)", "ĠW", "OR", "LD", ".", "Any", "Peer", "Ready", "(&", "rfd", ",&", "wfd", ",&", "nfds", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "/*", "Ġend", "Ġfor", "(;;)", "Ġ*/", "Ċ", "Ġ", "Ġ//", "Ġclean", "Ġ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::785", "code": "// IBreakResponse.hh\n//\n// Copyright (C) 2002 - 2007 Rob Caelers <robc@krandor.nl>\n// All rights reserved.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n//\n\n#ifndef IBREAKRESPONSE_HH\n#define IBREAKRESPONSE_HH\n\n#include \"ICore.hh\"\n\nnamespace workrave\n{\n  //! User response for a break.\n  class IBreakResponse\n  {\n  public:\n    virtual ~IBreakResponse() {}\n\n    //! Request to postpone the break.\n    virtual void postpone_break(BreakId break_id) = 0;\n\n    //! Request to skip the break.\n    virtual void skip_break(BreakId break_id) = 0;\n  };\n}\n\n#endif // IBREAKRESPONSE_HH\n", "code_tokens": ["Ġ//", "ĠI", "Break", "Response", ".", "hh", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ200", "2", "Ġ-", "Ġ2007", "ĠRob", "ĠC", "ael", "ers", "Ġ<", "ro", "bc", "@", "k", "rand", "or", ".", "nl", ">", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠIB", "REAK", "RESPONSE", "_", "HH", "Ċ", "#", "define", "ĠIB", "REAK", "RESPONSE", "_", "HH", "Ċ", "Ċ", "#", "include", "Ġ\"", "IC", "ore", ".", "hh", "\"", "Ċ", "Ċ", "namespace", "Ġwork", "ra", "ve", "Ċ", "{", "Ċ", "Ġ", "Ġ//!", "ĠUser", "Ġresponse", "Ġfor", "Ġa", "Ġbreak", ".", "Ċ", "Ġ", "Ġclass", "ĠI", "Break", "Response", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "IB", "reak", "Response", "()", "Ġ{}", "Ċ", "Ċ", "ĠĠĠ", "Ġ//!", "ĠRequest", "Ġto", "Ġpost", "p", "one", "Ġthe", "Ġbreak", ".", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġpost", "p", "one", "_", "break", "(", "Break", "Id", "Ġbreak", "_", "id", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//!", "ĠRequest", "Ġto", "Ġskip", "Ġthe", "Ġbreak", ".", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġskip", "_", "break", "(", "Break", "Id", "Ġbreak", "_", "id", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠIB", "REAK", "RESPONSE", "_", "HH", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::786", "code": "#include <iostream>\n\n\nint main(int argc, char** argv)\n{\n    std::cout << \"Oh hai!\" << std::endl;\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Oh", "Ġh", "ai", "!\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::787", "code": "//  (C) Copyright Gennadiy Rozental 2001-2008.\r\n//  Distributed under the Boost Software License, Version 1.0.\r\n//  (See accompanying file LICENSE_1_0.txt or copy at \r\n//  http://www.boost.org/LICENSE_1_0.txt)\r\n\r\n//  See http://www.boost.org/libs/test for the library home page.\r\n\r\n// Boost.Runtime.Param\r\n#include <boost/test/utils/runtime/env/variable.hpp>\r\n#include <boost/test/utils/basic_cstring/io.hpp>\r\n\r\nnamespace rt  = boost::runtime;\r\nnamespace env = boost::runtime::env;\r\n\r\n// STL\r\n#include <iostream>\r\n\r\nint main() {\r\n    std::cout << env::get<int>(\"NUMBER_OF_PROCESSORS\") << '\\n' << env::get<rt::cstring>(\"TEMP\") << std::endl;\r\n\r\n    boost::optional<int> n;\r\n\r\n    env::get( \"NUMBER_OF_PROCESSORS\", n );\r\n\r\n    if( n )\r\n        std::cout << n << std::endl;\r\n\r\n    return 0;\r\n}\r\n\r\n// EOF\r\n\r\n", "code_tokens": ["Ġ//", "Ġ", "Ġ(", "C", ")", "ĠCopyright", "ĠGen", "n", "ad", "iy", "ĠRo", "z", "ent", "al", "Ġ200", "1", "-", "2008", ".", "č", "Ċ", "//", "Ġ", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "č", "Ċ", "//", "Ġ", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġ", "č", "Ċ", "//", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "č", "Ċ", "č", "Ċ", "//", "Ġ", "ĠSee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "libs", "/", "test", "Ġfor", "Ġthe", "Ġlibrary", "Ġhome", "Ġpage", ".", "č", "Ċ", "č", "Ċ", "//", "ĠBo", "ost", ".", "Runtime", ".", "Param", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "utils", "/", "runtime", "/", "env", "/", "variable", ".", "hpp", ">", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "utils", "/", "basic", "_", "cstring", "/", "io", ".", "hpp", ">", "č", "Ċ", "č", "Ċ", "namespace", "Ġrt", "Ġ", "Ġ=", "Ġboost", "::", "runtime", ";", "č", "Ċ", "namespace", "Ġenv", "Ġ=", "Ġboost", "::", "runtime", "::", "env", ";", "č", "Ċ", "č", "Ċ", "//", "ĠST", "L", "č", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġenv", "::", "get", "<", "int", ">(\"", "NUMBER", "_", "OF", "_", "PROCESS", "ORS", "\")", "Ġ<<", "Ġ'\\", "n", "'", "Ġ<<", "Ġenv", "::", "get", "<", "rt", "::", "cstring", ">(\"", "TEMP", "\")", "Ġ<<", "Ġstd", "::", "endl", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġboost", "::", "optional", "<", "int", ">", "Ġn", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġenv", "::", "get", "(", "Ġ\"", "NUMBER", "_", "OF", "_", "PROCESS", "ORS", "\",", "Ġn", "Ġ);", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġif", "(", "Ġn", "Ġ)", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġn", "Ġ<<", "Ġstd", "::", "endl", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//", "ĠEOF", "č", "Ċ", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::788", "code": "/*\n * Simulator of microcontrollers (simavr.cc)\n *\n * Copyright (C) 1999,99 Drotos Daniel, Talker Bt.\n * \n * To contact author send email to drdani@mazsola.iit.uni-miskolc.hu\n *\n */\n\n/* This file is part of microcontroller simulator: ucsim.\n\nUCSIM is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nUCSIM is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with UCSIM; see the file COPYING.  If not, write to the Free\nSoftware Foundation, 59 Temple Place - Suite 330, Boston, MA\n02111-1307, USA. */\n/*@1@*/\n\n\n//#include <ctype.h>\n\n// sim.src\n#include \"appcl.h\"\n\n// local\n#include \"simavrcl.h\"\n#include \"avrcl.h\"\n\n\ncl_simavr::cl_simavr(class cl_app *the_app):\n  cl_sim(the_app)\n{}\n\nclass cl_uc *\ncl_simavr::mk_controller(void)\n{\n  return(new cl_avr(this));\n}\n\n\n/* End of avr.src/simavr.cc */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠSim", "ulator", "Ġof", "Ġmicro", "controllers", "Ġ(", "sim", "avr", ".", "cc", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ1", "999", ",", "99", "ĠD", "ro", "tos", "ĠD", "ani", "el", ",", "ĠTalk", "er", "ĠB", "t", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠTo", "Ġcontact", "Ġauthor", "Ġsend", "Ġemail", "Ġto", "Ġd", "rd", "ani", "@", "ma", "z", "sol", "a", ".", "i", "it", ".", "uni", "-", "m", "isk", "ol", "c", ".", "hu", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "/*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġmicro", "controller", "Ġsimulator", ":", "Ġucs", "im", ".", "Ċ", "Ċ", "UC", "SIM", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "UC", "SIM", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "but", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "MER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "GNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "al", "ong", "Ġwith", "ĠU", "C", "SIM", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "Ċ", "Software", "ĠFoundation", ",", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ċ", "02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ġ*/", "Ċ", "/*", "@", "1", "@", "*/", "Ċ", "Ċ", "Ċ", "//#", "include", "Ġ<", "ctype", ".", "h", ">", "Ċ", "Ċ", "//", "Ġsim", ".", "src", "Ċ", "#", "include", "Ġ\"", "app", "cl", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġlocal", "Ċ", "#", "include", "Ġ\"", "sim", "avr", "cl", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "avr", "cl", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "cl", "_", "sim", "avr", "::", "cl", "_", "sim", "avr", "(", "class", "Ġcl", "_", "app", "Ġ*", "the", "_", "app", "):", "Ċ", "Ġ", "Ġcl", "_", "sim", "(", "the", "_", "app", ")", "Ċ", "{}", "Ċ", "Ċ", "class", "Ġcl", "_", "uc", "Ġ*", "Ċ", "cl", "_", "sim", "avr", "::", "mk", "_", "controller", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "(", "new", "Ġcl", "_", "avr", "(", "this", "));", "Ċ", "}", "Ċ", "Ċ", "Ċ", "/*", "ĠEnd", "Ġof", "Ġav", "r", ".", "src", "/", "sim", "avr", ".", "cc", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::789", "code": "// FRAGMENT(header)\n#include <fstream>\n#include <iostream>\n\n#include <seqan/basic.h>\n#include <seqan/file.h>\n\n#include <seqan/stream.h>\n#include <seqan/seq_io.h>\n\nusing namespace seqan;\n\nint main(int argc, char const ** argv)\n{\n    if (argc != 2)\n    {\n        std::cerr << \"ERROR: Invalid argument count.\" << std::endl\n                  << \"USAGE: \" << argv[0] << \" FILE\" << std::endl;\n        return 1;\n    }\n    \n// FRAGMENT(read-sequences)\n    // Open file and create RecordReader.\n    std::ifstream fasta(argv[1], std::ios_base::in | std::ios_base::binary);\n    if (!fasta.good())\n        return 1;\n    RecordReader<std::ifstream, SinglePass<> > reader(fasta);\n    \n    // Define variables for storing the sequences and sequence ids.\n    CharString id;\n    Dna5String seq;\n    // Read FASTA file and output \"$id\\t$seq\".\n    while (!atEnd(reader))\n    {\n        if (readRecord(id, seq, reader, Fasta()) != 0)\n        {\n            std::cerr << \"ERROR reading FASTA.\" << std::endl;\n            return 1;\n        }\n        std::cout << id << \"\\t\" << seq << \"\\n\";\n    }\n\n// FRAGMENT(footer)    \n    return 0;\n}\n", "code_tokens": ["Ġ//", "ĠFR", "AG", "MENT", "(", "header", ")", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "basic", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "stream", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "seq", "_", "io", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġconst", "Ġ**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "argc", "Ġ!=", "Ġ2", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "ERROR", ":", "ĠInvalid", "Ġargument", "Ġcount", ".\"", "Ġ<<", "Ġstd", "::", "endl", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ<<", "Ġ\"", "USAGE", ":", "Ġ\"", "Ġ<<", "Ġargv", "[", "0", "]", "Ġ<<", "Ġ\"", "ĠFILE", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠ", "Ċ", "//", "ĠFR", "AG", "MENT", "(", "read", "-", "sequences", ")", "Ċ", "ĠĠĠ", "Ġ//", "ĠOpen", "Ġfile", "Ġand", "Ġcreate", "ĠRecord", "Reader", ".", "Ċ", "ĠĠĠ", "Ġstd", "::", "ifstream", "Ġfast", "a", "(", "argv", "[", "1", "],", "Ġstd", "::", "ios", "_", "base", "::", "in", "Ġ|", "Ġstd", "::", "ios", "_", "base", "::", "binary", ");", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "fasta", ".", "good", "())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠ", "ĠRecord", "Reader", "<", "std", "::", "ifstream", ",", "ĠSingle", "Pass", "<>", "Ġ>", "Ġreader", "(", "fasta", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ//", "ĠDefine", "Ġvariables", "Ġfor", "Ġstoring", "Ġthe", "Ġsequences", "Ġand", "Ġsequence", "Ġids", ".", "Ċ", "ĠĠĠ", "ĠChar", "String", "Ġid", ";", "Ċ", "ĠĠĠ", "ĠD", "na", "5", "String", "Ġseq", ";", "Ċ", "ĠĠĠ", "Ġ//", "ĠRead", "ĠFAST", "A", "Ġfile", "Ġand", "Ġoutput", "Ġ\"$", "id", "\\", "t", "$", "seq", "\".", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(!", "at", "End", "(", "reader", "))", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "read", "Record", "(", "id", ",", "Ġseq", ",", "Ġreader", ",", "ĠFast", "a", "())", "Ġ!=", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "ERROR", "Ġreading", "ĠFAST", "A", ".\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġid", "Ġ<<", "Ġ\"\\", "t", "\"", "Ġ<<", "Ġseq", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "//", "ĠFR", "AG", "MENT", "(", "footer", ")", "ĠĠĠĠĊ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::790", "code": "/*\n *             Copyright Andrey Semashev 2018.\n * Distributed under the Boost Software License, Version 1.0.\n *    (See accompanying file LICENSE_1_0.txt or copy at\n *          http://www.boost.org/LICENSE_1_0.txt)\n */\n/*!\n * \\file   overlapped_abi.cpp\n * \\author Andrey Semashev\n * \\date   10.03.2018\n *\n * \\brief  This file contains ABI test for overlapped.hpp\n */\n\n#include <boost/winapi/overlapped.hpp>\n#include <windows.h>\n#include \"abi_test_tools.hpp\"\n\nint main()\n{\n    BOOST_WINAPI_TEST_STRUCT(OVERLAPPED, (Offset)(OffsetHigh)(Pointer)(hEvent));\n\n    return boost::report_errors();\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠCopyright", "ĠAnd", "rey", "ĠSem", "as", "hev", "Ġ201", "8", ".", "Ċ", "Ġ*", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "Ġ*", "ĠĠĠ", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ġ*/", "Ċ", "/*!", "Ċ", "Ġ*", "Ġ\\", "file", "ĠĠ", "Ġoverlapped", "_", "abi", ".", "cpp", "Ċ", "Ġ*", "Ġ\\", "author", "ĠAnd", "rey", "ĠSem", "as", "hev", "Ċ", "Ġ*", "Ġ\\", "date", "ĠĠ", "Ġ10", ".", "03", ".", "2018", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ\\", "brief", "Ġ", "ĠThis", "Ġfile", "Ġcontains", "ĠABI", "Ġtest", "Ġfor", "Ġoverlapped", ".", "hpp", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "win", "api", "/", "overlapped", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "windows", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "abi", "_", "test", "_", "tools", ".", "hpp", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "WIN", "API", "_", "TEST", "_", "STRUCT", "(", "OVER", "LA", "PP", "ED", ",", "Ġ(", "Offset", ")(", "Offset", "High", ")(", "Pointer", ")(", "h", "Event", "));", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġboost", "::", "report", "_", "errors", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::791", "code": "/*\n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n/*\n  Base class for serial rangefinders\n*/\n\n#include \"SIM_SerialRangeFinder.h\"\n\nusing namespace SITL;\n\nvoid SerialRangeFinder::update(float range)\n{\n    // just send a chunk of data at 5Hz:\n    const uint32_t now = AP_HAL::millis();\n    if (now - last_sent_ms < reading_interval_ms()) {\n        return;\n    }\n    last_sent_ms = now;\n\n    const uint16_t range_cm = uint16_t(range*100);\n    uint8_t data[255];\n    const uint32_t packetlen = packet_for_alt(range_cm,\n                                              data,\n                                              ARRAY_SIZE(data));\n\n    write_to_autopilot((char*)data, packetlen);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "/*", "Ċ", "Ġ", "ĠBase", "Ġclass", "Ġfor", "Ġserial", "Ġrange", "find", "ers", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "SIM", "_", "Serial", "Range", "Finder", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠS", "IT", "L", ";", "Ċ", "Ċ", "void", "ĠSerial", "Range", "Finder", "::", "update", "(", "float", "Ġrange", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġjust", "Ġsend", "Ġa", "Ġchunk", "Ġof", "Ġdata", "Ġat", "Ġ5", "Hz", ":", "Ċ", "ĠĠĠ", "Ġconst", "Ġuint", "32", "_", "t", "Ġnow", "Ġ=", "ĠAP", "_", "HAL", "::", "millis", "();", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "now", "Ġ-", "Ġlast", "_", "sent", "_", "ms", "Ġ<", "Ġreading", "_", "interval", "_", "ms", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġlast", "_", "sent", "_", "ms", "Ġ=", "Ġnow", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġconst", "Ġuint", "16", "_", "t", "Ġrange", "_", "cm", "Ġ=", "Ġuint", "16", "_", "t", "(", "range", "*", "100", ");", "Ċ", "ĠĠĠ", "Ġuint", "8", "_", "t", "Ġdata", "[", "255", "];", "Ċ", "ĠĠĠ", "Ġconst", "Ġuint", "32", "_", "t", "Ġpacket", "len", "Ġ=", "Ġpacket", "_", "for", "_", "alt", "(", "range", "_", "cm", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdata", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠARRAY", "_", "SIZE", "(", "data", "));", "Ċ", "Ċ", "ĠĠĠ", "Ġwrite", "_", "to", "_", "autop", "i", "lot", "((", "char", "*)", "data", ",", "Ġpacket", "len", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::792", "code": "//===----------------------------------------------------------------------===//\n//\n// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n//\n//===----------------------------------------------------------------------===//\n\n// <iomanip>\n\n// quoted\n\n#include <iomanip>\n#include <sstream>\n#include <string>\n#include <cassert>\n\n#include \"test_macros.h\"\n\n#if TEST_STD_VER > 11\n\n//  Test that mismatches in the traits between the quoted object and the dest string are diagnosed.\n\ntemplate <class charT>\nstruct test_traits\n{\n    typedef charT     char_type;\n};\n\nvoid round_trip ( const char *p ) {\n    std::stringstream ss;\n    ss << std::quoted(p);\n    std::basic_string<char, test_traits<char>> s;\n    ss >> std::quoted(s);\n    }\n\n\n\nint main(int, char**)\n{\n    round_trip ( \"Hi Mom\" );\n}\n#else\n#error\n#endif\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------------", "===//", "Ċ", "//", "Ċ", "//", "ĠPart", "Ġof", "Ġthe", "ĠLLVM", "ĠProject", ",", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", "Ġv", "2", ".", "0", "Ġwith", "ĠLLVM", "ĠExceptions", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "llvm", ".", "org", "/", "LICENSE", ".", "txt", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "//", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĠApache", "-", "2", ".", "0", "ĠWITH", "ĠLLVM", "-", "exception", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "//", "Ġ<", "iom", "an", "ip", ">", "Ċ", "Ċ", "//", "Ġquoted", "Ċ", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "_", "macros", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "ĠTEST", "_", "STD", "_", "VER", "Ġ>", "Ġ11", "Ċ", "Ċ", "//", "Ġ", "ĠTest", "Ġthat", "Ġmis", "matches", "Ġin", "Ġthe", "Ġtraits", "Ġbetween", "Ġthe", "Ġquoted", "Ġobject", "Ġand", "Ġthe", "Ġdest", "Ġstring", "Ġare", "Ġdiag", "no", "sed", ".", "Ċ", "Ċ", "template", "Ġ<", "class", "Ġchar", "T", ">", "Ċ", "struct", "Ġtest", "_", "traits", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġchar", "T", "ĠĠĠĠ", "Ġchar", "_", "type", ";", "Ċ", "};", "Ċ", "Ċ", "void", "Ġround", "_", "trip", "Ġ(", "Ġconst", "Ġchar", "Ġ*", "p", "Ġ)", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "stringstream", "Ġss", ";", "Ċ", "ĠĠĠ", "Ġss", "Ġ<<", "Ġstd", "::", "quoted", "(", "p", ");", "Ċ", "ĠĠĠ", "Ġstd", "::", "basic", "_", "string", "<", "char", ",", "Ġtest", "_", "traits", "<", "char", ">>", "Ġs", ";", "Ċ", "ĠĠĠ", "Ġss", "Ġ>>", "Ġstd", "::", "quoted", "(", "s", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġround", "_", "trip", "Ġ(", "Ġ\"", "Hi", "ĠM", "om", "\"", "Ġ);", "Ċ", "}", "Ċ", "#", "else", "Ċ", "#", "error", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::793", "code": "// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"remoting/host/host_status_monitor.h\"\n\nnamespace remoting {\n\nHostStatusMonitor::HostStatusMonitor() = default;\nHostStatusMonitor::~HostStatusMonitor() = default;\n\nvoid HostStatusMonitor::AddStatusObserver(HostStatusObserver* observer) {\n  observers_.AddObserver(observer);\n}\n\nvoid HostStatusMonitor::RemoveStatusObserver(HostStatusObserver* observer) {\n  observers_.RemoveObserver(observer);\n}\n\n}  // namespace remoting\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2017", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "rem", "oting", "/", "host", "/", "host", "_", "status", "_", "monitor", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġrem", "oting", "Ġ{", "Ċ", "Ċ", "Host", "Status", "Monitor", "::", "Host", "Status", "Monitor", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Host", "Status", "Monitor", "::~", "Host", "Status", "Monitor", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "void", "ĠHost", "Status", "Monitor", "::", "Add", "Status", "Observer", "(", "Host", "Status", "Observer", "*", "Ġobserver", ")", "Ġ{", "Ċ", "Ġ", "Ġobservers", "_.", "Add", "Observer", "(", "observer", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHost", "Status", "Monitor", "::", "Remove", "Status", "Observer", "(", "Host", "Status", "Observer", "*", "Ġobserver", ")", "Ġ{", "Ċ", "Ġ", "Ġobservers", "_.", "Remove", "Observer", "(", "observer", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġrem", "oting", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::794", "code": "//===----------------------------------------------------------------------===//\n//\n// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n//\n//===----------------------------------------------------------------------===//\n\n// <string>\n\n// size_type size() const;\n\n#include <string>\n#include <cassert>\n\n#include \"test_macros.h\"\n#include \"min_allocator.h\"\n\ntemplate <class S>\nvoid\ntest(const S& s, typename S::size_type c)\n{\n    assert(s.size() == c);\n}\n\nint main(int, char**)\n{\n    {\n    typedef std::string S;\n    test(S(), 0);\n    test(S(\"123\"), 3);\n    test(S(\"12345678901234567890123456789012345678901234567890\"), 50);\n    }\n#if TEST_STD_VER >= 11\n    {\n    typedef std::basic_string<char, std::char_traits<char>, min_allocator<char>> S;\n    test(S(), 0);\n    test(S(\"123\"), 3);\n    test(S(\"12345678901234567890123456789012345678901234567890\"), 50);\n    }\n#endif\n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------------", "===//", "Ċ", "//", "Ċ", "//", "ĠPart", "Ġof", "Ġthe", "ĠLLVM", "ĠProject", ",", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", "Ġv", "2", ".", "0", "Ġwith", "ĠLLVM", "ĠExceptions", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "llvm", ".", "org", "/", "LICENSE", ".", "txt", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "//", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĠApache", "-", "2", ".", "0", "ĠWITH", "ĠLLVM", "-", "exception", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "//", "Ġ<", "string", ">", "Ċ", "Ċ", "//", "Ġsize", "_", "type", "Ġsize", "()", "Ġconst", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "_", "macros", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "min", "_", "allocator", ".", "h", "\"", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠS", ">", "Ċ", "void", "Ċ", "test", "(", "const", "ĠS", "&", "Ġs", ",", "Ġtypename", "ĠS", "::", "size", "_", "type", "Ġc", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġassert", "(", "s", ".", "size", "()", "Ġ==", "Ġc", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "string", "ĠS", ";", "Ċ", "ĠĠĠ", "Ġtest", "(", "S", "(),", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġtest", "(", "S", "(\"", "123", "\"),", "Ġ3", ");", "Ċ", "ĠĠĠ", "Ġtest", "(", "S", "(\"", "1234567890123456789012345678901234567890", "1234567890", "\"),", "Ġ50", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "#", "if", "ĠTEST", "_", "STD", "_", "VER", "Ġ>=", "Ġ11", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġstd", "::", "basic", "_", "string", "<", "char", ",", "Ġstd", "::", "char", "_", "traits", "<", "char", ">,", "Ġmin", "_", "allocator", "<", "char", ">>", "ĠS", ";", "Ċ", "ĠĠĠ", "Ġtest", "(", "S", "(),", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġtest", "(", "S", "(\"", "123", "\"),", "Ġ3", ");", "Ċ", "ĠĠĠ", "Ġtest", "(", "S", "(\"", "1234567890123456789012345678901234567890", "1234567890", "\"),", "Ġ50", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "#", "endif", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::795", "code": "// PR c++/78645\n// { dg-do compile { target c++11 } }\n\ntypedef bool (*Function)(int);\nconstexpr bool check(int x, Function p) { return p(x); }  // { dg-message \"in .constexpr. expansion of\" }\n\nstatic_assert(check(2, check), \"\");  // { dg-error \"conversion|constant|in .constexpr. expansion of\" }\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "78", "645", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "Ċ", "typedef", "Ġbool", "Ġ(*", "Function", ")(", "int", ");", "Ċ", "constexpr", "Ġbool", "Ġcheck", "(", "int", "Ġx", ",", "ĠFunction", "Ġp", ")", "Ġ{", "Ġreturn", "Ġp", "(", "x", ");", "Ġ}", "Ġ", "Ġ//", "Ġ{", "Ġdg", "-", "message", "Ġ\"", "in", "Ġ.", "constexpr", ".", "Ġexpansion", "Ġof", "\"", "Ġ}", "Ċ", "Ċ", "static", "_", "assert", "(", "check", "(", "2", ",", "Ġcheck", "),", "Ġ\"\");", "Ġ", "Ġ//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "conversion", "|", "constant", "|", "in", "Ġ.", "constexpr", ".", "Ġexpansion", "Ġof", "\"", "Ġ}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::796", "code": "//============== IV: Multiplayer - http://code.iv-multiplayer.com ==============\r\n//\r\n// File: Main.cpp\r\n// Project: Server.Core\r\n// Author(s): jenksta\r\n// License: See LICENSE in root directory\r\n//\r\n//==============================================================================\r\n\r\n#include <Common.h>\r\n#include \"CServer.h\"\r\n\r\nCServer * g_pServer = NULL;\r\n\r\nEXPORT CServerInterface * GetServerInterface()\r\n{\r\n\tSAFE_DELETE(g_pServer);\r\n\tg_pServer = new CServer();\r\n\treturn g_pServer;\r\n}\r\n\r\nEXPORT void DestroyServerInterface(CServerInterface * pServer)\r\n{\r\n\tSAFE_DELETE(g_pServer);\r\n}\r\n\r\n#ifdef WIN32\r\nBOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, void *)\r\n{\r\n\tswitch(dwReason)\r\n\t{\r\n\tcase DLL_PROCESS_ATTACH:\r\n\t\t{\r\n\t\t\t// Disable thread calls\r\n\t\t\tDisableThreadLibraryCalls(hModule);\r\n\t\t}\r\n\t\tbreak;\r\n\t}\r\n\r\n\treturn TRUE;\r\n}\r\n#endif\r\n", "code_tokens": ["Ġ//", "==============", "ĠIV", ":", "ĠMultip", "layer", "Ġ-", "Ġhttp", "://", "code", ".", "iv", "-", "multip", "layer", ".", "com", "Ġ==============", "č", "Ċ", "//", "č", "Ċ", "//", "ĠFile", ":", "ĠMain", ".", "cpp", "č", "Ċ", "//", "ĠProject", ":", "ĠServer", ".", "Core", "č", "Ċ", "//", "ĠAuthor", "(", "s", "):", "Ġj", "enk", "sta", "č", "Ċ", "//", "ĠLicense", ":", "ĠSee", "ĠLICENSE", "Ġin", "Ġroot", "Ġdirectory", "č", "Ċ", "//", "č", "Ċ", "//==============================================================================", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "Common", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ\"", "C", "Server", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "C", "Server", "Ġ*", "Ġg", "_", "p", "Server", "Ġ=", "ĠNULL", ";", "č", "Ċ", "č", "Ċ", "EXPORT", "ĠC", "Server", "Interface", "Ġ*", "ĠGet", "Server", "Interface", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "SAFE", "_", "DELETE", "(", "g", "_", "p", "Server", ");", "č", "Ċ", "ĉ", "g", "_", "p", "Server", "Ġ=", "Ġnew", "ĠC", "Server", "();", "č", "Ċ", "ĉ", "return", "Ġg", "_", "p", "Server", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "EXPORT", "Ġvoid", "ĠDestroy", "Server", "Interface", "(", "C", "Server", "Interface", "Ġ*", "Ġp", "Server", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "SAFE", "_", "DELETE", "(", "g", "_", "p", "Server", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "ifdef", "ĠWIN", "32", "č", "Ċ", "BOOL", "ĠWINAPI", "ĠDll", "Main", "(", "H", "MODULE", "Ġh", "Module", ",", "ĠDWORD", "Ġdw", "Reason", ",", "Ġvoid", "Ġ*)", "č", "Ċ", "{", "č", "Ċ", "ĉ", "switch", "(", "dw", "Reason", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "case", "ĠDLL", "_", "PROCESS", "_", "ATTACH", ":", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉĉ", "ĉ", "//", "ĠDisable", "Ġthread", "Ġcalls", "č", "Ċ", "ĉĉ", "ĉ", "Disable", "Thread", "Library", "Calls", "(", "h", "Module", ");", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "break", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "return", "ĠTRUE", ";", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::797", "code": "// Copyright (c) 2021 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include <interfaces/chain.h>\n#include <interfaces/echo.h>\n#include <interfaces/init.h>\n#include <interfaces/node.h>\n#include <interfaces/wallet.h>\n\nnamespace interfaces {\nstd::unique_ptr<Node> Init::makeNode() { return {}; }\nstd::unique_ptr<Chain> Init::makeChain() { return {}; }\nstd::unique_ptr<WalletLoader> Init::makeWalletLoader(Chain& chain) { return {}; }\nstd::unique_ptr<Echo> Init::makeEcho() { return {}; }\nIpc* Init::ipc() { return nullptr; }\n} // namespace interfaces\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2", "021", "ĠThe", "ĠBitcoin", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠCOPY", "ING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "licenses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "interfaces", "/", "chain", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "interfaces", "/", "echo", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "interfaces", "/", "init", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "interfaces", "/", "node", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "interfaces", "/", "wallet", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġinterfaces", "Ġ{", "Ċ", "std", "::", "unique", "_", "ptr", "<", "Node", ">", "ĠInit", "::", "make", "Node", "()", "Ġ{", "Ġreturn", "Ġ{};", "Ġ}", "Ċ", "std", "::", "unique", "_", "ptr", "<", "Chain", ">", "ĠInit", "::", "make", "Chain", "()", "Ġ{", "Ġreturn", "Ġ{};", "Ġ}", "Ċ", "std", "::", "unique", "_", "ptr", "<", "Wallet", "Loader", ">", "ĠInit", "::", "make", "Wallet", "Loader", "(", "Chain", "&", "Ġchain", ")", "Ġ{", "Ġreturn", "Ġ{};", "Ġ}", "Ċ", "std", "::", "unique", "_", "ptr", "<", "Echo", ">", "ĠInit", "::", "make", "Echo", "()", "Ġ{", "Ġreturn", "Ġ{};", "Ġ}", "Ċ", "Ipc", "*", "ĠInit", "::", "ipc", "()", "Ġ{", "Ġreturn", "Ġnullptr", ";", "Ġ}", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġinterfaces", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::798", "code": "//\n// \"$Id: Fl_BMP_Image.H 4288 2005-04-16 00:13:17Z mike $\"\n//\n// BMP image header file for the Fast Light Tool Kit (FLTK).\n//\n// Copyright 1998-2005 by Bill Spitzak and others.\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Library General Public\n// License as published by the Free Software Foundation; either\n// version 2 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Library General Public License for more details.\n//\n// You should have received a copy of the GNU Library General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307\n// USA.\n//\n// Please report all bugs and problems on the following page:\n//\n//     http://www.fltk.org/str.php\n//\n\n#ifndef Fl_BMP_Image_H\n#define Fl_BMP_Image_H\n#  include \"Fl_Image.H\"\n\nclass FL_EXPORT Fl_BMP_Image : public Fl_RGB_Image {\n\n  public:\n\n  Fl_BMP_Image(const char* filename);\n};\n\n#endif\n\n//\n// End of \"$Id: Fl_BMP_Image.H 4288 2005-04-16 00:13:17Z mike $\".\n//\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ\"$", "Id", ":", "ĠFl", "_", "BMP", "_", "Image", ".", "H", "Ġ4", "288", "Ġ2005", "-", "04", "-", "16", "Ġ00", ":", "13", ":", "17", "Z", "Ġmi", "ke", "Ġ$\"", "Ċ", "//", "Ċ", "//", "ĠBMP", "Ġimage", "Ġheader", "Ġfile", "Ġfor", "Ġthe", "ĠFast", "ĠLight", "ĠTool", "ĠK", "it", "Ġ(", "FLT", "K", ").", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ199", "8", "-", "2005", "Ġby", "ĠB", "ill", "ĠSp", "it", "z", "ak", "Ġand", "Ġothers", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "//", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLibrary", "ĠGeneral", "ĠPublic", "Ċ", "//", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "//", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "//", "ĠLibrary", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLibrary", "ĠGeneral", "ĠPublic", "Ċ", "//", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "//", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", ",", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ02", "111", "-", "13", "07", "Ċ", "//", "ĠUSA", ".", "Ċ", "//", "Ċ", "//", "ĠPlease", "Ġreport", "Ġall", "Ġbugs", "Ġand", "Ġproblems", "Ġon", "Ġthe", "Ġfollowing", "Ġpage", ":", "Ċ", "//", "Ċ", "//", "ĠĠĠĠ", "Ġhttp", "://", "www", ".", "flt", "k", ".", "org", "/", "str", ".", "php", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠFl", "_", "BMP", "_", "Image", "_", "H", "Ċ", "#", "define", "ĠFl", "_", "BMP", "_", "Image", "_", "H", "Ċ", "#", "Ġ", "Ġinclude", "Ġ\"", "Fl", "_", "Image", ".", "H", "\"", "Ċ", "Ċ", "class", "ĠFL", "_", "EXPORT", "ĠFl", "_", "BMP", "_", "Image", "Ġ:", "Ġpublic", "ĠFl", "_", "RGB", "_", "Image", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "Ċ", "Ġ", "ĠFl", "_", "BMP", "_", "Image", "(", "const", "Ġchar", "*", "Ġfilename", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ", "Ċ", "//", "Ċ", "//", "ĠEnd", "Ġof", "Ġ\"$", "Id", ":", "ĠFl", "_", "BMP", "_", "Image", ".", "H", "Ġ4", "288", "Ġ2005", "-", "04", "-", "16", "Ġ00", ":", "13", ":", "17", "Z", "Ġmi", "ke", "Ġ$", "\".", "Ċ", "//", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::799", "code": "// PR c++/28879\n// { dg-do compile }\n// { dg-options \"\" }\n// { dg-require-effective-target alloca }\n\nstruct A\n{\n  static int i;\n  int j;\n};\n\ntemplate<int> void foo ()\n{\n  int x[A::i];\n//int y[A().j];\n}\n\nvoid bar ()\n{\n  foo<6> ();\n}\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "28", "879", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "effective", "-", "target", "Ġalloca", "Ġ}", "Ċ", "Ċ", "struct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "Ġstatic", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġint", "Ġj", ";", "Ċ", "};", "Ċ", "Ċ", "template", "<", "int", ">", "Ġvoid", "Ġfoo", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġx", "[", "A", "::", "i", "];", "Ċ", "//", "int", "Ġy", "[", "A", "().", "j", "];", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbar", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġfoo", "<", "6", ">", "Ġ();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::800", "code": "#pragma once\n\n#include \"geometry/any_rect2d.hpp\"\n#include \"anim/angle_interpolation.hpp\"\n#include \"anim/segment_interpolation.hpp\"\n#include \"anim/value_interpolation.hpp\"\n\nnamespace anim\n{\n  class AnyRectInterpolation : public Task\n  {\n  private:\n\n    double m_interval;\n\n    AngleInterpolation m_angleInt;\n    double m_curAngle;\n\n    SegmentInterpolation m_segmentInt;\n    m2::PointD m_curCenter;\n\n    ValueInterpolation m_sizeXInt;\n    double m_curSizeX;\n\n    ValueInterpolation m_sizeYInt;\n    double m_curSizeY;\n\n    m2::AnyRectD m_startRect;\n    m2::AnyRectD m_endRect;\n    m2::AnyRectD & m_outRect;\n\n    double m_startTime;\n\n  public:\n\n    AnyRectInterpolation(m2::AnyRectD const & startRect,\n                         m2::AnyRectD const & endRect,\n                         double rotationSpeed,\n                         m2::AnyRectD & outRect);\n\n    void OnStart(double ts);\n    void OnStep(double ts);\n    void OnEnd(double ts);\n    void OnCancel(double ts);\n  };\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "geometry", "/", "any", "_", "rect", "2", "d", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "anim", "/", "angle", "_", "interpolation", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "anim", "/", "segment", "_", "interpolation", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "anim", "/", "value", "_", "interpolation", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġanim", "Ċ", "{", "Ċ", "Ġ", "Ġclass", "ĠAny", "Rect", "Interpolation", "Ġ:", "Ġpublic", "ĠTask", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġprivate", ":", "Ċ", "Ċ", "ĠĠĠ", "Ġdouble", "Ġm", "_", "interval", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠAngle", "Interpolation", "Ġm", "_", "angle", "Int", ";", "Ċ", "ĠĠĠ", "Ġdouble", "Ġm", "_", "cur", "Angle", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠSegment", "Interpolation", "Ġm", "_", "segment", "Int", ";", "Ċ", "ĠĠĠ", "Ġm", "2", "::", "Point", "D", "Ġm", "_", "cur", "Center", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠValue", "Interpolation", "Ġm", "_", "size", "X", "Int", ";", "Ċ", "ĠĠĠ", "Ġdouble", "Ġm", "_", "cur", "SizeX", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠValue", "Interpolation", "Ġm", "_", "size", "Y", "Int", ";", "Ċ", "ĠĠĠ", "Ġdouble", "Ġm", "_", "cur", "SizeY", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġm", "2", "::", "Any", "Rect", "D", "Ġm", "_", "start", "Rect", ";", "Ċ", "ĠĠĠ", "Ġm", "2", "::", "Any", "Rect", "D", "Ġm", "_", "end", "Rect", ";", "Ċ", "ĠĠĠ", "Ġm", "2", "::", "Any", "Rect", "D", "Ġ&", "Ġm", "_", "out", "Rect", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġdouble", "Ġm", "_", "startTime", ";", "Ċ", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "Ċ", "ĠĠĠ", "ĠAny", "Rect", "Interpolation", "(", "m", "2", "::", "Any", "Rect", "D", "Ġconst", "Ġ&", "Ġstart", "Rect", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "2", "::", "Any", "Rect", "D", "Ġconst", "Ġ&", "Ġend", "Rect", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġdouble", "Ġrotation", "Speed", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "2", "::", "Any", "Rect", "D", "Ġ&", "Ġout", "Rect", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠOn", "Start", "(", "double", "Ġts", ");", "Ċ", "ĠĠĠ", "Ġvoid", "ĠOn", "Step", "(", "double", "Ġts", ");", "Ċ", "ĠĠĠ", "Ġvoid", "ĠOn", "End", "(", "double", "Ġts", ");", "Ċ", "ĠĠĠ", "Ġvoid", "ĠOn", "Cancel", "(", "double", "Ġts", ");", "Ċ", "Ġ", "Ġ};", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::801", "code": "// { dg-options \"-std=gnu++0x\" }\n// { dg-do compile }\n\n// Copyright (C) 2011-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <utility>\n\nstd::pair<int, int> pi;\nconst std::pair<int, int> cpi;\n\nconstexpr const int& cri = std::get<0>(cpi);\nconstexpr int&  ri = std::get<0>(pi);\nconstexpr int&& rri = std::get<0>(std::move(pi));\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "0", "x", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "std", "::", "pair", "<", "int", ",", "Ġint", ">", "Ġpi", ";", "Ċ", "const", "Ġstd", "::", "pair", "<", "int", ",", "Ġint", ">", "Ġcpi", ";", "Ċ", "Ċ", "constexpr", "Ġconst", "Ġint", "&", "Ġc", "ri", "Ġ=", "Ġstd", "::", "get", "<", "0", ">(", "cpi", ");", "Ċ", "constexpr", "Ġint", "&", "Ġ", "Ġri", "Ġ=", "Ġstd", "::", "get", "<", "0", ">(", "pi", ");", "Ċ", "constexpr", "Ġint", "&&", "Ġr", "ri", "Ġ=", "Ġstd", "::", "get", "<", "0", ">(", "std", "::", "move", "(", "pi", "));", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::802", "code": "// RUN: %clang_cc1 -std=c++2a -verify %s\n\nnamespace std_example {\n  int a;\n  const int b = 0; // expected-note {{here}}\n  struct S {\n    int x1 : 8 = 42;\n    int x2 : 8 { 42 };\n    int y1 : true ? 8 : a = 42;\n    int y3 : (true ? 8 : b) = 42;\n    int z : 1 || new int { 1 };\n  };\n  static_assert(S{}.x1 == 42);\n  static_assert(S{}.x2 == 42);\n  static_assert(S{}.y1 == 0);\n  static_assert(S{}.y3 == 42);\n  static_assert(S{}.z == 0);\n\n  struct T {\n    int y2 : true ? 8 : b = 42; // expected-error {{cannot assign to variable 'b'}}\n  };\n}\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "std", "=", "c", "++", "2", "a", "Ġ-", "verify", "Ġ%", "s", "Ċ", "Ċ", "namespace", "Ġstd", "_", "example", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ";", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġb", "Ġ=", "Ġ0", ";", "Ġ//", "Ġexpected", "-", "note", "Ġ{{", "here", "}}", "Ċ", "Ġ", "Ġstruct", "ĠS", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġx", "1", "Ġ:", "Ġ8", "Ġ=", "Ġ42", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġx", "2", "Ġ:", "Ġ8", "Ġ{", "Ġ42", "Ġ};", "Ċ", "ĠĠĠ", "Ġint", "Ġy", "1", "Ġ:", "Ġtrue", "Ġ?", "Ġ8", "Ġ:", "Ġa", "Ġ=", "Ġ42", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġy", "3", "Ġ:", "Ġ(", "true", "Ġ?", "Ġ8", "Ġ:", "Ġb", ")", "Ġ=", "Ġ42", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġz", "Ġ:", "Ġ1", "Ġ||", "Ġnew", "Ġint", "Ġ{", "Ġ1", "Ġ};", "Ċ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġstatic", "_", "assert", "(", "S", "{}.", "x", "1", "Ġ==", "Ġ42", ");", "Ċ", "Ġ", "Ġstatic", "_", "assert", "(", "S", "{}.", "x", "2", "Ġ==", "Ġ42", ");", "Ċ", "Ġ", "Ġstatic", "_", "assert", "(", "S", "{}.", "y", "1", "Ġ==", "Ġ0", ");", "Ċ", "Ġ", "Ġstatic", "_", "assert", "(", "S", "{}.", "y", "3", "Ġ==", "Ġ42", ");", "Ċ", "Ġ", "Ġstatic", "_", "assert", "(", "S", "{}.", "z", "Ġ==", "Ġ0", ");", "Ċ", "Ċ", "Ġ", "Ġstruct", "ĠT", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġy", "2", "Ġ:", "Ġtrue", "Ġ?", "Ġ8", "Ġ:", "Ġb", "Ġ=", "Ġ42", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "cannot", "Ġassign", "Ġto", "Ġvariable", "Ġ'", "b", "'}}", "Ċ", "Ġ", "Ġ};", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::803", "code": "//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n\n// <string>\n\n// template<> struct char_traits<char32_t>\n\n// static const char_type* find(const char_type* s, size_t n, const char_type& a);\n\n#include <string>\n#include <cassert>\n\nint main()\n{\n#ifndef _LIBCPP_HAS_NO_UNICODE_CHARS\n    char32_t s1[] = {1, 2, 3};\n    assert(std::char_traits<char32_t>::find(s1, 3, char32_t(1)) == s1);\n    assert(std::char_traits<char32_t>::find(s1, 3, char32_t(2)) == s1+1);\n    assert(std::char_traits<char32_t>::find(s1, 3, char32_t(3)) == s1+2);\n    assert(std::char_traits<char32_t>::find(s1, 3, char32_t(4)) == 0);\n    assert(std::char_traits<char32_t>::find(s1, 3, char32_t(0)) == 0);\n#endif  // _LIBCPP_HAS_NO_UNICODE_CHARS\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------------", "===//", "Ċ", "//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠThe", "ĠLLVM", "ĠCompiler", "ĠInf", "rastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUn", "ivers", "ity", "Ġof", "ĠI", "ll", "ino", "is", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLICENSE", ".", "TXT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//===----------------------------------------------------------------------===//", "Ċ", "Ċ", "//", "Ġ<", "string", ">", "Ċ", "Ċ", "//", "Ġtemplate", "<>", "Ġstruct", "Ġchar", "_", "traits", "<", "char", "32", "_", "t", ">", "Ċ", "Ċ", "//", "Ġstatic", "Ġconst", "Ġchar", "_", "type", "*", "Ġfind", "(", "const", "Ġchar", "_", "type", "*", "Ġs", ",", "Ġsize", "_", "t", "Ġn", ",", "Ġconst", "Ġchar", "_", "type", "&", "Ġa", ");", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "#", "ifndef", "Ġ_", "LIB", "CPP", "_", "HAS", "_", "NO", "_", "UNICODE", "_", "CHARS", "Ċ", "ĠĠĠ", "Ġchar", "32", "_", "t", "Ġs", "1", "[]", "Ġ=", "Ġ{", "1", ",", "Ġ2", ",", "Ġ3", "};", "Ċ", "ĠĠĠ", "Ġassert", "(", "std", "::", "char", "_", "traits", "<", "char", "32", "_", "t", ">::", "find", "(", "s", "1", ",", "Ġ3", ",", "Ġchar", "32", "_", "t", "(", "1", "))", "Ġ==", "Ġs", "1", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "std", "::", "char", "_", "traits", "<", "char", "32", "_", "t", ">::", "find", "(", "s", "1", ",", "Ġ3", ",", "Ġchar", "32", "_", "t", "(", "2", "))", "Ġ==", "Ġs", "1", "+", "1", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "std", "::", "char", "_", "traits", "<", "char", "32", "_", "t", ">::", "find", "(", "s", "1", ",", "Ġ3", ",", "Ġchar", "32", "_", "t", "(", "3", "))", "Ġ==", "Ġs", "1", "+", "2", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "std", "::", "char", "_", "traits", "<", "char", "32", "_", "t", ">::", "find", "(", "s", "1", ",", "Ġ3", ",", "Ġchar", "32", "_", "t", "(", "4", "))", "Ġ==", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "std", "::", "char", "_", "traits", "<", "char", "32", "_", "t", ">::", "find", "(", "s", "1", ",", "Ġ3", ",", "Ġchar", "32", "_", "t", "(", "0", "))", "Ġ==", "Ġ0", ");", "Ċ", "#", "endif", "Ġ", "Ġ//", "Ġ_", "LIB", "CPP", "_", "HAS", "_", "NO", "_", "UNICODE", "_", "CHARS", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::804", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n#include \"chromeos/login/user_names.h\"\n\n#include \"google_apis/gaia/gaia_auth_util.h\"\n\nnamespace chromeos {\n\nnamespace login {\n\nconst char* kStubUser = \"stub-user@example.com\";\n\nconst char* kSignInUser = \"sign-in-user-id\";\n\n// Should match cros constant in platform/libchromeos/chromeos/cryptohome.h\nconst char* kGuestUserName = \"$guest\";\n\nconst char* kSupervisedUserDomain = \"locally-managed.localhost\";\n\nstd::string CanonicalizeUserID(const std::string& user_id) {\n  if (user_id == chromeos::login::kGuestUserName)\n    return user_id;\n  return gaia::CanonicalizeEmail(user_id);\n}\n\n}  // namespace login\n\n}  // namespace chromeos\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "#", "include", "Ġ\"", "chrome", "os", "/", "login", "/", "user", "_", "names", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "google", "_", "apis", "/", "ga", "ia", "/", "ga", "ia", "_", "auth", "_", "util", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġchrome", "os", "Ġ{", "Ċ", "Ċ", "namespace", "Ġlogin", "Ġ{", "Ċ", "Ċ", "const", "Ġchar", "*", "Ġk", "Stub", "User", "Ġ=", "Ġ\"", "stub", "-", "user", "@", "example", ".", "com", "\";", "Ċ", "Ċ", "const", "Ġchar", "*", "Ġk", "SignIn", "User", "Ġ=", "Ġ\"", "sign", "-", "in", "-", "user", "-", "id", "\";", "Ċ", "Ċ", "//", "ĠShould", "Ġmatch", "Ġcros", "Ġconstant", "Ġin", "Ġplatform", "/", "lib", "chrome", "os", "/", "chrome", "os", "/", "crypto", "home", ".", "h", "Ċ", "const", "Ġchar", "*", "Ġk", "Guest", "UserName", "Ġ=", "Ġ\"$", "guest", "\";", "Ċ", "Ċ", "const", "Ġchar", "*", "Ġk", "Super", "vised", "User", "Domain", "Ġ=", "Ġ\"", "loc", "ally", "-", "managed", ".", "localhost", "\";", "Ċ", "Ċ", "std", "::", "string", "ĠCanonical", "ize", "UserID", "(", "const", "Ġstd", "::", "string", "&", "Ġuser", "_", "id", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "user", "_", "id", "Ġ==", "Ġchrome", "os", "::", "login", "::", "k", "Guest", "UserName", ")", "Ċ", "ĠĠĠ", "Ġreturn", "Ġuser", "_", "id", ";", "Ċ", "Ġ", "Ġreturn", "Ġga", "ia", "::", "Canonical", "ize", "Email", "(", "user", "_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġlogin", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġchrome", "os", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::805", "code": "\n#include \"GPIO.h\"\n\nusing namespace Empty;\n\nGPIO::GPIO()\n{}\n\nvoid GPIO::init()\n{}\n\nvoid GPIO::pinMode(uint8_t pin, uint8_t output)\n{}\n\nuint8_t GPIO::read(uint8_t pin) {\n    return 0;\n}\n\nvoid GPIO::write(uint8_t pin, uint8_t value)\n{}\n\nvoid GPIO::toggle(uint8_t pin)\n{}\n\n/* Alternative interface: */\nAP_HAL::DigitalSource* GPIO::channel(uint16_t n) {\n    return new DigitalSource(0);\n}\n\nbool GPIO::usb_connected(void)\n{\n    return false;\n}\n\nDigitalSource::DigitalSource(uint8_t v) :\n    _v(v)\n{}\n\nvoid DigitalSource::mode(uint8_t output)\n{}\n\nuint8_t DigitalSource::read() {\n    return _v;\n}\n\nvoid DigitalSource::write(uint8_t value) {\n    _v = value;\n}\n\nvoid DigitalSource::toggle() {\n    _v = !_v;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "GPIO", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠEmpty", ";", "Ċ", "Ċ", "GPIO", "::", "GPIO", "()", "Ċ", "{}", "Ċ", "Ċ", "void", "ĠGPIO", "::", "init", "()", "Ċ", "{}", "Ċ", "Ċ", "void", "ĠGPIO", "::", "pin", "Mode", "(", "uint", "8", "_", "t", "Ġpin", ",", "Ġuint", "8", "_", "t", "Ġoutput", ")", "Ċ", "{}", "Ċ", "Ċ", "uint", "8", "_", "t", "ĠGPIO", "::", "read", "(", "uint", "8", "_", "t", "Ġpin", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGPIO", "::", "write", "(", "uint", "8", "_", "t", "Ġpin", ",", "Ġuint", "8", "_", "t", "Ġvalue", ")", "Ċ", "{}", "Ċ", "Ċ", "void", "ĠGPIO", "::", "toggle", "(", "uint", "8", "_", "t", "Ġpin", ")", "Ċ", "{}", "Ċ", "Ċ", "/*", "ĠAl", "ternative", "Ġinterface", ":", "Ġ*/", "Ċ", "AP", "_", "HAL", "::", "Digital", "Source", "*", "ĠGPIO", "::", "channel", "(", "uint", "16", "_", "t", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġnew", "ĠDig", "ital", "Source", "(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠGPIO", "::", "usb", "_", "connected", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "Digital", "Source", "::", "Digital", "Source", "(", "uint", "8", "_", "t", "Ġv", ")", "Ġ:", "Ċ", "ĠĠĠ", "Ġ_", "v", "(", "v", ")", "Ċ", "{}", "Ċ", "Ċ", "void", "ĠDig", "ital", "Source", "::", "mode", "(", "uint", "8", "_", "t", "Ġoutput", ")", "Ċ", "{}", "Ċ", "Ċ", "uint", "8", "_", "t", "ĠDig", "ital", "Source", "::", "read", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ_", "v", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDig", "ital", "Source", "::", "write", "(", "uint", "8", "_", "t", "Ġvalue", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ_", "v", "Ġ=", "Ġvalue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDig", "ital", "Source", "::", "toggle", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ_", "v", "Ġ=", "Ġ!_", "v", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::806", "code": "// { dg-do compile }\n\n// 2006-02-04  Edward Smith-Rowland <3dw4rd@verizon.net>\n//\n// Copyright (C) 2006-2007, 2009 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 5.2.1.12 ellint_1\n\n#include <tr1/math.h>\n\nvoid\ntest01()\n{\n  float kf = 0.5F, phif = std::atan2(1.0F, 1.0F);\n  double kd = 0.5, phid = std::atan2(1.0, 1.0);\n  long double kl = 0.5L, phil = std::atan2(1.0L, 1.0L);\n\n  ellint_1(kf, phif);\n  ellint_1f(kf, phif);\n  ellint_1(kd, phid);\n  ellint_1(kl, phil);\n  ellint_1l(kl, phil);\n\n  return;\n}\n\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "//", "Ġ2006", "-", "02", "-", "04", "Ġ", "ĠEd", "ward", "ĠSm", "ith", "-", "Row", "land", "Ġ<", "3", "dw", "4", "rd", "@", "ver", "iz", "on", ".", "net", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "-", "2007", ",", "Ġ2009", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "Ġ5", ".", "2", ".", "1", ".", "12", "Ġ", "ell", "int", "_", "1", "Ċ", "Ċ", "#", "include", "Ġ<", "tr", "1", "/", "math", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġfloat", "Ġk", "f", "Ġ=", "Ġ0", ".", "5", "F", ",", "Ġph", "if", "Ġ=", "Ġstd", "::", "atan", "2", "(", "1", ".", "0", "F", ",", "Ġ1", ".", "0", "F", ");", "Ċ", "Ġ", "Ġdouble", "Ġk", "d", "Ġ=", "Ġ0", ".", "5", ",", "Ġph", "id", "Ġ=", "Ġstd", "::", "atan", "2", "(", "1", ".", "0", ",", "Ġ1", ".", "0", ");", "Ċ", "Ġ", "Ġlong", "Ġdouble", "Ġkl", "Ġ=", "Ġ0", ".", "5", "L", ",", "Ġph", "il", "Ġ=", "Ġstd", "::", "atan", "2", "(", "1", ".", "0", "L", ",", "Ġ1", ".", "0", "L", ");", "Ċ", "Ċ", "Ġ", "Ġ", "ell", "int", "_", "1", "(", "kf", ",", "Ġph", "if", ");", "Ċ", "Ġ", "Ġ", "ell", "int", "_", "1", "f", "(", "kf", ",", "Ġph", "if", ");", "Ċ", "Ġ", "Ġ", "ell", "int", "_", "1", "(", "kd", ",", "Ġph", "id", ");", "Ċ", "Ġ", "Ġ", "ell", "int", "_", "1", "(", "kl", ",", "Ġph", "il", ");", "Ċ", "Ġ", "Ġ", "ell", "int", "_", "1", "l", "(", "kl", ",", "Ġph", "il", ");", "Ċ", "Ċ", "Ġ", "Ġreturn", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::807", "code": "// Deque iterator invalidation tests\n\n// Copyright (C) 2003-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <debug/deque>\n#include <testsuite_hooks.h>\n\nusing __gnu_debug::deque;\n\nbool test = true;\n\n// Resize\nvoid test02()\n{\n  deque<int> v(10, 17);\n\n  deque<int>::iterator before = v.begin() + 6;\n  deque<int>::iterator at = before + 1;\n  deque<int>::iterator after = at + 1;\n\n  // Shrink\n  v.resize(7);\n  VERIFY(before._M_dereferenceable());\n  VERIFY(at._M_singular());\n  VERIFY(after._M_singular());\n\n  // Grow\n  before = v.begin() + 6;\n  v.resize(17);\n  VERIFY(before._M_singular());\n}\n\nint main()\n{\n  test02();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠDe", "que", "Ġiterator", "Ġinvalid", "ation", "Ġtests", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "debug", "/", "deque", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "hooks", ".", "h", ">", "Ċ", "Ċ", "using", "Ġ__", "gnu", "_", "debug", "::", "deque", ";", "Ċ", "Ċ", "bool", "Ġtest", "Ġ=", "Ġtrue", ";", "Ċ", "Ċ", "//", "ĠResize", "Ċ", "void", "Ġtest", "02", "()", "Ċ", "{", "Ċ", "Ġ", "Ġdeque", "<", "int", ">", "Ġv", "(", "10", ",", "Ġ17", ");", "Ċ", "Ċ", "Ġ", "Ġdeque", "<", "int", ">::", "iterator", "Ġbefore", "Ġ=", "Ġv", ".", "begin", "()", "Ġ+", "Ġ6", ";", "Ċ", "Ġ", "Ġdeque", "<", "int", ">::", "iterator", "Ġat", "Ġ=", "Ġbefore", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġdeque", "<", "int", ">::", "iterator", "Ġafter", "Ġ=", "Ġat", "Ġ+", "Ġ1", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠSh", "rink", "Ċ", "Ġ", "Ġv", ".", "resize", "(", "7", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "before", "._", "M", "_", "dereference", "able", "());", "Ċ", "Ġ", "ĠVERIFY", "(", "at", "._", "M", "_", "singular", "());", "Ċ", "Ġ", "ĠVERIFY", "(", "after", "._", "M", "_", "singular", "());", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠGrow", "Ċ", "Ġ", "Ġbefore", "Ġ=", "Ġv", ".", "begin", "()", "Ġ+", "Ġ6", ";", "Ċ", "Ġ", "Ġv", ".", "resize", "(", "17", ");", "Ċ", "Ġ", "ĠVERIFY", "(", "before", "._", "M", "_", "singular", "());", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "02", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::808", "code": "// NB: This issue affected only debug-mode.\n\n// { dg-options \"-std=gnu++11\" }\n// { dg-do compile }\n\n// Copyright (C) 2007-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <unordered_map>\n\n//PR libstdc++/35922\nint main()\n{\n  std::unordered_map<int, int> m;\n}\n\n", "code_tokens": ["Ġ//", "ĠNB", ":", "ĠThis", "Ġissue", "Ġaffected", "Ġonly", "Ġdebug", "-", "mode", ".", "Ċ", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "unordered", "_", "map", ">", "Ċ", "Ċ", "//", "PR", "Ġlib", "std", "c", "++", "/", "35", "922", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "unordered", "_", "map", "<", "int", ",", "Ġint", ">", "Ġm", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::809", "code": "// Copyright (C) 2014-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <regex>\n#include <testsuite_performance.h>\n\nusing namespace __gnu_test;\n\nint main()\n{\n  time_counter time;\n  resource_counter resource;\n\n  start_counters(time, resource);\n\n  // this should get compiled to just L\"[abcd]\"\n  auto re = std::wregex(L'[' + std::wstring(300, L'a') + L\"bc\"\n                        + std::wstring(1000, 'a') + L\"d]\");\n  bool ok = true;\n  for (int i = 0; i < 100000; ++i)\n    ok = ok && (std::regex_match(L\"b\", re) && std::regex_match(L\"d\", re));\n\n  stop_counters(time, resource);\n  report_performance(__FILE__, \"\", time, resource);\n\n  return ok ? 0 : 1;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "regex", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "performance", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġ__", "gnu", "_", "test", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtime", "_", "counter", "Ġtime", ";", "Ċ", "Ġ", "Ġresource", "_", "counter", "Ġresource", ";", "Ċ", "Ċ", "Ġ", "Ġstart", "_", "counters", "(", "time", ",", "Ġresource", ");", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġthis", "Ġshould", "Ġget", "Ġcompiled", "Ġto", "Ġjust", "ĠL", "\"[", "abcd", "]\"", "Ċ", "Ġ", "Ġauto", "Ġre", "Ġ=", "Ġstd", "::", "w", "regex", "(", "L", "'", "['", "Ġ+", "Ġstd", "::", "wstring", "(", "300", ",", "ĠL", "'", "a", "')", "Ġ+", "ĠL", "\"", "bc", "\"", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ+", "Ġstd", "::", "wstring", "(", "1000", ",", "Ġ'", "a", "')", "Ġ+", "ĠL", "\"", "d", "]\");", "Ċ", "Ġ", "Ġbool", "Ġok", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100000", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġok", "Ġ=", "Ġok", "Ġ&&", "Ġ(", "std", "::", "regex", "_", "match", "(", "L", "\"", "b", "\",", "Ġre", ")", "Ġ&&", "Ġstd", "::", "regex", "_", "match", "(", "L", "\"", "d", "\",", "Ġre", "));", "Ċ", "Ċ", "Ġ", "Ġstop", "_", "counters", "(", "time", ",", "Ġresource", ");", "Ċ", "Ġ", "Ġreport", "_", "performance", "(__", "FILE", "__,", "Ġ\"\",", "Ġtime", ",", "Ġresource", ");", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġok", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::810", "code": "//\n//  Copyright (c) 2000-2002\n//  Joerg Walter, Mathias Koch\n//\n//  Distributed under the Boost Software License, Version 1.0. (See\n//  accompanying file LICENSE_1_0.txt or copy at\n//  http://www.boost.org/LICENSE_1_0.txt)\n//\n//  The authors gratefully acknowledge the support of\n//  GeNeSys mbH & Co. KG in producing this work.\n//\n\n#include <boost/numeric/ublas/vector_sparse.hpp>\n#include <boost/numeric/ublas/io.hpp>\n\nint main () {\n    using namespace boost::numeric::ublas;\n    coordinate_vector<double> v (3, 3);\n    for (unsigned i = 0; i < v.size (); ++ i)\n        v (i) = i;\n    std::cout << v << std::endl;\n}\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2000", "-", "2002", "Ċ", "//", "Ġ", "ĠJo", "erg", "ĠW", "alter", ",", "ĠMath", "ias", "ĠK", "och", "Ċ", "//", "Ċ", "//", "Ġ", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ċ", "//", "Ġ", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "//", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//", "Ċ", "//", "Ġ", "ĠThe", "Ġauthors", "Ġg", "rate", "fully", "Ġack", "nowledge", "Ġthe", "Ġsupport", "Ġof", "Ċ", "//", "Ġ", "ĠGe", "Ne", "Sys", "Ġmb", "H", "Ġ&", "ĠCo", ".", "ĠK", "G", "Ġin", "Ġproducing", "Ġthis", "Ġwork", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "numeric", "/", "ub", "las", "/", "vector", "_", "sparse", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "numeric", "/", "ub", "las", "/", "io", ".", "hpp", ">", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "ĠĠĠ", "Ġusing", "Ġnamespace", "Ġboost", "::", "numeric", "::", "ub", "las", ";", "Ċ", "ĠĠĠ", "Ġcoordinate", "_", "vector", "<", "double", ">", "Ġv", "Ġ(", "3", ",", "Ġ3", ");", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġv", ".", "size", "Ġ();", "Ġ++", "Ġi", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġv", "Ġ(", "i", ")", "Ġ=", "Ġi", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġv", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::811", "code": "//  io_ex1.cpp  ----------------------------------------------------------//\n\n//  Copyright 2010 Howard Hinnant\n//  Copyright 2010 Vicente J. Botet Escriba\n\n//  Distributed under the Boost Software License, Version 1.0.\n//  See http://www.boost.org/LICENSE_1_0.txt\n\n/*\nThis code was adapted by Vicente J. Botet Escriba from Hinnant's html documentation.\nMany thanks to Howard for making his code available under the Boost license.\n\n*/\n\n#include <boost/chrono/chrono_io.hpp>\n#include <sstream>\n#include <iostream>\n#include <boost/assert.hpp>\n\nint main()\n{\n    using namespace boost::chrono;\n    using std::cout;\n\n    high_resolution_clock::time_point t0 = high_resolution_clock::now();\n    std::stringstream io;\n    io << t0;\n    BOOST_ASSERT(!io.fail());\n    cout << io.str() << '\\n';\n    BOOST_ASSERT(!io.fail());\n    high_resolution_clock::time_point t1;\n    io >> t1;\n    BOOST_ASSERT(!io.fail());\n    cout << io.str() << '\\n';\n    cout << t0 << '\\n';\n    cout << t1 << '\\n';\n    high_resolution_clock::time_point t = high_resolution_clock::now();\n    cout << t << '\\n';\n\n    cout << \"That took \" << t - t0 << '\\n';\n    cout << \"That took \" << t - t1 << '\\n';\n\n    return 0;\n}\n\n//~ 50908679121461 nanoseconds since boot\n//~ That took 649630 nanoseconds\n\n", "code_tokens": ["Ġ//", "Ġ", "Ġio", "_", "ex", "1", ".", "cpp", "Ġ", "Ġ--------------------------------------------------------", "--", "//", "Ċ", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ2010", "ĠHow", "ard", "ĠH", "in", "n", "ant", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ2010", "ĠV", "ic", "ente", "ĠJ", ".", "ĠBot", "et", "ĠE", "scri", "ba", "Ċ", "Ċ", "//", "Ġ", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "Ġ", "ĠSee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", "Ċ", "Ċ", "/*", "Ċ", "This", "Ġcode", "Ġwas", "Ġadap", "ted", "Ġby", "ĠV", "ic", "ente", "ĠJ", ".", "ĠBot", "et", "ĠE", "scri", "ba", "Ġfrom", "ĠH", "in", "n", "ant", "'s", "Ġhtml", "Ġdocumentation", ".", "Ċ", "Many", "Ġth", "anks", "Ġto", "ĠHow", "ard", "Ġfor", "Ġmaking", "Ġhis", "Ġcode", "Ġavailable", "Ġunder", "Ġthe", "ĠBo", "ost", "Ġlicense", ".", "Ċ", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "chrono", "/", "chrono", "_", "io", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "assert", ".", "hpp", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġusing", "Ġnamespace", "Ġboost", "::", "chrono", ";", "Ċ", "ĠĠĠ", "Ġusing", "Ġstd", "::", "cout", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġhigh", "_", "resolution", "_", "clock", "::", "time", "_", "point", "Ġt", "0", "Ġ=", "Ġhigh", "_", "resolution", "_", "clock", "::", "now", "();", "Ċ", "ĠĠĠ", "Ġstd", "::", "stringstream", "Ġio", ";", "Ċ", "ĠĠĠ", "Ġio", "Ġ<<", "Ġt", "0", ";", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "ASSERT", "(!", "io", ".", "fail", "());", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġio", ".", "str", "()", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "ASSERT", "(!", "io", ".", "fail", "());", "Ċ", "ĠĠĠ", "Ġhigh", "_", "resolution", "_", "clock", "::", "time", "_", "point", "Ġt", "1", ";", "Ċ", "ĠĠĠ", "Ġio", "Ġ>>", "Ġt", "1", ";", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "ASSERT", "(!", "io", ".", "fail", "());", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġio", ".", "str", "()", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġt", "0", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġt", "1", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "ĠĠĠ", "Ġhigh", "_", "resolution", "_", "clock", "::", "time", "_", "point", "Ġt", "Ġ=", "Ġhigh", "_", "resolution", "_", "clock", "::", "now", "();", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġt", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "That", "Ġtook", "Ġ\"", "Ġ<<", "Ġt", "Ġ-", "Ġt", "0", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "That", "Ġtook", "Ġ\"", "Ġ<<", "Ġt", "Ġ-", "Ġt", "1", "Ġ<<", "Ġ'\\", "n", "';", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "//", "~", "Ġ5", "090", "86", "79", "12", "14", "61", "Ġnanoseconds", "Ġsince", "Ġboot", "Ċ", "//", "~", "ĠThat", "Ġtook", "Ġ64", "96", "30", "Ġnanoseconds", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::812", "code": "// PR c++/51430\n// { dg-do compile }\n\ntemplate<int> struct A\n{\n  static const int x[] = 0;\t// { dg-error \"in-class initialization|initializer fails\" }\n};\n\nA<0> a;\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "514", "30", "Ċ", "//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "template", "<", "int", ">", "Ġstruct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "Ġstatic", "Ġconst", "Ġint", "Ġx", "[]", "Ġ=", "Ġ0", ";", "ĉ", "//", "Ġ{", "Ġdg", "-", "error", "Ġ\"", "in", "-", "class", "Ġinitialization", "|", "initializer", "Ġfails", "\"", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "A", "<", "0", ">", "Ġa", ";", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::813", "code": "// { dg-do assemble  }\n// GROUPS passed operators\n// opr-as file\n// From: Klaus Ahrens <ahrens@informatik.hu-berlin.de>\n// Date:     Fri, 26 Mar 93 12:50:37 mez\n// Subject:  no default assignment\n// Message-ID: <199303261149.TA23114@mail.Germany.EU.net>\n\nclass A {\npublic:\n        A(int){}\n        A& operator=(const A&){return *this;}\n};\n\nclass B: public A {\npublic:\n        B(int i): A(i) {}\n};\n\nint main()\n{\n        B b=1;\n        b=1;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġassemble", "Ġ", "Ġ}", "Ċ", "//", "ĠGROUP", "S", "Ġpassed", "Ġoperators", "Ċ", "//", "Ġo", "pr", "-", "as", "Ġfile", "Ċ", "//", "ĠFrom", ":", "ĠK", "la", "us", "ĠA", "h", "ren", "s", "Ġ<", "ah", "ren", "s", "@", "in", "format", "ik", ".", "hu", "-", "ber", "lin", ".", "de", ">", "Ċ", "//", "ĠDate", ":", "ĠĠĠĠ", "ĠF", "ri", ",", "Ġ26", "ĠMar", "Ġ93", "Ġ12", ":", "50", ":", "37", "Ġme", "z", "Ċ", "//", "ĠSubject", ":", "Ġ", "Ġno", "Ġdefault", "Ġassignment", "Ċ", "//", "ĠMessage", "-", "ID", ":", "Ġ<", "199", "30", "326", "11", "49", ".", "TA", "23", "114", "@", "mail", ".", "G", "erm", "any", ".", "EU", ".", "net", ">", "Ċ", "Ċ", "class", "ĠA", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠA", "(", "int", "){}", "Ċ", "ĠĠĠĠĠĠĠ", "ĠA", "&", "Ġoperator", "=(", "const", "ĠA", "&", "){", "return", "Ġ*", "this", ";}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠB", ":", "Ġpublic", "ĠA", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠĠĠĠĠ", "ĠB", "(", "int", "Ġi", "):", "ĠA", "(", "i", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠB", "Ġb", "=", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġb", "=", "1", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::814", "code": "#line 2 \"quanta/core/chrono/types.hpp\"\n/**\n@copyright MIT license; see @ref index or the accompanying LICENSE file.\n\n@file\n@brief Chronometry types.\n@ingroup lib_core_types\n@ingroup lib_core_chrono\n*/\n\n#pragma once\n\n#include <quanta/core/config.hpp>\n#include <quanta/core/types.hpp>\n\n#include <togo/core/lua/types.hpp>\n\nnamespace quanta {\nnamespace time {\n\n/**\n\t@addtogroup lib_core_chrono\n\t@{\n*/\n\n/// A span of time.\nusing Duration = s64;\n\n/// A point in time relative to 0001-01-01T00:00:00Z in the Gregorian calendar.\nstruct Time {\n\tTOGO_LUA_MARK_USERDATA(quanta::time::Time);\n\n\ts64 sec; // seconds relative to epoch in UTC\n\ts32 zone_offset; // timezone offset in seconds (sec_local = sec + zone_offset)\n};\n\n/** @} */ // end of doc-group lib_core_chrono\n\n} // namespace time\n\nusing time::Duration;\nusing time::Time;\n\nnamespace date {\n\n/// A date in a traditionally-structured calendar.\nstruct Date {\n\ts32 year;\n\ts32 month;\n\ts32 day;\n\ts32 year_day;\n};\n\n} // namespace date\n\nusing date::Date;\n\n} // namespace quanta\n", "code_tokens": ["Ġ#", "line", "Ġ2", "Ġ\"", "quant", "a", "/", "core", "/", "chrono", "/", "types", ".", "hpp", "\"", "Ċ", "/**", "Ċ", "@", "copyright", "ĠMIT", "Ġlicense", ";", "Ġsee", "Ġ@", "ref", "Ġindex", "Ġor", "Ġthe", "Ġac", "company", "ing", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "@", "file", "Ċ", "@", "brief", "ĠCh", "ron", "ometry", "Ġtypes", ".", "Ċ", "@", "ingroup", "Ġlib", "_", "core", "_", "types", "Ċ", "@", "ingroup", "Ġlib", "_", "core", "_", "chrono", "Ċ", "*/", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "quant", "a", "/", "core", "/", "config", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "quant", "a", "/", "core", "/", "types", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "to", "go", "/", "core", "/", "lua", "/", "types", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġquant", "a", "Ġ{", "Ċ", "namespace", "Ġtime", "Ġ{", "Ċ", "Ċ", "/**", "Ċ", "ĉ", "@", "addto", "group", "Ġlib", "_", "core", "_", "chrono", "Ċ", "ĉ", "@", "{", "Ċ", "*/", "Ċ", "Ċ", "///", "ĠA", "Ġspan", "Ġof", "Ġtime", ".", "Ċ", "using", "ĠDuration", "Ġ=", "Ġs", "64", ";", "Ċ", "Ċ", "///", "ĠA", "Ġpoint", "Ġin", "Ġtime", "Ġrelative", "Ġto", "Ġ0", "001", "-", "01", "-", "01", "T", "00", ":", "00", ":", "00", "Z", "Ġin", "Ġthe", "ĠG", "regorian", "Ġcalendar", ".", "Ċ", "struct", "ĠTime", "Ġ{", "Ċ", "ĉ", "TO", "GO", "_", "LUA", "_", "MARK", "_", "USER", "DATA", "(", "quant", "a", "::", "time", "::", "Time", ");", "Ċ", "Ċ", "ĉ", "s", "64", "Ġsec", ";", "Ġ//", "Ġseconds", "Ġrelative", "Ġto", "Ġepoch", "Ġin", "ĠUTC", "Ċ", "ĉ", "s", "32", "Ġzone", "_", "offset", ";", "Ġ//", "Ġtimezone", "Ġoffset", "Ġin", "Ġseconds", "Ġ(", "sec", "_", "local", "Ġ=", "Ġsec", "Ġ+", "Ġzone", "_", "offset", ")", "Ċ", "};", "Ċ", "Ċ", "/**", "Ġ@", "}", "Ġ*/", "Ġ//", "Ġend", "Ġof", "Ġdoc", "-", "group", "Ġlib", "_", "core", "_", "chrono", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġtime", "Ċ", "Ċ", "using", "Ġtime", "::", "Duration", ";", "Ċ", "using", "Ġtime", "::", "Time", ";", "Ċ", "Ċ", "namespace", "Ġdate", "Ġ{", "Ċ", "Ċ", "///", "ĠA", "Ġdate", "Ġin", "Ġa", "Ġtr", "ad", "ition", "ally", "-", "structured", "Ġcalendar", ".", "Ċ", "struct", "ĠDate", "Ġ{", "Ċ", "ĉ", "s", "32", "Ġyear", ";", "Ċ", "ĉ", "s", "32", "Ġmonth", ";", "Ċ", "ĉ", "s", "32", "Ġday", ";", "Ċ", "ĉ", "s", "32", "Ġyear", "_", "day", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġdate", "Ċ", "Ċ", "using", "Ġdate", "::", "Date", ";", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġquant", "a", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::815", "code": "/*  -*- coding: sjis-dos; -*-  */\r\n\r\n/*\r\n * copyright 2010 FUKUZAWA Tadashi.  All rights reserved.\r\n */\r\n\r\n#include \"HSca_Math.h\"\r\n\r\n#include <math.h>\r\n#include \"HSca_Math.h\"\r\n\r\nFFI_DEFINITION_START {\r\n\r\n// ³· (class method)\r\nhyf32 FFI_FUNC(sin) (Value selfVal, hyf32 x)\r\n{\r\n    FFI_ASSERT_CLASSMETHOD(selfVal);\r\n    return sinf(x);\r\n}\r\n\r\n// ]· (class method)\r\nhyf32 FFI_FUNC(cos) (Value selfVal, hyf32 x)\r\n{\r\n    FFI_ASSERT_CLASSMETHOD(selfVal);\r\n    return cosf(x);\r\n}\r\n\r\n// ½ûª (class method)\r\nhyf32 FFI_FUNC(sqrt) (Value selfVal, hyf32 x)\r\n{\r\n    FFI_ASSERT_CLASSMETHOD(selfVal);\r\n    return sqrtf(x);\r\n}\r\n\r\n// ©RÎ (class method)\r\nhyf32 FFI_FUNC(log) (Value selfVal, hyf32 x)\r\n{\r\n    FFI_ASSERT_CLASSMETHOD(selfVal);\r\n    return logf(x);\r\n}\r\n\r\n} FFI_DEFINITION_END\r\n", "code_tokens": ["Ġ/*", "Ġ", "Ġ-", "*-", "Ġcoding", ":", "Ġs", "jis", "-", "dos", ";", "Ġ-", "*-", "Ġ", "Ġ*/", "č", "Ċ", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġcopyright", "Ġ2010", "ĠF", "UK", "UZ", "A", "WA", "ĠT", "ad", "ash", "i", ".", "Ġ", "ĠAll", "Ġrights", "Ġreserved", ".", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "H", "Sc", "a", "_", "Math", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ\"", "H", "Sc", "a", "_", "Math", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "FF", "I", "_", "DEFINITION", "_", "START", "Ġ{", "č", "Ċ", "č", "Ċ", "//", "ĠÂ", "Ĳ", "Â", "³", "Â", "Į", "Â·", "Ġ(", "class", "Ġmethod", ")", "č", "Ċ", "hy", "f", "32", "ĠFFI", "_", "FUNC", "(", "sin", ")", "Ġ(", "Value", "Ġself", "Val", ",", "Ġhy", "f", "32", "Ġx", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "ĠFFI", "_", "ASSERT", "_", "CLASS", "METHOD", "(", "self", "Val", ");", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġs", "inf", "(", "x", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//", "ĠÂ", "Ĺ", "]", "Â", "Į", "Â·", "Ġ(", "class", "Ġmethod", ")", "č", "Ċ", "hy", "f", "32", "ĠFFI", "_", "FUNC", "(", "cos", ")", "Ġ(", "Value", "Ġself", "Val", ",", "Ġhy", "f", "32", "Ġx", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "ĠFFI", "_", "ASSERT", "_", "CLASS", "METHOD", "(", "self", "Val", ");", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġcos", "f", "(", "x", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//", "ĠÂ", "ķ", "Â", "½", "Â", "ķ", "Ã»", "Âį", "Â", "ª", "Ġ(", "class", "Ġmethod", ")", "č", "Ċ", "hy", "f", "32", "ĠFFI", "_", "FUNC", "(", "sqrt", ")", "Ġ(", "Value", "Ġself", "Val", ",", "Ġhy", "f", "32", "Ġx", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "ĠFFI", "_", "ASSERT", "_", "CLASS", "METHOD", "(", "self", "Val", ");", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġsqrt", "f", "(", "x", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//", "ĠÂ", "İ", "Â", "©", "Â", "ĳ", "R", "Â", "ĳ", "Ãİ", "Â", "Ĳ", "Â", "Ķ", "Ġ(", "class", "Ġmethod", ")", "č", "Ċ", "hy", "f", "32", "ĠFFI", "_", "FUNC", "(", "log", ")", "Ġ(", "Value", "Ġself", "Val", ",", "Ġhy", "f", "32", "Ġx", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "ĠFFI", "_", "ASSERT", "_", "CLASS", "METHOD", "(", "self", "Val", ");", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġlog", "f", "(", "x", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "ĠFFI", "_", "DEFINITION", "_", "END", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::816", "code": "#include <openlane/openlane.h>\n#include <openlane/component_provider.h>\n#include <ptr.hpp>\n\n#include \"main.h\"\n#include \"component.h\"\n#include <cassert>\n\nuint32_t DLL_PUBLIC LoadComponent(void *ctx) {\n    assert(ctx);\n\n    openlane::ComponentProvider* cp = static_cast<openlane::ComponentProvider*>(ctx);\n    return cp->RegisterComponent(ComponentOne::ID, &ComponentOne::Create);\n}\n\nuint32_t DLL_PUBLIC UnloadComponent(void *ctx) {\n    assert(ctx);\n\n    openlane::ComponentProvider* cp = static_cast<openlane::ComponentProvider*>(ctx);\n    return cp->UnregisterComponent(ComponentOne::ID);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "open", "lane", "/", "open", "lane", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "open", "lane", "/", "component", "_", "provider", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "ptr", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "main", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "component", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "uint", "32", "_", "t", "ĠDLL", "_", "PUBLIC", "ĠLoad", "Component", "(", "void", "Ġ*", "ctx", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġassert", "(", "ctx", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġopen", "lane", "::", "Component", "Provider", "*", "Ġcp", "Ġ=", "Ġstatic", "_", "cast", "<", "open", "lane", "::", "Component", "Provider", "*>(", "ctx", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġcp", "->", "Register", "Component", "(", "Component", "One", "::", "ID", ",", "Ġ&", "Component", "One", "::", "Create", ");", "Ċ", "}", "Ċ", "Ċ", "uint", "32", "_", "t", "ĠDLL", "_", "PUBLIC", "ĠUn", "load", "Component", "(", "void", "Ġ*", "ctx", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġassert", "(", "ctx", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġopen", "lane", "::", "Component", "Provider", "*", "Ġcp", "Ġ=", "Ġstatic", "_", "cast", "<", "open", "lane", "::", "Component", "Provider", "*>(", "ctx", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġcp", "->", "Unregister", "Component", "(", "Component", "One", "::", "ID", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::817", "code": "#include \"barnacoin-config.h\"\n#include <cstddef>\n#include <sys/select.h>\n\n// Prior to GLIBC_2.14, memcpy was aliased to memmove.\nextern \"C\" void* memmove(void* a, const void* b, size_t c);\nextern \"C\" void* memcpy(void* a, const void* b, size_t c)\n{\n  return memmove(a, b, c);\n}\n\nextern \"C\" void __chk_fail (void) __attribute__((__noreturn__));\nextern \"C\" FDELT_TYPE __fdelt_warn(FDELT_TYPE a)\n{\n  if (a >= FD_SETSIZE)\n    __chk_fail ();\n  return a / __NFDBITS;\n}\nextern \"C\" FDELT_TYPE __fdelt_chk(FDELT_TYPE) __attribute__((weak, alias(\"__fdelt_warn\")));\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "bar", "na", "coin", "-", "config", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "c", "std", "def", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "select", ".", "h", ">", "Ċ", "Ċ", "//", "ĠPri", "or", "Ġto", "ĠG", "LI", "BC", "_", "2", ".", "14", ",", "Ġmemcpy", "Ġwas", "Ġaliased", "Ġto", "Ġmemmove", ".", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġvoid", "*", "Ġmemmove", "(", "void", "*", "Ġa", ",", "Ġconst", "Ġvoid", "*", "Ġb", ",", "Ġsize", "_", "t", "Ġc", ");", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġvoid", "*", "Ġmemcpy", "(", "void", "*", "Ġa", ",", "Ġconst", "Ġvoid", "*", "Ġb", ",", "Ġsize", "_", "t", "Ġc", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmemmove", "(", "a", ",", "Ġb", ",", "Ġc", ");", "Ċ", "}", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġvoid", "Ġ__", "chk", "_", "fail", "Ġ(", "void", ")", "Ġ__", "attribute", "__((", "__", "no", "return", "__));", "Ċ", "extern", "Ġ\"", "C", "\"", "ĠF", "DE", "LT", "_", "TYPE", "Ġ__", "fde", "lt", "_", "warn", "(", "F", "DE", "LT", "_", "TYPE", "Ġa", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "a", "Ġ>=", "ĠFD", "_", "SET", "SIZE", ")", "Ċ", "ĠĠĠ", "Ġ__", "chk", "_", "fail", "Ġ();", "Ċ", "Ġ", "Ġreturn", "Ġa", "Ġ/", "Ġ__", "NF", "DB", "ITS", ";", "Ċ", "}", "Ċ", "extern", "Ġ\"", "C", "\"", "ĠF", "DE", "LT", "_", "TYPE", "Ġ__", "fde", "lt", "_", "chk", "(", "F", "DE", "LT", "_", "TYPE", ")", "Ġ__", "attribute", "__((", "weak", ",", "Ġalias", "(\"__", "fde", "lt", "_", "warn", "\")));", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::818", "code": "#include \"engine/os.h\"\n#include \"engine/win/simple_win.h\"\n#include \"editor/studio_app.h\"\n\nint main(int argc, char* argv[])\n{\n\tSetProcessDPIAware();\n\tvoid* shcore = Lumix::os::loadLibrary(\"shcore.dll\");\n\tif (shcore) {\n\t\tauto setter = (decltype(&SetProcessDpiAwareness))Lumix::os::getLibrarySymbol(shcore, \"SetProcessDpiAwareness\");\n\t\tif (setter) setter(PROCESS_PER_MONITOR_DPI_AWARE);\n\t}\n\n\tauto* app = Lumix::StudioApp::create();\n\tapp->run();\n\tconst int exit_code = app->getExitCode();\n\tLumix::StudioApp::destroy(*app);\n\tif(shcore) Lumix::os::unloadLibrary(shcore);\n\treturn exit_code;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "engine", "/", "os", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "engine", "/", "win", "/", "simple", "_", "win", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "editor", "/", "studio", "_", "app", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ċ", "{", "Ċ", "ĉ", "Set", "Process", "DPI", "Aware", "();", "Ċ", "ĉ", "void", "*", "Ġsh", "core", "Ġ=", "ĠL", "um", "ix", "::", "os", "::", "load", "Library", "(\"", "sh", "core", ".", "dll", "\");", "Ċ", "ĉ", "if", "Ġ(", "sh", "core", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "auto", "Ġsetter", "Ġ=", "Ġ(", "decltype", "(&", "Set", "Process", "Dpi", "A", "wa", "ren", "ess", "))", "L", "um", "ix", "::", "os", "::", "get", "Library", "Symbol", "(", "sh", "core", ",", "Ġ\"", "Set", "Process", "Dpi", "A", "wa", "ren", "ess", "\");", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "setter", ")", "Ġsetter", "(", "PROCESS", "_", "PER", "_", "MONITOR", "_", "DPI", "_", "A", "WARE", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "auto", "*", "Ġapp", "Ġ=", "ĠL", "um", "ix", "::", "Studio", "App", "::", "create", "();", "Ċ", "ĉ", "app", "->", "run", "();", "Ċ", "ĉ", "const", "Ġint", "Ġexit", "_", "code", "Ġ=", "Ġapp", "->", "get", "ExitCode", "();", "Ċ", "ĉ", "L", "um", "ix", "::", "Studio", "App", "::", "destroy", "(*", "app", ");", "Ċ", "ĉ", "if", "(", "sh", "core", ")", "ĠL", "um", "ix", "::", "os", "::", "unload", "Library", "(", "sh", "core", ");", "Ċ", "ĉ", "return", "Ġexit", "_", "code", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::819", "code": "#include <cstdio>\r\n#include \"MyDebugger.h\"\r\n\r\nint main()\r\n{\r\n#ifdef _WIN64\r\n\twchar_t szFilePath[256] = L\"c:\\\\test64.exe\";\r\n#else //x86\r\n\twchar_t szFilePath[256] = L\"c:\\\\test32.exe\";\r\n#endif //_WIN64\r\n\twchar_t szCommandLine[256] = L\"\";\r\n\twchar_t szCurrentDir[256] = L\"c:\\\\\";\r\n\tMyDebugger dbg;\r\n\tif (dbg.Init(szFilePath, szCommandLine, szCurrentDir))\r\n\t{\r\n\t\tputs(\"Debugger::Init success!\");\r\n\t\tdbg.Start();\r\n\t\tputs(\"Debugger::Start finished!\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tputs(\"Debugger::Init failed!\");\r\n\t}\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "č", "Ċ", "#", "include", "Ġ\"", "My", "Debugger", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "#", "ifdef", "Ġ_", "WIN", "64", "č", "Ċ", "ĉ", "wchar", "_", "t", "Ġsz", "FilePath", "[", "256", "]", "Ġ=", "ĠL", "\"", "c", ":\\\\", "test", "64", ".", "exe", "\";", "č", "Ċ", "#", "else", "Ġ//", "x", "86", "č", "Ċ", "ĉ", "wchar", "_", "t", "Ġsz", "FilePath", "[", "256", "]", "Ġ=", "ĠL", "\"", "c", ":\\\\", "test", "32", ".", "exe", "\";", "č", "Ċ", "#", "endif", "Ġ//", "_", "WIN", "64", "č", "Ċ", "ĉ", "wchar", "_", "t", "Ġsz", "CommandLine", "[", "256", "]", "Ġ=", "ĠL", "\"\";", "č", "Ċ", "ĉ", "wchar", "_", "t", "Ġsz", "Current", "Dir", "[", "256", "]", "Ġ=", "ĠL", "\"", "c", ":\\\\", "\";", "č", "Ċ", "ĉ", "My", "Debugger", "Ġdbg", ";", "č", "Ċ", "ĉ", "if", "Ġ(", "dbg", ".", "Init", "(", "sz", "FilePath", ",", "Ġsz", "CommandLine", ",", "Ġsz", "Current", "Dir", "))", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "puts", "(\"", "Debugger", "::", "Init", "Ġsuccess", "!\");", "č", "Ċ", "ĉ", "ĉ", "dbg", ".", "Start", "();", "č", "Ċ", "ĉ", "ĉ", "puts", "(\"", "Debugger", "::", "Start", "Ġfinished", "!\");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "else", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "puts", "(\"", "Debugger", "::", "Init", "Ġfailed", "!\");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "system", "(\"", "pause", "\");", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::820", "code": "﻿#include <QCoreApplication>\n#include \"qcomputerinfo.h\"\n\n#pragma comment(lib,\"./../../daodaoliang/bin/QComputerInfo.lib\")\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication a(argc, argv);\n    QComputerInfo temp_computer_info;\n    bool flag = false;\n    qDebug()<<\"MAC:\"<<temp_computer_info.getMAC(flag);\n    qDebug()<<\"MAC get result:\"<<flag;\n    qDebug()<<\"VolumeSerialNumber:\"<<temp_computer_info.getVolumeSerialNumber(flag);\n    qDebug()<<\"VolumeSerialNumber get result:\"<<flag;\n    qDebug()<<\"HardDiskSerialNumber:\"<<temp_computer_info.getHardDiskSerialNumber(flag);\n    qDebug()<<\"HardDiskSerialNumber get result:\"<<flag;\n    qDebug()<<\"NumberOfProcessors:\"<<temp_computer_info.getCPUCount(flag);\n    qDebug()<<\"NumberOfProcessors get result:\"<<flag;\n    qDebug()<<\"SysVersion :\"<<temp_computer_info.getSysVersion(flag);\n    qDebug()<<\"SysVersion get result:\"<<flag;\n    int m_total_size , m_available = 0;\n    qDebug()<<\"Disksize get result:\"<<temp_computer_info.getDiskSize(m_total_size,m_available);\n    qDebug()<<\"Disksize  :\"<<\"m_total_size:\"<<m_total_size<<\" m_available:\"<<m_available;\n    return a.exec();\n}\n", "code_tokens": ["Ġ", "ï", "»", "¿", "#", "include", "Ġ<", "Q", "CoreApplication", ">", "Ċ", "#", "include", "Ġ\"", "q", "computer", "info", ".", "h", "\"", "Ċ", "Ċ", "#", "pragma", "Ġcomment", "(", "lib", ",\"", "./", "../../", "da", "od", "a", "ol", "i", "ang", "/", "bin", "/", "Q", "Computer", "Info", ".", "lib", "\")", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQCoreApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "ĠQ", "Computer", "Info", "Ġtemp", "_", "computer", "_", "info", ";", "Ċ", "ĠĠĠ", "Ġbool", "Ġflag", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "MAC", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "MAC", "(", "flag", ");", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "MAC", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "Volume", "SerialNumber", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "Volume", "SerialNumber", "(", "flag", ");", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "Volume", "SerialNumber", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "Hard", "Disk", "SerialNumber", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "Hard", "Disk", "SerialNumber", "(", "flag", ");", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "Hard", "Disk", "SerialNumber", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "NumberOf", "Processors", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "CPU", "Count", "(", "flag", ");", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "NumberOf", "Processors", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "Sys", "Version", "Ġ:", "\"<<", "temp", "_", "computer", "_", "info", ".", "get", "Sys", "Version", "(", "flag", ");", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "Sys", "Version", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġm", "_", "total", "_", "size", "Ġ,", "Ġm", "_", "available", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "Disk", "size", "Ġget", "Ġresult", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "Disk", "Size", "(", "m", "_", "total", "_", "size", ",", "m", "_", "available", ");", "Ċ", "ĠĠĠ", "ĠqDebug", "()", "<<\"", "Disk", "size", "Ġ", "Ġ:\"", "<<\"", "m", "_", "total", "_", "size", ":\"", "<<", "m", "_", "total", "_", "size", "<<\"", "Ġm", "_", "available", ":\"", "<<", "m", "_", "available", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::821", "code": "// The solution of the problem was written by Izaron\n// Date: 21:24:13   8 May 2015\n// Execution time: 0.031\n\n// Please do not copy-paste the solution.\n// Try to understand what is happening here and write your own.\n\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define mt make_tuple\r\n#define mkp make_pair\r\n#define eb emplace_back\r\n#define pb push_back\r\n#define pii pair<ll,ll>\r\n#define pdd pair<double,double>\r\n#define pff pair<float,float>\r\n#define piii pair<ll, pair<ll,ll> >\r\n#define pddd pair<ld, pair<ld,ld> >\r\n#define mem0(m) memset((m), 0, sizeof(m));\r\n#define mem0d(m) memset((m), 0.0, sizeof(m));\r\n#define memb(m) memset((m), false, sizeof(m));\r\ntypedef long long int ll;\r\ntypedef long double ld;\r\n\r\n\r\n\r\nint main() {\r\n    char ch;\r\n    string word = \"\";\r\n    while(scanf(\"%c\", &ch) != EOF) {\r\n        if((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {\r\n            word += ch;\r\n        } else {\r\n            reverse(begin(word), end(word));\r\n            cout << word;\r\n            cout << ch;\r\n            word = \"\";\r\n        }\r\n    }\r\n    reverse(begin(word), end(word));\r\n    cout << word;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "code_tokens": ["Ġ//", "ĠThe", "Ġsolution", "Ġof", "Ġthe", "Ġproblem", "Ġwas", "Ġwritten", "Ġby", "ĠI", "z", "ar", "on", "Ċ", "//", "ĠDate", ":", "Ġ21", ":", "24", ":", "13", "ĠĠ", "Ġ8", "ĠMay", "Ġ2015", "Ċ", "//", "ĠExecution", "Ġtime", ":", "Ġ0", ".", "031", "Ċ", "Ċ", "//", "ĠPlease", "Ġdo", "Ġnot", "Ġcopy", "-", "paste", "Ġthe", "Ġsolution", ".", "Ċ", "//", "ĠTry", "Ġto", "Ġunderstand", "Ġwhat", "Ġis", "Ġhappening", "Ġhere", "Ġand", "Ġwrite", "Ġyour", "Ġown", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "#", "define", "Ġmt", "Ġmake", "_", "tuple", "č", "Ċ", "#", "define", "Ġmk", "p", "Ġmake", "_", "pair", "č", "Ċ", "#", "define", "Ġeb", "Ġem", "place", "_", "back", "č", "Ċ", "#", "define", "Ġpb", "Ġpush", "_", "back", "č", "Ċ", "#", "define", "Ġp", "ii", "Ġpair", "<", "ll", ",", "ll", ">", "č", "Ċ", "#", "define", "Ġp", "dd", "Ġpair", "<", "double", ",", "double", ">", "č", "Ċ", "#", "define", "Ġp", "ff", "Ġpair", "<", "float", ",", "float", ">", "č", "Ċ", "#", "define", "Ġp", "ii", "i", "Ġpair", "<", "ll", ",", "Ġpair", "<", "ll", ",", "ll", ">", "Ġ>", "č", "Ċ", "#", "define", "Ġp", "ddd", "Ġpair", "<", "ld", ",", "Ġpair", "<", "ld", ",", "ld", ">", "Ġ>", "č", "Ċ", "#", "define", "Ġmem", "0", "(", "m", ")", "Ġmemset", "((", "m", "),", "Ġ0", ",", "Ġsizeof", "(", "m", "));", "č", "Ċ", "#", "define", "Ġmem", "0", "d", "(", "m", ")", "Ġmemset", "((", "m", "),", "Ġ0", ".", "0", ",", "Ġsizeof", "(", "m", "));", "č", "Ċ", "#", "define", "Ġmem", "b", "(", "m", ")", "Ġmemset", "((", "m", "),", "Ġfalse", ",", "Ġsizeof", "(", "m", "));", "č", "Ċ", "typedef", "Ġlong", "Ġlong", "Ġint", "Ġll", ";", "č", "Ċ", "typedef", "Ġlong", "Ġdouble", "Ġld", ";", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "ĠĠĠ", "Ġchar", "Ġch", ";", "č", "Ċ", "ĠĠĠ", "Ġstring", "Ġword", "Ġ=", "Ġ\"\";", "č", "Ċ", "ĠĠĠ", "Ġwhile", "(", "scanf", "(\"%", "c", "\",", "Ġ&", "ch", ")", "Ġ!=", "ĠEOF", ")", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "((", "ch", "Ġ>=", "Ġ'", "a", "'", "Ġ&&", "Ġch", "Ġ<=", "Ġ'", "z", "')", "Ġ||", "Ġ(", "ch", "Ġ>=", "Ġ'", "A", "'", "Ġ&&", "Ġch", "Ġ<=", "Ġ'", "Z", "'))", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġword", "Ġ+=", "Ġch", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreverse", "(", "begin", "(", "word", "),", "Ġend", "(", "word", "));", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġword", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġch", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġword", "Ġ=", "Ġ\"\";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġreverse", "(", "begin", "(", "word", "),", "Ġend", "(", "word", "));", "č", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġword", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::822", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n\n\nSTART_ATF_NAMESPACE\n    typedef void *RPC_SS_THREAD_HANDLE;\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġtypedef", "Ġvoid", "Ġ*", "RPC", "_", "SS", "_", "THREAD", "_", "HANDLE", ";", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::823", "code": "/*\n * Copyright (c) Simon Brunel, https://github.com/simonbrunel\n *\n * This source code is licensed under the MIT license found in\n * the LICENSE file in the root directory of this source tree.\n */\n\n#include <QtPromise>\n#include <QtTest>\n\nusing namespace QtPromisePrivate;\n\nclass tst_cpp14_argsof_lambda_auto : public QObject\n{\n    Q_OBJECT\n\nprivate Q_SLOTS:\n    void lambdaAutoArgs();\n};\n\nQTEST_MAIN(tst_cpp14_argsof_lambda_auto)\n#include \"tst_argsof_lambda_auto.moc\"\n\nvoid tst_cpp14_argsof_lambda_auto::lambdaAutoArgs()\n{\n    auto lOneArg = [](auto) {};\n    auto lManyArgs = [](const auto&, auto, auto) {};\n    auto lMutable = [](const auto&, auto) mutable {};\n\n    Q_STATIC_ASSERT((ArgsOf<decltype(lOneArg)>::count == 0));\n    Q_STATIC_ASSERT((ArgsOf<decltype(lManyArgs)>::count == 0));\n    Q_STATIC_ASSERT((ArgsOf<decltype(lMutable)>::count == 0));\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "ĠSim", "on", "ĠB", "run", "el", ",", "Ġhttps", "://", "github", ".", "com", "/", "sim", "on", "b", "run", "el", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġsource", "Ġcode", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġlicense", "Ġfound", "Ġin", "Ċ", "Ġ*", "Ġthe", "ĠLICENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġdirectory", "Ġof", "Ġthis", "Ġsource", "Ġtree", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "Qt", "Promise", ">", "Ċ", "#", "include", "Ġ<", "Qt", "Test", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠQt", "Promise", "Private", ";", "Ċ", "Ċ", "class", "Ġtst", "_", "cpp", "14", "_", "args", "of", "_", "lambda", "_", "auto", "Ġ:", "Ġpublic", "ĠQObject", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "private", "ĠQ", "_", "SLOTS", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġlambda", "Auto", "Args", "();", "Ċ", "};", "Ċ", "Ċ", "Q", "TEST", "_", "MAIN", "(", "tst", "_", "cpp", "14", "_", "args", "of", "_", "lambda", "_", "auto", ")", "Ċ", "#", "include", "Ġ\"", "tst", "_", "args", "of", "_", "lambda", "_", "auto", ".", "m", "oc", "\"", "Ċ", "Ċ", "void", "Ġtst", "_", "cpp", "14", "_", "args", "of", "_", "lambda", "_", "auto", "::", "lambda", "Auto", "Args", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġauto", "Ġl", "One", "Arg", "Ġ=", "Ġ[](", "auto", ")", "Ġ{};", "Ċ", "ĠĠĠ", "Ġauto", "Ġl", "Many", "Args", "Ġ=", "Ġ[](", "const", "Ġauto", "&,", "Ġauto", ",", "Ġauto", ")", "Ġ{};", "Ċ", "ĠĠĠ", "Ġauto", "Ġl", "Mutable", "Ġ=", "Ġ[](", "const", "Ġauto", "&,", "Ġauto", ")", "Ġmutable", "Ġ{};", "Ċ", "Ċ", "ĠĠĠ", "ĠQ", "_", "STATIC", "_", "ASSERT", "((", "Args", "Of", "<", "decltype", "(", "l", "One", "Arg", ")", ">::", "count", "Ġ==", "Ġ0", "));", "Ċ", "ĠĠĠ", "ĠQ", "_", "STATIC", "_", "ASSERT", "((", "Args", "Of", "<", "decltype", "(", "l", "Many", "Args", ")", ">::", "count", "Ġ==", "Ġ0", "));", "Ċ", "ĠĠĠ", "ĠQ", "_", "STATIC", "_", "ASSERT", "((", "Args", "Of", "<", "decltype", "(", "l", "Mutable", ")", ">::", "count", "Ġ==", "Ġ0", "));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::824", "code": "#pragma once\n\n#include <istream>\n#include <islang/common/source.hpp>\n#include <islang/common/ast.hpp>\n#include <islang/error/errorhandler.hpp>\n\nnamespace islang\n{\n\nclass parser\n{\npublic:\n\tparser() = delete;\n\n\tstatic ast::program* parse(source* src, errorhandler& eh);\n};\n\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "istream", ">", "Ċ", "#", "include", "Ġ<", "is", "lang", "/", "common", "/", "source", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "is", "lang", "/", "common", "/", "ast", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "is", "lang", "/", "error", "/", "error", "handler", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ġis", "lang", "Ċ", "{", "Ċ", "Ċ", "class", "Ġparser", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "parser", "()", "Ġ=", "Ġdelete", ";", "Ċ", "Ċ", "ĉ", "static", "Ġast", "::", "program", "*", "Ġparse", "(", "source", "*", "Ġsrc", ",", "Ġerror", "handler", "&", "Ġeh", ");", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::825", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n#include <_object_list_point.hpp>\n\n\nSTART_ATF_NAMESPACE\n    namespace Info\n    {\n        using _object_list_pointInitLink2_ptr = void (WINAPIV*)(struct _object_list_point*);\n        using _object_list_pointInitLink2_clbk = void (WINAPIV*)(struct _object_list_point*, _object_list_pointInitLink2_ptr);\n        using _object_list_pointSetPoint4_ptr = void (WINAPIV*)(struct _object_list_point*, struct CGameObject*);\n        using _object_list_pointSetPoint4_clbk = void (WINAPIV*)(struct _object_list_point*, struct CGameObject*, _object_list_pointSetPoint4_ptr);\n        \n        using _object_list_pointctor__object_list_point6_ptr = void (WINAPIV*)(struct _object_list_point*);\n        using _object_list_pointctor__object_list_point6_clbk = void (WINAPIV*)(struct _object_list_point*, _object_list_pointctor__object_list_point6_ptr);\n    }; // end namespace Info\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "_", "object", "_", "list", "_", "point", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġnamespace", "ĠInfo", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "object", "_", "list", "_", "point", "Init", "Link", "2", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "object", "_", "list", "_", "point", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "object", "_", "list", "_", "point", "Init", "Link", "2", "_", "cl", "bk", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "object", "_", "list", "_", "point", "*,", "Ġ_", "object", "_", "list", "_", "point", "Init", "Link", "2", "_", "ptr", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "object", "_", "list", "_", "point", "Set", "Point", "4", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "object", "_", "list", "_", "point", "*,", "Ġstruct", "ĠC", "GameObject", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "object", "_", "list", "_", "point", "Set", "Point", "4", "_", "cl", "bk", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "object", "_", "list", "_", "point", "*,", "Ġstruct", "ĠC", "GameObject", "*,", "Ġ_", "object", "_", "list", "_", "point", "Set", "Point", "4", "_", "ptr", ");", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "object", "_", "list", "_", "point", "ctor", "__", "object", "_", "list", "_", "point", "6", "_", "ptr", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "object", "_", "list", "_", "point", "*", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġusing", "Ġ_", "object", "_", "list", "_", "point", "ctor", "__", "object", "_", "list", "_", "point", "6", "_", "cl", "bk", "Ġ=", "Ġvoid", "Ġ(", "WIN", "API", "V", "*)(", "struct", "Ġ_", "object", "_", "list", "_", "point", "*,", "Ġ_", "object", "_", "list", "_", "point", "ctor", "__", "object", "_", "list", "_", "point", "6", "_", "ptr", ");", "Ċ", "ĠĠĠ", "Ġ};", "Ġ//", "Ġend", "Ġnamespace", "ĠInfo", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::826", "code": "#pragma once\n\n#include \"../../../../common.hpp\"\n\n#include \"../../MSExcel.common.hpp\"\n#include \"../../IParsable.hpp\"\n#include \"Ptg.hpp\"\n\nnamespace oless {\n\tnamespace excel {\n\t\tnamespace structures {\n\t\t\tnamespace formulas {\n\n            // see: https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/cdb2c99e-3784-416d-b7b3-eeb19bc66445\n\t\t\tclass ListParsedArrayFormula : public IParseable {\n\t\t\tpublic:\n\t\t\t\tvirtual void Parse(unsigned char* buffer, std::size_t max, unsigned int offset) override {\n\t\t\t\t\tunsigned int index = offset;\n\n                    this->bytesRead = index - offset;\n                }\n            };\n        }\n    }\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "../../../../", "common", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "../../", "MS", "Excel", ".", "common", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "../../", "I", "Par", "sable", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Pt", "g", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġo", "less", "Ġ{", "Ċ", "ĉ", "namespace", "Ġex", "cel", "Ġ{", "Ċ", "ĉ", "ĉ", "namespace", "Ġstructures", "Ġ{", "Ċ", "ĉĉ", "ĉ", "namespace", "Ġform", "ulas", "Ġ{", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ//", "Ġsee", ":", "Ġhttps", "://", "docs", ".", "microsoft", ".", "com", "/", "en", "-", "us", "/", "opens", "pec", "s", "/", "office", "_", "file", "_", "formats", "/", "ms", "-", "xls", "/", "cdb", "2", "c", "99", "e", "-", "37", "84", "-", "416", "d", "-", "b", "7", "b", "3", "-", "ee", "b", "19", "bc", "6", "64", "45", "Ċ", "ĉĉ", "ĉ", "class", "ĠList", "Parsed", "Array", "Formula", "Ġ:", "Ġpublic", "ĠI", "Parse", "able", "Ġ{", "Ċ", "ĉĉ", "ĉ", "public", ":", "Ċ", "ĉĉĉ", "ĉ", "virtual", "Ġvoid", "ĠParse", "(", "unsigned", "Ġchar", "*", "Ġbuffer", ",", "Ġstd", "::", "size", "_", "t", "Ġmax", ",", "Ġunsigned", "Ġint", "Ġoffset", ")", "Ġoverride", "Ġ{", "Ċ", "ĉĉĉĉ", "ĉ", "unsigned", "Ġint", "Ġindex", "Ġ=", "Ġoffset", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "->", "bytesRead", "Ġ=", "Ġindex", "Ġ-", "Ġoffset", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ};", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::827", "code": "/*\r\n\tProblem: Ural1465\r\n\tAlgorithm: Seek patterns\r\n\tTime: O()\r\n\tMemory: O()\r\n\tDetail: \r\n\tCoded by [BUPT]AkemiHomura\r\n*/\r\n\r\n#include <cstdio>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nint N;\r\n\r\nint main()\r\n{\r\n\tscanf(\"%d\", &N);\r\n\tif (N <= 34)\r\n\t{\r\n\t\tif (N==4 || N==8 || N==14 || N==20 || N==24 || N==28 || N==34) printf(\"Black\\n\");\r\n\t\telse printf(\"White\\n\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (N%34==20 || N%34==24 || N%34==28 || N%34==4 || N%34==8) printf(\"Black\\n\");\r\n\t\telse printf(\"White\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "ĉ", "Problem", ":", "ĠU", "ral", "14", "65", "č", "Ċ", "ĉ", "Algorithm", ":", "ĠSeek", "Ġpatterns", "č", "Ċ", "ĉ", "Time", ":", "ĠO", "()", "č", "Ċ", "ĉ", "Memory", ":", "ĠO", "()", "č", "Ċ", "ĉ", "Detail", ":", "Ġ", "č", "Ċ", "ĉ", "Coded", "Ġby", "Ġ[", "BU", "PT", "]", "Ak", "em", "i", "Hom", "ura", "č", "Ċ", "*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "c", "stdio", ">", "č", "Ċ", "#", "include", "Ġ<", "cstring", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "ĠN", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "scanf", "(\"%", "d", "\",", "Ġ&", "N", ");", "č", "Ċ", "ĉ", "if", "Ġ(", "N", "Ġ<=", "Ġ34", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "N", "==", "4", "Ġ||", "ĠN", "==", "8", "Ġ||", "ĠN", "==", "14", "Ġ||", "ĠN", "==", "20", "Ġ||", "ĠN", "==", "24", "Ġ||", "ĠN", "==", "28", "Ġ||", "ĠN", "==", "34", ")", "Ġprintf", "(\"", "Black", "\\", "n", "\");", "č", "Ċ", "ĉ", "ĉ", "else", "Ġprintf", "(\"", "White", "\\", "n", "\");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "else", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "N", "%", "34", "==", "20", "Ġ||", "ĠN", "%", "34", "==", "24", "Ġ||", "ĠN", "%", "34", "==", "28", "Ġ||", "ĠN", "%", "34", "==", "4", "Ġ||", "ĠN", "%", "34", "==", "8", ")", "Ġprintf", "(\"", "Black", "\\", "n", "\");", "č", "Ċ", "ĉ", "ĉ", "else", "Ġprintf", "(\"", "White", "\\", "n", "\");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::828", "code": "#ifndef IAI_H_\n# define IAI_H_\n\n# include \"Utils.hpp\"\n# include \"Board.hpp\"\n\nclass IAI {\n    public:\n        virtual int EvalPos(Board::t_tile **board, int x, int y, int *score) = 0;\n        virtual t_vec think(Board::t_tile **board, int *score, int player, int lvl = 1) = 0;\n};\n\n#endif", "code_tokens": ["Ġ#", "ifndef", "ĠI", "AI", "_", "H", "_", "Ċ", "#", "Ġdefine", "ĠI", "AI", "_", "H", "_", "Ċ", "Ċ", "#", "Ġinclude", "Ġ\"", "Utils", ".", "hpp", "\"", "Ċ", "#", "Ġinclude", "Ġ\"", "Board", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠI", "AI", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvirtual", "Ġint", "ĠEval", "Pos", "(", "Board", "::", "t", "_", "tile", "Ġ**", "board", ",", "Ġint", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġ*", "score", ")", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvirtual", "Ġt", "_", "vec", "Ġthink", "(", "Board", "::", "t", "_", "tile", "Ġ**", "board", ",", "Ġint", "Ġ*", "score", ",", "Ġint", "Ġplayer", ",", "Ġint", "Ġlvl", "Ġ=", "Ġ1", ")", "Ġ=", "Ġ0", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::829", "code": "#include \"m2uPluginPrivatePCH.h\"\n#include \"m2uUI.h\"\n#include \"m2uConfigWindow.h\"\n#include \"SDockTab.h\"\n\n#define LOCTEXT_NAMESPACE \"m2u\"\nnamespace m2uUI\n{\n\tstatic const FName m2uTabName = FName( TEXT(\"m2u\") );\n\n\tTSharedRef<SDockTab> SpawnTab( const FSpawnTabArgs& SpawnTabArgs )\n\t{\n\t\tconst TSharedRef<SDockTab> Tab =\n\t\t\tSNew( SDockTab )\n\t\t\t.Icon( FEditorStyle::GetBrush(\"LiveEditor.TabIcon\") )\n\t\t\t.TabRole( ETabRole::NomadTab );\n\n\t\tTab->SetContent( SNew( Sm2uConfigWindow ) );\n\n\t\treturn Tab;\n\t}\n\n\tvoid RegisterUI()\n\t{\n\t\t// Register a tab spawner so that our tab can be automatically restored from layout files\n\t\tFGlobalTabmanager::Get()->RegisterNomadTabSpawner( m2uTabName, FOnSpawnTab::CreateStatic( &SpawnTab ) )\n\t\t\t.SetDisplayName( LOCTEXT( \"m2uTabTitle\", \"m2u\" ) )\n\t\t\t.SetTooltipText( LOCTEXT( \"m2uTooltipText\", \"Open the m2u window.\" ))\n\t\t\t//.SetGroup(WorkspaceMenu::GetMenuStructure().GetDeveloperToolsCategory())\n\t\t\t.SetIcon(FSlateIcon(FEditorStyle::GetStyleSetName(), \"LiveEditor.TabIcon\"));\n\t}\n\n\tvoid UnregisterUI()\n\t{\n\t\t// Unregister the tab spawner\n\t\tFGlobalTabmanager::Get()->UnregisterTabSpawner( m2uTabName );\n\t}\n}\n\n#undef LOCTEXT_NAMESPACE\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "m", "2", "u", "Plugin", "Private", "PCH", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "m", "2", "u", "UI", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "m", "2", "u", "Config", "Window", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "SD", "ock", "Tab", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠLO", "CT", "EXT", "_", "NAMESPACE", "Ġ\"", "m", "2", "u", "\"", "Ċ", "namespace", "Ġm", "2", "u", "UI", "Ċ", "{", "Ċ", "ĉ", "static", "Ġconst", "ĠF", "Name", "Ġm", "2", "u", "Tab", "Name", "Ġ=", "ĠF", "Name", "(", "ĠTEXT", "(\"", "m", "2", "u", "\")", "Ġ);", "Ċ", "Ċ", "ĉ", "T", "Shared", "Ref", "<", "SD", "ock", "Tab", ">", "ĠSpawn", "Tab", "(", "Ġconst", "ĠFS", "pawn", "Tab", "Args", "&", "ĠSpawn", "Tab", "Args", "Ġ)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "const", "ĠT", "Shared", "Ref", "<", "SD", "ock", "Tab", ">", "ĠTab", "Ġ=", "Ċ", "ĉĉ", "ĉ", "S", "New", "(", "ĠSD", "ock", "Tab", "Ġ)", "Ċ", "ĉĉ", "ĉ", ".", "Icon", "(", "ĠF", "Editor", "Style", "::", "Get", "Brush", "(\"", "Live", "Editor", ".", "Tab", "Icon", "\")", "Ġ)", "Ċ", "ĉĉ", "ĉ", ".", "Tab", "Role", "(", "ĠE", "Tab", "Role", "::", "Nom", "ad", "Tab", "Ġ);", "Ċ", "Ċ", "ĉ", "ĉ", "Tab", "->", "Set", "Content", "(", "ĠS", "New", "(", "ĠSm", "2", "u", "Config", "Window", "Ġ)", "Ġ);", "Ċ", "Ċ", "ĉ", "ĉ", "return", "ĠTab", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠRegister", "UI", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "ĠRegister", "Ġa", "Ġtab", "Ġspa", "wner", "Ġso", "Ġthat", "Ġour", "Ġtab", "Ġcan", "Ġbe", "Ġautomatically", "Ġrestored", "Ġfrom", "Ġlayout", "Ġfiles", "Ċ", "ĉ", "ĉ", "F", "Global", "Tab", "manager", "::", "Get", "()->", "Register", "Nom", "ad", "Tab", "Spa", "wner", "(", "Ġm", "2", "u", "Tab", "Name", ",", "ĠF", "On", "Spawn", "Tab", "::", "Create", "Static", "(", "Ġ&", "Spawn", "Tab", "Ġ)", "Ġ)", "Ċ", "ĉĉ", "ĉ", ".", "Set", "DisplayName", "(", "ĠLO", "CT", "EXT", "(", "Ġ\"", "m", "2", "u", "Tab", "Title", "\",", "Ġ\"", "m", "2", "u", "\"", "Ġ)", "Ġ)", "Ċ", "ĉĉ", "ĉ", ".", "Set", "Tooltip", "Text", "(", "ĠLO", "CT", "EXT", "(", "Ġ\"", "m", "2", "u", "Tooltip", "Text", "\",", "Ġ\"", "Open", "Ġthe", "Ġm", "2", "u", "Ġwindow", ".\"", "Ġ))", "Ċ", "ĉĉ", "ĉ", "//.", "Set", "Group", "(", "Workspace", "Menu", "::", "Get", "Menu", "Structure", "().", "Get", "Developer", "Tools", "Category", "())", "Ċ", "ĉĉ", "ĉ", ".", "Set", "Icon", "(", "FS", "late", "Icon", "(", "F", "Editor", "Style", "::", "Get", "Style", "SetName", "(),", "Ġ\"", "Live", "Editor", ".", "Tab", "Icon", "\"));", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "void", "ĠUnregister", "UI", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "ĠUnregister", "Ġthe", "Ġtab", "Ġspa", "wner", "Ċ", "ĉ", "ĉ", "F", "Global", "Tab", "manager", "::", "Get", "()->", "Unregister", "Tab", "Spa", "wner", "(", "Ġm", "2", "u", "Tab", "Name", "Ġ);", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "undef", "ĠLO", "CT", "EXT", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::830", "code": "#include <Bull/Core/Support/Win32/Win32Error.hpp>\n\n#include <Bull/Network/Address/SockAddrBuffer.hpp>\n#include <Bull/Network/Address/Win32/IpAddressImpl.hpp>\n#include <Bull/Network/Socket/SocketImpl.hpp>\n\nnamespace Bull\n{\n    namespace prv\n    {\n        ByteArray IpAddressImpl::resolve(const std::string& hostname, NetProtocol protocol, const std::string& service)\n        {\n            int error;\n            addrinfo hints;\n            addrinfo* info;\n            ByteArray bytes;\n\n            BULL_ZERO_MEMORY(hints);\n\n            hints.ai_family = SocketImpl::convertNetProtocol(protocol);\n\n            error = getaddrinfo(hostname.c_str(), service.c_str(), &hints, &info);\n\n            Expect(error == 0, Throw(Win32Error, \"Failed to resolve hostname \" + hostname));\n\n            SockAddrBuffer buffer((*info->ai_addr), info->ai_addrlen);\n            std::unique_ptr<IpAddress> address = buffer.getIpAddress();\n\n            for(std::size_t i = 0; i < address->getByteCount(); i++)\n            {\n                bytes[i] = address->at(i);\n            }\n\n            freeaddrinfo(info);\n\n            return bytes;\n        }\n    }\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "B", "ull", "/", "Core", "/", "Support", "/", "Win", "32", "/", "Win", "32", "Error", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "B", "ull", "/", "Network", "/", "Address", "/", "Sock", "Addr", "Buffer", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "B", "ull", "/", "Network", "/", "Address", "/", "Win", "32", "/", "IpAddress", "Impl", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "B", "ull", "/", "Network", "/", "Socket", "/", "Socket", "Impl", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "ĠB", "ull", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġnamespace", "Ġp", "rv", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠByteArray", "ĠIp", "Address", "Impl", "::", "resolve", "(", "const", "Ġstd", "::", "string", "&", "Ġhostname", ",", "ĠNet", "Protocol", "Ġprotocol", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġservice", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġerror", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġaddr", "info", "Ġhints", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġaddr", "info", "*", "Ġinfo", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠByteArray", "Ġbytes", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠB", "ULL", "_", "ZERO", "_", "MEMORY", "(", "hints", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġhints", ".", "ai", "_", "family", "Ġ=", "ĠSocket", "Impl", "::", "convert", "Net", "Protocol", "(", "protocol", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġerror", "Ġ=", "Ġget", "addrinfo", "(", "hostname", ".", "c", "_", "str", "(),", "Ġservice", ".", "c", "_", "str", "(),", "Ġ&", "hints", ",", "Ġ&", "info", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠExpect", "(", "error", "Ġ==", "Ġ0", ",", "ĠThrow", "(", "Win", "32", "Error", ",", "Ġ\"", "Failed", "Ġto", "Ġresolve", "Ġhostname", "Ġ\"", "Ġ+", "Ġhostname", "));", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠSock", "Addr", "Buffer", "Ġbuffer", "((*", "info", "->", "ai", "_", "addr", "),", "Ġinfo", "->", "ai", "_", "addrlen", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "unique", "_", "ptr", "<", "IpAddress", ">", "Ġaddress", "Ġ=", "Ġbuffer", ".", "get", "IpAddress", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "(", "std", "::", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġaddress", "->", "get", "ByteCount", "();", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbytes", "[", "i", "]", "Ġ=", "Ġaddress", "->", "at", "(", "i", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfree", "addrinfo", "(", "info", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġbytes", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::831", "code": "#include <iostream>\n#include <cstdlib>\n\nvoid get_grade(int g)\n{\n   std::cout << g << std::endl;\n \n   if (g >= 90 && g <= 100) {\n       std::cout << \"A\";\n   } else if (g >= 80 && g <= 89) {\n       std::cout << \"B\";\n   } else if (g >= 70 && g <= 79) {\n       std::cout << \"C\";\n   } else if (g >= 60 && g <= 69) {\n       std::cout << \"D\";\n   } else if (g >= 0  && g <= 59) {\n       std::cout << \"F\";\n   } else {\n       std::cout << \"Please put a number.\";\n   }\n   std::cout << std::endl;\n}\n\nint main(int argc, char** argv)\n{\n    std::cout << \"what is your score?\" << std::endl;\n    get_grade(rand() % 100);\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "Ċ", "void", "Ġget", "_", "grade", "(", "int", "Ġg", ")", "Ċ", "{", "Ċ", "ĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġg", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĊ", "ĠĠ", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ90", "Ġ&&", "Ġg", "Ġ<=", "Ġ100", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "A", "\";", "Ċ", "ĠĠ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ80", "Ġ&&", "Ġg", "Ġ<=", "Ġ89", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "B", "\";", "Ċ", "ĠĠ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ70", "Ġ&&", "Ġg", "Ġ<=", "Ġ79", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "C", "\";", "Ċ", "ĠĠ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ60", "Ġ&&", "Ġg", "Ġ<=", "Ġ69", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "D", "\";", "Ċ", "ĠĠ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ0", "Ġ", "Ġ&&", "Ġg", "Ġ<=", "Ġ59", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "F", "\";", "Ċ", "ĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Please", "Ġput", "Ġa", "Ġnumber", ".\";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "what", "Ġis", "Ġyour", "Ġscore", "?\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġget", "_", "grade", "(", "rand", "()", "Ġ%", "Ġ100", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::832", "code": "#include <stdio.h>\n#include <iostream>\nusing namespace std;\n\nint c[1001], n, m;\nbool ispos(int cap) {\n    int sum = 0, cnt = 1;\n    for (int i=0; i<n; i++)\n        if ((sum+=c[i]) > cap) {\n            sum = c[i];\n            if (++cnt > m)\n                return false;\n        }\n    return true;\n}\n\nint main() {\n    while (scanf(\"%d%d\", &n, &m)==2) {\n        int lo=0, hi=0;\n        for (int i=0; i<n; i++) {\n            scanf(\"%d\", c+i);\n            lo=max(lo, c[i]);\n            hi+=c[i];\n        }\n\n        while (lo <= hi) {\n            int mid = (lo+hi)>>1;\n            if (ispos(mid))\n                hi = mid-1;\n            else\n                lo = mid+1;\n        }\n        printf(\"%d\\n\", hi+1);\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġc", "[", "1001", "],", "Ġn", ",", "Ġm", ";", "Ċ", "bool", "Ġis", "pos", "(", "int", "Ġcap", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġsum", "Ġ=", "Ġ0", ",", "Ġcnt", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ((", "sum", "+=", "c", "[", "i", "])", "Ġ>", "Ġcap", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsum", "Ġ=", "Ġc", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(++", "cnt", "Ġ>", "Ġm", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "scanf", "(\"%", "d", "%", "d", "\",", "Ġ&", "n", ",", "Ġ&", "m", ")==", "2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġlo", "=", "0", ",", "Ġhi", "=", "0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "\",", "Ġc", "+", "i", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġlo", "=", "max", "(", "lo", ",", "Ġc", "[", "i", "]);", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġhi", "+=", "c", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "lo", "Ġ<=", "Ġhi", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġmid", "Ġ=", "Ġ(", "lo", "+", "hi", ")>>", "1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "is", "pos", "(", "mid", "))", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġhi", "Ġ=", "Ġmid", "-", "1", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġlo", "Ġ=", "Ġmid", "+", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "Ġhi", "+", "1", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::833", "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<sstream>\n#include<cstdlib>\n#include\"CHEBYSHEV/Chebyshev.hpp\"\n#include\"LAGRANGE/Lagrange.hpp\"\n#include\"CPLOT/cplot.hpp\"\n\nint main(int argc, char* argv[]) {\n\tstd::vector<int> Nall;\n\tNall.push_back(5);\n\tfor (int j=0; j<7; ++j) {\n\t\tNall.push_back(2*Nall[j]);\n\t}\n\tsrand(time(NULL));\n\tdouble RMAX\t=\tRAND_MAX;\n\tfor (int j=0; j<Nall.size(); ++j) {\n\t\tint N\t=\tNall[j];\n\t\tstd::vector<double> fNodes;\n\t\tstd::vector<double> xNodes\t=\tget_Standard_Chebyshev_Nodes(N);\n\t\tfor (int k=0; k<N; ++k) {\n\t\t\tfNodes.push_back(rand()/RMAX);\n\t\t}\n\t\tLagrange L(xNodes, fNodes);\n\t\tstd::ostringstream fileName;\n\t\tfileName << \"Interp_\" << N << \".tex\";\n\t\tL.drawplot(-1,1,fileName.str());\n\t}\n}", "code_tokens": ["Ġ#", "include", "<", "i", "ostream", ">", "Ċ", "#", "include", "<", "vector", ">", "Ċ", "#", "include", "<", "cm", "ath", ">", "Ċ", "#", "include", "<", "s", "stream", ">", "Ċ", "#", "include", "<", "c", "stdlib", ">", "Ċ", "#", "include", "\"", "CHE", "BY", "SHE", "V", "/", "Che", "byshev", ".", "hpp", "\"", "Ċ", "#", "include", "\"", "LAG", "RANGE", "/", "Lag", "range", ".", "hpp", "\"", "Ċ", "#", "include", "\"", "CPL", "OT", "/", "cp", "lot", ".", "hpp", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ġ{", "Ċ", "ĉ", "std", "::", "vector", "<", "int", ">", "ĠN", "all", ";", "Ċ", "ĉ", "N", "all", ".", "push", "_", "back", "(", "5", ");", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġj", "=", "0", ";", "Ġj", "<", "7", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "N", "all", ".", "push", "_", "back", "(", "2", "*", "N", "all", "[", "j", "]);", "Ċ", "ĉ", "}", "Ċ", "ĉ", "sr", "and", "(", "time", "(", "NULL", "));", "Ċ", "ĉ", "double", "ĠR", "MAX", "ĉ", "=", "ĉ", "RAND", "_", "MAX", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġj", "=", "0", ";", "Ġj", "<", "N", "all", ".", "size", "();", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "ĠN", "ĉ", "=", "ĉ", "N", "all", "[", "j", "];", "Ċ", "ĉ", "ĉ", "std", "::", "vector", "<", "double", ">", "Ġf", "Nodes", ";", "Ċ", "ĉ", "ĉ", "std", "::", "vector", "<", "double", ">", "Ġx", "Nodes", "ĉ", "=", "ĉ", "get", "_", "Standard", "_", "Che", "byshev", "_", "Nodes", "(", "N", ");", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġk", "=", "0", ";", "Ġk", "<", "N", ";", "Ġ++", "k", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "f", "Nodes", ".", "push", "_", "back", "(", "rand", "()/", "R", "MAX", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "Lag", "range", "ĠL", "(", "x", "Nodes", ",", "Ġf", "Nodes", ");", "Ċ", "ĉ", "ĉ", "std", "::", "ostringstream", "ĠfileName", ";", "Ċ", "ĉ", "ĉ", "fileName", "Ġ<<", "Ġ\"", "Interp", "_\"", "Ġ<<", "ĠN", "Ġ<<", "Ġ\".", "tex", "\";", "Ċ", "ĉ", "ĉ", "L", ".", "draw", "plot", "(-", "1", ",", "1", ",", "fileName", ".", "str", "());", "Ċ", "ĉ", "}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::834", "code": "#include <RomanceEngine/GUI/value_bar.h>\n#include <RomanceEngine/Render/primitive_renderer.h>\n\nnamespace RomanceEngine {\nnamespace GUI {\n\nvoid ValueBar::click(const Math::Float2& p)\n{\n  GUIObject::click(p);\n  float w = getRegion().width();\n  float pos = p.x_ - getRegion().left();\n  value_ = pos / w;\n}\n\nvoid ValueBar::render(const Render::RenderContextPtr& context)\n{\n  Render::PrimitiveRenderer pr(context);\n  pr.drawRect(region_, Math::Float4(0.5f, 0.5f, 0.5f, 1.0f));\n  \n  Math::Rect valueRect = region_;\n  valueRect.size_.x_ *= value_;\n  pr.drawRect(valueRect, Math::Float4(0.3f, 0.3f, 0.8f, 1.0f));\n}\n  \n\n} // GUI\n} // RomanceEngine", "code_tokens": ["Ġ#", "include", "Ġ<", "Rom", "ance", "Engine", "/", "GUI", "/", "value", "_", "bar", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Rom", "ance", "Engine", "/", "Render", "/", "primitive", "_", "renderer", ".", "h", ">", "Ċ", "Ċ", "namespace", "ĠR", "om", "ance", "Engine", "Ġ{", "Ċ", "namespace", "ĠGUI", "Ġ{", "Ċ", "Ċ", "void", "ĠValue", "Bar", "::", "click", "(", "const", "ĠMath", "::", "Float", "2", "&", "Ġp", ")", "Ċ", "{", "Ċ", "Ġ", "ĠGUI", "Object", "::", "click", "(", "p", ");", "Ċ", "Ġ", "Ġfloat", "Ġw", "Ġ=", "Ġget", "Region", "().", "width", "();", "Ċ", "Ġ", "Ġfloat", "Ġpos", "Ġ=", "Ġp", ".", "x", "_", "Ġ-", "Ġget", "Region", "().", "left", "();", "Ċ", "Ġ", "Ġvalue", "_", "Ġ=", "Ġpos", "Ġ/", "Ġw", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠValue", "Bar", "::", "render", "(", "const", "ĠRender", "::", "RenderContext", "Ptr", "&", "Ġcontext", ")", "Ċ", "{", "Ċ", "Ġ", "ĠRender", "::", "Primitive", "Renderer", "Ġpr", "(", "context", ");", "Ċ", "Ġ", "Ġpr", ".", "drawRect", "(", "region", "_,", "ĠMath", "::", "Float", "4", "(", "0", ".", "5", "f", ",", "Ġ0", ".", "5", "f", ",", "Ġ0", ".", "5", "f", ",", "Ġ1", ".", "0", "f", "));", "Ċ", "ĠĠĊ", "Ġ", "ĠMath", "::", "Rect", "Ġvalue", "Rect", "Ġ=", "Ġregion", "_;", "Ċ", "Ġ", "Ġvalue", "Rect", ".", "size", "_.", "x", "_", "Ġ*=", "Ġvalue", "_;", "Ċ", "Ġ", "Ġpr", ".", "drawRect", "(", "value", "Rect", ",", "ĠMath", "::", "Float", "4", "(", "0", ".", "3", "f", ",", "Ġ0", ".", "3", "f", ",", "Ġ0", ".", "8", "f", ",", "Ġ1", ".", "0", "f", "));", "Ċ", "}", "Ċ", "ĠĠĊ", "Ċ", "}", "Ġ//", "ĠGUI", "Ċ", "}", "Ġ//", "ĠR", "om", "ance", "Engine"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::835", "code": "#include \"nau/event/eventFloat.h\"\n\nusing namespace nau::event_;\n\nEventFloat::EventFloat(float flt)\n{\n\tthis->flt=flt;\n}\n\nEventFloat::EventFloat(const EventFloat &s)\n{\n\tflt=s.flt;\n}\n\nEventFloat::EventFloat(void)\n{\n\tflt=0;\n}\n\nEventFloat::~EventFloat(void)\n{\n}\n\nvoid EventFloat::setData(void *data)\n{\n\tfloat *d=(float*)data;\n\tthis->flt=*d;\n}\n\n\nvoid *EventFloat::getData(void)\n{\n\treturn &flt;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "na", "u", "/", "event", "/", "event", "Float", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġn", "au", "::", "event", "_;", "Ċ", "Ċ", "Event", "Float", "::", "Event", "Float", "(", "float", "Ġflt", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "flt", "=", "flt", ";", "Ċ", "}", "Ċ", "Ċ", "Event", "Float", "::", "Event", "Float", "(", "const", "ĠEvent", "Float", "Ġ&", "s", ")", "Ċ", "{", "Ċ", "ĉ", "flt", "=", "s", ".", "flt", ";", "Ċ", "}", "Ċ", "Ċ", "Event", "Float", "::", "Event", "Float", "(", "void", ")", "Ċ", "{", "Ċ", "ĉ", "flt", "=", "0", ";", "Ċ", "}", "Ċ", "Ċ", "Event", "Float", "::~", "Event", "Float", "(", "void", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠEvent", "Float", "::", "setData", "(", "void", "Ġ*", "data", ")", "Ċ", "{", "Ċ", "ĉ", "float", "Ġ*", "d", "=(", "float", "*)", "data", ";", "Ċ", "ĉ", "this", "->", "flt", "=*", "d", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "void", "Ġ*", "Event", "Float", "::", "getData", "(", "void", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ&", "flt", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::836", "code": "//\n// Created by Jean-Antoine Dupont on 01/04/2016.\n//\n\n#ifndef     __ICLIENT_HPP__\n#define     __ICLIENT_HPP__\n\n#include    \"IConnection.hpp\"\n#include    \"IMessenger.hpp\"\n\nclass                   IClient\n{\nprotected:\n    IConnection         *connectionManager;\n    IMessenger          *messengerManager;\n\n/*  Functions   */\npublic:\n    virtual ~IClient() {};\n\n    /*  Getter / Setter */\n    virtual IConnection *getConnectionManager() const = 0;\n    virtual IMessenger  *getMessengerManager() const = 0;\n\n    /*  Connection management   */\n    virtual int         connection(const int domain = AF_INET, const int type = SOCK_STREAM,\n                                   const std::string &protocol = std::string()) = 0;\n    virtual void        disconnection() = 0;\n\n    /*  Message management  */\n    virtual int         sendMessage(const void *message, const unsigned int msg_size,\n                                    const int flags = 0,\n                                    const sockaddr *to = nullptr) = 0;\n\n    virtual void        *receiveMessage(const unsigned int read_size = 4096,\n                                        const int flags = 0,\n                                        struct sockaddr *to = nullptr, socklen_t *to_size = nullptr) = 0;\n};\n\n#endif  /*  __ICLIENT_HPP__ */\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "ĠJ", "e", "an", "-", "An", "to", "ine", "ĠDup", "ont", "Ġon", "Ġ01", "/", "04", "/", "2016", ".", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠĠĠĠ", "Ġ__", "IC", "LI", "ENT", "_", "HP", "P", "__", "Ċ", "#", "define", "ĠĠĠĠ", "Ġ__", "IC", "LI", "ENT", "_", "HP", "P", "__", "Ċ", "Ċ", "#", "include", "ĠĠĠ", "Ġ\"", "I", "Connection", ".", "hpp", "\"", "Ċ", "#", "include", "ĠĠĠ", "Ġ\"", "IM", "ess", "enger", ".", "hpp", "\"", "Ċ", "Ċ", "class", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠI", "Client", "Ċ", "{", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "ĠI", "Connection", "ĠĠĠĠĠĠĠĠ", "Ġ*", "connection", "Manager", ";", "Ċ", "ĠĠĠ", "ĠI", "Messenger", "ĠĠĠĠĠĠĠĠĠ", "Ġ*", "mess", "enger", "Manager", ";", "Ċ", "Ċ", "/*", "Ġ", "ĠFunctions", "ĠĠ", "Ġ*/", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "IC", "lient", "()", "Ġ{};", "Ċ", "Ċ", "ĠĠĠ", "Ġ/*", "Ġ", "ĠGet", "ter", "Ġ/", "ĠSet", "ter", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "ĠI", "Connection", "Ġ*", "getConnection", "Manager", "()", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "ĠI", "Messenger", "Ġ", "Ġ*", "getM", "ess", "enger", "Manager", "()", "Ġconst", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ/*", "Ġ", "ĠConnection", "Ġmanagement", "ĠĠ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġint", "ĠĠĠĠĠĠĠĠ", "Ġconnection", "(", "const", "Ġint", "Ġdomain", "Ġ=", "ĠAF", "_", "INET", ",", "Ġconst", "Ġint", "Ġtype", "Ġ=", "ĠSOCK", "_", "STREAM", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġ&", "protocol", "Ġ=", "Ġstd", "::", "string", "())", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "ĠĠĠĠĠĠĠ", "Ġdis", "connection", "()", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ/*", "Ġ", "ĠMessage", "Ġmanagement", "Ġ", "Ġ*/", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġint", "ĠĠĠĠĠĠĠĠ", "ĠsendMessage", "(", "const", "Ġvoid", "Ġ*", "message", ",", "Ġconst", "Ġunsigned", "Ġint", "Ġmsg", "_", "size", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġint", "Ġflags", "Ġ=", "Ġ0", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġsockaddr", "Ġ*", "to", "Ġ=", "Ġnullptr", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "ĠĠĠĠĠĠĠ", "Ġ*", "receive", "Message", "(", "const", "Ġunsigned", "Ġint", "Ġread", "_", "size", "Ġ=", "Ġ4096", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġint", "Ġflags", "Ġ=", "Ġ0", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstruct", "Ġsockaddr", "Ġ*", "to", "Ġ=", "Ġnullptr", ",", "Ġsock", "len", "_", "t", "Ġ*", "to", "_", "size", "Ġ=", "Ġnullptr", ")", "Ġ=", "Ġ0", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ", "Ġ/*", "Ġ", "Ġ__", "IC", "LI", "ENT", "_", "HP", "P", "__", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::837", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define sd(x) scanf(\"%d\",&x)\n#define su(x) scanf(\"%u\",&x)\n#define slld(x) scanf(\"%lld\",&x)\n#define sc(x) scanf(\"%c\",&x)\n#define ss(x) scanf(\"%s\",x)\n#define sf(x) scanf(\"%f\",&x)\n#define slf(x) scanf(\"%lf\",&x)\n#define ll long long int\n#define mod(x,n) (x+n)%n\n\nint ceil(int n,int x) // x/n\n{\n\tif(n%x==0)\n\t\treturn n/x;\n\treturn n/x+1;\n}\n\nint main()\n{\n\t// freopen(\"input_file_name.in\",\"r\",stdin);\n\t// freopen(\"output_file_name.out\",\"w\",stdout);\n\n\tint i,j,k,l=0,m,n;\n\n\tsd(n);\tsd(k);\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tsd(m);\n\t\tl+=ceil(m,k);\n\t}\n\n\tprintf(\"%d\\n\", ceil(l,2) );\n\t\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "define", "Ġsd", "(", "x", ")", "Ġscanf", "(\"%", "d", "\",&", "x", ")", "Ċ", "#", "define", "Ġsu", "(", "x", ")", "Ġscanf", "(\"%", "u", "\",&", "x", ")", "Ċ", "#", "define", "Ġs", "lld", "(", "x", ")", "Ġscanf", "(\"%", "lld", "\",&", "x", ")", "Ċ", "#", "define", "Ġsc", "(", "x", ")", "Ġscanf", "(\"%", "c", "\",&", "x", ")", "Ċ", "#", "define", "Ġss", "(", "x", ")", "Ġscanf", "(\"%", "s", "\",", "x", ")", "Ċ", "#", "define", "Ġsf", "(", "x", ")", "Ġscanf", "(\"%", "f", "\",&", "x", ")", "Ċ", "#", "define", "Ġs", "lf", "(", "x", ")", "Ġscanf", "(\"%", "lf", "\",&", "x", ")", "Ċ", "#", "define", "Ġll", "Ġlong", "Ġlong", "Ġint", "Ċ", "#", "define", "Ġmod", "(", "x", ",", "n", ")", "Ġ(", "x", "+", "n", ")%", "n", "Ċ", "Ċ", "int", "Ġceil", "(", "int", "Ġn", ",", "int", "Ġx", ")", "Ġ//", "Ġx", "/", "n", "Ċ", "{", "Ċ", "ĉ", "if", "(", "n", "%", "x", "==", "0", ")", "Ċ", "ĉ", "ĉ", "return", "Ġn", "/", "x", ";", "Ċ", "ĉ", "return", "Ġn", "/", "x", "+", "1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "//", "Ġfre", "open", "(\"", "input", "_", "file", "_", "name", ".", "in", "\",\"", "r", "\",", "stdin", ");", "Ċ", "ĉ", "//", "Ġfre", "open", "(\"", "output", "_", "file", "_", "name", ".", "out", "\",\"", "w", "\",", "stdout", ");", "Ċ", "Ċ", "ĉ", "int", "Ġi", ",", "j", ",", "k", ",", "l", "=", "0", ",", "m", ",", "n", ";", "Ċ", "Ċ", "ĉ", "sd", "(", "n", ");", "ĉ", "sd", "(", "k", ");", "Ċ", "Ċ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "n", ";", "i", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "sd", "(", "m", ");", "Ċ", "ĉ", "ĉ", "l", "+=", "ceil", "(", "m", ",", "k", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "printf", "(\"%", "d", "\\", "n", "\",", "Ġceil", "(", "l", ",", "2", ")", "Ġ);", "Ċ", "ĉĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::838", "code": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int test,n,p;\n    cin>>test;\n    while(test--)\n    {\n        cin>>n>>p;\n        if(p==0)\n            cout<<\"Airborne wins.\"<<endl;\n        else\n            cout<<\"Pagfloyd wins.\"<<endl;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġtest", ",", "n", ",", "p", ";", "Ċ", "ĠĠĠ", "Ġcin", ">>", "test", ";", "Ċ", "ĠĠĠ", "Ġwhile", "(", "test", "--)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", ">>", "n", ">>", "p", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "p", "==", "0", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "<<\"", "Air", "bor", "ne", "Ġwins", ".\"", "<<", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcout", "<<\"", "Pag", "f", "loy", "d", "Ġwins", ".\"", "<<", "endl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::839", "code": "#if !defined TEMPLATE_CLASS_HPP\n#define TEMPLATE_CLASS_HPP\n\nclass TemplateClass\n{\npublic:\n\n    // Frobnicates the widget\n    TemplateClass();\n\n    // Defrobnicates the widget.  Make this virtual if this class derives from\n    // something\n    ~TemplateClass();\n\nprivate:\n\n    // Copy construction and assignment not allowed.  Consider getting rid of\n    // the operator= code in the implementation file if operator= remains\n    // private\n    TemplateClass(const TemplateClass&);\n    TemplateClass& operator=(const TemplateClass&);\n};\n\n#endif\n", "code_tokens": ["Ġ#", "if", "Ġ!", "defined", "ĠTEMP", "LATE", "_", "CLASS", "_", "HP", "P", "Ċ", "#", "define", "ĠTEMP", "LATE", "_", "CLASS", "_", "HP", "P", "Ċ", "Ċ", "class", "ĠTemplate", "Class", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠF", "ro", "bn", "icates", "Ġthe", "Ġwidget", "Ċ", "ĠĠĠ", "ĠTemplate", "Class", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠDef", "ro", "bn", "icates", "Ġthe", "Ġwidget", ".", "Ġ", "ĠMake", "Ġthis", "Ġvirtual", "Ġif", "Ġthis", "Ġclass", "Ġder", "ives", "Ġfrom", "Ċ", "ĠĠĠ", "Ġ//", "Ġsomething", "Ċ", "ĠĠĠ", "Ġ~", "Template", "Class", "();", "Ċ", "Ċ", "private", ":", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠCopy", "Ġconstruction", "Ġand", "Ġassignment", "Ġnot", "Ġallowed", ".", "Ġ", "ĠConsider", "Ġgetting", "Ġrid", "Ġof", "Ċ", "ĠĠĠ", "Ġ//", "Ġthe", "Ġoperator", "=", "Ġcode", "Ġin", "Ġthe", "Ġimplementation", "Ġfile", "Ġif", "Ġoperator", "=", "Ġremains", "Ċ", "ĠĠĠ", "Ġ//", "Ġprivate", "Ċ", "ĠĠĠ", "ĠTemplate", "Class", "(", "const", "ĠTemplate", "Class", "&", ");", "Ċ", "ĠĠĠ", "ĠTemplate", "Class", "&", "Ġoperator", "=(", "const", "ĠTemplate", "Class", "&", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::840", "code": "#include \"osgLuaBinding.h\"\n#include \"NodeScriptResultHandler.h\"\n\n\nNodeScriptResultHandler::NodeScriptResultHandler() :\n    LuaResultHandler(LuaResultHandler::UNLIMITED_RESULTS)\n{\n\n}\n\nNodeScriptResultHandler::~NodeScriptResultHandler()\n{\n\n}\n\nvoid NodeScriptResultHandler::handle(LuaState &luaState, unsigned int nbResults)\n{\n    if (nbResults == 0)\n    {\n        _node = 0;\n    }\n    else if (nbResults == 1)\n    {\n        _node = lua_toOsgNode(luaState, -1);\n    }\n    else\n    {\n        osg::ref_ptr<osg::Group> group = new osg::Group;\n        for (unsigned int i = nbResults; i > 0; --i)\n        {\n            osg::Node *node = lua_toOsgNode(luaState, -i);\n            group->addChild(node);\n        }\n\n        if (group->getNumChildren() == 1)\n        {\n            _node = group->getChild(0);\n        }\n        else if (group->getNumChildren() > 0)\n        {\n            _node = group;\n        }\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "osg", "Lua", "Binding", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Node", "Script", "Result", "Handler", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "Node", "Script", "Result", "Handler", "::", "Node", "Script", "Result", "Handler", "()", "Ġ:", "Ċ", "ĠĠĠ", "ĠLua", "Result", "Handler", "(", "Lua", "Result", "Handler", "::", "UN", "LIMIT", "ED", "_", "RESULTS", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Node", "Script", "Result", "Handler", "::~", "Node", "Script", "Result", "Handler", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNode", "Script", "Result", "Handler", "::", "handle", "(", "Lua", "State", "Ġ&", "lua", "State", ",", "Ġunsigned", "Ġint", "Ġnb", "Results", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "nb", "Results", "Ġ==", "Ġ0", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "node", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(", "nb", "Results", "Ġ==", "Ġ1", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "node", "Ġ=", "Ġlua", "_", "to", "O", "sg", "Node", "(", "lua", "State", ",", "Ġ-", "1", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġosg", "::", "ref", "_", "ptr", "<", "osg", "::", "Group", ">", "Ġgroup", "Ġ=", "Ġnew", "Ġosg", "::", "Group", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġint", "Ġi", "Ġ=", "Ġnb", "Results", ";", "Ġi", "Ġ>", "Ġ0", ";", "Ġ--", "i", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġosg", "::", "Node", "Ġ*", "node", "Ġ=", "Ġlua", "_", "to", "O", "sg", "Node", "(", "lua", "State", ",", "Ġ-", "i", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġgroup", "->", "addChild", "(", "node", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "group", "->", "getNum", "Children", "()", "Ġ==", "Ġ1", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "node", "Ġ=", "Ġgroup", "->", "getChild", "(", "0", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġif", "Ġ(", "group", "->", "getNum", "Children", "()", "Ġ>", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "node", "Ġ=", "Ġgroup", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::841", "code": "//\n//  yas_processing_cast_module.cpp\n//\n\n#include \"yas_processing_cast_module.h\"\n\nusing namespace yas;\nusing namespace yas::proc;\n\nvoid yas::connect(proc::module_ptr const &module, proc::cast::input const &input, proc::channel_index_t const &ch_idx) {\n    module->connect_input(proc::to_connector_index(input), ch_idx);\n}\n\nvoid yas::connect(proc::module_ptr const &module, proc::cast::output const &output,\n                  proc::channel_index_t const &ch_idx) {\n    module->connect_output(proc::to_connector_index(output), ch_idx);\n}\n\nstd::string yas::to_string(proc::cast::input const &input) {\n    using namespace yas::proc::cast;\n\n    switch (input) {\n        case input::value:\n            return \"value\";\n    }\n\n    throw \"input not found.\";\n}\n\nstd::string yas::to_string(proc::cast::output const &output) {\n    using namespace yas::proc::cast;\n\n    switch (output) {\n        case output::value:\n            return \"value\";\n    }\n\n    throw \"output not found.\";\n}\n\nstd::ostream &operator<<(std::ostream &os, yas::proc::cast::input const &value) {\n    os << to_string(value);\n    return os;\n}\n\nstd::ostream &operator<<(std::ostream &os, yas::proc::cast::output const &value) {\n    os << to_string(value);\n    return os;\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġy", "as", "_", "processing", "_", "cast", "_", "module", ".", "cpp", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "y", "as", "_", "processing", "_", "cast", "_", "module", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġy", "as", ";", "Ċ", "using", "Ġnamespace", "Ġy", "as", "::", "proc", ";", "Ċ", "Ċ", "void", "Ġy", "as", "::", "connect", "(", "proc", "::", "module", "_", "ptr", "Ġconst", "Ġ&", "module", ",", "Ġproc", "::", "cast", "::", "input", "Ġconst", "Ġ&", "input", ",", "Ġproc", "::", "channel", "_", "index", "_", "t", "Ġconst", "Ġ&", "ch", "_", "idx", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġmodule", "->", "connect", "_", "input", "(", "proc", "::", "to", "_", "connector", "_", "index", "(", "input", "),", "Ġch", "_", "idx", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġy", "as", "::", "connect", "(", "proc", "::", "module", "_", "ptr", "Ġconst", "Ġ&", "module", ",", "Ġproc", "::", "cast", "::", "output", "Ġconst", "Ġ&", "output", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġproc", "::", "channel", "_", "index", "_", "t", "Ġconst", "Ġ&", "ch", "_", "idx", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġmodule", "->", "connect", "_", "output", "(", "proc", "::", "to", "_", "connector", "_", "index", "(", "output", "),", "Ġch", "_", "idx", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "Ġy", "as", "::", "to", "_", "string", "(", "proc", "::", "cast", "::", "input", "Ġconst", "Ġ&", "input", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġusing", "Ġnamespace", "Ġy", "as", "::", "proc", "::", "cast", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġswitch", "Ġ(", "input", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "Ġinput", "::", "value", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ\"", "value", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġthrow", "Ġ\"", "input", "Ġnot", "Ġfound", ".\";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "Ġy", "as", "::", "to", "_", "string", "(", "proc", "::", "cast", "::", "output", "Ġconst", "Ġ&", "output", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġusing", "Ġnamespace", "Ġy", "as", "::", "proc", "::", "cast", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġswitch", "Ġ(", "output", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "Ġoutput", "::", "value", ":", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ\"", "value", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġthrow", "Ġ\"", "output", "Ġnot", "Ġfound", ".\";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "ostream", "Ġ&", "operator", "<<(", "std", "::", "ostream", "Ġ&", "os", ",", "Ġy", "as", "::", "proc", "::", "cast", "::", "input", "Ġconst", "Ġ&", "value", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġos", "Ġ<<", "Ġto", "_", "string", "(", "value", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "ostream", "Ġ&", "operator", "<<(", "std", "::", "ostream", "Ġ&", "os", ",", "Ġy", "as", "::", "proc", "::", "cast", "::", "output", "Ġconst", "Ġ&", "value", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġos", "Ġ<<", "Ġto", "_", "string", "(", "value", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::842", "code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n{\n    shared_ptr<int> p = make_shared<int>(42);\n    auto p1(p);\n    shared_ptr<int> p2;\n    p2 = p1;\n    weak_ptr<int> wp(p);\n    cout << wp.use_count() << endl;\n    if (shared_ptr<int> np = wp.lock())\n    {\n        cout << \"number: \" << *np << endl;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġshared", "_", "ptr", "<", "int", ">", "Ġp", "Ġ=", "Ġmake", "_", "shared", "<", "int", ">(", "42", ");", "Ċ", "ĠĠĠ", "Ġauto", "Ġp", "1", "(", "p", ");", "Ċ", "ĠĠĠ", "Ġshared", "_", "ptr", "<", "int", ">", "Ġp", "2", ";", "Ċ", "ĠĠĠ", "Ġp", "2", "Ġ=", "Ġp", "1", ";", "Ċ", "ĠĠĠ", "Ġweak", "_", "ptr", "<", "int", ">", "Ġwp", "(", "p", ");", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġwp", ".", "use", "_", "count", "()", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "shared", "_", "ptr", "<", "int", ">", "Ġnp", "Ġ=", "Ġwp", ".", "lock", "())", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "number", ":", "Ġ\"", "Ġ<<", "Ġ*", "np", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::843", "code": "#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  string s;\n  while (cin >> s && s != \"#\") {\n    if (next_permutation(s.begin(), s.end())) {\n      cout << s << endl;\n    } else {\n      cout << \"No Successor\" << endl;\n    }\n  }\n  return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġios", "::", "sync", "_", "with", "_", "stdio", "(", "false", ");", "Ċ", "Ġ", "Ġstring", "Ġs", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġs", "Ġ&&", "Ġs", "Ġ!=", "Ġ\"#\")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "next", "_", "permutation", "(", "s", ".", "begin", "(),", "Ġs", ".", "end", "()))", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġs", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "No", "ĠSuccess", "or", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::844", "code": "/*!\r\n* \\file ComportementRoiMachine.cpp\r\n* \\brief Fichier contenant l'implémentation de la classe ComportementRoiMachine\r\n* \\author François Hallereau\r\n* \\author Sébastien Vallée\r\n* \\date 12.2014\r\n*/\r\n\r\n//--------------------------------------------------\r\n/*!\r\n* \\brief Constructeur de la classe\r\n*/\r\nComportementRoiMachine::ComportementRoiMachine():ComportementMachine(){}\r\n\r\n//--------------------------------------------------\r\n/*!\r\n* \\brief Destructeur de la classe\r\n*/\r\nComportementRoiMachine::~ComportementRoiMachine(){}\r\n\r\n//--------------------------------------------------\r\n/*!\r\n* \\brief méthode de jeu pour le roi machine\r\n* \\param partie la partie\r\n* \\param joueur le joueur\r\n*/\r\nvoid ComportementRoiMachine::jouer(Partie * partie, Joueur * joueur){\r\n\tRoi::capacite(partie,joueur);\r\n\tchoisirGainTour(joueur);\r\n\tchoisirConstruction(joueur);\r\n}\r\n", "code_tokens": ["Ġ/*", "!", "č", "Ċ", "*", "Ġ\\", "file", "ĠComp", "orte", "ment", "Roi", "Machine", ".", "cpp", "č", "Ċ", "*", "Ġ\\", "brief", "ĠF", "ich", "ier", "Ġcont", "enant", "Ġl", "'", "impl", "Ã©", "ment", "ation", "Ġde", "Ġla", "Ġc", "las", "se", "ĠComp", "orte", "ment", "Roi", "Machine", "č", "Ċ", "*", "Ġ\\", "author", "ĠF", "ran", "Ã§", "o", "is", "ĠH", "alle", "re", "au", "č", "Ċ", "*", "Ġ\\", "author", "ĠS", "Ã©", "bast", "ien", "ĠV", "all", "Ã©", "e", "č", "Ċ", "*", "Ġ\\", "date", "Ġ12", ".", "2014", "č", "Ċ", "*/", "č", "Ċ", "č", "Ċ", "//", "------------------------------------------------", "--", "č", "Ċ", "/*!", "č", "Ċ", "*", "Ġ\\", "brief", "ĠConstruct", "e", "ur", "Ġde", "Ġla", "Ġc", "las", "se", "č", "Ċ", "*/", "č", "Ċ", "Comp", "orte", "ment", "Roi", "Machine", "::", "Comp", "orte", "ment", "Roi", "Machine", "():", "Comp", "orte", "ment", "Machine", "(){}", "č", "Ċ", "č", "Ċ", "//", "------------------------------------------------", "--", "č", "Ċ", "/*!", "č", "Ċ", "*", "Ġ\\", "brief", "ĠDe", "struct", "e", "ur", "Ġde", "Ġla", "Ġc", "las", "se", "č", "Ċ", "*/", "č", "Ċ", "Comp", "orte", "ment", "Roi", "Machine", "::~", "Comp", "orte", "ment", "Roi", "Machine", "(){}", "č", "Ċ", "č", "Ċ", "//", "------------------------------------------------", "--", "č", "Ċ", "/*!", "č", "Ċ", "*", "Ġ\\", "brief", "Ġm", "Ã©", "th", "ode", "Ġde", "Ġj", "eu", "Ġp", "our", "Ġle", "Ġroi", "Ġmachine", "č", "Ċ", "*", "Ġ\\", "param", "Ġpart", "ie", "Ġla", "Ġpart", "ie", "č", "Ċ", "*", "Ġ\\", "param", "Ġjo", "ue", "ur", "Ġle", "Ġjo", "ue", "ur", "č", "Ċ", "*/", "č", "Ċ", "void", "ĠComp", "orte", "ment", "Roi", "Machine", "::", "jo", "uer", "(", "Part", "ie", "Ġ*", "Ġpart", "ie", ",", "ĠJo", "ue", "ur", "Ġ*", "Ġjo", "ue", "ur", "){", "č", "Ċ", "ĉ", "Roi", "::", "cap", "ac", "ite", "(", "part", "ie", ",", "jo", "ue", "ur", ");", "č", "Ċ", "ĉ", "cho", "is", "ir", "Gain", "T", "our", "(", "jo", "ue", "ur", ");", "č", "Ċ", "ĉ", "cho", "is", "ir", "Construction", "(", "jo", "ue", "ur", ");", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::845", "code": "#include \"CircleJoint.h\"\n\nnamespace ofx {\nnamespace piMapper {\n\nCircleJoint::CircleJoint() { setDefaultProperties(); }\n\nvoid CircleJoint::update() {\n  if (!enabled) return;\n}\n\nvoid CircleJoint::draw() {\n  if (!visible) return;\n  if (!enabled) return;\n\n  ofPushStyle();\n  ofFill();\n\n  if (selected) {\n    ofSetColor(fillColorSelected);\n  } else {\n    ofSetColor(fillColor);\n  }\n\n  ofCircle(position.x, position.y, radius);\n  ofNoFill();\n\n  if (selected) {\n    ofSetColor(strokeColorSelected);\n  } else {\n    ofSetColor(strokeColor);\n  }\n\n  ofSetLineWidth(strokeWidth);\n  ofCircle(position.x, position.y, radius);\n  ofPopStyle();\n}\n\nvoid CircleJoint::setDefaultProperties() { radius = 10.0f; }\n\nbool CircleJoint::hitTest(ofVec2f pos) {\n  float distance = position.distance(pos);\n  if (distance < radius)\n    return true;\n  else\n    return false;\n}\n}\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Circle", "Joint", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġof", "x", "Ġ{", "Ċ", "namespace", "Ġpi", "Mapper", "Ġ{", "Ċ", "Ċ", "Circle", "Joint", "::", "Circle", "Joint", "()", "Ġ{", "ĠsetDefault", "Properties", "();", "Ġ}", "Ċ", "Ċ", "void", "ĠCircle", "Joint", "::", "update", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "enabled", ")", "Ġreturn", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCircle", "Joint", "::", "draw", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "visible", ")", "Ġreturn", ";", "Ċ", "Ġ", "Ġif", "Ġ(!", "enabled", ")", "Ġreturn", ";", "Ċ", "Ċ", "Ġ", "Ġof", "Push", "Style", "();", "Ċ", "Ġ", "Ġof", "Fill", "();", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "selected", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġof", "SetColor", "(", "fillColor", "Selected", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "Ġof", "SetColor", "(", "fillColor", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġof", "Circle", "(", "position", ".", "x", ",", "Ġposition", ".", "y", ",", "Ġradius", ");", "Ċ", "Ġ", "Ġof", "No", "Fill", "();", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "selected", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġof", "SetColor", "(", "strokeColor", "Selected", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "ĠĠĠ", "Ġof", "SetColor", "(", "strokeColor", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġof", "Set", "LineWidth", "(", "stroke", "Width", ");", "Ċ", "Ġ", "Ġof", "Circle", "(", "position", ".", "x", ",", "Ġposition", ".", "y", ",", "Ġradius", ");", "Ċ", "Ġ", "Ġof", "Pop", "Style", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCircle", "Joint", "::", "setDefault", "Properties", "()", "Ġ{", "Ġradius", "Ġ=", "Ġ10", ".", "0", "f", ";", "Ġ}", "Ċ", "Ċ", "bool", "ĠCircle", "Joint", "::", "hit", "Test", "(", "of", "Vec", "2", "f", "Ġpos", ")", "Ġ{", "Ċ", "Ġ", "Ġfloat", "Ġdistance", "Ġ=", "Ġposition", ".", "distance", "(", "pos", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "distance", "Ġ<", "Ġradius", ")", "Ċ", "ĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "ĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::846", "code": "/*\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n */\n#include \"libuavcan/libuavcan.hpp\"\n#include \"libuavcan/time.hpp\"\n\nnamespace\n{\nclass TooBig : public libuavcan::time::Base<TooBig, libuavcan::duration::Monotonic>\n{\n    uint8_t more_;\n};\n}  // namespace\n\nint main()\n{\n    TooBig a;\n    (void) a;\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ201", "9", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaff", "ili", "ates", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "li", "bu", "av", "can", "/", "li", "bu", "av", "can", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "li", "bu", "av", "can", "/", "time", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ċ", "{", "Ċ", "class", "ĠToo", "Big", "Ġ:", "Ġpublic", "Ġli", "bu", "av", "can", "::", "time", "::", "Base", "<", "Too", "Big", ",", "Ġli", "bu", "av", "can", "::", "duration", "::", "Mon", "otonic", ">", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġuint", "8", "_", "t", "Ġmore", "_;", "Ċ", "};", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠToo", "Big", "Ġa", ";", "Ċ", "ĠĠĠ", "Ġ(", "void", ")", "Ġa", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::847", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n\n\nSTART_ATF_NAMESPACE\n    #pragma pack(push, 8)\n    struct _qry_case_discharge_patriarch\n    {\n        char byRace;\n        unsigned int dwAvatorSerial;\n        unsigned int dwElectSerial;\n    public:\n        _qry_case_discharge_patriarch(char byR, unsigned int dwS, unsigned int dwE);\n        void ctor__qry_case_discharge_patriarch(char byR, unsigned int dwS, unsigned int dwE);\n        int size();\n    };    \n    #pragma pack(pop)\n    static_assert(ATF::checkSize<_qry_case_discharge_patriarch, 12>(), \"_qry_case_discharge_patriarch\");\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġ#", "pragma", "Ġpack", "(", "push", ",", "Ġ8", ")", "Ċ", "ĠĠĠ", "Ġstruct", "Ġ_", "qry", "_", "case", "_", "dis", "charge", "_", "pat", "ri", "arch", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchar", "Ġby", "Race", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġunsigned", "Ġint", "Ġdw", "Av", "ator", "Serial", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġunsigned", "Ġint", "Ġdw", "Elect", "Serial", ";", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ_", "qry", "_", "case", "_", "dis", "charge", "_", "pat", "ri", "arch", "(", "char", "Ġby", "R", ",", "Ġunsigned", "Ġint", "Ġdw", "S", ",", "Ġunsigned", "Ġint", "Ġdw", "E", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġctor", "__", "qry", "_", "case", "_", "dis", "charge", "_", "pat", "ri", "arch", "(", "char", "Ġby", "R", ",", "Ġunsigned", "Ġint", "Ġdw", "S", ",", "Ġunsigned", "Ġint", "Ġdw", "E", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġsize", "();", "Ċ", "ĠĠĠ", "Ġ};", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ#", "pragma", "Ġpack", "(", "pop", ")", "Ċ", "ĠĠĠ", "Ġstatic", "_", "assert", "(", "ATF", "::", "check", "Size", "<_", "qry", "_", "case", "_", "dis", "charge", "_", "pat", "ri", "arch", ",", "Ġ12", ">(),", "Ġ\"_", "qry", "_", "case", "_", "dis", "charge", "_", "pat", "ri", "arch", "\");", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::848", "code": "//===--------------------------------------------------------------------------------*- C++ -*-===//\n//                         _____                        _\n//                        / ____|                      (_)\n//                       | (___   ___  __ _ _   _  ___  _  __ _\n//                        \\___ \\ / _ \\/ _` | | | |/ _ \\| |/ _` |\n//                        ____) |  __/ (_| | |_| | (_) | | (_| |\n//                       |_____/ \\___|\\__, |\\__,_|\\___/|_|\\__,_| - Game Engine (2016-2017)\n//                                       | |\n//                                       |_|\n//\n// This file is distributed under the MIT License (MIT).\n// See LICENSE.txt for details.\n//\n//===------------------------------------------------------------------------------------------===//\n\n#include \"sequoia-engine/Unittest/GL/GLTestEnvironment.h\"\n\nnamespace sequoia {\n\nnamespace unittest {\n\nGLTestEnvironment::GLTestEnvironment(int argc, char* argv[])\n    : TestEnvironment(argc, argv, render::RK_OpenGL) {}\n\nvoid GLTestEnvironment::SetUp() {\n  TestEnvironment::SetUp();\n\n  auto options = getOptions();\n  renderSystem_ = render::RenderSystem::create(render::RK_OpenGL, options);\n}\n\nvoid GLTestEnvironment::TearDown() { renderSystem_.reset(); }\n\n} // namespace unittest\n\n} // namespace sequoia\n", "code_tokens": ["Ġ//", "===", "--------------------------------------------------------------------------------", "*-", "ĠC", "++", "Ġ-", "*-", "===//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "____", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ/", "Ġ_", "___", "|", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(_", ")", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "Ġ(__", "_", "ĠĠ", "Ġ___", "Ġ", "Ġ__", "Ġ_", "Ġ_", "ĠĠ", "Ġ_", "Ġ", "Ġ___", "Ġ", "Ġ_", "Ġ", "Ġ__", "Ġ_", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "___", "Ġ\\", "Ġ/", "Ġ_", "Ġ\\", "/", "Ġ_", "`", "Ġ|", "Ġ|", "Ġ|", "Ġ|", "/", "Ġ_", "Ġ\\", "|", "Ġ|", "/", "Ġ_", "`", "Ġ|", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ___", "_)", "Ġ|", "Ġ", "Ġ__", "/", "Ġ(_", "|", "Ġ|", "Ġ|", "_", "|", "Ġ|", "Ġ(_", ")", "Ġ|", "Ġ|", "Ġ(_", "|", "Ġ|", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "____", "_/", "Ġ\\", "___", "|\\", "__,", "Ġ|", "\\", "__,", "_", "|\\", "___", "/", "|_", "|\\", "__,", "_", "|", "Ġ-", "ĠGame", "ĠEngine", "Ġ(", "2016", "-", "2017", ")", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "Ġ|", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "_", "|", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdistributed", "Ġunder", "Ġthe", "ĠMIT", "ĠLicense", "Ġ(", "MIT", ").", "Ċ", "//", "ĠSee", "ĠLICENSE", ".", "txt", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//===", "----------------------------------------------------------------", "------------------------", "--", "===//", "Ċ", "Ċ", "#", "include", "Ġ\"", "se", "quo", "ia", "-", "engine", "/", "Unit", "test", "/", "GL", "/", "GL", "Test", "Environment", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġse", "quo", "ia", "Ġ{", "Ċ", "Ċ", "namespace", "Ġunittest", "Ġ{", "Ċ", "Ċ", "GL", "Test", "Environment", "::", "GL", "Test", "Environment", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ċ", "ĠĠĠ", "Ġ:", "ĠTest", "Environment", "(", "argc", ",", "Ġargv", ",", "Ġrender", "::", "RK", "_", "OpenGL", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠGL", "Test", "Environment", "::", "SetUp", "()", "Ġ{", "Ċ", "Ġ", "ĠTest", "Environment", "::", "SetUp", "();", "Ċ", "Ċ", "Ġ", "Ġauto", "Ġoptions", "Ġ=", "ĠgetOptions", "();", "Ċ", "Ġ", "Ġrender", "System", "_", "Ġ=", "Ġrender", "::", "Render", "System", "::", "create", "(", "render", "::", "RK", "_", "OpenGL", ",", "Ġoptions", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGL", "Test", "Environment", "::", "TearDown", "()", "Ġ{", "Ġrender", "System", "_.", "reset", "();", "Ġ}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġunittest", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġse", "quo", "ia", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::849", "code": "//\n//  main.cpp\n//  rdt\n//\n//  Created by Chris Orcutt on 11/22/15.\n//  Copyright © 2015 Chris Orcutt. All rights reserved.\n//\n\n#include <stdio.h>\n#include \"Timer.hpp\"\n#include <unistd.h>\n#include <iostream>\n\nusing namespace std;\n\nint main(){\n  Timer timer;\n  timer.start();\n  sleep(1);\n  cout << \"Expected 1 second elapsed, actual: \";\n  cout << timer.elapsedTime() << endl;\n  timer.stop();\n  \n  timer.start();\n  sleep(2);\n  cout << \"Expected 2 second elapsed, actual: \";\n  cout << timer.elapsedTime() << endl;\n  timer.stop();\n  \n  cout << \"Expected 0 second elapsed, actual: \";\n  cout << timer.elapsedTime() << endl;\n  \n\n  \n}", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġmain", ".", "cpp", "Ċ", "//", "Ġ", "Ġr", "dt", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠChr", "is", "ĠO", "rc", "ut", "t", "Ġon", "Ġ11", "/", "22", "/", "15", ".", "Ċ", "//", "Ġ", "ĠCopyright", "ĠÂ", "©", "Ġ2015", "ĠChr", "is", "ĠO", "rc", "ut", "t", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "Timer", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "ĠTimer", "Ġtimer", ";", "Ċ", "Ġ", "Ġtimer", ".", "start", "();", "Ċ", "Ġ", "Ġsleep", "(", "1", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Expected", "Ġ1", "Ġsecond", "Ġelapsed", ",", "Ġactual", ":", "Ġ\";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġtimer", ".", "elapsed", "Time", "()", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġtimer", ".", "stop", "();", "Ċ", "ĠĠĊ", "Ġ", "Ġtimer", ".", "start", "();", "Ċ", "Ġ", "Ġsleep", "(", "2", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Expected", "Ġ2", "Ġsecond", "Ġelapsed", ",", "Ġactual", ":", "Ġ\";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġtimer", ".", "elapsed", "Time", "()", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġtimer", ".", "stop", "();", "Ċ", "ĠĠĊ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Expected", "Ġ0", "Ġsecond", "Ġelapsed", ",", "Ġactual", ":", "Ġ\";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġtimer", ".", "elapsed", "Time", "()", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĊ", "Ċ", "ĠĠ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::850", "code": "// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually\n#pragma once\n\n#include <common/common.h>\n#include <CCashDbWorkerRUDetail.hpp>\n#include <common/ATFCore.hpp>\n\n\nSTART_ATF_NAMESPACE\n    namespace Register\n    {\n        class CCashDbWorkerRURegister : public IRegister\n        {\n            public: \n                void Register() override\n                {\n                    auto& hook_core = CATFCore::get_instance();\n                    for (auto& r : Detail::CCashDbWorkerRU_functions)\n                        hook_core.reg_wrapper(r.pBind, r);\n                }\n        };\n    }; // end namespace Register\nEND_ATF_NAMESPACE\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġauto", "Ġgenerated", "Ġby", "Ġplugin", "Ġfor", "Ġid", "a", "Ġpro", ".", "ĠGenerated", "Ġcode", "Ġonly", "Ġfor", "Ġx", "64", ".", "ĠPlease", ",", "Ġdont", "Ġchange", "Ġmanually", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "common", "/", "common", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "CC", "ash", "Db", "Worker", "RU", "Detail", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "common", "/", "AT", "FC", "ore", ".", "hpp", ">", "Ċ", "Ċ", "Ċ", "START", "_", "ATF", "_", "NAMESPACE", "Ċ", "ĠĠĠ", "Ġnamespace", "ĠRegister", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġclass", "ĠCC", "ash", "Db", "Worker", "RU", "Register", "Ġ:", "Ġpublic", "ĠI", "Register", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġpublic", ":", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġvoid", "ĠRegister", "()", "Ġoverride", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġauto", "&", "Ġhook", "_", "core", "Ġ=", "ĠC", "AT", "FC", "ore", "::", "get", "_", "instance", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "auto", "&", "Ġr", "Ġ:", "ĠDet", "ail", "::", "CC", "ash", "Db", "Worker", "RU", "_", "functions", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġhook", "_", "core", ".", "reg", "_", "wrapper", "(", "r", ".", "p", "Bind", ",", "Ġr", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ};", "Ċ", "ĠĠĠ", "Ġ};", "Ġ//", "Ġend", "Ġnamespace", "ĠRegister", "Ċ", "END", "_", "ATF", "_", "NAMESPACE", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::851", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nvoid solve() {\n    int n,d,e;\n    cin >> n >> d >> e;\n    e*=5;\n    int res = n;\n    for (int i = 0; i <= 500; i++) {\n        if (n >= i*d) {\n            int tmp = (n-i*d)%(d+e);\n            res = min(res, tmp);\n        }\n        if (n >= i*e) {\n            int tmp = (n-i*e)%(d+e);\n            res = min(res, tmp);\n        }\n    }\n    cout << res;\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    solve();\n    cout << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "void", "Ġsolve", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "d", ",", "e", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġn", "Ġ>>", "Ġd", "Ġ>>", "Ġe", ";", "Ċ", "ĠĠĠ", "Ġe", "*=", "5", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġres", "Ġ=", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġ500", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "n", "Ġ>=", "Ġi", "*", "d", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġtmp", "Ġ=", "Ġ(", "n", "-", "i", "*", "d", ")%", "(", "d", "+", "e", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġres", "Ġ=", "Ġmin", "(", "res", ",", "Ġtmp", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "n", "Ġ>=", "Ġi", "*", "e", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġtmp", "Ġ=", "Ġ(", "n", "-", "i", "*", "e", ")%", "(", "d", "+", "e", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġres", "Ġ=", "Ġmin", "(", "res", ",", "Ġtmp", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġres", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġios", "_", "base", "::", "sync", "_", "with", "_", "stdio", "(", "false", ");", "Ċ", "ĠĠĠ", "Ġcin", ".", "tie", "(", "NULL", ");", "Ċ", "ĠĠĠ", "Ġsolve", "();", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġendl", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::852", "code": "#ifndef NUMBERCUBE_HPP\n#define NUMBERCUBE_HPP\n\n#include <QOpenGLWidget>\n#include <QOpenGLFunctions>\n#include <QOpenGLBuffer>\n#include <QMatrix4x4>\n#include <memory>\n\nclass QOpenGLTexture;\nclass QOpenGLShaderProgram;\n\nclass NumberCube : public QOpenGLWidget, protected QOpenGLFunctions\n{\n    Q_OBJECT\n\npublic:\n    NumberCube(QWidget *parent = 0);\n    ~NumberCube();\n\nprotected:\n    void initializeGL() Q_DECL_OVERRIDE;\n    void paintGL() Q_DECL_OVERRIDE;\n\n    void keyPressEvent(QKeyEvent *event);\n\nprivate:\n    void makeObject();\n\nprivate:\n    std::shared_ptr<QOpenGLShaderProgram> mProgram;\n    std::shared_ptr<QOpenGLTexture> mTextures[6];\n    QOpenGLBuffer mVbo;\n    QMatrix4x4 mMatrix;\n};\n\n#endif // NUMBERCUBE_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠNUMBER", "CUBE", "_", "HP", "P", "Ċ", "#", "define", "ĠNUMBER", "CUBE", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "OpenGL", "Widget", ">", "Ċ", "#", "include", "Ġ<", "QOpenGLFunctions", ">", "Ċ", "#", "include", "Ġ<", "Q", "OpenGL", "Buffer", ">", "Ċ", "#", "include", "Ġ<", "Q", "Matrix", "4", "x", "4", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "class", "ĠQOpenGL", "Texture", ";", "Ċ", "class", "ĠQOpenGL", "ShaderProgram", ";", "Ċ", "Ċ", "class", "ĠNumber", "Cube", "Ġ:", "Ġpublic", "ĠQOpenGL", "Widget", ",", "Ġprotected", "ĠQ", "OpenGLFunctions", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠNumber", "Cube", "(", "QWidget", "Ġ*", "parent", "Ġ=", "Ġ0", ");", "Ċ", "ĠĠĠ", "Ġ~", "Number", "Cube", "();", "Ċ", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġinitialize", "GL", "()", "ĠQ", "_", "DECL", "_", "OVERRIDE", ";", "Ċ", "ĠĠĠ", "Ġvoid", "Ġpaint", "GL", "()", "ĠQ", "_", "DECL", "_", "OVERRIDE", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġkey", "PressEvent", "(", "Q", "KeyEvent", "Ġ*", "event", ");", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġmake", "Object", "();", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "Q", "OpenGL", "ShaderProgram", ">", "Ġm", "Program", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "Q", "OpenGL", "Texture", ">", "Ġm", "Textures", "[", "6", "];", "Ċ", "ĠĠĠ", "ĠQOpenGL", "Buffer", "Ġm", "V", "bo", ";", "Ċ", "ĠĠĠ", "ĠQ", "Matrix", "4", "x", "4", "Ġm", "Matrix", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠNUMBER", "CUBE", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::853", "code": "class Solution \n{\npublic:\n    vector<int> twoSum(vector<int>& numbers, int target) \n    {\n        int left=0,right=numbers.size()-1;\n        while(numbers[left]+numbers[right] != target)\n        {\n            if(numbers[left]+numbers[right] < target)\n                left++;\n            else\n                right--;\n        }\n        vector<int> result;\n        result.push_back(left+1);\n        result.push_back(right+1);\n        return result;\n    }\n};\n\n\n\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "Ġtwo", "Sum", "(", "vector", "<", "int", ">&", "Ġnumbers", ",", "Ġint", "Ġtarget", ")", "ĠĊ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġleft", "=", "0", ",", "right", "=", "numbers", ".", "size", "()-", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "numbers", "[", "left", "]+", "numbers", "[", "right", "]", "Ġ!=", "Ġtarget", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "numbers", "[", "left", "]+", "numbers", "[", "right", "]", "Ġ<", "Ġtarget", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġleft", "++;", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġright", "--;", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "int", ">", "Ġresult", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", ".", "push", "_", "back", "(", "left", "+", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", ".", "push", "_", "back", "(", "right", "+", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġresult", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::854", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ii = pair<int, int>;\nusing vi = vector<int>;\nusing vii = vector<ii>;\n\nint n, q;\nvi vec;\nvii pairs;\nbool cnt[5005];\n\nint max_length_covered() {\n\tmemset(cnt, 0, sizeof cnt);\n\tint c = 0;\n\tfor (int i : vec) {\n\t\tfor (int p = pairs[i].first; p <= pairs[i].second; ++p) {\n\t\t\tif (!cnt[p]) ++c;\n\t\t\tcnt[p] = 1;\n\t\t}\n\t}\n\treturn c;\n}\n\nint f(int i, int taken) {\n\tif (i > q) return 0;\n\tif (taken == q-2) return max_length_covered();\n\n\tvec.emplace_back(i);\n\tint p = f(i+1, taken+1);\n\tvec.pop_back();\n\n\tint q = f(i+1, taken);\n\treturn max(p, q);\n}\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\n\tcin >> n >> q;\n\tint l, r;\n\tfor (int i = 0; i < q; ++i) {\n\t\tcin >> l >> r;\n\t\tpairs.emplace_back(l, r);\n\t}\n\n\tcout << f(0, 0) << endl;\n\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "using", "Ġii", "Ġ=", "Ġpair", "<", "int", ",", "Ġint", ">;", "Ċ", "using", "Ġvi", "Ġ=", "Ġvector", "<", "int", ">;", "Ċ", "using", "Ġv", "ii", "Ġ=", "Ġvector", "<", "ii", ">;", "Ċ", "Ċ", "int", "Ġn", ",", "Ġq", ";", "Ċ", "vi", "Ġvec", ";", "Ċ", "vi", "i", "Ġpairs", ";", "Ċ", "bool", "Ġcnt", "[", "500", "5", "];", "Ċ", "Ċ", "int", "Ġmax", "_", "length", "_", "covered", "()", "Ġ{", "Ċ", "ĉ", "memset", "(", "cnt", ",", "Ġ0", ",", "Ġsizeof", "Ġcnt", ");", "Ċ", "ĉ", "int", "Ġc", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ:", "Ġvec", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġp", "Ġ=", "Ġpairs", "[", "i", "].", "first", ";", "Ġp", "Ġ<=", "Ġpairs", "[", "i", "].", "second", ";", "Ġ++", "p", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "if", "Ġ(!", "cnt", "[", "p", "])", "Ġ++", "c", ";", "Ċ", "ĉĉ", "ĉ", "cnt", "[", "p", "]", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġc", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġf", "(", "int", "Ġi", ",", "Ġint", "Ġtaken", ")", "Ġ{", "Ċ", "ĉ", "if", "Ġ(", "i", "Ġ>", "Ġq", ")", "Ġreturn", "Ġ0", ";", "Ċ", "ĉ", "if", "Ġ(", "taken", "Ġ==", "Ġq", "-", "2", ")", "Ġreturn", "Ġmax", "_", "length", "_", "covered", "();", "Ċ", "Ċ", "ĉ", "vec", ".", "emplace", "_", "back", "(", "i", ");", "Ċ", "ĉ", "int", "Ġp", "Ġ=", "Ġf", "(", "i", "+", "1", ",", "Ġtaken", "+", "1", ");", "Ċ", "ĉ", "vec", ".", "pop", "_", "back", "();", "Ċ", "Ċ", "ĉ", "int", "Ġq", "Ġ=", "Ġf", "(", "i", "+", "1", ",", "Ġtaken", ");", "Ċ", "ĉ", "return", "Ġmax", "(", "p", ",", "Ġq", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "ios", "::", "sync", "_", "with", "_", "stdio", "(", "0", ");", "Ċ", "ĉ", "cin", ".", "tie", "(", "0", ");", "Ċ", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", "Ġ>>", "Ġq", ";", "Ċ", "ĉ", "int", "Ġl", ",", "Ġr", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġq", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġl", "Ġ>>", "Ġr", ";", "Ċ", "ĉ", "ĉ", "pairs", ".", "emplace", "_", "back", "(", "l", ",", "Ġr", ");", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "cout", "Ġ<<", "Ġf", "(", "0", ",", "Ġ0", ")", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::855", "code": "#pragma once\n\n#include <cassert>\n#include <cstdint> // uint32_t\n#include <utility> // std::pair\n\nnamespace gyper\n{\nstd::pair<uint16_t, uint16_t> inline to_pair(long const index)\n{\n  // index = x + (y+1)*y/2 = x + (y^2 + y)/2\n  long y = 1;\n\n  while ((y * y + y) / 2 <= index)\n    ++y;\n\n  --y;\n  return std::make_pair<uint16_t, uint16_t>(static_cast<uint16_t>(index - (y * y + y) / 2u), static_cast<uint16_t>(y));\n}\n\nlong inline to_index(long const x, long const y)\n{\n  assert(x <= y);\n  return x + (y + 1) * y / 2;\n}\n\nlong inline to_index_safe(long const x, long const y)\n{\n  if (x <= y)\n    return x + (y + 1) * y / 2;\n  else\n    return y + (x + 1) * x / 2;\n}\n\n} // namespace gyper\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "int", ">", "Ġ//", "Ġuint", "32", "_", "t", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ġ//", "Ġstd", "::", "pair", "Ċ", "Ċ", "namespace", "Ġgy", "per", "Ċ", "{", "Ċ", "std", "::", "pair", "<", "uint", "16", "_", "t", ",", "Ġuint", "16", "_", "t", ">", "Ġinline", "Ġto", "_", "pair", "(", "long", "Ġconst", "Ġindex", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "Ġindex", "Ġ=", "Ġx", "Ġ+", "Ġ(", "y", "+", "1", ")*", "y", "/", "2", "Ġ=", "Ġx", "Ġ+", "Ġ(", "y", "^", "2", "Ġ+", "Ġy", ")/", "2", "Ċ", "Ġ", "Ġlong", "Ġy", "Ġ=", "Ġ1", ";", "Ċ", "Ċ", "Ġ", "Ġwhile", "Ġ((", "y", "Ġ*", "Ġy", "Ġ+", "Ġy", ")", "Ġ/", "Ġ2", "Ġ<=", "Ġindex", ")", "Ċ", "ĠĠĠ", "Ġ++", "y", ";", "Ċ", "Ċ", "Ġ", "Ġ--", "y", ";", "Ċ", "Ġ", "Ġreturn", "Ġstd", "::", "make", "_", "pair", "<", "uint", "16", "_", "t", ",", "Ġuint", "16", "_", "t", ">(", "static", "_", "cast", "<", "uint", "16", "_", "t", ">(", "index", "Ġ-", "Ġ(", "y", "Ġ*", "Ġy", "Ġ+", "Ġy", ")", "Ġ/", "Ġ2", "u", "),", "Ġstatic", "_", "cast", "<", "uint", "16", "_", "t", ">(", "y", "));", "Ċ", "}", "Ċ", "Ċ", "long", "Ġinline", "Ġto", "_", "index", "(", "long", "Ġconst", "Ġx", ",", "Ġlong", "Ġconst", "Ġy", ")", "Ċ", "{", "Ċ", "Ġ", "Ġassert", "(", "x", "Ġ<=", "Ġy", ");", "Ċ", "Ġ", "Ġreturn", "Ġx", "Ġ+", "Ġ(", "y", "Ġ+", "Ġ1", ")", "Ġ*", "Ġy", "Ġ/", "Ġ2", ";", "Ċ", "}", "Ċ", "Ċ", "long", "Ġinline", "Ġto", "_", "index", "_", "safe", "(", "long", "Ġconst", "Ġx", ",", "Ġlong", "Ġconst", "Ġy", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "x", "Ġ<=", "Ġy", ")", "Ċ", "ĠĠĠ", "Ġreturn", "Ġx", "Ġ+", "Ġ(", "y", "Ġ+", "Ġ1", ")", "Ġ*", "Ġy", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "ĠĠĠ", "Ġreturn", "Ġy", "Ġ+", "Ġ(", "x", "Ġ+", "Ġ1", ")", "Ġ*", "Ġx", "Ġ/", "Ġ2", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġgy", "per", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::856", "code": "//\n//  268.cpp\n//  LeetCode\n//\n//  Created by Narikbi on 25.02.17.\n//  Copyright © 2017 app.leetcode.kz. All rights reserved.\n//\n\n#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <queue>\n#include <set>\n#include <map>\n#include <stack>\n#include <cmath>\n#include <numeric>\n\nusing namespace std;\n\n\nint missingNumber(vector<int>& nums) {\n    \n    int res = nums.size();\n    for (int i = 0; i < nums.size(); i++) {\n        res ^= i;\n        res ^= nums[i];\n    }\n    \n    return res;\n}\n\n\n//int main(int argc, const char * argv[]) {\n//    \n//    vector<int> v = {0, 1, 2, 3, 4, 5, 7};\n//    cout << missingNumber(v);\n//    \n//    return 0;\n//}\n\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġ2", "68", ".", "cpp", "Ċ", "//", "Ġ", "ĠLe", "et", "Code", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠN", "ar", "ik", "bi", "Ġon", "Ġ25", ".", "02", ".", "17", ".", "Ċ", "//", "Ġ", "ĠCopyright", "ĠÂ", "©", "Ġ2017", "Ġapp", ".", "leet", "code", ".", "kz", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "deque", ">", "Ċ", "#", "include", "Ġ<", "queue", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "stack", ">", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ<", "numeric", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "int", "Ġmissing", "Number", "(", "vector", "<", "int", ">&", "Ġnums", ")", "Ġ{", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġint", "Ġres", "Ġ=", "Ġnums", ".", "size", "();", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnums", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġres", "Ġ^=", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġres", "Ġ^=", "Ġnums", "[", "i", "];", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġreturn", "Ġres", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "//", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġconst", "Ġchar", "Ġ*", "Ġargv", "[])", "Ġ{", "Ċ", "//", "ĠĠĠĠ", "Ċ", "//", "ĠĠĠ", "Ġvector", "<", "int", ">", "Ġv", "Ġ=", "Ġ{", "0", ",", "Ġ1", ",", "Ġ2", ",", "Ġ3", ",", "Ġ4", ",", "Ġ5", ",", "Ġ7", "};", "Ċ", "//", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġmissing", "Number", "(", "v", ");", "Ċ", "//", "ĠĠĠĠ", "Ċ", "//", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "//}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::857", "code": "#ifndef IS_SUBSEQUENCE_HPP_\n#define IS_SUBSEQUENCE_HPP_\n\n#include <string>\n\nusing namespace std;\n\nclass IsSubsequence {\npublic:\n    bool isSubsequence(string s, string t);\n};\n\n#endif // IS_SUBSEQUENCE_HPP_", "code_tokens": ["Ġ#", "ifndef", "ĠIS", "_", "SUB", "SEQUENCE", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠIS", "_", "SUB", "SEQUENCE", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠIs", "Sub", "sequence", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġbool", "Ġis", "Sub", "sequence", "(", "string", "Ġs", ",", "Ġstring", "Ġt", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠIS", "_", "SUB", "SEQUENCE", "_", "HP", "P", "_"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::858", "code": "#include <iostream>\n#include <cmath>\n#include <iomanip>\n\nusing namespace std;\n\ndouble p;\n\ndouble f(double x) {\n  return x * x - p;\n}\n\ndouble fd(double x) {\n  return 2.0L * x;\n}\n  \nint main() {\n  ios::sync_with_stdio(false);\n  cout << setiosflags(ios::fixed) << setprecision(4);\n  while (cin >> p) {\n    double x = p / 2.0L;\n    while (fabs(f(x)) > 0.00000001L) {\n      x = x - f(x) / fd(x);\n    }\n    cout << x << endl;\n  }\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "double", "Ġp", ";", "Ċ", "Ċ", "double", "Ġf", "(", "double", "Ġx", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġx", "Ġ*", "Ġx", "Ġ-", "Ġp", ";", "Ċ", "}", "Ċ", "Ċ", "double", "Ġfd", "(", "double", "Ġx", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġ2", ".", "0", "L", "Ġ*", "Ġx", ";", "Ċ", "}", "Ċ", "ĠĠ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġios", "::", "sync", "_", "with", "_", "stdio", "(", "false", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġset", "ios", "flags", "(", "ios", "::", "fixed", ")", "Ġ<<", "Ġset", "precision", "(", "4", ");", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġp", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġdouble", "Ġx", "Ġ=", "Ġp", "Ġ/", "Ġ2", ".", "0", "L", ";", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "fabs", "(", "f", "(", "x", "))", "Ġ>", "Ġ0", ".", "00000001", "L", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġx", "Ġ=", "Ġx", "Ġ-", "Ġf", "(", "x", ")", "Ġ/", "Ġfd", "(", "x", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġx", "Ġ<<", "Ġendl", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::859", "code": "//===--------------------------------------------------------------------------------*- C++ -*-===//\n//                         _       _\n//                        | |     | |\n//                    __ _| |_ ___| | __ _ _ __   __ _\n//                   / _` | __/ __| |/ _` | '_ \\ / _` |\n//                  | (_| | || (__| | (_| | | | | (_| |\n//                   \\__, |\\__\\___|_|\\__,_|_| |_|\\__, | - GridTools Clang DSL\n//                    __/ |                       __/ |\n//                   |___/                       |___/\n//\n//\n//  This file is distributed under the MIT License (MIT).\n//  See LICENSE.txt for details.\n//\n//===------------------------------------------------------------------------------------------===//\n\n#pragma once\n\n#include \"gtclang_dsl_defs/stencil_function.hpp\"\n\nnamespace gtclang {\nnamespace dsl {\n/*\n * @brief Boundary condition specification\n * @ingroup gtclang_dsl\n */\nclass boundary_condition {\npublic:\n  template <typename... T>\n  boundary_condition(const stencil_function&, T&&...);\n};\n} // namespace dsl\n} // namespace gtclang\n", "code_tokens": ["Ġ//", "===", "--------------------------------------------------------------------------------", "*-", "ĠC", "++", "Ġ-", "*-", "===//", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ_", "ĠĠĠĠĠĠ", "Ġ_", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "Ġ|", "ĠĠĠĠ", "Ġ|", "Ġ|", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ__", "Ġ_", "|", "Ġ|", "_", "Ġ___", "|", "Ġ|", "Ġ__", "Ġ_", "Ġ_", "Ġ__", "ĠĠ", "Ġ__", "Ġ_", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ/", "Ġ_", "`", "Ġ|", "Ġ__", "/", "Ġ__", "|", "Ġ|", "/", "Ġ_", "`", "Ġ|", "Ġ'_", "Ġ\\", "Ġ/", "Ġ_", "`", "Ġ|", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "Ġ(_", "|", "Ġ|", "Ġ||", "Ġ(__", "|", "Ġ|", "Ġ(_", "|", "Ġ|", "Ġ|", "Ġ|", "Ġ|", "Ġ(_", "|", "Ġ|", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ\\", "__,", "Ġ|", "\\", "__", "\\", "___", "|_", "|\\", "__,", "_", "|_", "|", "Ġ|", "_", "|\\", "__,", "Ġ|", "Ġ-", "ĠGrid", "Tools", "ĠClang", "ĠD", "SL", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ__", "/", "Ġ|", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ__", "/", "Ġ|", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "___", "/", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ|", "___", "/", "Ċ", "//", "Ċ", "//", "Ċ", "//", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġdistributed", "Ġunder", "Ġthe", "ĠMIT", "ĠLicense", "Ġ(", "MIT", ").", "Ċ", "//", "Ġ", "ĠSee", "ĠLICENSE", ".", "txt", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//===", "----------------------------------------------------------------", "------------------------", "--", "===//", "Ċ", "Ċ", "#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "gt", "clang", "_", "dsl", "_", "defs", "/", "stencil", "_", "function", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġgt", "clang", "Ġ{", "Ċ", "namespace", "Ġd", "sl", "Ġ{", "Ċ", "/*", "Ċ", "Ġ*", "Ġ@", "brief", "ĠBound", "ary", "Ġcondition", "Ġspecification", "Ċ", "Ġ*", "Ġ@", "ingroup", "Ġgt", "clang", "_", "dsl", "Ċ", "Ġ*/", "Ċ", "class", "Ġboundary", "_", "condition", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġtemplate", "Ġ<", "typename", "...", "ĠT", ">", "Ċ", "Ġ", "Ġboundary", "_", "condition", "(", "const", "Ġstencil", "_", "function", "&,", "ĠT", "&&", "...", ");", "Ċ", "};", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġd", "sl", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġgt", "clang", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::860", "code": "#include <iostream>\n#include <seqan/sequence.h>\n#include <seqan/file.h>\n\nusing namespace seqan;\n\nint main()\n{\n    StringSet<String<Dna5> > nucleotideSets;\n    String<Dna5> seq1 =\"ATATANGCGT\";\n    String<Dna5> seq2 =\"AAGCATGANT\";\n    String<Dna5> seq3 =\"TGAAANTGAC\";\n    appendValue(nucleotideSets,seq1);\n    appendValue(nucleotideSets,seq2);\n    appendValue(nucleotideSets,seq3);\n    String<Dna5> refSeq=\"GATGCATGAT\";\n    StringSet<String<Dna5> > lesser;\n    StringSet<String<Dna5> > greater;\n    \n    for (unsigned i = 0; i < length(nucleotideSets); ++i){\n\tLexical<> comp(nucleotideSets[i],refSeq);\n\tif (isLess(comp))\n\t    appendValue(lesser, nucleotideSets[i]);\n\tif (isGreater(comp))\n\t    appendValue(greater, nucleotideSets[i]);\n    }\n    //std::cout << \"lesser: \" << lesser << std::endl;\n    //std::cout << \"greater: \" << greater << std::endl;\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠString", "Set", "<", "String", "<", "D", "na", "5", ">", "Ġ>", "Ġnu", "cle", "ot", "ide", "Sets", ";", "Ċ", "ĠĠĠ", "ĠString", "<", "D", "na", "5", ">", "Ġseq", "1", "Ġ=", "\"", "AT", "AT", "ANG", "CG", "T", "\";", "Ċ", "ĠĠĠ", "ĠString", "<", "D", "na", "5", ">", "Ġseq", "2", "Ġ=", "\"", "AA", "GC", "AT", "G", "ANT", "\";", "Ċ", "ĠĠĠ", "ĠString", "<", "D", "na", "5", ">", "Ġseq", "3", "Ġ=", "\"", "TG", "AA", "ANT", "GAC", "\";", "Ċ", "ĠĠĠ", "Ġappend", "Value", "(", "nu", "cle", "ot", "ide", "Sets", ",", "seq", "1", ");", "Ċ", "ĠĠĠ", "Ġappend", "Value", "(", "nu", "cle", "ot", "ide", "Sets", ",", "seq", "2", ");", "Ċ", "ĠĠĠ", "Ġappend", "Value", "(", "nu", "cle", "ot", "ide", "Sets", ",", "seq", "3", ");", "Ċ", "ĠĠĠ", "ĠString", "<", "D", "na", "5", ">", "Ġref", "Seq", "=\"", "G", "AT", "GC", "AT", "G", "AT", "\";", "Ċ", "ĠĠĠ", "ĠString", "Set", "<", "String", "<", "D", "na", "5", ">", "Ġ>", "Ġless", "er", ";", "Ċ", "ĠĠĠ", "ĠString", "Set", "<", "String", "<", "D", "na", "5", ">", "Ġ>", "Ġgreater", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "nu", "cle", "ot", "ide", "Sets", ");", "Ġ++", "i", "){", "Ċ", "ĉ", "Lexical", "<>", "Ġcomp", "(", "nu", "cle", "ot", "ide", "Sets", "[", "i", "],", "ref", "Seq", ");", "Ċ", "ĉ", "if", "Ġ(", "is", "Less", "(", "comp", "))", "Ċ", "ĉĠĠĠ", "Ġappend", "Value", "(", "less", "er", ",", "Ġnu", "cle", "ot", "ide", "Sets", "[", "i", "]);", "Ċ", "ĉ", "if", "Ġ(", "is", "Greater", "(", "comp", "))", "Ċ", "ĉĠĠĠ", "Ġappend", "Value", "(", "greater", ",", "Ġnu", "cle", "ot", "ide", "Sets", "[", "i", "]);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ//", "std", "::", "cout", "Ġ<<", "Ġ\"", "less", "er", ":", "Ġ\"", "Ġ<<", "Ġless", "er", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġ//", "std", "::", "cout", "Ġ<<", "Ġ\"", "greater", ":", "Ġ\"", "Ġ<<", "Ġgreater", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::861", "code": "// Copyright (c) 2011-2015 The Gtacoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"qvaluecombobox.h\"\n\nQValueComboBox::QValueComboBox(QWidget *parent) :\n        QComboBox(parent), role(Qt::UserRole)\n{\n    connect(this, SIGNAL(currentIndexChanged(int)), this, SLOT(handleSelectionChanged(int)));\n}\n\nQVariant QValueComboBox::value() const\n{\n    return itemData(currentIndex(), role);\n}\n\nvoid QValueComboBox::setValue(const QVariant &value)\n{\n    setCurrentIndex(findData(value, role));\n}\n\nvoid QValueComboBox::setRole(int role)\n{\n    this->role = role;\n}\n\nvoid QValueComboBox::handleSelectionChanged(int idx)\n{\n    Q_EMIT valueChanged();\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "-", "2015", "ĠThe", "ĠG", "ta", "coin", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠCOPY", "ING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "licenses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "q", "value", "combo", "box", ".", "h", "\"", "Ċ", "Ċ", "Q", "Value", "ComboBox", "::", "Q", "Value", "ComboBox", "(", "QWidget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "ĠĠĠĠĠĠĠ", "ĠQ", "ComboBox", "(", "parent", "),", "Ġrole", "(", "Qt", "::", "UserRole", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġconnect", "(", "this", ",", "ĠSIGNAL", "(", "currentIndex", "Changed", "(", "int", ")),", "Ġthis", ",", "ĠSLOT", "(", "handle", "SelectionChanged", "(", "int", ")));", "Ċ", "}", "Ċ", "Ċ", "QVariant", "ĠQ", "Value", "ComboBox", "::", "value", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġitem", "Data", "(", "currentIndex", "(),", "Ġrole", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "ComboBox", "::", "setValue", "(", "const", "ĠQVariant", "Ġ&", "value", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠsetCurrent", "Index", "(", "find", "Data", "(", "value", ",", "Ġrole", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "ComboBox", "::", "set", "Role", "(", "int", "Ġrole", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġthis", "->", "role", "Ġ=", "Ġrole", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "ComboBox", "::", "handle", "SelectionChanged", "(", "int", "Ġidx", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "EMIT", "Ġvalue", "Changed", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::862", "code": "#include \"c2_exercise_1.h\"\n\n\nGLchar *c2_exercise_1::vertexSource()\n{\n\treturn\n\t\t\"#version 150\\n\"\n\t\t\"in vec2 position;\"\n\t\t\"void main() {\"\n\t\t\"\tgl_Position = vec4(position.x, -position.y, 0.0, 1.0);\"\n\t\t\"}\";\n}\n\nvoid c2_exercise_1::run()\n{\n\tsuper::run();\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "c", "2", "_", "ex", "ercise", "_", "1", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "GL", "char", "Ġ*", "c", "2", "_", "ex", "ercise", "_", "1", "::", "vertex", "Source", "()", "Ċ", "{", "Ċ", "ĉ", "return", "Ċ", "ĉ", "ĉ", "\"#", "version", "Ġ150", "\\", "n", "\"", "Ċ", "ĉ", "ĉ", "\"", "in", "Ġvec", "2", "Ġposition", ";\"", "Ċ", "ĉ", "ĉ", "\"", "void", "Ġmain", "()", "Ġ{\"", "Ċ", "ĉ", "ĉ", "\"", "ĉ", "gl", "_", "Position", "Ġ=", "Ġvec", "4", "(", "position", ".", "x", ",", "Ġ-", "position", ".", "y", ",", "Ġ0", ".", "0", ",", "Ġ1", ".", "0", ");\"", "Ċ", "ĉ", "ĉ", "\"}", "\";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġc", "2", "_", "ex", "ercise", "_", "1", "::", "run", "()", "Ċ", "{", "Ċ", "ĉ", "super", "::", "run", "();", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::863", "code": "// Copyright (c) 2013-2015 mogemimi.\n// Distributed under the MIT license. See LICENSE.md file for details.\n\n#ifndef POMDOG_ANIMATIONCLIPNODE_6B87052F_HPP\n#define POMDOG_ANIMATIONCLIPNODE_6B87052F_HPP\n\n#include \"Pomdog.Experimental/Skeletal2D/AnimationNode.hpp\"\n#include <memory>\n\nnamespace Pomdog {\n\nclass AnimationClip;\n\nnamespace Detail {\nnamespace Skeletal2D {\n\nclass AnimationClipNode final: public AnimationNode {\npublic:\n    AnimationClipNode(std::shared_ptr<AnimationClip> const& animationClip);\n\n    void Calculate(AnimationTimeInterval const& time,\n        Detail::Skeletal2D::AnimationGraphWeightCollection const& weights,\n        Skeleton const& skeleton,\n        SkeletonPose & skeletonPose) const override;\n\n    AnimationTimeInterval Length() const override;\n\nprivate:\n    std::shared_ptr<AnimationClip> clip;\n};\n\n} // namespace Skeletal2D\n} // namespace Detail\n} // namespace Pomdog\n\n#endif // POMDOG_ANIMATIONCLIPNODE_6B87052F_HPP\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2013", "-", "2015", "Ġm", "og", "em", "im", "i", ".", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "Ġlicense", ".", "ĠSee", "ĠLICENSE", ".", "md", "Ġfile", "Ġfor", "Ġdetails", ".", "Ċ", "Ċ", "#", "ifndef", "ĠP", "OM", "DOG", "_", "ANIM", "ATION", "CLIP", "NODE", "_", "6", "B", "87", "052", "F", "_", "HP", "P", "Ċ", "#", "define", "ĠP", "OM", "DOG", "_", "ANIM", "ATION", "CLIP", "NODE", "_", "6", "B", "87", "052", "F", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "P", "om", "dog", ".", "Experimental", "/", "S", "ke", "let", "al", "2", "D", "/", "Animation", "Node", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "namespace", "ĠP", "om", "dog", "Ġ{", "Ċ", "Ċ", "class", "ĠAnimation", "Clip", ";", "Ċ", "Ċ", "namespace", "ĠDet", "ail", "Ġ{", "Ċ", "namespace", "ĠS", "ke", "let", "al", "2", "D", "Ġ{", "Ċ", "Ċ", "class", "ĠAnimation", "Clip", "Node", "Ġfinal", ":", "Ġpublic", "ĠAnimation", "Node", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠAnimation", "Clip", "Node", "(", "std", "::", "shared", "_", "ptr", "<", "Animation", "Clip", ">", "Ġconst", "&", "Ġanimation", "Clip", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠCalculate", "(", "Animation", "Time", "Interval", "Ġconst", "&", "Ġtime", ",", "Ċ", "ĠĠĠĠĠĠĠ", "ĠDet", "ail", "::", "S", "ke", "let", "al", "2", "D", "::", "Animation", "Graph", "Weight", "Collection", "Ġconst", "&", "Ġweights", ",", "Ċ", "ĠĠĠĠĠĠĠ", "ĠS", "keleton", "Ġconst", "&", "Ġskeleton", ",", "Ċ", "ĠĠĠĠĠĠĠ", "ĠS", "keleton", "Pose", "Ġ&", "Ġskeleton", "Pose", ")", "Ġconst", "Ġoverride", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠAnimation", "Time", "Interval", "ĠLength", "()", "Ġconst", "Ġoverride", ";", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġstd", "::", "shared", "_", "ptr", "<", "Animation", "Clip", ">", "Ġclip", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠS", "ke", "let", "al", "2", "D", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠDet", "ail", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠP", "om", "dog", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠP", "OM", "DOG", "_", "ANIM", "ATION", "CLIP", "NODE", "_", "6", "B", "87", "052", "F", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::864", "code": "﻿#include <exceptxx/PrecondException.h>\n#include <iostream>\n\nusing namespace std;\n\nint main(int argc, const char*[])\n{\n    try\n    {\n        CHECK_PRECOND(argc > 1) << \"Expect some command line arguments\";\n    }\n    catch (const exception& ex)\n    {\n        cerr << ex.what() << endl << endl;\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ", "ï", "»", "¿", "#", "include", "Ġ<", "except", "xx", "/", "Pre", "cond", "Exception", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġconst", "Ġchar", "*", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġtry", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠCHECK", "_", "PRE", "COND", "(", "argc", "Ġ>", "Ġ1", ")", "Ġ<<", "Ġ\"", "Expect", "Ġsome", "Ġcommand", "Ġline", "Ġarguments", "\";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcatch", "Ġ(", "const", "Ġexception", "&", "Ġex", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcerr", "Ġ<<", "Ġex", ".", "what", "()", "Ġ<<", "Ġendl", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::865", "code": "#include <ncurses.h>\n\n#include \"term.hpp\"\n\nTerm::Term() {\n    //start terminal in curses mode and clears the screen\n    initscr();\n    //disable line buffering\n    raw();\n    keypad(stdscr, true);\n    noecho();\n}\n\nTerm::~Term() {\n    endwin();\n}\n\nint Term::get_char() {\n    return getch();\n}\n\nvoid Term::print_char(int c) {\n    printw(\"%c\", c);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "ncurses", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "term", ".", "hpp", "\"", "Ċ", "Ċ", "Term", "::", "Term", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "start", "Ġterminal", "Ġin", "Ġcurses", "Ġmode", "Ġand", "Ġclears", "Ġthe", "Ġscreen", "Ċ", "ĠĠĠ", "Ġinit", "scr", "();", "Ċ", "ĠĠĠ", "Ġ//", "disable", "Ġline", "Ġbuffering", "Ċ", "ĠĠĠ", "Ġraw", "();", "Ċ", "ĠĠĠ", "Ġkey", "pad", "(", "std", "scr", ",", "Ġtrue", ");", "Ċ", "ĠĠĠ", "Ġno", "echo", "();", "Ċ", "}", "Ċ", "Ċ", "Term", "::~", "Term", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġend", "win", "();", "Ċ", "}", "Ċ", "Ċ", "int", "ĠTerm", "::", "get", "_", "char", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġget", "ch", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTerm", "::", "print", "_", "char", "(", "int", "Ġc", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġprint", "w", "(\"%", "c", "\",", "Ġc", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::866", "code": "//\n//  CompareTwoLinkedLists.cpp\n//  HackerRank\n//\n//  Created by Fabrizio Duroni on 25/10/2016.\n//\n//  https://www.hackerrank.com/challenges/compare-two-linked-lists\n\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\n/*!\n C alike struct definition.\n The attribute Node is be declared with struct\n because in C, Node is not yet defined at this point.\n */\nstruct Node {\n    \n    int data;\n    struct Node* next;\n};\n\nint CompareLists(Node* headA, Node* headB) {\n\n    Node* currentNodeA = headA;\n    Node* currentNodeB = headB;\n    \n    //Loop on lists.\n    while (currentNodeA != nullptr || currentNodeB != nullptr) {\n        \n        //If one of the head node is null or\n        //data of the nodes doesn't match.\n        if ((currentNodeA != nullptr && currentNodeB == nullptr) ||\n            (currentNodeB != nullptr && currentNodeA == nullptr) ||\n            (currentNodeA->data != currentNodeB->data)) {\n            \n            return 0;\n        }\n        \n        currentNodeA = currentNodeA->next;\n        currentNodeB = currentNodeB->next;\n    }\n    \n    return 1;\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠCompare", "Two", "Linked", "Lists", ".", "cpp", "Ċ", "//", "Ġ", "ĠHack", "er", "Rank", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠF", "ab", "ri", "z", "io", "ĠD", "uron", "i", "Ġon", "Ġ25", "/", "10", "/", "2016", ".", "Ċ", "//", "Ċ", "//", "Ġ", "Ġhttps", "://", "www", ".", "hack", "err", "ank", ".", "com", "/", "ch", "allen", "ges", "/", "compare", "-", "two", "-", "linked", "-", "lists", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "/*!", "Ċ", "ĠC", "Ġali", "ke", "Ġstruct", "Ġdefinition", ".", "Ċ", "ĠThe", "Ġattribute", "ĠNode", "Ġis", "Ġbe", "Ġdeclared", "Ġwith", "Ġstruct", "Ċ", "Ġbecause", "Ġin", "ĠC", ",", "ĠNode", "Ġis", "Ġnot", "Ġyet", "Ġdefined", "Ġat", "Ġthis", "Ġpoint", ".", "Ċ", "Ġ*/", "Ċ", "struct", "ĠNode", "Ġ{", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġint", "Ġdata", ";", "Ċ", "ĠĠĠ", "Ġstruct", "ĠNode", "*", "Ġnext", ";", "Ċ", "};", "Ċ", "Ċ", "int", "ĠCompare", "Lists", "(", "Node", "*", "Ġhead", "A", ",", "ĠNode", "*", "Ġhead", "B", ")", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "ĠNode", "*", "ĠcurrentNode", "A", "Ġ=", "Ġhead", "A", ";", "Ċ", "ĠĠĠ", "ĠNode", "*", "ĠcurrentNode", "B", "Ġ=", "Ġhead", "B", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġ//", "Loop", "Ġon", "Ġlists", ".", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "currentNode", "A", "Ġ!=", "Ġnullptr", "Ġ||", "ĠcurrentNode", "B", "Ġ!=", "Ġnullptr", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġ//", "If", "Ġone", "Ġof", "Ġthe", "Ġhead", "Ġnode", "Ġis", "Ġnull", "Ġor", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "data", "Ġof", "Ġthe", "Ġnodes", "Ġdoesn", "'t", "Ġmatch", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ((", "currentNode", "A", "Ġ!=", "Ġnullptr", "Ġ&&", "ĠcurrentNode", "B", "Ġ==", "Ġnullptr", ")", "Ġ||", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(", "currentNode", "B", "Ġ!=", "Ġnullptr", "Ġ&&", "ĠcurrentNode", "A", "Ġ==", "Ġnullptr", ")", "Ġ||", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(", "currentNode", "A", "->", "data", "Ġ!=", "ĠcurrentNode", "B", "->", "data", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "ĠcurrentNode", "A", "Ġ=", "ĠcurrentNode", "A", "->", "next", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠcurrentNode", "B", "Ġ=", "ĠcurrentNode", "B", "->", "next", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::867", "code": "#ifndef NODES_DEEP_COPY_HPP_\n#define NODES_DEEP_COPY_HPP_\n\n// Write a method that takes a pointer to a Node structure as a parameter and\n// returns a complete copy of the passed in data structure. The Node data\n// structure contains two pointers to other Nodes.\n\nnamespace Algo::DS {\n\nclass Node {\npublic:\n    Node(const Node* first, const Node* second) :\n        m_first(first), m_second(second) { }\n\n    ~Node() {\n        if (nullptr != m_first) {\n            delete m_first;\n        }\n\n        if (nullptr != m_second) {\n            delete m_second;\n        }\n    }\n\n    Node* m_first = nullptr;\n    Node* m_second = nullptr;\n};\n\nNode* DeepCopyOfNode(const Node* const node) {\n    if (nullptr == node) {\n        return nullptr;\n    }\n\n    Node* result = new Node;\n    if (nullptr != node->m_first) {\n        result->m_first = DeepCopyOfNode(node->m_first);\n    }\n\n    if (nullptr != node->m_second) {\n        result->m_second = DeepCopyOfNode(node->m_second);\n    }\n\n    return result;\n}\n\n}\n\n#endif /* NODES_DEEP_COPY_HPP_ */\n", "code_tokens": ["Ġ#", "ifndef", "ĠNODE", "S", "_", "DE", "EP", "_", "COPY", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠNODE", "S", "_", "DE", "EP", "_", "COPY", "_", "HP", "P", "_", "Ċ", "Ċ", "//", "ĠWrite", "Ġa", "Ġmethod", "Ġthat", "Ġtakes", "Ġa", "Ġpointer", "Ġto", "Ġa", "ĠNode", "Ġstructure", "Ġas", "Ġa", "Ġparameter", "Ġand", "Ċ", "//", "Ġreturns", "Ġa", "Ġcomplete", "Ġcopy", "Ġof", "Ġthe", "Ġpassed", "Ġin", "Ġdata", "Ġstructure", ".", "ĠThe", "ĠNode", "Ġdata", "Ċ", "//", "Ġstructure", "Ġcontains", "Ġtwo", "Ġpointers", "Ġto", "Ġother", "ĠNodes", ".", "Ċ", "Ċ", "namespace", "ĠAl", "go", "::", "DS", "Ġ{", "Ċ", "Ċ", "class", "ĠNode", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠNode", "(", "const", "ĠNode", "*", "Ġfirst", ",", "Ġconst", "ĠNode", "*", "Ġsecond", ")", "Ġ:", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "_", "first", "(", "first", "),", "Ġm", "_", "second", "(", "second", ")", "Ġ{", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ~", "Node", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "nullptr", "Ġ!=", "Ġm", "_", "first", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdelete", "Ġm", "_", "first", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "nullptr", "Ġ!=", "Ġm", "_", "second", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġdelete", "Ġm", "_", "second", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠNode", "*", "Ġm", "_", "first", "Ġ=", "Ġnullptr", ";", "Ċ", "ĠĠĠ", "ĠNode", "*", "Ġm", "_", "second", "Ġ=", "Ġnullptr", ";", "Ċ", "};", "Ċ", "Ċ", "Node", "*", "ĠDeepCopy", "Of", "Node", "(", "const", "ĠNode", "*", "Ġconst", "Ġnode", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "nullptr", "Ġ==", "Ġnode", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnullptr", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "ĠNode", "*", "Ġresult", "Ġ=", "Ġnew", "ĠNode", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "nullptr", "Ġ!=", "Ġnode", "->", "m", "_", "first", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "->", "m", "_", "first", "Ġ=", "ĠDeepCopy", "Of", "Node", "(", "node", "->", "m", "_", "first", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "nullptr", "Ġ!=", "Ġnode", "->", "m", "_", "second", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġresult", "->", "m", "_", "second", "Ġ=", "ĠDeepCopy", "Of", "Node", "(", "node", "->", "m", "_", "second", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠNODE", "S", "_", "DE", "EP", "_", "COPY", "_", "HP", "P", "_", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::868", "code": "// Copyright (c) 2009-2010 Satoshi Nakamoto\n// Copyright (c) 2009-2016 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"feerate.h\"\n\n#include \"tinyformat.h\"\n\nconst std::string CURRENCY_UNIT = \"SQ\";\n\nCFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nBytes_)\n{\n    assert(nBytes_ <= uint64_t(std::numeric_limits<int64_t>::max()));\n    int64_t nSize = int64_t(nBytes_);\n\n    if (nSize > 0)\n        nSatoshisPerK = nFeePaid * 1000 / nSize;\n    else\n        nSatoshisPerK = 0;\n}\n\nCAmount CFeeRate::GetFee(size_t nBytes_) const\n{\n    assert(nBytes_ <= uint64_t(std::numeric_limits<int64_t>::max()));\n    int64_t nSize = int64_t(nBytes_);\n\n    CAmount nFee = nSatoshisPerK * nSize / 1000;\n\n    if (nFee == 0 && nSize != 0) {\n        if (nSatoshisPerK > 0)\n            nFee = CAmount(1);\n        if (nSatoshisPerK < 0)\n            nFee = CAmount(-1);\n    }\n\n    return nFee;\n}\n\nstd::string CFeeRate::ToString() const\n{\n    return strprintf(\"%d.%08d %s/kB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2010", "ĠSat", "os", "hi", "ĠN", "ak", "am", "oto", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2016", "ĠThe", "ĠBitcoin", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠCOPY", "ING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "licenses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "fe", "erate", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "tiny", "format", ".", "h", "\"", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "ĠCUR", "RE", "NCY", "_", "UNIT", "Ġ=", "Ġ\"", "SQ", "\";", "Ċ", "Ċ", "CF", "ee", "Rate", "::", "CF", "ee", "Rate", "(", "const", "ĠCAmount", "&", "Ġn", "Fee", "Paid", ",", "Ġsize", "_", "t", "ĠnBytes", "_)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġassert", "(", "n", "Bytes", "_", "Ġ<=", "Ġuint", "64", "_", "t", "(", "std", "::", "numeric", "_", "limits", "<", "int", "64", "_", "t", ">::", "max", "()));", "Ċ", "ĠĠĠ", "Ġint", "64", "_", "t", "ĠnSize", "Ġ=", "Ġint", "64", "_", "t", "(", "n", "Bytes", "_);", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "nSize", "Ġ>", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ=", "Ġn", "Fee", "Paid", "Ġ*", "Ġ1000", "Ġ/", "ĠnSize", ";", "Ċ", "ĠĠĠ", "Ġelse", "Ċ", "ĠĠĠĠĠĠĠ", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "CA", "mount", "ĠCF", "ee", "Rate", "::", "Get", "Fee", "(", "size", "_", "t", "ĠnBytes", "_)", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġassert", "(", "n", "Bytes", "_", "Ġ<=", "Ġuint", "64", "_", "t", "(", "std", "::", "numeric", "_", "limits", "<", "int", "64", "_", "t", ">::", "max", "()));", "Ċ", "ĠĠĠ", "Ġint", "64", "_", "t", "ĠnSize", "Ġ=", "Ġint", "64", "_", "t", "(", "n", "Bytes", "_);", "Ċ", "Ċ", "ĠĠĠ", "ĠCAmount", "Ġn", "Fee", "Ġ=", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ*", "ĠnSize", "Ġ/", "Ġ1000", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "n", "Fee", "Ġ==", "Ġ0", "Ġ&&", "ĠnSize", "Ġ!=", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "n", "Sat", "osh", "is", "Per", "K", "Ġ>", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġn", "Fee", "Ġ=", "ĠCAmount", "(", "1", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "n", "Sat", "osh", "is", "Per", "K", "Ġ<", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġn", "Fee", "Ġ=", "ĠCAmount", "(-", "1", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġn", "Fee", ";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "ĠCF", "ee", "Rate", "::", "ToString", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġstrprintf", "(\"%", "d", ".%", "08", "d", "Ġ%", "s", "/", "kB", "\",", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ/", "ĠCOIN", ",", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ%", "ĠCOIN", ",", "ĠCUR", "RE", "NCY", "_", "UNIT", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::869", "code": "// DFS\n// recursive\n#include <iostream>\nusing namespace std;\n\nstruct TreeNode {\n    int val;\n    TreeNode *left;\n    TreeNode *right;\n    TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n};\n\nint minDepth(TreeNode *root)\n{ \n    if(NULL == root)\n        return 0;\n    if(NULL == root->left && NULL == root->right)\n        return 1;\n    int left = minDepth(root->left);\n    int right = minDepth(root->right);\n    \n    if(0 == left)\n        return right + 1;\n    if(0 == right)\n        return left + 1;\n    return left < right ? left + 1 : right + 1;\n}\n\nint main()\n{\n\n    return 0;\n}\n", "code_tokens": ["Ġ//", "ĠDFS", "Ċ", "//", "Ġrecursive", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "struct", "ĠTreeNode", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġval", ";", "Ċ", "ĠĠĠ", "ĠTreeNode", "Ġ*", "left", ";", "Ċ", "ĠĠĠ", "ĠTreeNode", "Ġ*", "right", ";", "Ċ", "ĠĠĠ", "ĠTreeNode", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġleft", "(", "NULL", "),", "Ġright", "(", "NULL", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmin", "Depth", "(", "TreeNode", "Ġ*", "root", ")", "Ċ", "{", "ĠĊ", "ĠĠĠ", "Ġif", "(", "NULL", "Ġ==", "Ġroot", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "NULL", "Ġ==", "Ġroot", "->", "left", "Ġ&&", "ĠNULL", "Ġ==", "Ġroot", "->", "right", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġleft", "Ġ=", "Ġmin", "Depth", "(", "root", "->", "left", ");", "Ċ", "ĠĠĠ", "Ġint", "Ġright", "Ġ=", "Ġmin", "Depth", "(", "root", "->", "right", ");", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġif", "(", "0", "Ġ==", "Ġleft", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġright", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "0", "Ġ==", "Ġright", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġleft", "Ġ+", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġleft", "Ġ<", "Ġright", "Ġ?", "Ġleft", "Ġ+", "Ġ1", "Ġ:", "Ġright", "Ġ+", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::870", "code": "/*\n * MapReduceKernelConn.hpp\n *\n *  Created on: Aug 16, 2013\n *      Author: garkenyon\n */\n\n#ifndef MAPREDUCEKERNELCONN_HPP_\n#define MAPREDUCEKERNELCONN_HPP_\n\n#include \"HyPerConn.hpp\"\n#include \"../layers/Movie.hpp\"\n\nnamespace PV {\n\nclass MapReduceKernelConn: public PV::HyPerConn {\npublic:\n\tMapReduceKernelConn();\n\tvirtual ~MapReduceKernelConn();\n    MapReduceKernelConn(const char * name, HyPerCol * hc);\n    static const int MAX_WEIGHT_FILES = 1024;  // arbitrary limit...\n\nprotected:\n    int initialize(const char * name, HyPerCol * hc);\n    virtual int ioParamsFillGroup(enum ParamsIOFlag ioFlag);\n    virtual void ioParam_sharedWeights(enum ParamsIOFlag ioFlag);\n    virtual void ioParam_movieLayerName(enum ParamsIOFlag ioFlag);\n    virtual void ioParam_dWeightsListName(enum ParamsIOFlag ioFlag);\n    virtual void ioParam_num_dWeightFiles(enum ParamsIOFlag ioFlag);\n    virtual void ioParam_dWeightFileIndex(enum ParamsIOFlag ioFlag);\n\tvirtual int communicateInitInfo();\n\tvirtual int reduceKernels(int arborID);\nprivate:\n\tint initialize_base();\n\tchar * dWeightsListName;\n\tchar * dWeightsFilename;\n\tchar dWeightsList[MAX_WEIGHT_FILES][PV_PATH_MAX];\n\tint num_dWeightFiles;\n\tint dWeightFileIndex;\n\tchar * movieLayerName;\n\tMovie * movieLayer;\n\n};\n\n} /* namespace PV */\n#endif /* MAPREDUCEKERNELCONN_HPP_ */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠMap", "Reduce", "Kernel", "Conn", ".", "hpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠAug", "Ġ16", ",", "Ġ2013", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "Ġg", "ar", "ken", "y", "on", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "ifndef", "ĠMAP", "RED", "UCE", "KERNEL", "CONN", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠMAP", "RED", "UCE", "KERNEL", "CONN", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ\"", "Hy", "Per", "Conn", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "layers", "/", "Movie", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "ĠPV", "Ġ{", "Ċ", "Ċ", "class", "ĠMap", "Reduce", "Kernel", "Conn", ":", "Ġpublic", "ĠPV", "::", "Hy", "Per", "Conn", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "Map", "Reduce", "Kernel", "Conn", "();", "Ċ", "ĉ", "virtual", "Ġ~", "Map", "Reduce", "Kernel", "Conn", "();", "Ċ", "ĠĠĠ", "ĠMap", "Reduce", "Kernel", "Conn", "(", "const", "Ġchar", "Ġ*", "Ġname", ",", "ĠHy", "Per", "Col", "Ġ*", "Ġhc", ");", "Ċ", "ĠĠĠ", "Ġstatic", "Ġconst", "Ġint", "ĠMAX", "_", "WEIGHT", "_", "FILES", "Ġ=", "Ġ1024", ";", "Ġ", "Ġ//", "Ġarbitrary", "Ġlimit", "...", "Ċ", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "Ġint", "Ġinitialize", "(", "const", "Ġchar", "Ġ*", "Ġname", ",", "ĠHy", "Per", "Col", "Ġ*", "Ġhc", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġint", "Ġio", "Params", "Fill", "Group", "(", "enum", "ĠParams", "IO", "Flag", "Ġio", "Flag", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġio", "Param", "_", "shared", "Weights", "(", "enum", "ĠParams", "IO", "Flag", "Ġio", "Flag", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġio", "Param", "_", "movie", "Layer", "Name", "(", "enum", "ĠParams", "IO", "Flag", "Ġio", "Flag", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġio", "Param", "_", "d", "Weights", "List", "Name", "(", "enum", "ĠParams", "IO", "Flag", "Ġio", "Flag", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġio", "Param", "_", "num", "_", "d", "Weight", "Files", "(", "enum", "ĠParams", "IO", "Flag", "Ġio", "Flag", ");", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġio", "Param", "_", "d", "Weight", "File", "Index", "(", "enum", "ĠParams", "IO", "Flag", "Ġio", "Flag", ");", "Ċ", "ĉ", "virtual", "Ġint", "Ġcommunicate", "Init", "Info", "();", "Ċ", "ĉ", "virtual", "Ġint", "Ġreduce", "Kernel", "s", "(", "int", "Ġar", "bor", "ID", ");", "Ċ", "private", ":", "Ċ", "ĉ", "int", "Ġinitialize", "_", "base", "();", "Ċ", "ĉ", "char", "Ġ*", "Ġd", "Weights", "List", "Name", ";", "Ċ", "ĉ", "char", "Ġ*", "Ġd", "Weights", "Filename", ";", "Ċ", "ĉ", "char", "Ġd", "Weights", "List", "[", "MAX", "_", "WEIGHT", "_", "FILES", "][", "PV", "_", "PATH", "_", "MAX", "];", "Ċ", "ĉ", "int", "Ġnum", "_", "d", "Weight", "Files", ";", "Ċ", "ĉ", "int", "Ġd", "Weight", "File", "Index", ";", "Ċ", "ĉ", "char", "Ġ*", "Ġmovie", "Layer", "Name", ";", "Ċ", "ĉ", "Movie", "Ġ*", "Ġmovie", "Layer", ";", "Ċ", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠPV", "Ġ*/", "Ċ", "#", "endif", "Ġ/*", "ĠMAP", "RED", "UCE", "KERNEL", "CONN", "_", "HP", "P", "_", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::871", "code": "/* -*- mode: c++; c-basic-offset: 4; indent-tabs-mode: nil -*-\n\n   this file is part of rcssserver3D\n   Fri May 9 2003\n   Copyright (C) 2002,2003 Koblenz University\n   Copyright (C) 2003 RoboCup Soccer Server 3D Maintenance Group\n   $Id$\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; version 2 of the License.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; if not, write to the Free Software\n   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n*/\n#include <oxygen/physicsserver/staticbody.h>\n#include <oxygen/physicsserver/int/staticbodyint.h>\n\nusing namespace oxygen;\nusing namespace boost;\n\nboost::shared_ptr<StaticBodyInt> StaticBody::mStaticBodyImp;\n\nStaticBody::StaticBody() : Body(){\n\n}\n\nStaticBody::~StaticBody(){\n\n}\n\nvoid StaticBody::OnLink()\n{\n    if (mStaticBodyImp.get() == 0)\n        mStaticBodyImp = dynamic_pointer_cast<StaticBodyInt>\n            (GetCore()->New(\"StaticBodyImp\"));\n}\n", "code_tokens": ["Ġ/*", "Ġ-", "*-", "Ġmode", ":", "Ġc", "++;", "Ġc", "-", "basic", "-", "offset", ":", "Ġ4", ";", "Ġindent", "-", "tabs", "-", "mode", ":", "Ġnil", "Ġ-", "*-", "Ċ", "Ċ", "ĠĠ", "Ġthis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġr", "css", "server", "3", "D", "Ċ", "ĠĠ", "ĠF", "ri", "ĠMay", "Ġ9", "Ġ2003", "Ċ", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ200", "2", ",", "2003", "ĠK", "ob", "len", "z", "ĠUn", "ivers", "ity", "Ċ", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "ĠRo", "bo", "C", "up", "ĠS", "oc", "cer", "ĠServer", "Ġ3", "D", "ĠM", "aint", "enance", "ĠGroup", "Ċ", "ĠĠ", "Ġ$", "Id", "$", "Ċ", "Ċ", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ".", "Ċ", "Ċ", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "ĠĠ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ6", "75", "ĠM", "ass", "ĠA", "ve", ",", "ĠC", "amb", "ridge", ",", "ĠMA", "Ġ02", "139", ",", "ĠUSA", ".", "Ċ", "*/", "Ċ", "#", "include", "Ġ<", "o", "xygen", "/", "phys", "ic", "ss", "erver", "/", "static", "body", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "o", "xygen", "/", "phys", "ic", "ss", "erver", "/", "int", "/", "static", "body", "int", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġo", "xygen", ";", "Ċ", "using", "Ġnamespace", "Ġboost", ";", "Ċ", "Ċ", "boost", "::", "shared", "_", "ptr", "<", "Static", "Body", "Int", ">", "ĠStatic", "Body", "::", "m", "Static", "Body", "Imp", ";", "Ċ", "Ċ", "Static", "Body", "::", "Static", "Body", "()", "Ġ:", "ĠBody", "(){", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Static", "Body", "::~", "Static", "Body", "(){", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠStatic", "Body", "::", "On", "Link", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "Static", "Body", "Imp", ".", "get", "()", "Ġ==", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "Static", "Body", "Imp", "Ġ=", "Ġdynamic", "_", "pointer", "_", "cast", "<", "Static", "Body", "Int", ">", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(", "Get", "Core", "()->", "New", "(\"", "Static", "Body", "Imp", "\"));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::872", "code": "#include\"stdlib.h\"\n#include\"stdio.h\"\n//////you can use stack to storage different type of data/////\n#define  ElemType int\n\nstruct stackNode{\n\tElemType data;\n\tstackNode* next;\n};\n\nstruct stack{\n\tstackNode* top;\n};\n\n\n/////do the initialization//////\nvoid initStack(stack &s){\n\ts.top = NULL;\n}\n\nbool empty(stack s){\n\tif(s.top)\n\t\treturn false;\n\treturn true;\n}\n\nElemType top(stack s){\n\treturn s.top->data;\n}\n\nvoid push(stack &s, ElemType data_){\n\tstackNode* newNode = (stackNode*)malloc(sizeof(stackNode));\n\tnewNode->data = data_;\n\tnewNode->next = s.top;\n\ts.top = newNode;\n}\n\nvoid pop(stack &s){\n\tstackNode* temp = s.top;\n\ts.top = s.top->next;\n\tfree(temp);\n}\n\nvoid destroy(stack &s){\n\tstackNode* temp;\n\twhile(s.top){\n\t\ttemp = s.top;\n\t\ts.top = s.top->next;\n\t\tfree(temp);\n\t}\n}\n\n/////now this is the test/////\nint main(){\n//\t#undef ElemType\n//\t#define ElemType char\n\tstack s;\n\tinitStack(s);\n\tpush(s,3);\n\tprintf(\"%d \\n\",top(s));\n//\tpop(s);\n\tif(empty(s))\n\t\tprintf(\"The stack is empty! \\n\");\n\telse\n\t\tprintf(\"The stack is not empty! \\n\");\n\treturn 1;\n}", "code_tokens": ["Ġ#", "include", "\"", "stdlib", ".", "h", "\"", "Ċ", "#", "include", "\"", "stdio", ".", "h", "\"", "Ċ", "//////", "you", "Ġcan", "Ġuse", "Ġstack", "Ġto", "Ġstorage", "Ġdifferent", "Ġtype", "Ġof", "Ġdata", "/////", "Ċ", "#", "define", "Ġ", "ĠElem", "Type", "Ġint", "Ċ", "Ċ", "struct", "Ġstack", "Node", "{", "Ċ", "ĉ", "Elem", "Type", "Ġdata", ";", "Ċ", "ĉ", "stack", "Node", "*", "Ġnext", ";", "Ċ", "};", "Ċ", "Ċ", "struct", "Ġstack", "{", "Ċ", "ĉ", "stack", "Node", "*", "Ġtop", ";", "Ċ", "};", "Ċ", "Ċ", "Ċ", "/////", "do", "Ġthe", "Ġinitialization", "//////", "Ċ", "void", "Ġinit", "Stack", "(", "stack", "Ġ&", "s", "){", "Ċ", "ĉ", "s", ".", "top", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "Ġempty", "(", "stack", "Ġs", "){", "Ċ", "ĉ", "if", "(", "s", ".", "top", ")", "Ċ", "ĉ", "ĉ", "return", "Ġfalse", ";", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "Elem", "Type", "Ġtop", "(", "stack", "Ġs", "){", "Ċ", "ĉ", "return", "Ġs", ".", "top", "->", "data", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpush", "(", "stack", "Ġ&", "s", ",", "ĠElem", "Type", "Ġdata", "_", "){", "Ċ", "ĉ", "stack", "Node", "*", "ĠnewNode", "Ġ=", "Ġ(", "stack", "Node", "*)", "malloc", "(", "sizeof", "(", "stack", "Node", "));", "Ċ", "ĉ", "newNode", "->", "data", "Ġ=", "Ġdata", "_;", "Ċ", "ĉ", "newNode", "->", "next", "Ġ=", "Ġs", ".", "top", ";", "Ċ", "ĉ", "s", ".", "top", "Ġ=", "ĠnewNode", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpop", "(", "stack", "Ġ&", "s", "){", "Ċ", "ĉ", "stack", "Node", "*", "Ġtemp", "Ġ=", "Ġs", ".", "top", ";", "Ċ", "ĉ", "s", ".", "top", "Ġ=", "Ġs", ".", "top", "->", "next", ";", "Ċ", "ĉ", "free", "(", "temp", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdestroy", "(", "stack", "Ġ&", "s", "){", "Ċ", "ĉ", "stack", "Node", "*", "Ġtemp", ";", "Ċ", "ĉ", "while", "(", "s", ".", "top", "){", "Ċ", "ĉ", "ĉ", "temp", "Ġ=", "Ġs", ".", "top", ";", "Ċ", "ĉ", "ĉ", "s", ".", "top", "Ġ=", "Ġs", ".", "top", "->", "next", ";", "Ċ", "ĉ", "ĉ", "free", "(", "temp", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "/////", "now", "Ġthis", "Ġis", "Ġthe", "Ġtest", "/////", "Ċ", "int", "Ġmain", "(){", "Ċ", "//", "ĉ", "#", "undef", "ĠElem", "Type", "Ċ", "//", "ĉ", "#", "define", "ĠElem", "Type", "Ġchar", "Ċ", "ĉ", "stack", "Ġs", ";", "Ċ", "ĉ", "init", "Stack", "(", "s", ");", "Ċ", "ĉ", "push", "(", "s", ",", "3", ");", "Ċ", "ĉ", "printf", "(\"%", "d", "Ġ\\", "n", "\",", "top", "(", "s", "));", "Ċ", "//", "ĉ", "pop", "(", "s", ");", "Ċ", "ĉ", "if", "(", "empty", "(", "s", "))", "Ċ", "ĉ", "ĉ", "printf", "(\"", "The", "Ġstack", "Ġis", "Ġempty", "!", "Ġ\\", "n", "\");", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "printf", "(\"", "The", "Ġstack", "Ġis", "Ġnot", "Ġempty", "!", "Ġ\\", "n", "\");", "Ċ", "ĉ", "return", "Ġ1", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::873", "code": "/*\r\n * Copyright (C) 2008-2013 TrinityCore <http://www.trinitycore.org/>\r\n *\r\n * This program is free software; you can redistribute it and/or modify it\r\n * under the terms of the GNU General Public License as published by the\r\n * Free Software Foundation; either version 2 of the License, or (at your\r\n * option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\r\n * more details.\r\n *\r\n * You should have received a copy of the GNU General Public License along\r\n * with this program. If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n#include \"LogWorker.h\"\r\n\r\nLogWorker::LogWorker()\r\n    : m_queue(HIGH_WATERMARK, LOW_WATERMARK)\r\n{\r\n    ACE_Task_Base::activate(THR_NEW_LWP | THR_JOINABLE | THR_INHERIT_SCHED, 1);\r\n}\r\n\r\nLogWorker::~LogWorker()\r\n{\r\n    m_queue.deactivate();\r\n    wait();\r\n}\r\n\r\nint LogWorker::enqueue(LogOperation* op)\r\n{\r\n    return m_queue.enqueue(op);\r\n}\r\n\r\nint LogWorker::svc()\r\n{\r\n    while (1)\r\n    {\r\n        LogOperation* request;\r\n        if (m_queue.dequeue(request) == -1)\r\n            break;\r\n\r\n        request->call();\r\n        delete request;\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2013", "ĠTr", "inity", "Core", "Ġ<", "http", "://", "www", ".", "tr", "inity", "core", ".", "org", "/>", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "č", "Ċ", "Ġ*", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "č", "Ċ", "Ġ*", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "č", "Ċ", "Ġ*", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "č", "Ċ", "Ġ*", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "č", "Ċ", "Ġ*", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "č", "Ċ", "Ġ*", "Ġmore", "Ġdetails", ".", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "č", "Ċ", "Ġ*", "Ġwith", "Ġthis", "Ġprogram", ".", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Log", "Worker", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "Log", "Worker", "::", "Log", "Worker", "()", "č", "Ċ", "ĠĠĠ", "Ġ:", "Ġm", "_", "queue", "(", "HIGH", "_", "WATER", "MARK", ",", "ĠLOW", "_", "WATER", "MARK", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "ĠACE", "_", "Task", "_", "Base", "::", "activate", "(", "THR", "_", "NEW", "_", "L", "WP", "Ġ|", "ĠTH", "R", "_", "JOIN", "ABLE", "Ġ|", "ĠTH", "R", "_", "INHERIT", "_", "SCHED", ",", "Ġ1", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Log", "Worker", "::~", "Log", "Worker", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġm", "_", "queue", ".", "deactivate", "();", "č", "Ċ", "ĠĠĠ", "Ġwait", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠLog", "Worker", "::", "enqueue", "(", "Log", "Operation", "*", "Ġop", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġm", "_", "queue", ".", "enqueue", "(", "op", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠLog", "Worker", "::", "svc", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "1", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "ĠLog", "Operation", "*", "Ġrequest", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "m", "_", "queue", ".", "dequeue", "(", "request", ")", "Ġ==", "Ġ-", "1", ")", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġrequest", "->", "call", "();", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdelete", "Ġrequest", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::874", "code": "# include <bits/stdc++.h>\ntypedef long long int lli;\nusing namespace std;\n\nint a, b, c;\n\nint rm(int x) {\n    int ret = 0;\n    int p = 1;\n    while (x > 0) {\n        if (x%10!=0) ret = ret + x%10 * p, p*=10;\n        x /= 10;\n    }\n    return ret;\n}\n\nint main()\n{\n    cin >> a >> b; c = a + b;\n\n    if (rm(a) + rm(b) == rm(c)) cout << \"YES\" << endl;\n    else cout << \"NO\" << endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "Ġinclude", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "typedef", "Ġlong", "Ġlong", "Ġint", "Ġl", "li", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġa", ",", "Ġb", ",", "Ġc", ";", "Ċ", "Ċ", "int", "Ġrm", "(", "int", "Ġx", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġint", "Ġret", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġp", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "x", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "x", "%", "10", "!=", "0", ")", "Ġret", "Ġ=", "Ġret", "Ġ+", "Ġx", "%", "10", "Ġ*", "Ġp", ",", "Ġp", "*=", "10", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġx", "Ġ/=", "Ġ10", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġret", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "Ġc", "Ġ=", "Ġa", "Ġ+", "Ġb", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "rm", "(", "a", ")", "Ġ+", "Ġrm", "(", "b", ")", "Ġ==", "Ġrm", "(", "c", "))", "Ġcout", "Ġ<<", "Ġ\"", "YES", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġelse", "Ġcout", "Ġ<<", "Ġ\"", "NO", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::875", "code": "#include \"datepicker.h\"\r\n\r\nDatePicker::DatePicker(QQuickItem *parent):\r\n    QQuickItem(parent)\r\n{\r\n#if defined(Q_OS_ANDROID)\r\n    nativeControls = AndroidNativeControls::getInstance();\r\n#endif\r\n    connect(nativeControls,SIGNAL(dateSelected(int,int,int)),SLOT(setDate(int,int,int)));\r\n}\r\n\r\nDatePicker::~DatePicker()\r\n{\r\n}\r\n\r\n\r\nQDate DatePicker::date() const\r\n{\r\n    return m_date;\r\n}\r\n\r\nvoid DatePicker::showDatepicker() const\r\n{\r\n    nativeControls->showDatepicker(m_date.year(), m_date.month(), m_date.day());\r\n}\r\n\r\nvoid DatePicker::setDate(QDate newDate)\r\n{\r\n    if (m_date == newDate)\r\n        return;\r\n\r\n    m_date = newDate;\r\n    emit dateChanged(newDate);\r\n}\r\n\r\nvoid DatePicker::setDate(int year, int month, int day)\r\n{\r\n    QDate newDate(year, month, day);\r\n\r\n    if (m_date == newDate)\r\n        return;\r\n\r\n    m_date = newDate;\r\n    emit dateChanged(newDate);\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "datepicker", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "DatePicker", "::", "DatePicker", "(", "QQuick", "Item", "Ġ*", "parent", "):", "č", "Ċ", "ĠĠĠ", "ĠQQuick", "Item", "(", "parent", ")", "č", "Ċ", "{", "č", "Ċ", "#", "if", "Ġdefined", "(", "Q", "_", "OS", "_", "ANDROID", ")", "č", "Ċ", "ĠĠĠ", "Ġnative", "Controls", "Ġ=", "ĠAndroid", "Native", "Controls", "::", "getInstance", "();", "č", "Ċ", "#", "endif", "č", "Ċ", "ĠĠĠ", "Ġconnect", "(", "native", "Controls", ",", "SIGNAL", "(", "date", "Selected", "(", "int", ",", "int", ",", "int", ")),", "SLOT", "(", "setDate", "(", "int", ",", "int", ",", "int", ")));", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "DatePicker", "::~", "DatePicker", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "Q", "Date", "ĠDate", "Picker", "::", "date", "()", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġm", "_", "date", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDate", "Picker", "::", "show", "Date", "picker", "()", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġnative", "Controls", "->", "show", "Date", "picker", "(", "m", "_", "date", ".", "year", "(),", "Ġm", "_", "date", ".", "month", "(),", "Ġm", "_", "date", ".", "day", "());", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDate", "Picker", "::", "setDate", "(", "Q", "Date", "Ġnew", "Date", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "_", "date", "Ġ==", "Ġnew", "Date", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġm", "_", "date", "Ġ=", "Ġnew", "Date", ";", "č", "Ċ", "ĠĠĠ", "Ġemit", "Ġdate", "Changed", "(", "new", "Date", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDate", "Picker", "::", "setDate", "(", "int", "Ġyear", ",", "Ġint", "Ġmonth", ",", "Ġint", "Ġday", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "ĠQ", "Date", "Ġnew", "Date", "(", "year", ",", "Ġmonth", ",", "Ġday", ");", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "m", "_", "date", "Ġ==", "Ġnew", "Date", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "č", "Ċ", "č", "Ċ", "ĠĠĠ", "Ġm", "_", "date", "Ġ=", "Ġnew", "Date", ";", "č", "Ċ", "ĠĠĠ", "Ġemit", "Ġdate", "Changed", "(", "new", "Date", ");", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::876", "code": "#include<iostream>\r\n#include<algorithm>\r\n#include<vector>\r\nusing namespace std;\r\nint main(void)\r\n{\r\n    int n,k;\r\n    cin>>n>>k;\r\n    vector<pair<int,int>> v;\r\n    for(int i=0;i<n;++i)\r\n    {\r\n        int temp;\r\n        cin>>temp;\r\n        v.push_back(make_pair(temp%10,temp));\r\n    }\r\n    sort(v.rbegin(),v.rend());\r\n    int flag=0;\r\n    while(flag==0)\r\n    {\r\n        int cnt=0;\r\n        for(int i=0;i<n;++i)\r\n        {\r\n            int a=v[i].first;\r\n            int b=v[i].second;\r\n            if(b==100)\r\n            {\r\n                cnt++;\r\n                continue;\r\n            }\r\n            if(k>=(10-a))\r\n            {\r\n                v[i].second+=10-a;\r\n                k-=(10-a);\r\n                v[i].first=0;\r\n            }\r\n            else\r\n            {\r\n                flag=2;\r\n                break;\r\n            }\r\n        }\r\n        if(cnt==n)\r\n            flag=1;\r\n    }\r\n    int ans=0;\r\n    for(int i=0;i<n;++i)\r\n        ans+=(v[i].second)/10;\r\n    cout<<ans;\r\n    return 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "<", "i", "ostream", ">", "č", "Ċ", "#", "include", "<", "algorithm", ">", "č", "Ċ", "#", "include", "<", "vector", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "int", "Ġmain", "(", "void", ")", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "k", ";", "č", "Ċ", "ĠĠĠ", "Ġcin", ">>", "n", ">>", "k", ";", "č", "Ċ", "ĠĠĠ", "Ġvector", "<", "pair", "<", "int", ",", "int", ">>", "Ġv", ";", "č", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";++", "i", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġtemp", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", ">>", "temp", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġv", ".", "push", "_", "back", "(", "make", "_", "pair", "(", "temp", "%", "10", ",", "temp", "));", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġsort", "(", "v", ".", "r", "begin", "(),", "v", ".", "rend", "());", "č", "Ċ", "ĠĠĠ", "Ġint", "Ġflag", "=", "0", ";", "č", "Ċ", "ĠĠĠ", "Ġwhile", "(", "flag", "==", "0", ")", "č", "Ċ", "ĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġcnt", "=", "0", ";", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";++", "i", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġa", "=", "v", "[", "i", "].", "first", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġb", "=", "v", "[", "i", "].", "second", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "b", "==", "100", ")", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcnt", "++;", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "k", ">", "=(", "10", "-", "a", "))", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġv", "[", "i", "].", "second", "+=", "10", "-", "a", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġk", "-", "=(", "10", "-", "a", ");", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġv", "[", "i", "].", "first", "=", "0", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġelse", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ{", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġflag", "=", "2", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "cnt", "==", "n", ")", "č", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġflag", "=", "1", ";", "č", "Ċ", "ĠĠĠ", "Ġ}", "č", "Ċ", "ĠĠĠ", "Ġint", "Ġans", "=", "0", ";", "č", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";++", "i", ")", "č", "Ċ", "ĠĠĠĠĠĠĠ", "Ġans", "+=(", "v", "[", "i", "].", "second", ")/", "10", ";", "č", "Ċ", "ĠĠĠ", "Ġcout", "<<", "ans", ";", "č", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::877", "code": "// Lab 6.8 - Student Generated Code Assignments\n//\n// Option 2: Write a program that will input the number of wins and losses that\n// a baseball team acquired during a complete season. The wins should be\n// input in a parameter-less value returning function that returns the wins to\n// the main function. A similar function should do the same thing for the\n// losses. A third value returning function calculates the percentage of wins.\n// It receives the wins and losses as parameters and returns the percentage\n// (float) to the main program which then prints the result. The percentage\n// should be printed as a percent to two decimal places.\n//\n//\n// written by Walter B. Vaughan for CSC 134, section 200, Fall 2014\n//  at Catawba Valley Community College\n\n#include <iostream>\n#include <iomanip>\n\nunsigned getWins();\nunsigned getLosses();\nfloat calcPercentage( unsigned, unsigned );\n\nint main() {\n    std::cout << std::fixed << std::setprecision(2)\n              << \"The percentage of wins is \"\n              << calcPercentage( getLosses(), getWins() ) << \"%\\n\";\n\n    return 0;\n}\n\nunsigned getWins() {\n    unsigned w;\n    std::cout << \"Please input the number of wins\\n\";\n    std::cin >> w;\n    return w;\n}\n\nunsigned getLosses() {\n    unsigned l;\n    std::cout << \"Please input the number of losses\\n\";\n    std::cin >> l;\n    return l;\n}\n\nfloat calcPercentage( unsigned l, unsigned w ) {\n    return ( static_cast<float>(w) / (w+l) ) * 100.0;\n}\n", "code_tokens": ["Ġ//", "ĠL", "ab", "Ġ6", ".", "8", "Ġ-", "ĠSt", "udent", "ĠGenerated", "ĠCode", "ĠAssign", "ments", "Ċ", "//", "Ċ", "//", "ĠOption", "Ġ2", ":", "ĠWrite", "Ġa", "Ġprogram", "Ġthat", "Ġwill", "Ġinput", "Ġthe", "Ġnumber", "Ġof", "Ġwins", "Ġand", "Ġlosses", "Ġthat", "Ċ", "//", "Ġa", "Ġbase", "ball", "Ġteam", "Ġacquired", "Ġduring", "Ġa", "Ġcomplete", "Ġseason", ".", "ĠThe", "Ġwins", "Ġshould", "Ġbe", "Ċ", "//", "Ġinput", "Ġin", "Ġa", "Ġparameter", "-", "less", "Ġvalue", "Ġreturning", "Ġfunction", "Ġthat", "Ġreturns", "Ġthe", "Ġwins", "Ġto", "Ċ", "//", "Ġthe", "Ġmain", "Ġfunction", ".", "ĠA", "Ġsimilar", "Ġfunction", "Ġshould", "Ġdo", "Ġthe", "Ġsame", "Ġthing", "Ġfor", "Ġthe", "Ċ", "//", "Ġlosses", ".", "ĠA", "Ġthird", "Ġvalue", "Ġreturning", "Ġfunction", "Ġcalculates", "Ġthe", "Ġpercentage", "Ġof", "Ġwins", ".", "Ċ", "//", "ĠIt", "Ġreceives", "Ġthe", "Ġwins", "Ġand", "Ġlosses", "Ġas", "Ġparameters", "Ġand", "Ġreturns", "Ġthe", "Ġpercentage", "Ċ", "//", "Ġ(", "float", ")", "Ġto", "Ġthe", "Ġmain", "Ġprogram", "Ġwhich", "Ġthen", "Ġprints", "Ġthe", "Ġresult", ".", "ĠThe", "Ġpercentage", "Ċ", "//", "Ġshould", "Ġbe", "Ġprinted", "Ġas", "Ġa", "Ġpercent", "Ġto", "Ġtwo", "Ġdecimal", "Ġplaces", ".", "Ċ", "//", "Ċ", "//", "Ċ", "//", "Ġwritten", "Ġby", "ĠW", "alter", "ĠB", ".", "ĠV", "a", "ugh", "an", "Ġfor", "ĠC", "SC", "Ġ1", "34", ",", "Ġsection", "Ġ200", ",", "ĠFall", "Ġ2014", "Ċ", "//", "Ġ", "Ġat", "ĠC", "ata", "w", "ba", "ĠV", "alle", "y", "ĠComm", "unity", "ĠCol", "le", "ge", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "iom", "an", "ip", ">", "Ċ", "Ċ", "unsigned", "Ġget", "W", "ins", "();", "Ċ", "unsigned", "Ġget", "L", "os", "ses", "();", "Ċ", "float", "Ġcalc", "Percentage", "(", "Ġunsigned", ",", "Ġunsigned", "Ġ);", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġstd", "::", "fixed", "Ġ<<", "Ġstd", "::", "set", "precision", "(", "2", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ<<", "Ġ\"", "The", "Ġpercentage", "Ġof", "Ġwins", "Ġis", "Ġ\"", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ<<", "Ġcalc", "Percentage", "(", "Ġget", "L", "os", "ses", "(),", "Ġget", "W", "ins", "()", "Ġ)", "Ġ<<", "Ġ\"%", "\\", "n", "\";", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "unsigned", "Ġget", "W", "ins", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġunsigned", "Ġw", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Please", "Ġinput", "Ġthe", "Ġnumber", "Ġof", "Ġwins", "\\", "n", "\";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cin", "Ġ>>", "Ġw", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġw", ";", "Ċ", "}", "Ċ", "Ċ", "unsigned", "Ġget", "L", "os", "ses", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġunsigned", "Ġl", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġ\"", "Please", "Ġinput", "Ġthe", "Ġnumber", "Ġof", "Ġlosses", "\\", "n", "\";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cin", "Ġ>>", "Ġl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġl", ";", "Ċ", "}", "Ċ", "Ċ", "float", "Ġcalc", "Percentage", "(", "Ġunsigned", "Ġl", ",", "Ġunsigned", "Ġw", "Ġ)", "Ġ{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ(", "Ġstatic", "_", "cast", "<", "float", ">(", "w", ")", "Ġ/", "Ġ(", "w", "+", "l", ")", "Ġ)", "Ġ*", "Ġ100", ".", "0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::878", "code": "/*COMMENTS\nJonathan Buch\nSection 3\nLab 14\nDecember 11th, 2014\nMade a recurrence relation that counts the number of 1's in binary form\n*/\n\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n\nint recur(int);\n\nint main(int argc, char *argv[]){\n\tcout << \"  # of Element\" << \"\\t\\t\" << \"# of 1's in the #'s binary form\" << endl;\n\tif(argc > 1){\n\t\tfor(int i = 1; i < argc; i++){\n\t\t\tcout << \"\\t\";\n\t\t\tcout << i << \"\\t\\t\\t\\t\"; \n\t\t\tcout << recur(atoi(argv[i])) << endl;\n\t\t}\n\t}\n\telse{\n\t\tcout << \"No input detected\" << endl;\n\t}\n\treturn 0;\n}\n\nint recur(int x){\n\tif(0 >= x){\n\t\treturn 0;\n\t}\n\tif(0 < x){\n\t\tif(x&1){\n\t\t\treturn (1+recur(x-1));\n\t\t}\n\t\telse{\n\t\t\treturn recur(x/2);\n\t\t}\n\t}\n}\n", "code_tokens": ["Ġ/*", "COMMENT", "S", "Ċ", "J", "on", "ath", "an", "ĠB", "uch", "Ċ", "Section", "Ġ3", "Ċ", "Lab", "Ġ14", "Ċ", "December", "Ġ11", "th", ",", "Ġ2014", "Ċ", "Made", "Ġa", "Ġre", "currence", "Ġrelation", "Ġthat", "Ġcounts", "Ġthe", "Ġnumber", "Ġof", "Ġ1", "'s", "Ġin", "Ġbinary", "Ġform", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "<", "i", "ostream", ">", "Ċ", "#", "include", "<", "c", "stdlib", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġrecur", "(", "int", ");", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[]", "){", "Ċ", "ĉ", "cout", "Ġ<<", "Ġ\"", "Ġ", "Ġ#", "Ġof", "ĠElement", "\"", "Ġ<<", "Ġ\"\\", "t", "\\", "t", "\"", "Ġ<<", "Ġ\"#", "Ġof", "Ġ1", "'s", "Ġin", "Ġthe", "Ġ#", "'", "s", "Ġbinary", "Ġform", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "if", "(", "argc", "Ġ>", "Ġ1", "){", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġargc", ";", "Ġi", "++){", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"\\", "t", "\";", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"\\", "t", "\\", "t", "\\", "t", "\\", "t", "\";", "ĠĊ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġrecur", "(", "atoi", "(", "argv", "[", "i", "]))", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "{", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "No", "Ġinput", "Ġdetected", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġrecur", "(", "int", "Ġx", "){", "Ċ", "ĉ", "if", "(", "0", "Ġ>=", "Ġx", "){", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "if", "(", "0", "Ġ<", "Ġx", "){", "Ċ", "ĉ", "ĉ", "if", "(", "x", "&", "1", "){", "Ċ", "ĉĉ", "ĉ", "return", "Ġ(", "1", "+", "re", "cur", "(", "x", "-", "1", "));", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "{", "Ċ", "ĉĉ", "ĉ", "return", "Ġrecur", "(", "x", "/", "2", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::879", "code": "# include <string>\n# include <iostream>\nusing namespace std;\nclass Solution {\npublic:\n\tstring replaceSpace(string str) {\n\t    string ret;\n\t    for (int i = 0; i < str.length(); ++i) {\n\t        if (str[i] != ' ') ret += str[i];\n\t        else ret += \"\\%20\";\n\t    }\n\t    return ret;\n\t}\n};\n\nint main()\n{\n    Solution s;\n    std::cout << s.replaceSpace(\"we are w!\");\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "Ġinclude", "Ġ<", "string", ">", "Ċ", "#", "Ġinclude", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "string", "Ġreplace", "Space", "(", "string", "Ġstr", ")", "Ġ{", "Ċ", "ĉĠĠĠ", "Ġstring", "Ġret", ";", "Ċ", "ĉĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġstr", ".", "length", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "str", "[", "i", "]", "Ġ!=", "Ġ'", "Ġ')", "Ġret", "Ġ+=", "Ġstr", "[", "i", "];", "Ċ", "ĉĠĠĠĠĠĠĠ", "Ġelse", "Ġret", "Ġ+=", "Ġ\"\\", "%", "20", "\";", "Ċ", "ĉĠĠĠ", "Ġ}", "Ċ", "ĉĠĠĠ", "Ġreturn", "Ġret", ";", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠSolution", "Ġs", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "cout", "Ġ<<", "Ġs", ".", "replace", "Space", "(\"", "we", "Ġare", "Ġw", "!\");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::880", "code": "/* This file is part of the KDE libraries\n   Copyright (C) 2000 Simon Hausmann <hausmann@kde.org>\n\n   This library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Library General Public\n   License version 2 as published by the Free Software Foundation.\n\n   This library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Library General Public License for more details.\n\n   You should have received a copy of the GNU Library General Public License\n   along with this library; see the file COPYING.LIB.  If not, write to\n   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n   Boston, MA 02110-1301, USA.\n*/\n\n#include <kapplication.h>\n#include <klocale.h>\n#include <kcmdlineargs.h>\n\nstatic const KCmdLineOptions options[] =\n{\n    { \"+url\", 0, 0 },\n    KCmdLineLastOption\n};\n\nint main( int argc, char **argv )\n{\n    KLocale::setMainCatalogue(\"kdelibs\");\n    KCmdLineArgs::init( argc, argv, \"kmailservice\", I18N_NOOP(\"KMailService\"), I18N_NOOP(\"Mail service\"), \"unknown\" );\n    KCmdLineArgs::addCmdLineOptions( options );\n\n    KApplication a( false, false );\n\n    KCmdLineArgs *args = KCmdLineArgs::parsedArgs();\n\n    if ( args->count() != 1 )\n        return 1;\n\n    a.invokeMailer(KURL(args->arg(0)), a.startupId(), true);\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠK", "DE", "Ġlibraries", "Ċ", "ĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "ĠSim", "on", "ĠH", "a", "us", "m", "ann", "Ġ<", "ha", "us", "m", "ann", "@", "k", "de", ".", "org", ">", "Ċ", "Ċ", "ĠĠ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "ĠĠ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLibrary", "ĠGeneral", "ĠPublic", "Ċ", "ĠĠ", "ĠLicense", "Ġversion", "Ġ2", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ".", "Ċ", "Ċ", "ĠĠ", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "ĠĠ", "ĠLibrary", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLibrary", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", ".", "LIB", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġwrite", "Ġto", "Ċ", "ĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "Ċ", "ĠĠ", "ĠB", "ost", "on", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "k", "application", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "k", "locale", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "k", "cmdline", "args", ".", "h", ">", "Ċ", "Ċ", "static", "Ġconst", "ĠK", "CmdLine", "Options", "Ġoptions", "[]", "Ġ=", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ{", "Ġ\"+", "url", "\",", "Ġ0", ",", "Ġ0", "Ġ},", "Ċ", "ĠĠĠ", "ĠK", "CmdLine", "Last", "Option", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġargc", ",", "Ġchar", "Ġ**", "argv", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠK", "Locale", "::", "set", "Main", "Catalogue", "(\"", "k", "deli", "bs", "\");", "Ċ", "ĠĠĠ", "ĠK", "CmdLine", "Args", "::", "init", "(", "Ġargc", ",", "Ġargv", ",", "Ġ\"", "k", "mail", "service", "\",", "ĠI", "18", "N", "_", "NOOP", "(\"", "K", "Mail", "Service", "\"),", "ĠI", "18", "N", "_", "NOOP", "(\"", "Mail", "Ġservice", "\"),", "Ġ\"", "unknown", "\"", "Ġ);", "Ċ", "ĠĠĠ", "ĠK", "CmdLine", "Args", "::", "add", "CmdLine", "Options", "(", "Ġoptions", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "ĠK", "Application", "Ġa", "(", "Ġfalse", ",", "Ġfalse", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "ĠK", "CmdLine", "Args", "Ġ*", "args", "Ġ=", "ĠK", "CmdLine", "Args", "::", "parsed", "Args", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Ġargs", "->", "count", "()", "Ġ!=", "Ġ1", "Ġ)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ1", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġa", ".", "invoke", "Mailer", "(", "K", "URL", "(", "args", "->", "arg", "(", "0", ")),", "Ġa", ".", "startup", "Id", "(),", "Ġtrue", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::881", "code": "/*\n * Copyright (C) 2010 Geometer Plus <contact@geometerplus.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n * 02110-1301, USA.\n */\n\n#include \"ZLNetworkSSLCertificate.h\"\n\nconst ZLNetworkSSLCertificate ZLNetworkSSLCertificate::NULL_CERTIFICATE(true);\nconst ZLNetworkSSLCertificate ZLNetworkSSLCertificate::DONT_VERIFY_CERTIFICATE(false);\n\nZLNetworkSSLCertificate::ZLNetworkSSLCertificate(bool doVerify) : DoVerify(doVerify) {\n}\n\nZLNetworkSSLCertificate::ZLNetworkSSLCertificate(const std::string &path) : Path(path), DoVerify(true) {\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠGe", "ometer", "ĠPl", "us", "Ġ<", "contact", "@", "geom", "eter", "plus", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", "reet", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ċ", "Ġ*", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "ZL", "Network", "SSL", "Certificate", ".", "h", "\"", "Ċ", "Ċ", "const", "ĠZ", "L", "Network", "SSL", "Certificate", "ĠZ", "L", "Network", "SSL", "Certificate", "::", "NULL", "_", "CERTIFICATE", "(", "true", ");", "Ċ", "const", "ĠZ", "L", "Network", "SSL", "Certificate", "ĠZ", "L", "Network", "SSL", "Certificate", "::", "DONT", "_", "VERIFY", "_", "CERTIFICATE", "(", "false", ");", "Ċ", "Ċ", "ZL", "Network", "SSL", "Certificate", "::", "ZL", "Network", "SSL", "Certificate", "(", "bool", "Ġdo", "Verify", ")", "Ġ:", "ĠDo", "Verify", "(", "do", "Verify", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "ZL", "Network", "SSL", "Certificate", "::", "ZL", "Network", "SSL", "Certificate", "(", "const", "Ġstd", "::", "string", "Ġ&", "path", ")", "Ġ:", "ĠPath", "(", "path", "),", "ĠDo", "Verify", "(", "true", ")", "Ġ{", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::882", "code": "#include <TaoApiCpp/response/SimbaInsightCatsforecastGetResponse.h>\n\nQList<INCategoryTop> SimbaInsightCatsforecastGetResponse::getInCategoryTops() const {\n  return inCategoryTops;\n}\nvoid SimbaInsightCatsforecastGetResponse::setInCategoryTops (QList<INCategoryTop> inCategoryTops) {\n  this->inCategoryTops = inCategoryTops;\n}\n\nvoid SimbaInsightCatsforecastGetResponse::parseNormalResponse() {\n  parseError();\n  if (responseParser->hasName(\"in_category_tops\")) {\n  QList<Parser *> listParser = responseParser->getListObjectParser(\"in_category_tops\");\n  Parser *parser;\n  foreach (parser, listParser) {\n    INCategoryTop tmp;\n    tmp.setParser(parser);\n    tmp.parseResponse();\n    inCategoryTops.append(tmp);\n  }\n  }\n\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "T", "ao", "Api", "Cpp", "/", "response", "/", "Sim", "ba", "Ins", "ight", "Cats", "fore", "cast", "GetResponse", ".", "h", ">", "Ċ", "Ċ", "QList", "<", "IN", "Category", "Top", ">", "ĠSim", "ba", "Ins", "ight", "Cats", "fore", "cast", "GetResponse", "::", "getIn", "Category", "T", "ops", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġin", "Category", "T", "ops", ";", "Ċ", "}", "Ċ", "void", "ĠSim", "ba", "Ins", "ight", "Cats", "fore", "cast", "GetResponse", "::", "set", "In", "Category", "T", "ops", "Ġ(", "QList", "<", "IN", "Category", "Top", ">", "Ġin", "Category", "T", "ops", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "in", "Category", "T", "ops", "Ġ=", "Ġin", "Category", "T", "ops", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSim", "ba", "Ins", "ight", "Cats", "fore", "cast", "GetResponse", "::", "parse", "Normal", "Response", "()", "Ġ{", "Ċ", "Ġ", "Ġparse", "Error", "();", "Ċ", "Ġ", "Ġif", "Ġ(", "response", "Parser", "->", "has", "Name", "(\"", "in", "_", "category", "_", "to", "ps", "\"))", "Ġ{", "Ċ", "Ġ", "ĠQList", "<", "Parser", "Ġ*>", "Ġlist", "Parser", "Ġ=", "Ġresponse", "Parser", "->", "getList", "Object", "Parser", "(\"", "in", "_", "category", "_", "to", "ps", "\");", "Ċ", "Ġ", "ĠParser", "Ġ*", "parser", ";", "Ċ", "Ġ", "Ġforeach", "Ġ(", "parser", ",", "Ġlist", "Parser", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠIN", "Category", "Top", "Ġtmp", ";", "Ċ", "ĠĠĠ", "Ġtmp", ".", "set", "Parser", "(", "parser", ");", "Ċ", "ĠĠĠ", "Ġtmp", ".", "parse", "Response", "();", "Ċ", "ĠĠĠ", "Ġin", "Category", "T", "ops", ".", "append", "(", "tmp", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::883", "code": "/*\n * %kadu copyright begin%\n * Copyright 2017 Rafał Przemysław Malinowski (rafal.przemyslaw.malinowski@gmail.com)\n * %kadu copyright end%\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of\n * the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"facebook-plugin-object.h\"\n\n#include \"facebook-protocol-factory.h\"\n\n#include \"protocols/protocols-manager.h\"\n\nFacebookPluginObject::FacebookPluginObject(QObject *parent) : QObject{parent}\n{\n}\n\nFacebookPluginObject::~FacebookPluginObject()\n{\n}\n\nvoid FacebookPluginObject::setFacebookProtocolFactory(FacebookProtocolFactory *facebookProtocolFactory)\n{\n    m_facebookProtocolFactory = facebookProtocolFactory;\n}\n\nvoid FacebookPluginObject::setProtocolsManager(ProtocolsManager *protocolsManager)\n{\n    m_protocolsManager = protocolsManager;\n}\n\nvoid FacebookPluginObject::init()\n{\n    m_protocolsManager->registerProtocolFactory(m_facebookProtocolFactory);\n}\n\nvoid FacebookPluginObject::done()\n{\n    m_protocolsManager->unregisterProtocolFactory(m_facebookProtocolFactory);\n}\n\n#include \"facebook-plugin-object.moc\"\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ%", "k", "ad", "u", "Ġcopyright", "Ġbegin", "%", "Ċ", "Ġ*", "ĠCopyright", "Ġ2017", "ĠR", "a", "fa", "ÅĤ", "ĠPr", "z", "em", "ys", "ÅĤ", "aw", "ĠM", "al", "in", "ow", "ski", "Ġ(", "raf", "al", ".", "pr", "z", "em", "ys", "law", ".", "mal", "in", "ow", "ski", "@", "gmail", ".", "com", ")", "Ċ", "Ġ*", "Ġ%", "k", "ad", "u", "Ġcopyright", "Ġend", "%", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ċ", "Ġ*", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ċ", "Ġ*", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "facebook", "-", "plugin", "-", "object", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "facebook", "-", "protocol", "-", "factory", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "protocols", "/", "protocols", "-", "manager", ".", "h", "\"", "Ċ", "Ċ", "Facebook", "Plugin", "Object", "::", "Facebook", "Plugin", "Object", "(", "QObject", "Ġ*", "parent", ")", "Ġ:", "ĠQObject", "{", "parent", "}", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Facebook", "Plugin", "Object", "::~", "Facebook", "Plugin", "Object", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFacebook", "Plugin", "Object", "::", "set", "Facebook", "Protocol", "Factory", "(", "Facebook", "Protocol", "Factory", "Ġ*", "facebook", "Protocol", "Factory", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "facebook", "Protocol", "Factory", "Ġ=", "Ġface", "book", "Protocol", "Factory", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFacebook", "Plugin", "Object", "::", "set", "Protocols", "Manager", "(", "Protocols", "Manager", "Ġ*", "protocols", "Manager", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "protocols", "Manager", "Ġ=", "Ġprotocols", "Manager", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFacebook", "Plugin", "Object", "::", "init", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "protocols", "Manager", "->", "register", "Protocol", "Factory", "(", "m", "_", "facebook", "Protocol", "Factory", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFacebook", "Plugin", "Object", "::", "done", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġm", "_", "protocols", "Manager", "->", "unregister", "Protocol", "Factory", "(", "m", "_", "facebook", "Protocol", "Factory", ");", "Ċ", "}", "Ċ", "Ċ", "#", "include", "Ġ\"", "facebook", "-", "plugin", "-", "object", ".", "m", "oc", "\"", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::884", "code": "#include \"symbolset.h\"\n#include \"error.h\"\n#include <vector>\n\nSymbolSet::SymbolSet() {\n\tlevel = 0;\n}\n\nint SymbolSet::enter(SymbolItem& item) {\n\tint offset = table.end()->getOffset();\n\tint itemsize = item.getSize();\n\t//[FIXME] will we be 4 incedent?\n\titem.setOffset(offset+itemsize);\n\ttable.push_back(item);\n\treturn (table.size()-1);\n}\n\nint SymbolSet::locIdent(string name) {\n\tint i = level;\n\tint j = 0;\n\tdo {\n\t\tj = display[i]->getLast();\n\t\twhile (table[j].getName() != name)\n\t\t\tj = table[j].getLink();\n\t\ti--;\n\t} while (i >= 0 && j == -1);\n\treturn j;\n}\n\nTokenType SymbolSet::getType(string name) {\n\tint index = locIdent(name);\n\tif (index == -1)\n\t\treturn TokenType::notyp;\n\n}\n\nvoid SymbolSet::enterproc(SymbolItem& _item, SymbolPro& _pro) {\n\tlevel++;\n\ttable.push_back(_item);\n\tprotable.push_back(_pro);\n\tdisplay[level] = &_pro;\n}\n\nvoid SymbolSet::exitproc() {\n\tlevel--;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "symbol", "set", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "error", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "Symbol", "Set", "::", "Symbol", "Set", "()", "Ġ{", "Ċ", "ĉ", "level", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠSymbol", "Set", "::", "enter", "(", "Symbol", "Item", "&", "Ġitem", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġoffset", "Ġ=", "Ġtable", ".", "end", "()->", "getOffset", "();", "Ċ", "ĉ", "int", "Ġitem", "size", "Ġ=", "Ġitem", ".", "getSize", "();", "Ċ", "ĉ", "//[", "FIXME", "]", "Ġwill", "Ġwe", "Ġbe", "Ġ4", "Ġin", "ced", "ent", "?", "Ċ", "ĉ", "item", ".", "set", "Offset", "(", "offset", "+", "item", "size", ");", "Ċ", "ĉ", "table", ".", "push", "_", "back", "(", "item", ");", "Ċ", "ĉ", "return", "Ġ(", "table", ".", "size", "()-", "1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "ĠSymbol", "Set", "::", "loc", "Ident", "(", "string", "Ġname", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġi", "Ġ=", "Ġlevel", ";", "Ċ", "ĉ", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "do", "Ġ{", "Ċ", "ĉ", "ĉ", "j", "Ġ=", "Ġdisplay", "[", "i", "]->", "getLast", "();", "Ċ", "ĉ", "ĉ", "while", "Ġ(", "table", "[", "j", "].", "getName", "()", "Ġ!=", "Ġname", ")", "Ċ", "ĉĉ", "ĉ", "j", "Ġ=", "Ġtable", "[", "j", "].", "getLink", "();", "Ċ", "ĉ", "ĉ", "i", "--;", "Ċ", "ĉ", "}", "Ġwhile", "Ġ(", "i", "Ġ>=", "Ġ0", "Ġ&&", "Ġj", "Ġ==", "Ġ-", "1", ");", "Ċ", "ĉ", "return", "Ġj", ";", "Ċ", "}", "Ċ", "Ċ", "TokenType", "ĠSymbol", "Set", "::", "getType", "(", "string", "Ġname", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġindex", "Ġ=", "Ġloc", "Ident", "(", "name", ");", "Ċ", "ĉ", "if", "Ġ(", "index", "Ġ==", "Ġ-", "1", ")", "Ċ", "ĉ", "ĉ", "return", "ĠTokenType", "::", "not", "yp", ";", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSymbol", "Set", "::", "enter", "proc", "(", "Symbol", "Item", "&", "Ġ_", "item", ",", "ĠSymbol", "Pro", "&", "Ġ_", "pro", ")", "Ġ{", "Ċ", "ĉ", "level", "++;", "Ċ", "ĉ", "table", ".", "push", "_", "back", "(_", "item", ");", "Ċ", "ĉ", "pro", "table", ".", "push", "_", "back", "(_", "pro", ");", "Ċ", "ĉ", "display", "[", "level", "]", "Ġ=", "Ġ&_", "pro", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSymbol", "Set", "::", "exit", "proc", "()", "Ġ{", "Ċ", "ĉ", "level", "--;", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::885", "code": "//  生成P-code子程序\n//  pcode.cpp\n//  Compiler-PL0\n//\n//  Created by TimmyXu on 15/1/5.\n//  Copyright (c) 2015年 TimmyXu. All rights reserved.\n//\n\n#include \"pcode.h\"\n\nvoid gen(fct x, int y, int z) {\n    if (cx > cxmax) {\n        cout << \"Program too long!\" << endl;\n        //TODO 关闭文件\n        return;\n    }\n    code[cx].f = x;\n    code[cx].l = y;\n    code[cx].a = z;\n    cx++;\n}\n\nvoid listcode(int cx0) {\n    for (int i = cx0; i < cx; i++) {\n        cout << i << \" \" << mnemonic[code[i].f] << \" \" << code[i].l << \" \" << code[i].a << endl;\n    }\n}", "code_tokens": ["Ġ//", "Ġ", "Ġ", "çĶŁæĪĲ", "P", "-", "code", "åŃĲ", "ç¨ĭ", "åºı", "Ċ", "//", "Ġ", "Ġp", "code", ".", "cpp", "Ċ", "//", "Ġ", "ĠCompiler", "-", "PL", "0", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠTim", "my", "X", "u", "Ġon", "Ġ15", "/", "1", "/", "5", ".", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "å¹´", "ĠTim", "my", "X", "u", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "p", "code", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġgen", "(", "f", "ct", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġz", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "cx", "Ġ>", "Ġcx", "max", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "Program", "Ġtoo", "Ġlong", "!\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "TODO", "Ġ", "åħ³éĹŃ", "æĸĩä»¶", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġcode", "[", "cx", "].", "f", "Ġ=", "Ġx", ";", "Ċ", "ĠĠĠ", "Ġcode", "[", "cx", "].", "l", "Ġ=", "Ġy", ";", "Ċ", "ĠĠĠ", "Ġcode", "[", "cx", "].", "a", "Ġ=", "Ġz", ";", "Ċ", "ĠĠĠ", "Ġcx", "++;", "Ċ", "}", "Ċ", "Ċ", "void", "Ġlist", "code", "(", "int", "Ġcx", "0", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġcx", "0", ";", "Ġi", "Ġ<", "Ġcx", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġmnemonic", "[", "code", "[", "i", "].", "f", "]", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġcode", "[", "i", "].", "l", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġcode", "[", "i", "].", "a", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::886", "code": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main(){\r\n\tint *a;\r\n\tint b;\r\n\tb = 5;\r\n\r\n\ta = &b;\r\n\tprintf(\"%d\\n\",a);\r\n\t(*a)++;\r\n\tprintf(\"%d %d\\n\",a,b);\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(){", "č", "Ċ", "ĉ", "int", "Ġ*", "a", ";", "č", "Ċ", "ĉ", "int", "Ġb", ";", "č", "Ċ", "ĉ", "b", "Ġ=", "Ġ5", ";", "č", "Ċ", "č", "Ċ", "ĉ", "a", "Ġ=", "Ġ&", "b", ";", "č", "Ċ", "ĉ", "printf", "(\"%", "d", "\\", "n", "\",", "a", ");", "č", "Ċ", "ĉ", "(*", "a", ")++;", "č", "Ċ", "ĉ", "printf", "(\"%", "d", "Ġ%", "d", "\\", "n", "\",", "a", ",", "b", ");", "č", "Ċ", "}", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::887", "code": "/*******************************************************************************\n    Este arquivo é parte do programa figNG\n\n    figNG é um software livre; você pode redistribui-lo e/ou\n    modifica-lo dentro dos termos da Licença Pública Geral GNU como\n    publicada pela Fundação do Software Livre (FSF); na versão 2 da\n    Licença, ou (na sua opnião) qualquer versão.\n\n    Este programa é distribuido na esperança que possa ser  util,\n    mas SEM NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer\n    MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a\n    Licença Pública Geral GNU para maiores detalhes.\n\n    Você deve ter recebido uma cópia da Licença Pública Geral GNU\n    junto com este programa, se não, escreva para a Fundação do Software\n    Livre(FSF) Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n  *****************************************************************************/\n\n#include <QtGui/QApplication>\n#include \"mainwindow.h\"\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    MainWindow w;\n    w.show();\n    return a.exec();\n}\n", "code_tokens": ["Ġ/", "************************************************************************", "*******", "Ċ", "ĠĠĠ", "ĠE", "ste", "Ġar", "qu", "ivo", "Ġ", "Ã©", "Ġpar", "te", "Ġdo", "Ġprogram", "a", "Ġfig", "NG", "Ċ", "Ċ", "ĠĠĠ", "Ġfig", "NG", "Ġ", "Ã©", "Ġum", "Ġsoftware", "Ġl", "iv", "re", ";", "Ġv", "oc", "Ãª", "Ġp", "ode", "Ġred", "istri", "bu", "i", "-", "lo", "Ġe", "/", "ou", "Ċ", "ĠĠĠ", "Ġmod", "ific", "a", "-", "lo", "Ġd", "ent", "ro", "Ġdos", "Ġterm", "os", "Ġda", "ĠLic", "en", "Ã§", "a", "ĠP", "Ãº", "b", "lica", "ĠG", "er", "al", "ĠGNU", "Ġcom", "o", "Ċ", "ĠĠĠ", "Ġpublic", "ada", "Ġp", "el", "a", "ĠF", "unda", "Ã§", "Ã£o", "Ġdo", "ĠSoftware", "ĠL", "iv", "re", "Ġ(", "FS", "F", ");", "Ġna", "Ġvers", "Ã£o", "Ġ2", "Ġda", "Ċ", "ĠĠĠ", "ĠLic", "en", "Ã§", "a", ",", "Ġou", "Ġ(", "na", "Ġs", "ua", "Ġop", "ni", "Ã£o", ")", "Ġqual", "quer", "Ġvers", "Ã£o", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠE", "ste", "Ġprogram", "a", "Ġ", "Ã©", "Ġd", "istri", "bu", "ido", "Ġna", "Ġes", "per", "an", "Ã§", "a", "Ġque", "Ġposs", "a", "Ġser", "Ġ", "Ġutil", ",", "Ċ", "ĠĠĠ", "Ġm", "as", "ĠSEM", "ĠN", "EN", "HU", "MA", "ĠG", "AR", "ANTI", "A", ";", "Ġsem", "Ġum", "a", "Ġg", "ar", "ant", "ia", "Ġimplicit", "a", "Ġde", "ĠA", "DE", "QU", "A", "Ãĩ", "Ã", "Ĥ", "O", "Ġa", "Ġqual", "quer", "Ċ", "ĠĠĠ", "ĠMER", "CAD", "O", "Ġou", "ĠA", "PL", "ICA", "Ãĩ", "Ã", "ĥ", "O", "ĠEM", "ĠPART", "IC", "ULAR", ".", "ĠVe", "ja", "Ġa", "Ċ", "ĠĠĠ", "ĠLic", "en", "Ã§", "a", "ĠP", "Ãº", "b", "lica", "ĠG", "er", "al", "ĠGNU", "Ġpara", "Ġma", "io", "res", "Ġdet", "al", "h", "es", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠV", "oc", "Ãª", "Ġde", "ve", "Ġt", "er", "Ġrece", "bid", "o", "Ġum", "a", "Ġc", "Ã³", "pi", "a", "Ġda", "ĠLic", "en", "Ã§", "a", "ĠP", "Ãº", "b", "lica", "ĠG", "er", "al", "ĠGNU", "Ċ", "ĠĠĠ", "Ġj", "un", "to", "Ġcom", "Ġest", "e", "Ġprogram", "a", ",", "Ġse", "Ġn", "Ã£o", ",", "Ġesc", "re", "va", "Ġpara", "Ġa", "ĠF", "unda", "Ã§", "Ã£o", "Ġdo", "ĠSoftware", "Ċ", "ĠĠĠ", "ĠL", "iv", "re", "(", "FS", "F", ")", "ĠInc", ".,", "Ġ51", "ĠF", "rank", "lin", "ĠSt", ",", "ĠF", "if", "th", "ĠF", "loor", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", "Ġ", "ĠUSA", "Ċ", "Ġ", "Ġ*****************************************************************************/", "Ċ", "Ċ", "#", "include", "Ġ<", "Qt", "Gui", "/", "Q", "Application", ">", "Ċ", "#", "include", "Ġ\"", "main", "window", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "ĠMainWindow", "Ġw", ";", "Ċ", "ĠĠĠ", "Ġw", ".", "show", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::888", "code": "#pragma once\n#include <valuelib/debug/demangle.hpp>\n#include <typeinfo>\n#include <typeindex>\n\nnamespace value { namespace debug {\n    \n    template<>\n    struct printer<demangled_string>\n    {\n        decltype(auto) operator()(std::ostream& os, demangled_string const& s) const\n        {\n            return os << std::quoted(std::string(s));\n        }\n    };\n  \n    template<>\n    struct printer<std::type_info>\n    {\n        decltype(auto) operator()(std::ostream& os, std::type_info const& ti) const\n        {\n            return os << std::quoted(std::string(demangle(ti)));\n        }\n    };\n    \n    template<>\n    struct printer<std::type_index>\n    {\n        decltype(auto) operator()(std::ostream& os, std::type_index const& ti) const\n        {\n            return os << std::quoted(std::string(demangle(ti)));\n        }\n    };\n\n}}", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "#", "include", "Ġ<", "value", "lib", "/", "debug", "/", "dem", "angle", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "type", "info", ">", "Ċ", "#", "include", "Ġ<", "type", "index", ">", "Ċ", "Ċ", "namespace", "Ġvalue", "Ġ{", "Ġnamespace", "Ġdebug", "Ġ{", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġtemplate", "<>", "Ċ", "ĠĠĠ", "Ġstruct", "Ġprinter", "<", "dem", "angled", "_", "string", ">", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdecl", "type", "(", "auto", ")", "Ġoperator", "()(", "std", "::", "ostream", "&", "Ġos", ",", "Ġde", "mangled", "_", "string", "Ġconst", "&", "Ġs", ")", "Ġconst", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġos", "Ġ<<", "Ġstd", "::", "quoted", "(", "std", "::", "string", "(", "s", "));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĊ", "ĠĠĠ", "Ġtemplate", "<>", "Ċ", "ĠĠĠ", "Ġstruct", "Ġprinter", "<", "std", "::", "type", "_", "info", ">", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdecl", "type", "(", "auto", ")", "Ġoperator", "()(", "std", "::", "ostream", "&", "Ġos", ",", "Ġstd", "::", "type", "_", "info", "Ġconst", "&", "Ġti", ")", "Ġconst", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġos", "Ġ<<", "Ġstd", "::", "quoted", "(", "std", "::", "string", "(", "dem", "angle", "(", "ti", ")));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġtemplate", "<>", "Ċ", "ĠĠĠ", "Ġstruct", "Ġprinter", "<", "std", "::", "type", "_", "index", ">", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdecl", "type", "(", "auto", ")", "Ġoperator", "()(", "std", "::", "ostream", "&", "Ġos", ",", "Ġstd", "::", "type", "_", "index", "Ġconst", "&", "Ġti", ")", "Ġconst", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġos", "Ġ<<", "Ġstd", "::", "quoted", "(", "std", "::", "string", "(", "dem", "angle", "(", "ti", ")));", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "}}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::889", "code": "#include \"MaterialNode.hpp\"\n#include \"NodeVisitor.hpp\"\n\nbool MaterialNode::accept(NodeVisitor& visitor)\n{\n  if(visitor.visit(*this)) {\n    for(std::list<SceneNode*>::iterator i = lstChildren.begin();\n\ti != lstChildren.end();\n\ti++)\n      {\n\tif(!(*i)->accept(visitor)) {\n\t  std::cerr << \"Error in traversel of: \" << *this << std::endl;\n\t  break;\n\t}\n      }\n  }\n  return true;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Material", "Node", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "Node", "Visitor", ".", "hpp", "\"", "Ċ", "Ċ", "bool", "ĠMaterial", "Node", "::", "accept", "(", "Node", "Visitor", "&", "Ġvisitor", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "(", "visitor", ".", "visit", "(*", "this", "))", "Ġ{", "Ċ", "ĠĠĠ", "Ġfor", "(", "std", "::", "list", "<", "Scene", "Node", "*>::", "iterator", "Ġi", "Ġ=", "Ġlst", "Children", ".", "begin", "();", "Ċ", "ĉ", "i", "Ġ!=", "Ġlst", "Children", ".", "end", "();", "Ċ", "ĉ", "i", "++)", "Ċ", "ĠĠĠĠĠ", "Ġ{", "Ċ", "ĉ", "if", "(!", "(*", "i", ")->", "accept", "(", "visitor", "))", "Ġ{", "Ċ", "ĉĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "Error", "Ġin", "Ġtraverse", "l", "Ġof", ":", "Ġ\"", "Ġ<<", "Ġ*", "this", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉĠ", "Ġbreak", ";", "Ċ", "ĉ", "}", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::890", "code": "/**\n * (c) 2014-2016 Alexandro Sanchez Bach. All rights reserved.\n * Released under GPL v2 license. Read LICENSE for more details.\n */\n\n#include \"opengl_fence.h\"\n\nnamespace gfx {\nnamespace opengl {\n\nvoid OpenGLFence::clear() {\n    signaled = false;\n}\n\nvoid OpenGLFence::signal() {\n    signaled = true;\n    cv.notify_all();\n}\n\nvoid OpenGLFence::wait() {\n    std::unique_lock<std::mutex> lock(mutex);\n    cv.wait(lock, [&]{ return signaled; });\n}\n\nvoid OpenGLFence::wait(Clock::duration timeout) {\n    std::unique_lock<std::mutex> lock(mutex);\n    cv.wait_for(lock, timeout, [&]{ return signaled; });\n}\n\n}  // namespace opengl\n}  // namespace gfx\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ(", "c", ")", "Ġ2014", "-", "2016", "ĠA", "lex", "and", "ro", "ĠS", "anche", "z", "ĠB", "ach", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "ĠRelease", "d", "Ġunder", "ĠG", "PL", "Ġv", "2", "Ġlicense", ".", "ĠRead", "ĠLICENSE", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "open", "gl", "_", "fence", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġgfx", "Ġ{", "Ċ", "namespace", "Ġopen", "gl", "Ġ{", "Ċ", "Ċ", "void", "ĠOpenGL", "Fence", "::", "clear", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġsignal", "ed", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOpenGL", "Fence", "::", "signal", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġsignal", "ed", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġcv", ".", "notify", "_", "all", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOpenGL", "Fence", "::", "wait", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mutex", ">", "Ġlock", "(", "mutex", ");", "Ċ", "ĠĠĠ", "Ġcv", ".", "wait", "(", "lock", ",", "Ġ[&", "]{", "Ġreturn", "Ġsignal", "ed", ";", "Ġ});", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOpenGL", "Fence", "::", "wait", "(", "Clock", "::", "duration", "Ġtimeout", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mutex", ">", "Ġlock", "(", "mutex", ");", "Ċ", "ĠĠĠ", "Ġcv", ".", "wait", "_", "for", "(", "lock", ",", "Ġtimeout", ",", "Ġ[&", "]{", "Ġreturn", "Ġsignal", "ed", ";", "Ġ});", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġopen", "gl", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġgfx", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::891", "code": "// { dg-do compile { target c++11 } }\n\n// 2008-09-16  Chris Fairles  <chris.fairles@gmail.com>\n\n// Copyright (C) 2008-2016 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n\n#include <algorithm>\n#include <functional>\n#include <testsuite_character.h>\n\nnamespace std\n{\n  using __gnu_test::pod_int;\n\n  typedef pod_int \t\tvalue_type;\n  typedef value_type* \t\titerator_type;\n  typedef std::less<value_type> compare_type;\n\n  template value_type max(initializer_list<value_type>);\n  template value_type max(initializer_list<value_type>, compare_type);\n} \n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "Ċ", "//", "Ġ2008", "-", "09", "-", "16", "Ġ", "ĠChr", "is", "ĠF", "air", "les", "Ġ", "Ġ<", "chris", ".", "fa", "ir", "les", "@", "gmail", ".", "com", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2016", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "#", "include", "Ġ<", "test", "suite", "_", "character", ".", "h", ">", "Ċ", "Ċ", "namespace", "Ġstd", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġ__", "gnu", "_", "test", "::", "pod", "_", "int", ";", "Ċ", "Ċ", "Ġ", "Ġtypedef", "Ġpod", "_", "int", "Ġĉ", "ĉ", "value", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġvalue", "_", "type", "*", "Ġĉ", "ĉ", "iterator", "_", "type", ";", "Ċ", "Ġ", "Ġtypedef", "Ġstd", "::", "less", "<", "value", "_", "type", ">", "Ġcompare", "_", "type", ";", "Ċ", "Ċ", "Ġ", "Ġtemplate", "Ġvalue", "_", "type", "Ġmax", "(", "initializer", "_", "list", "<", "value", "_", "type", ">);", "Ċ", "Ġ", "Ġtemplate", "Ġvalue", "_", "type", "Ġmax", "(", "initializer", "_", "list", "<", "value", "_", "type", ">,", "Ġcompare", "_", "type", ");", "Ċ", "}", "ĠĊ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::892", "code": "/*****************************************************************\n * $Id: sail_symbol.cpp 1983 2013-09-02 18:10:02Z rutger $\n * Created: Jul 26, 2012 14:24:25 AM - rutger\n *\n * Copyright (C) 2012 Red-Bag. All rights reserved.\n * This file is part of the Biluna SAIL project.\n *\n * See http://www.red-bag.com for further details.\n *****************************************************************/\n\n#include \"sail_symbol.h\"\n\nSAIL_Symbol::SAIL_Symbol (const RB_String& id, RB_ObjectBase* p,\n                    const RB_String& n, RB_ObjectFactory* f)\n                    : RB_ObjectAtomic (id, p, n, f) {\n    createMembers();\n}\n\n\nSAIL_Symbol::SAIL_Symbol(SAIL_Symbol* obj) : RB_ObjectAtomic(obj) {\n    createMembers();\n    *this = *obj;\n}\n\n\nSAIL_Symbol::~SAIL_Symbol() {\n    // clean up children done in RB_ObjectBase and RB_ObjectContainer\n}\n\n/**\n  Create members:\n  \\li description, description of the symbol\n  \\li svg, the SVG data of the symbol image\n */\nvoid SAIL_Symbol::createMembers() {\n    addMember(\"mname\", \"-\", \"<New>\", RB2::MemberChar125);\n    addMember(\"svg\", \"-\", \"\", RB2::MemberString);\n    addMember(\"icon\", \"-\", \"\", RB2::MemberByteArray);\n}\n", "code_tokens": ["Ġ/", "****************************************************************", "*", "Ċ", "Ġ*", "Ġ$", "Id", ":", "Ġs", "ail", "_", "symbol", ".", "cpp", "Ġ19", "83", "Ġ2013", "-", "09", "-", "02", "Ġ18", ":", "10", ":", "02", "Z", "Ġr", "ut", "ger", "Ġ$", "Ċ", "Ġ*", "ĠCreated", ":", "ĠJul", "Ġ26", ",", "Ġ2012", "Ġ14", ":", "24", ":", "25", "ĠAM", "Ġ-", "Ġr", "ut", "ger", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "ĠRed", "-", "Bag", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠB", "il", "una", "ĠS", "AIL", "Ġproject", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠSee", "Ġhttp", "://", "www", ".", "red", "-", "bag", ".", "com", "Ġfor", "Ġfurther", "Ġdetails", ".", "Ċ", "Ġ*****************************************************************", "/", "Ċ", "Ċ", "#", "include", "Ġ\"", "s", "ail", "_", "symbol", ".", "h", "\"", "Ċ", "Ċ", "SA", "IL", "_", "Symbol", "::", "SA", "IL", "_", "Symbol", "Ġ(", "const", "ĠRB", "_", "String", "&", "Ġid", ",", "ĠRB", "_", "ObjectBase", "*", "Ġp", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "ĠRB", "_", "String", "&", "Ġn", ",", "ĠRB", "_", "ObjectFactory", "*", "Ġf", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ:", "ĠRB", "_", "Object", "Atomic", "Ġ(", "id", ",", "Ġp", ",", "Ġn", ",", "Ġf", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġcreate", "Members", "();", "Ċ", "}", "Ċ", "Ċ", "Ċ", "SA", "IL", "_", "Symbol", "::", "SA", "IL", "_", "Symbol", "(", "SA", "IL", "_", "Symbol", "*", "Ġobj", ")", "Ġ:", "ĠRB", "_", "Object", "Atomic", "(", "obj", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġcreate", "Members", "();", "Ċ", "ĠĠĠ", "Ġ*", "this", "Ġ=", "Ġ*", "obj", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "SA", "IL", "_", "Symbol", "::~", "SA", "IL", "_", "Symbol", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//", "Ġclean", "Ġup", "Ġchildren", "Ġdone", "Ġin", "ĠRB", "_", "ObjectBase", "Ġand", "ĠRB", "_", "Object", "Container", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "ĠCreate", "Ġmembers", ":", "Ċ", "Ġ", "Ġ\\", "li", "Ġdescription", ",", "Ġdescription", "Ġof", "Ġthe", "Ġsymbol", "Ċ", "Ġ", "Ġ\\", "li", "Ġsvg", ",", "Ġthe", "ĠSVG", "Ġdata", "Ġof", "Ġthe", "Ġsymbol", "Ġimage", "Ċ", "Ġ*/", "Ċ", "void", "ĠS", "AIL", "_", "Symbol", "::", "create", "Members", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġadd", "Member", "(\"", "m", "name", "\",", "Ġ\"-\",", "Ġ\"<", "New", ">\",", "ĠRB", "2", "::", "Member", "Char", "125", ");", "Ċ", "ĠĠĠ", "Ġadd", "Member", "(\"", "svg", "\",", "Ġ\"-\",", "Ġ\"\",", "ĠRB", "2", "::", "Member", "String", ");", "Ċ", "ĠĠĠ", "Ġadd", "Member", "(\"", "icon", "\",", "Ġ\"-\",", "Ġ\"\",", "ĠRB", "2", "::", "Member", "ByteArray", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::893", "code": "\n/*copyright 2010 Simon Graeser*/\n\n/*\nThis file is part of Pina.\n\nPina is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nPina is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with Pina.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include \"Texture.h\"\n#include \"../Templates/Ordering.h\"\n\n#include \"../Core/Extra.h\"\n\n\n#define THIS Texture\nnamespace PINA_NAMESPACE{\n\n\n\n\nTHIS::THIS(XmlElement* h):Element(h){\n\n  /* attributes */\n  createAttribute(attrib_texture,\"texture\");\n  createAttribute(attrib_texcoord,\"texcoord\");\n\n  /* children */\n  buildChildren(Types());\n\n  /* data */\n\n}\n\nstd::string THIS::getName() const {\n  return Name;\n}\n\nvoid THIS::order(){\n  children.sort(Ordering<Types>());\n}\n\nconst std::string THIS::Name = \"rgb\";\n\nTHIS::~THIS(){\n}\n\n\n\n\n}/*PINA_NAMESPACE*/\n#undef THIS\n\n", "code_tokens": ["Ċ", "/*", "copyright", "Ġ2010", "ĠSim", "on", "ĠGra", "es", "er", "*/", "Ċ", "Ċ", "/*", "Ċ", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠP", "ina", ".", "Ċ", "Ċ", "Pin", "a", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Pin", "a", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "but", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "MER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "GNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "al", "ong", "Ġwith", "ĠP", "ina", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Texture", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "Templates", "/", "Ordering", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"../", "Core", "/", "Extra", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "#", "define", "ĠTHIS", "ĠTexture", "Ċ", "namespace", "ĠPIN", "A", "_", "NAMESPACE", "{", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "THIS", "::", "THIS", "(", "XmlElement", "*", "Ġh", "):", "Element", "(", "h", "){", "Ċ", "Ċ", "Ġ", "Ġ/*", "Ġattributes", "Ġ*/", "Ċ", "Ġ", "Ġcreate", "Attribute", "(", "attrib", "_", "texture", ",\"", "texture", "\");", "Ċ", "Ġ", "Ġcreate", "Attribute", "(", "attrib", "_", "tex", "coord", ",\"", "tex", "coord", "\");", "Ċ", "Ċ", "Ġ", "Ġ/*", "Ġchildren", "Ġ*/", "Ċ", "Ġ", "Ġbuild", "Children", "(", "Types", "());", "Ċ", "Ċ", "Ġ", "Ġ/*", "Ġdata", "Ġ*/", "Ċ", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "ĠTHIS", "::", "getName", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "ĠName", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTHIS", "::", "order", "(){", "Ċ", "Ġ", "Ġchildren", ".", "sort", "(", "Ordering", "<", "Types", ">());", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "ĠTHIS", "::", "Name", "Ġ=", "Ġ\"", "rgb", "\";", "Ċ", "Ċ", "THIS", "::~", "THIS", "(){", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "}", "/*", "PIN", "A", "_", "NAMESPACE", "*/", "Ċ", "#", "undef", "ĠTHIS", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::894", "code": "//Factorial Trailing Zeroes\nclass Solution {\npublic:\n    int trailingZeroes(int n) {\n        if(n == 0)\n            return 0;\n        int n2 = log2(n);\n        int n5 = log(n)/log(5);\n        int x2 = 0;\n        int x5 = 0;\n        for(int i = 1;i <= n2;i++)\n            x2 += n/pow(2, i);\n        for(int i = 1;i <= n5;i++)\n            x5 += n/pow(5, i);\n        return min(x2, x5);\n    }\n};\n", "code_tokens": ["Ġ//", "Factor", "ial", "ĠTra", "iling", "ĠZero", "es", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġint", "Ġtrailing", "Zero", "es", "(", "int", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "n", "Ġ==", "Ġ0", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġn", "2", "Ġ=", "Ġlog", "2", "(", "n", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġn", "5", "Ġ=", "Ġlog", "(", "n", ")/", "log", "(", "5", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġx", "2", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġx", "5", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "i", "Ġ<=", "Ġn", "2", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġx", "2", "Ġ+=", "Ġn", "/", "pow", "(", "2", ",", "Ġi", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "i", "Ġ<=", "Ġn", "5", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġx", "5", "Ġ+=", "Ġn", "/", "pow", "(", "5", ",", "Ġi", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġmin", "(", "x", "2", ",", "Ġx", "5", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::895", "code": "﻿#include <stdio.h>\n\ndouble f(int n)\n{\n    int i = 0;\n    int k = 1;\n    double r = 0.000;\n    double fi = 0.000;\n\n    for (i = 1; i < n+ 1; ++i)\n    {\n        fi = i;\n        r += k*1.000/fi;\n        k = -k;\n    }\n\n    return r;\n}\n\nint main()\n{\n    int n;\n    int m;\n\n    scanf(\"%d\",&n);\n\n    while(n-- >0 )\n    {\n        scanf(\"%d\",&m);\n        printf(\"%.2lf\\n\",f(m));\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ", "ï", "»", "¿", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "Ċ", "double", "Ġf", "(", "int", "Ġn", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġk", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġdouble", "Ġr", "Ġ=", "Ġ0", ".", "000", ";", "Ċ", "ĠĠĠ", "Ġdouble", "Ġfi", "Ġ=", "Ġ0", ".", "000", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġn", "+", "Ġ1", ";", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfi", "Ġ=", "Ġi", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġr", "Ġ+=", "Ġk", "*", "1", ".", "000", "/", "fi", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġk", "Ġ=", "Ġ-", "k", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġr", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ";", "Ċ", "ĠĠĠ", "Ġint", "Ġm", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "n", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġwhile", "(", "n", "--", "Ġ>", "0", "Ġ)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "m", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%.", "2", "lf", "\\", "n", "\",", "f", "(", "m", "));", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::896", "code": "// Metashell - Interactive C++ template metaprogramming shell\n// Copyright (C) 2016, Abel Sinkovics (abel@sinkovics.hu)\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#include <metashell/data/process_output.hpp>\n\n#include <boost/algorithm/string/replace.hpp>\n\nnamespace\n{\n  std::string dos2unix(std::string s_)\n  {\n    boost::algorithm::replace_all(s_, \"\\r\\n\", \"\\n\");\n    return s_;\n  }\n}\n\nnamespace metashell\n{\n  namespace data\n  {\n    process_output dos2unix(process_output o_)\n    {\n      return {o_.status, ::dos2unix(move(o_.standard_output)),\n              ::dos2unix(move(o_.standard_error))};\n    }\n\n    bool exit_success(const process_output& o_)\n    {\n      return exit_success(o_.status);\n    }\n  }\n}\n", "code_tokens": ["Ġ//", "ĠMet", "ash", "ell", "Ġ-", "ĠInter", "active", "ĠC", "++", "Ġtemplate", "Ġmet", "ap", "rogram", "ming", "Ġshell", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2016", ",", "ĠAb", "el", "ĠSink", "ov", "ics", "Ġ(", "abel", "@", "sink", "ov", "ics", ".", "hu", ")", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "met", "ash", "ell", "/", "data", "/", "process", "_", "output", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "algorithm", "/", "string", "/", "replace", ".", "hpp", ">", "Ċ", "Ċ", "namespace", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġdos", "2", "unix", "(", "std", "::", "string", "Ġs", "_)", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġboost", "::", "algorithm", "::", "replace", "_", "all", "(", "s", "_,", "Ġ\"\\", "r", "\\", "n", "\",", "Ġ\"\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġs", "_;", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "namespace", "Ġmet", "ash", "ell", "Ċ", "{", "Ċ", "Ġ", "Ġnamespace", "Ġdata", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġprocess", "_", "output", "Ġdos", "2", "unix", "(", "process", "_", "output", "Ġo", "_)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġ{", "o", "_.", "status", ",", "Ġ::", "dos", "2", "unix", "(", "move", "(", "o", "_.", "standard", "_", "output", ")),", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ::", "dos", "2", "unix", "(", "move", "(", "o", "_.", "standard", "_", "error", "))};", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġbool", "Ġexit", "_", "success", "(", "const", "Ġprocess", "_", "output", "&", "Ġo", "_)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġreturn", "Ġexit", "_", "success", "(", "o", "_.", "status", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::897", "code": "#include \"Barycentric.h\"\r\n#include <iostream>     // std::cout\r\n#include <sstream>      // std::stringstream\r\nusing namespace std;\r\n\r\nBarycentric::Barycentric(double u, double v, double w)\r\n{\r\n\tthis->u = u;\r\n\tthis->v = v;\r\n\tthis->w = w;\r\n}\r\n\r\n\r\nstring Barycentric::ToString()\r\n{\r\n    stringstream sstream;\r\n\tsstream << \"(\" << u << \", \" << v << \", \" << w << \")\";\r\n\treturn sstream.str();\r\n}\r\n\r\nbool Barycentric::IsValid()\r\n{\r\n\tif (u < 0.0 || v < 0.0 || w < 0.0) { return false; }\r\n\tif (abs( 1.0 - u - v - w) > 0.000001) { return false; }\r\n\treturn true;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "B", "ary", "cent", "ric", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "ĠĠĠĠ", "Ġ//", "Ġstd", "::", "cout", "č", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "ĠĠĠĠĠ", "Ġ//", "Ġstd", "::", "stringstream", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "B", "ary", "cent", "ric", "::", "B", "ary", "cent", "ric", "(", "double", "Ġu", ",", "Ġdouble", "Ġv", ",", "Ġdouble", "Ġw", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "this", "->", "u", "Ġ=", "Ġu", ";", "č", "Ċ", "ĉ", "this", "->", "v", "Ġ=", "Ġv", ";", "č", "Ċ", "ĉ", "this", "->", "w", "Ġ=", "Ġw", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "string", "ĠB", "ary", "cent", "ric", "::", "ToString", "()", "č", "Ċ", "{", "č", "Ċ", "ĠĠĠ", "Ġstring", "stream", "Ġs", "stream", ";", "č", "Ċ", "ĉ", "s", "stream", "Ġ<<", "Ġ\"(\"", "Ġ<<", "Ġu", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġv", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġw", "Ġ<<", "Ġ\")\";", "č", "Ċ", "ĉ", "return", "Ġs", "stream", ".", "str", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "bool", "ĠB", "ary", "cent", "ric", "::", "IsValid", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "if", "Ġ(", "u", "Ġ<", "Ġ0", ".", "0", "Ġ||", "Ġv", "Ġ<", "Ġ0", ".", "0", "Ġ||", "Ġw", "Ġ<", "Ġ0", ".", "0", ")", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "č", "Ċ", "ĉ", "if", "Ġ(", "abs", "(", "Ġ1", ".", "0", "Ġ-", "Ġu", "Ġ-", "Ġv", "Ġ-", "Ġw", ")", "Ġ>", "Ġ0", ".", "000001", ")", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "č", "Ċ", "ĉ", "return", "Ġtrue", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::898", "code": "#include <iostream>\n#include <linux/joystick.h>\n#include <GameProgram.hpp>\n\nint main( int p_Argc, char **p_ppArgv )\n{\n\tHit::GameProgram TheGame;\n\n\tif( TheGame.Initialise( ) != Hit::GameProgram::OK )\n\t{\n\t\tstd::cout << \"Failed to start the game\" << std::endl;\n\n\t\treturn 1;\n\t}\n\n\treturn TheGame.Execute( );\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "linux", "/", "joystick", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Game", "Program", ".", "hpp", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġp", "_", "Arg", "c", ",", "Ġchar", "Ġ**", "p", "_", "pp", "Argv", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "Hit", "::", "Game", "Program", "ĠThe", "Game", ";", "Ċ", "Ċ", "ĉ", "if", "(", "ĠThe", "Game", ".", "Initial", "ise", "(", "Ġ)", "Ġ!=", "ĠHit", "::", "Game", "Program", "::", "OK", "Ġ)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "cout", "Ġ<<", "Ġ\"", "Failed", "Ġto", "Ġstart", "Ġthe", "Ġgame", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "ĠThe", "Game", ".", "Execute", "(", "Ġ);", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::899", "code": "#include<iostream>\nusing namespace std;\nint main(){\n    int t, a, b;\n    cin >> t;\n    while(t--){\n        cin >> a >> b;\n        cout << ((a%b == 0)? \"YES\\n\" : \"NO\\n\");\n    }\n}\n", "code_tokens": ["Ġ#", "include", "<", "i", "ostream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĠĠĠ", "Ġint", "Ġt", ",", "Ġa", ",", "Ġb", ";", "Ċ", "ĠĠĠ", "Ġcin", "Ġ>>", "Ġt", ";", "Ċ", "ĠĠĠ", "Ġwhile", "(", "t", "--){", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcin", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcout", "Ġ<<", "Ġ((", "a", "%", "b", "Ġ==", "Ġ0", ")?", "Ġ\"", "YES", "\\", "n", "\"", "Ġ:", "Ġ\"", "NO", "\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::900", "code": "/* This file is part of Dilay\n * Copyright © 2015 Alexander Bau\n * Use and redistribute under the terms of the GNU General Public License\n */\n#ifndef DILAY_PARTIAL_ACTION_TRIANGULATE_QUAD\n#define DILAY_PARTIAL_ACTION_TRIANGULATE_QUAD\n\nclass WingedMesh;\nclass WingedFace;\nclass AffectedFaces;\n\nnamespace PartialAction {\n\n  /* `triangulateQuad (m,f,n)` triangulates the quad `f` by inserting an edge from \n   * `f.edge ()->secondVertex (f)`.\n   * `f` and the new face are added to `n`.\n   */\n  WingedEdge& triangulateQuad (WingedMesh&, WingedFace&, AffectedFaces&);\n}\n#endif\n", "code_tokens": ["Ġ/*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠD", "il", "ay", "Ċ", "Ġ*", "ĠCopyright", "ĠÂ", "©", "Ġ2015", "ĠA", "lex", "ander", "ĠB", "au", "Ċ", "Ġ*", "ĠUse", "Ġand", "Ġred", "istribute", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*/", "Ċ", "#", "ifndef", "ĠDI", "LAY", "_", "PARTIAL", "_", "ACTION", "_", "TRI", "AN", "GU", "LATE", "_", "QUAD", "Ċ", "#", "define", "ĠDI", "LAY", "_", "PARTIAL", "_", "ACTION", "_", "TRI", "AN", "GU", "LATE", "_", "QUAD", "Ċ", "Ċ", "class", "ĠW", "ing", "ed", "Mesh", ";", "Ċ", "class", "ĠW", "ing", "ed", "Face", ";", "Ċ", "class", "ĠA", "ffected", "Faces", ";", "Ċ", "Ċ", "namespace", "ĠPartial", "Action", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġ/*", "Ġ`", "tri", "ang", "ulate", "Quad", "Ġ(", "m", ",", "f", ",", "n", ")`", "Ġtri", "ang", "ulates", "Ġthe", "Ġquad", "Ġ`", "f", "`", "Ġby", "Ġinserting", "Ġan", "Ġedge", "Ġfrom", "ĠĊ", "ĠĠ", "Ġ*", "Ġ`", "f", ".", "edge", "Ġ()->", "second", "Vertex", "Ġ(", "f", ")`.", "Ċ", "ĠĠ", "Ġ*", "Ġ`", "f", "`", "Ġand", "Ġthe", "Ġnew", "Ġface", "Ġare", "Ġadded", "Ġto", "Ġ`", "n", "`.", "Ċ", "ĠĠ", "Ġ*/", "Ċ", "Ġ", "ĠW", "ing", "ed", "Edge", "&", "Ġtri", "ang", "ulate", "Quad", "Ġ(", "W", "ing", "ed", "Mesh", "&,", "ĠW", "ing", "ed", "Face", "&,", "ĠA", "ffected", "Faces", "&", ");", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::901", "code": "#include <Rcpp.h>\n\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\nint estimateDiam(IntegerVector initial, IntegerMatrix moves){\n//This function should return an upper bound on the diameter!\n\n  int diam=1000; \n  return diam;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "R", "cpp", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠRcpp", ";", "Ċ", "Ċ", "//", "Ġ[[", "R", "cpp", "::", "export", "]]", "Ċ", "int", "Ġestimate", "Di", "am", "(", "Integer", "Vector", "Ġinitial", ",", "ĠInteger", "Matrix", "Ġmoves", "){", "Ċ", "//", "This", "Ġfunction", "Ġshould", "Ġreturn", "Ġan", "Ġupper", "Ġbound", "Ġon", "Ġthe", "Ġdi", "ameter", "!", "Ċ", "Ċ", "Ġ", "Ġint", "Ġdi", "am", "=", "1000", ";", "ĠĊ", "Ġ", "Ġreturn", "Ġdi", "am", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::902", "code": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint count(FILE *f){\r\n\tint prew, cur, inseq=0, c=0;\r\n\tfscanf(f, \"%d\", &prew);\r\n\twhile(fscanf(f, \"%d\", &cur)==1){\r\n\t\tif(cur>prew){\r\n\t\t\tif(!inseq){\r\n\t\t\t\tc++;\r\n\t\t\t\tinseq=1;\r\n\t\t\t\t}\r\n\t\t}else{\r\n\t\t\tinseq=0;\t\r\n\t\t\t}\r\n\t\tprew=cur;\r\n\t}\r\n\treturn c;\t\r\n}\r\n\r\n\r\nint main(void){\r\n\tchar name[80];\r\n\tprintf(\"enter filename:\\n\");\r\n\tscanf(\"%s\",name);\r\n\tFILE *f = fopen(name, \"r\");\r\n\tprintf(\"%d\\n\", count(f));\r\n\tfclose(f);\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "č", "Ċ", "č", "Ċ", "int", "Ġcount", "(", "FILE", "Ġ*", "f", "){", "č", "Ċ", "ĉ", "int", "Ġpre", "w", ",", "Ġcur", ",", "Ġin", "seq", "=", "0", ",", "Ġc", "=", "0", ";", "č", "Ċ", "ĉ", "fscanf", "(", "f", ",", "Ġ\"%", "d", "\",", "Ġ&", "pre", "w", ");", "č", "Ċ", "ĉ", "while", "(", "fscanf", "(", "f", ",", "Ġ\"%", "d", "\",", "Ġ&", "cur", ")==", "1", "){", "č", "Ċ", "ĉ", "ĉ", "if", "(", "cur", ">", "pre", "w", "){", "č", "Ċ", "ĉĉ", "ĉ", "if", "(!", "in", "seq", "){", "č", "Ċ", "ĉĉĉ", "ĉ", "c", "++;", "č", "Ċ", "ĉĉĉ", "ĉ", "in", "seq", "=", "1", ";", "č", "Ċ", "ĉĉĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "}", "else", "{", "č", "Ċ", "ĉĉ", "ĉ", "in", "seq", "=", "0", ";", "ĉ", "č", "Ċ", "ĉĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "pre", "w", "=", "cur", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "return", "Ġc", ";", "ĉ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "void", "){", "č", "Ċ", "ĉ", "char", "Ġname", "[", "80", "];", "č", "Ċ", "ĉ", "printf", "(\"", "enter", "Ġfilename", ":\\", "n", "\");", "č", "Ċ", "ĉ", "scanf", "(\"%", "s", "\",", "name", ");", "č", "Ċ", "ĉ", "FILE", "Ġ*", "f", "Ġ=", "Ġfopen", "(", "name", ",", "Ġ\"", "r", "\");", "č", "Ċ", "ĉ", "printf", "(\"%", "d", "\\", "n", "\",", "Ġcount", "(", "f", "));", "č", "Ċ", "ĉ", "fclose", "(", "f", ");", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::903", "code": "/*\n * C++ Primer\n * Chap. 6 Ex. 6.25\n * Hao Zhang\n * 2016.09.02\n * main.cpp\n */\n\n#include <iostream>\nusing std::cout;\nusing std::cerr;\nusing std::endl;\n\n#include <string>\nusing std::string;\n\nint main(int argc, char *argv[])\n{\n    if (argc != 3) {\n        cerr << \"Wrong # of arguments\" << endl;\n        return -1;\n    }\n\n    string s1 = argv[1];\n    string s2 = argv[2];\n    string cat = s1 + \" \" + s2;\n    cout << cat << endl;\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠC", "++", "ĠPr", "imer", "Ċ", "Ġ*", "ĠCh", "ap", ".", "Ġ6", "ĠEx", ".", "Ġ6", ".", "25", "Ċ", "Ġ*", "ĠH", "ao", "ĠZ", "hang", "Ċ", "Ġ*", "Ġ2016", ".", "09", ".", "02", "Ċ", "Ġ*", "Ġmain", ".", "cpp", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "using", "Ġstd", "::", "cout", ";", "Ċ", "using", "Ġstd", "::", "cerr", ";", "Ċ", "using", "Ġstd", "::", "endl", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "argc", "Ġ!=", "Ġ3", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcerr", "Ġ<<", "Ġ\"", "Wrong", "Ġ#", "Ġof", "Ġarguments", "\"", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġstring", "Ġs", "1", "Ġ=", "Ġargv", "[", "1", "];", "Ċ", "ĠĠĠ", "Ġstring", "Ġs", "2", "Ġ=", "Ġargv", "[", "2", "];", "Ċ", "ĠĠĠ", "Ġstring", "Ġcat", "Ġ=", "Ġs", "1", "Ġ+", "Ġ\"", "Ġ\"", "Ġ+", "Ġs", "2", ";", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġcat", "Ġ<<", "Ġendl", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::904", "code": "#include <iostream>\n\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Weffc++\"\n#pragma GCC diagnostic ignored \"-Wunused-local-typedefs\"\n#include <boost/function.hpp>\n#pragma GCC diagnostic pop\n\nstruct Speaker\n{\n  Speaker(const std::string hello_message, const std::string bye_message)\n    : m_hello_message(hello_message),\n      m_bye_message(bye_message)\n  {\n\n  }\n\n  void SayHello() const { std::cout << m_hello_message << '\\n'; }\n  void SayBye() const { std::cout << m_bye_message << '\\n'; }\n\n  const std::string m_hello_message;\n  const std::string m_bye_message;\n};\n\nint main()\n{\n  const Speaker s1(\"Hello!\",\"Bye!\");\n  const Speaker s2(\"HELLO!\",\"BYE!\");\n\n  const boost::function<void (const Speaker*)> say_hello_function = &Speaker::SayHello;\n  const boost::function<void (const Speaker*)> say_bye_function = &Speaker::SayBye;\n\n  say_hello_function(&s1);\n  say_bye_function(&s1);\n\n  say_hello_function(&s2);\n  say_bye_function(&s2);\n}\n\n/* Screen output:\n\nHello!\nBye!\nHELLO!\nBYE!\nPress <RETURN> to close this window...\n\n*/\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "pragma", "ĠGCC", "Ġdiagnostic", "Ġpush", "Ċ", "#", "pragma", "ĠGCC", "Ġdiagnostic", "Ġignored", "Ġ\"-", "We", "ff", "c", "++", "\"", "Ċ", "#", "pragma", "ĠGCC", "Ġdiagnostic", "Ġignored", "Ġ\"-", "W", "unused", "-", "local", "-", "type", "defs", "\"", "Ċ", "#", "include", "Ġ<", "boost", "/", "function", ".", "hpp", ">", "Ċ", "#", "pragma", "ĠGCC", "Ġdiagnostic", "Ġpop", "Ċ", "Ċ", "struct", "ĠSpe", "aker", "Ċ", "{", "Ċ", "Ġ", "ĠSpe", "aker", "(", "const", "Ġstd", "::", "string", "Ġhello", "_", "message", ",", "Ġconst", "Ġstd", "::", "string", "Ġby", "e", "_", "message", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġm", "_", "hello", "_", "message", "(", "hello", "_", "message", "),", "Ċ", "ĠĠĠĠĠ", "Ġm", "_", "bye", "_", "message", "(", "bye", "_", "message", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġvoid", "ĠS", "ay", "Hello", "()", "Ġconst", "Ġ{", "Ġstd", "::", "cout", "Ġ<<", "Ġm", "_", "hello", "_", "message", "Ġ<<", "Ġ'\\", "n", "';", "Ġ}", "Ċ", "Ġ", "Ġvoid", "ĠS", "ay", "By", "e", "()", "Ġconst", "Ġ{", "Ġstd", "::", "cout", "Ġ<<", "Ġm", "_", "bye", "_", "message", "Ġ<<", "Ġ'\\", "n", "';", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġm", "_", "hello", "_", "message", ";", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġm", "_", "bye", "_", "message", ";", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġconst", "ĠSpe", "aker", "Ġs", "1", "(\"", "Hello", "!", "\",\"", "By", "e", "!\");", "Ċ", "Ġ", "Ġconst", "ĠSpe", "aker", "Ġs", "2", "(\"", "HELLO", "!", "\",\"", "BY", "E", "!\");", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġboost", "::", "function", "<", "void", "Ġ(", "const", "ĠSpe", "aker", "*)", ">", "Ġsay", "_", "hello", "_", "function", "Ġ=", "Ġ&", "Speaker", "::", "Say", "Hello", ";", "Ċ", "Ġ", "Ġconst", "Ġboost", "::", "function", "<", "void", "Ġ(", "const", "ĠSpe", "aker", "*)", ">", "Ġsay", "_", "bye", "_", "function", "Ġ=", "Ġ&", "Speaker", "::", "Say", "By", "e", ";", "Ċ", "Ċ", "Ġ", "Ġsay", "_", "hello", "_", "function", "(&", "s", "1", ");", "Ċ", "Ġ", "Ġsay", "_", "bye", "_", "function", "(&", "s", "1", ");", "Ċ", "Ċ", "Ġ", "Ġsay", "_", "hello", "_", "function", "(&", "s", "2", ");", "Ċ", "Ġ", "Ġsay", "_", "bye", "_", "function", "(&", "s", "2", ");", "Ċ", "}", "Ċ", "Ċ", "/*", "ĠScreen", "Ġoutput", ":", "Ċ", "Ċ", "Hello", "!", "Ċ", "By", "e", "!", "Ċ", "HELLO", "!", "Ċ", "BY", "E", "!", "Ċ", "Press", "Ġ<", "RETURN", ">", "Ġto", "Ġclose", "Ġthis", "Ġwindow", "...", "Ċ", "Ċ", "*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::905", "code": "#include \"stdafx.h\"\n#include \"Scene.h\"\n#include \"Director.h\"\n\nScene* g_Scene = nullptr;\n\nScene::Scene()\n{\n}\n\nScene * Scene::getInstance()\n{\n\tif (g_Scene == nullptr) {\n\t\tg_Scene = new (std::nothrow) Scene;\n\t}\n\treturn g_Scene;\n}\n\nvoid Scene::visit()\n{\n\tNode::visit(_transform);\n}\n\nstd::vector<Node*> Scene::getTouchEventNodes()\n{\n\treturn _touchEventNodes;\n}\n\n\nvoid Scene::pushTouchEventNode(Node * node)\n{\n\tnode->retain();\n\t_touchEventNodes.push_back(node);\n}\n\nvoid Scene::clearTouchEventNodes()\n{\n\tfor (auto it : _touchEventNodes) {\n\t\tit->release();\n\t}\n\t_touchEventNodes.clear();\n}\n\nScene::~Scene()\n{\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Scene", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Director", ".", "h", "\"", "Ċ", "Ċ", "Scene", "*", "Ġg", "_", "Scene", "Ġ=", "Ġnullptr", ";", "Ċ", "Ċ", "Scene", "::", "Scene", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Scene", "Ġ*", "ĠScene", "::", "getInstance", "()", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "g", "_", "Scene", "Ġ==", "Ġnullptr", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "g", "_", "Scene", "Ġ=", "Ġnew", "Ġ(", "std", "::", "nothrow", ")", "ĠScene", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġg", "_", "Scene", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠScene", "::", "visit", "()", "Ċ", "{", "Ċ", "ĉ", "Node", "::", "visit", "(_", "transform", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "vector", "<", "Node", "*>", "ĠScene", "::", "get", "TouchEvent", "Nodes", "()", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ_", "touch", "Event", "Nodes", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "void", "ĠScene", "::", "push", "TouchEvent", "Node", "(", "Node", "Ġ*", "Ġnode", ")", "Ċ", "{", "Ċ", "ĉ", "node", "->", "retain", "();", "Ċ", "ĉ", "_", "touch", "Event", "Nodes", ".", "push", "_", "back", "(", "node", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠScene", "::", "clear", "TouchEvent", "Nodes", "()", "Ċ", "{", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġit", "Ġ:", "Ġ_", "touch", "Event", "Nodes", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "it", "->", "release", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "_", "touch", "Event", "Nodes", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ", "Scene", "::~", "Scene", "()", "Ċ", "{", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::906", "code": "/**\n * Copyright (C) 2015-2016 Jan Hajer\n */\n\n#include \"boca/generic/Types.hh\"\n#include \"boca/plotting/Orientation.hh\"\n#include \"boca/generic/DEBUG_MACROS.hh\"\n\nnamespace boca\n{\n\nusing namespace std::string_literals;\n\nstd::string Name(Orientation orientation)\n{\n    auto name = \"\"s;\n    FlagSwitch(orientation, [&](Orientation orientation_1) {\n        switch (orientation_1) {\n        case Orientation::none : name += \" None\"; break;\n        case Orientation::center : name += \" Center\"; break;\n        case Orientation::left : name += \" Left\"; break;\n        case Orientation::right : name += \" Right\"; break;\n        case Orientation::top : name += \" Top\"; break;\n        case Orientation::bottom : name += \" Bottom\"; break;\n        case Orientation::outside : name += \" Outside\"; break;\n        default : name += std::to_string(to_int(orientation_1)); break;\n        }\n    });\n    INFO(to_int(orientation), name);\n    return name;\n}\n\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "-", "2016", "ĠJan", "ĠH", "aj", "er", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "b", "oc", "a", "/", "generic", "/", "Types", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "b", "oc", "a", "/", "plot", "ting", "/", "Orientation", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "b", "oc", "a", "/", "generic", "/", "DEBUG", "_", "MACRO", "S", ".", "hh", "\"", "Ċ", "Ċ", "namespace", "Ġb", "oc", "a", "Ċ", "{", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", "::", "string", "_", "literal", "s", ";", "Ċ", "Ċ", "std", "::", "string", "ĠName", "(", "Orientation", "Ġorientation", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġauto", "Ġname", "Ġ=", "Ġ\"\"", "s", ";", "Ċ", "ĠĠĠ", "ĠFlag", "Switch", "(", "orientation", ",", "Ġ[&](", "Orientation", "Ġorientation", "_", "1", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġswitch", "Ġ(", "orientation", "_", "1", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠOrientation", "::", "none", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠNone", "\";", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠOrientation", "::", "center", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠCenter", "\";", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠOrientation", "::", "left", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠLeft", "\";", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠOrientation", "::", "right", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠRight", "\";", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠOrientation", "::", "top", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠTop", "\";", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠOrientation", "::", "bottom", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠBottom", "\";", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġcase", "ĠOrientation", "::", "outside", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠOut", "side", "\";", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdefault", "Ġ:", "Ġname", "Ġ+=", "Ġstd", "::", "to", "_", "string", "(", "to", "_", "int", "(", "orientation", "_", "1", "));", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ});", "Ċ", "ĠĠĠ", "ĠINFO", "(", "to", "_", "int", "(", "orientation", "),", "Ġname", ");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġname", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::907", "code": "#pragma once\n\n#include <memory>\n\n#include <QtWidgets/QWidget>\n\n#include <Database/Mixin/ConnectionAcceptor>\n\nnamespace Geo\n{\nnamespace Import\n{\n//\n\nclass ImportTreeModel;\n\nnamespace Gui\n{\n//\n\nclass ImportWidget : public QWidget\n{\n  Q_OBJECT\n\npublic:\n  ImportWidget();\n\n  virtual\n  ~ImportWidget();\n\npublic:\n\n  /// Model is set in ImportController\n  void\n  setModel(ImportTreeModel* importModel);\n\nprivate slots:\n\n  void\n  onImportClicked();\n\n  void\n  onConnectionSelected(int index);\n\n  void\n  onTableViewMenuRequested(const QPoint&);\n\nsignals:\n\n  void notifyMainWindow(QString);\n\nprivate:\n\n  void\n  setupUi();\n\n  void\n  connectSignals();\n\nprivate:\n\n  struct Private;\n\n  std::unique_ptr<Private> p;\n};\n\n//\n} // namespace Gui\n} // namespace Import\n} // namespace Geo\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Qt", "Widgets", "/", "QWidget", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Database", "/", "Mixin", "/", "Connection", "Accept", "or", ">", "Ċ", "Ċ", "namespace", "ĠGeo", "Ċ", "{", "Ċ", "namespace", "ĠImport", "Ċ", "{", "Ċ", "//", "Ċ", "Ċ", "class", "ĠImport", "TreeModel", ";", "Ċ", "Ċ", "namespace", "ĠGui", "Ċ", "{", "Ċ", "//", "Ċ", "Ċ", "class", "ĠImport", "Widget", "Ġ:", "Ġpublic", "ĠQWidget", "Ċ", "{", "Ċ", "Ġ", "ĠQ", "_", "OBJECT", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "ĠImport", "Widget", "();", "Ċ", "Ċ", "Ġ", "Ġvirtual", "Ċ", "Ġ", "Ġ~", "Import", "Widget", "();", "Ċ", "Ċ", "public", ":", "Ċ", "Ċ", "Ġ", "Ġ///", "ĠModel", "Ġis", "Ġset", "Ġin", "ĠImport", "Controller", "Ċ", "Ġ", "Ġvoid", "Ċ", "Ġ", "Ġset", "Model", "(", "Import", "TreeModel", "*", "Ġimport", "Model", ");", "Ċ", "Ċ", "private", "Ġslots", ":", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ċ", "Ġ", "Ġon", "Import", "Clicked", "();", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ċ", "Ġ", "Ġon", "Connection", "Selected", "(", "int", "Ġindex", ");", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ċ", "Ġ", "Ġon", "TableView", "Menu", "Requested", "(", "const", "ĠQPoint", "&", ");", "Ċ", "Ċ", "signals", ":", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ġnotify", "MainWindow", "(", "QString", ");", "Ċ", "Ċ", "private", ":", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ċ", "Ġ", "Ġsetup", "Ui", "();", "Ċ", "Ċ", "Ġ", "Ġvoid", "Ċ", "Ġ", "Ġconnect", "Signals", "();", "Ċ", "Ċ", "private", ":", "Ċ", "Ċ", "Ġ", "Ġstruct", "ĠPrivate", ";", "Ċ", "Ċ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "Private", ">", "Ġp", ";", "Ċ", "};", "Ċ", "Ċ", "//", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠGui", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠImport", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠGeo", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::908", "code": "#ifndef FEAT_H\n#define FEAT_H\n\n#ifndef INC_INDIVIDUAL\n#define INC_INDIVIDUAL\n#include <Individual/Individual.hpp>\n#endif\n\n#ifndef INC_STRING\n#define INC_STRING\n#include <string>\n#endif\n\nclass Individual;\n\n///\n/// \\brief Class that holds the data of a certain Individual.\n///This container can be used for holding deterministic Features or sets of\n///samples.\n///\nclass Feature{\nprivate:\n\t/**\n\t * @brief Pointer to the Individual to which this Feature was attributed.\n\t */\n\tIndividual *ind;\n\n\t/**\n\t * @brief Text describing the Feature.\n\t */\n\tstd::string description;\n\npublic:\n\t// Constructors\n\tFeature();\n\tFeature(Individual* owner);\n\tFeature(Individual* owner, std::string name);\n\tFeature(std::string name);\n\n\t// Description handling functions\n\tstd::string describe();\n\tvoid describe(std::string name);\n\n\t// Individual (owner) handling functions\n\tIndividual* parent();\n\tvoid parent(Individual* owner);\n};\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠFE", "AT", "_", "H", "Ċ", "#", "define", "ĠFE", "AT", "_", "H", "Ċ", "Ċ", "#", "ifndef", "ĠIN", "C", "_", "IN", "DIV", "ID", "UAL", "Ċ", "#", "define", "ĠIN", "C", "_", "IN", "DIV", "ID", "UAL", "Ċ", "#", "include", "Ġ<", "Individual", "/", "Individual", ".", "hpp", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "ifndef", "ĠIN", "C", "_", "STRING", "Ċ", "#", "define", "ĠIN", "C", "_", "STRING", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "class", "ĠIn", "dividual", ";", "Ċ", "Ċ", "///", "Ċ", "///", "Ġ\\", "brief", "ĠClass", "Ġthat", "Ġholds", "Ġthe", "Ġdata", "Ġof", "Ġa", "Ġcertain", "ĠIn", "dividual", ".", "Ċ", "///", "This", "Ġcontainer", "Ġcan", "Ġbe", "Ġused", "Ġfor", "Ġholding", "Ġdeterministic", "ĠFeatures", "Ġor", "Ġsets", "Ġof", "Ċ", "///", "samples", ".", "Ċ", "///", "Ċ", "class", "ĠFeature", "{", "Ċ", "private", ":", "Ċ", "ĉ", "/**", "Ċ", "ĉ", "Ġ*", "Ġ@", "brief", "ĠPointer", "Ġto", "Ġthe", "ĠIn", "dividual", "Ġto", "Ġwhich", "Ġthis", "ĠFeature", "Ġwas", "Ġat", "tributed", ".", "Ċ", "ĉ", "Ġ*/", "Ċ", "ĉ", "Individual", "Ġ*", "ind", ";", "Ċ", "Ċ", "ĉ", "/**", "Ċ", "ĉ", "Ġ*", "Ġ@", "brief", "ĠText", "Ġdescribing", "Ġthe", "ĠFeature", ".", "Ċ", "ĉ", "Ġ*/", "Ċ", "ĉ", "std", "::", "string", "Ġdescription", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "//", "ĠConstructor", "s", "Ċ", "ĉ", "Feature", "();", "Ċ", "ĉ", "Feature", "(", "Individual", "*", "Ġowner", ");", "Ċ", "ĉ", "Feature", "(", "Individual", "*", "Ġowner", ",", "Ġstd", "::", "string", "Ġname", ");", "Ċ", "ĉ", "Feature", "(", "std", "::", "string", "Ġname", ");", "Ċ", "Ċ", "ĉ", "//", "ĠDescription", "Ġhandling", "Ġfunctions", "Ċ", "ĉ", "std", "::", "string", "Ġdescribe", "();", "Ċ", "ĉ", "void", "Ġdescribe", "(", "std", "::", "string", "Ġname", ");", "Ċ", "Ċ", "ĉ", "//", "ĠIn", "dividual", "Ġ(", "owner", ")", "Ġhandling", "Ġfunctions", "Ċ", "ĉ", "Individual", "*", "Ġparent", "();", "Ċ", "ĉ", "void", "Ġparent", "(", "Individual", "*", "Ġowner", ");", "Ċ", "};", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::909", "code": "#include <Eigen/Core>\n#include <Eigen/LU>\n#include <Eigen/QR>\n#include <Eigen/Cholesky>\n#include <Eigen/Geometry>\n#include <Eigen/Jacobi>\n#include <Eigen/Eigenvalues>\n#include <iostream>\n\nusing namespace Eigen;\nusing namespace std;\n\nint main(int, char**)\n{\n  cout.precision(3);\n  Array3d v(2,3,4);\ncout << v.cube() << endl;\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Eigen", "/", "Core", ">", "Ċ", "#", "include", "Ġ<", "Eigen", "/", "LU", ">", "Ċ", "#", "include", "Ġ<", "Eigen", "/", "QR", ">", "Ċ", "#", "include", "Ġ<", "Eigen", "/", "Ch", "ole", "sky", ">", "Ċ", "#", "include", "Ġ<", "Eigen", "/", "Geometry", ">", "Ċ", "#", "include", "Ġ<", "Eigen", "/", "J", "aco", "bi", ">", "Ċ", "#", "include", "Ġ<", "Eigen", "/", "Eigen", "values", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠEigen", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**)", "Ċ", "{", "Ċ", "Ġ", "Ġcout", ".", "precision", "(", "3", ");", "Ċ", "Ġ", "ĠArray", "3", "d", "Ġv", "(", "2", ",", "3", ",", "4", ");", "Ċ", "cout", "Ġ<<", "Ġv", ".", "cube", "()", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::910", "code": "/*****************************************************************************\n*\n*  PROJECT:     Multi Theft Auto v1.0\n*               (Shared logic for modifications)\n*  LICENSE:     See LICENSE in the top level directory\n*  FILE:        mods/shared_logic/CClientDxFont.cpp\n*  PURPOSE:     Custom font bucket\n*  DEVELOPERS:  qwerty\n*\n*****************************************************************************/\n\n#include <StdInc.h>\n\n\n////////////////////////////////////////////////////////////////\n//\n// CClientDxFont::CClientDxFont\n//\n//\n//\n////////////////////////////////////////////////////////////////\nCClientDxFont::CClientDxFont ( CClientManager* pManager, ElementID ID, CDxFontItem* pFontItem ) : ClassInit ( this ), CClientRenderElement ( pManager, ID )\n{\n    SetTypeName ( \"dx-font\" );\n    m_pRenderItem = pFontItem;\n}\n\n\n////////////////////////////////////////////////////////////////\n//\n// CClientDxFont::GetD3DXFont\n//\n// Get D3DXFont for this custom font\n//\n////////////////////////////////////////////////////////////////\nID3DXFont* CClientDxFont::GetD3DXFont ( void )\n{\n    return GetDxFontItem ()->m_pFntNormal;\n}\n", "code_tokens": ["Ġ/", "************************************************************************", "*****", "Ċ", "*", "Ċ", "*", "Ġ", "ĠPRO", "JECT", ":", "ĠĠĠĠ", "ĠMulti", "ĠThe", "ft", "ĠAuto", "Ġv", "1", ".", "0", "Ċ", "*", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ(", "Shared", "Ġlogic", "Ġfor", "Ġmodifications", ")", "Ċ", "*", "Ġ", "ĠLICENSE", ":", "ĠĠĠĠ", "ĠSee", "ĠLICENSE", "Ġin", "Ġthe", "Ġtop", "Ġlevel", "Ġdirectory", "Ċ", "*", "Ġ", "ĠFILE", ":", "ĠĠĠĠĠĠĠ", "Ġmods", "/", "shared", "_", "logic", "/", "C", "Client", "Dx", "Font", ".", "cpp", "Ċ", "*", "Ġ", "ĠPURPOSE", ":", "ĠĠĠĠ", "ĠCustom", "Ġfont", "Ġbucket", "Ċ", "*", "Ġ", "ĠDE", "VEL", "OP", "ERS", ":", "Ġ", "Ġq", "w", "erty", "Ċ", "*", "Ċ", "************************************************************************", "*****/", "Ċ", "Ċ", "#", "include", "Ġ<", "Std", "Inc", ".", "h", ">", "Ċ", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "//", "Ċ", "//", "ĠC", "Client", "Dx", "Font", "::", "C", "Client", "Dx", "Font", "Ċ", "//", "Ċ", "//", "Ċ", "//", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "C", "Client", "Dx", "Font", "::", "C", "Client", "Dx", "Font", "Ġ(", "ĠC", "Client", "Manager", "*", "Ġp", "Manager", ",", "ĠElement", "ID", "ĠID", ",", "ĠCD", "x", "Font", "Item", "*", "Ġp", "Font", "Item", "Ġ)", "Ġ:", "ĠClass", "Init", "Ġ(", "Ġthis", "Ġ),", "ĠC", "Client", "Render", "Element", "Ġ(", "Ġp", "Manager", ",", "ĠID", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠSet", "TypeName", "Ġ(", "Ġ\"", "dx", "-", "font", "\"", "Ġ);", "Ċ", "ĠĠĠ", "Ġm", "_", "p", "Render", "Item", "Ġ=", "Ġp", "Font", "Item", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "//", "Ċ", "//", "ĠC", "Client", "Dx", "Font", "::", "Get", "D", "3", "DX", "Font", "Ċ", "//", "Ċ", "//", "ĠGet", "ĠD", "3", "DX", "Font", "Ġfor", "Ġthis", "Ġcustom", "Ġfont", "Ċ", "//", "Ċ", "////////////////////////////////////////////////////////////////", "Ċ", "ID", "3", "DX", "Font", "*", "ĠC", "Client", "Dx", "Font", "::", "Get", "D", "3", "DX", "Font", "Ġ(", "Ġvoid", "Ġ)", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "ĠGet", "Dx", "Font", "Item", "Ġ()->", "m", "_", "pF", "nt", "Normal", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::911", "code": "#include \"cbase.h\"\n\n#include \"tf_hintmanager.h\"\n\n#define TFHINTMANAGER_THINK_INTERVAL 1.0f\n\nIMPLEMENT_SERVERCLASS_ST_NOBASE(CTFHintManager, DT_TFHintManager)\nEND_SEND_TABLE()\n\nLINK_ENTITY_TO_CLASS( tf_hintmanager, CTFHintManager );\n\n//-----------------------------------------------------------------------------\n// Purpose: \n//-----------------------------------------------------------------------------\nCTFHintManager::CTFHintManager( void )\n{\n\tNetworkStateManualMode( true );\n}\n\n//-----------------------------------------------------------------------------\n// Purpose: \n//-----------------------------------------------------------------------------\nvoid CTFHintManager::Spawn( void )\n{\n\tPrecache();\n}\n\n//-----------------------------------------------------------------------------\n// Purpose: \n//-----------------------------------------------------------------------------\nvoid CTFHintManager::Think( void )\n{\n\tSetNextThink( gpGlobals->curtime + TFHINTMANAGER_THINK_INTERVAL );\n}\n\n//-----------------------------------------------------------------------------\n// Purpose: \n// Input  : *player - \n//\t\t\thintID - \n//-----------------------------------------------------------------------------\nvoid CTFHintManager::AddHint( CBaseTFPlayer *player, int hintID, int priority, int entityIndex /*=0*/ )\n{\n\t// Send a message to the client side entity \n}\n\n//-----------------------------------------------------------------------------\n// Purpose: Always send\n// Input  : **ppSendTable - \n//\t\t\t*recipient - \n//\t\t\t*pvs - \n//\t\t\tclientArea - \n// Output : Returns true on success, false on failure.\n//-----------------------------------------------------------------------------\nbool CTFHintManager::ShouldTransmit( const edict_t *recipient, const void *pvs, int clientArea )\n{\n\t// Always send the manager, it has no data so it's no big deal\n\treturn true;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "c", "base", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "tf", "_", "hint", "manager", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠT", "FH", "INT", "MANAGER", "_", "TH", "INK", "_", "INTERVAL", "Ġ1", ".", "0", "f", "Ċ", "Ċ", "IMPLEMENT", "_", "SERVER", "CLASS", "_", "ST", "_", "NO", "BASE", "(", "CT", "F", "Hint", "Manager", ",", "ĠDT", "_", "TF", "Hint", "Manager", ")", "Ċ", "END", "_", "SEND", "_", "TABLE", "()", "Ċ", "Ċ", "LINK", "_", "ENTITY", "_", "TO", "_", "CLASS", "(", "Ġtf", "_", "hint", "manager", ",", "ĠC", "TF", "Hint", "Manager", "Ġ);", "Ċ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "CT", "F", "Hint", "Manager", "::", "CT", "F", "Hint", "Manager", "(", "Ġvoid", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "Network", "State", "Manual", "Mode", "(", "Ġtrue", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "void", "ĠC", "TF", "Hint", "Manager", "::", "Spawn", "(", "Ġvoid", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "Precache", "();", "Ċ", "}", "Ċ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "void", "ĠC", "TF", "Hint", "Manager", "::", "Think", "(", "Ġvoid", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "SetNext", "Think", "(", "ĠgpGlobals", "->", "curtime", "Ġ+", "ĠT", "FH", "INT", "MANAGER", "_", "TH", "INK", "_", "INTERVAL", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ċ", "//", "ĠInput", "Ġ", "Ġ:", "Ġ*", "player", "Ġ-", "Ġ", "Ċ", "//", "ĉĉ", "ĉ", "hint", "ID", "Ġ-", "Ġ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "void", "ĠC", "TF", "Hint", "Manager", "::", "Add", "Hint", "(", "ĠCBase", "T", "FP", "layer", "Ġ*", "player", ",", "Ġint", "Ġhint", "ID", ",", "Ġint", "Ġpriority", ",", "Ġint", "Ġentity", "Index", "Ġ/*=", "0", "*/", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "//", "ĠSend", "Ġa", "Ġmessage", "Ġto", "Ġthe", "Ġclient", "Ġside", "Ġentity", "Ġ", "Ċ", "}", "Ċ", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "//", "ĠPurpose", ":", "ĠAlways", "Ġsend", "Ċ", "//", "ĠInput", "Ġ", "Ġ:", "Ġ**", "pp", "Send", "Table", "Ġ-", "Ġ", "Ċ", "//", "ĉĉ", "ĉ", "*", "recipient", "Ġ-", "Ġ", "Ċ", "//", "ĉĉ", "ĉ", "*", "pv", "s", "Ġ-", "Ġ", "Ċ", "//", "ĉĉ", "ĉ", "client", "Area", "Ġ-", "Ġ", "Ċ", "//", "ĠOutput", "Ġ:", "ĠReturns", "Ġtrue", "Ġon", "Ġsuccess", ",", "Ġfalse", "Ġon", "Ġfailure", ".", "Ċ", "//-----------------------------------------------------------------------------", "Ċ", "bool", "ĠC", "TF", "Hint", "Manager", "::", "Should", "Transmit", "(", "Ġconst", "Ġed", "ict", "_", "t", "Ġ*", "recipient", ",", "Ġconst", "Ġvoid", "Ġ*", "pv", "s", ",", "Ġint", "Ġclient", "Area", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "//", "ĠAlways", "Ġsend", "Ġthe", "Ġmanager", ",", "Ġit", "Ġhas", "Ġno", "Ġdata", "Ġso", "Ġit", "'s", "Ġno", "Ġbig", "Ġdeal", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::912", "code": "/* \n * File:   StateMapper.cpp\n * Author: ntanaka\n * \n * Created on 2014/11/29, 22:43\n */\n\n#include \"StateMapper.h\"\n#include \"PicoJsonIF.h\"\nnamespace jsonMapper {\n\n    StateMapper::StateMapper() {\n    }\n\n    //StateMapper::StateMapper(const StateMapper& orig) {\n    //}\n\n    StateMapper::~StateMapper() {\n    }\n\n    utah::State* StateMapper::create(const picojson::value& obj, std::map<const utah::Symbol*, utah::State*>& stateMap) {\n        picojson::array arrayObj = PicoJsonIF::toArray(obj);\n        picojson::value& name = arrayObj[0];\n        utah::State* thisState = new utah::State(name.get<std::string>());\n\n        picojson::value& childrenArray = arrayObj[1];\n        for (picojson::value obj2 : PicoJsonIF::toArray(childrenArray)) {\n            utah::State* childState = StateMapper::create(obj2, stateMap);\n            thisState->addChild(childState);\n            childState->setParent(thisState);\n            stateMap[childState->getName()] = childState;\n        }\n        return thisState;\n    }\n}", "code_tokens": ["Ġ/*", "ĠĊ", "Ġ*", "ĠFile", ":", "ĠĠ", "ĠState", "Mapper", ".", "cpp", "Ċ", "Ġ*", "ĠAuthor", ":", "Ġnt", "an", "aka", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠCreated", "Ġon", "Ġ2014", "/", "11", "/", "29", ",", "Ġ22", ":", "43", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "State", "Mapper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Pic", "o", "Json", "IF", ".", "h", "\"", "Ċ", "namespace", "Ġjson", "Mapper", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "ĠState", "Mapper", "::", "State", "Mapper", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "State", "Mapper", "::", "State", "Mapper", "(", "const", "ĠState", "Mapper", "&", "Ġorig", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġ//}", "Ċ", "Ċ", "ĠĠĠ", "ĠState", "Mapper", "::~", "State", "Mapper", "()", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġut", "ah", "::", "State", "*", "ĠState", "Mapper", "::", "create", "(", "const", "Ġp", "ico", "json", "::", "value", "&", "Ġobj", ",", "Ġstd", "::", "map", "<", "const", "Ġut", "ah", "::", "Symbol", "*,", "Ġut", "ah", "::", "State", "*", ">&", "Ġstate", "Map", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġp", "ico", "json", "::", "array", "Ġarray", "Obj", "Ġ=", "ĠP", "ico", "Json", "IF", "::", "toArray", "(", "obj", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġp", "ico", "json", "::", "value", "&", "Ġname", "Ġ=", "Ġarray", "Obj", "[", "0", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġut", "ah", "::", "State", "*", "Ġthis", "State", "Ġ=", "Ġnew", "Ġut", "ah", "::", "State", "(", "name", ".", "get", "<", "std", "::", "string", ">());", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġp", "ico", "json", "::", "value", "&", "Ġchildren", "Array", "Ġ=", "Ġarray", "Obj", "[", "1", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "pic", "o", "json", "::", "value", "Ġobj", "2", "Ġ:", "ĠP", "ico", "Json", "IF", "::", "toArray", "(", "children", "Array", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġut", "ah", "::", "State", "*", "Ġchild", "State", "Ġ=", "ĠState", "Mapper", "::", "create", "(", "obj", "2", ",", "Ġstate", "Map", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġthis", "State", "->", "addChild", "(", "child", "State", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġchild", "State", "->", "setParent", "(", "this", "State", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstate", "Map", "[", "child", "State", "->", "getName", "()]", "Ġ=", "Ġchild", "State", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġthis", "State", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::913", "code": "#ifndef _IMAGEALGORITHM_H_\n#define _IMAGEALGORITHM_H_\n\nclass ImageAlgorithm\n{\n\n\n};\n\n#endif //_IMAGEALGORITHM_H_\n", "code_tokens": ["Ġ#", "ifndef", "Ġ_", "IMAGE", "ALGORITHM", "_", "H", "_", "Ċ", "#", "define", "Ġ_", "IMAGE", "ALGORITHM", "_", "H", "_", "Ċ", "Ċ", "class", "ĠImage", "Algorithm", "Ċ", "{", "Ċ", "Ċ", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "_", "IMAGE", "ALGORITHM", "_", "H", "_", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::914", "code": "// Cytosim was created by Francois Nedelec. Copyright 2007-2017 EMBL.\n\n#include \"bicgstab.h\"\n\n\n/**\n Here is defined which norm is used to measure the residual\n */\nbool Solver::Monitor::finished(const unsigned int size, const real * x)\n{\n#if ( 0 )\n    // this is the standard Euclidian norm\n    mResid = blas_xnrm2(size, x, 1);\n#else\n    // use the 'infinite' norm\n    mResid = blas_xnrm8(size, x);\n#endif\n    \n#if ( 1 )\n    if ( mIter > mIterOld+31 )\n    {\n        if ( mResid >= mResidOld )\n        {\n            std::cerr << \"Stagnant solver?\";\n            std::cerr << \" residuals: \" << std::scientific << mResidOld << \" at iteration \" << mIterOld;\n            std::cerr << \", \" << std::scientific << mResid << \" at \" << mIter << std::endl;\n        }\n        mIterOld = mIter;\n        mResidOld = mResid;\n    }\n#endif\n    \n#if ( 0 )\n    if ( mIter > 64 )\n        std::cerr << \"Solver step \" << mIter << \" residual \" << mResid << std::endl;\n#endif\n    \n    if ( mResid != mResid )\n    {\n        std::cerr << \"Solver diverged: step \" << mIter << \" resid = not-a-number\" << std::endl;\n        mResid = INFINITY;\n        return true;\n    }\n    \n    if ( mIter > mIterMax )\n        return true;\n    \n    return ( mResid < mResidMax );\n}\n\n", "code_tokens": ["Ġ//", "ĠCy", "to", "sim", "Ġwas", "Ġcreated", "Ġby", "ĠF", "ran", "co", "is", "ĠNe", "de", "lec", ".", "ĠCopyright", "Ġ2007", "-", "2017", "ĠE", "MB", "L", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "b", "ic", "gst", "ab", ".", "h", "\"", "Ċ", "Ċ", "Ċ", "/**", "Ċ", "ĠHere", "Ġis", "Ġdefined", "Ġwhich", "Ġnorm", "Ġis", "Ġused", "Ġto", "Ġmeasure", "Ġthe", "Ġresidual", "Ċ", "Ġ*/", "Ċ", "bool", "ĠS", "olver", "::", "Monitor", "::", "finished", "(", "const", "Ġunsigned", "Ġint", "Ġsize", ",", "Ġconst", "Ġreal", "Ġ*", "Ġx", ")", "Ċ", "{", "Ċ", "#", "if", "Ġ(", "Ġ0", "Ġ)", "Ċ", "ĠĠĠ", "Ġ//", "Ġthis", "Ġis", "Ġthe", "Ġstandard", "ĠE", "u", "cl", "idian", "Ġnorm", "Ċ", "ĠĠĠ", "Ġm", "Res", "id", "Ġ=", "Ġblas", "_", "xn", "rm", "2", "(", "size", ",", "Ġx", ",", "Ġ1", ");", "Ċ", "#", "else", "Ċ", "ĠĠĠ", "Ġ//", "Ġuse", "Ġthe", "Ġ'", "infinite", "'", "Ġnorm", "Ċ", "ĠĠĠ", "Ġm", "Res", "id", "Ġ=", "Ġblas", "_", "xn", "rm", "8", "(", "size", ",", "Ġx", ");", "Ċ", "#", "endif", "Ċ", "ĠĠĠĠ", "Ċ", "#", "if", "Ġ(", "Ġ1", "Ġ)", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Ġm", "Iter", "Ġ>", "Ġm", "Iter", "Old", "+", "31", "Ġ)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "Ġm", "Res", "id", "Ġ>=", "Ġm", "Res", "id", "Old", "Ġ)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "St", "ag", "n", "ant", "Ġsolver", "?", "\";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "Ġresidual", "s", ":", "Ġ\"", "Ġ<<", "Ġstd", "::", "sc", "ient", "ific", "Ġ<<", "Ġm", "Res", "id", "Old", "Ġ<<", "Ġ\"", "Ġat", "Ġiteration", "Ġ\"", "Ġ<<", "Ġm", "Iter", "Old", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġstd", "::", "sc", "ient", "ific", "Ġ<<", "Ġm", "Res", "id", "Ġ<<", "Ġ\"", "Ġat", "Ġ\"", "Ġ<<", "Ġm", "Iter", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "Iter", "Old", "Ġ=", "Ġm", "Iter", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "Res", "id", "Old", "Ġ=", "Ġm", "Res", "id", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "#", "endif", "Ċ", "ĠĠĠĠ", "Ċ", "#", "if", "Ġ(", "Ġ0", "Ġ)", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Ġm", "Iter", "Ġ>", "Ġ64", "Ġ)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "Solver", "Ġstep", "Ġ\"", "Ġ<<", "Ġm", "Iter", "Ġ<<", "Ġ\"", "Ġresidual", "Ġ\"", "Ġ<<", "Ġm", "Res", "id", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "#", "endif", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġif", "Ġ(", "Ġm", "Res", "id", "Ġ!=", "Ġm", "Res", "id", "Ġ)", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "Solver", "Ġd", "iver", "ged", ":", "Ġstep", "Ġ\"", "Ġ<<", "Ġm", "Iter", "Ġ<<", "Ġ\"", "Ġresid", "Ġ=", "Ġnot", "-", "a", "-", "number", "\"", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġm", "Res", "id", "Ġ=", "ĠINF", "INITY", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġif", "Ġ(", "Ġm", "Iter", "Ġ>", "Ġm", "Iter", "Max", "Ġ)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠĠĊ", "ĠĠĠ", "Ġreturn", "Ġ(", "Ġm", "Res", "id", "Ġ<", "Ġm", "Res", "id", "Max", "Ġ);", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::915", "code": "#include <iostream>\n#include <fstream>\n#include <cstring>\n#include <math.h>\nusing namespace std;\n\n#include \"glob.cpp\"\n#include \"schnibbler.cpp\"\n\nvoid help()\n    {\n      printf(\"Syntax: time ./mesyread  FILE.mdat 100\");\n    }\n\n\nint main(int argc, char** argv) {\n    char outputfile_trunc[512];\n    unsigned char byte;\n    TSchnibbler* schnibbler;\n\n    if (argc < 1) {\n      printf(\"usage: mesycut PathToListModeFile.mdat\\n\");\n    }\n    else {\n        strcpy(outputfile_trunc, argv[1]);\n\n        schnibbler = new TSchnibbler();\n\n        schnibbler->set_outputfile_trunc(outputfile_trunc);\n\n        schnibbler->open_outputfile();\n        \n        while (!schnibbler->end_of_file()) {\n            byte = std::getchar();\n            schnibbler->add_byte(byte);\n        }\n\n        schnibbler->close_outputfile();\n\n        fprintf(stderr, \"EOF \\n\");\n\n        delete(schnibbler);\n    }\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "include", "Ġ\"", "glob", ".", "cpp", "\"", "Ċ", "#", "include", "Ġ\"", "sch", "ni", "bb", "ler", ".", "cpp", "\"", "Ċ", "Ċ", "void", "Ġhelp", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġprintf", "(\"", "Syntax", ":", "Ġtime", "Ġ./", "mes", "y", "read", "Ġ", "ĠFILE", ".", "md", "at", "Ġ100", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "**", "Ġargv", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġchar", "Ġoutput", "file", "_", "trunc", "[", "512", "];", "Ċ", "ĠĠĠ", "Ġunsigned", "Ġchar", "Ġbyte", ";", "Ċ", "ĠĠĠ", "ĠTS", "ch", "ni", "bb", "ler", "*", "Ġsch", "ni", "bb", "ler", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "argc", "Ġ<", "Ġ1", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġprintf", "(\"", "usage", ":", "Ġmes", "y", "cut", "ĠPath", "ToList", "Mode", "File", ".", "md", "at", "\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstrcpy", "(", "output", "file", "_", "trunc", ",", "Ġargv", "[", "1", "]);", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsch", "ni", "bb", "ler", "Ġ=", "Ġnew", "ĠTS", "ch", "ni", "bb", "ler", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsch", "ni", "bb", "ler", "->", "set", "_", "output", "file", "_", "trunc", "(", "output", "file", "_", "trunc", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsch", "ni", "bb", "ler", "->", "open", "_", "output", "file", "();", "Ċ", "ĠĠĠĠĠĠĠĠĊ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(!", "sch", "ni", "bb", "ler", "->", "end", "_", "of", "_", "file", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġbyte", "Ġ=", "Ġstd", "::", "get", "char", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsch", "ni", "bb", "ler", "->", "add", "_", "byte", "(", "byte", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġsch", "ni", "bb", "ler", "->", "close", "_", "output", "file", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfprintf", "(", "stderr", ",", "Ġ\"", "EOF", "Ġ\\", "n", "\");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdelete", "(", "sch", "ni", "bb", "ler", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::916", "code": "/*\n * Copyright 2007-2014 Katholieke Universiteit Leuven\n *\n * Use of this software is governed by the GNU LGPLv3.0 license\n *\n * Written by Broes De Cat and Maarten Marien, K.U.Leuven, Departement\n * Computerwetenschappen, Celestijnenlaan 200A, B-3001 Leuven, Belgium\n */\n#include \"external/ConstraintVisitor.hpp\"\n#include \"utils/Print.hpp\"\n\nusing namespace std;\nusing namespace MinisatID;\n\ntemplate<typename S>\nvoid MinisatID::printList(const litlist& list, const std::string& concat, S& stream, LiteralPrinter* solver) {\n\tbool begin = true;\n\tfor (auto i = list.cbegin(); i < list.cend(); ++i) {\n\t\tif (not begin) {\n\t\t\tstream << concat;\n\t\t}\n\t\tbegin = false;\n\t\tstream << toString(*i, solver);\n\t}\n}\n\ntemplate void MinisatID::printList(const litlist&, const std::string&, std::ostream&, LiteralPrinter*);\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2007", "-", "2014", "ĠK", "ath", "ol", "ie", "ke", "ĠUn", "ivers", "iteit", "ĠLe", "u", "ven", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUse", "Ġof", "Ġthis", "Ġsoftware", "Ġis", "Ġgover", "ned", "Ġby", "Ġthe", "ĠGNU", "ĠL", "G", "PL", "v", "3", ".", "0", "Ġlicense", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠWrit", "ten", "Ġby", "ĠB", "ro", "es", "ĠDe", "ĠC", "at", "Ġand", "ĠM", "a", "art", "en", "ĠM", "ari", "en", ",", "ĠK", ".", "U", ".", "Le", "u", "ven", ",", "ĠDe", "par", "te", "ment", "Ċ", "Ġ*", "ĠComput", "er", "w", "et", "ens", "ch", "app", "en", ",", "ĠC", "ele", "st", "ijn", "en", "la", "an", "Ġ200", "A", ",", "ĠB", "-", "3", "001", "ĠLe", "u", "ven", ",", "ĠB", "el", "gi", "um", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "external", "/", "Constraint", "Visitor", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "utils", "/", "Print", ".", "hpp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "ĠMin", "is", "at", "ID", ";", "Ċ", "Ċ", "template", "<", "typename", "ĠS", ">", "Ċ", "void", "ĠMin", "is", "at", "ID", "::", "print", "List", "(", "const", "Ġlit", "list", "&", "Ġlist", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġconcat", ",", "ĠS", "&", "Ġstream", ",", "ĠLiteral", "Printer", "*", "Ġsolver", ")", "Ġ{", "Ċ", "ĉ", "bool", "Ġbegin", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġi", "Ġ=", "Ġlist", ".", "cbegin", "();", "Ġi", "Ġ<", "Ġlist", ".", "cend", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "not", "Ġbegin", ")", "Ġ{", "Ċ", "ĉĉ", "ĉ", "stream", "Ġ<<", "Ġconcat", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "begin", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "stream", "Ġ<<", "ĠtoString", "(*", "i", ",", "Ġsolver", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "template", "Ġvoid", "ĠMin", "is", "at", "ID", "::", "print", "List", "(", "const", "Ġlit", "list", "&,", "Ġconst", "Ġstd", "::", "string", "&,", "Ġstd", "::", "ostream", "&,", "ĠLiteral", "Printer", "*", ");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::917", "code": "#include <iostream>\n#include <sys/stat.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/ioctl.h>\nusing namespace std;\n#include \"barra.cpp\"\n#include \"copia.cpp\"\nint main(int argc, char* argv[]){\n\tif(argc < 3){\n\t\tcerr<<\"Sono necessari almeno 2 argomenti\"<<endl;\n\t\treturn 1;\n\t}\n\tfor(int i = 1; i < argc; i++){\n\t\t//cout<<argv[i]<<endl;\n\t}\n\tCopia c(argv[1],argv[2]);\n\tc.superCopia();\n\tcout << endl;\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "stat", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "ioctl", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "include", "Ġ\"", "bar", "ra", ".", "cpp", "\"", "Ċ", "#", "include", "Ġ\"", "copi", "a", ".", "cpp", "\"", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[]", "){", "Ċ", "ĉ", "if", "(", "argc", "Ġ<", "Ġ3", "){", "Ċ", "ĉ", "ĉ", "cerr", "<<\"", "Son", "o", "Ġne", "cess", "ari", "Ġal", "m", "eno", "Ġ2", "Ġarg", "oment", "i", "\"<<", "endl", ";", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġargc", ";", "Ġi", "++){", "Ċ", "ĉ", "ĉ", "//", "cout", "<<", "argv", "[", "i", "]<<", "endl", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Cop", "ia", "Ġc", "(", "argv", "[", "1", "],", "argv", "[", "2", "]);", "Ċ", "ĉ", "c", ".", "super", "Cop", "ia", "();", "Ċ", "ĉ", "cout", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::918", "code": "#include <QApplication>\n#include \"Fenetre/FenetreParametre.h\"\n#include <QTextCodec>\nusing namespace std;\n\n\nint main(int argc, char *argv[])\n{\n    QTextCodec::setCodecForCStrings(QTextCodec::codecForName(\"UTF-8\"));\n    QTextCodec::setCodecForTr(QTextCodec::codecForName(\"UTF-8\"));\n    QTextCodec::setCodecForLocale(QTextCodec::codecForName(\"UTF-8\"));\n\n    QApplication a(argc, argv);\n    FenetreParametre f;\n    return a.exec();\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Q", "Application", ">", "Ċ", "#", "include", "Ġ\"", "F", "enet", "re", "/", "F", "enet", "re", "Param", "et", "re", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "QText", "Codec", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQText", "Codec", "::", "set", "Codec", "For", "C", "Strings", "(", "QText", "Codec", "::", "codec", "For", "Name", "(\"", "UTF", "-", "8", "\"));", "Ċ", "ĠĠĠ", "ĠQText", "Codec", "::", "set", "Codec", "For", "Tr", "(", "QText", "Codec", "::", "codec", "For", "Name", "(\"", "UTF", "-", "8", "\"));", "Ċ", "ĠĠĠ", "ĠQText", "Codec", "::", "set", "Codec", "For", "Locale", "(", "QText", "Codec", "::", "codec", "For", "Name", "(\"", "UTF", "-", "8", "\"));", "Ċ", "Ċ", "ĠĠĠ", "ĠQApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "ĠF", "enet", "re", "Param", "et", "re", "Ġf", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::919", "code": "/*\nCopyright (C) 2010-2018 The ESPResSo project\n\nThis file is part of ESPResSo.\n\nESPResSo is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nESPResSo is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n#define BOOST_TEST_MODULE d3q19 test\n#define BOOST_TEST_DYN_LINK\n#include <boost/test/unit_test.hpp>\n\n#include \"grid_based_algorithms/lb-d3q19.hpp\"\n\nBOOST_AUTO_TEST_CASE(d3q19) {\n  for (int i = 0; i < 19; ++i) {\n    for (int j = 0; j < 19; ++j) {\n      BOOST_CHECK(D3Q19::e_ki[i][j] == D3Q19::e_ki_transposed[j][i]);\n    }\n  }\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "Ġ(", "C", ")", "Ġ2010", "-", "2018", "ĠThe", "ĠESP", "Res", "So", "Ġproject", "Ċ", "Ċ", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠESP", "Res", "So", ".", "Ċ", "Ċ", "ESP", "Res", "So", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ESP", "Res", "So", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "but", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "MER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "GNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "al", "ong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "*/", "Ċ", "#", "define", "ĠBOOST", "_", "TEST", "_", "MODULE", "Ġd", "3", "q", "19", "Ġtest", "Ċ", "#", "define", "ĠBOOST", "_", "TEST", "_", "DYN", "_", "LINK", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "unit", "_", "test", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "grid", "_", "based", "_", "algorithms", "/", "lb", "-", "d", "3", "q", "19", ".", "hpp", "\"", "Ċ", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "CASE", "(", "d", "3", "q", "19", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ19", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġ19", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĠĠĠĠĠ", "ĠBOOST", "_", "CHECK", "(", "D", "3", "Q", "19", "::", "e", "_", "ki", "[", "i", "][", "j", "]", "Ġ==", "ĠD", "3", "Q", "19", "::", "e", "_", "ki", "_", "trans", "posed", "[", "j", "][", "i", "]);", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::920", "code": "/*\n  UnOp.cc An unary  operator in the expression calculator.\n  Copyright (C) 2008-14 Sakis Kasampalis <s.kasampalis@zoho.com>\n  (this file is part of the expression calculator).\n\n  The expression calculator is free software: you can redistribute it \n  and/or modify it under the terms of the GNU General Public License \n  as published by the Free Software Foundation, either version 3 of the \n  License, or (at your option) any later version.\n\n  The expression calculator is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with the expression calculator.  If not, see \n  <http://www.gnu.org/licenses/>.\n*/\n\n#include <string>\n#include <sstream>\n#include \"UnOp.h\"\n\nusing std::string;\nusing std::stringstream;\n\n/**\n * Initialisation of an unary operator.\n * \n * @param e a pointer to the expression\n * of the operator\n */\nUnOp::UnOp(Expr* e): u_exp(e) {}\n\n\n/**\n * A string representation\n * of the unary operator. \n * \n * @return a <i>string</i>\n * instance of the unary\n * operator.\n */\nstring UnOp::toString() const\n{\n  stringstream str;\n\n  str << strOperator() << \"(\" << u_exp->toString() << \")\";\n\n  return str.str();\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "ĠUn", "Op", ".", "cc", "ĠAn", "Ġunary", "Ġ", "Ġoperator", "Ġin", "Ġthe", "Ġexpression", "Ġcalcul", "ator", ".", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "14", "ĠS", "ak", "is", "ĠK", "as", "amp", "al", "is", "Ġ<", "s", ".", "k", "as", "amp", "al", "is", "@", "zo", "ho", ".", "com", ">", "Ċ", "Ġ", "Ġ(", "this", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġexpression", "Ġcalcul", "ator", ").", "Ċ", "Ċ", "Ġ", "ĠThe", "Ġexpression", "Ġcalcul", "ator", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "ĠĊ", "Ġ", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "ĠĊ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠĊ", "Ġ", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠThe", "Ġexpression", "Ġcalcul", "ator", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthe", "Ġexpression", "Ġcalcul", "ator", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "ĠĊ", "Ġ", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ\"", "Un", "Op", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "using", "Ġstd", "::", "stringstream", ";", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠInitial", "isation", "Ġof", "Ġan", "Ġunary", "Ġoperator", ".", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "Ġ@", "param", "Ġe", "Ġa", "Ġpointer", "Ġto", "Ġthe", "Ġexpression", "Ċ", "Ġ*", "Ġof", "Ġthe", "Ġoperator", "Ċ", "Ġ*/", "Ċ", "Un", "Op", "::", "Un", "Op", "(", "Expr", "*", "Ġe", "):", "Ġu", "_", "exp", "(", "e", ")", "Ġ{}", "Ċ", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠA", "Ġstring", "Ġrepresentation", "Ċ", "Ġ*", "Ġof", "Ġthe", "Ġunary", "Ġoperator", ".", "ĠĊ", "Ġ*", "ĠĊ", "Ġ*", "Ġ@", "return", "Ġa", "Ġ<", "i", ">", "string", "</", "i", ">", "Ċ", "Ġ*", "Ġinstance", "Ġof", "Ġthe", "Ġunary", "Ċ", "Ġ*", "Ġoperator", ".", "Ċ", "Ġ*/", "Ċ", "string", "ĠUn", "Op", "::", "toString", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġstring", "stream", "Ġstr", ";", "Ċ", "Ċ", "Ġ", "Ġstr", "Ġ<<", "Ġstr", "Operator", "()", "Ġ<<", "Ġ\"(\"", "Ġ<<", "Ġu", "_", "exp", "->", "toString", "()", "Ġ<<", "Ġ\")\";", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġstr", ".", "str", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::921", "code": "//\n// Created by Poter Hsu on 2015/12/23.\n//\n\n#ifndef BUILD_RELU_H\n#define BUILD_RELU_H\n\n#include \"Module.hpp\"\n\ntemplate <typename T>\nclass ReLU : public Module<T> {\npublic:\n    using Module<T>::name;\n    using Module<T>::type;\n    using Module<T>::next;\n    shared_ptr<Tensor<T>> output;\n\n    ReLU() {\n        name = \"ReLU\";\n        type = Type::RELU;\n        output = nullptr;\n    }\n\n    shared_ptr<Tensor<T>> forward(const shared_ptr<Tensor<T>> input) override {\n        assert(input->nDim > 0);\n        assert(input->nElem > 0);\n\n        if (output == nullptr)\n            output = make_shared<Tensor<T>>(input->sizes);\n\n        T* pInput = input->data;\n        T* pOutput = output->data;\n\n        for (long i = 0; i < output->nElem; ++i) {\n            *pOutput = *pInput < 0.0 ? 0.0 : *pInput;\n            ++pInput;\n            ++pOutput;\n        }\n\n        return next != nullptr ? next->forward(output) : output;\n    }\n};\n\n#endif //BUILD_RELU_H\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "ĠP", "oter", "ĠH", "su", "Ġon", "Ġ2015", "/", "12", "/", "23", ".", "Ċ", "//", "Ċ", "Ċ", "#", "ifndef", "ĠBUILD", "_", "REL", "U", "_", "H", "Ċ", "#", "define", "ĠBUILD", "_", "REL", "U", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ\"", "Module", ".", "hpp", "\"", "Ċ", "Ċ", "template", "Ġ<", "typename", "ĠT", ">", "Ċ", "class", "ĠRe", "LU", "Ġ:", "Ġpublic", "ĠModule", "<", "T", ">", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġusing", "ĠModule", "<", "T", ">::", "name", ";", "Ċ", "ĠĠĠ", "Ġusing", "ĠModule", "<", "T", ">::", "type", ";", "Ċ", "ĠĠĠ", "Ġusing", "ĠModule", "<", "T", ">::", "next", ";", "Ċ", "ĠĠĠ", "Ġshared", "_", "ptr", "<", "Tensor", "<", "T", ">>", "Ġoutput", ";", "Ċ", "Ċ", "ĠĠĠ", "ĠRe", "LU", "()", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġname", "Ġ=", "Ġ\"", "Re", "LU", "\";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġtype", "Ġ=", "ĠType", "::", "REL", "U", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġoutput", "Ġ=", "Ġnullptr", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġshared", "_", "ptr", "<", "Tensor", "<", "T", ">>", "Ġforward", "(", "const", "Ġshared", "_", "ptr", "<", "Tensor", "<", "T", ">>", "Ġinput", ")", "Ġoverride", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġassert", "(", "input", "->", "n", "Dim", "Ġ>", "Ġ0", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġassert", "(", "input", "->", "n", "Elem", "Ġ>", "Ġ0", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "output", "Ġ==", "Ġnullptr", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġoutput", "Ġ=", "Ġmake", "_", "shared", "<", "Tensor", "<", "T", ">>(", "input", "->", "sizes", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "ĠT", "*", "Ġp", "Input", "Ġ=", "Ġinput", "->", "data", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠT", "*", "Ġp", "Output", "Ġ=", "Ġoutput", "->", "data", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "long", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġoutput", "->", "n", "Elem", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "p", "Output", "Ġ=", "Ġ*", "pInput", "Ġ<", "Ġ0", ".", "0", "Ġ?", "Ġ0", ".", "0", "Ġ:", "Ġ*", "pInput", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "pInput", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ++", "p", "Output", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnext", "Ġ!=", "Ġnullptr", "Ġ?", "Ġnext", "->", "forward", "(", "output", ")", "Ġ:", "Ġoutput", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "BUILD", "_", "REL", "U", "_", "H", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::922", "code": "#include <iostream>\n#include <string>\n#include <string.h>\n#include <stdlib.h>\n\nusing namespace std;\n\nint main()\n{\n\tint N, total, i;\n\tchar alpha['z' + 1];\n\tsize_t len;\n\tstring frase;\n\n\tcin >> N;\n\tgetline(cin, frase);\n\n\twhile(N--)\n\t{\n\t\tmemset(alpha, 0, 'z' + 1);\n\n\t\tgetline(cin, frase);\n\n\t\tlen = frase.size();\n\t\twhile(len--)\n\t\t{\n\t\t\tif(frase[len] < 'a' || 'z' < frase[len] )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talpha[frase[len]] = 1;\n\t\t}\n\n\t\tfor(total = 0, i = 'a'; i <= 'z'; i++)\n\t\t{\n\t\t\tif(alpha[i])\n\t\t\t{\n\t\t\t\ttotal++;\n\t\t\t}\n\t\t}\n\n\t\tcout << \"frase \";\n\n\t\tif(total == 26)\n\t\t{\n\t\t\tcout << \"completa\";\n\t\t}\n\t\telse if(total >= 13)\n\t\t{\n\t\t\tcout << \"quase completa\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << \"mal elaborada\";\n\t\t}\n\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "ĠN", ",", "Ġtotal", ",", "Ġi", ";", "Ċ", "ĉ", "char", "Ġalpha", "['", "z", "'", "Ġ+", "Ġ1", "];", "Ċ", "ĉ", "size", "_", "t", "Ġlen", ";", "Ċ", "ĉ", "string", "Ġf", "rase", ";", "Ċ", "Ċ", "ĉ", "cin", "Ġ>>", "ĠN", ";", "Ċ", "ĉ", "getline", "(", "cin", ",", "Ġf", "rase", ");", "Ċ", "Ċ", "ĉ", "while", "(", "N", "--)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "memset", "(", "alpha", ",", "Ġ0", ",", "Ġ'", "z", "'", "Ġ+", "Ġ1", ");", "Ċ", "Ċ", "ĉ", "ĉ", "getline", "(", "cin", ",", "Ġf", "rase", ");", "Ċ", "Ċ", "ĉ", "ĉ", "len", "Ġ=", "Ġf", "rase", ".", "size", "();", "Ċ", "ĉ", "ĉ", "while", "(", "len", "--)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "if", "(", "f", "rase", "[", "len", "]", "Ġ<", "Ġ'", "a", "'", "Ġ||", "Ġ'", "z", "'", "Ġ<", "Ġf", "rase", "[", "len", "]", "Ġ)", "Ċ", "ĉĉ", "ĉ", "{", "Ċ", "ĉĉĉ", "ĉ", "continue", ";", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "Ċ", "ĉĉ", "ĉ", "alpha", "[", "f", "rase", "[", "len", "]]", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "for", "(", "total", "Ġ=", "Ġ0", ",", "Ġi", "Ġ=", "Ġ'", "a", "';", "Ġi", "Ġ<=", "Ġ'", "z", "';", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "if", "(", "alpha", "[", "i", "])", "Ċ", "ĉĉ", "ĉ", "{", "Ċ", "ĉĉĉ", "ĉ", "total", "++;", "Ċ", "ĉĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "f", "rase", "Ġ\";", "Ċ", "Ċ", "ĉ", "ĉ", "if", "(", "total", "Ġ==", "Ġ26", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "comp", "let", "a", "\";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ġif", "(", "total", "Ġ>=", "Ġ13", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "qu", "ase", "Ġcomple", "ta", "\";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "cout", "Ġ<<", "Ġ\"", "mal", "Ġel", "ab", "or", "ada", "\";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "ĉ", "cout", "Ġ<<", "Ġendl", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::923", "code": "#pragma once\n#include \"imp.hpp\"\n\nnamespace horizon {\nclass ImpLayer : public ImpBase {\n    friend class ImpInterface;\n\npublic:\n    using ImpBase::ImpBase;\n\n    bool is_layered() const override\n    {\n        return true;\n    };\n\nprotected:\n    void construct_layer_box(bool pack = true);\n    class LayerBox *layer_box;\n    Glib::RefPtr<Glib::Binding> work_layer_binding;\n    Glib::RefPtr<Glib::Binding> layer_opacity_binding;\n    void apply_preferences() override;\n    void get_save_meta(json &j) override;\n    virtual void load_default_layers();\n\n    CanvasPreferences *get_canvas_preferences() override\n    {\n        return &preferences.canvas_layer;\n    }\n\n    ~ImpLayer()\n    {\n    }\n};\n} // namespace horizon\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "#", "include", "Ġ\"", "imp", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġhoriz", "on", "Ġ{", "Ċ", "class", "ĠImp", "Layer", "Ġ:", "Ġpublic", "ĠImp", "Base", "Ġ{", "Ċ", "ĠĠĠ", "Ġfriend", "Ġclass", "ĠImp", "Interface", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġusing", "ĠImp", "Base", "::", "Imp", "Base", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġbool", "Ġis", "_", "lay", "ered", "()", "Ġconst", "Ġoverride", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġconstruct", "_", "layer", "_", "box", "(", "bool", "Ġpack", "Ġ=", "Ġtrue", ");", "Ċ", "ĠĠĠ", "Ġclass", "ĠLayer", "Box", "Ġ*", "layer", "_", "box", ";", "Ċ", "ĠĠĠ", "ĠG", "lib", "::", "RefPtr", "<", "G", "lib", "::", "Binding", ">", "Ġwork", "_", "layer", "_", "binding", ";", "Ċ", "ĠĠĠ", "ĠG", "lib", "::", "RefPtr", "<", "G", "lib", "::", "Binding", ">", "Ġlayer", "_", "opacity", "_", "binding", ";", "Ċ", "ĠĠĠ", "Ġvoid", "Ġapply", "_", "preferences", "()", "Ġoverride", ";", "Ċ", "ĠĠĠ", "Ġvoid", "Ġget", "_", "save", "_", "meta", "(", "json", "Ġ&", "j", ")", "Ġoverride", ";", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġload", "_", "default", "_", "layers", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠCanvas", "Preferences", "Ġ*", "get", "_", "canvas", "_", "preferences", "()", "Ġoverride", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ&", "preferences", ".", "canvas", "_", "layer", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġ~", "Imp", "Layer", "()", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġhoriz", "on", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::924", "code": "#include \"MAP.h\"\n\n#include <iostream>\n#include <algorithm>\n#include <numeric>\n\nusing namespace std;\n\nvoid MAP::append( std::vector<std::string>& retrieved, std::vector<std::string>& relevant )\n{\n   float k = 1;\n   float tp = 0;\n   double avgPrecision = 0;\n   vector<string>::iterator ind;\n   vector<string>::iterator end = retrieved.end();\n   for( ind = retrieved.begin() ; ind != end ; ++ind )\n   {\n      if( find( relevant.begin(), relevant.end(), *ind ) != relevant.end() )\n      {\n         ++tp;\n         avgPrecision += tp / k;\n      }\n      ++k;\n   }\n   avgPrecision = tp > 0 ? avgPrecision / tp : 0;\n   m_avgPrecision.push_back( avgPrecision );\n}\n\nvoid MAP::clear()\n{\n   m_avgPrecision.clear();\n}\n\ndouble MAP::eval()\n{\n   return m_avgPrecision.size() > 0 ? std::accumulate( m_avgPrecision.begin(), m_avgPrecision.end(), 0.0 ) / m_avgPrecision.size() : 0;\n}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "MAP", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "#", "include", "Ġ<", "numeric", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "ĠMAP", "::", "append", "(", "Ġstd", "::", "vector", "<", "std", "::", "string", ">&", "Ġretrieved", ",", "Ġstd", "::", "vector", "<", "std", "::", "string", ">&", "Ġrelevant", "Ġ)", "Ċ", "{", "Ċ", "ĠĠ", "Ġfloat", "Ġk", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠ", "Ġfloat", "Ġtp", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠ", "Ġdouble", "Ġavg", "Precision", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠ", "Ġvector", "<", "string", ">::", "iterator", "Ġind", ";", "Ċ", "ĠĠ", "Ġvector", "<", "string", ">::", "iterator", "Ġend", "Ġ=", "Ġretrieved", ".", "end", "();", "Ċ", "ĠĠ", "Ġfor", "(", "Ġind", "Ġ=", "Ġretrieved", ".", "begin", "()", "Ġ;", "Ġind", "Ġ!=", "Ġend", "Ġ;", "Ġ++", "ind", "Ġ)", "Ċ", "ĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġif", "(", "Ġfind", "(", "Ġrelevant", ".", "begin", "(),", "Ġrelevant", ".", "end", "(),", "Ġ*", "ind", "Ġ)", "Ġ!=", "Ġrelevant", ".", "end", "()", "Ġ)", "Ċ", "ĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġ++", "tp", ";", "Ċ", "ĠĠĠĠĠĠĠĠ", "Ġavg", "Precision", "Ġ+=", "Ġtp", "Ġ/", "Ġk", ";", "Ċ", "ĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠ", "Ġ++", "k", ";", "Ċ", "ĠĠ", "Ġ}", "Ċ", "ĠĠ", "Ġavg", "Precision", "Ġ=", "Ġtp", "Ġ>", "Ġ0", "Ġ?", "Ġavg", "Precision", "Ġ/", "Ġtp", "Ġ:", "Ġ0", ";", "Ċ", "ĠĠ", "Ġm", "_", "avg", "Precision", ".", "push", "_", "back", "(", "Ġavg", "Precision", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMAP", "::", "clear", "()", "Ċ", "{", "Ċ", "ĠĠ", "Ġm", "_", "avg", "Precision", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ", "double", "ĠMAP", "::", "eval", "()", "Ċ", "{", "Ċ", "ĠĠ", "Ġreturn", "Ġm", "_", "avg", "Precision", ".", "size", "()", "Ġ>", "Ġ0", "Ġ?", "Ġstd", "::", "accumulate", "(", "Ġm", "_", "avg", "Precision", ".", "begin", "(),", "Ġm", "_", "avg", "Precision", ".", "end", "(),", "Ġ0", ".", "0", "Ġ)", "Ġ/", "Ġm", "_", "avg", "Precision", ".", "size", "()", "Ġ:", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::925", "code": "////////////////////////////////////////////////////////////////////\n/// \\file\n/// \\brief A class which can load and render meshes.\n//\n// CG-Beleg 2, by Felix Lauer (90404) & Simon Schneegans (90405)\n////////////////////////////////////////////////////////////////////\n\n# ifndef TEXTURE_HPP\n# define TEXTURE_HPP\n\n# include <string>\n\n////////////////////////////////////////////////////////////////////\n/// \\brief A class representing texture.\n///\n/// This class allows to load texture data from a file and bind the\n/// texture to an OpenGL context.\n////////////////////////////////////////////////////////////////////\nclass Texture {\n    public:\n\n        ////////////////////////////////////////////////////////////\n        /// \\brief Constructor.\n        ///\n        /// This constructs a new texture form a given file.\n        /// \\param file The file which contains the texture data\n        ////////////////////////////////////////////////////////////\n        Texture(std::string const& file);\n\n        ////////////////////////////////////////////////////////////\n        /// \\brief Destructor.\n        ///\n        /// This will delete all associated buffers\n        ////////////////////////////////////////////////////////////\n        ~Texture();\n\n        ////////////////////////////////////////////////////////////\n        /// \\brief Bind the texture.\n        ///\n        /// This will bind the texture to the current OpenGL context.\n        ////////////////////////////////////////////////////////////\n        void bind(unsigned texPos);\n\n        ////////////////////////////////////////////////////////////\n        /// \\brief Unbind a texture.\n        ///\n        /// This will unbind the texture with the given position.\n        /// \\param texPos Position of the texture.\n        ////////////////////////////////////////////////////////////\n        static void unbind(unsigned texPos);\n\n    private:\n        unsigned texID_;\n};\n\n# endif //TEXTURE_HPP\n\n\n\n\n", "code_tokens": ["Ġ//", "////////////////////////////////////////////////////////////////", "//", "Ċ", "///", "Ġ\\", "file", "Ċ", "///", "Ġ\\", "brief", "ĠA", "Ġclass", "Ġwhich", "Ġcan", "Ġload", "Ġand", "Ġrender", "Ġmeshes", ".", "Ċ", "//", "Ċ", "//", "ĠCG", "-", "Be", "leg", "Ġ2", ",", "Ġby", "ĠF", "elix", "ĠL", "au", "er", "Ġ(", "9", "04", "04", ")", "Ġ&", "ĠSim", "on", "ĠSch", "ne", "eg", "ans", "Ġ(", "9", "04", "05", ")", "Ċ", "////////////////////////////////////////////////////////////////", "////", "Ċ", "Ċ", "#", "Ġif", "ndef", "ĠTEXT", "URE", "_", "HP", "P", "Ċ", "#", "Ġdefine", "ĠTEXT", "URE", "_", "HP", "P", "Ċ", "Ċ", "#", "Ġinclude", "Ġ<", "string", ">", "Ċ", "Ċ", "////////////////////////////////////////////////////////////////", "////", "Ċ", "///", "Ġ\\", "brief", "ĠA", "Ġclass", "Ġrepresenting", "Ġtexture", ".", "Ċ", "///", "Ċ", "///", "ĠThis", "Ġclass", "Ġallows", "Ġto", "Ġload", "Ġtexture", "Ġdata", "Ġfrom", "Ġa", "Ġfile", "Ġand", "Ġbind", "Ġthe", "Ċ", "///", "Ġtexture", "Ġto", "Ġan", "ĠOpenGL", "Ġcontext", ".", "Ċ", "////////////////////////////////////////////////////////////////", "////", "Ċ", "class", "ĠTexture", "Ġ{", "Ċ", "ĠĠĠ", "Ġpublic", ":", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "////////////////////////////////////////////////////////", "//", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ġ\\", "brief", "ĠConstructor", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "ĠThis", "Ġconstructs", "Ġa", "Ġnew", "Ġtexture", "Ġform", "Ġa", "Ġgiven", "Ġfile", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ġ\\", "param", "Ġfile", "ĠThe", "Ġfile", "Ġwhich", "Ġcontains", "Ġthe", "Ġtexture", "Ġdata", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "////////////////////////////////////////////////////////", "//", "Ċ", "ĠĠĠĠĠĠĠ", "ĠTexture", "(", "std", "::", "string", "Ġconst", "&", "Ġfile", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "////////////////////////////////////////////////////////", "//", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ġ\\", "brief", "ĠDestructor", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "ĠThis", "Ġwill", "Ġdelete", "Ġall", "Ġassociated", "Ġbuffers", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "////////////////////////////////////////////////////////", "//", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ~", "Texture", "();", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "////////////////////////////////////////////////////////", "//", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ġ\\", "brief", "ĠBind", "Ġthe", "Ġtexture", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "ĠThis", "Ġwill", "Ġbind", "Ġthe", "Ġtexture", "Ġto", "Ġthe", "Ġcurrent", "ĠOpenGL", "Ġcontext", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "////////////////////////////////////////////////////////", "//", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvoid", "Ġbind", "(", "unsigned", "Ġtex", "Pos", ");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "////////////////////////////////////////////////////////", "//", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ġ\\", "brief", "ĠUn", "bind", "Ġa", "Ġtexture", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "ĠThis", "Ġwill", "Ġunbind", "Ġthe", "Ġtexture", "Ġwith", "Ġthe", "Ġgiven", "Ġposition", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ///", "Ġ\\", "param", "Ġtex", "Pos", "ĠPosition", "Ġof", "Ġthe", "Ġtexture", ".", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "////////////////////////////////////////////////////////", "//", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstatic", "Ġvoid", "Ġunbind", "(", "unsigned", "Ġtex", "Pos", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġprivate", ":", "Ċ", "ĠĠĠĠĠĠĠ", "Ġunsigned", "Ġtex", "ID", "_;", "Ċ", "};", "Ċ", "Ċ", "#", "Ġendif", "Ġ//", "TEXTURE", "_", "HP", "P", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::926", "code": "#include \"scene.h\"\n\n#include \"vector3.h\"\n\nnamespace Solar {\n\nScene::Scene(Camera *SceneCamera) : mCam(SceneCamera) {}\n\nvoid Scene::AddMesh (Mesh ToAdd) {\n\n    VecMeshes.push_back(ToAdd);\n\n}\n\n// TODO: Reduce parameters for less overhead?\ninline void Scene::DrawPixel (Vector3 *Orientation, int x, int y, Color *Address) {\n\n    Dis SmallestDist = -1;\n    for(auto m : VecMeshes) {\n        for(int i=0; i < m.Size; i++) {\n\n            Dis temp = m.Atoms[i].DistanceToLineSqr(mCam->mPos, *Orientation);\n            if (temp < 3000) {\n                Dis Dist = (m.Atoms[i] - mCam->mPos).AbsSqr();\n                if (SmallestDist == -1 || Dist < SmallestDist) {\n                    SmallestDist = Dist;\n                    *Address = m.Colors[i];\n                }\n            }\n        }\n    }\n\n    if (SmallestDist == -1) {\n        Address->r = 0;\n        Address->g = 0;\n        Address->b = 0;\n    }\n\n\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "scene", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "vector", "3", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠS", "olar", "Ġ{", "Ċ", "Ċ", "Scene", "::", "Scene", "(", "Camera", "Ġ*", "Scene", "Camera", ")", "Ġ:", "Ġm", "Cam", "(", "Scene", "Camera", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠScene", "::", "Add", "Mesh", "Ġ(", "Mesh", "ĠTo", "Add", ")", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "ĠVec", "Meshes", ".", "push", "_", "back", "(", "ToAdd", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "//", "ĠTODO", ":", "ĠReduce", "Ġparameters", "Ġfor", "Ġless", "Ġoverhead", "?", "Ċ", "inline", "Ġvoid", "ĠScene", "::", "Draw", "Pixel", "Ġ(", "Vector", "3", "Ġ*", "Orientation", ",", "Ġint", "Ġx", ",", "Ġint", "Ġy", ",", "ĠColor", "Ġ*", "Address", ")", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "ĠDis", "ĠSm", "allest", "Dist", "Ġ=", "Ġ-", "1", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "auto", "Ġm", "Ġ:", "ĠVec", "Meshes", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "Ġm", ".", "Size", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "ĠDis", "Ġtemp", "Ġ=", "Ġm", ".", "Atoms", "[", "i", "].", "Distance", "To", "Line", "Sqr", "(", "m", "Cam", "->", "m", "Pos", ",", "Ġ*", "Orientation", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "temp", "Ġ<", "Ġ3000", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠDis", "ĠDist", "Ġ=", "Ġ(", "m", ".", "Atoms", "[", "i", "]", "Ġ-", "Ġm", "Cam", "->", "m", "Pos", ").", "Abs", "Sqr", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "Sm", "allest", "Dist", "Ġ==", "Ġ-", "1", "Ġ||", "ĠDist", "Ġ<", "ĠSm", "allest", "Dist", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠSm", "allest", "Dist", "Ġ=", "ĠDist", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "Address", "Ġ=", "Ġm", ".", "Colors", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "Sm", "allest", "Dist", "Ġ==", "Ġ-", "1", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "ĠAddress", "->", "r", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠAddress", "->", "g", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠAddress", "->", "b", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::927", "code": "/*\n * Copyright 2012 Aarhus University\n *\n * Licensed under the GNU General Public License, Version 3 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *          http://www.gnu.org/licenses/gpl-3.0.html\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n // AUTO GENERATED - DO NOT MODIFY\n\n#ifdef ARTEMIS\n\n#include \"constantinteger.h\"\n\nnamespace Symbolic\n{\n\nConstantInteger::ConstantInteger(double value) :\n    IntegerExpression(),\n    m_value(value)\n{\n}\n\nvoid ConstantInteger::accept(Visitor* visitor) \n{\n\tvisitor->visit(this, NULL); \t\n}\n\nvoid ConstantInteger::accept(Visitor* visitor, void* arg) \n{\n\tvisitor->visit(this, arg); \t\n}\n\n}\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2012", "ĠA", "ar", "h", "us", "ĠUn", "ivers", "ity", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", ",", "ĠVersion", "Ġ3", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠ", "Ġhttp", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/", "g", "pl", "-", "3", ".", "0", ".", "html", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "Ġ//", "ĠAUTO", "ĠGENERATED", "Ġ-", "ĠDO", "ĠNOT", "ĠMOD", "IFY", "Ċ", "Ċ", "#", "ifdef", "ĠAR", "TE", "MIS", "Ċ", "Ċ", "#", "include", "Ġ\"", "constant", "integer", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠSymbol", "ic", "Ċ", "{", "Ċ", "Ċ", "Constant", "Integer", "::", "Constant", "Integer", "(", "double", "Ġvalue", ")", "Ġ:", "Ċ", "ĠĠĠ", "ĠInteger", "Expression", "(),", "Ċ", "ĠĠĠ", "Ġm", "_", "value", "(", "value", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠConstant", "Integer", "::", "accept", "(", "Visitor", "*", "Ġvisitor", ")", "Ġ", "Ċ", "{", "Ċ", "ĉ", "visitor", "->", "visit", "(", "this", ",", "ĠNULL", ");", "Ġĉ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠConstant", "Integer", "::", "accept", "(", "Visitor", "*", "Ġvisitor", ",", "Ġvoid", "*", "Ġarg", ")", "Ġ", "Ċ", "{", "Ċ", "ĉ", "visitor", "->", "visit", "(", "this", ",", "Ġarg", ");", "Ġĉ", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::928", "code": "#ifndef __PLAYSCENE_HPP__\n#define __PLAYSCENE_HPP__\n\n#include <fichin/fScene.hpp>\n#include <fichin/fSprite.hpp>\n#include \"Character.hpp\"\n\n\nclass PlayScene: public fScene{\npublic:\n\tvoid init();\n\tvoid update(float dt);\n\t\nprivate:\n\tCharacter *c;\n\tfTilemap *t;\n\tfGroup *enemies;\n};\n\n#endif\t// __PLAYSCENE_HPP__\n\n", "code_tokens": ["Ġ#", "ifndef", "Ġ__", "PLAY", "SC", "ENE", "_", "HP", "P", "__", "Ċ", "#", "define", "Ġ__", "PLAY", "SC", "ENE", "_", "HP", "P", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "f", "ich", "in", "/", "f", "Scene", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "f", "ich", "in", "/", "f", "Sprite", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "Character", ".", "hpp", "\"", "Ċ", "Ċ", "Ċ", "class", "ĠPlay", "Scene", ":", "Ġpublic", "Ġf", "Scene", "{", "Ċ", "public", ":", "Ċ", "ĉ", "void", "Ġinit", "();", "Ċ", "ĉ", "void", "Ġupdate", "(", "float", "Ġdt", ");", "Ċ", "ĉ", "Ċ", "private", ":", "Ċ", "ĉ", "Character", "Ġ*", "c", ";", "Ċ", "ĉ", "f", "Tile", "map", "Ġ*", "t", ";", "Ċ", "ĉ", "f", "Group", "Ġ*", "en", "emies", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "ĉ", "//", "Ġ__", "PLAY", "SC", "ENE", "_", "HP", "P", "__", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::929", "code": "#pragma once\n\n#include \"fetchers.hh\"\n\nnamespace nix::fetchers {\n\nstruct Cache\n{\n    virtual ~Cache() { }\n\n    virtual void add(\n        ref<Store> store,\n        const Attrs & inAttrs,\n        const Attrs & infoAttrs,\n        const StorePath & storePath,\n        bool locked) = 0;\n\n    virtual std::optional<std::pair<Attrs, StorePath>> lookup(\n        ref<Store> store,\n        const Attrs & inAttrs) = 0;\n\n    struct Result\n    {\n        bool expired = false;\n        Attrs infoAttrs;\n        StorePath storePath;\n    };\n\n    virtual std::optional<Result> lookupExpired(\n        ref<Store> store,\n        const Attrs & inAttrs) = 0;\n};\n\nref<Cache> getCache();\n\n}\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "fetch", "ers", ".", "hh", "\"", "Ċ", "Ċ", "namespace", "Ġn", "ix", "::", "fetch", "ers", "Ġ{", "Ċ", "Ċ", "struct", "ĠCache", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġ~", "Cache", "()", "Ġ{", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġvoid", "Ġadd", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġref", "<", "Store", ">", "Ġstore", ",", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "ĠAttrs", "Ġ&", "Ġin", "Attrs", ",", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "ĠAttrs", "Ġ&", "Ġinfo", "Attrs", ",", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "ĠStore", "Path", "Ġ&", "Ġstore", "Path", ",", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġlocked", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġstd", "::", "optional", "<", "std", "::", "pair", "<", "Attrs", ",", "ĠStore", "Path", ">>", "Ġlookup", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġref", "<", "Store", ">", "Ġstore", ",", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "ĠAttrs", "Ġ&", "Ġin", "Attrs", ")", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstruct", "ĠResult", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġbool", "Ġexpired", "Ġ=", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠAttrs", "Ġinfo", "Attrs", ";", "Ċ", "ĠĠĠĠĠĠĠ", "ĠStore", "Path", "Ġstore", "Path", ";", "Ċ", "ĠĠĠ", "Ġ};", "Ċ", "Ċ", "ĠĠĠ", "Ġvirtual", "Ġstd", "::", "optional", "<", "Result", ">", "Ġlookup", "Expired", "(", "Ċ", "ĠĠĠĠĠĠĠ", "Ġref", "<", "Store", ">", "Ġstore", ",", "Ċ", "ĠĠĠĠĠĠĠ", "Ġconst", "ĠAttrs", "Ġ&", "Ġin", "Attrs", ")", "Ġ=", "Ġ0", ";", "Ċ", "};", "Ċ", "Ċ", "ref", "<", "Cache", ">", "ĠgetCache", "();", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::930", "code": "#ifndef QINPUTMETHODEVENT\n#define QINPUTMETHODEVENT\nclass DummyQInputMethodEvent : public DummyQEvent {\n//\tQ_OBJECT;\npublic:\n\tknh_RawPtr_t *self;\n\tstd::map<std::string, knh_Func_t *> *event_map;\n\tstd::map<std::string, knh_Func_t *> *slot_map;\n\tDummyQInputMethodEvent();\n\tvirtual ~DummyQInputMethodEvent();\n\tvoid setSelf(knh_RawPtr_t *ptr);\n\tbool eventDispatcher(QEvent *event);\n\tbool addEvent(knh_Func_t *callback_func, std::string str);\n\tbool signalConnect(knh_Func_t *callback_func, std::string str);\n\tknh_Object_t** reftrace(CTX ctx, knh_RawPtr_t *p FTRARG);\n\tvoid connection(QObject *o);\n};\n\nclass KQInputMethodEvent : public QInputMethodEvent {\n//\tQ_OBJECT;\npublic:\n\tint magic_num;\n\tknh_RawPtr_t *self;\n\tDummyQInputMethodEvent *dummy;\n\tKQInputMethodEvent();\n\t~KQInputMethodEvent();\n\tvoid setSelf(knh_RawPtr_t *ptr);\n};\n\n#endif //QINPUTMETHODEVENT\n\n\n", "code_tokens": ["Ġ#", "ifndef", "ĠQ", "INPUT", "ME", "TH", "ODEV", "ENT", "Ċ", "#", "define", "ĠQ", "INPUT", "ME", "TH", "ODEV", "ENT", "Ċ", "class", "ĠDummy", "Q", "InputMethod", "Event", "Ġ:", "Ġpublic", "ĠDummy", "QEvent", "Ġ{", "Ċ", "//", "ĉ", "Q", "_", "OBJECT", ";", "Ċ", "public", ":", "Ċ", "ĉ", "k", "nh", "_", "Raw", "Ptr", "_", "t", "Ġ*", "self", ";", "Ċ", "ĉ", "std", "::", "map", "<", "std", "::", "string", ",", "Ġk", "nh", "_", "Func", "_", "t", "Ġ*>", "Ġ*", "event", "_", "map", ";", "Ċ", "ĉ", "std", "::", "map", "<", "std", "::", "string", ",", "Ġk", "nh", "_", "Func", "_", "t", "Ġ*>", "Ġ*", "slot", "_", "map", ";", "Ċ", "ĉ", "Dummy", "Q", "InputMethod", "Event", "();", "Ċ", "ĉ", "virtual", "Ġ~", "Dummy", "Q", "InputMethod", "Event", "();", "Ċ", "ĉ", "void", "Ġset", "Self", "(", "k", "nh", "_", "Raw", "Ptr", "_", "t", "Ġ*", "ptr", ");", "Ċ", "ĉ", "bool", "Ġevent", "Dispatcher", "(", "QEvent", "Ġ*", "event", ");", "Ċ", "ĉ", "bool", "Ġadd", "Event", "(", "k", "nh", "_", "Func", "_", "t", "Ġ*", "callback", "_", "func", ",", "Ġstd", "::", "string", "Ġstr", ");", "Ċ", "ĉ", "bool", "Ġsignal", "Connect", "(", "k", "nh", "_", "Func", "_", "t", "Ġ*", "callback", "_", "func", ",", "Ġstd", "::", "string", "Ġstr", ");", "Ċ", "ĉ", "k", "nh", "_", "Object", "_", "t", "**", "Ġref", "trace", "(", "CTX", "Ġctx", ",", "Ġk", "nh", "_", "Raw", "Ptr", "_", "t", "Ġ*", "p", "ĠF", "TR", "ARG", ");", "Ċ", "ĉ", "void", "Ġconnection", "(", "QObject", "Ġ*", "o", ");", "Ċ", "};", "Ċ", "Ċ", "class", "ĠK", "Q", "InputMethod", "Event", "Ġ:", "Ġpublic", "ĠQ", "InputMethod", "Event", "Ġ{", "Ċ", "//", "ĉ", "Q", "_", "OBJECT", ";", "Ċ", "public", ":", "Ċ", "ĉ", "int", "Ġmagic", "_", "num", ";", "Ċ", "ĉ", "k", "nh", "_", "Raw", "Ptr", "_", "t", "Ġ*", "self", ";", "Ċ", "ĉ", "Dummy", "Q", "InputMethod", "Event", "Ġ*", "dummy", ";", "Ċ", "ĉ", "KQ", "InputMethod", "Event", "();", "Ċ", "ĉ", "~", "KQ", "InputMethod", "Event", "();", "Ċ", "ĉ", "void", "Ġset", "Self", "(", "k", "nh", "_", "Raw", "Ptr", "_", "t", "Ġ*", "ptr", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ġ//", "Q", "INPUT", "ME", "TH", "ODEV", "ENT", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::931", "code": "#include <QtGui/QApplication>\n#include <QTextCodec>\n#include \"keyboard.h\"\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    QTextCodec::setCodecForTr( QTextCodec::codecForName(\"GB2312\") );    //ÔÚÒÆÖ²Ê±¿ÉÄÜ³öÏÖ±àÂëÎÊÌâ\n    keyboard w;\n    w.show();\n    return a.exec();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Qt", "Gui", "/", "Q", "Application", ">", "Ċ", "#", "include", "Ġ<", "QText", "Codec", ">", "Ċ", "#", "include", "Ġ\"", "keyboard", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "ĠQText", "Codec", "::", "set", "Codec", "For", "Tr", "(", "ĠQText", "Codec", "::", "codec", "For", "Name", "(\"", "GB", "23", "12", "\")", "Ġ);", "ĠĠĠ", "Ġ//", "Ã", "Ķ", "Ã", "ļ", "Ã", "Ĵ", "Ã", "Ĩ", "Ã", "ĸ", "Â²", "Ã", "Ĭ", "Â±", "Â", "¿", "Ã", "ī", "Ã", "Ħ", "Ã", "ľ", "Â", "³", "Ã¶", "Ã", "ı", "Ã", "ĸ", "Â±", "Ãł", "Ã", "Ĥ", "Ã«", "Ãİ", "Ã", "Ĭ", "Ã", "Į", "Ã¢", "Ċ", "ĠĠĠ", "Ġkeyboard", "Ġw", ";", "Ċ", "ĠĠĠ", "Ġw", ".", "show", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::932", "code": "#include \"Color.hpp\"\n\n#include <boost/python.hpp>\n#include <avango/python/register_field.h>\n#include <avango/gua/Fields.hpp>\n#include <avango/gua/Types.hpp>\n\nusing namespace boost::python;\nusing namespace av::python;\n\nnamespace boost\n{\nnamespace python\n{\ntemplate <class T>\nstruct pointee<av::Link<T>>\n{\n    using type = T;\n};\n} // namespace python\n} // namespace boost\n\nfloat getR(::gua::utils::Color3f* self) { return self->r(); }\nfloat getG(::gua::utils::Color3f* self) { return self->g(); }\nfloat getB(::gua::utils::Color3f* self) { return self->b(); }\n\nvoid setR(::gua::utils::Color3f* self, float value) { self->r(value); }\nvoid setG(::gua::utils::Color3f* self, float value) { self->g(value); }\nvoid setB(::gua::utils::Color3f* self, float value) { self->b(value); }\n\nvoid init_Color()\n{\n    // wrapping gua::math::vec3 functionality\n    class_<::gua::utils::Color3f>(\"Color\")\n        .def(init<float, float, float>())\n        .def(init<::gua::utils::Color3f>())\n        .add_property(\"r\", &getR, &setR)\n        .add_property(\"g\", &getG, &setG)\n        .add_property(\"b\", &getB, &setB);\n\n    // register as a field\n    register_field<av::gua::SFColor>(\"SFColor\");\n    //    register_multifield<av::gua::MFColor>(\"MFColor\");\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Color", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "python", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "av", "ango", "/", "python", "/", "register", "_", "field", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "av", "ango", "/", "g", "ua", "/", "Fields", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "av", "ango", "/", "g", "ua", "/", "Types", ".", "hpp", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġboost", "::", "python", ";", "Ċ", "using", "Ġnamespace", "Ġav", "::", "python", ";", "Ċ", "Ċ", "namespace", "Ġboost", "Ċ", "{", "Ċ", "namespace", "Ġpython", "Ċ", "{", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "struct", "Ġpo", "inte", "e", "<", "av", "::", "Link", "<", "T", ">>", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġusing", "Ġtype", "Ġ=", "ĠT", ";", "Ċ", "};", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġpython", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġboost", "Ċ", "Ċ", "float", "Ġget", "R", "(::", "g", "ua", "::", "utils", "::", "Color", "3", "f", "*", "Ġself", ")", "Ġ{", "Ġreturn", "Ġself", "->", "r", "();", "Ġ}", "Ċ", "float", "Ġget", "G", "(::", "g", "ua", "::", "utils", "::", "Color", "3", "f", "*", "Ġself", ")", "Ġ{", "Ġreturn", "Ġself", "->", "g", "();", "Ġ}", "Ċ", "float", "Ġget", "B", "(::", "g", "ua", "::", "utils", "::", "Color", "3", "f", "*", "Ġself", ")", "Ġ{", "Ġreturn", "Ġself", "->", "b", "();", "Ġ}", "Ċ", "Ċ", "void", "Ġset", "R", "(::", "g", "ua", "::", "utils", "::", "Color", "3", "f", "*", "Ġself", ",", "Ġfloat", "Ġvalue", ")", "Ġ{", "Ġself", "->", "r", "(", "value", ");", "Ġ}", "Ċ", "void", "Ġset", "G", "(::", "g", "ua", "::", "utils", "::", "Color", "3", "f", "*", "Ġself", ",", "Ġfloat", "Ġvalue", ")", "Ġ{", "Ġself", "->", "g", "(", "value", ");", "Ġ}", "Ċ", "void", "Ġset", "B", "(::", "g", "ua", "::", "utils", "::", "Color", "3", "f", "*", "Ġself", ",", "Ġfloat", "Ġvalue", ")", "Ġ{", "Ġself", "->", "b", "(", "value", ");", "Ġ}", "Ċ", "Ċ", "void", "Ġinit", "_", "Color", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "Ġwrapping", "Ġg", "ua", "::", "math", "::", "vec", "3", "Ġfunctionality", "Ċ", "ĠĠĠ", "Ġclass", "_<", "::", "g", "ua", "::", "utils", "::", "Color", "3", "f", ">(\"", "Color", "\")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "(", "init", "<", "float", ",", "Ġfloat", ",", "Ġfloat", ">())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "def", "(", "init", "<", "::", "g", "ua", "::", "utils", "::", "Color", "3", "f", ">())", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "add", "_", "property", "(\"", "r", "\",", "Ġ&", "getR", ",", "Ġ&", "setR", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "add", "_", "property", "(\"", "g", "\",", "Ġ&", "getG", ",", "Ġ&", "set", "G", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ.", "add", "_", "property", "(\"", "b", "\",", "Ġ&", "getB", ",", "Ġ&", "setB", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "Ġregister", "Ġas", "Ġa", "Ġfield", "Ċ", "ĠĠĠ", "Ġregister", "_", "field", "<", "av", "::", "g", "ua", "::", "SF", "Color", ">(\"", "SF", "Color", "\");", "Ċ", "ĠĠĠ", "Ġ//", "ĠĠĠ", "Ġregister", "_", "mult", "if", "ield", "<", "av", "::", "g", "ua", "::", "MF", "Color", ">(\"", "MF", "Color", "\");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::933", "code": "\n#include \"factory.h\"\n\n#include \"implementation1.h\"\n#include \"implementation2.h\"\n#include \"implementation3.h\"\n\n#include <string>\n\nusing std::string;\n\nbase_class *factory::GetImplementation(const string &className)\n{\n\tif (\"implementation1\" == className)\n\t{\n\t\treturn new implementation1();\n\t}\n\telse if (\"implementation2\" == className)\n\t{\n\t\treturn new implementation2();\n\t}\n\telse if (\"implementation3\" == className)\n\t{\n\t\treturn new implementation3();\n\t}\n\treturn NULL;\n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "factory", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "implementation", "1", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "implementation", "2", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "implementation", "3", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "Ċ", "base", "_", "class", "Ġ*", "factory", "::", "Get", "Implementation", "(", "const", "Ġstring", "Ġ&", "className", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(\"", "implementation", "1", "\"", "Ġ==", "ĠclassName", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "Ġimplementation", "1", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġif", "Ġ(\"", "implementation", "2", "\"", "Ġ==", "ĠclassName", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "Ġimplementation", "2", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġif", "Ġ(\"", "implementation", "3", "\"", "Ġ==", "ĠclassName", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "Ġimplementation", "3", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::934", "code": "#include<cstdio>\nconst int V=999;\nchar c[V][V],p[V];\nint t;\nchar go(int v)\n{\n    if(v==t)return 1;\n    if(p[v])return 0;\n    p[v]=1;\n    for(int i=1;i<=t;i++)\n        if(c[v][i]-- && go(i))\n            return ++c[i][v];\n        else c[v][i]++;\n    return 0;\n}\nint flow()\n{\n    int i,f=0;\n    while(1)\n    {\n        for(i=0;i<=t;i++)\n            p[i]=0;\n        if(go(0))f++;\n        else break;\n    }\n    return f;\n}\nmain()\n{\n    int i,j,k,n;\n    while(scanf(\"%d %d %d\",&n,&j,&k) && n)\n    {\n        t=n+j+1;\n        for(i=0;i<=t;i++)\n            for(j=0;j<=t;j++)\n                c[i][j]=0;\n        while(k--)\n        {\n            scanf(\"%d\",&i);\n            scanf(\"%d %d\",&i,&j);\n            if(i && j)\n                c[i][j+n]=1;\n        }\n        for(i=1;i<=n;i++)\n            c[0][i]=1;\n        for(;i<t;i++)\n            c[i][t]=1;\n        printf(\"%d\\n\",flow());\n    }\n}\n", "code_tokens": ["Ġ#", "include", "<", "c", "stdio", ">", "Ċ", "const", "Ġint", "ĠV", "=", "999", ";", "Ċ", "char", "Ġc", "[", "V", "][", "V", "],", "p", "[", "V", "];", "Ċ", "int", "Ġt", ";", "Ċ", "char", "Ġgo", "(", "int", "Ġv", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "(", "v", "==", "t", ")", "return", "Ġ1", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "p", "[", "v", "])", "return", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġp", "[", "v", "]=", "1", ";", "Ċ", "ĠĠĠ", "Ġfor", "(", "int", "Ġi", "=", "1", ";", "i", "<=", "t", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "c", "[", "v", "][", "i", "]", "--", "Ġ&&", "Ġgo", "(", "i", "))", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ++", "c", "[", "i", "][", "v", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġc", "[", "v", "][", "i", "]++;", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "int", "Ġflow", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġi", ",", "f", "=", "0", ";", "Ċ", "ĠĠĠ", "Ġwhile", "(", "1", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "i", "=", "0", ";", "i", "<=", "t", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġp", "[", "i", "]=", "0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "(", "go", "(", "0", "))", "f", "++;", "Ċ", "ĠĠĠĠĠĠĠ", "Ġelse", "Ġbreak", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġreturn", "Ġf", ";", "Ċ", "}", "Ċ", "main", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġi", ",", "j", ",", "k", ",", "n", ";", "Ċ", "ĠĠĠ", "Ġwhile", "(", "scanf", "(\"%", "d", "Ġ%", "d", "Ġ%", "d", "\",&", "n", ",&", "j", ",&", "k", ")", "Ġ&&", "Ġn", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġt", "=", "n", "+", "j", "+", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "i", "=", "0", ";", "i", "<=", "t", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "(", "j", "=", "0", ";", "j", "<=", "t", ";", "j", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "i", "][", "j", "]=", "0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "(", "k", "--)", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "\",&", "i", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "Ġ%", "d", "\",&", "i", ",&", "j", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "(", "i", "Ġ&&", "Ġj", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "i", "][", "j", "+", "n", "]=", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(", "i", "=", "1", ";", "i", "<=", "n", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "0", "][", "i", "]=", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "(;", "i", "<", "t", ";", "i", "++)", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġc", "[", "i", "][", "t", "]=", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"%", "d", "\\", "n", "\",", "flow", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::935", "code": "#include<cstdio>\nint main(int argc, char **argv) {\n  unsigned int port = 65637, id = 257;\n  bool topo = false;\n  for (i = 1; i + 1 < argc; ++i) {\n    if (!strcmp(argv[i], \"-p\"))\n      sscanf(argv[++i], &port);\n    else if (!strcmp(argv[i], \"-t\"))\n      topo |= serv.Load(argv[++i]);\n    else if (!strcmp(argv[i], \"-d\"))\n      sscanf(argv[++i], \"%d\", &id);\n  }\n  if (!serv.SetPort(port))\n    return 0;\n  while (1) {\n    serv.Wait();\n    if (!strcmp(cmd, \"send\"))\n      serv.Send();\n    else if (!strcmp(cmd, \"update\")) {\n      scanf(\"%d %d\", &id, &cost);\n      serv.Update(id, cost);\n    }\n    else if (!strcmp(cmd, \"display\"))\n      serv.Display()\n  }\n}\n", "code_tokens": ["Ġ#", "include", "<", "c", "stdio", ">", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ġ{", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġport", "Ġ=", "Ġ6", "56", "37", ",", "Ġid", "Ġ=", "Ġ2", "57", ";", "Ċ", "Ġ", "Ġbool", "Ġtopo", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ1", ";", "Ġi", "Ġ+", "Ġ1", "Ġ<", "Ġargc", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "strcmp", "(", "argv", "[", "i", "],", "Ġ\"-", "p", "\"))", "Ċ", "ĠĠĠĠĠ", "Ġsscanf", "(", "argv", "[++", "i", "],", "Ġ&", "port", ");", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(!", "strcmp", "(", "argv", "[", "i", "],", "Ġ\"-", "t", "\"))", "Ċ", "ĠĠĠĠĠ", "Ġtopo", "Ġ|=", "Ġserv", ".", "Load", "(", "argv", "[++", "i", "]);", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(!", "strcmp", "(", "argv", "[", "i", "],", "Ġ\"-", "d", "\"))", "Ċ", "ĠĠĠĠĠ", "Ġsscanf", "(", "argv", "[++", "i", "],", "Ġ\"%", "d", "\",", "Ġ&", "id", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ(!", "serv", ".", "Set", "Port", "(", "port", "))", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "1", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġserv", ".", "Wait", "();", "Ċ", "ĠĠĠ", "Ġif", "Ġ(!", "strcmp", "(", "cmd", ",", "Ġ\"", "send", "\"))", "Ċ", "ĠĠĠĠĠ", "Ġserv", ".", "Send", "();", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(!", "strcmp", "(", "cmd", ",", "Ġ\"", "update", "\"))", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġscanf", "(\"%", "d", "Ġ%", "d", "\",", "Ġ&", "id", ",", "Ġ&", "cost", ");", "Ċ", "ĠĠĠĠĠ", "Ġserv", ".", "Update", "(", "id", ",", "Ġcost", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġelse", "Ġif", "Ġ(!", "strcmp", "(", "cmd", ",", "Ġ\"", "display", "\"))", "Ċ", "ĠĠĠĠĠ", "Ġserv", ".", "Display", "()", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::936", "code": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma comment(linker,\"/stack:1024000000,1024000000\")\n#define db(x) cout<<(x)<<endl\n#define pf(x) push_front(x)\n#define pb(x) push_back(x)\n#define mp(x,y) make_pair(x,y)\n#define ms(x,y) memset(x,y,sizeof x)\ntypedef long long LL;\nconst double pi=acos(-1),eps=1e-9;\nconst LL inf=0x3f3f3f3f,mod=1e9+7,maxn=1123456;\nLL n,k,t;\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>k>>t;\n\tif(t>=n+k)\n\t\tdb(0);\n\telse if(t<=k)\n\t\tdb(t);\n\telse if(t<=n)\n\t\tdb(k);\n\telse\n\t\tdb(n-t+k);\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "std", "c", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "pragma", "Ġcomment", "(", "linker", ",\"", "/", "stack", ":", "1024", "000000", ",", "1024", "000000", "\")", "Ċ", "#", "define", "Ġdb", "(", "x", ")", "Ġcout", "<<(", "x", ")<<", "endl", "Ċ", "#", "define", "Ġpf", "(", "x", ")", "Ġpush", "_", "front", "(", "x", ")", "Ċ", "#", "define", "Ġpb", "(", "x", ")", "Ġpush", "_", "back", "(", "x", ")", "Ċ", "#", "define", "Ġmp", "(", "x", ",", "y", ")", "Ġmake", "_", "pair", "(", "x", ",", "y", ")", "Ċ", "#", "define", "Ġms", "(", "x", ",", "y", ")", "Ġmemset", "(", "x", ",", "y", ",", "sizeof", "Ġx", ")", "Ċ", "typedef", "Ġlong", "Ġlong", "ĠLL", ";", "Ċ", "const", "Ġdouble", "Ġpi", "=", "acos", "(-", "1", "),", "eps", "=", "1", "e", "-", "9", ";", "Ċ", "const", "ĠLL", "Ġinf", "=", "0", "x", "3", "f", "3", "f", "3", "f", "3", "f", ",", "mod", "=", "1", "e", "9", "+", "7", ",", "max", "n", "=", "1", "123456", ";", "Ċ", "LL", "Ġn", ",", "k", ",", "t", ";", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "ios", "::", "sync", "_", "with", "_", "stdio", "(", "0", ");", "Ċ", "ĉ", "cin", ">>", "n", ">>", "k", ">>", "t", ";", "Ċ", "ĉ", "if", "(", "t", ">=", "n", "+", "k", ")", "Ċ", "ĉ", "ĉ", "db", "(", "0", ");", "Ċ", "ĉ", "else", "Ġif", "(", "t", "<=", "k", ")", "Ċ", "ĉ", "ĉ", "db", "(", "t", ");", "Ċ", "ĉ", "else", "Ġif", "(", "t", "<=", "n", ")", "Ċ", "ĉ", "ĉ", "db", "(", "k", ");", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "db", "(", "n", "-", "t", "+", "k", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::937", "code": "// Test incrementing the 8-bit memory byte pointed to by RSI. Increment RSI.\n// Note that the sum of the average use of ports 2, 3 and 7 is equal to two,\n// which tends to prove that there are two address generation instructions.\n\nint main() {\n  unsigned char memory[1000];\n  for (int i = 0; i < LOOP_ITERATIONS; ++i) {\n    asm volatile(\n        R\"(\n          movq %[address], %%rsi\n          .rept 1000\n          addb $1, (%%rsi)\n          inc %%rsi\n          .endr\n        )\"\n        :\n        : [address] \"r\"(memory)\n        : \"%rsi\");\n  }\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠTest", "Ġincrement", "ing", "Ġthe", "Ġ8", "-", "bit", "Ġmemory", "Ġbyte", "Ġpointed", "Ġto", "Ġby", "ĠR", "SI", ".", "ĠIncrement", "ĠR", "SI", ".", "Ċ", "//", "ĠNote", "Ġthat", "Ġthe", "Ġsum", "Ġof", "Ġthe", "Ġaverage", "Ġuse", "Ġof", "Ġports", "Ġ2", ",", "Ġ3", "Ġand", "Ġ7", "Ġis", "Ġequal", "Ġto", "Ġtwo", ",", "Ċ", "//", "Ġwhich", "Ġt", "ends", "Ġto", "Ġpro", "ve", "Ġthat", "Ġthere", "Ġare", "Ġtwo", "Ġaddress", "Ġgeneration", "Ġinstructions", ".", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġunsigned", "Ġchar", "Ġmemory", "[", "1000", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠLOOP", "_", "IT", "ERATIONS", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġasm", "Ġvolatile", "(", "Ċ", "ĠĠĠĠĠĠĠ", "ĠR", "\"(", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġmo", "vq", "Ġ%[", "address", "],", "Ġ%%", "rsi", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ.", "re", "pt", "Ġ1000", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġadd", "b", "Ġ$", "1", ",", "Ġ(%", "%", "rsi", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġinc", "Ġ%%", "rsi", "Ċ", "ĠĠĠĠĠĠĠĠĠ", "Ġ.", "end", "r", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ)", "\"", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ:", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ:", "Ġ[", "address", "]", "Ġ\"", "r", "\"(", "memory", ")", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ:", "Ġ\"%", "rsi", "\");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::938", "code": "/**\n * Copyright (c) 2015 - Andrew C. Pacifico - All Rights Reserved.\n * @author Andrew C. Pacifico <andrewcpacifico@gmail.com>\n */\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char *argv[])\n{\n    int n, i, j;\n\n    scanf(\"%d\", &n);\n\n    for (i = 0; i < n; ++i) {\n        for (j = 0; j < n - (i + 1); ++j) {\n            printf(\" \");\n        }\n\n        for (; j < n; ++j) {\n            printf(\"#\");\n        }\n\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "Ġ-", "ĠAnd", "rew", "ĠC", ".", "ĠP", "ac", "ific", "o", "Ġ-", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*", "Ġ@", "author", "ĠAnd", "rew", "ĠC", ".", "ĠP", "ac", "ific", "o", "Ġ<", "and", "re", "wc", "pac", "ific", "o", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġint", "Ġn", ",", "Ġi", ",", "Ġj", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġscanf", "(\"%", "d", "\",", "Ġ&", "n", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "j", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġn", "Ġ-", "Ġ(", "i", "Ġ+", "Ġ1", ");", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"", "Ġ\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(;", "Ġj", "Ġ<", "Ġn", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġprintf", "(\"#", "\");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġprintf", "(\"\\", "n", "\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::939", "code": "/* Copyright 2021 The TensorFlow Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n#include \"pybind11/pybind11.h\"\n#include \"tensorflow/compiler/mlir/lite/flatbuffer_to_mlir.h\"\n#include \"tensorflow/lite/python/analyzer_wrapper/model_analyzer.h\"\n\nPYBIND11_MODULE(_pywrap_analyzer_wrapper, m) {\n  m.def(\n      \"ModelAnalyzer\",\n      [](const std::string& model_path, bool input_is_filepath) {\n        return ::tflite::model_analyzer(model_path, input_is_filepath);\n      },\n      R\"pbdoc(\n    Returns txt dump of the given TFLite file.\n  )pbdoc\");\n  m.def(\n      \"FlatBufferToMlir\",\n      [](const std::string& model_path, bool input_is_filepath) {\n        return ::mlir::TFL::FlatBufferFileToMlir(model_path, input_is_filepath);\n      },\n      R\"pbdoc(\n      Returns MLIR dump of the given TFLite file.\n    )pbdoc\");\n}\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ2", "021", "ĠThe", "ĠTensorFlow", "ĠAuth", "ors", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ċ", "Lic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "you", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "You", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ċ", "ĠĠĠ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ċ", "Unless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "d", "istributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "WITH", "OUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "See", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "limit", "ations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "================================================================", "==============", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "py", "bind", "11", "/", "py", "bind", "11", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "tensorflow", "/", "compiler", "/", "ml", "ir", "/", "lite", "/", "flat", "buffer", "_", "to", "_", "ml", "ir", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "tensorflow", "/", "lite", "/", "python", "/", "analyzer", "_", "wrapper", "/", "model", "_", "analyzer", ".", "h", "\"", "Ċ", "Ċ", "PY", "BIND", "11", "_", "MODULE", "(_", "py", "wrap", "_", "analyzer", "_", "wrapper", ",", "Ġm", ")", "Ġ{", "Ċ", "Ġ", "Ġm", ".", "def", "(", "Ċ", "ĠĠĠĠĠ", "Ġ\"", "Model", "Analyzer", "\",", "Ċ", "ĠĠĠĠĠ", "Ġ[](", "const", "Ġstd", "::", "string", "&", "Ġmodel", "_", "path", ",", "Ġbool", "Ġinput", "_", "is", "_", "filepath", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ::", "tf", "lite", "::", "model", "_", "analyzer", "(", "model", "_", "path", ",", "Ġinput", "_", "is", "_", "filepath", ");", "Ċ", "ĠĠĠĠĠ", "Ġ},", "Ċ", "ĠĠĠĠĠ", "ĠR", "\"", "pb", "doc", "(", "Ċ", "ĠĠĠ", "ĠReturns", "Ġtxt", "Ġdump", "Ġof", "Ġthe", "Ġgiven", "ĠT", "FL", "ite", "Ġfile", ".", "Ċ", "Ġ", "Ġ)", "pb", "doc", "\");", "Ċ", "Ġ", "Ġm", ".", "def", "(", "Ċ", "ĠĠĠĠĠ", "Ġ\"", "Flat", "Buffer", "To", "Ml", "ir", "\",", "Ċ", "ĠĠĠĠĠ", "Ġ[](", "const", "Ġstd", "::", "string", "&", "Ġmodel", "_", "path", ",", "Ġbool", "Ġinput", "_", "is", "_", "filepath", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġ::", "ml", "ir", "::", "T", "FL", "::", "Flat", "Buffer", "FileTo", "Ml", "ir", "(", "model", "_", "path", ",", "Ġinput", "_", "is", "_", "filepath", ");", "Ċ", "ĠĠĠĠĠ", "Ġ},", "Ċ", "ĠĠĠĠĠ", "ĠR", "\"", "pb", "doc", "(", "Ċ", "ĠĠĠĠĠ", "ĠReturns", "ĠM", "LIR", "Ġdump", "Ġof", "Ġthe", "Ġgiven", "ĠT", "FL", "ite", "Ġfile", ".", "Ċ", "ĠĠĠ", "Ġ)", "pb", "doc", "\");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::940", "code": "/*\n * File: IAS-DataModelLib/src/dm/json/exception/JSONHelperException.cpp\n * \n * Copyright (C) 2015, Albert Krzymowski\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n#include \"../../../dm/json/exception/JSONHelperException.h\"\n#include <commonlib/commonlib.h>\n\nnamespace IAS{\nnamespace DM {\nnamespace JSON {\n\n/*************************************************************************/\nJSONHelperException::JSONHelperException(const String& strInfo){\n\tIAS_TRACER;\n\tthis->setInfo(strInfo);\n}\n/*************************************************************************/\nJSONHelperException::JSONHelperException(const String& strInfo, int iLine){\n\tIAS_TRACER;\n\tStringStream ssTmp;\n\tssTmp<<strInfo<<\", line:\"<<iLine;\n\tthis->setInfo(ssTmp.str());\n}\n/*************************************************************************/\nJSONHelperException::~JSONHelperException() throw(){\n\tIAS_TRACER;\n}\n/*************************************************************************/\nconst char* JSONHelperException::getName(){\n\tIAS_TRACER;\n\treturn \"JSONHelperException\";\n}\n\n\n/*************************************************************************/\n\n} /* namespace Impl */\n} /* namespace DM */\n} /* namespace IAS */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠFile", ":", "ĠI", "AS", "-", "DataModel", "Lib", "/", "src", "/", "dm", "/", "json", "/", "exception", "/", "JSON", "Helper", "Exception", ".", "cpp", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", ",", "ĠAl", "bert", "ĠK", "rz", "ym", "ow", "ski", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "ĠĊ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġla", "w", "Ġor", "Ġag", "reed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "../../../", "dm", "/", "json", "/", "exception", "/", "JSON", "Helper", "Exception", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "common", "lib", "/", "common", "lib", ".", "h", ">", "Ċ", "Ċ", "namespace", "ĠI", "AS", "{", "Ċ", "namespace", "ĠDM", "Ġ{", "Ċ", "namespace", "ĠJSON", "Ġ{", "Ċ", "Ċ", "/*************************************************************************/", "Ċ", "JSON", "Helper", "Exception", "::", "JSON", "Helper", "Exception", "(", "const", "ĠString", "&", "Ġstr", "Info", "){", "Ċ", "ĉ", "I", "AS", "_", "TR", "AC", "ER", ";", "Ċ", "ĉ", "this", "->", "set", "Info", "(", "str", "Info", ");", "Ċ", "}", "Ċ", "/*************************************************************************/", "Ċ", "JSON", "Helper", "Exception", "::", "JSON", "Helper", "Exception", "(", "const", "ĠString", "&", "Ġstr", "Info", ",", "Ġint", "Ġi", "Line", "){", "Ċ", "ĉ", "I", "AS", "_", "TR", "AC", "ER", ";", "Ċ", "ĉ", "StringStream", "Ġss", "Tmp", ";", "Ċ", "ĉ", "ss", "Tmp", "<<", "str", "Info", "<<", "\",", "Ġline", ":\"", "<<", "i", "Line", ";", "Ċ", "ĉ", "this", "->", "set", "Info", "(", "ss", "Tmp", ".", "str", "());", "Ċ", "}", "Ċ", "/*************************************************************************/", "Ċ", "JSON", "Helper", "Exception", "::~", "JSON", "Helper", "Exception", "()", "Ġthrow", "(){", "Ċ", "ĉ", "I", "AS", "_", "TR", "AC", "ER", ";", "Ċ", "}", "Ċ", "/*************************************************************************/", "Ċ", "const", "Ġchar", "*", "ĠJSON", "Helper", "Exception", "::", "getName", "(){", "Ċ", "ĉ", "I", "AS", "_", "TR", "AC", "ER", ";", "Ċ", "ĉ", "return", "Ġ\"", "JSON", "Helper", "Exception", "\";", "Ċ", "}", "Ċ", "Ċ", "Ċ", "/*************************************************************************/", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠImpl", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠDM", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠI", "AS", "Ġ*/", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::941", "code": "#include \"RelearnRegularization.h\"\n\nnamespace LinearCRF\n{\n\nRelearnRegularization::RelearnRegularization(\n    double regularizationFactor)\n    : regularizationFactor(regularizationFactor)\n{\n}\n\nvoid RelearnRegularization::Initialize(const vector<double>& _stableValues)\n{\n    stableValues = _stableValues;\n}\n\nvoid RelearnRegularization::UpdateValue(const vector<double>& point\n    , size_t numberOfPoints, double* value)\n{\n    // Calculate normFactor\n    double normFactor = 0;\n    for (size_t it = 0; it < point.size(); ++it)\n    {\n        double difference = point[it] - stableValues[it];\n        normFactor += difference * difference;\n    }\n    *value += numberOfPoints * normFactor / regularizationFactor;\n}\n\nvoid RelearnRegularization::UpdateGradient(\n    const vector<double>&point, size_t numberOfPoints\n    , vector<double>* gradient)\n{\n    // Add norm factor\n    for (size_t it = 0; it < point.size(); ++it)\n    {\n        (*gradient)[it] +=\n            2.0 * numberOfPoints * (point[it] - stableValues[it])\n            / regularizationFactor;\n    }\n}\n\nvoid RelearnRegularization::SetRegularizationFactor(double factor)\n{\n    regularizationFactor = factor;\n}\n\ndouble RelearnRegularization::GetRegularizationFactor()\n{\n    return regularizationFactor;\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Re", "learn", "Regular", "ization", ".", "h", "\"", "Ċ", "Ċ", "namespace", "ĠLinear", "CRF", "Ċ", "{", "Ċ", "Ċ", "Re", "learn", "Regular", "ization", "::", "Re", "learn", "Regular", "ization", "(", "Ċ", "ĠĠĠ", "Ġdouble", "Ġregular", "ization", "Factor", ")", "Ċ", "ĠĠĠ", "Ġ:", "Ġregular", "ization", "Factor", "(", "regular", "ization", "Factor", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRe", "learn", "Regular", "ization", "::", "Initialize", "(", "const", "Ġvector", "<", "double", ">&", "Ġ_", "stable", "Values", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġstable", "Values", "Ġ=", "Ġ_", "stable", "Values", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRe", "learn", "Regular", "ization", "::", "Update", "Value", "(", "const", "Ġvector", "<", "double", ">&", "Ġpoint", "Ċ", "ĠĠĠ", "Ġ,", "Ġsize", "_", "t", "ĠnumberOf", "Points", ",", "Ġdouble", "*", "Ġvalue", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠCalculate", "Ġnorm", "Factor", "Ċ", "ĠĠĠ", "Ġdouble", "Ġnorm", "Factor", "Ġ=", "Ġ0", ";", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "size", "_", "t", "Ġit", "Ġ=", "Ġ0", ";", "Ġit", "Ġ<", "Ġpoint", ".", "size", "();", "Ġ++", "it", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġdouble", "Ġdifference", "Ġ=", "Ġpoint", "[", "it", "]", "Ġ-", "Ġstable", "Values", "[", "it", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġnorm", "Factor", "Ġ+=", "Ġdifference", "Ġ*", "Ġdifference", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġ*", "value", "Ġ+=", "ĠnumberOf", "Points", "Ġ*", "Ġnorm", "Factor", "Ġ/", "Ġregular", "ization", "Factor", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRe", "learn", "Regular", "ization", "::", "Update", "Gradient", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġvector", "<", "double", ">&", "point", ",", "Ġsize", "_", "t", "ĠnumberOf", "Points", "Ċ", "ĠĠĠ", "Ġ,", "Ġvector", "<", "double", ">*", "Ġgradient", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠAdd", "Ġnorm", "Ġfactor", "Ċ", "ĠĠĠ", "Ġfor", "Ġ(", "size", "_", "t", "Ġit", "Ġ=", "Ġ0", ";", "Ġit", "Ġ<", "Ġpoint", ".", "size", "();", "Ġ++", "it", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ(*", "gradient", ")[", "it", "]", "Ġ+=", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ2", ".", "0", "Ġ*", "ĠnumberOf", "Points", "Ġ*", "Ġ(", "point", "[", "it", "]", "Ġ-", "Ġstable", "Values", "[", "it", "])", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ/", "Ġregular", "ization", "Factor", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRe", "learn", "Regular", "ization", "::", "Set", "Regular", "ization", "Factor", "(", "double", "Ġfactor", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġregular", "ization", "Factor", "Ġ=", "Ġfactor", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠRe", "learn", "Regular", "ization", "::", "Get", "Regular", "ization", "Factor", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġregular", "ization", "Factor", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::942", "code": "#include <boost/algorithm/string/split.hpp>\n\n#include \"chess_protocol_helper.h\"\n\nusing namespace std;\n\nnamespace Bee\n{\n\nnamespace\n{\n\nbool isDelimiter(const char c)\n{\n\treturn (c == ' ' || c == '\\t');\n}\n\n}\n\nvoid ChessProtocolHelper::split(const string& command, vector<string>& output)\n{\n\tboost::algorithm::split(output, command, isDelimiter,\n\t\tboost::algorithm::token_compress_on);\n}\n\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "boost", "/", "algorithm", "/", "string", "/", "split", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "ch", "ess", "_", "protocol", "_", "helper", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "namespace", "ĠB", "ee", "Ċ", "{", "Ċ", "Ċ", "namespace", "Ċ", "{", "Ċ", "Ċ", "bool", "Ġis", "Delimiter", "(", "const", "Ġchar", "Ġc", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ(", "c", "Ġ==", "Ġ'", "Ġ'", "Ġ||", "Ġc", "Ġ==", "Ġ'\\", "t", "');", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠChe", "ss", "Protocol", "Helper", "::", "split", "(", "const", "Ġstring", "&", "Ġcommand", ",", "Ġvector", "<", "string", ">&", "Ġoutput", ")", "Ċ", "{", "Ċ", "ĉ", "boost", "::", "algorithm", "::", "split", "(", "output", ",", "Ġcommand", ",", "Ġis", "Delimiter", ",", "Ċ", "ĉ", "ĉ", "boost", "::", "algorithm", "::", "token", "_", "compress", "_", "on", ");", "Ċ", "}", "Ċ", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::943", "code": "#include <cstdio>\r\n#include <cstring>\r\nusing namespace std;\r\nint main(void)\r\n{\r\n\tint t, n;\r\n\tint a[105];\r\n\tchar s[10];\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--) {\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor(int i = 1; i <= n; i++) {\r\n\t\t\tscanf(\"%s\", &s);\r\n\t\t\t\r\n\t\t\tif(!strcmp(s, \"LEFT\"))\r\n\t\t\t\ta[i] = -1;\r\n\t\t\telse if(!strcmp(s, \"RIGHT\"))\r\n\t\t\t\ta[i] = 1;\r\n\t\t\telse {\r\n\t\t\t\tchar aa[10];\r\n\t\t\t\tint pos;\r\n\t\t\t\tscanf(\"%s %d\", aa, &pos);\r\n\t\t\t\ta[i] = a[pos];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tint ans = 0;\r\n\t\tfor(int i = 1; i <= n; i++)\r\n\t\t\t\tans += a[i];\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "stdio", ">", "č", "Ċ", "#", "include", "Ġ<", "cstring", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "int", "Ġmain", "(", "void", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġt", ",", "Ġn", ";", "č", "Ċ", "ĉ", "int", "Ġa", "[", "105", "];", "č", "Ċ", "ĉ", "char", "Ġs", "[", "10", "];", "č", "Ċ", "ĉ", "scanf", "(\"%", "d", "\",", "Ġ&", "t", ");", "č", "Ċ", "ĉ", "while", "(", "t", "--)", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "scanf", "(\"%", "d", "\",", "Ġ&", "n", ");", "č", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "č", "Ċ", "ĉĉ", "ĉ", "scanf", "(\"%", "s", "\",", "Ġ&", "s", ");", "č", "Ċ", "ĉĉĉ", "č", "Ċ", "ĉĉ", "ĉ", "if", "(!", "strcmp", "(", "s", ",", "Ġ\"", "LEFT", "\"))", "č", "Ċ", "ĉĉĉ", "ĉ", "a", "[", "i", "]", "Ġ=", "Ġ-", "1", ";", "č", "Ċ", "ĉĉ", "ĉ", "else", "Ġif", "(!", "strcmp", "(", "s", ",", "Ġ\"", "RIGHT", "\"))", "č", "Ċ", "ĉĉĉ", "ĉ", "a", "[", "i", "]", "Ġ=", "Ġ1", ";", "č", "Ċ", "ĉĉ", "ĉ", "else", "Ġ{", "č", "Ċ", "ĉĉĉ", "ĉ", "char", "Ġaa", "[", "10", "];", "č", "Ċ", "ĉĉĉ", "ĉ", "int", "Ġpos", ";", "č", "Ċ", "ĉĉĉ", "ĉ", "scanf", "(\"%", "s", "Ġ%", "d", "\",", "Ġaa", ",", "Ġ&", "pos", ");", "č", "Ċ", "ĉĉĉ", "ĉ", "a", "[", "i", "]", "Ġ=", "Ġa", "[", "pos", "];", "č", "Ċ", "ĉĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉĉ", "č", "Ċ", "ĉ", "ĉ", "int", "Ġans", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "č", "Ċ", "ĉĉĉ", "ĉ", "ans", "Ġ+=", "Ġa", "[", "i", "];", "č", "Ċ", "ĉ", "ĉ", "printf", "(\"%", "d", "\\", "n", "\",", "Ġans", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::944", "code": "﻿/*\n* Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\").\n* You may not use this file except in compliance with the License.\n* A copy of the License is located at\n*\n*  http://aws.amazon.com/apache2.0\n*\n* or in the \"license\" file accompanying this file. This file is distributed\n* on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n* express or implied. See the License for the specific language governing\n* permissions and limitations under the License.\n*/\n\n#include <aws/iotanalytics/model/GetDatasetContentRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n#include <aws/core/http/URI.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\n#include <utility>\n\nusing namespace Aws::IoTAnalytics::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\nusing namespace Aws::Http;\n\nGetDatasetContentRequest::GetDatasetContentRequest() : \n    m_datasetNameHasBeenSet(false),\n    m_versionIdHasBeenSet(false)\n{\n}\n\nAws::String GetDatasetContentRequest::SerializePayload() const\n{\n  return {};\n}\n\nvoid GetDatasetContentRequest::AddQueryStringParameters(URI& uri) const\n{\n    Aws::StringStream ss;\n    if(m_versionIdHasBeenSet)\n    {\n      ss << m_versionId;\n      uri.AddQueryStringParameter(\"versionId\", ss.str());\n      ss.str(\"\");\n    }\n\n}\n\n\n\n", "code_tokens": ["Ġ", "ï", "»", "¿", "/*", "Ċ", "*", "ĠCopyright", "Ġ2010", "-", "2017", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaff", "ili", "ates", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "*", "Ċ", "*", "ĠLic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\").", "Ċ", "*", "ĠYou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "*", "ĠA", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġis", "Ġlocated", "Ġat", "Ċ", "*", "Ċ", "*", "Ġ", "Ġhttp", "://", "aws", ".", "amazon", ".", "com", "/", "apache", "2", ".", "0", "Ċ", "*", "Ċ", "*", "Ġor", "Ġin", "Ġthe", "Ġ\"", "license", "\"", "Ġfile", "Ġac", "company", "ing", "Ġthis", "Ġfile", ".", "ĠThis", "Ġfile", "Ġis", "Ġdistributed", "Ċ", "*", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠB", "AS", "IS", ",", "ĠWITHOUT", "ĠWARRANTIES", "ĠOR", "ĠCONDITION", "S", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ċ", "*", "Ġexpress", "Ġor", "Ġimplied", ".", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgover", "ning", "Ċ", "*", "Ġpermissions", "Ġand", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "iot", "analytics", "/", "model", "/", "Get", "Dataset", "Content", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "Json", "Serializer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "http", "/", "URI", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "stl", "/", "AWS", "StringStream", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Io", "T", "Analytics", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Utils", "::", "Json", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Utils", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Http", ";", "Ċ", "Ċ", "Get", "Dataset", "Content", "Request", "::", "Get", "Dataset", "Content", "Request", "()", "Ġ:", "ĠĊ", "ĠĠĠ", "Ġm", "_", "dataset", "Name", "HasBeenSet", "(", "false", "),", "Ċ", "ĠĠĠ", "Ġm", "_", "version", "Id", "HasBeenSet", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Aws", "::", "String", "ĠGet", "Dataset", "Content", "Request", "::", "Serialize", "Payload", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ{};", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGet", "Dataset", "Content", "Request", "::", "Add", "QueryString", "Parameters", "(", "URI", "&", "Ġuri", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠAws", "::", "StringStream", "Ġss", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "m", "_", "version", "Id", "HasBeenSet", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġss", "Ġ<<", "Ġm", "_", "version", "Id", ";", "Ċ", "ĠĠĠĠĠ", "Ġuri", ".", "Add", "QueryString", "Parameter", "(\"", "version", "Id", "\",", "Ġss", ".", "str", "());", "Ċ", "ĠĠĠĠĠ", "Ġss", ".", "str", "(\"\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::945", "code": "// Do NEVER include directly this file, it is already included by assert.hpp!\n\n#ifndef _BOGEYMAN_PRINT_ERROR_LINE\n# define _BOGEYMAN_PRINT_ERROR_LINE\t\tBOGEYMAN_DEFAULT_PRINT_ERROR_LINE\n#endif // !_BOGEYMAN_PRINT_ERROR_LINE_TO_OUTPUT\n\n#if _BOGEYMAN_PRINT_ERROR_LINE == BOGEYMAN_PRINT_ERROR_LINE_TO_OUTPUT\n# include <iostream>\n# define BOGEYMAN_PRINT_ERROR_LINE()\tstd::cerr << \"Assertion error: \" << __FILE__ << \" line \" << __LINE__ << std::endl\n#elif _BOGEYMAN_PRINT_ERROR_LINE == BOGEYMAN_LOG_ERROR_LINE_TO_FILE\n# include \"bogeyman/Logger.hpp\"\n# define BOGEYMAN_PRINT_ERROR_LINE()\tbogeyman::Logger::getInstance().logErrorLine(__FILE__, __LINE__)\n#elif _BOGEYMAN_PRINT_ERROR_LINE == BOGEYMAN_DONT_PRINT_ERROR_LINE\n# define BOGEYMAN_PRINT_ERROR_LINE()\n#else // !_BOGEYMAN_PRINT_ERROR_LINE_TO_OUTPUT\n# error \"Unrecognized value in parameter macro _BOGEYMAN_PRINT_ERROR_LINE_TO_OUTPUT.\"\n#endif // !_BOGEYMAN_PRINT_ERROR_LINE_TO_OUTPUT\n", "code_tokens": ["Ġ//", "ĠDo", "ĠNE", "VER", "Ġinclude", "Ġdirectly", "Ġthis", "Ġfile", ",", "Ġit", "Ġis", "Ġalready", "Ġincluded", "Ġby", "Ġassert", ".", "hpp", "!", "Ċ", "Ċ", "#", "ifndef", "Ġ_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "Ċ", "#", "Ġdefine", "Ġ_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "ĉ", "ĉ", "BO", "GE", "Y", "MAN", "_", "DEFAULT", "_", "PRINT", "_", "ERROR", "_", "LINE", "Ċ", "#", "endif", "Ġ//", "Ġ!_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "_", "TO", "_", "OUTPUT", "Ċ", "Ċ", "#", "if", "Ġ_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "Ġ==", "ĠBO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "_", "TO", "_", "OUTPUT", "Ċ", "#", "Ġinclude", "Ġ<", "i", "ostream", ">", "Ċ", "#", "Ġdefine", "ĠBO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "()", "ĉ", "std", "::", "cerr", "Ġ<<", "Ġ\"", "Assertion", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġ__", "FILE", "__", "Ġ<<", "Ġ\"", "Ġline", "Ġ\"", "Ġ<<", "Ġ__", "LINE", "__", "Ġ<<", "Ġstd", "::", "endl", "Ċ", "#", "elif", "Ġ_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "Ġ==", "ĠBO", "GE", "Y", "MAN", "_", "LOG", "_", "ERROR", "_", "LINE", "_", "TO", "_", "FILE", "Ċ", "#", "Ġinclude", "Ġ\"", "bo", "ge", "ym", "an", "/", "Logger", ".", "hpp", "\"", "Ċ", "#", "Ġdefine", "ĠBO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "()", "ĉ", "bo", "ge", "ym", "an", "::", "Logger", "::", "getInstance", "().", "logError", "Line", "(__", "FILE", "__,", "Ġ__", "LINE", "__)", "Ċ", "#", "elif", "Ġ_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "Ġ==", "ĠBO", "GE", "Y", "MAN", "_", "DONT", "_", "PRINT", "_", "ERROR", "_", "LINE", "Ċ", "#", "Ġdefine", "ĠBO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "()", "Ċ", "#", "else", "Ġ//", "Ġ!_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "_", "TO", "_", "OUTPUT", "Ċ", "#", "Ġerror", "Ġ\"", "Unrecognized", "Ġvalue", "Ġin", "Ġparameter", "Ġmacro", "Ġ_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "_", "TO", "_", "OUTPUT", ".\"", "Ċ", "#", "endif", "Ġ//", "Ġ!_", "BO", "GE", "Y", "MAN", "_", "PRINT", "_", "ERROR", "_", "LINE", "_", "TO", "_", "OUTPUT", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::946", "code": "/*\n\tBy: facug91\n\tFrom: http://coj.uci.cu/24h/problem.xhtml?abb=1188\n\tName: Cow Multiplication\n\tNumber: 1188\n\tDate: 11/11/2013\n*/\n\n#include <iostream>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <list>\n#include <iterator>\n#include <cstdlib>\n#include <set>\n\nusing namespace std;\n\nint main () {\n\tstring a, b;\n\tint i, j, total = 0;\n\tcin>>a>>b;\n\t\n\tfor (i=0; i<a.size(); i++) {\n\t\tfor (j=0; j<b.size(); j++) {\n\t\t\ttotal += ((a[i]-'0') * (b[j]-'0'));\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\",total);\n\t\n\treturn 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĉ", "By", ":", "Ġfac", "ug", "91", "Ċ", "ĉ", "From", ":", "Ġhttp", "://", "co", "j", ".", "u", "ci", ".", "cu", "/", "24", "h", "/", "problem", ".", "xhtml", "?", "abb", "=", "11", "88", "Ċ", "ĉ", "Name", ":", "ĠC", "ow", "ĠMultip", "lication", "Ċ", "ĉ", "Number", ":", "Ġ1", "188", "Ċ", "ĉ", "Date", ":", "Ġ11", "/", "11", "/", "2013", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "c", "stdio", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "cstring", ">", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "ĉ", "string", "Ġa", ",", "Ġb", ";", "Ċ", "ĉ", "int", "Ġi", ",", "Ġj", ",", "Ġtotal", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "cin", ">>", "a", ">>", "b", ";", "Ċ", "ĉĊ", "ĉ", "for", "Ġ(", "i", "=", "0", ";", "Ġi", "<", "a", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "j", "=", "0", ";", "Ġj", "<", "b", ".", "size", "();", "Ġj", "++)", "Ġ{", "Ċ", "ĉĉ", "ĉ", "total", "Ġ+=", "Ġ((", "a", "[", "i", "]-", "'", "0", "')", "Ġ*", "Ġ(", "b", "[", "j", "]-", "'", "0", "'));", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉĊ", "ĉ", "printf", "(\"%", "d", "\\", "n", "\",", "total", ");", "Ċ", "ĉĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::947", "code": "\n#include \"StdAfx.h\"\n\n#include <gtest/gtest.h>\n\nclass PlayFabApiTestTest : public ::testing::Test\n{\nprotected:\n    void SetUp() override\n    {\n\n    }\n\n    void TearDown() override\n    {\n\n    }\n};\n\nTEST_F(PlayFabApiTestTest, ExampleTest)\n{\n    ASSERT_TRUE(true);\n}\n\nGEM_IMPLEMENT_TEST_RUNNER\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "Std", "Afx", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "Ċ", "class", "ĠPlay", "Fab", "Api", "Test", "Test", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ċ", "{", "Ċ", "protected", ":", "Ċ", "ĠĠĠ", "Ġvoid", "ĠSetUp", "()", "Ġoverride", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "ĠT", "earDown", "()", "Ġoverride", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "TEST", "_", "F", "(", "Play", "Fab", "Api", "Test", "Test", ",", "ĠExample", "Test", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠASSERT", "_", "TRUE", "(", "true", ");", "Ċ", "}", "Ċ", "Ċ", "GEM", "_", "IMPLEMENT", "_", "TEST", "_", "RUN", "NER", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::948", "code": "class Solution {\npublic:\n    int maximumGap(vector<int> &num) {\n        int size = num.size();\n        if (size < 2) {\n            return 0;\n        }\n        int maxVal = *max_element(num.begin(), num.end());\n        int minVal = *min_element(num.begin(), num.end());\n        int gap = (maxVal - minVal - 1) / (size - 1) + 1; // ceiling function\n        int bucketSize = (maxVal - minVal) / gap;\n        vector<int> minBucket(bucketSize, INT_MAX);\n        vector<int> maxBucket(bucketSize, INT_MIN);\n        for (int i = 0; i < size; i++) {\n            if (num[i] == minVal || num[i] == maxVal) {\n                continue;\n            }\n            int idx = (num[i] - minVal) / gap;\n            minBucket[idx] = min(minBucket[idx], num[i]);\n            maxBucket[idx] = max(maxBucket[idx], num[i]);\n        }\n        int maxGap = INT_MIN;\n        int prev = minVal;\n        for (int i = 0; i < bucketSize; i++) {\n            if (minBucket[i] != INT_MAX) {\n                maxGap = max(maxGap, minBucket[i] - prev);\n                prev = maxBucket[i];\n            }\n        }\n        maxGap = max(maxGap, maxVal - prev);\n        return maxGap;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġint", "Ġmaximum", "Gap", "(", "vector", "<", "int", ">", "Ġ&", "num", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġsize", "Ġ=", "Ġnum", ".", "size", "();", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "size", "Ġ<", "Ġ2", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġmax", "Val", "Ġ=", "Ġ*", "max", "_", "element", "(", "num", ".", "begin", "(),", "Ġnum", ".", "end", "());", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġmin", "Val", "Ġ=", "Ġ*", "min", "_", "element", "(", "num", ".", "begin", "(),", "Ġnum", ".", "end", "());", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġgap", "Ġ=", "Ġ(", "max", "Val", "Ġ-", "Ġmin", "Val", "Ġ-", "Ġ1", ")", "Ġ/", "Ġ(", "size", "Ġ-", "Ġ1", ")", "Ġ+", "Ġ1", ";", "Ġ//", "Ġce", "iling", "Ġfunction", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġbucket", "Size", "Ġ=", "Ġ(", "max", "Val", "Ġ-", "Ġmin", "Val", ")", "Ġ/", "Ġgap", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "int", ">", "Ġmin", "Bucket", "(", "bucket", "Size", ",", "ĠINT", "_", "MAX", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "int", ">", "Ġmax", "Bucket", "(", "bucket", "Size", ",", "ĠINT", "_", "MIN", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġsize", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "num", "[", "i", "]", "Ġ==", "Ġmin", "Val", "Ġ||", "Ġnum", "[", "i", "]", "Ġ==", "Ġmax", "Val", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġint", "Ġidx", "Ġ=", "Ġ(", "num", "[", "i", "]", "Ġ-", "Ġmin", "Val", ")", "Ġ/", "Ġgap", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġmin", "Bucket", "[", "idx", "]", "Ġ=", "Ġmin", "(", "min", "Bucket", "[", "idx", "],", "Ġnum", "[", "i", "]);", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġmax", "Bucket", "[", "idx", "]", "Ġ=", "Ġmax", "(", "max", "Bucket", "[", "idx", "],", "Ġnum", "[", "i", "]);", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġmax", "Gap", "Ġ=", "ĠINT", "_", "MIN", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġprev", "Ġ=", "Ġmin", "Val", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġbucket", "Size", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "min", "Bucket", "[", "i", "]", "Ġ!=", "ĠINT", "_", "MAX", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġmax", "Gap", "Ġ=", "Ġmax", "(", "max", "Gap", ",", "Ġmin", "Bucket", "[", "i", "]", "Ġ-", "Ġprev", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġprev", "Ġ=", "Ġmax", "Bucket", "[", "i", "];", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġmax", "Gap", "Ġ=", "Ġmax", "(", "max", "Gap", ",", "Ġmax", "Val", "Ġ-", "Ġprev", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġmax", "Gap", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::949", "code": "#include <stdio.h>\nint main()\n{\n\tint n;\n\tint i=0;\n\tscanf(\"%d\", &n);\n\twhile(n != 1){\n\t\tif(n % 2 == 0){\n\t\t\tn /= 2;\n\t\t} else {\n\t\t\tn = (3*n+1)/2;\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\\n\", i);\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "stdio", ".", "h", ">", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġn", ";", "Ċ", "ĉ", "int", "Ġi", "=", "0", ";", "Ċ", "ĉ", "scanf", "(\"%", "d", "\",", "Ġ&", "n", ");", "Ċ", "ĉ", "while", "(", "n", "Ġ!=", "Ġ1", "){", "Ċ", "ĉ", "ĉ", "if", "(", "n", "Ġ%", "Ġ2", "Ġ==", "Ġ0", "){", "Ċ", "ĉĉ", "ĉ", "n", "Ġ/=", "Ġ2", ";", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉĉ", "ĉ", "n", "Ġ=", "Ġ(", "3", "*", "n", "+", "1", ")/", "2", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "i", "++;", "Ċ", "ĉ", "}", "Ċ", "ĉ", "printf", "(\"%", "d", "\\", "n", "\",", "Ġi", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::950", "code": "//TEST FAILS\n#include <string>\n#include <cassert>\nusing namespace std;\n\nint main(){\n  string str1, str2;\n  str1 = string(\"Test\");\n  str2 = string(str1, 2);\n  assert(str2 < str1);\n}\n", "code_tokens": ["Ġ//", "TEST", "ĠFAIL", "S", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġstring", "Ġstr", "1", ",", "Ġstr", "2", ";", "Ċ", "Ġ", "Ġstr", "1", "Ġ=", "Ġstring", "(\"", "Test", "\");", "Ċ", "Ġ", "Ġstr", "2", "Ġ=", "Ġstring", "(", "str", "1", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġassert", "(", "str", "2", "Ġ<", "Ġstr", "1", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::951", "code": "# include<cstdio>\n# include<cmath>\n# include<algorithm>\nusing namespace std;\nint main()\n{\n\tint t,n,m;\n\tdouble ans;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tans=0;\n\t\tscanf(\"%d\",&n);\n\t\tm=n;\n\t\twhile(n)\n\t\t{\n\t\t\tans += (1.0/n);\n\t\t\tn--;\n\t\t}\n\t\tans*=m;\n\t\tprintf(\"%.2lf\\n\",ans);\n\t}\n\treturn 0;\n}", "code_tokens": ["Ġ#", "Ġinclude", "<", "c", "stdio", ">", "Ċ", "#", "Ġinclude", "<", "cm", "ath", ">", "Ċ", "#", "Ġinclude", "<", "algorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġt", ",", "n", ",", "m", ";", "Ċ", "ĉ", "double", "Ġans", ";", "Ċ", "ĉ", "scanf", "(\"%", "d", "\",&", "t", ");", "Ċ", "ĉ", "while", "(", "t", "--)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ans", "=", "0", ";", "Ċ", "ĉ", "ĉ", "scanf", "(\"%", "d", "\",&", "n", ");", "Ċ", "ĉ", "ĉ", "m", "=", "n", ";", "Ċ", "ĉ", "ĉ", "while", "(", "n", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉĉ", "ĉ", "ans", "Ġ+=", "Ġ(", "1", ".", "0", "/", "n", ");", "Ċ", "ĉĉ", "ĉ", "n", "--;", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ans", "*=", "m", ";", "Ċ", "ĉ", "ĉ", "printf", "(\"%.", "2", "lf", "\\", "n", "\",", "ans", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::952", "code": "#ifndef _MAKESHIFT_CAMERA_HPP_\n#define _MAKESHIFT_CAMERA_HPP_\n\n#include <glm/glm.hpp>\n#include <glm/gtc/matrix_transform.hpp>\n\nclass Camera {\n\npublic:\n    Camera(glm::vec3 pos); \n\n    // Camera Positioning \n    inline void setPosition(glm::vec3 pos) { _pos = pos; }\n    inline void move(glm::vec3 offset) { _pos += offset; }\n    inline const glm::vec3 position() const { return _pos; }\n\n    void changeLook(float pitch, float yaw);\n\tvoid reset();\n    const glm::mat4 rotation() const;\n\n    // Projection Setting Modifications\n    void setFov(float fov);\n    void setAspectRatio(float ratio);\n    void setFar(float far);\n    void setNear(float near);\n    inline const glm::mat4 projection() const { return _proj; }\n\n    glm::vec3 right() const;\n    glm::vec3 up() const;\n    glm::vec3 forward() const;\n\n    const glm::mat4 matrix() const;\n\nprivate:\n    void recalcProjection();\n    void fixAngles();\n\n    glm::vec3 _pos;\n\n    float _pitch;\n    float _yaw;\n\n    float _fov;\n    float _aspRatio;\n    float _far;\n    float _near;\n    glm::mat4 _proj;\n};\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "Ġ_", "MAKE", "SHIFT", "_", "CAMERA", "_", "HP", "P", "_", "Ċ", "#", "define", "Ġ_", "MAKE", "SHIFT", "_", "CAMERA", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "glm", "/", "glm", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "glm", "/", "g", "tc", "/", "matrix", "_", "transform", ".", "hpp", ">", "Ċ", "Ċ", "class", "ĠCamera", "Ġ{", "Ċ", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "ĠCamera", "(", "glm", "::", "vec", "3", "Ġpos", ");", "ĠĊ", "Ċ", "ĠĠĠ", "Ġ//", "ĠCamera", "ĠPosition", "ing", "ĠĊ", "ĠĠĠ", "Ġinline", "Ġvoid", "Ġset", "Position", "(", "glm", "::", "vec", "3", "Ġpos", ")", "Ġ{", "Ġ_", "pos", "Ġ=", "Ġpos", ";", "Ġ}", "Ċ", "ĠĠĠ", "Ġinline", "Ġvoid", "Ġmove", "(", "glm", "::", "vec", "3", "Ġoffset", ")", "Ġ{", "Ġ_", "pos", "Ġ+=", "Ġoffset", ";", "Ġ}", "Ċ", "ĠĠĠ", "Ġinline", "Ġconst", "Ġglm", "::", "vec", "3", "Ġposition", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġ_", "pos", ";", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġchange", "Look", "(", "float", "Ġpitch", ",", "Ġfloat", "Ġyaw", ");", "Ċ", "ĉ", "void", "Ġreset", "();", "Ċ", "ĠĠĠ", "Ġconst", "Ġglm", "::", "mat", "4", "Ġrotation", "()", "Ġconst", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġ//", "ĠProjection", "ĠSetting", "ĠMod", "ifications", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "F", "ov", "(", "float", "Ġf", "ov", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "AspectRatio", "(", "float", "Ġratio", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "Far", "(", "float", "Ġfar", ");", "Ċ", "ĠĠĠ", "Ġvoid", "Ġset", "Near", "(", "float", "Ġnear", ");", "Ċ", "ĠĠĠ", "Ġinline", "Ġconst", "Ġglm", "::", "mat", "4", "Ġprojection", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġ_", "proj", ";", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġglm", "::", "vec", "3", "Ġright", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġglm", "::", "vec", "3", "Ġup", "()", "Ġconst", ";", "Ċ", "ĠĠĠ", "Ġglm", "::", "vec", "3", "Ġforward", "()", "Ġconst", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġconst", "Ġglm", "::", "mat", "4", "Ġmatrix", "()", "Ġconst", ";", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġre", "calc", "Projection", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġfix", "Angles", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġglm", "::", "vec", "3", "Ġ_", "pos", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġfloat", "Ġ_", "pitch", ";", "Ċ", "ĠĠĠ", "Ġfloat", "Ġ_", "yaw", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġfloat", "Ġ_", "fov", ";", "Ċ", "ĠĠĠ", "Ġfloat", "Ġ_", "asp", "Ratio", ";", "Ċ", "ĠĠĠ", "Ġfloat", "Ġ_", "far", ";", "Ċ", "ĠĠĠ", "Ġfloat", "Ġ_", "near", ";", "Ċ", "ĠĠĠ", "Ġglm", "::", "mat", "4", "Ġ_", "proj", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::953", "code": "class Solution {\npublic:\n    bool hasAlternatingBits(int n) {\n        int m = -1;\n        while (n > 0) {\n            if (n % 2 == m)\n                return false;\n            m = n % 2;\n            n = n / 2;\n        }\n        return true;\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġbool", "Ġhas", "Al", "tern", "ating", "Bits", "(", "int", "Ġn", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġm", "Ġ=", "Ġ-", "1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "n", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "n", "Ġ%", "Ġ2", "Ġ==", "Ġm", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġfalse", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġm", "Ġ=", "Ġn", "Ġ%", "Ġ2", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġn", "Ġ=", "Ġn", "Ġ/", "Ġ2", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::954", "code": "/*\n * discursive_debug.cpp\n *\n *  Created on: Aug 19, 2010\n *      Author: Hunter Davis\n */\n\n#include \"./discursive_print.h\"\n#include \"../main/configuration_agent.h\"\nextern ConfigurationAgent configAgent;\n\n// -------------------------------------------------------------------------\n// API :: DiscursivePrint\n// PURPOSE :: it's printf that can be updated to work with guis etc\n//         ::\n// PARAMETERS :: std::string printMessage - printf first argument\n//            :: ... - any formatting arguments or parameters to printf\n// RETURN :: void - this is a 100% replacement for printf\n// -------------------------------------------------------------------------\nvoid DiscursivePrint(std::string printMessage,...)\n{\n\tint printMode = configAgent.returnOptionByName(\"printMode\");\n\n\tif(printMode == 0)\n\t{\n\t\tva_list args;\n\t\tva_start( args, printMessage );\n\t\tvprintf(printMessage.c_str(), args );\n\t\tva_end( args );\n\t}\n\telse if(printMode == 1)\n\t{\n\t\tFILE * outFile;\n\t\tstd::string outputFileName = configAgent.returnPrintModeFileName();\n\t\toutFile = fopen (outputFileName.c_str(),\"a\");\n\t\tva_list args;\n\t\tva_start( args, printMessage );\n\t\tvfprintf(outFile,printMessage.c_str(), args );\n\t\tva_end( args );\n\t\tfclose (outFile);\n\t}\n\telse if(printMode == 2)\n\t{\n\t\t// ignore 2 - it's the ignore flag\n\t}\n\telse\n\t{\n\t\tDiscursiveError(\"Incorrect Print Mode Set %d\\n\",printMode);\n\t}\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġdis", "cursive", "_", "debug", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠAug", "Ġ19", ",", "Ġ2010", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "ĠH", "unter", "ĠD", "av", "is", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"./", "dis", "cursive", "_", "print", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"../", "main", "/", "configuration", "_", "agent", ".", "h", "\"", "Ċ", "extern", "ĠConfiguration", "Agent", "Ġconfig", "Agent", ";", "Ċ", "Ċ", "//", "Ġ------------------------------------------------------------------------", "-", "Ċ", "//", "ĠAPI", "Ġ::", "ĠDis", "cursive", "Print", "Ċ", "//", "ĠPURPOSE", "Ġ::", "Ġit", "'s", "Ġprintf", "Ġthat", "Ġcan", "Ġbe", "Ġupdated", "Ġto", "Ġwork", "Ġwith", "Ġgu", "is", "Ġetc", "Ċ", "//", "ĠĠĠĠĠĠĠĠ", "Ġ::", "Ċ", "//", "ĠPARAMETERS", "Ġ::", "Ġstd", "::", "string", "Ġprint", "Message", "Ġ-", "Ġprintf", "Ġfirst", "Ġargument", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ::", "Ġ...", "Ġ-", "Ġany", "Ġformatting", "Ġarguments", "Ġor", "Ġparameters", "Ġto", "Ġprintf", "Ċ", "//", "ĠRETURN", "Ġ::", "Ġvoid", "Ġ-", "Ġthis", "Ġis", "Ġa", "Ġ100", "%", "Ġreplacement", "Ġfor", "Ġprintf", "Ċ", "//", "Ġ------------------------------------------------------------------------", "-", "Ċ", "void", "ĠDis", "cursive", "Print", "(", "std", "::", "string", "Ġprint", "Message", ",", "...)", "Ċ", "{", "Ċ", "ĉ", "int", "Ġprint", "Mode", "Ġ=", "Ġconfig", "Agent", ".", "return", "Option", "ByName", "(\"", "print", "Mode", "\");", "Ċ", "Ċ", "ĉ", "if", "(", "print", "Mode", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "va", "_", "list", "Ġargs", ";", "Ċ", "ĉ", "ĉ", "va", "_", "start", "(", "Ġargs", ",", "Ġprint", "Message", "Ġ);", "Ċ", "ĉ", "ĉ", "v", "printf", "(", "print", "Message", ".", "c", "_", "str", "(),", "Ġargs", "Ġ);", "Ċ", "ĉ", "ĉ", "va", "_", "end", "(", "Ġargs", "Ġ);", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġif", "(", "print", "Mode", "Ġ==", "Ġ1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "FILE", "Ġ*", "ĠoutFile", ";", "Ċ", "ĉ", "ĉ", "std", "::", "string", "Ġoutput", "FileName", "Ġ=", "Ġconfig", "Agent", ".", "return", "Print", "Mode", "FileName", "();", "Ċ", "ĉ", "ĉ", "outFile", "Ġ=", "Ġfopen", "Ġ(", "output", "FileName", ".", "c", "_", "str", "(),\"", "a", "\");", "Ċ", "ĉ", "ĉ", "va", "_", "list", "Ġargs", ";", "Ċ", "ĉ", "ĉ", "va", "_", "start", "(", "Ġargs", ",", "Ġprint", "Message", "Ġ);", "Ċ", "ĉ", "ĉ", "vf", "printf", "(", "outFile", ",", "print", "Message", ".", "c", "_", "str", "(),", "Ġargs", "Ġ);", "Ċ", "ĉ", "ĉ", "va", "_", "end", "(", "Ġargs", "Ġ);", "Ċ", "ĉ", "ĉ", "fclose", "Ġ(", "outFile", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġif", "(", "print", "Mode", "Ġ==", "Ġ2", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġignore", "Ġ2", "Ġ-", "Ġit", "'s", "Ġthe", "Ġignore", "Ġflag", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Dis", "cursive", "Error", "(\"", "Incorrect", "ĠPrint", "ĠMode", "ĠSet", "Ġ%", "d", "\\", "n", "\",", "print", "Mode", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::955", "code": "#include <QtWidgets/QApplication>\n#include <QtWidgets/QTableWidget>\n#include <QString>\n#include <cstdint>\n#include <vector>\n#include <map>\n#include <dqtx/QDensityWidget.hpp>\n#include <random>\n\nclass distribution : public QObject\n{\n    Q_OBJECT\n   private:\n    QTableWidget m_table;\n    dqtx::QDensityWidget m_normalWidget;\n    dqtx::QDensityWidget m_lognormalWidget;\n    dqtx::QDensityWidget m_bernoulliWidget;\n    dqtx::QDensityWidget m_bimodalWidget;\n\n    std::default_random_engine m_generator;\n    std::normal_distribution< double > m_normalRand;\n    std::normal_distribution< double > m_normalRandNonzero;\n    std::lognormal_distribution< double > m_lognormalRand;\n    std::bernoulli_distribution m_bernoulliRand;\n\n   public:\n    distribution();\n    void initialize();\n\n   private slots:\n    void on_timeout();\n};\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Qt", "Widgets", "/", "Q", "Application", ">", "Ċ", "#", "include", "Ġ<", "Qt", "Widgets", "/", "Q", "Table", "Widget", ">", "Ċ", "#", "include", "Ġ<", "QString", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "int", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "dq", "tx", "/", "Q", "Density", "Widget", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "random", ">", "Ċ", "Ċ", "class", "Ġdistribution", "Ġ:", "Ġpublic", "ĠQObject", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "ĠĠ", "Ġprivate", ":", "Ċ", "ĠĠĠ", "ĠQ", "Table", "Widget", "Ġm", "_", "table", ";", "Ċ", "ĠĠĠ", "Ġdq", "tx", "::", "Q", "Density", "Widget", "Ġm", "_", "normal", "Widget", ";", "Ċ", "ĠĠĠ", "Ġdq", "tx", "::", "Q", "Density", "Widget", "Ġm", "_", "log", "normal", "Widget", ";", "Ċ", "ĠĠĠ", "Ġdq", "tx", "::", "Q", "Density", "Widget", "Ġm", "_", "ber", "no", "ulli", "Widget", ";", "Ċ", "ĠĠĠ", "Ġdq", "tx", "::", "Q", "Density", "Widget", "Ġm", "_", "b", "im", "od", "al", "Widget", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "default", "_", "random", "_", "engine", "Ġm", "_", "generator", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "normal", "_", "distribution", "<", "Ġdouble", "Ġ>", "Ġm", "_", "normal", "Rand", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "normal", "_", "distribution", "<", "Ġdouble", "Ġ>", "Ġm", "_", "normal", "Rand", "Non", "zero", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "log", "normal", "_", "distribution", "<", "Ġdouble", "Ġ>", "Ġm", "_", "log", "normal", "Rand", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "ber", "no", "ulli", "_", "distribution", "Ġm", "_", "ber", "no", "ulli", "Rand", ";", "Ċ", "Ċ", "ĠĠ", "Ġpublic", ":", "Ċ", "ĠĠĠ", "Ġdistribution", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġinitialize", "();", "Ċ", "Ċ", "ĠĠ", "Ġprivate", "Ġslots", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġon", "_", "timeout", "();", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::956", "code": "// check that header compiles\n#include \"pyffi/object_models/scope.hpp\"\nint main()\n{\n    pyffi::object_models::Scope scope;\n    return 0;\n};\n", "code_tokens": ["Ġ//", "Ġcheck", "Ġthat", "Ġheader", "Ġcompile", "s", "Ċ", "#", "include", "Ġ\"", "py", "ffi", "/", "object", "_", "models", "/", "scope", ".", "hpp", "\"", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġpy", "ffi", "::", "object", "_", "models", "::", "Scope", "Ġscope", ";", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::957", "code": "#include <QtGui/QApplication>\n#include \"mainwindow.h\"\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    qpd_MainWindow w;\n    w.show();\n    return a.exec();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Qt", "Gui", "/", "Q", "Application", ">", "Ċ", "#", "include", "Ġ\"", "main", "window", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQApplication", "Ġa", "(", "argc", ",", "Ġargv", ");", "Ċ", "ĠĠĠ", "Ġq", "pd", "_", "MainWindow", "Ġw", ";", "Ċ", "ĠĠĠ", "Ġw", ".", "show", "();", "Ċ", "ĠĠĠ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::958", "code": "<?hh // strict\nnamespace FH;\nuse Iterator;\n\nfinal class Supplies {\n    private function __construct() { }\n\n    public static function empty_<T>(): Supply<T> {\n        return IO::pure(Option::none());\n    }\n\n    public static function fromIterator<T>(Iterator<T> $it): Supply<T> {\n        $rewound = (object)['value' => false];\n        return new IO(function() use($it, $rewound) {\n            if (!$rewound->value) {\n                $it->rewind();\n                $rewound->value = true;\n            }\n            if (!$it->valid()) {\n                return Option::none();\n            }\n            $value = $it->current();\n            $it->next();\n            return Option::some($value);\n        });\n    }\n\n    public static function each<T>(Supply<T> $s, (function(T): IO<mixed>) $f): IO<mixed> {\n        return new IO(function() use($s, $f) {\n            for (;;) {\n                $ok = $s->unsafePerform()->option(\n                    false,\n                    function($x) use($f) {\n                        $f($x)->unsafePerform();\n                        return true;\n                    }\n                );\n                if (!$ok) {\n                    break;\n                }\n            }\n            return null;\n        });\n    }\n}\n", "code_tokens": ["Ġ<?", "hh", "Ġ//", "Ġstrict", "Ċ", "namespace", "ĠF", "H", ";", "Ċ", "use", "ĠIterator", ";", "Ċ", "Ċ", "final", "Ġclass", "ĠSupp", "lies", "Ġ{", "Ċ", "ĠĠĠ", "Ġprivate", "Ġfunction", "Ġ__", "construct", "()", "Ġ{", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġpublic", "Ġstatic", "Ġfunction", "Ġempty", "_<", "T", ">", "():", "ĠSup", "ply", "<", "T", ">", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "ĠIO", "::", "pure", "(", "Option", "::", "none", "());", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġpublic", "Ġstatic", "Ġfunction", "Ġfrom", "Iterator", "<", "T", ">(", "Iterator", "<", "T", ">", "Ġ$", "it", "):", "ĠSup", "ply", "<", "T", ">", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ$", "rew", "ound", "Ġ=", "Ġ(", "object", ")['", "value", "'", "Ġ=>", "Ġfalse", "];", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠIO", "(", "function", "()", "Ġuse", "($", "it", ",", "Ġ$", "rew", "ound", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!$", "rew", "ound", "->", "value", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ$", "it", "->", "rewind", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ$", "rew", "ound", "->", "value", "Ġ=", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!$", "it", "->", "valid", "())", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "ĠOption", "::", "none", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ$", "value", "Ġ=", "Ġ$", "it", "->", "current", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ$", "it", "->", "next", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "ĠOption", "::", "some", "($", "value", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ});", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġpublic", "Ġstatic", "Ġfunction", "Ġeach", "<", "T", ">(", "Supp", "ly", "<", "T", ">", "Ġ$", "s", ",", "Ġ(", "function", "(", "T", "):", "ĠIO", "<", "mixed", ">)", "Ġ$", "f", "):", "ĠIO", "<", "mixed", ">", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġnew", "ĠIO", "(", "function", "()", "Ġuse", "($", "s", ",", "Ġ$", "f", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġfor", "Ġ(;;)", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ$", "ok", "Ġ=", "Ġ$", "s", "->", "unsafe", "Perform", "()->", "option", "(", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġfalse", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġfunction", "($", "x", ")", "Ġuse", "($", "f", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ$", "f", "($", "x", ")->", "unsafe", "Perform", "();", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġtrue", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ);", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(!$", "ok", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġreturn", "Ġnull", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ});", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::959", "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> plusOne(vector<int>& digits) {\n        vector<int> ret(digits);\n        int carry = 1;\n        for (vector<int>::reverse_iterator i = ret.rbegin(), iend = ret.rend(); i != iend; ++i) {\n            *i += carry;\n            carry = *i / 10;\n            *i %= 10;\n        }\n        if (carry)\n            ret.insert(ret.begin(), carry);\n        return ret;\n    }\n};\n\nint main(void)\n{\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĠĠĠ", "Ġvector", "<", "int", ">", "Ġplus", "One", "(", "vector", "<", "int", ">&", "Ġdigits", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "int", ">", "Ġret", "(", "digits", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġint", "Ġcarry", "Ġ=", "Ġ1", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġfor", "Ġ(", "vector", "<", "int", ">::", "reverse", "_", "iterator", "Ġi", "Ġ=", "Ġret", ".", "r", "begin", "(),", "Ġi", "end", "Ġ=", "Ġret", ".", "rend", "();", "Ġi", "Ġ!=", "Ġi", "end", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "i", "Ġ+=", "Ġcarry", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcarry", "Ġ=", "Ġ*", "i", "Ġ/", "Ġ10", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ*", "i", "Ġ%=", "Ġ10", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "carry", ")", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġret", ".", "insert", "(", "ret", ".", "begin", "(),", "Ġcarry", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "Ġret", ";", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::960", "code": "#include \"sim/init.hh\"\n\nextern \"C\" {\n    void init_param_BasicPioDevice();\n}\n\nEmbeddedSwig embed_swig_param_BasicPioDevice(init_param_BasicPioDevice);\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "sim", "/", "init", ".", "hh", "\"", "Ċ", "Ċ", "extern", "Ġ\"", "C", "\"", "Ġ{", "Ċ", "ĠĠĠ", "Ġvoid", "Ġinit", "_", "param", "_", "Basic", "P", "io", "Device", "();", "Ċ", "}", "Ċ", "Ċ", "Embedded", "Sw", "ig", "Ġembed", "_", "swig", "_", "param", "_", "Basic", "P", "io", "Device", "(", "init", "_", "param", "_", "Basic", "P", "io", "Device", ");", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::961", "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\nint main(int argc, char *argv[]) {\n\tstring d, s;\n\twhile (cin >> d >> s)\n\t\t(d.find(s) != string::npos) ? puts(\"Resistente\"): puts(\"Nao resistente\");\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ*", "argv", "[])", "Ġ{", "Ċ", "ĉ", "string", "Ġd", ",", "Ġs", ";", "Ċ", "ĉ", "while", "Ġ(", "cin", "Ġ>>", "Ġd", "Ġ>>", "Ġs", ")", "Ċ", "ĉ", "ĉ", "(", "d", ".", "find", "(", "s", ")", "Ġ!=", "Ġstring", "::", "npos", ")", "Ġ?", "Ġputs", "(\"", "Res", "ist", "ente", "\"):", "Ġputs", "(\"", "N", "ao", "Ġres", "ist", "ente", "\");", "Ċ", "}"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::962", "code": "#include \"tester.hpp\"\n#include \"../sago/platform_folders.h\"\n\nint main() {\n\trun_test(sago::getMusicFolder());\n\tsago::PlatformFolders p;\n\trun_test(p.getMusicFolder());\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "tester", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"../", "s", "ago", "/", "platform", "_", "folders", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "run", "_", "test", "(", "s", "ago", "::", "getM", "usic", "Folder", "());", "Ċ", "ĉ", "s", "ago", "::", "Platform", "Folders", "Ġp", ";", "Ċ", "ĉ", "run", "_", "test", "(", "p", ".", "getM", "usic", "Folder", "());", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::963", "code": "// { dg-do compile }\n// { dg-options \"-pthread\"  }\n// { dg-require-effective-target c++11 }\n// { dg-require-effective-target pthread }\n// { dg-require-cstdint \"\" }\n// { dg-require-gthreads \"\" }\n\n// Copyright (C) 2014-2017 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// libstdc++/60497\n\n#include <mutex>\n#include <memory>\n#include <functional>\n\nstruct A;\ntemplate<typename T> struct B { T t; };\n\nusing UP = std::unique_ptr<B<A>>;\n\nvoid f(UP&) { }\n\nvoid g(UP& p)\n{\n  std::once_flag o;\n  std::call_once(o, f, std::ref(p));\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġdg", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "options", "Ġ\"-", "pthread", "\"", "Ġ", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "effective", "-", "target", "Ġc", "++", "11", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "effective", "-", "target", "Ġpthread", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "c", "std", "int", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġdg", "-", "require", "-", "gth", "reads", "Ġ\"\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "-", "2017", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "//", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOPY", "ING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ċ", "//", "Ġlib", "std", "c", "++", "/", "604", "97", "Ċ", "Ċ", "#", "include", "Ġ<", "mutex", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "Ċ", "struct", "ĠA", ";", "Ċ", "template", "<", "typename", "ĠT", ">", "Ġstruct", "ĠB", "Ġ{", "ĠT", "Ġt", ";", "Ġ};", "Ċ", "Ċ", "using", "ĠUP", "Ġ=", "Ġstd", "::", "unique", "_", "ptr", "<", "B", "<", "A", ">>", ";", "Ċ", "Ċ", "void", "Ġf", "(", "UP", "&)", "Ġ{", "Ġ}", "Ċ", "Ċ", "void", "Ġg", "(", "UP", "&", "Ġp", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "once", "_", "flag", "Ġo", ";", "Ċ", "Ġ", "Ġstd", "::", "call", "_", "once", "(", "o", ",", "Ġf", ",", "Ġstd", "::", "ref", "(", "p", "));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::964", "code": "/**\n * Tests the OutOfDomainException\n */\n#include <cppunit/CompilerOutputter.h>\n#include <cppunit/extensions/TestFactoryRegistry.h>\n#include <cppunit/ui/text/TestRunner.h>\n#include \"OutOfDomainException.h\"\n\nint \nmain(int argc, char* argv[])\n{\n  // Get the top level suite from the registry\n  CppUnit::Test *suite = CppUnit::TestFactoryRegistry::getRegistry().makeTest();\n\n  // Adds the test to the list of test to run\n  CppUnit::TextUi::TestRunner runner;\n  runner.addTest( suite );\n\n  // Change the default outputter to a compiler error format outputter\n  runner.setOutputter( new CppUnit::CompilerOutputter( &runner.result(),\n                                                       std::cerr ) );\n  // Run the tests.\n  bool wasSucessful = runner.run();\n\n  // Return error code 1 if the one of test failed.\n  return wasSucessful ? 0 : 1;\n}\n\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠTests", "Ġthe", "ĠOutOf", "Domain", "Exception", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "Compiler", "Output", "ter", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "extensions", "/", "Test", "Factory", "Registry", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "ui", "/", "text", "/", "TestRunner", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "OutOf", "Domain", "Exception", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġ", "Ċ", "main", "(", "int", "Ġargc", ",", "Ġchar", "*", "Ġargv", "[])", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠGet", "Ġthe", "Ġtop", "Ġlevel", "Ġsuite", "Ġfrom", "Ġthe", "Ġregistry", "Ċ", "Ġ", "ĠCpp", "Unit", "::", "Test", "Ġ*", "suite", "Ġ=", "ĠCpp", "Unit", "::", "Test", "Factory", "Registry", "::", "get", "Registry", "().", "make", "Test", "();", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠAdds", "Ġthe", "Ġtest", "Ġto", "Ġthe", "Ġlist", "Ġof", "Ġtest", "Ġto", "Ġrun", "Ċ", "Ġ", "ĠCpp", "Unit", "::", "Text", "Ui", "::", "TestRunner", "Ġrunner", ";", "Ċ", "Ġ", "Ġrunner", ".", "addTest", "(", "Ġsuite", "Ġ);", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠChange", "Ġthe", "Ġdefault", "Ġoutput", "ter", "Ġto", "Ġa", "Ġcompiler", "Ġerror", "Ġformat", "Ġoutput", "ter", "Ċ", "Ġ", "Ġrunner", ".", "setOutput", "ter", "(", "Ġnew", "ĠCpp", "Unit", "::", "Compiler", "Output", "ter", "(", "Ġ&", "runner", ".", "result", "(),", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ)", "Ġ);", "Ċ", "Ġ", "Ġ//", "ĠRun", "Ġthe", "Ġtests", ".", "Ċ", "Ġ", "Ġbool", "Ġwas", "Su", "cess", "ful", "Ġ=", "Ġrunner", ".", "run", "();", "Ċ", "Ċ", "Ġ", "Ġ//", "ĠReturn", "Ġerror", "Ġcode", "Ġ1", "Ġif", "Ġthe", "Ġone", "Ġof", "Ġtest", "Ġfailed", ".", "Ċ", "Ġ", "Ġreturn", "Ġwas", "Su", "cess", "ful", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::965", "code": "//Copyright (c) 2008-2009 Emil Dotchevski and Reverge Studios, Inc.\n\n//Distributed under the Boost Software License, Version 1.0. (See accompanying\n//file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#include <boost/la/diag_matrix.hpp>\n#include <boost/la/diag.hpp>\n#include <boost/la/vector_mul_eq_scalar.hpp>\n#include <boost/la/array_matrix_traits.hpp>\n#include <boost/la/matrix_assign.hpp>\n#include \"test_la_vector.hpp\"\n#include \"gold.hpp\"\n\nnamespace\n\t{\n\ttemplate <int Dim>\n\tvoid\n\ttest()\n\t\t{\n\t\tusing namespace boost::la;\n\t\ttest_la::vector<V1,Dim> x(42,1);\n\t\tfloat y[Dim][Dim]; assign(y,x|diag_matrix);\n\t\tfor( int i=0; i!=Dim; ++i )\n\t\t\tx.b[i]=y[i][i];\n\t\tBOOST_TEST_LA_EQ(x.a,x.b);\n\t\ttest_la::scalar_multiply_v(x.b,x.a,2.0f);\n\t\tx|diag_matrix|diag *= 2;\n\t\tBOOST_TEST_LA_EQ(x.a,x.b);\n\t\t}\n\t}\n\nint\nmain()\n\t{\n\ttest<2>();\n\ttest<3>();\n\ttest<4>();\n\ttest<5>();\n\treturn boost::report_errors();\n\t}\n", "code_tokens": ["Ġ//", "Copyright", "Ġ(", "c", ")", "Ġ2008", "-", "2009", "ĠEm", "il", "ĠDot", "che", "v", "ski", "Ġand", "ĠRe", "ver", "ge", "ĠSt", "ud", "ios", ",", "ĠInc", ".", "Ċ", "Ċ", "//", "Distributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġac", "company", "ing", "Ċ", "//", "file", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "diag", "_", "matrix", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "diag", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "vector", "_", "mul", "_", "eq", "_", "scalar", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "array", "_", "matrix", "_", "traits", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "matrix", "_", "assign", ".", "hpp", ">", "Ċ", "#", "include", "Ġ\"", "test", "_", "la", "_", "vector", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "gold", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ċ", "ĉ", "{", "Ċ", "ĉ", "template", "Ġ<", "int", "ĠD", "im", ">", "Ċ", "ĉ", "void", "Ċ", "ĉ", "test", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "using", "Ġnamespace", "Ġboost", "::", "la", ";", "Ċ", "ĉ", "ĉ", "test", "_", "la", "::", "vector", "<", "V", "1", ",", "Dim", ">", "Ġx", "(", "42", ",", "1", ");", "Ċ", "ĉ", "ĉ", "float", "Ġy", "[", "Dim", "][", "Dim", "];", "Ġassign", "(", "y", ",", "x", "|", "diag", "_", "matrix", ");", "Ċ", "ĉ", "ĉ", "for", "(", "Ġint", "Ġi", "=", "0", ";", "Ġi", "!=", "Dim", ";", "Ġ++", "i", "Ġ)", "Ċ", "ĉĉ", "ĉ", "x", ".", "b", "[", "i", "]=", "y", "[", "i", "][", "i", "];", "Ċ", "ĉ", "ĉ", "BOOST", "_", "TEST", "_", "LA", "_", "EQ", "(", "x", ".", "a", ",", "x", ".", "b", ");", "Ċ", "ĉ", "ĉ", "test", "_", "la", "::", "scalar", "_", "multiply", "_", "v", "(", "x", ".", "b", ",", "x", ".", "a", ",", "2", ".", "0", "f", ");", "Ċ", "ĉ", "ĉ", "x", "|", "diag", "_", "matrix", "|", "diag", "Ġ*=", "Ġ2", ";", "Ċ", "ĉ", "ĉ", "BOOST", "_", "TEST", "_", "LA", "_", "EQ", "(", "x", ".", "a", ",", "x", ".", "b", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "test", "<", "2", ">();", "Ċ", "ĉ", "test", "<", "3", ">();", "Ċ", "ĉ", "test", "<", "4", ">();", "Ċ", "ĉ", "test", "<", "5", ">();", "Ċ", "ĉ", "return", "Ġboost", "::", "report", "_", "errors", "();", "Ċ", "ĉ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::966", "code": "/******************************************************************************\n *\n * Project:  PROJ\n * Purpose:  Wrapper for nlohmann/json.hpp\n * Author:   Even Rouault <even dot rouault at spatialys dot com>\n *\n ******************************************************************************\n * Copyright (c) 2019, Even Rouault <even dot rouault at spatialys dot com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n ****************************************************************************/\n\n#if defined(__GNUC__)\n#pragma GCC system_header\n#endif\n\n// to avoid any clash if PROJ users have another version of nlohmann/json.hpp\n#define nlohmann proj_nlohmann\n\n#if !defined(DOXYGEN_ENABLED)\n#include \"nlohmann/json.hpp\"\n#endif\n", "code_tokens": ["Ġ/", "************************************************************************", "******", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠProject", ":", "Ġ", "ĠPRO", "J", "Ċ", "Ġ*", "ĠPurpose", ":", "Ġ", "ĠWrapper", "Ġfor", "Ġn", "lo", "hm", "ann", "/", "json", ".", "hpp", "Ċ", "Ġ*", "ĠAuthor", ":", "ĠĠ", "ĠEven", "ĠR", "ou", "ault", "Ġ<", "even", "Ġdot", "Ġro", "ua", "ult", "Ġat", "Ġspatial", "ys", "Ġdot", "Ġcom", ">", "Ċ", "Ġ*", "Ċ", "Ġ*************************************************************************", "*****", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ201", "9", ",", "ĠEven", "ĠR", "ou", "ault", "Ġ<", "even", "Ġdot", "Ġro", "ua", "ult", "Ġat", "Ġspatial", "ys", "Ġdot", "Ġcom", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠPermission", "Ġis", "Ġhere", "by", "Ġgranted", ",", "Ġfree", "Ġof", "Ġcharge", ",", "Ġto", "Ġany", "Ġperson", "Ġobtain", "ing", "Ġa", "Ċ", "Ġ*", "Ġcopy", "Ġof", "Ġthis", "Ġsoftware", "Ġand", "Ġassociated", "Ġdocumentation", "Ġfiles", "Ġ(", "the", "Ġ\"", "Software", "\"),", "Ċ", "Ġ*", "Ġto", "Ġdeal", "Ġin", "Ġthe", "ĠSoftware", "Ġwithout", "Ġrestriction", ",", "Ġincluding", "Ġwithout", "Ġlimitation", "Ċ", "Ġ*", "Ġthe", "Ġrights", "Ġto", "Ġuse", ",", "Ġcopy", ",", "Ġmodify", ",", "Ġmerge", ",", "Ġpublish", ",", "Ġdistribute", ",", "Ġs", "ublic", "ense", ",", "Ċ", "Ġ*", "Ġand", "/", "or", "Ġsell", "Ġcopies", "Ġof", "Ġthe", "ĠSoftware", ",", "Ġand", "Ġto", "Ġpermit", "Ġpers", "ons", "Ġto", "Ġwh", "om", "Ġthe", "Ċ", "Ġ*", "ĠSoftware", "Ġis", "Ġf", "urn", "ish", "ed", "Ġto", "Ġdo", "Ġso", ",", "Ġsubject", "Ġto", "Ġthe", "Ġfollowing", "Ġconditions", ":", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThe", "Ġabove", "Ġcopyright", "Ġnotice", "Ġand", "Ġthis", "Ġpermission", "Ġnotice", "Ġshall", "Ġbe", "Ġincluded", "Ċ", "Ġ*", "Ġin", "Ġall", "Ġcopies", "Ġor", "Ġsub", "stant", "ial", "Ġport", "ions", "Ġof", "Ġthe", "ĠSoftware", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠTHE", "ĠSOFTWARE", "ĠIS", "ĠPRO", "VID", "ED", "Ġ\"", "AS", "ĠIS", "\",", "ĠWITHOUT", "ĠWARR", "AN", "TY", "ĠOF", "ĠANY", "ĠK", "IND", ",", "ĠEX", "PRESS", "Ċ", "Ġ*", "ĠOR", "ĠIMP", "LIED", ",", "ĠIN", "CL", "UDING", "ĠBUT", "ĠNOT", "ĠLIMIT", "ED", "ĠTO", "ĠTHE", "ĠWARRANTIES", "ĠOF", "ĠMER", "CHAN", "TAB", "ILITY", ",", "Ċ", "Ġ*", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", "ĠAND", "ĠNON", "IN", "FR", "IN", "GE", "MENT", ".", "ĠIN", "ĠNO", "ĠEVENT", "ĠSH", "ALL", "Ċ", "Ġ*", "ĠTHE", "ĠAUT", "HOR", "S", "ĠOR", "ĠCOPY", "RIGHT", "ĠH", "OLD", "ERS", "ĠBE", "ĠLI", "ABLE", "ĠFOR", "ĠANY", "ĠCLA", "IM", ",", "ĠDA", "MAGE", "S", "ĠOR", "ĠOTHER", "Ċ", "Ġ*", "ĠLI", "ABILITY", ",", "ĠW", "HE", "THER", "ĠIN", "ĠAN", "ĠACTION", "ĠOF", "ĠCON", "TRACT", ",", "ĠT", "ORT", "ĠOR", "ĠOTHER", "WISE", ",", "ĠAR", "IS", "ING", "Ċ", "Ġ*", "ĠFROM", ",", "ĠOUT", "ĠOF", "ĠOR", "ĠIN", "ĠCONNECTION", "ĠWITH", "ĠTHE", "ĠSOFTWARE", "ĠOR", "ĠTHE", "ĠUSE", "ĠOR", "ĠOTHER", "Ċ", "Ġ*", "ĠDE", "AL", "INGS", "ĠIN", "ĠTHE", "ĠSOFTWARE", ".", "Ċ", "Ġ****************************************************************************/", "Ċ", "Ċ", "#", "if", "Ġdefined", "(__", "GN", "UC", "__)", "Ċ", "#", "pragma", "ĠGCC", "Ġsystem", "_", "header", "Ċ", "#", "endif", "Ċ", "Ċ", "//", "Ġto", "Ġavoid", "Ġany", "Ġc", "lash", "Ġif", "ĠPRO", "J", "Ġusers", "Ġhave", "Ġanother", "Ġversion", "Ġof", "Ġn", "lo", "hm", "ann", "/", "json", ".", "hpp", "Ċ", "#", "define", "Ġn", "lo", "hm", "ann", "Ġproj", "_", "n", "lo", "hm", "ann", "Ċ", "Ċ", "#", "if", "Ġ!", "defined", "(", "DO", "XYGEN", "_", "ENABLED", ")", "Ċ", "#", "include", "Ġ\"", "n", "lo", "hm", "ann", "/", "json", ".", "hpp", "\"", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::967", "code": "//: C15:StaticHierarchyNavigation.cpp\r\n// From Thinking in C++, 2nd Edition\r\n// Available at http://www.BruceEckel.com\r\n// (c) Bruce Eckel 2000\r\n// Copyright notice in Copyright.txt\r\n// Navigating class hierarchies with static_cast\r\n#include <iostream>\r\n#include <typeinfo>\r\nusing namespace std;\r\n\r\nclass Shape { public: virtual ~Shape() {}; };\r\nclass Circle : public Shape {};\r\nclass Square : public Shape {};\r\nclass Other {};\r\n\r\nint main() {\r\n  Circle c;\r\n  Shape* s = &c; // Upcast: normal and OK\r\n  // More explicit but unnecessary:\r\n  s = static_cast<Shape*>(&c);\r\n  // (Since upcasting is such a safe and common\r\n  // operation, the cast becomes cluttering)\r\n  Circle* cp = 0;\r\n  Square* sp = 0;\r\n  // Static Navigation of class hierarchies\r\n  // requires extra type information:\r\n  if(typeid(s) == typeid(cp)) // C++ RTTI\r\n    cp = static_cast<Circle*>(s);\r\n  if(typeid(s) == typeid(sp))\r\n    sp = static_cast<Square*>(s);\r\n  if(cp != 0)\r\n    cout << \"It's a circle!\" << endl;\r\n  if(sp != 0)\r\n    cout << \"It's a square!\" << endl;\r\n  // Static navigation is ONLY an efficiency hack;\r\n  // dynamic_cast is always safer. However:\r\n  // Other* op = static_cast<Other*>(s);\r\n  // Conveniently gives an error message, while\r\n  Other* op2 = (Other*)s;\r\n  // does not\r\n} ///:~\r\n", "code_tokens": ["Ġ//", ":", "ĠC", "15", ":", "Static", "Hierarchy", "Navigation", ".", "cpp", "č", "Ċ", "//", "ĠFrom", "ĠTh", "ink", "ing", "Ġin", "ĠC", "++,", "Ġ2", "nd", "ĠE", "dition", "č", "Ċ", "//", "ĠAvailable", "Ġat", "Ġhttp", "://", "www", ".", "Br", "uce", "E", "ck", "el", ".", "com", "č", "Ċ", "//", "Ġ(", "c", ")", "ĠB", "ru", "ce", "ĠE", "ck", "el", "Ġ2000", "č", "Ċ", "//", "ĠCopyright", "Ġnotice", "Ġin", "ĠCopyright", ".", "txt", "č", "Ċ", "//", "ĠN", "avig", "ating", "Ġclass", "Ġhier", "arch", "ies", "Ġwith", "Ġstatic", "_", "cast", "č", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "č", "Ċ", "#", "include", "Ġ<", "type", "info", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "class", "ĠShape", "Ġ{", "Ġpublic", ":", "Ġvirtual", "Ġ~", "Shape", "()", "Ġ{};", "Ġ};", "č", "Ċ", "class", "ĠCircle", "Ġ:", "Ġpublic", "ĠShape", "Ġ{};", "č", "Ċ", "class", "ĠSquare", "Ġ:", "Ġpublic", "ĠShape", "Ġ{};", "č", "Ċ", "class", "ĠOther", "Ġ{};", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "Ġ", "ĠCircle", "Ġc", ";", "č", "Ċ", "Ġ", "ĠShape", "*", "Ġs", "Ġ=", "Ġ&", "c", ";", "Ġ//", "ĠU", "pc", "ast", ":", "Ġnormal", "Ġand", "ĠOK", "č", "Ċ", "Ġ", "Ġ//", "ĠMore", "Ġexplicit", "Ġbut", "Ġunnecessary", ":", "č", "Ċ", "Ġ", "Ġs", "Ġ=", "Ġstatic", "_", "cast", "<", "Shape", "*>(&", "c", ");", "č", "Ċ", "Ġ", "Ġ//", "Ġ(", "Since", "Ġup", "cast", "ing", "Ġis", "Ġsuch", "Ġa", "Ġsafe", "Ġand", "Ġcommon", "č", "Ċ", "Ġ", "Ġ//", "Ġoperation", ",", "Ġthe", "Ġcast", "Ġbecomes", "Ġcl", "utter", "ing", ")", "č", "Ċ", "Ġ", "ĠCircle", "*", "Ġcp", "Ġ=", "Ġ0", ";", "č", "Ċ", "Ġ", "ĠSquare", "*", "Ġsp", "Ġ=", "Ġ0", ";", "č", "Ċ", "Ġ", "Ġ//", "ĠStatic", "ĠNavigation", "Ġof", "Ġclass", "Ġhier", "arch", "ies", "č", "Ċ", "Ġ", "Ġ//", "Ġrequires", "Ġextra", "Ġtype", "Ġinformation", ":", "č", "Ċ", "Ġ", "Ġif", "(", "typeid", "(", "s", ")", "Ġ==", "Ġtype", "id", "(", "cp", "))", "Ġ//", "ĠC", "++", "ĠRT", "TI", "č", "Ċ", "ĠĠĠ", "Ġcp", "Ġ=", "Ġstatic", "_", "cast", "<", "Circle", "*>(", "s", ");", "č", "Ċ", "Ġ", "Ġif", "(", "typeid", "(", "s", ")", "Ġ==", "Ġtype", "id", "(", "sp", "))", "č", "Ċ", "ĠĠĠ", "Ġsp", "Ġ=", "Ġstatic", "_", "cast", "<", "Square", "*>(", "s", ");", "č", "Ċ", "Ġ", "Ġif", "(", "cp", "Ġ!=", "Ġ0", ")", "č", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "It", "'s", "Ġa", "Ġcircle", "!\"", "Ġ<<", "Ġendl", ";", "č", "Ċ", "Ġ", "Ġif", "(", "sp", "Ġ!=", "Ġ0", ")", "č", "Ċ", "ĠĠĠ", "Ġcout", "Ġ<<", "Ġ\"", "It", "'s", "Ġa", "Ġsquare", "!\"", "Ġ<<", "Ġendl", ";", "č", "Ċ", "Ġ", "Ġ//", "ĠStatic", "Ġnavigation", "Ġis", "ĠONLY", "Ġan", "Ġefficiency", "Ġhack", ";", "č", "Ċ", "Ġ", "Ġ//", "Ġdynamic", "_", "cast", "Ġis", "Ġalways", "Ġsa", "fer", ".", "ĠHowever", ":", "č", "Ċ", "Ġ", "Ġ//", "ĠOther", "*", "Ġop", "Ġ=", "Ġstatic", "_", "cast", "<", "Other", "*>(", "s", ");", "č", "Ċ", "Ġ", "Ġ//", "ĠCon", "venient", "ly", "Ġgives", "Ġan", "Ġerror", "Ġmessage", ",", "Ġwhile", "č", "Ċ", "Ġ", "ĠOther", "*", "Ġop", "2", "Ġ=", "Ġ(", "Other", "*)", "s", ";", "č", "Ċ", "Ġ", "Ġ//", "Ġdoes", "Ġnot", "č", "Ċ", "}", "Ġ///", ":", "~", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::968", "code": "// Boost enable_if library\r\n\r\n// Copyright 2003 (c) The Trustees of Indiana University.\r\n\r\n// Use, modification, and distribution is subject to the Boost Software\r\n// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at\r\n// http://www.boost.org/LICENSE_1_0.txt)\r\n\r\n//    Authors: Jaakko Jarvi (jajarvi at osl.iu.edu)\r\n//             Jeremiah Willcock (jewillco at osl.iu.edu)\r\n//             Andrew Lumsdaine (lums at osl.iu.edu)\r\n\r\n#include <boost/test/minimal.hpp>\r\n#include <boost/mpl/not.hpp>\r\n\r\n#include <boost/utility/enable_if.hpp>\r\n#include <boost/type_traits/is_arithmetic.hpp>\r\n\r\nusing boost::mpl::not_;\r\nusing boost::enable_if;\r\nusing boost::is_arithmetic;\r\n\r\ntemplate<class T>\r\ntypename enable_if<is_arithmetic<T>, bool>::type\r\narithmetic_object(T t) { return true; }\r\n\r\ntemplate<class T>\r\ntypename enable_if<not_<is_arithmetic<T> >, bool>::type\r\narithmetic_object(T t) { return false; }\r\n\r\n\r\nint test_main(int, char*[])\r\n{\r\n \r\n  BOOST_CHECK(arithmetic_object(1));\r\n  BOOST_CHECK(arithmetic_object(1.0));\r\n\r\n  BOOST_CHECK(!arithmetic_object(\"1\"));  \r\n  BOOST_CHECK(!arithmetic_object(static_cast<void*>(0)));  \r\n\r\n  return 0;\r\n}\r\n\r\n", "code_tokens": ["Ġ//", "ĠBo", "ost", "Ġenable", "_", "if", "Ġlibrary", "č", "Ċ", "č", "Ċ", "//", "ĠCopyright", "Ġ2003", "Ġ(", "c", ")", "ĠThe", "ĠTr", "ust", "ees", "Ġof", "ĠInd", "iana", "ĠUn", "ivers", "ity", ".", "č", "Ċ", "č", "Ċ", "//", "ĠUse", ",", "Ġmodification", ",", "Ġand", "Ġdistribution", "Ġis", "Ġsubject", "Ġto", "Ġthe", "ĠBo", "ost", "ĠSoftware", "č", "Ċ", "//", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "č", "Ċ", "//", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "č", "Ċ", "č", "Ċ", "//", "ĠĠĠ", "ĠAuth", "ors", ":", "ĠJ", "a", "ak", "ko", "ĠJ", "ar", "vi", "Ġ(", "j", "aj", "ar", "vi", "Ġat", "Ġos", "l", ".", "iu", ".", "edu", ")", "č", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠJ", "e", "rem", "ia", "h", "ĠWill", "co", "ck", "Ġ(", "j", "ew", "ill", "co", "Ġat", "Ġos", "l", ".", "iu", ".", "edu", ")", "č", "Ċ", "//", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠAnd", "rew", "ĠL", "um", "sda", "ine", "Ġ(", "lum", "s", "Ġat", "Ġos", "l", ".", "iu", ".", "edu", ")", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "minimal", ".", "hpp", ">", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "mpl", "/", "not", ".", "hpp", ">", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "utility", "/", "enable", "_", "if", ".", "hpp", ">", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "type", "_", "traits", "/", "is", "_", "arith", "metic", ".", "hpp", ">", "č", "Ċ", "č", "Ċ", "using", "Ġboost", "::", "mpl", "::", "not", "_;", "č", "Ċ", "using", "Ġboost", "::", "enable", "_", "if", ";", "č", "Ċ", "using", "Ġboost", "::", "is", "_", "arith", "metic", ";", "č", "Ċ", "č", "Ċ", "template", "<", "class", "ĠT", ">", "č", "Ċ", "typename", "Ġenable", "_", "if", "<", "is", "_", "arith", "metic", "<", "T", ">,", "Ġbool", ">::", "type", "č", "Ċ", "arith", "metic", "_", "object", "(", "T", "Ġt", ")", "Ġ{", "Ġreturn", "Ġtrue", ";", "Ġ}", "č", "Ċ", "č", "Ċ", "template", "<", "class", "ĠT", ">", "č", "Ċ", "typename", "Ġenable", "_", "if", "<", "not", "_<", "is", "_", "arith", "metic", "<", "T", ">", "Ġ>,", "Ġbool", ">::", "type", "č", "Ċ", "arith", "metic", "_", "object", "(", "T", "Ġt", ")", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "int", "Ġtest", "_", "main", "(", "int", ",", "Ġchar", "*", "[])", "č", "Ċ", "{", "č", "Ċ", "Ġ", "č", "Ċ", "Ġ", "ĠBOOST", "_", "CHECK", "(", "arith", "metic", "_", "object", "(", "1", "));", "č", "Ċ", "Ġ", "ĠBOOST", "_", "CHECK", "(", "arith", "metic", "_", "object", "(", "1", ".", "0", "));", "č", "Ċ", "č", "Ċ", "Ġ", "ĠBOOST", "_", "CHECK", "(!", "arith", "metic", "_", "object", "(\"", "1", "\"));", "ĠĠ", "č", "Ċ", "Ġ", "ĠBOOST", "_", "CHECK", "(!", "arith", "metic", "_", "object", "(", "static", "_", "cast", "<", "void", "*>(", "0", ")));", "ĠĠ", "č", "Ċ", "č", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::969", "code": "/*\n *  Copyright (C) 2010  Regents of the University of Michigan\n *\n *   This program is free software: you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation, either version 3 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License\n *   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"SamHeaderPG.h\"\n\n// Constructor\nSamHeaderPG::SamHeaderPG()\n{\n    // Add required tags for this type.\n    myType = SamHeaderRecord::PG;\n    myTypeString = \"PG\";\n    addRequiredTag(\"ID\");\n    myKeyTag = \"ID\";   \n}\n\n   \n// Destructor\nSamHeaderPG::~SamHeaderPG()\n{\n}\n\n\nSamHeaderRecord* SamHeaderPG::createCopy() const\n{\n    SamHeaderPG* newPG = new SamHeaderPG();\n    if(newPG == NULL)\n    {\n        std::cerr << \"Failed to create a copy of an PG Header Record\\n\" ;\n        return(NULL);\n    }\n    internalCopy(*newPG);\n\n    return(newPG);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "Ġ", "ĠReg", "ents", "Ġof", "Ġthe", "ĠUn", "ivers", "ity", "Ġof", "ĠM", "ich", "ig", "an", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "ĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "ĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "ĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "ĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ*", "ĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "ĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "licenses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Sam", "Header", "PG", ".", "h", "\"", "Ċ", "Ċ", "//", "ĠConstructor", "Ċ", "Sam", "Header", "PG", "::", "Sam", "Header", "PG", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġ//", "ĠAdd", "Ġrequired", "Ġtags", "Ġfor", "Ġthis", "Ġtype", ".", "Ċ", "ĠĠĠ", "Ġmy", "Type", "Ġ=", "ĠSam", "Header", "Record", "::", "PG", ";", "Ċ", "ĠĠĠ", "Ġmy", "TypeString", "Ġ=", "Ġ\"", "PG", "\";", "Ċ", "ĠĠĠ", "Ġadd", "Required", "Tag", "(\"", "ID", "\");", "Ċ", "ĠĠĠ", "Ġmy", "Key", "Tag", "Ġ=", "Ġ\"", "ID", "\";", "ĠĠĠ", "Ċ", "}", "Ċ", "Ċ", "ĠĠĠ", "Ċ", "//", "ĠDestructor", "Ċ", "Sam", "Header", "PG", "::~", "Sam", "Header", "PG", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Sam", "Header", "Record", "*", "ĠSam", "Header", "PG", "::", "create", "Copy", "()", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠSam", "Header", "PG", "*", "Ġnew", "PG", "Ġ=", "Ġnew", "ĠSam", "Header", "PG", "();", "Ċ", "ĠĠĠ", "Ġif", "(", "new", "PG", "Ġ==", "ĠNULL", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġstd", "::", "cerr", "Ġ<<", "Ġ\"", "Failed", "Ġto", "Ġcreate", "Ġa", "Ġcopy", "Ġof", "Ġan", "ĠPG", "ĠHeader", "ĠRecord", "\\", "n", "\"", "Ġ;", "Ċ", "ĠĠĠĠĠĠĠ", "Ġreturn", "(", "NULL", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġinternal", "Copy", "(*", "new", "PG", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġreturn", "(", "new", "PG", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::970", "code": "#include \"Button.hpp\"\n\nButton::Button( rapidxml::xml_node<> * node ) : ATag( node )\n{\n\n}\n\nvoid Button::init( CoreEngine & coreEngine )\n{\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Button", ".", "hpp", "\"", "Ċ", "Ċ", "Button", "::", "Button", "(", "Ġ", "rap", "idx", "ml", "::", "xml", "_", "node", "<>", "Ġ*", "Ġnode", "Ġ)", "Ġ:", "ĠA", "Tag", "(", "Ġnode", "Ġ)", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠButton", "::", "init", "(", "ĠCore", "Engine", "Ġ&", "Ġcore", "Engine", "Ġ)", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::971", "code": "#include <QtCore/QObject>\n\nnamespace Foo2 {\nclass MyObj : public QObject\n{\n    Q_OBJECT\npublic:\n\npublic Q_SLOTS:\n    void slot1() {}\n    void slot2() {}\nQ_SIGNALS:\n    void signal1();\n};\n\n}\n\nusing namespace Foo2;\n\nvoid foo1()\n{\n    Foo2::MyObj *o1 = new Foo2::MyObj();\n    QObject::connect(o1, SIGNAL(signal1()), o1, SLOT(slot1())); // Warning\n}\n\nint main() { return 0; }\n\n#include \"usingnamespace.moc\"\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Qt", "Core", "/", "QObject", ">", "Ċ", "Ċ", "namespace", "ĠFoo", "2", "Ġ{", "Ċ", "class", "ĠMy", "Obj", "Ġ:", "Ġpublic", "ĠQObject", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠQ", "_", "OBJECT", "Ċ", "public", ":", "Ċ", "Ċ", "public", "ĠQ", "_", "SLOTS", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġslot", "1", "()", "Ġ{}", "Ċ", "ĠĠĠ", "Ġvoid", "Ġslot", "2", "()", "Ġ{}", "Ċ", "Q", "_", "SIGNAL", "S", ":", "Ċ", "ĠĠĠ", "Ġvoid", "Ġsignal", "1", "();", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "Ċ", "using", "Ġnamespace", "ĠFoo", "2", ";", "Ċ", "Ċ", "void", "Ġfoo", "1", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠFoo", "2", "::", "My", "Obj", "Ġ*", "o", "1", "Ġ=", "Ġnew", "ĠFoo", "2", "::", "My", "Obj", "();", "Ċ", "ĠĠĠ", "ĠQObject", "::", "connect", "(", "o", "1", ",", "ĠSIGNAL", "(", "signal", "1", "()),", "Ġo", "1", ",", "ĠSLOT", "(", "slot", "1", "()));", "Ġ//", "ĠWarning", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ġreturn", "Ġ0", ";", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ\"", "using", "namespace", ".", "m", "oc", "\"", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::972", "code": "#ifndef AV_PYTHON_GUA_PBS_MATERIAL_FACTORY_HPP\n#define AV_PYTHON_GUA_PBS_MATERIAL_FACTORY_HPP\n\nvoid init_PBSMaterialFactory();\n\n#endif //AV_PYTHON_GUA_PBS_MATERIAL_FACTORY_HPP\n", "code_tokens": ["Ġ#", "ifndef", "ĠAV", "_", "PYTHON", "_", "GU", "A", "_", "P", "BS", "_", "MATERIAL", "_", "FACTORY", "_", "HP", "P", "Ċ", "#", "define", "ĠAV", "_", "PYTHON", "_", "GU", "A", "_", "P", "BS", "_", "MATERIAL", "_", "FACTORY", "_", "HP", "P", "Ċ", "Ċ", "void", "Ġinit", "_", "P", "BS", "Material", "Factory", "();", "Ċ", "Ċ", "#", "endif", "Ġ//", "AV", "_", "PYTHON", "_", "GU", "A", "_", "P", "BS", "_", "MATERIAL", "_", "FACTORY", "_", "HP", "P", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::973", "code": "#include \"aikido/statespace/dart/JointStateSpaceHelpers.hpp\"\n\nnamespace aikido {\nnamespace statespace {\nnamespace dart {\n\n//==============================================================================\nstd::unique_ptr<JointStateSpace> createJointStateSpace(\n    const ::dart::dynamics::Joint* joint)\n{\n  auto space = common::DynamicCastFactory<\n      detail::createJointStateSpaceFor_impl,\n      common::DynamicCastFactory_raw_ptr,\n      const ::dart::dynamics::Joint,\n      detail::ConstSupportedJoints>::create(joint);\n\n  if (!space)\n  {\n    std::stringstream msg;\n    msg << \"Joint '\" << joint->getName() << \"' has unsupported type '\"\n        << joint->getType() << \"'.\";\n    throw std::runtime_error(msg.str());\n  }\n\n  return space;\n}\n\n} // namespace dart\n} // namespace statespace\n} // namespace aikido\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "a", "ik", "ido", "/", "state", "space", "/", "dart", "/", "Joint", "State", "Space", "Helpers", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġa", "ik", "ido", "Ġ{", "Ċ", "namespace", "Ġstate", "space", "Ġ{", "Ċ", "namespace", "Ġd", "art", "Ġ{", "Ċ", "Ċ", "//==============================================================================", "Ċ", "std", "::", "unique", "_", "ptr", "<", "Joint", "State", "Space", ">", "Ġcreate", "Joint", "State", "Space", "(", "Ċ", "ĠĠĠ", "Ġconst", "Ġ::", "dart", "::", "d", "ynamics", "::", "Joint", "*", "Ġjoint", ")", "Ċ", "{", "Ċ", "Ġ", "Ġauto", "Ġspace", "Ġ=", "Ġcommon", "::", "Dynamic", "Cast", "Factory", "<", "Ċ", "ĠĠĠĠĠ", "Ġdetail", "::", "create", "Joint", "State", "Space", "For", "_", "impl", ",", "Ċ", "ĠĠĠĠĠ", "Ġcommon", "::", "Dynamic", "Cast", "Factory", "_", "raw", "_", "ptr", ",", "Ċ", "ĠĠĠĠĠ", "Ġconst", "Ġ::", "dart", "::", "d", "ynamics", "::", "Joint", ",", "Ċ", "ĠĠĠĠĠ", "Ġdetail", "::", "Const", "Supported", "Joints", ">::", "create", "(", "joint", ");", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(!", "space", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġstd", "::", "stringstream", "Ġmsg", ";", "Ċ", "ĠĠĠ", "Ġmsg", "Ġ<<", "Ġ\"", "Joint", "Ġ'\"", "Ġ<<", "Ġjoint", "->", "getName", "()", "Ġ<<", "Ġ\"'", "Ġhas", "Ġunsupported", "Ġtype", "Ġ'\"", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ<<", "Ġjoint", "->", "getType", "()", "Ġ<<", "Ġ\"'.", "\";", "Ċ", "ĠĠĠ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(", "msg", ".", "str", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġspace", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġd", "art", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġstate", "space", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġa", "ik", "ido", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::974", "code": "#ifndef PYTHONIC_MATH_SIN_HPP\n#define PYTHONIC_MATH_SIN_HPP\n\n#include \"pythonic/include/math/sin.hpp\"\n\n#include \"pythonic/utils/proxy.hpp\"\n#include <cmath>\n\nnamespace pythonic\n{\n\n  namespace math\n  {\n    ALIAS(sin, std::sin);\n    PROXY_IMPL(pythonic::math, sin);\n  }\n}\n\n#endif\n", "code_tokens": ["Ġ#", "ifndef", "ĠPY", "THON", "IC", "_", "MATH", "_", "S", "IN", "_", "HP", "P", "Ċ", "#", "define", "ĠPY", "THON", "IC", "_", "MATH", "_", "S", "IN", "_", "HP", "P", "Ċ", "Ċ", "#", "include", "Ġ\"", "python", "ic", "/", "include", "/", "math", "/", "sin", ".", "hpp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "python", "ic", "/", "utils", "/", "proxy", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "cm", "ath", ">", "Ċ", "Ċ", "namespace", "Ġpython", "ic", "Ċ", "{", "Ċ", "Ċ", "Ġ", "Ġnamespace", "Ġmath", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "ĠALI", "AS", "(", "sin", ",", "Ġstd", "::", "sin", ");", "Ċ", "ĠĠĠ", "ĠPRO", "XY", "_", "IMPL", "(", "python", "ic", "::", "math", ",", "Ġsin", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::975", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"components/mus/public/cpp/view_tracker.h\"\n\nnamespace mus {\n\nViewTracker::ViewTracker() {}\n\nViewTracker::~ViewTracker() {\n  for (Views::iterator i = views_.begin(); i != views_.end(); ++i)\n    (*i)->RemoveObserver(this);\n}\n\nvoid ViewTracker::Add(View* view) {\n  if (views_.count(view))\n    return;\n\n  view->AddObserver(this);\n  views_.insert(view);\n}\n\nvoid ViewTracker::Remove(View* view) {\n  if (views_.count(view)) {\n    views_.erase(view);\n    view->RemoveObserver(this);\n  }\n}\n\nbool ViewTracker::Contains(View* view) {\n  return views_.count(view) > 0;\n}\n\nvoid ViewTracker::OnViewDestroying(View* view) {\n  DCHECK_GT(views_.count(view), 0u);\n  Remove(view);\n}\n\n}  // namespace mus\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "components", "/", "mus", "/", "public", "/", "cpp", "/", "view", "_", "tracker", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġmus", "Ġ{", "Ċ", "Ċ", "View", "Tracker", "::", "View", "Tracker", "()", "Ġ{}", "Ċ", "Ċ", "View", "Tracker", "::~", "View", "Tracker", "()", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "Views", "::", "iterator", "Ġi", "Ġ=", "Ġviews", "_.", "begin", "();", "Ġi", "Ġ!=", "Ġviews", "_.", "end", "();", "Ġ++", "i", ")", "Ċ", "ĠĠĠ", "Ġ(*", "i", ")->", "Remove", "Observer", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "Tracker", "::", "Add", "(", "View", "*", "Ġview", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "views", "_.", "count", "(", "view", "))", "Ċ", "ĠĠĠ", "Ġreturn", ";", "Ċ", "Ċ", "Ġ", "Ġview", "->", "Add", "Observer", "(", "this", ");", "Ċ", "Ġ", "Ġviews", "_.", "insert", "(", "view", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "Tracker", "::", "Remove", "(", "View", "*", "Ġview", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "views", "_.", "count", "(", "view", "))", "Ġ{", "Ċ", "ĠĠĠ", "Ġviews", "_.", "erase", "(", "view", ");", "Ċ", "ĠĠĠ", "Ġview", "->", "Remove", "Observer", "(", "this", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠView", "Tracker", "::", "Contains", "(", "View", "*", "Ġview", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġviews", "_.", "count", "(", "view", ")", "Ġ>", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "Tracker", "::", "On", "View", "Destroy", "ing", "(", "View", "*", "Ġview", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "_", "GT", "(", "views", "_.", "count", "(", "view", "),", "Ġ0", "u", ");", "Ċ", "Ġ", "ĠRemove", "(", "view", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġmus", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::976", "code": "/*\n    Nord Modular patch file format 3.03 parser\n    Copyright (C) 2002 Marcus Andersson\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\n#include \"nmpatch/ctrlmap.h\"\n\nCtrlMap::CtrlMap(ModuleSection::Type section, Module* module,\n\t\t ModuleType::Parameter parameter)\n{\n  this->section = section;\n  this->module = module;\n  this->parameter = parameter;\n}\n\nModuleSection::Type CtrlMap::getModuleSectionType()\n{\n  return section;\n}\n\nModule* CtrlMap::getModule()\n{\n  return module;\n}\n\nModuleType::Parameter CtrlMap::getParameter()\n{\n  return parameter;\n}\n\nvoid CtrlMap::setCC(int CC)\n{\n  this->CC = CC;\n}\n\nint CtrlMap::getCC()\n{\n  return CC;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĠĠĠ", "ĠN", "ord", "ĠMod", "ular", "Ġpatch", "Ġfile", "Ġformat", "Ġ3", ".", "03", "Ġparser", "Ċ", "ĠĠĠ", "ĠCopyright", "Ġ(", "C", ")", "Ġ200", "2", "ĠM", "arc", "us", "ĠAn", "der", "ss", "on", "Ċ", "Ċ", "ĠĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "ĠĠĠ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "ĠĠĠ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "ĠĠĠ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "ĠĠĠ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "ĠĠĠ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠĠĠ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "ĠĠĠ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "ĠĠĠ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "ĠĠĠ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", ",", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", "Ġ", "ĠUSA", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "n", "mp", "atch", "/", "ctrl", "map", ".", "h", "\"", "Ċ", "Ċ", "Ctrl", "Map", "::", "Ctrl", "Map", "(", "Module", "Section", "::", "Type", "Ġsection", ",", "ĠModule", "*", "Ġmodule", ",", "Ċ", "ĉĉ", "ĠModule", "Type", "::", "Parameter", "Ġparameter", ")", "Ċ", "{", "Ċ", "Ġ", "Ġthis", "->", "section", "Ġ=", "Ġsection", ";", "Ċ", "Ġ", "Ġthis", "->", "module", "Ġ=", "Ġmodule", ";", "Ċ", "Ġ", "Ġthis", "->", "parameter", "Ġ=", "Ġparameter", ";", "Ċ", "}", "Ċ", "Ċ", "Module", "Section", "::", "Type", "ĠCtrl", "Map", "::", "getModule", "Section", "Type", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġsection", ";", "Ċ", "}", "Ċ", "Ċ", "Module", "*", "ĠCtrl", "Map", "::", "getModule", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmodule", ";", "Ċ", "}", "Ċ", "Ċ", "Module", "Type", "::", "Parameter", "ĠCtrl", "Map", "::", "getParameter", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġparameter", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCtrl", "Map", "::", "set", "CC", "(", "int", "ĠCC", ")", "Ċ", "{", "Ċ", "Ġ", "Ġthis", "->", "CC", "Ġ=", "ĠCC", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠCtrl", "Map", "::", "get", "CC", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "ĠCC", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::977", "code": "/*\nCopyright_License {\n\n  XCSoar Glide Computer - http://www.xcsoar.org/\n  Copyright (C) 2000-2013 The XCSoar Project\n  A detailed list of copyright holders can be found in the file \"AUTHORS\".\n\n  This program is free software; you can redistribute it and/or\n  modify it under the terms of the GNU General Public License\n  as published by the Free Software Foundation; either version 2\n  of the License, or (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, write to the Free Software\n  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n}\n*/\n\n#ifndef XCSOAR_DIALOGS_PLANES_HPP\n#define XCSOAR_DIALOGS_PLANES_HPP\n\nstruct Plane;\n\nvoid dlgPlanesShowModal();\n\nbool\ndlgPlaneDetailsShowModal(Plane &plane);\n\nbool\ndlgPlanePolarShowModal(Plane &plane);\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "_", "License", "Ġ{", "Ċ", "Ċ", "Ġ", "ĠX", "CS", "o", "ar", "ĠG", "lide", "ĠComput", "er", "Ġ-", "Ġhttp", "://", "www", ".", "x", "cs", "o", "ar", ".", "org", "/", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "-", "2013", "ĠThe", "ĠX", "CS", "o", "ar", "ĠProject", "Ċ", "Ġ", "ĠA", "Ġdetailed", "Ġlist", "Ġof", "Ġcopyright", "Ġhold", "ers", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "Ġ\"", "AUTH", "ORS", "\".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġred", "istribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARR", "AN", "TY", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġw", "arr", "ant", "y", "Ġof", "Ċ", "Ġ", "ĠMER", "CHAN", "TAB", "ILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPURPOSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTem", "ple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ3", "30", ",", "ĠB", "ost", "on", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "13", "07", ",", "ĠUSA", ".", "Ċ", "}", "Ċ", "*/", "Ċ", "Ċ", "#", "ifndef", "ĠX", "CS", "O", "AR", "_", "DIALOG", "S", "_", "PLAN", "ES", "_", "HP", "P", "Ċ", "#", "define", "ĠX", "CS", "O", "AR", "_", "DIALOG", "S", "_", "PLAN", "ES", "_", "HP", "P", "Ċ", "Ċ", "struct", "ĠPlane", ";", "Ċ", "Ċ", "void", "Ġdlg", "Planes", "Show", "Modal", "();", "Ċ", "Ċ", "bool", "Ċ", "dlg", "Plane", "Details", "Show", "Modal", "(", "Plane", "Ġ&", "plane", ");", "Ċ", "Ċ", "bool", "Ċ", "dlg", "Plane", "Polar", "Show", "Modal", "(", "Plane", "Ġ&", "plane", ");", "Ċ", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::978", "code": "/*\n *   $Id$\n *\n *   Copyright 2008 Glencoe Software, Inc. All rights reserved.\n *   Use is subject to license terms supplied in LICENSE.txt\n *\n */\n#include <omero/fixture.h>\n#include <omero/callbacks.h>\n#include <omero/all.h>\n#include <string>\n#include <map>\n\nusing namespace std;\nusing namespace omero;\nusing namespace omero::api;\nusing namespace omero::api::_cpp_delete;\nusing namespace omero::callbacks;\nusing namespace omero::model;\nusing namespace omero::rtypes;\nusing namespace omero::sys;\n\n\nTEST(DeleteTest, testSimpleDelete ) {\n    Fixture f;\n    client_ptr c = f.login();\n    ServiceFactoryPrx sf = c->getSession();\n\n    IQueryPrx iquery = sf->getQueryService();\n    IUpdatePrx iupdate = sf->getUpdateService();\n    IDeletePrx idelete = sf->getDeleteService();\n\n    ImagePtr image = new ImageI();\n    image->setName( rstring(\"testSimpleDelete\") );\n    image->setAcquisitionDate( rtime(0) );\n    image = ImagePtr::dynamicCast( iupdate->saveAndReturnObject( image ) );\n\n    std::map<string, string> options;\n    DeleteCommands dcs;\n    DeleteCommand dc;\n    dc.type = \"/Image\";\n    dc.id = image->getId()->getValue();\n    dc.options = options;\n    dcs.push_back(dc);\n\n    DeleteHandlePrx handle = idelete->queueDelete( dcs );\n    DeleteCallbackIPtr cb = new DeleteCallbackI(c->getObjectAdapter(), handle);\n    cb->loop(10, 500);\n\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠĠ", "Ġ$", "Id", "$", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠĠ", "ĠCopyright", "Ġ2008", "ĠG", "len", "coe", "ĠSoftware", ",", "ĠInc", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "ĠĠ", "ĠUse", "Ġis", "Ġsubject", "Ġto", "Ġlicense", "Ġterms", "Ġsupplied", "Ġin", "ĠLICENSE", ".", "txt", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "om", "ero", "/", "fixture", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "om", "ero", "/", "callbacks", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "om", "ero", "/", "all", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "Ġom", "ero", ";", "Ċ", "using", "Ġnamespace", "Ġom", "ero", "::", "api", ";", "Ċ", "using", "Ġnamespace", "Ġom", "ero", "::", "api", "::_", "cpp", "_", "delete", ";", "Ċ", "using", "Ġnamespace", "Ġom", "ero", "::", "callbacks", ";", "Ċ", "using", "Ġnamespace", "Ġom", "ero", "::", "model", ";", "Ċ", "using", "Ġnamespace", "Ġom", "ero", "::", "r", "types", ";", "Ċ", "using", "Ġnamespace", "Ġom", "ero", "::", "sys", ";", "Ċ", "Ċ", "Ċ", "TEST", "(", "Delete", "Test", ",", "Ġtest", "Simple", "Delete", "Ġ)", "Ġ{", "Ċ", "ĠĠĠ", "ĠFixture", "Ġf", ";", "Ċ", "ĠĠĠ", "Ġclient", "_", "ptr", "Ġc", "Ġ=", "Ġf", ".", "login", "();", "Ċ", "ĠĠĠ", "ĠService", "Factory", "P", "rx", "Ġsf", "Ġ=", "Ġc", "->", "getSession", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠI", "Query", "P", "rx", "Ġi", "query", "Ġ=", "Ġsf", "->", "getQuery", "Service", "();", "Ċ", "ĠĠĠ", "ĠI", "Update", "P", "rx", "Ġi", "update", "Ġ=", "Ġsf", "->", "get", "Update", "Service", "();", "Ċ", "ĠĠĠ", "ĠI", "Delete", "P", "rx", "Ġi", "delete", "Ġ=", "Ġsf", "->", "get", "Delete", "Service", "();", "Ċ", "Ċ", "ĠĠĠ", "ĠImage", "Ptr", "Ġimage", "Ġ=", "Ġnew", "ĠImage", "I", "();", "Ċ", "ĠĠĠ", "Ġimage", "->", "setName", "(", "Ġr", "string", "(\"", "test", "Simple", "Delete", "\")", "Ġ);", "Ċ", "ĠĠĠ", "Ġimage", "->", "set", "Ac", "quisition", "Date", "(", "Ġr", "time", "(", "0", ")", "Ġ);", "Ċ", "ĠĠĠ", "Ġimage", "Ġ=", "ĠImage", "Ptr", "::", "dynamic", "Cast", "(", "Ġi", "update", "->", "save", "AndReturn", "Object", "(", "Ġimage", "Ġ)", "Ġ);", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "map", "<", "string", ",", "Ġstring", ">", "Ġoptions", ";", "Ċ", "ĠĠĠ", "ĠDelete", "Commands", "Ġd", "cs", ";", "Ċ", "ĠĠĠ", "ĠDelete", "Command", "Ġdc", ";", "Ċ", "ĠĠĠ", "Ġdc", ".", "type", "Ġ=", "Ġ\"/", "Image", "\";", "Ċ", "ĠĠĠ", "Ġdc", ".", "id", "Ġ=", "Ġimage", "->", "getId", "()->", "getValue", "();", "Ċ", "ĠĠĠ", "Ġdc", ".", "options", "Ġ=", "Ġoptions", ";", "Ċ", "ĠĠĠ", "Ġd", "cs", ".", "push", "_", "back", "(", "dc", ");", "Ċ", "Ċ", "ĠĠĠ", "ĠDelete", "Handle", "P", "rx", "Ġhandle", "Ġ=", "Ġi", "delete", "->", "queue", "Delete", "(", "Ġd", "cs", "Ġ);", "Ċ", "ĠĠĠ", "ĠDelete", "Callback", "I", "Ptr", "Ġcb", "Ġ=", "Ġnew", "ĠDelete", "Callback", "I", "(", "c", "->", "getObject", "Adapter", "(),", "Ġhandle", ");", "Ċ", "ĠĠĠ", "Ġcb", "->", "loop", "(", "10", ",", "Ġ500", ");", "Ċ", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::979", "code": "// D3D11RenderFactory.hpp\r\n// KlayGE D3D11äÖÈ¾ÒýÇæ³éÏó¹¤³§ Í·ÎÄ¼þ\r\n// Ver 3.8.0\r\n// °æÈ¨ËùÓÐ(C) ¹¨ÃôÃô, 2009\r\n// Homepage: http://www.klayge.org\r\n//\r\n// 3.8.0\r\n// ³õ´Î½¨Á¢ (2009.1.30)\r\n//\r\n// ÐÞ¸Ä¼ÇÂ¼\r\n/////////////////////////////////////////////////////////////////////////////////\r\n\r\n#ifndef _D3D11RENDERFACTORY_HPP\r\n#define _D3D11RENDERFACTORY_HPP\r\n\r\n#pragma once\r\n\r\n#include <KlayGE/PreDeclare.hpp>\r\n\r\n#ifdef KLAYGE_HAS_DECLSPEC\r\n\t#ifdef KLAYGE_D3D11_RE_SOURCE\t\t\t\t// Build dll\r\n\t\t#define KLAYGE_D3D11_RE_API __declspec(dllexport)\r\n\t#else\t\t\t\t\t\t\t\t\t\t// Use dll\r\n\t\t#define KLAYGE_D3D11_RE_API __declspec(dllimport)\r\n\t#endif\r\n#else\r\n\t#define KLAYGE_D3D11_RE_API\r\n#endif // KLAYGE_HAS_DECLSPEC\r\n\r\nextern \"C\"\r\n{\r\n\tKLAYGE_D3D11_RE_API void MakeRenderFactory(KlayGE::RenderFactoryPtr& ptr);\r\n}\r\n\r\n#endif\t\t\t// _D3D11RENDERFACTORY_HPP\r\n", "code_tokens": ["Ġ//", "ĠD", "3", "D", "11", "Render", "Factory", ".", "hpp", "č", "Ċ", "//", "ĠK", "lay", "GE", "ĠD", "3", "D", "11", "Ã¤", "Ã", "ĸ", "Ã", "Ī", "Â", "¾", "Ã", "Ĵ", "Ã½", "Ãĩ", "Ã¦", "Â", "³", "Ã©", "Ã", "ı", "Ã³", "Â", "¹", "Â", "¤", "Â", "³", "Â", "§", "ĠÃ", "į", "Â·", "Ãİ", "Ã", "Ħ", "Â", "¼", "Ã", "¾", "č", "Ċ", "//", "ĠVer", "Ġ3", ".", "8", ".", "0", "č", "Ċ", "//", "Ġ", "Â°", "Ã¦", "Ã", "Ī", "Â", "¨", "Ã", "ĭ", "Ã", "¹", "Ã", "ĵ", "Ã", "Ĳ", "(", "C", ")", "ĠÂ", "¹", "Â", "¨", "Ã", "ĥ", "Ã´", "Ã", "ĥ", "Ã´", ",", "Ġ2009", "č", "Ċ", "//", "ĠH", "om", "epage", ":", "Ġhttp", "://", "www", ".", "k", "lay", "ge", ".", "org", "č", "Ċ", "//", "č", "Ċ", "//", "Ġ3", ".", "8", ".", "0", "č", "Ċ", "//", "ĠÂ", "³", "Ã", "µ", "Â", "´", "Ãİ", "Â", "½", "Â", "¨", "Ãģ", "Â", "¢", "Ġ(", "2009", ".", "1", ".", "30", ")", "č", "Ċ", "//", "č", "Ċ", "//", "ĠÃ", "Ĳ", "Ã", "ŀ", "Â", "¸", "Ã", "Ħ", "Â", "¼", "Ãĩ", "Ã", "Ĥ", "Â", "¼", "č", "Ċ", "////////////////////////////////////////////////////////////////////////", "/////////", "č", "Ċ", "č", "Ċ", "#", "ifndef", "Ġ_", "D", "3", "D", "11", "RENDER", "FACTORY", "_", "HP", "P", "č", "Ċ", "#", "define", "Ġ_", "D", "3", "D", "11", "RENDER", "FACTORY", "_", "HP", "P", "č", "Ċ", "č", "Ċ", "#", "pragma", "Ġonce", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "K", "lay", "GE", "/", "Pre", "Declare", ".", "hpp", ">", "č", "Ċ", "č", "Ċ", "#", "ifdef", "ĠK", "LAY", "GE", "_", "HAS", "_", "DECL", "SPEC", "č", "Ċ", "ĉ", "#", "ifdef", "ĠK", "LAY", "GE", "_", "D", "3", "D", "11", "_", "RE", "_", "SOURCE", "ĉĉĉ", "ĉ", "//", "ĠBuild", "Ġdll", "č", "Ċ", "ĉ", "ĉ", "#", "define", "ĠK", "LAY", "GE", "_", "D", "3", "D", "11", "_", "RE", "_", "API", "Ġ__", "decl", "spec", "(", "dl", "lex", "port", ")", "č", "Ċ", "ĉ", "#", "else", "ĉĉĉĉĉĉĉĉĉ", "ĉ", "//", "ĠUse", "Ġdll", "č", "Ċ", "ĉ", "ĉ", "#", "define", "ĠK", "LAY", "GE", "_", "D", "3", "D", "11", "_", "RE", "_", "API", "Ġ__", "decl", "spec", "(", "dll", "import", ")", "č", "Ċ", "ĉ", "#", "endif", "č", "Ċ", "#", "else", "č", "Ċ", "ĉ", "#", "define", "ĠK", "LAY", "GE", "_", "D", "3", "D", "11", "_", "RE", "_", "API", "č", "Ċ", "#", "endif", "Ġ//", "ĠK", "LAY", "GE", "_", "HAS", "_", "DECL", "SPEC", "č", "Ċ", "č", "Ċ", "extern", "Ġ\"", "C", "\"", "č", "Ċ", "{", "č", "Ċ", "ĉ", "K", "LAY", "GE", "_", "D", "3", "D", "11", "_", "RE", "_", "API", "Ġvoid", "ĠMake", "Render", "Factory", "(", "K", "lay", "GE", "::", "Render", "Factory", "Ptr", "&", "Ġptr", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "endif", "ĉĉ", "ĉ", "//", "Ġ_", "D", "3", "D", "11", "RENDER", "FACTORY", "_", "HP", "P", "č", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::980", "code": "#include \"testutils/FuseFlushTest.h\"\n\nusing ::testing::Eq;\nusing ::testing::WithParamInterface;\nusing ::testing::Values;\nusing ::testing::Return;\n\nusing std::string;\n\n// The fuse behaviour is: For each open(), there will be exactly one call to release().\n// Directly before this call to release(), flush() will be called. After flush() returns,\n// the ::close() syscall (in the process using the filesystem) returns. So the fuse release() call is\n// called asynchronously afterwards. Errors have to be returned in the implementation of flush().\n\n// Citing FUSE spec:\n//  1) Flush is called on each close() of a file descriptor.\n//  2) Filesystems shouldn't assume that flush will always be called after some writes, or that if will be called at all.\n// I can't get these sentences together. For the test cases here, I go with the first one and assume that\n// flush() will ALWAYS be called on a file close.\n\nclass FuseFlushFileDescriptorTest: public FuseFlushTest, public WithParamInterface<int> {\n};\nINSTANTIATE_TEST_SUITE_P(FuseFlushFileDescriptorTest, FuseFlushFileDescriptorTest, Values(0, 1, 2, 100, 1024*1024*1024));\n\nTEST_P(FuseFlushFileDescriptorTest, FlushOnCloseFile) {\n  ReturnIsFileOnLstat(FILENAME);\n\n  EXPECT_CALL(*fsimpl, openFile(Eq(FILENAME), testing::_)).WillOnce(Return(GetParam()));\n  EXPECT_CALL(*fsimpl, flush(Eq(GetParam()))).Times(1);\n\n  OpenAndCloseFile(FILENAME);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "test", "utils", "/", "F", "use", "Flush", "Test", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġ::", "testing", "::", "Eq", ";", "Ċ", "using", "Ġ::", "testing", "::", "With", "Param", "Interface", ";", "Ċ", "using", "Ġ::", "testing", "::", "Values", ";", "Ċ", "using", "Ġ::", "testing", "::", "Return", ";", "Ċ", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "Ċ", "//", "ĠThe", "Ġfuse", "Ġbehaviour", "Ġis", ":", "ĠFor", "Ġeach", "Ġopen", "(),", "Ġthere", "Ġwill", "Ġbe", "Ġexactly", "Ġone", "Ġcall", "Ġto", "Ġrelease", "().", "Ċ", "//", "ĠDirect", "ly", "Ġbefore", "Ġthis", "Ġcall", "Ġto", "Ġrelease", "(),", "Ġflush", "()", "Ġwill", "Ġbe", "Ġcalled", ".", "ĠAfter", "Ġflush", "()", "Ġreturns", ",", "Ċ", "//", "Ġthe", "Ġ::", "close", "()", "Ġsyscall", "Ġ(", "in", "Ġthe", "Ġprocess", "Ġusing", "Ġthe", "Ġfilesystem", ")", "Ġreturns", ".", "ĠSo", "Ġthe", "Ġfuse", "Ġrelease", "()", "Ġcall", "Ġis", "Ċ", "//", "Ġcalled", "Ġasynchronously", "Ġafterwards", ".", "ĠErrors", "Ġhave", "Ġto", "Ġbe", "Ġreturned", "Ġin", "Ġthe", "Ġimplementation", "Ġof", "Ġflush", "().", "Ċ", "Ċ", "//", "ĠC", "it", "ing", "ĠF", "USE", "Ġspec", ":", "Ċ", "//", "Ġ", "Ġ1", ")", "ĠFlush", "Ġis", "Ġcalled", "Ġon", "Ġeach", "Ġclose", "()", "Ġof", "Ġa", "Ġfile", "Ġdescriptor", ".", "Ċ", "//", "Ġ", "Ġ2", ")", "ĠFile", "systems", "Ġshouldn", "'t", "Ġassume", "Ġthat", "Ġflush", "Ġwill", "Ġalways", "Ġbe", "Ġcalled", "Ġafter", "Ġsome", "Ġwrites", ",", "Ġor", "Ġthat", "Ġif", "Ġwill", "Ġbe", "Ġcalled", "Ġat", "Ġall", ".", "Ċ", "//", "ĠI", "Ġcan", "'t", "Ġget", "Ġthese", "Ġsentences", "Ġtogether", ".", "ĠFor", "Ġthe", "Ġtest", "Ġcases", "Ġhere", ",", "ĠI", "Ġgo", "Ġwith", "Ġthe", "Ġfirst", "Ġone", "Ġand", "Ġassume", "Ġthat", "Ċ", "//", "Ġflush", "()", "Ġwill", "ĠAL", "WAYS", "Ġbe", "Ġcalled", "Ġon", "Ġa", "Ġfile", "Ġclose", ".", "Ċ", "Ċ", "class", "ĠF", "use", "Flush", "FileDescriptor", "Test", ":", "Ġpublic", "ĠF", "use", "Flush", "Test", ",", "Ġpublic", "ĠWith", "Param", "Interface", "<", "int", ">", "Ġ{", "Ċ", "};", "Ċ", "INST", "ANTI", "ATE", "_", "TEST", "_", "SUITE", "_", "P", "(", "F", "use", "Flush", "FileDescriptor", "Test", ",", "ĠF", "use", "Flush", "FileDescriptor", "Test", ",", "ĠValues", "(", "0", ",", "Ġ1", ",", "Ġ2", ",", "Ġ100", ",", "Ġ1024", "*", "1024", "*", "1024", "));", "Ċ", "Ċ", "TEST", "_", "P", "(", "F", "use", "Flush", "FileDescriptor", "Test", ",", "ĠFlush", "OnClose", "File", ")", "Ġ{", "Ċ", "Ġ", "ĠReturn", "Is", "File", "On", "L", "stat", "(", "FILENAME", ");", "Ċ", "Ċ", "Ġ", "ĠEXPECT", "_", "CALL", "(*", "fs", "impl", ",", "Ġopen", "File", "(", "Eq", "(", "FILENAME", "),", "Ġtesting", "::_", ")).", "Will", "Once", "(", "Return", "(", "GetParam", "()));", "Ċ", "Ġ", "ĠEXPECT", "_", "CALL", "(*", "fs", "impl", ",", "Ġflush", "(", "Eq", "(", "GetParam", "()))", ").", "Times", "(", "1", ");", "Ċ", "Ċ", "Ġ", "ĠOpen", "And", "Close", "File", "(", "FILENAME", ");", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::981", "code": "\n#include <stdlib.h>\n#include <string.h>\n#include <vrpn_Connection.h>\n#include <vrpn_Mutex.h>\n\n\nint main (int argc, char ** argv) {\n\n  vrpn_Connection * c;\n  vrpn_Mutex_Server * me;\n  int portno = vrpn_DEFAULT_LISTEN_PORT_NO;\n\n  if (argc > 2) {\n    portno = atoi(argv[2]);\n  }\n\n  char con_name[512];\n  sprintf(con_name, \"localhost:%d\", portno);\n  c = vrpn_create_server_connection(con_name);\n  me = new vrpn_Mutex_Server (argv[1], c);\n\n  while (1) {\n    me->mainloop();\n  }\n\n}\n\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "stdlib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "v", "rpn", "_", "Connection", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "v", "rpn", "_", "Mutex", ".", "h", ">", "Ċ", "Ċ", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "Ġargv", ")", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġv", "rpn", "_", "Connection", "Ġ*", "Ġc", ";", "Ċ", "Ġ", "Ġv", "rpn", "_", "Mutex", "_", "Server", "Ġ*", "Ġme", ";", "Ċ", "Ġ", "Ġint", "Ġport", "no", "Ġ=", "Ġv", "rpn", "_", "DEFAULT", "_", "LISTEN", "_", "PORT", "_", "NO", ";", "Ċ", "Ċ", "Ġ", "Ġif", "Ġ(", "argc", "Ġ>", "Ġ2", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġport", "no", "Ġ=", "Ġatoi", "(", "argv", "[", "2", "]);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġchar", "Ġcon", "_", "name", "[", "512", "];", "Ċ", "Ġ", "Ġsprintf", "(", "con", "_", "name", ",", "Ġ\"", "localhost", ":%", "d", "\",", "Ġport", "no", ");", "Ċ", "Ġ", "Ġc", "Ġ=", "Ġv", "rpn", "_", "create", "_", "server", "_", "connection", "(", "con", "_", "name", ");", "Ċ", "Ġ", "Ġme", "Ġ=", "Ġnew", "Ġv", "rpn", "_", "Mutex", "_", "Server", "Ġ(", "argv", "[", "1", "],", "Ġc", ");", "Ċ", "Ċ", "Ġ", "Ġwhile", "Ġ(", "1", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġme", "->", "main", "loop", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::982", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/email/model/CreateReceiptRuleSetRequest.h>\n#include <aws/core/utils/StringUtils.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\nusing namespace Aws::SES::Model;\nusing namespace Aws::Utils;\n\nCreateReceiptRuleSetRequest::CreateReceiptRuleSetRequest() : \n    m_ruleSetNameHasBeenSet(false)\n{\n}\n\nAws::String CreateReceiptRuleSetRequest::SerializePayload() const\n{\n  Aws::StringStream ss;\n  ss << \"Action=CreateReceiptRuleSet&\";\n  if(m_ruleSetNameHasBeenSet)\n  {\n    ss << \"RuleSetName=\" << StringUtils::URLEncode(m_ruleSetName.c_str()) << \"&\";\n  }\n\n  ss << \"Version=2010-12-01\";\n  return ss.str();\n}\n\n\nvoid  CreateReceiptRuleSetRequest::DumpBodyToUrl(Aws::Http::URI& uri ) const\n{\n  uri.SetQueryString(SerializePayload());\n}\n", "code_tokens": ["Ġ", "ï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaff", "ili", "ates", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "email", "/", "model", "/", "Create", "Receipt", "Rule", "SetRequest", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "StringUtils", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "stl", "/", "AWS", "StringStream", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "SES", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Utils", ";", "Ċ", "Ċ", "Create", "Receipt", "Rule", "SetRequest", "::", "Create", "Receipt", "Rule", "SetRequest", "()", "Ġ:", "ĠĊ", "ĠĠĠ", "Ġm", "_", "rule", "SetName", "HasBeenSet", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Aws", "::", "String", "ĠCreate", "Receipt", "Rule", "SetRequest", "::", "Serialize", "Payload", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠAws", "::", "StringStream", "Ġss", ";", "Ċ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Action", "=", "Create", "Receipt", "RuleSet", "&", "\";", "Ċ", "Ġ", "Ġif", "(", "m", "_", "rule", "SetName", "HasBeenSet", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġss", "Ġ<<", "Ġ\"", "Rule", "SetName", "=\"", "Ġ<<", "ĠStringUtils", "::", "URL", "Encode", "(", "m", "_", "rule", "SetName", ".", "c", "_", "str", "())", "Ġ<<", "Ġ\"&", "\";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Version", "=", "2010", "-", "12", "-", "01", "\";", "Ċ", "Ġ", "Ġreturn", "Ġss", ".", "str", "();", "Ċ", "}", "Ċ", "Ċ", "Ċ", "void", "Ġ", "ĠCreate", "Receipt", "Rule", "SetRequest", "::", "Dump", "Body", "To", "Url", "(", "Aws", "::", "Http", "::", "URI", "&", "Ġuri", "Ġ)", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġuri", ".", "Set", "QueryString", "(", "Serialize", "Payload", "());", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::983", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/quicksight/model/ListDashboardsRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n#include <aws/core/http/URI.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\n#include <utility>\n\nusing namespace Aws::QuickSight::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\nusing namespace Aws::Http;\n\nListDashboardsRequest::ListDashboardsRequest() : \n    m_awsAccountIdHasBeenSet(false),\n    m_nextTokenHasBeenSet(false),\n    m_maxResults(0),\n    m_maxResultsHasBeenSet(false)\n{\n}\n\nAws::String ListDashboardsRequest::SerializePayload() const\n{\n  return {};\n}\n\nvoid ListDashboardsRequest::AddQueryStringParameters(URI& uri) const\n{\n    Aws::StringStream ss;\n    if(m_nextTokenHasBeenSet)\n    {\n      ss << m_nextToken;\n      uri.AddQueryStringParameter(\"next-token\", ss.str());\n      ss.str(\"\");\n    }\n\n    if(m_maxResultsHasBeenSet)\n    {\n      ss << m_maxResults;\n      uri.AddQueryStringParameter(\"max-results\", ss.str());\n      ss.str(\"\");\n    }\n\n}\n\n\n\n", "code_tokens": ["Ġ", "ï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaff", "ili", "ates", ".", "ĠAll", "ĠR", "ights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSP", "DX", "-", "License", "-", "Identifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "quick", "s", "ight", "/", "model", "/", "List", "Dashboard", "sRequest", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "Json", "Serializer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "http", "/", "URI", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "stl", "/", "AWS", "StringStream", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "utility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "QuickSight", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Utils", "::", "Json", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Utils", ";", "Ċ", "using", "Ġnamespace", "ĠAws", "::", "Http", ";", "Ċ", "Ċ", "List", "Dashboard", "sRequest", "::", "List", "Dashboard", "sRequest", "()", "Ġ:", "ĠĊ", "ĠĠĠ", "Ġm", "_", "aws", "AccountId", "HasBeenSet", "(", "false", "),", "Ċ", "ĠĠĠ", "Ġm", "_", "nextToken", "HasBeenSet", "(", "false", "),", "Ċ", "ĠĠĠ", "Ġm", "_", "maxResults", "(", "0", "),", "Ċ", "ĠĠĠ", "Ġm", "_", "maxResults", "HasBeenSet", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Aws", "::", "String", "ĠList", "Dashboard", "sRequest", "::", "Serialize", "Payload", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ{};", "Ċ", "}", "Ċ", "Ċ", "void", "ĠList", "Dashboard", "sRequest", "::", "Add", "QueryString", "Parameters", "(", "URI", "&", "Ġuri", ")", "Ġconst", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠAws", "::", "StringStream", "Ġss", ";", "Ċ", "ĠĠĠ", "Ġif", "(", "m", "_", "nextToken", "HasBeenSet", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġss", "Ġ<<", "Ġm", "_", "nextToken", ";", "Ċ", "ĠĠĠĠĠ", "Ġuri", ".", "Add", "QueryString", "Parameter", "(\"", "next", "-", "token", "\",", "Ġss", ".", "str", "());", "Ċ", "ĠĠĠĠĠ", "Ġss", ".", "str", "(\"\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠ", "Ġif", "(", "m", "_", "maxResults", "HasBeenSet", ")", "Ċ", "ĠĠĠ", "Ġ{", "Ċ", "ĠĠĠĠĠ", "Ġss", "Ġ<<", "Ġm", "_", "maxResults", ";", "Ċ", "ĠĠĠĠĠ", "Ġuri", ".", "Add", "QueryString", "Parameter", "(\"", "max", "-", "results", "\",", "Ġss", ".", "str", "());", "Ċ", "ĠĠĠĠĠ", "Ġss", ".", "str", "(\"\");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::984", "code": "#include <Eigen/Eigen>\n#include <iostream>\n\n#ifndef M_PI\n#define M_PI 3.1415926535897932384626433832795\n#endif\n\n\nusing namespace Eigen;\nusing namespace std;\n\nint main(int, char**)\n{\n  cout.precision(3);\n  Matrix4i m = Matrix4i::Random();\nm.row(1).setOnes();\ncout << m << endl;\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Eigen", "/", "Eigen", ">", "Ċ", "#", "include", "Ġ<", "i", "ostream", ">", "Ċ", "Ċ", "#", "ifndef", "ĠM", "_", "PI", "Ċ", "#", "define", "ĠM", "_", "PI", "Ġ3", ".", "14", "159", "265", "35", "89", "79", "32", "38", "46", "264", "338", "327", "95", "Ċ", "#", "endif", "Ċ", "Ċ", "Ċ", "using", "Ġnamespace", "ĠEigen", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**)", "Ċ", "{", "Ċ", "Ġ", "Ġcout", ".", "precision", "(", "3", ");", "Ċ", "Ġ", "ĠMatrix", "4", "i", "Ġm", "Ġ=", "ĠMatrix", "4", "i", "::", "Random", "();", "Ċ", "m", ".", "row", "(", "1", ").", "setOn", "es", "();", "Ċ", "cout", "Ġ<<", "Ġm", "Ġ<<", "Ġendl", ";", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::985", "code": "// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"sky/compositor/clip_rrect_layer.h\"\n\nnamespace sky {\nnamespace compositor {\n\nClipRRectLayer::ClipRRectLayer() {\n}\n\nClipRRectLayer::~ClipRRectLayer() {\n}\n\nvoid ClipRRectLayer::Paint(PaintContext::ScopedFrame& frame) {\n  SkCanvas& canvas = frame.canvas();\n  canvas.saveLayer(&clip_rrect_.getBounds(), nullptr);\n  canvas.clipRRect(clip_rrect_);\n  PaintChildren(frame);\n  canvas.restore();\n}\n\n}  // namespace compositor\n}  // namespace sky\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2015", "ĠThe", "ĠChrom", "ium", "ĠAuth", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "sky", "/", "compos", "itor", "/", "clip", "_", "r", "rect", "_", "layer", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġsky", "Ġ{", "Ċ", "namespace", "Ġcom", "positor", "Ġ{", "Ċ", "Ċ", "Clip", "R", "Rect", "Layer", "::", "Clip", "R", "Rect", "Layer", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Clip", "R", "Rect", "Layer", "::~", "Clip", "R", "Rect", "Layer", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠClip", "R", "Rect", "Layer", "::", "Paint", "(", "Paint", "Context", "::", "Scoped", "Frame", "&", "Ġframe", ")", "Ġ{", "Ċ", "Ġ", "ĠSk", "Canvas", "&", "Ġcanvas", "Ġ=", "Ġframe", ".", "canvas", "();", "Ċ", "Ġ", "Ġcanvas", ".", "save", "Layer", "(&", "clip", "_", "r", "rect", "_.", "getBounds", "(),", "Ġnullptr", ");", "Ċ", "Ġ", "Ġcanvas", ".", "clip", "R", "Rect", "(", "clip", "_", "r", "rect", "_);", "Ċ", "Ġ", "ĠPaint", "Children", "(", "frame", ");", "Ċ", "Ġ", "Ġcanvas", ".", "restore", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġcom", "positor", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġsky", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::986", "code": "// RUN: %clang_cc1 -fxray-instrument \\\n// RUN:     -fxray-instrumentation-bundle=function-entry -x c++ \\\n// RUN:     -std=c++11 -triple x86_64-unknown-unknown -emit-llvm -o - %s \\\n// RUN:     | FileCheck --check-prefixes CHECK,SKIPEXIT %s\n// RUN: %clang_cc1 -fxray-instrument \\\n// RUN:     -fxray-instrumentation-bundle=function-exit -x c++ \\\n// RUN:     -std=c++11 -triple x86_64-unknown-unknown -emit-llvm -o - %s \\\n// RUN:     | FileCheck --check-prefixes CHECK,SKIPENTRY %s\n// RUN: %clang_cc1 -fxray-instrument \\\n// RUN:     -fxray-instrumentation-bundle=function-entry,function-exit -x c++ \\\n// RUN:     -std=c++11 -triple x86_64-unknown-unknown -emit-llvm -o - %s \\\n// RUN:     | FileCheck --check-prefixes CHECK,NOSKIPENTRY,NOSKIPEXIT %s\n\n// CHECK: define void @_Z13justAFunctionv() #[[ATTR:[0-9]+]] {\nvoid justAFunction() {\n}\n\n// SKIPENTRY: attributes #[[ATTR]] = {{.*}} \"xray-skip-entry\" {{.*}}\n// SKIPEXIT: attributes #[[ATTR]] = {{.*}} \"xray-skip-exit\" {{.*}}\n\n// NOSKIPENTRY-NOT: attributes #[[ATTR]] = {{.*}} \"xray-skip-entry\" {{.*}}\n// NOSKIPEXIT-NOT: attributes #[[ATTR]] = {{.*}} \"xray-skip-exit\" {{.*}}\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fx", "ray", "-", "instrument", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ-", "fx", "ray", "-", "instrument", "ation", "-", "bundle", "=", "function", "-", "entry", "Ġ-", "x", "Ġc", "++", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ-", "std", "=", "c", "++", "11", "Ġ-", "triple", "Ġx", "86", "_", "64", "-", "unknown", "-", "unknown", "Ġ-", "emit", "-", "llvm", "Ġ-", "o", "Ġ-", "Ġ%", "s", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ|", "ĠFile", "Check", "Ġ--", "check", "-", "prefixes", "ĠCHECK", ",", "SK", "I", "PE", "X", "IT", "Ġ%", "s", "Ċ", "//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fx", "ray", "-", "instrument", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ-", "fx", "ray", "-", "instrument", "ation", "-", "bundle", "=", "function", "-", "exit", "Ġ-", "x", "Ġc", "++", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ-", "std", "=", "c", "++", "11", "Ġ-", "triple", "Ġx", "86", "_", "64", "-", "unknown", "-", "unknown", "Ġ-", "emit", "-", "llvm", "Ġ-", "o", "Ġ-", "Ġ%", "s", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ|", "ĠFile", "Check", "Ġ--", "check", "-", "prefixes", "ĠCHECK", ",", "SKIP", "ENTRY", "Ġ%", "s", "Ċ", "//", "ĠRUN", ":", "Ġ%", "clang", "_", "cc", "1", "Ġ-", "fx", "ray", "-", "instrument", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ-", "fx", "ray", "-", "instrument", "ation", "-", "bundle", "=", "function", "-", "entry", ",", "function", "-", "exit", "Ġ-", "x", "Ġc", "++", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ-", "std", "=", "c", "++", "11", "Ġ-", "triple", "Ġx", "86", "_", "64", "-", "unknown", "-", "unknown", "Ġ-", "emit", "-", "llvm", "Ġ-", "o", "Ġ-", "Ġ%", "s", "Ġ\\", "Ċ", "//", "ĠRUN", ":", "ĠĠĠĠ", "Ġ|", "ĠFile", "Check", "Ġ--", "check", "-", "prefixes", "ĠCHECK", ",", "NO", "SKIP", "ENTRY", ",", "NO", "SK", "I", "PE", "X", "IT", "Ġ%", "s", "Ċ", "Ċ", "//", "ĠCHECK", ":", "Ġdefine", "Ġvoid", "Ġ@_", "Z", "13", "just", "A", "Function", "v", "()", "Ġ#", "[[", "ATTR", ":[", "0", "-", "9", "]+", "]]", "Ġ{", "Ċ", "void", "Ġjust", "A", "Function", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "//", "ĠSKIP", "ENTRY", ":", "Ġattributes", "Ġ#", "[[", "ATTR", "]]", "Ġ=", "Ġ{{.*}}", "Ġ\"", "x", "ray", "-", "skip", "-", "entry", "\"", "Ġ{{.*}}", "Ċ", "//", "ĠSK", "I", "PE", "X", "IT", ":", "Ġattributes", "Ġ#", "[[", "ATTR", "]]", "Ġ=", "Ġ{{.*}}", "Ġ\"", "x", "ray", "-", "skip", "-", "exit", "\"", "Ġ{{.*}}", "Ċ", "Ċ", "//", "ĠNO", "SKIP", "ENTRY", "-", "NOT", ":", "Ġattributes", "Ġ#", "[[", "ATTR", "]]", "Ġ=", "Ġ{{.*}}", "Ġ\"", "x", "ray", "-", "skip", "-", "entry", "\"", "Ġ{{.*}}", "Ċ", "//", "ĠNO", "SK", "I", "PE", "X", "IT", "-", "NOT", ":", "Ġattributes", "Ġ#", "[[", "ATTR", "]]", "Ġ=", "Ġ{{.*}}", "Ġ\"", "x", "ray", "-", "skip", "-", "exit", "\"", "Ġ{{.*}}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::987", "code": "#include \"nth_prime.h\"\n#define BOOST_TEST_MAIN\n#include <boost/test/unit_test.hpp>\n#include <stdexcept>\n\nBOOST_AUTO_TEST_CASE(first)\n{\n    BOOST_REQUIRE_EQUAL(2, prime::nth(1));\n}\n\n#if defined(EXERCISM_RUN_ALL_TESTS)\nBOOST_AUTO_TEST_CASE(second)\n{\n    BOOST_REQUIRE_EQUAL(3, prime::nth(2));\n}\n\nBOOST_AUTO_TEST_CASE(sixth)\n{\n    BOOST_REQUIRE_EQUAL(13, prime::nth(6));\n}\n\nBOOST_AUTO_TEST_CASE(big_prime)\n{\n    BOOST_REQUIRE_EQUAL(104743, prime::nth(10001));\n}\n\nBOOST_AUTO_TEST_CASE(weird_case)\n{\n    BOOST_REQUIRE_THROW(prime::nth(0), std::domain_error);\n}\n#endif\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "nth", "_", "prime", ".", "h", "\"", "Ċ", "#", "define", "ĠBOOST", "_", "TEST", "_", "MAIN", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "unit", "_", "test", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "st", "dex", "cept", ">", "Ċ", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "CASE", "(", "first", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "REQUIRE", "_", "EQUAL", "(", "2", ",", "Ġprime", "::", "nth", "(", "1", "));", "Ċ", "}", "Ċ", "Ċ", "#", "if", "Ġdefined", "(", "EX", "ER", "C", "ISM", "_", "RUN", "_", "ALL", "_", "TESTS", ")", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "CASE", "(", "second", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "REQUIRE", "_", "EQUAL", "(", "3", ",", "Ġprime", "::", "nth", "(", "2", "));", "Ċ", "}", "Ċ", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "CASE", "(", "six", "th", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "REQUIRE", "_", "EQUAL", "(", "13", ",", "Ġprime", "::", "nth", "(", "6", "));", "Ċ", "}", "Ċ", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "CASE", "(", "big", "_", "prime", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "REQUIRE", "_", "EQUAL", "(", "10", "47", "43", ",", "Ġprime", "::", "nth", "(", "100", "01", "));", "Ċ", "}", "Ċ", "Ċ", "BOOST", "_", "AUTO", "_", "TEST", "_", "CASE", "(", "we", "ird", "_", "case", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠBOOST", "_", "REQUIRE", "_", "THROW", "(", "prime", "::", "nth", "(", "0", "),", "Ġstd", "::", "domain", "_", "error", ");", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::988", "code": "// Copyright (c) 2020 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include <policy/fees.h>\n#include <test/fuzz/FuzzedDataProvider.h>\n#include <test/fuzz/fuzz.h>\n#include <test/fuzz/util.h>\n\n#include <cstdint>\n#include <vector>\n\nvoid initialize()\n{\n    InitializeFuzzingContext();\n}\n\nvoid test_one_input(const std::vector<uint8_t>& buffer)\n{\n    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n    CAutoFile fuzzed_auto_file = fuzzed_auto_file_provider.open();\n    // Re-using block_policy_estimator across runs to avoid costly creation of CBlockPolicyEstimator object.\n    static CBlockPolicyEstimator block_policy_estimator;\n    if (block_policy_estimator.Read(fuzzed_auto_file)) {\n        block_policy_estimator.Write(fuzzed_auto_file);\n    }\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2", "020", "ĠThe", "ĠBitcoin", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġac", "company", "ing", "Ċ", "//", "Ġfile", "ĠCOPY", "ING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "licenses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "policy", "/", "fe", "es", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "test", "/", "fuzz", "/", "Fuzz", "ed", "DataProvider", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "test", "/", "fuzz", "/", "fuzz", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "test", "/", "fuzz", "/", "util", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "std", "int", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "void", "Ġinitialize", "()", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠInitialize", "Fuzz", "ingContext", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ġtest", "_", "one", "_", "input", "(", "const", "Ġstd", "::", "vector", "<", "uint", "8", "_", "t", ">&", "Ġbuffer", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "ĠFuzz", "ed", "DataProvider", "Ġfuzz", "ed", "_", "data", "_", "provider", "(", "buffer", ".", "data", "(),", "Ġbuffer", ".", "size", "());", "Ċ", "ĠĠĠ", "ĠFuzz", "ed", "Auto", "File", "Provider", "Ġfuzz", "ed", "_", "auto", "_", "file", "_", "provider", "Ġ=", "ĠConsume", "Auto", "File", "(", "fuzz", "ed", "_", "data", "_", "provider", ");", "Ċ", "ĠĠĠ", "ĠC", "Auto", "File", "Ġfuzz", "ed", "_", "auto", "_", "file", "Ġ=", "Ġfuzz", "ed", "_", "auto", "_", "file", "_", "provider", ".", "open", "();", "Ċ", "ĠĠĠ", "Ġ//", "ĠRe", "-", "using", "Ġblock", "_", "policy", "_", "estimator", "Ġacross", "Ġruns", "Ġto", "Ġavoid", "Ġcost", "ly", "Ġcreation", "Ġof", "ĠCBlock", "Policy", "Estimator", "Ġobject", ".", "Ċ", "ĠĠĠ", "Ġstatic", "ĠCBlock", "Policy", "Estimator", "Ġblock", "_", "policy", "_", "estimator", ";", "Ċ", "ĠĠĠ", "Ġif", "Ġ(", "block", "_", "policy", "_", "estimator", ".", "Read", "(", "fuzz", "ed", "_", "auto", "_", "file", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġblock", "_", "policy", "_", "estimator", ".", "Write", "(", "fuzz", "ed", "_", "auto", "_", "file", ");", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::989", "code": "#include \"Config.h\"\n\nusing namespace std;\nusing namespace ramulator;\n\n//Config::Config() {}\n\n//Config::Config(const char* config_fname) : file(config_fname) \nvoid Config::parse(const string& fname)\n{\n    ifstream file(fname);\n    assert(file.good() && \"Bad config file\");\n    string line;\n    while (getline(file, line)) {\n        char delim[] = \" \\t=\";\n        vector<string> tokens;\n\n        while (true) {\n            size_t start = line.find_first_not_of(delim);\n            if (start == string::npos) \n                break;\n\n            size_t end = line.find_first_of(delim, start);\n            if (end == string::npos) {\n                tokens.push_back(line.substr(start));\n                break;\n            }\n\n            tokens.push_back(line.substr(start, end - start));\n            line = line.substr(end);\n        }\n\n        // empty line\n        if (!tokens.size())\n            continue;\n\n        // comment line\n        if (tokens[0][0] == '#')\n            continue;\n\n        // parameter line\n        assert(tokens.size() == 2 && \"Only allow two tokens in one line\");\n\n        options[tokens[0]] = tokens[1];\n    }\n    file.close();\n}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Config", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "Ġram", "ulator", ";", "Ċ", "Ċ", "//", "Config", "::", "Config", "()", "Ġ{}", "Ċ", "Ċ", "//", "Config", "::", "Config", "(", "const", "Ġchar", "*", "Ġconfig", "_", "fname", ")", "Ġ:", "Ġfile", "(", "config", "_", "fname", ")", "Ġ", "Ċ", "void", "ĠConfig", "::", "parse", "(", "const", "Ġstring", "&", "Ġfname", ")", "Ċ", "{", "Ċ", "ĠĠĠ", "Ġif", "stream", "Ġfile", "(", "fname", ");", "Ċ", "ĠĠĠ", "Ġassert", "(", "file", ".", "good", "()", "Ġ&&", "Ġ\"", "Bad", "Ġconfig", "Ġfile", "\");", "Ċ", "ĠĠĠ", "Ġstring", "Ġline", ";", "Ċ", "ĠĠĠ", "Ġwhile", "Ġ(", "getline", "(", "file", ",", "Ġline", "))", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠ", "Ġchar", "Ġdelim", "[]", "Ġ=", "Ġ\"", "Ġ\\", "t", "=\"", ";", "Ċ", "ĠĠĠĠĠĠĠ", "Ġvector", "<", "string", ">", "Ġtokens", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġwhile", "Ġ(", "true", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsize", "_", "t", "Ġstart", "Ġ=", "Ġline", ".", "find", "_", "first", "_", "not", "_", "of", "(", "delim", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "start", "Ġ==", "Ġstring", "::", "npos", ")", "ĠĊ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġsize", "_", "t", "Ġend", "Ġ=", "Ġline", ".", "find", "_", "first", "_", "of", "(", "delim", ",", "Ġstart", ");", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "end", "Ġ==", "Ġstring", "::", "npos", ")", "Ġ{", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġtokens", ".", "push", "_", "back", "(", "line", ".", "substr", "(", "start", "));", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġbreak", ";", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġtokens", ".", "push", "_", "back", "(", "line", ".", "substr", "(", "start", ",", "Ġend", "Ġ-", "Ġstart", "));", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġline", "Ġ=", "Ġline", ".", "substr", "(", "end", ");", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ}", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "Ġempty", "Ġline", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(!", "tokens", ".", "size", "())", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "Ġcomment", "Ġline", "Ċ", "ĠĠĠĠĠĠĠ", "Ġif", "Ġ(", "tokens", "[", "0", "][", "0", "]", "Ġ==", "Ġ'#')", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġcontinue", ";", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġ//", "Ġparameter", "Ġline", "Ċ", "ĠĠĠĠĠĠĠ", "Ġassert", "(", "tokens", ".", "size", "()", "Ġ==", "Ġ2", "Ġ&&", "Ġ\"", "Only", "Ġallow", "Ġtwo", "Ġtokens", "Ġin", "Ġone", "Ġline", "\");", "Ċ", "Ċ", "ĠĠĠĠĠĠĠ", "Ġoptions", "[", "tokens", "[", "0", "]]", "Ġ=", "Ġtokens", "[", "1", "];", "Ċ", "ĠĠĠ", "Ġ}", "Ċ", "ĠĠĠ", "Ġfile", ".", "close", "();", "Ċ", "}", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::990", "code": "#include <mingpp.h>\n#include <cstdlib>\n\nint main()\n{\n\ttry {\n\t\tSWFMovie *m = new SWFMovie(8);\n\t\tSWFBitmap *bmp = new SWFBitmap(MEDIADIR \"/image01.png\");\n\n\t\tSWFFillStyle *fill =  SWFFillStyle::BitmapFillStyle(bmp, SWFFILL_CLIPPED_BITMAP);\n\t\tSWFShape *shape = new SWFShape();\n\t\tshape->setRightFillStyle(fill);\n\t\n\t\tshape->setLine(1, 0,0,0,255);\n\t\tshape->drawLine(100, 0);\n\t\tshape->drawLine(0, 100);\n\t\tshape->drawLine(-100, 0);\n\t\tshape->drawLine(0, -100);\n\n\t\tm->add(shape);\n\t\tm->save(\"test05.swf\");\n\t}\n\tcatch(SWFException &e)\n\t{\n\t\tstd::cerr << \"SWFException: \" << e.what() << std::endl << std::endl;\n\t\treturn EXIT_FAILURE;\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "ming", "pp", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "c", "stdlib", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "try", "Ġ{", "Ċ", "ĉ", "ĉ", "SWF", "Movie", "Ġ*", "m", "Ġ=", "Ġnew", "ĠS", "WF", "Movie", "(", "8", ");", "Ċ", "ĉ", "ĉ", "SW", "FB", "it", "map", "Ġ*", "bmp", "Ġ=", "Ġnew", "ĠSW", "FB", "it", "map", "(", "MEDI", "AD", "IR", "Ġ\"/", "image", "01", ".", "png", "\");", "Ċ", "Ċ", "ĉ", "ĉ", "SW", "FF", "ill", "Style", "Ġ*", "fill", "Ġ=", "Ġ", "ĠSW", "FF", "ill", "Style", "::", "Bitmap", "Fill", "Style", "(", "bmp", ",", "ĠSW", "FF", "ILL", "_", "CLIP", "PED", "_", "BITMAP", ");", "Ċ", "ĉ", "ĉ", "SWF", "Shape", "Ġ*", "shape", "Ġ=", "Ġnew", "ĠS", "WF", "Shape", "();", "Ċ", "ĉ", "ĉ", "shape", "->", "set", "Right", "Fill", "Style", "(", "fill", ");", "Ċ", "ĉĊ", "ĉ", "ĉ", "shape", "->", "setLine", "(", "1", ",", "Ġ0", ",", "0", ",", "0", ",", "255", ");", "Ċ", "ĉ", "ĉ", "shape", "->", "drawLine", "(", "100", ",", "Ġ0", ");", "Ċ", "ĉ", "ĉ", "shape", "->", "drawLine", "(", "0", ",", "Ġ100", ");", "Ċ", "ĉ", "ĉ", "shape", "->", "drawLine", "(-", "100", ",", "Ġ0", ");", "Ċ", "ĉ", "ĉ", "shape", "->", "drawLine", "(", "0", ",", "Ġ-", "100", ");", "Ċ", "Ċ", "ĉ", "ĉ", "m", "->", "add", "(", "shape", ");", "Ċ", "ĉ", "ĉ", "m", "->", "save", "(\"", "test", "05", ".", "swf", "\");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "catch", "(", "SWF", "Exception", "Ġ&", "e", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "cerr", "Ġ<<", "Ġ\"", "SWF", "Exception", ":", "Ġ\"", "Ġ<<", "Ġe", ".", "what", "()", "Ġ<<", "Ġstd", "::", "endl", "Ġ<<", "Ġstd", "::", "endl", ";", "Ċ", "ĉ", "ĉ", "return", "ĠEXIT", "_", "FAILURE", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::991", "code": "// =============================================================================\n// PROJECT CHRONO - http://projectchrono.org\n//\n// Copyright (c) 2014 projectchrono.org\n// All rights reserved.\n//\n// Use of this source code is governed by a BSD-style license that can be found\n// in the LICENSE file at the top level of the distribution and at\n// http://projectchrono.org/license-chrono.txt.\n//\n// =============================================================================\n// Authors: Radu Serban, Justin Madsen\n// =============================================================================\n//\n// UAZBUS wheel subsystem\n//\n// =============================================================================\n\n#include <algorithm>\n\n#include \"chrono_vehicle/ChVehicleModelData.h\"\n#include \"chrono_models/vehicle/uaz/UAZBUS_Wheel.h\"\n#include \"chrono_thirdparty/filesystem/path.h\"\n\nnamespace chrono {\nnamespace vehicle {\nnamespace uaz {\n\n// -----------------------------------------------------------------------------\n// Static variables\n// -----------------------------------------------------------------------------\n\nconst double UAZBUS_Wheel::m_mass = 12.0;\nconst ChVector<> UAZBUS_Wheel::m_inertia(0.240642, 0.410903, 0.240642);\n\nconst double UAZBUS_Wheel::m_radius = 0.2032;\nconst double UAZBUS_Wheel::m_width = 0.1524;\n\n// -----------------------------------------------------------------------------\n// -----------------------------------------------------------------------------\nUAZBUS_Wheel::UAZBUS_Wheel(const std::string& name) : ChWheel(name) {\n    m_vis_mesh_file = \"uaz/uaz_rim.obj\";\n}\n\n}  // end namespace uaz\n}  // end namespace vehicle\n}  // end namespace chrono\n", "code_tokens": ["Ġ//", "Ġ=================================================================", "============", "Ċ", "//", "ĠPRO", "JECT", "ĠC", "HR", "ON", "O", "Ġ-", "Ġhttp", "://", "project", "chrono", ".", "org", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", "Ġproject", "chrono", ".", "org", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgover", "ned", "Ġby", "Ġa", "ĠBSD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ċ", "//", "Ġin", "Ġthe", "ĠLICENSE", "Ġfile", "Ġat", "Ġthe", "Ġtop", "Ġlevel", "Ġof", "Ġthe", "Ġdistribution", "Ġand", "Ġat", "Ċ", "//", "Ġhttp", "://", "project", "chrono", ".", "org", "/", "license", "-", "chrono", ".", "txt", ".", "Ċ", "//", "Ċ", "//", "Ġ=================================================================", "============", "Ċ", "//", "ĠAuth", "ors", ":", "ĠRad", "u", "ĠSer", "ban", ",", "ĠJust", "in", "ĠM", "ads", "en", "Ċ", "//", "Ġ=================================================================", "============", "Ċ", "//", "Ċ", "//", "ĠU", "AZ", "BUS", "Ġwheel", "Ġsubsystem", "Ċ", "//", "Ċ", "//", "Ġ=================================================================", "============", "Ċ", "Ċ", "#", "include", "Ġ<", "algorithm", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "chrono", "_", "vehicle", "/", "Ch", "Vehicle", "Model", "Data", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "chrono", "_", "models", "/", "vehicle", "/", "ua", "z", "/", "UA", "Z", "BUS", "_", "Wheel", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "chrono", "_", "third", "party", "/", "filesystem", "/", "path", ".", "h", "\"", "Ċ", "Ċ", "namespace", "Ġch", "rono", "Ġ{", "Ċ", "namespace", "Ġvehicle", "Ġ{", "Ċ", "namespace", "Ġu", "az", "Ġ{", "Ċ", "Ċ", "//", "Ġ-----------------------------------------------------------------------------", "Ċ", "//", "ĠStatic", "Ġvariables", "Ċ", "//", "Ġ-----------------------------------------------------------------------------", "Ċ", "Ċ", "const", "Ġdouble", "ĠU", "AZ", "BUS", "_", "Wheel", "::", "m", "_", "mass", "Ġ=", "Ġ12", ".", "0", ";", "Ċ", "const", "ĠCh", "Vector", "<>", "ĠU", "AZ", "BUS", "_", "Wheel", "::", "m", "_", "in", "ertia", "(", "0", ".", "24", "064", "2", ",", "Ġ0", ".", "4", "109", "03", ",", "Ġ0", ".", "24", "064", "2", ");", "Ċ", "Ċ", "const", "Ġdouble", "ĠU", "AZ", "BUS", "_", "Wheel", "::", "m", "_", "radius", "Ġ=", "Ġ0", ".", "20", "32", ";", "Ċ", "const", "Ġdouble", "ĠU", "AZ", "BUS", "_", "Wheel", "::", "m", "_", "width", "Ġ=", "Ġ0", ".", "15", "24", ";", "Ċ", "Ċ", "//", "Ġ-----------------------------------------------------------------------------", "Ċ", "//", "Ġ-----------------------------------------------------------------------------", "Ċ", "UA", "Z", "BUS", "_", "Wheel", "::", "UA", "Z", "BUS", "_", "Wheel", "(", "const", "Ġstd", "::", "string", "&", "Ġname", ")", "Ġ:", "ĠCh", "Wheel", "(", "name", ")", "Ġ{", "Ċ", "ĠĠĠ", "Ġm", "_", "vis", "_", "mesh", "_", "file", "Ġ=", "Ġ\"", "ua", "z", "/", "ua", "z", "_", "r", "im", ".", "obj", "\";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġend", "Ġnamespace", "Ġu", "az", "Ċ", "}", "Ġ", "Ġ//", "Ġend", "Ġnamespace", "Ġvehicle", "Ċ", "}", "Ġ", "Ġ//", "Ġend", "Ġnamespace", "Ġch", "rono", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::992", "code": "// Example program for the linear_least_square_fitting function\n// on a set of 3D triangles\n#include <CGAL/Simple_cartesian.h>\n#include <CGAL/linear_least_squares_fitting_3.h>\n#include <vector>\n\ntypedef double                      FT;\ntypedef CGAL::Simple_cartesian<FT>  K;\ntypedef K::Line_3                   Line;\ntypedef K::Plane_3                  Plane;\ntypedef K::Point_3                  Point;\ntypedef K::Triangle_3               Triangle;\n\nint main(void)\n{\n  std::vector<Triangle> triangles;\n  Point a(1.0,2.0,3.0);\n  Point b(4.0,0.0,6.0);\n  Point c(7.0,8.0,9.0);\n  Point d(8.0,7.0,6.0);\n  Point e(5.0,3.0,4.0);\n  triangles.push_back(Triangle(a,b,c));\n  triangles.push_back(Triangle(a,b,d));\n  triangles.push_back(Triangle(d,e,c));\n\n  Line line;\n  Plane plane;\n\n  // fit plane to whole triangles\n  linear_least_squares_fitting_3(triangles.begin(),triangles.end(),plane,CGAL::Dimension_tag<2>());\n  \n  // fit line to triangle vertices\n  linear_least_squares_fitting_3(triangles.begin(),triangles.end(),line, CGAL::Dimension_tag<0>());\n  \n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠExample", "Ġprogram", "Ġfor", "Ġthe", "Ġlinear", "_", "least", "_", "square", "_", "fit", "ting", "Ġfunction", "Ċ", "//", "Ġon", "Ġa", "Ġset", "Ġof", "Ġ3", "D", "Ġtriangles", "Ċ", "#", "include", "Ġ<", "CG", "AL", "/", "Simple", "_", "car", "tesian", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "CG", "AL", "/", "linear", "_", "least", "_", "s", "quares", "_", "fit", "ting", "_", "3", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "typedef", "Ġdouble", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠFT", ";", "Ċ", "typedef", "ĠCG", "AL", "::", "Simple", "_", "car", "tesian", "<", "FT", ">", "Ġ", "ĠK", ";", "Ċ", "typedef", "ĠK", "::", "Line", "_", "3", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠLine", ";", "Ċ", "typedef", "ĠK", "::", "Plane", "_", "3", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠPlane", ";", "Ċ", "typedef", "ĠK", "::", "Point", "_", "3", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠPoint", ";", "Ċ", "typedef", "ĠK", "::", "Triangle", "_", "3", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "ĠTriangle", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "Triangle", ">", "Ġtriangles", ";", "Ċ", "Ġ", "ĠPoint", "Ġa", "(", "1", ".", "0", ",", "2", ".", "0", ",", "3", ".", "0", ");", "Ċ", "Ġ", "ĠPoint", "Ġb", "(", "4", ".", "0", ",", "0", ".", "0", ",", "6", ".", "0", ");", "Ċ", "Ġ", "ĠPoint", "Ġc", "(", "7", ".", "0", ",", "8", ".", "0", ",", "9", ".", "0", ");", "Ċ", "Ġ", "ĠPoint", "Ġd", "(", "8", ".", "0", ",", "7", ".", "0", ",", "6", ".", "0", ");", "Ċ", "Ġ", "ĠPoint", "Ġe", "(", "5", ".", "0", ",", "3", ".", "0", ",", "4", ".", "0", ");", "Ċ", "Ġ", "Ġtriangles", ".", "push", "_", "back", "(", "Triangle", "(", "a", ",", "b", ",", "c", "));", "Ċ", "Ġ", "Ġtriangles", ".", "push", "_", "back", "(", "Triangle", "(", "a", ",", "b", ",", "d", "));", "Ċ", "Ġ", "Ġtriangles", ".", "push", "_", "back", "(", "Triangle", "(", "d", ",", "e", ",", "c", "));", "Ċ", "Ċ", "Ġ", "ĠLine", "Ġline", ";", "Ċ", "Ġ", "ĠPlane", "Ġplane", ";", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġfit", "Ġplane", "Ġto", "Ġwhole", "Ġtriangles", "Ċ", "Ġ", "Ġlinear", "_", "least", "_", "s", "quares", "_", "fit", "ting", "_", "3", "(", "triangles", ".", "begin", "(),", "triangles", ".", "end", "(),", "plane", ",", "CG", "AL", "::", "Dimension", "_", "tag", "<", "2", ">());", "Ċ", "ĠĠĊ", "Ġ", "Ġ//", "Ġfit", "Ġline", "Ġto", "Ġtriangle", "Ġvertices", "Ċ", "Ġ", "Ġlinear", "_", "least", "_", "s", "quares", "_", "fit", "ting", "_", "3", "(", "triangles", ".", "begin", "(),", "triangles", ".", "end", "(),", "line", ",", "ĠCG", "AL", "::", "Dimension", "_", "tag", "<", "0", ">());", "Ċ", "ĠĠĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::993", "code": "/**\n * This file is part of the CernVM File System.\n */\n\n#include <gtest/gtest.h>\n\n#include \"util/pointer.h\"\n#include \"util/raii_temp_dir.h\"\n\n#include \"platform.h\"\n#include \"util/posix.h\"\n\nstatic bool DirExists(const std::string& dir) {\n  platform_stat64 dir_stat;\n  int ret = platform_stat(dir.c_str(), &dir_stat);\n  return ret == 0;\n}\n\nclass T_RaiiTempDir : public ::testing::Test {};\n\nTEST_F(T_RaiiTempDir, Basic) {\n  UniquePtr<RaiiTempDir> temp_dir(\n      RaiiTempDir::Create(GetCurrentWorkingDirectory() + \"/test_dir\"));\n  ASSERT_TRUE(temp_dir.IsValid());\n\n  const std::string temp_path = temp_dir->dir();\n\n  temp_dir.Destroy();\n\n  ASSERT_FALSE(DirExists(temp_path));\n}\n\nTEST_F(T_RaiiTempDir, DeletedExternally) {\n  UniquePtr<RaiiTempDir> temp_dir(\n      RaiiTempDir::Create(GetCurrentWorkingDirectory() + \"/test_dir\"));\n  ASSERT_TRUE(temp_dir.IsValid());\n\n  const std::string temp_path = temp_dir->dir();\n\n  RemoveTree(temp_path);\n\n  ASSERT_FALSE(DirExists(temp_path));\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠC", "ern", "VM", "ĠFile", "ĠSystem", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "gtest", "/", "gtest", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", "/", "pointer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "ra", "ii", "_", "temp", "_", "dir", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "platform", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "posix", ".", "h", "\"", "Ċ", "Ċ", "static", "Ġbool", "ĠDir", "Exists", "(", "const", "Ġstd", "::", "string", "&", "Ġdir", ")", "Ġ{", "Ċ", "Ġ", "Ġplatform", "_", "stat", "64", "Ġdir", "_", "stat", ";", "Ċ", "Ġ", "Ġint", "Ġret", "Ġ=", "Ġplatform", "_", "stat", "(", "dir", ".", "c", "_", "str", "(),", "Ġ&", "dir", "_", "stat", ");", "Ċ", "Ġ", "Ġreturn", "Ġret", "Ġ==", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "class", "ĠT", "_", "Ra", "ii", "TempDir", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ġ{};", "Ċ", "Ċ", "TEST", "_", "F", "(", "T", "_", "Ra", "ii", "TempDir", ",", "ĠBasic", ")", "Ġ{", "Ċ", "Ġ", "ĠUnique", "Ptr", "<", "Ra", "ii", "TempDir", ">", "Ġtemp", "_", "dir", "(", "Ċ", "ĠĠĠĠĠ", "ĠR", "a", "ii", "TempDir", "::", "Create", "(", "GetCurrent", "WorkingDirectory", "()", "Ġ+", "Ġ\"/", "test", "_", "dir", "\"));", "Ċ", "Ġ", "ĠASSERT", "_", "TRUE", "(", "temp", "_", "dir", ".", "IsValid", "());", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġtemp", "_", "path", "Ġ=", "Ġtemp", "_", "dir", "->", "dir", "();", "Ċ", "Ċ", "Ġ", "Ġtemp", "_", "dir", ".", "Destroy", "();", "Ċ", "Ċ", "Ġ", "ĠASSERT", "_", "FALSE", "(", "Dir", "Exists", "(", "temp", "_", "path", "));", "Ċ", "}", "Ċ", "Ċ", "TEST", "_", "F", "(", "T", "_", "Ra", "ii", "TempDir", ",", "ĠDe", "leted", "Extern", "ally", ")", "Ġ{", "Ċ", "Ġ", "ĠUnique", "Ptr", "<", "Ra", "ii", "TempDir", ">", "Ġtemp", "_", "dir", "(", "Ċ", "ĠĠĠĠĠ", "ĠR", "a", "ii", "TempDir", "::", "Create", "(", "GetCurrent", "WorkingDirectory", "()", "Ġ+", "Ġ\"/", "test", "_", "dir", "\"));", "Ċ", "Ġ", "ĠASSERT", "_", "TRUE", "(", "temp", "_", "dir", ".", "IsValid", "());", "Ċ", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġtemp", "_", "path", "Ġ=", "Ġtemp", "_", "dir", "->", "dir", "();", "Ċ", "Ċ", "Ġ", "ĠRemove", "Tree", "(", "temp", "_", "path", ");", "Ċ", "Ċ", "Ġ", "ĠASSERT", "_", "FALSE", "(", "Dir", "Exists", "(", "temp", "_", "path", "));", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::994", "code": "#include \"Halide.h\"\n\nusing namespace Halide;\n\n// Compile a simple pipeline to an object and to C code.\nHalideExtern_2(int, an_extern_func, int, int);\n\nint main(int argc, char **argv) {\n    Func f, g, h;\n    ImageParam input(UInt(16), 2);\n    Var x, y;\n\n    f(x, y) = (input(clamp(x+2, 0, input.width()-1), clamp(y-2, 0, input.height()-1)) * 17)/13;\n\n    h.define_extern(\"an_extern_stage\", {f}, Int(16), 0);\n\n    g(x, y) = f(y, x) + f(x, y) + cast<uint16_t>(an_extern_func(x, y)) + h();\n\n    h.compute_root();\n    f.compute_root();\n    f.debug_to_file(\"f.tiff\");\n\n    std::vector<Argument> args;\n    args.push_back(input);\n\n    g.compile_to_header(\"pipeline_native.h\", args, \"pipeline_native\");\n    g.compile_to_header(\"pipeline_c.h\", args, \"pipeline_c\");\n    g.compile_to_object(\"pipeline_native.o\", args, \"pipeline_native\");\n    g.compile_to_c(\"pipeline_c.c\", args, \"pipeline_c\");\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Hal", "ide", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠH", "al", "ide", ";", "Ċ", "Ċ", "//", "ĠCompile", "Ġa", "Ġsimple", "Ġpipeline", "Ġto", "Ġan", "Ġobject", "Ġand", "Ġto", "ĠC", "Ġcode", ".", "Ċ", "Hal", "ide", "Extern", "_", "2", "(", "int", ",", "Ġan", "_", "extern", "_", "func", ",", "Ġint", ",", "Ġint", ");", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġargc", ",", "Ġchar", "Ġ**", "argv", ")", "Ġ{", "Ċ", "ĠĠĠ", "ĠFunc", "Ġf", ",", "Ġg", ",", "Ġh", ";", "Ċ", "ĠĠĠ", "ĠImage", "Param", "Ġinput", "(", "UInt", "(", "16", "),", "Ġ2", ");", "Ċ", "ĠĠĠ", "ĠVar", "Ġx", ",", "Ġy", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġf", "(", "x", ",", "Ġy", ")", "Ġ=", "Ġ(", "input", "(", "clamp", "(", "x", "+", "2", ",", "Ġ0", ",", "Ġinput", ".", "width", "()-", "1", "),", "Ġclamp", "(", "y", "-", "2", ",", "Ġ0", ",", "Ġinput", ".", "height", "()-", "1", "))", "Ġ*", "Ġ17", ")/", "13", ";", "Ċ", "Ċ", "ĠĠĠ", "Ġh", ".", "define", "_", "extern", "(\"", "an", "_", "extern", "_", "stage", "\",", "Ġ{", "f", "},", "ĠInt", "(", "16", "),", "Ġ0", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġg", "(", "x", ",", "Ġy", ")", "Ġ=", "Ġf", "(", "y", ",", "Ġx", ")", "Ġ+", "Ġf", "(", "x", ",", "Ġy", ")", "Ġ+", "Ġcast", "<", "uint", "16", "_", "t", ">(", "an", "_", "extern", "_", "func", "(", "x", ",", "Ġy", "))", "Ġ+", "Ġh", "();", "Ċ", "Ċ", "ĠĠĠ", "Ġh", ".", "compute", "_", "root", "();", "Ċ", "ĠĠĠ", "Ġf", ".", "compute", "_", "root", "();", "Ċ", "ĠĠĠ", "Ġf", ".", "debug", "_", "to", "_", "file", "(\"", "f", ".", "tiff", "\");", "Ċ", "Ċ", "ĠĠĠ", "Ġstd", "::", "vector", "<", "Argument", ">", "Ġargs", ";", "Ċ", "ĠĠĠ", "Ġargs", ".", "push", "_", "back", "(", "input", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġg", ".", "compile", "_", "to", "_", "header", "(\"", "pipeline", "_", "native", ".", "h", "\",", "Ġargs", ",", "Ġ\"", "pipeline", "_", "native", "\");", "Ċ", "ĠĠĠ", "Ġg", ".", "compile", "_", "to", "_", "header", "(\"", "pipeline", "_", "c", ".", "h", "\",", "Ġargs", ",", "Ġ\"", "pipeline", "_", "c", "\");", "Ċ", "ĠĠĠ", "Ġg", ".", "compile", "_", "to", "_", "object", "(\"", "pipeline", "_", "native", ".", "o", "\",", "Ġargs", ",", "Ġ\"", "pipeline", "_", "native", "\");", "Ċ", "ĠĠĠ", "Ġg", ".", "compile", "_", "to", "_", "c", "(\"", "pipeline", "_", "c", ".", "c", "\",", "Ġargs", ",", "Ġ\"", "pipeline", "_", "c", "\");", "Ċ", "ĠĠĠ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::995", "code": "/*\n * F21Handler.cpp\n *\n *  Created on: 15 maj 2014\n *      Author: MattLech\n */\n\n#include \"F21Handler.h\"\n\nstatic F21Handler *instance;\n\nF21Handler *F21Handler::getInstance()\n{\n  if (!instance)\n  {\n    instance = new F21Handler();\n  };\n  return instance;\n};\n\nF21Handler::F21Handler()\n{\n}\n\nint F21Handler::execute(Command *command)\n{\n\n  ParameterList::getInstance()->readValue(command->getP());\n\n  return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠF", "21", "Handler", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ15", "Ġmaj", "Ġ2014", "Ċ", "Ġ*", "ĠĠĠĠĠ", "ĠAuthor", ":", "ĠM", "att", "Le", "ch", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "F", "21", "Handler", ".", "h", "\"", "Ċ", "Ċ", "static", "ĠF", "21", "Handler", "Ġ*", "instance", ";", "Ċ", "Ċ", "F", "21", "Handler", "Ġ*", "F", "21", "Handler", "::", "getInstance", "()", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(!", "instance", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "ĠĠĠ", "Ġinstance", "Ġ=", "Ġnew", "ĠF", "21", "Handler", "();", "Ċ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġreturn", "Ġinstance", ";", "Ċ", "};", "Ċ", "Ċ", "F", "21", "Handler", "::", "F", "21", "Handler", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "int", "ĠF", "21", "Handler", "::", "execute", "(", "Command", "Ġ*", "command", ")", "Ċ", "{", "Ċ", "Ċ", "Ġ", "ĠParameter", "List", "::", "getInstance", "()->", "read", "Value", "(", "command", "->", "getP", "());", "Ċ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::996", "code": "// Boost Lambda Library -- control_constructs_common.hpp -------------------\n\n// Copyright (C) 1999, 2000 Jaakko Järvi (jaakko.jarvi@cs.utu.fi)\n// Copyright (C) 2000 Gary Powell (powellg@amazon.com)\n//\n// Distributed under the Boost Software License, Version 1.0. (See\n// accompanying file LICENSE_1_0.txt or copy at\n// http://www.boost.org/LICENSE_1_0.txt)\n//\n// For more information, see www.boost.org\n\n// --------------------------------------------------------------------------\n\n#if !defined(BOOST_CONTROL_CONSTRUCTS_COMMON_HPP)\n#define BOOST_CONTROL_CONSTRUCTS_COMMON_HPP\n\nnamespace boost { \nnamespace lambda {\n\n  // special types of lambda functors, used with control structures\n  // to guarantee that they are composed correctly.\n\ntemplate<class Tag, class LambdaFunctor>\nclass tagged_lambda_functor;\n\ntemplate<class Tag, class Args>\nclass tagged_lambda_functor<Tag, lambda_functor<Args> > \n  : public lambda_functor<Args> \n{\npublic:\n  tagged_lambda_functor(const Args& a) : lambda_functor<Args>(a) {}\n\n  tagged_lambda_functor(const lambda_functor<Args>& a) \n    : lambda_functor<Args>(a) {}\n\n  // for the no body cases in control structures.\n  tagged_lambda_functor() : lambda_functor<Args>() {}\n};\n\n} // lambda\n} // boost\n\n#endif // BOOST_CONTROL_CONSTRUCTS_COMMON_HPP\n\n\n\n\n\n\n\n", "code_tokens": ["Ġ//", "ĠBo", "ost", "ĠLambda", "ĠLibrary", "Ġ--", "Ġcontrol", "_", "construct", "s", "_", "common", ".", "hpp", "Ġ----------------", "---", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ1", "999", ",", "Ġ2000", "ĠJ", "a", "ak", "ko", "ĠJ", "Ã¤", "r", "vi", "Ġ(", "ja", "ak", "ko", ".", "jar", "vi", "@", "cs", ".", "ut", "u", ".", "fi", ")", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2000", "ĠG", "ary", "ĠP", "ow", "ell", "Ġ(", "pow", "ell", "g", "@", "amazon", ".", "com", ")", "Ċ", "//", "Ċ", "//", "ĠD", "istributed", "Ġunder", "Ġthe", "ĠBo", "ost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ċ", "//", "Ġac", "company", "ing", "Ġfile", "ĠLICENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "//", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "LICENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//", "Ċ", "//", "ĠFor", "Ġmore", "Ġinformation", ",", "Ġsee", "Ġwww", ".", "boost", ".", "org", "Ċ", "Ċ", "//", "Ġ------------------------------------------------------------------------", "--", "Ċ", "Ċ", "#", "if", "Ġ!", "defined", "(", "BOOST", "_", "CONTROL", "_", "CONSTRUCT", "S", "_", "COMMON", "_", "HP", "P", ")", "Ċ", "#", "define", "ĠBOOST", "_", "CONTROL", "_", "CONSTRUCT", "S", "_", "COMMON", "_", "HP", "P", "Ċ", "Ċ", "namespace", "Ġboost", "Ġ{", "Ġ", "Ċ", "namespace", "Ġlambda", "Ġ{", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġspecial", "Ġtypes", "Ġof", "Ġlambda", "Ġfun", "ctor", "s", ",", "Ġused", "Ġwith", "Ġcontrol", "Ġstructures", "Ċ", "Ġ", "Ġ//", "Ġto", "Ġguarantee", "Ġthat", "Ġthey", "Ġare", "Ġcomposed", "Ġcorrectly", ".", "Ċ", "Ċ", "template", "<", "class", "ĠTag", ",", "Ġclass", "ĠLambda", "Fun", "ctor", ">", "Ċ", "class", "Ġtagged", "_", "lambda", "_", "functor", ";", "Ċ", "Ċ", "template", "<", "class", "ĠTag", ",", "Ġclass", "ĠArgs", ">", "Ċ", "class", "Ġtagged", "_", "lambda", "_", "functor", "<", "Tag", ",", "Ġlambda", "_", "functor", "<", "Args", ">", "Ġ>", "ĠĊ", "Ġ", "Ġ:", "Ġpublic", "Ġlambda", "_", "functor", "<", "Args", ">", "Ġ", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġtagged", "_", "lambda", "_", "functor", "(", "const", "ĠArgs", "&", "Ġa", ")", "Ġ:", "Ġlambda", "_", "functor", "<", "Args", ">(", "a", ")", "Ġ{}", "Ċ", "Ċ", "Ġ", "Ġtagged", "_", "lambda", "_", "functor", "(", "const", "Ġlambda", "_", "functor", "<", "Args", ">&", "Ġa", ")", "ĠĊ", "ĠĠĠ", "Ġ:", "Ġlambda", "_", "functor", "<", "Args", ">(", "a", ")", "Ġ{}", "Ċ", "Ċ", "Ġ", "Ġ//", "Ġfor", "Ġthe", "Ġno", "Ġbody", "Ġcases", "Ġin", "Ġcontrol", "Ġstructures", ".", "Ċ", "Ġ", "Ġtagged", "_", "lambda", "_", "functor", "()", "Ġ:", "Ġlambda", "_", "functor", "<", "Args", ">()", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġlambda", "Ċ", "}", "Ġ//", "Ġboost", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠBOOST", "_", "CONTROL", "_", "CONSTRUCT", "S", "_", "COMMON", "_", "HP", "P", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::997", "code": "/** @file\n *****************************************************************************\n\n Declaration of interfaces for a gadget that can be created from an R1CS constraint system.\n\n *****************************************************************************\n * @author     This file is part of libsnark, developed by SCIPR Lab\n *             and contributors (see AUTHORS).\n * @copyright  MIT license (see LICENSE file)\n *****************************************************************************/\n\n#ifndef GADGET_FROM_R1CS_HPP_\n#define GADGET_FROM_R1CS_HPP_\n\n#include <map>\n\n#include \"gadgetlib1/gadget.hpp\"\n\nnamespace libsnark {\n\ntemplate<typename FieldT>\nclass gadget_from_r1cs : public gadget<FieldT> {\n\nprivate:\n    const std::vector<pb_variable_array<FieldT> > vars;\n    const r1cs_constraint_system<FieldT> cs;\n    std::map<size_t, size_t> cs_to_vars;\n\npublic:\n\n    gadget_from_r1cs(protoboard<FieldT> &pb,\n                     const std::vector<pb_variable_array<FieldT> > &vars,\n                     const r1cs_constraint_system<FieldT> &cs,\n                     const std::string &annotation_prefix);\n\n    void generate_r1cs_constraints();\n    void generate_r1cs_witness(const r1cs_primary_input<FieldT> &primary_input,\n                               const r1cs_auxiliary_input<FieldT> &auxiliary_input);\n};\n\n} // libsnark\n\n#include \"gadgetlib1/gadgets/gadget_from_r1cs.tcc\"\n\n#endif // GADGET_FROM_R1CS_HPP_\n", "code_tokens": ["Ġ/**", "Ġ@", "file", "Ċ", "Ġ*************************************************************************", "****", "Ċ", "Ċ", "ĠDeclaration", "Ġof", "Ġinterfaces", "Ġfor", "Ġa", "Ġgadget", "Ġthat", "Ġcan", "Ġbe", "Ġcreated", "Ġfrom", "Ġan", "ĠR", "1", "CS", "Ġconstraint", "Ġsystem", ".", "Ċ", "Ċ", "Ġ*************************************************************************", "****", "Ċ", "Ġ*", "Ġ@", "author", "ĠĠĠĠ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġlib", "sn", "ark", ",", "Ġde", "veloped", "Ġby", "ĠSCI", "PR", "ĠL", "ab", "Ċ", "Ġ*", "ĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġand", "Ġcontrib", "utors", "Ġ(", "see", "ĠAUT", "HOR", "S", ").", "Ċ", "Ġ*", "Ġ@", "copyright", "Ġ", "ĠMIT", "Ġlicense", "Ġ(", "see", "ĠLICENSE", "Ġfile", ")", "Ċ", "Ġ*****************************************************************************/", "Ċ", "Ċ", "#", "ifndef", "ĠG", "AD", "GET", "_", "FROM", "_", "R", "1", "CS", "_", "HP", "P", "_", "Ċ", "#", "define", "ĠG", "AD", "GET", "_", "FROM", "_", "R", "1", "CS", "_", "HP", "P", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "gadget", "lib", "1", "/", "gadget", ".", "hpp", "\"", "Ċ", "Ċ", "namespace", "Ġlib", "sn", "ark", "Ġ{", "Ċ", "Ċ", "template", "<", "typename", "ĠField", "T", ">", "Ċ", "class", "Ġgadget", "_", "from", "_", "r", "1", "cs", "Ġ:", "Ġpublic", "Ġgadget", "<", "Field", "T", ">", "Ġ{", "Ċ", "Ċ", "private", ":", "Ċ", "ĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "pb", "_", "variable", "_", "array", "<", "Field", "T", ">", "Ġ>", "Ġvars", ";", "Ċ", "ĠĠĠ", "Ġconst", "Ġr", "1", "cs", "_", "constraint", "_", "system", "<", "Field", "T", ">", "Ġcs", ";", "Ċ", "ĠĠĠ", "Ġstd", "::", "map", "<", "size", "_", "t", ",", "Ġsize", "_", "t", ">", "Ġcs", "_", "to", "_", "vars", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ċ", "ĠĠĠ", "Ġgadget", "_", "from", "_", "r", "1", "cs", "(", "proto", "board", "<", "Field", "T", ">", "Ġ&", "pb", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "vector", "<", "pb", "_", "variable", "_", "array", "<", "Field", "T", ">", "Ġ>", "Ġ&", "vars", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġr", "1", "cs", "_", "constraint", "_", "system", "<", "Field", "T", ">", "Ġ&", "cs", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġstd", "::", "string", "Ġ&", "annotation", "_", "prefix", ");", "Ċ", "Ċ", "ĠĠĠ", "Ġvoid", "Ġgenerate", "_", "r", "1", "cs", "_", "constraints", "();", "Ċ", "ĠĠĠ", "Ġvoid", "Ġgenerate", "_", "r", "1", "cs", "_", "witness", "(", "const", "Ġr", "1", "cs", "_", "primary", "_", "input", "<", "Field", "T", ">", "Ġ&", "primary", "_", "input", ",", "Ċ", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġconst", "Ġr", "1", "cs", "_", "aux", "iliary", "_", "input", "<", "Field", "T", ">", "Ġ&", "aux", "iliary", "_", "input", ");", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġlib", "sn", "ark", "Ċ", "Ċ", "#", "include", "Ġ\"", "gadget", "lib", "1", "/", "gadget", "s", "/", "gadget", "_", "from", "_", "r", "1", "cs", ".", "t", "cc", "\"", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠG", "AD", "GET", "_", "FROM", "_", "R", "1", "CS", "_", "HP", "P", "_", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::998", "code": "#pragma once\n\n#include \"captions-handler.hpp\"\n#include \"captions-mssapi-stream.hpp\"\n#include <util/windows/HRError.hpp>\n#include <util/windows/ComPtr.hpp>\n#include <util/windows/WinHandle.hpp>\n#include <util/windows/CoTaskMemPtr.hpp>\n#include <util/threading.h>\n#include <util/platform.h>\n#include <sphelper.h>\n\n#include <obs.hpp>\n\n#include <thread>\n\nclass mssapi_captions : public captions_handler {\n\tfriend class CaptionStream;\n\n\tComPtr<CaptionStream>  audio;\n\tComPtr<ISpObjectToken> token;\n\tComPtr<ISpRecoGrammar> grammar;\n\tComPtr<ISpRecognizer>  recognizer;\n\tComPtr<ISpRecoContext> context;\n\n\tHANDLE                 notify;\n\tWinHandle              stop;\n\tstd::thread            t;\n\tbool                   started = false;\n\n\tvoid main_thread();\n\npublic:\n\tmssapi_captions(captions_cb callback, const std::string &lang);\n\tvirtual ~mssapi_captions();\n\tvirtual void pcm_data(const void *data, size_t frames) override;\n};\n", "code_tokens": ["Ġ#", "pragma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "ca", "ptions", "-", "handler", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ\"", "ca", "ptions", "-", "mss", "api", "-", "stream", ".", "hpp", "\"", "Ċ", "#", "include", "Ġ<", "util", "/", "windows", "/", "H", "RE", "rror", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "util", "/", "windows", "/", "ComPtr", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "util", "/", "windows", "/", "Win", "Handle", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "util", "/", "windows", "/", "Co", "Task", "Mem", "Ptr", ".", "hpp", ">", "Ċ", "#", "include", "Ġ<", "util", "/", "thread", "ing", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "util", "/", "platform", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sph", "elper", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "obs", ".", "hpp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "Ċ", "class", "Ġmss", "api", "_", "ca", "ptions", "Ġ:", "Ġpublic", "Ġca", "ptions", "_", "handler", "Ġ{", "Ċ", "ĉ", "friend", "Ġclass", "ĠCa", "ption", "Stream", ";", "Ċ", "Ċ", "ĉ", "ComPtr", "<", "Caption", "Stream", ">", "Ġ", "Ġaudio", ";", "Ċ", "ĉ", "ComPtr", "<", "IS", "pObject", "Token", ">", "Ġtoken", ";", "Ċ", "ĉ", "ComPtr", "<", "IS", "p", "Re", "co", "Grammar", ">", "Ġgrammar", ";", "Ċ", "ĉ", "ComPtr", "<", "IS", "p", "Recognizer", ">", "Ġ", "Ġrecogn", "izer", ";", "Ċ", "ĉ", "ComPtr", "<", "IS", "p", "Re", "co", "Context", ">", "Ġcontext", ";", "Ċ", "Ċ", "ĉ", "HANDLE", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġnotify", ";", "Ċ", "ĉ", "Win", "Handle", "ĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstop", ";", "Ċ", "ĉ", "std", "::", "thread", "ĠĠĠĠĠĠĠĠĠĠĠ", "Ġt", ";", "Ċ", "ĉ", "bool", "ĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠĠ", "Ġstarted", "Ġ=", "Ġfalse", ";", "Ċ", "Ċ", "ĉ", "void", "Ġmain", "_", "thread", "();", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "mss", "api", "_", "ca", "ptions", "(", "ca", "ptions", "_", "cb", "Ġcallback", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "lang", ");", "Ċ", "ĉ", "virtual", "Ġ~", "mss", "api", "_", "ca", "ptions", "();", "Ċ", "ĉ", "virtual", "Ġvoid", "Ġpcm", "_", "data", "(", "const", "Ġvoid", "Ġ*", "data", ",", "Ġsize", "_", "t", "Ġframes", ")", "Ġoverride", ";", "Ċ", "};", "Ċ"], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::999", "code": "#include \"cbase.h\"\n\n// memdbgon must be the last include file in a .cpp file!!!\n#include \"tier0/memdbgon.h\"\n\n// Dummy classes for entities that are created clientside.  Stops warnings about unknown entities when loading the map\n\nclass CASW_Snow_Volume_Dummy : public CServerOnlyPointEntity\n{\n\tDECLARE_CLASS( CASW_Snow_Volume_Dummy, CServerOnlyPointEntity );\npublic:\n\tvirtual void Spawn()\n\t{\n\t\tBaseClass::Spawn();\n\t\tUTIL_Remove(this);\n\t}\n};\n\nclass CASW_Scanner_Noise_Dummy : public CServerOnlyPointEntity\n{\n\tDECLARE_CLASS( CASW_Scanner_Noise_Dummy, CServerOnlyPointEntity );\npublic:\n\tvirtual void Spawn()\n\t{\n\t\tBaseClass::Spawn();\n\t\tUTIL_Remove(this);\n\t}\n};\n\nLINK_ENTITY_TO_CLASS( asw_snow_volume, CASW_Snow_Volume_Dummy );\nLINK_ENTITY_TO_CLASS( asw_scanner_noise, CASW_Scanner_Noise_Dummy );", "code_tokens": ["Ġ#", "include", "Ġ\"", "c", "base", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġmem", "dbg", "on", "Ġmust", "Ġbe", "Ġthe", "Ġlast", "Ġinclude", "Ġfile", "Ġin", "Ġa", "Ġ.", "cpp", "Ġfile", "!!!", "Ċ", "#", "include", "Ġ\"", "tier", "0", "/", "mem", "dbg", "on", ".", "h", "\"", "Ċ", "Ċ", "//", "ĠDummy", "Ġclasses", "Ġfor", "Ġentities", "Ġthat", "Ġare", "Ġcreated", "Ġclient", "side", ".", "Ġ", "ĠSto", "ps", "Ġwarnings", "Ġabout", "Ġunknown", "Ġentities", "Ġwhen", "Ġloading", "Ġthe", "Ġmap", "Ċ", "Ċ", "class", "ĠCAS", "W", "_", "S", "now", "_", "Volume", "_", "Dummy", "Ġ:", "Ġpublic", "ĠC", "Server", "Only", "Point", "Entity", "Ċ", "{", "Ċ", "ĉ", "DECLARE", "_", "CLASS", "(", "ĠCAS", "W", "_", "S", "now", "_", "Volume", "_", "Dummy", ",", "ĠC", "Server", "Only", "Point", "Entity", "Ġ);", "Ċ", "public", ":", "Ċ", "ĉ", "virtual", "Ġvoid", "ĠSpawn", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "BaseClass", "::", "Spawn", "();", "Ċ", "ĉ", "ĉ", "UTIL", "_", "Remove", "(", "this", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠCAS", "W", "_", "Scanner", "_", "Noise", "_", "Dummy", "Ġ:", "Ġpublic", "ĠC", "Server", "Only", "Point", "Entity", "Ċ", "{", "Ċ", "ĉ", "DECLARE", "_", "CLASS", "(", "ĠCAS", "W", "_", "Scanner", "_", "Noise", "_", "Dummy", ",", "ĠC", "Server", "Only", "Point", "Entity", "Ġ);", "Ċ", "public", ":", "Ċ", "ĉ", "virtual", "Ġvoid", "ĠSpawn", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "BaseClass", "::", "Spawn", "();", "Ċ", "ĉ", "ĉ", "UTIL", "_", "Remove", "(", "this", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "LINK", "_", "ENTITY", "_", "TO", "_", "CLASS", "(", "Ġas", "w", "_", "sn", "ow", "_", "volume", ",", "ĠCAS", "W", "_", "S", "now", "_", "Volume", "_", "Dummy", "Ġ);", "Ċ", "LINK", "_", "ENTITY", "_", "TO", "_", "CLASS", "(", "Ġas", "w", "_", "scanner", "_", "noise", ",", "ĠCAS", "W", "_", "Scanner", "_", "Noise", "_", "Dummy", "Ġ);"], "docstring": "", "docstring_tokens": []}
