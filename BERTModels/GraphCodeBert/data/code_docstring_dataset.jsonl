{"code": "int sumArray(int arr[], int n) {\n    int total = 0;\n    for (int i = 0; i < n; i++) {\n        total += arr[i];\n    }\n    return total;\n}", "docstring": "A C++ function to sum all elements of an integer array."}
{"code": "#include <vector>\n#include <algorithm>\nint findMax(const std::vector<int>& vec) {\n    if (vec.empty()) {\n        return -1; // Or throw an exception\n    }\n    return *std::max_element(vec.begin(), vec.end());\n}", "docstring": "Find the maximum element in a vector of integers."}
{"code": "#include <string>\n#include <algorithm>\nvoid reverseString(std::string& s) {\n    std::reverse(s.begin(), s.end());\n}", "docstring": "A C++ function to reverse a string passed by reference."}
{"code": "#include <string>\n#include <fstream>\n#include <sstream>\nclass FileHandler {\npublic:\n    std::string readFile(const std::string& path) {\n        std::ifstream file(path);\n        std::stringstream buffer;\n        if (file) {\n            buffer << file.rdbuf();\n        }\n        return buffer.str();\n    }\n    void writeFile(const std::string& path, const std::string& content) {\n        std::ofstream file(path);\n        if (file) {\n            file << content;\n        }\n    }\n};", "docstring": "A C++ class to handle file reading and writing operations."}
{"code": "bool isPalindrome(int num) {\n    if (num < 0) return false;\n    int original = num;\n    long reversed = 0;\n    while (num != 0) {\n        int digit = num % 10;\n        reversed = reversed * 10 + digit;\n        num /= 10;\n    }\n    return original == reversed;\n}", "docstring": "A C++ function to check if a number is a palindrome."}