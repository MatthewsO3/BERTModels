[
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 18 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 14 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 15 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 17 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 11 integers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 19 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 12 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 7 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 15 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 8 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 18 integers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 20 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 15 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 7 integers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 19 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 13 integers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 16 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 17 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 15 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 11 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 14 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 14 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 8 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 5 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 19 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 11 integers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 19 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 14 integers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 10 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 13 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 8 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 19 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 13 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 11 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 8 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 14 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 17 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 8 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 18 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 14 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 5 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 18 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 20 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 13 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 14 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 19 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 13 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 5 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 17 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 11 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 20 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 16 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 13 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 18 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 13 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 13 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 13 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 20 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 19 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 15 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 11 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 19 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 13 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 17 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 14 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 5 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 15 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 14 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 16 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 5 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 19 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 10 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 5 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 17 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 15 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 6 integers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 18 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 14 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 16 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 8 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 12 integers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 13 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 20 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 15 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 14 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 11 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 16 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 18 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 5 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 15 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 20 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 10 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 8 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 6 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 10 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 7 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 15 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 16 integers"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 13 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 5 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 16 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 11 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 11 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 8 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 17 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 7 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 6 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 18 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 14 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 16 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 11 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 11 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 15 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 7 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 19 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 10 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 19 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 13 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 5 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 14 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 18 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 14 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 7 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 18 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 15 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 18 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 8 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 12 integers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 13 integers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 10 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 20 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 16 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 8 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 16 integers"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 19 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 12 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 16 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 6 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 6 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 13 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 17 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 7 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 9 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract two numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 19 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 12 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to divide n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 13 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to sort three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 15 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply ten numbers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 20 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 13 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of ten elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 10 integers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Point with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to compare n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare n numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 6 integers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 19 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 17 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 9 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 10 integers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse three numbers"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 10 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 8 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 15 integers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 9 integers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to count n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count n numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 5 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 9 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with deposit functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of ten elements"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 5 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 10; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 10 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 20 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 14 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 5 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 5 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add three numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "// C++ program to write a c++ program to count three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count three numbers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 14 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 20 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 19 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 11 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 18 integers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 13; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 13 integers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "// C++ program to write a c++ program to sort odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of odd elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to compare odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare odd numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "struct Book {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Book with fields radius"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add two numbers"
  },
  {
    "code": "struct Point {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Point with fields title and author"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to count two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count two numbers"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 12 integers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of odd elements"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort ten numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to compare two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 17 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of three elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 11 integers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 19 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide three numbers"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with calculateArea functionality"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide odd numbers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of three elements"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 7 integers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of three elements"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply two numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "// C++ program to write a c++ program to subtract ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract ten numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "// C++ program to write a c++ program to subtract n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract n numbers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 9 integers"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 17 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 7 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "// C++ program to write a c++ program to add even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Product with computeSalary functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of n elements"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 20 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of even elements"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with deposit functionality"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields length and breadth"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 17 integers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "for (int i = 1; i <= 19; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 19 integers"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 18 integers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "// C++ program to write a c++ program to reverse even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 5; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 5 integers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of two elements"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to subtract odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract odd numbers"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to add n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add n numbers"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "struct Point {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Point with fields x and y"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "// C++ program to write a c++ program to count even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to sort two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort two numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of even elements"
  },
  {
    "code": "for (int i = 1; i <= 15; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 15 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to count ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to count ten numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of three elements"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of odd elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to add odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse odd numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse n numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of ten elements"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "struct Point {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Point with fields radius"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 11 integers"
  },
  {
    "code": "int sort(int n) {\n    if (n <= 1) return n;\n    return sort(n - 1) + sort(n - 2);\n}\nint main() {\n    cout << sort(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sort a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields id and name"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 11 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields title and author"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 8; ++i) {\n    // TODO: multiply logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to multiply the first 8 integers"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "// C++ program to write a c++ program to add ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to add ten numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of three elements"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields radius"
  },
  {
    "code": "struct Rectangle {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields length and breadth"
  },
  {
    "code": "struct Circle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields radius"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with deposit functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "for (int i = 1; i <= 18; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 18 integers"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields id and name"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "// C++ program to write a c++ program to subtract three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract three numbers"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of even elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to sort even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to sort even numbers"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sort an array of n elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Product with calculateArea functionality"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of ten elements"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Product with withdraw functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "int reverse(int n) {\n    if (n <= 1) return n;\n    return reverse(n - 1) + reverse(n - 2);\n}\nint main() {\n    cout << reverse(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to reverse a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "struct Employee {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 11; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 11 integers"
  },
  {
    "code": "for (int i = 1; i <= 20; ++i) {\n    // TODO: divide logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to divide the first 20 integers"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void sortArray(int arr[], int n) {\n    // TODO: implement sort logic\n}\nint main() {\n    int arr[10];\n    sortArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sort two variables of type T"
  },
  {
    "code": "struct Employee {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Employee with fields length and breadth"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with calculateArea functionality"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply n numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply n numbers"
  },
  {
    "code": "// C++ program to write a c++ program to subtract even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to subtract even numbers"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to reverse an array of two elements"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "struct Rectangle {\n    // Fields: radius\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields radius"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with computeSalary functionality"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 12 integers"
  },
  {
    "code": "struct Circle {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields id and name"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with withdraw functionality"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with calculateArea functionality"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 17 integers"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "struct Circle {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields title and author"
  },
  {
    "code": "struct Point {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Point with fields id and name"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "// C++ program to write a c++ program to reverse two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to reverse two numbers"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Student with withdraw functionality"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to search two variables of type T"
  },
  {
    "code": "class Product {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Product with deposit functionality"
  },
  {
    "code": "struct Book {\n    // Fields: length and breadth\n};",
    "docstring": "Design a C++ structure to represent a Book with fields length and breadth"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void calculateArea() {\n        // TODO: implement calculateArea logic\n    }\n};",
    "docstring": "Create a C++ class for Student with calculateArea functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of n elements"
  },
  {
    "code": "for (int i = 1; i <= 16; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 16 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "int print(int n) {\n    if (n <= 1) return n;\n    return print(n - 1) + print(n - 2);\n}\nint main() {\n    cout << print(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to print a number using recursion"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with computeSalary functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to multiply odd numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to multiply odd numbers"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "void reverseArray(int arr[], int n) {\n    // TODO: implement reverse logic\n}\nint main() {\n    int arr[10];\n    reverseArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to reverse two variables of type T"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Book with fields x and y"
  },
  {
    "code": "struct Circle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Circle with fields x and y"
  },
  {
    "code": "struct Book {\n    // Fields: title and author\n};",
    "docstring": "Design a C++ structure to represent a Book with fields title and author"
  },
  {
    "code": "void searchArray(int arr[], int n) {\n    // TODO: implement search logic\n}\nint main() {\n    int arr[10];\n    searchArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to search an array of n elements"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void deposit() {\n        // TODO: implement deposit logic\n    }\n};",
    "docstring": "Create a C++ class for Student with deposit functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class Student {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for Student with computeSalary functionality"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of two elements"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to print an array of odd elements"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "class Employee {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Employee with withdraw functionality"
  },
  {
    "code": "// C++ program to write a c++ program to compare ten numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare ten numbers"
  },
  {
    "code": "// C++ program to write a c++ program to divide even numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide even numbers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of two elements"
  },
  {
    "code": "class Rectangle {\nprivate:\n    int value;\npublic:\n    void withdraw() {\n        // TODO: implement withdraw logic\n    }\n};",
    "docstring": "Create a C++ class for Rectangle with withdraw functionality"
  },
  {
    "code": "for (int i = 1; i <= 6; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 6 integers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: add logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to add the first 17 integers"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to sum two variables of type T"
  },
  {
    "code": "int sum(int n) {\n    if (n <= 1) return n;\n    return sum(n - 1) + sum(n - 2);\n}\nint main() {\n    cout << sum(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to sum a number using recursion"
  },
  {
    "code": "struct Rectangle {\n    // Fields: x and y\n};",
    "docstring": "Design a C++ structure to represent a Rectangle with fields x and y"
  },
  {
    "code": "for (int i = 1; i <= 12; ++i) {\n    // TODO: compare logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to compare the first 12 integers"
  },
  {
    "code": "for (int i = 1; i <= 14; ++i) {\n    // TODO: count logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to count the first 14 integers"
  },
  {
    "code": "void printArray(int arr[], int n) {\n    // TODO: implement print logic\n}\nint main() {\n    int arr[10];\n    printArray(arr, 10);\n    return 0;\n}",
    "docstring": "Generate a C++ template function to print two variables of type T"
  },
  {
    "code": "class BankAccount {\nprivate:\n    int value;\npublic:\n    void computeSalary() {\n        // TODO: implement computeSalary logic\n    }\n};",
    "docstring": "Create a C++ class for BankAccount with computeSalary functionality"
  },
  {
    "code": "int search(int n) {\n    if (n <= 1) return n;\n    return search(n - 1) + search(n - 2);\n}\nint main() {\n    cout << search(5);\n    return 0;\n}",
    "docstring": "Construct a C++ algorithm to search a number using recursion"
  },
  {
    "code": "for (int i = 1; i <= 17; ++i) {\n    // TODO: reverse logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to reverse the first 17 integers"
  },
  {
    "code": "for (int i = 1; i <= 7; ++i) {\n    // TODO: subtract logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to subtract the first 7 integers"
  },
  {
    "code": "// C++ program to write a c++ program to compare three numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to compare three numbers"
  },
  {
    "code": "for (int i = 1; i <= 9; ++i) {\n    // TODO: sort logic\n}",
    "docstring": "Write a C++ snippet that uses a loop to sort the first 9 integers"
  },
  {
    "code": "// C++ program to write a c++ program to divide two numbers\n#include <iostream>\nusing namespace std;\nint main() {\n    // TODO: implement logic\n    return 0;\n}",
    "docstring": "Write a C++ program to divide two numbers"
  },
  {
    "code": "struct Book {\n    // Fields: id and name\n};",
    "docstring": "Design a C++ structure to represent a Book with fields id and name"
  },
  {
    "code": "void sumArray(int arr[], int n) {\n    // TODO: implement sum logic\n}\nint main() {\n    int arr[10];\n    sumArray(arr, 10);\n    return 0;\n}",
    "docstring": "Develop a C++ function to sum an array of odd elements"
  }
]