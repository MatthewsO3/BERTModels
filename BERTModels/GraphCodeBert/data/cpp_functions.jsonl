{"idx": "cpp::0", "code": "#include <gtest/gtest.h>\n#include \"loquat/misc/binary_search.hpp\"\n\nTEST(BinarySearchTest, Integer){\n\tfor(int l = -16; l <= 16; ++l){\n\t\tfor(int r = l; r <= 16; ++r){\n\t\t\tfor(int expect = l; expect <= r; ++expect){\n\t\t\t\tconst auto actual = loquat::binary_search(\n\t\t\t\t\tl, r, [=](int x){ return x < expect; });\n\t\t\t\tEXPECT_EQ(expect, actual);\n\t\t\t}\n\t\t}\n\t}\n}\n\nTEST(BinarySearchTest, Floating){\n\tfor(int li = -16; li <= 16; ++li){\n\t\tfor(int ri = li; ri <= li; ++ri){\n\t\t\tconst double l = li * 1.1, r = ri * 1.1;\n\t\t\tfor(double expect = l; expect < r; expect += 0.2){\n\t\t\t\tconst auto actual = loquat::binary_search(\n\t\t\t\t\tl, r, [=](double x){ return x < expect; });\n\t\t\t\tEXPECT_DOUBLE_EQ(expect, actual);\n\t\t\t}\n\t\t\tconst auto min_actual = loquat::binary_search(\n\t\t\t\tl, r, [=](double){ return true; });\n\t\t\tEXPECT_DOUBLE_EQ(l, min_actual);\n\t\t\tconst auto max_actual = loquat::binary_search(\n\t\t\t\tl, r, [=](double){ return false; });\n\t\t\tEXPECT_DOUBLE_EQ(r, max_actual);\n\t\t}\n\t}\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "lo", "qu", "at", "/", "misc", "/", "binary", "_", "search", ".", "h", "pp", "\"", "Ċ", "Ċ", "T", "EST", "(", "B", "inary", "Search", "Test", ",", "ĠInteger", "){", "Ċ", "ĉ", "for", "(", "int", "Ġl", "Ġ=", "Ġ-", "16", ";", "Ġl", "Ġ<=", "Ġ16", ";", "Ġ++", "l", "){", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġr", "Ġ=", "Ġl", ";", "Ġr", "Ġ<=", "Ġ16", ";", "Ġ++", "r", "){", "Ċ", "ĉ", "ĉ", "ĉ", "for", "(", "int", "Ġexpect", "Ġ=", "Ġl", ";", "Ġexpect", "Ġ<=", "Ġr", ";", "Ġ++", "ex", "pect", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "const", "Ġauto", "Ġactual", "Ġ=", "Ġlo", "qu", "at", "::", "binary", "_", "search", "(", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "l", ",", "Ġr", ",", "Ġ[", "=", "](", "int", "Ġx", "){", "Ġreturn", "Ġx", "Ġ<", "Ġexpect", ";", "Ġ});", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "EXP", "ECT", "_", "E", "Q", "(", "ex", "pect", ",", "Ġactual", ");", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "(", "B", "inary", "Search", "Test", ",", "ĠFloating", "){", "Ċ", "ĉ", "for", "(", "int", "Ġli", "Ġ=", "Ġ-", "16", ";", "Ġli", "Ġ<=", "Ġ16", ";", "Ġ++", "li", "){", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġr", "i", "Ġ=", "Ġli", ";", "Ġr", "i", "Ġ<=", "Ġli", ";", "Ġ++", "ri", "){", "Ċ", "ĉ", "ĉ", "ĉ", "const", "Ġdouble", "Ġl", "Ġ=", "Ġli", "Ġ*", "Ġ1", ".", "1", ",", "Ġr", "Ġ=", "Ġr", "i", "Ġ*", "Ġ1", ".", "1", ";", "Ċ", "ĉ", "ĉ", "ĉ", "for", "(", "double", "Ġexpect", "Ġ=", "Ġl", ";", "Ġexpect", "Ġ<", "Ġr", ";", "Ġexpect", "Ġ+=", "Ġ0", ".", "2", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "const", "Ġauto", "Ġactual", "Ġ=", "Ġlo", "qu", "at", "::", "binary", "_", "search", "(", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "l", ",", "Ġr", ",", "Ġ[", "=", "](", "double", "Ġx", "){", "Ġreturn", "Ġx", "Ġ<", "Ġexpect", ";", "Ġ});", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "EXP", "ECT", "_", "D", "OU", "BLE", "_", "E", "Q", "(", "ex", "pect", ",", "Ġactual", ");", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "const", "Ġauto", "Ġmin", "_", "actual", "Ġ=", "Ġlo", "qu", "at", "::", "binary", "_", "search", "(", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "l", ",", "Ġr", ",", "Ġ[", "=", "](", "double", "){", "Ġreturn", "Ġtrue", ";", "Ġ});", "Ċ", "ĉ", "ĉ", "ĉ", "EXP", "ECT", "_", "D", "OU", "BLE", "_", "E", "Q", "(", "l", ",", "Ġmin", "_", "actual", ");", "Ċ", "ĉ", "ĉ", "ĉ", "const", "Ġauto", "Ġmax", "_", "actual", "Ġ=", "Ġlo", "qu", "at", "::", "binary", "_", "search", "(", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "l", ",", "Ġr", ",", "Ġ[", "=", "](", "double", "){", "Ġreturn", "Ġfalse", ";", "Ġ});", "Ċ", "ĉ", "ĉ", "ĉ", "EXP", "ECT", "_", "D", "OU", "BLE", "_", "E", "Q", "(", "r", ",", "Ġmax", "_", "actual", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["l", 2, "comesFrom", ["l"], [1]], ["l", 3, "comesFrom", ["l"], [1]], ["l", 15, "comesFrom", ["l"], [9]], ["l", 43, "comesFrom", ["l"], [37]], ["l", 53, "comesFrom", ["l"], [37]], ["l", 56, "comesFrom", ["l"], [37]], ["l", 60, "comesFrom", ["l"], [37]], ["r", 6, "comesFrom", ["r"], [4]], ["r", 7, "comesFrom", ["r"], [4]], ["r", 11, "comesFrom", ["r"], [4]], ["r", 16, "comesFrom", ["r"], [4]], ["r", 39, "comesFrom", ["r"], [34]], ["r", 44, "comesFrom", ["r"], [34]], ["r", 54, "comesFrom", ["r"], [34]], ["r", 61, "comesFrom", ["r"], [34]], ["r", 63, "comesFrom", ["r"], [34]], ["expect", 10, "comesFrom", ["expect"], [8]], ["expect", 12, "comesFrom", ["expect"], [8]], ["expect", 19, "comesFrom", ["expect"], [8]], ["expect", 21, "comesFrom", ["expect"], [8]], ["expect", 38, "comesFrom", ["expect"], [36]], ["expect", 47, "comesFrom", ["expect"], [40]], ["expect", 49, "comesFrom", ["expect"], [40]], ["x", 18, "comesFrom", ["x"], [17]], ["x", 46, "comesFrom", ["x"], [45]], ["actual", 22, "comesFrom", ["actual"], [13]], ["actual", 50, "comesFrom", ["actual"], [41]], ["li", 25, "comesFrom", ["li"], [24]], ["li", 26, "comesFrom", ["li"], [24]], ["li", 30, "comesFrom", ["li"], [28]], ["li", 33, "comesFrom", ["li"], [28]], ["ri", 29, "comesFrom", ["ri"], [27]], ["ri", 31, "comesFrom", ["ri"], [27]], ["ri", 35, "comesFrom", ["ri"], [27]], ["min_actual", 57, "comesFrom", ["min_actual"], [51]], ["max_actual", 64, "comesFrom", ["max_actual"], [58]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::1", "code": "#include <onyxudp/udpclient.h>\n\n#include <stdio.h>\n#include <string.h>\n#include <assert.h>\n\n\n/* This test just makes sure the client library compiles and doens't crash on start. */\n\n\nvoid on_error(udp_client_params_t *client, UDPERR code, char const *name) {\n    fprintf(stderr, \"on_error: code %d: %s\\n\", code, name);\n    assert(!\"should not happen\");\n}\n\nint main() {\n    udp_client_params_t params;\n    memset(&params, 0, sizeof(params));\n    params.app_id = 123;\n    params.app_version = 321;\n    params.on_error = on_error;\n    params.on_idle = NULL;\n    params.on_payload = NULL;\n    params.on_disconnect = NULL;\n    udp_client_t *client = udp_client_initialize(&params);\n    assert(client != NULL);\n    udp_client_terminate(client);\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "ony", "x", "ud", "p", "/", "ud", "p", "client", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "ĊĊ", "Ċ", "/*", "ĠThis", "Ġtest", "Ġjust", "Ġmakes", "Ġsure", "Ġthe", "Ġclient", "Ġlibrary", "Ġcomp", "iles", "Ġand", "Ġdo", "ens", "'t", "Ġcrash", "Ġon", "Ġstart", ".", "Ġ*/", "ĊĊ", "Ċ", "void", "Ġon", "_", "error", "(", "ud", "p", "_", "client", "_", "params", "_", "t", "Ġ*", "client", ",", "ĠUDP", "ER", "R", "Ġcode", ",", "Ġchar", "Ġconst", "Ġ*", "name", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġf", "printf", "(", "st", "der", "r", ",", "Ġ\"", "on", "_", "error", ":", "Ġcode", "Ġ%", "d", ":", "Ġ%", "s", "\\", "n", "\",", "Ġcode", ",", "Ġname", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "!\"", "should", "Ġnot", "Ġhappen", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "dp", "_", "client", "_", "params", "_", "t", "Ġparams", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmem", "set", "(&", "params", ",", "Ġ0", ",", "Ġsizeof", "(", "params", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "app", "_", "id", "Ġ=", "Ġ123", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "app", "_", "version", "Ġ=", "Ġ321", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "on", "_", "error", "Ġ=", "Ġon", "_", "error", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "on", "_", "id", "le", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "on", "_", "pay", "load", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "on", "_", "dis", "connect", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "dp", "_", "client", "_", "t", "Ġ*", "client", "Ġ=", "Ġu", "dp", "_", "client", "_", "initial", "ize", "(&", "params", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "client", "Ġ!=", "ĠNULL", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "dp", "_", "client", "_", "termin", "ate", "(", "client", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["code", 6, "comesFrom", ["code"], [2]], ["params", 12, "comesFrom", ["params"], [10]], ["params", 13, "comesFrom", ["params"], [10]], ["params", 14, "comesFrom", ["params"], [10]], ["params", 16, "comesFrom", ["params"], [10]], ["params", 18, "comesFrom", ["params"], [10]], ["params", 21, "comesFrom", ["params"], [10]], ["params", 23, "comesFrom", ["params"], [10]], ["params", 25, "comesFrom", ["params"], [10]], ["params", 29, "comesFrom", ["params"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::2", "code": "#include <iostream>\n\nusing namespace std;\n\nvoid display(const int *xPos, const int *yPos);\nvoid move(int *xPos, int *yPos);\n\nint main(void) {\n\tint x = 10;\n\tint y = 20;\n\n\tdisplay(&x, &y);\n\tmove(&x, &y);\n\tdisplay(&x, &y);\n\n\treturn 0;\n}\n\nvoid display(const int *xPos, const int *yPos) {\n\t// btw const not needed for this\n\tcout << \"Current position [\" << *xPos << \", \" << *yPos << \"]\" << endl;\n}\n\nvoid move(int *xPos, int *yPos) {\n\t*xPos = *xPos + 1;\n\t*yPos = *yPos + 1;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġdisplay", "(", "const", "Ġint", "Ġ*", "x", "Pos", ",", "Ġconst", "Ġint", "Ġ*", "y", "Pos", ");", "Ċ", "void", "Ġmove", "(", "int", "Ġ*", "x", "Pos", ",", "Ġint", "Ġ*", "y", "Pos", ");", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġx", "Ġ=", "Ġ10", ";", "Ċ", "ĉ", "int", "Ġy", "Ġ=", "Ġ20", ";", "ĊĊ", "ĉ", "display", "(&", "x", ",", "Ġ&", "y", ");", "Ċ", "ĉ", "move", "(&", "x", ",", "Ġ&", "y", ");", "Ċ", "ĉ", "display", "(&", "x", ",", "Ġ&", "y", ");", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdisplay", "(", "const", "Ġint", "Ġ*", "x", "Pos", ",", "Ġconst", "Ġint", "Ġ*", "y", "Pos", ")", "Ġ{", "Ċ", "ĉ", "//", "Ġb", "tw", "Ġconst", "Ġnot", "Ġneeded", "Ġfor", "Ġthis", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Current", "Ġposition", "Ġ[\"", "Ġ<<", "Ġ*", "x", "Pos", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġ*", "y", "Pos", "Ġ<<", "Ġ\"", "]\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġmove", "(", "int", "Ġ*", "x", "Pos", ",", "Ġint", "Ġ*", "y", "Pos", ")", "Ġ{", "Ċ", "ĉ", "*", "x", "Pos", "Ġ=", "Ġ*", "x", "Pos", "Ġ+", "Ġ1", ";", "Ċ", "ĉ", "*", "y", "Pos", "Ġ=", "Ġ*", "y", "Pos", "Ġ+", "Ġ1", ";", "Ċ", "}"], "dataflow_graph": [["x", 11, "comesFrom", ["x"], [8]], ["x", 14, "comesFrom", ["x"], [8]], ["x", 17, "comesFrom", ["x"], [8]], ["y", 12, "comesFrom", ["y"], [9]], ["y", 15, "comesFrom", ["y"], [9]], ["y", 18, "comesFrom", ["y"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::3", "code": "#include <CImageLibI.h>\n#include <CImageColorDefP.h>\n\n#include <cstring>\n\nbool\nCImageColorDef::\ngetRGB(const std::string &name, double *r, double *g, double *b)\n{\n  int ri, gi, bi;\n\n  if (! getRGBI(name, &ri, &gi, &bi))\n    return false;\n\n  double rgb_scale = 1.0/255.0;\n\n  *r = ri*rgb_scale;\n  *g = gi*rgb_scale;\n  *b = bi*rgb_scale;\n\n  return true;\n}\n\nbool\nCImageColorDef::\ngetRGBI(const std::string &name, int *r, int *g, int *b)\n{\n  int i;\n\n  std::string lname = CStrUtil::toLower(name);\n\n  const char *name1 = lname.c_str();\n\n  for (i = 0; color_def_data[i].name != 0; ++i)\n    if (strcmp(color_def_data[i].name, name1) == 0)\n      break;\n\n  if (color_def_data[i].name == 0)\n    return false;\n\n  *r = color_def_data[i].r;\n  *g = color_def_data[i].g;\n  *b = color_def_data[i].b;\n\n  return true;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "C", "Image", "Lib", "I", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "C", "Image", "Color", "Def", "P", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "Ċ", "bool", "Ċ", "C", "Image", "Color", "Def", "::", "Ċ", "get", "RGB", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ",", "Ġdouble", "Ġ*", "r", ",", "Ġdouble", "Ġ*", "g", ",", "Ġdouble", "Ġ*", "b", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġr", "i", ",", "Ġg", "i", ",", "Ġbi", ";", "ĊĊ", "Ġ", "Ġif", "Ġ(!", "Ġget", "RG", "BI", "(", "name", ",", "Ġ&", "ri", ",", "Ġ&", "gi", ",", "Ġ&", "bi", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "ĊĊ", "Ġ", "Ġdouble", "Ġrgb", "_", "scale", "Ġ=", "Ġ1", ".", "0", "/", "255", ".", "0", ";", "ĊĊ", "Ġ", "Ġ*", "r", "Ġ=", "Ġr", "i", "*", "r", "gb", "_", "scale", ";", "Ċ", "Ġ", "Ġ*", "g", "Ġ=", "Ġg", "i", "*", "r", "gb", "_", "scale", ";", "Ċ", "Ġ", "Ġ*", "b", "Ġ=", "Ġbi", "*", "r", "gb", "_", "scale", ";", "ĊĊ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "Ċ", "C", "Image", "Color", "Def", "::", "Ċ", "get", "RG", "BI", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ",", "Ġint", "Ġ*", "r", ",", "Ġint", "Ġ*", "g", ",", "Ġint", "Ġ*", "b", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġi", ";", "ĊĊ", "Ġ", "Ġstd", "::", "string", "Ġl", "name", "Ġ=", "ĠC", "Str", "Ut", "il", "::", "to", "Lower", "(", "name", ");", "ĊĊ", "Ġ", "Ġconst", "Ġchar", "Ġ*", "name", "1", "Ġ=", "Ġl", "name", ".", "c", "_", "str", "();", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġcolor", "_", "def", "_", "data", "[", "i", "].", "name", "Ġ!=", "Ġ0", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "str", "cmp", "(", "color", "_", "def", "_", "data", "[", "i", "].", "name", ",", "Ġname", "1", ")", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "ĊĊ", "Ġ", "Ġif", "Ġ(", "color", "_", "def", "_", "data", "[", "i", "].", "name", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "ĊĊ", "Ġ", "Ġ*", "r", "Ġ=", "Ġcolor", "_", "def", "_", "data", "[", "i", "].", "r", ";", "Ċ", "Ġ", "Ġ*", "g", "Ġ=", "Ġcolor", "_", "def", "_", "data", "[", "i", "].", "g", ";", "Ċ", "Ġ", "Ġ*", "b", "Ġ=", "Ġcolor", "_", "def", "_", "data", "[", "i", "].", "b", ";", "ĊĊ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["ri", 10, "comesFrom", ["ri"], [5]], ["ri", 15, "comesFrom", ["ri"], [5]], ["gi", 11, "comesFrom", ["gi"], [6]], ["gi", 18, "comesFrom", ["gi"], [6]], ["bi", 12, "comesFrom", ["bi"], [7]], ["bi", 21, "comesFrom", ["bi"], [7]], ["rgb_scale", 16, "comesFrom", ["rgb_scale"], [13]], ["rgb_scale", 19, "comesFrom", ["rgb_scale"], [13]], ["rgb_scale", 22, "comesFrom", ["rgb_scale"], [13]], ["lname", 33, "comesFrom", ["lname"], [29]], ["i", 37, "comesFrom", ["i"], [35]], ["i", 39, "comesFrom", ["i"], [35]], ["i", 42, "comesFrom", ["i"], [35]], ["i", 46, "comesFrom", ["i"], [35]], ["i", 50, "comesFrom", ["i"], [35]], ["i", 54, "comesFrom", ["i"], [35]], ["i", 58, "comesFrom", ["i"], [35]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::4", "code": "class Solution {\npublic:\n\tint findRadius(vector<int>& houses, vector<int>& heaters) {\n\t\tsort(houses.begin(), houses.end());\n\t\tsort(heaters.begin(), heaters.end());\n\n\t\tauto radius = 0;\n\t\tauto idx = 0;\n\t\tfor (auto house : houses) {\n\t\t\tauto current = abs(house - heaters[idx]);\n\t\t\tif (current <= radius) continue;\n\n\t\t\tfor (auto n = idx + 1; n < heaters.size(); ++n) {\n\t\t\t\tif (abs(house - heaters[n]) <= current) {\n\t\t\t\t\tcurrent = abs(house - heaters[n]);\n\t\t\t\t\tidx = n;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tradius = max(radius, current);\n\t\t}\n\t\treturn radius;\n\t}\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "int", "Ġfind", "Rad", "ius", "(", "vector", "<", "int", ">", "&", "Ġhouses", ",", "Ġvector", "<", "int", ">", "&", "Ġheat", "ers", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "sort", "(", "houses", ".", "begin", "(),", "Ġhouses", ".", "end", "());", "Ċ", "ĉ", "ĉ", "sort", "(", "he", "aters", ".", "begin", "(),", "Ġheat", "ers", ".", "end", "());", "ĊĊ", "ĉ", "ĉ", "auto", "Ġradius", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "auto", "Ġid", "x", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "auto", "Ġhouse", "Ġ:", "Ġhouses", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "auto", "Ġcurrent", "Ġ=", "Ġabs", "(", "house", "Ġ-", "Ġheat", "ers", "[", "id", "x", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "current", "Ġ<=", "Ġradius", ")", "Ġcontinue", ";", "ĊĊ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "auto", "Ġn", "Ġ=", "Ġid", "x", "Ġ+", "Ġ1", ";", "Ġn", "Ġ<", "Ġheat", "ers", ".", "size", "();", "Ġ++", "n", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "abs", "(", "house", "Ġ-", "Ġheat", "ers", "[", "n", "])", "Ġ<=", "Ġcurrent", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "current", "Ġ=", "Ġabs", "(", "house", "Ġ-", "Ġheat", "ers", "[", "n", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "id", "x", "Ġ=", "Ġn", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "radius", "Ġ=", "Ġmax", "(", "radius", ",", "Ġcurrent", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "return", "Ġradius", ";", "Ċ", "ĉ", "}", "Ċ", "};"], "dataflow_graph": [["idx", 21, "comesFrom", ["idx"], [14]], ["idx", 25, "comesFrom", ["idx"], [14]], ["current", 22, "comesFrom", ["current"], [17]], ["current", 34, "comesFrom", ["current"], [17]], ["current", 45, "comesFrom", ["current"], [35]], ["radius", 23, "comesFrom", ["radius"], [13]], ["radius", 44, "comesFrom", ["radius"], [42]], ["radius", 46, "comesFrom", ["radius"], [42]], ["n", 26, "comesFrom", ["n"], [24]], ["n", 29, "comesFrom", ["n"], [24]], ["n", 33, "comesFrom", ["n"], [24]], ["n", 39, "comesFrom", ["n"], [24]], ["n", 41, "comesFrom", ["n"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::5", "code": "/**\n * Test program.\n *\n * Copyright (c) 2015 Alex Jin (toalexjin@hotmail.com)\n */\n\n#include \"test/test.h\"\n#include <iostream>\n\n\nnamespace {\n\nvoid help() {\n\tstd::cout << \"Usage: testalgo -a\" << std::endl;\n\tstd::cout << \"       testalgo <test-case-name>\" << std::endl;\n\tstd::cout << std::endl;\n\tstd::cout << \"Options:\" << std::endl;\n\tstd::cout << \"       -a    Run all test cases\" << std::endl;\n\tstd::cout << std::endl;\n\tstd::cout << \"Test Case Names:\" << std::endl;\n\n\tconst auto names = test_manager_t::instance().get_names();\n\tfor (auto it = names.begin(); it != names.end(); ++it) {\n\t\tstd::cout << \"       \" << *it << std::endl;\n\t}\n\tstd::cout << std::endl;\n}\n\n} // unnamed namespace\n\n\nint main(int argc, char* argv[]) {\n\n\tif (argc != 2) {\n\t\thelp();\n\t\texit(1);\n\t}\n\n\tbool result = false;\n\tstd::string arg1 = argv[1];\n\n\tif (arg1 == \"-a\") {\n\t\tresult = test_manager_t::instance().run();\n\t}\n\telse {\n\t\tresult = test_manager_t::instance().run(arg1);\n\t}\n\n\treturn result ? 0 : 2;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠTest", "Ġprogram", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "ĠAlex", "ĠJin", "Ġ(", "to", "ale", "x", "jin", "@", "hot", "mail", ".", "com", ")", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "/", "test", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "ĊĊ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "void", "Ġhelp", "()", "Ġ{", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Usage", ":", "Ġtest", "al", "go", "Ġ-", "a", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtest", "al", "go", "Ġ<", "test", "-", "case", "-", "name", ">\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Options", ":\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ-", "a", "Ġ", "Ġ", "Ġ", "ĠRun", "Ġall", "Ġtest", "Ġcases", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Test", "ĠCase", "ĠNames", ":\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "ĉ", "const", "Ġauto", "Ġnames", "Ġ=", "Ġtest", "_", "manager", "_", "t", "::", "instance", "().", "get", "_", "names", "();", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġit", "Ġ=", "Ġnames", ".", "begin", "();", "Ġit", "Ġ!=", "Ġnames", ".", "end", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "Ġ<<", "Ġ*", "it", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġunnamed", "Ġnamespace", "ĊĊ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ġ{", "ĊĊ", "ĉ", "if", "Ġ(", "arg", "c", "Ġ!=", "Ġ2", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "help", "();", "Ċ", "ĉ", "ĉ", "exit", "(", "1", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "bool", "Ġresult", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "std", "::", "string", "Ġarg", "1", "Ġ=", "Ġarg", "v", "[", "1", "];", "ĊĊ", "ĉ", "if", "Ġ(", "arg", "1", "Ġ==", "Ġ\"-", "a", "\")", "Ġ{", "Ċ", "ĉ", "ĉ", "result", "Ġ=", "Ġtest", "_", "manager", "_", "t", "::", "instance", "().", "run", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġ{", "Ċ", "ĉ", "ĉ", "result", "Ġ=", "Ġtest", "_", "manager", "_", "t", "::", "instance", "().", "run", "(", "arg", "1", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġresult", "Ġ?", "Ġ0", "Ġ:", "Ġ2", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["names", 19, "comesFrom", ["names"], [15]], ["names", 22, "comesFrom", ["names"], [15]], ["it", 21, "comesFrom", ["it"], [18]], ["it", 24, "comesFrom", ["it"], [18]], ["it", 26, "comesFrom", ["it"], [18]], ["argc", 33, "comesFrom", ["argc"], [31]], ["arg1", 39, "comesFrom", ["arg1"], [37]], ["arg1", 46, "comesFrom", ["arg1"], [37]], ["result", 47, "comesFrom", ["result"], [43]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::6", "code": "\n\n__global__ void /*{kernel_name}*/(/*{parameters}*/)\n{\n    int _tid_ = threadIdx.x + blockIdx.x * blockDim.x;\n\n    if (_tid_ < /*{num_threads}*/)\n    {\n/*{execution}*/\n        \n        _result_[_tid_] = /*{block_invocation}*/;\n    }\n}\n\n\n", "code_tokens": ["Ċ", "Ċ", "__", "global", "__", "Ġvoid", "Ġ/*", "{", "kernel", "_", "name", "}", "*/(", "/*", "{", "param", "eters", "}", "*/", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġ_", "t", "id", "_", "Ġ=", "Ġthread", "Id", "x", ".", "x", "Ġ+", "Ġblock", "Id", "x", ".", "x", "Ġ*", "Ġblock", "Dim", ".", "x", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(_", "t", "id", "_", "Ġ<", "Ġ/*", "{", "num", "_", "thread", "s", "}", "*/", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "/*", "{", "exec", "ution", "}", "*/", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "result", "_", "[_", "t", "id", "_", "]", "Ġ=", "Ġ/*", "{", "block", "_", "inv", "ocation", "}", "*/", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["_tid_", 8, "comesFrom", ["_tid_"], [1]], ["_tid_", 10, "comesFrom", ["_tid_"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::7", "code": "#include <vector>\n#include <memory>\n#include <iostream>\n\nusing namespace std;\n\nshared_ptr<vector<int>> make() {\n\treturn make_shared<vector<int>>();\n}\n\nshared_ptr<vector<int>> read(shared_ptr<vector<int>> p) {\n\tcout << \"Enter values: \" << endl;\n\tint x;\n\n\twhile (cin >> x) {\n\t\tp->push_back(x);\n\t}\n\n\treturn p;\n}\n\nvoid print(shared_ptr<vector<int>> p) {\n\tfor (int i : *p) {\n\t\tcout << i << \" \";\t\n\t}\n}\n\nint main() {\n\tauto p = read(make());\n\tprint(p);\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "shared", "_", "ptr", "<", "vector", "<", "int", ">>", "Ġmake", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġmake", "_", "shared", "<", "vector", "<", "int", ">>", "();", "Ċ", "}", "Ċ", "Ċ", "shared", "_", "ptr", "<", "vector", "<", "int", ">>", "Ġread", "(", "shared", "_", "ptr", "<", "vector", "<", "int", ">>", "Ġp", ")", "Ġ{", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Enter", "Ġvalues", ":", "Ġ\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "int", "Ġx", ";", "ĊĊ", "ĉ", "while", "Ġ(", "cin", "Ġ>>", "Ġx", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "p", "->", "push", "_", "back", "(", "x", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġp", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġprint", "(", "shared", "_", "ptr", "<", "vector", "<", "int", ">>", "Ġp", ")", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ:", "Ġ*", "p", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ\"", ";", "ĉ", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "auto", "Ġp", "Ġ=", "Ġread", "(", "make", "());", "Ċ", "ĉ", "print", "(", "p", ");", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["x", 9, "comesFrom", ["x"], [7]], ["x", 12, "comesFrom", ["x"], [7]], ["p", 10, "comesFrom", ["p"], [4]], ["p", 13, "comesFrom", ["p"], [4]], ["p", 17, "comesFrom", ["p"], [15]], ["p", 25, "comesFrom", ["p"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::8", "code": "#include \"estimation/sensors/make_interpolator.hh\"\nnamespace estimation {\n\ngeometry::spatial::TimeInterpolator make_accel_interpolator(\n    const std::vector<TimedMeasurement<jet_filter::AccelMeasurement>>&\n        accel_meas,\n    const ImuModel& imu_model) {\n  std::vector<geometry::spatial::TimeControlPoint> points;\n\n  for (const auto& accel : accel_meas) {\n    const jcc::Vec3 corrected_accel =\n        imu_model.correct_measured_accel(accel.measurement.observed_acceleration);\n    points.push_back({accel.timestamp, corrected_accel});\n  }\n  const geometry::spatial::TimeInterpolator interp(points);\n  return interp;\n}\n\ngeometry::spatial::TimeInterpolator make_gyro_interpolator(\n    const std::vector<TimedMeasurement<jet_filter::GyroMeasurement>>&\n        gyro_meas) {\n  std::vector<geometry::spatial::TimeControlPoint> points;\n\n  for (const auto& gyro : gyro_meas) {\n    points.push_back({gyro.timestamp, gyro.measurement.observed_w});\n  }\n  const geometry::spatial::TimeInterpolator interp(points);\n  return interp;\n}\n\n}  // namespace estimation", "code_tokens": ["Ġ#", "include", "Ġ\"", "est", "imation", "/", "s", "ens", "ors", "/", "make", "_", "inter", "pol", "ator", ".", "hh", "\"", "Ċ", "names", "pace", "Ġestimation", "Ġ{", "Ċ", "Ċ", "ge", "ometry", "::", "sp", "atial", "::", "Time", "Inter", "pol", "ator", "Ġmake", "_", "ac", "cel", "_", "inter", "pol", "ator", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "vector", "<", "Tim", "ed", "Measure", "ment", "<", "jet", "_", "filter", "::", "Ac", "cel", "Measure", "ment", ">>", "&", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġac", "cel", "_", "me", "as", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠIm", "u", "Model", "&", "Ġim", "u", "_", "model", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "ge", "ometry", "::", "sp", "atial", "::", "Time", "Control", "Point", ">", "Ġpoints", ";", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "&", "Ġac", "cel", "Ġ:", "Ġac", "cel", "_", "me", "as", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġj", "cc", "::", "V", "ec", "3", "Ġcorrected", "_", "ac", "cel", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġim", "u", "_", "model", ".", "correct", "_", "me", "asured", "_", "ac", "cel", "(", "ac", "cel", ".", "me", "asure", "ment", ".", "ob", "served", "_", "ac", "celer", "ation", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpoints", ".", "push", "_", "back", "({", "ac", "cel", ".", "tim", "estamp", ",", "Ġcorrected", "_", "ac", "cel", "});", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġconst", "Ġgeometry", "::", "sp", "atial", "::", "Time", "Inter", "pol", "ator", "Ġinter", "p", "(", "points", ");", "Ċ", "Ġ", "Ġreturn", "Ġinter", "p", ";", "Ċ", "}", "Ċ", "Ċ", "ge", "ometry", "::", "sp", "atial", "::", "Time", "Inter", "pol", "ator", "Ġmake", "_", "gy", "ro", "_", "inter", "pol", "ator", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "vector", "<", "Tim", "ed", "Measure", "ment", "<", "jet", "_", "filter", "::", "Gy", "ro", "Measure", "ment", ">>", "&", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġgy", "ro", "_", "me", "as", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "ge", "ometry", "::", "sp", "atial", "::", "Time", "Control", "Point", ">", "Ġpoints", ";", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "&", "Ġgy", "ro", "Ġ:", "Ġgy", "ro", "_", "me", "as", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpoints", ".", "push", "_", "back", "({", "gy", "ro", ".", "tim", "estamp", ",", "Ġgy", "ro", ".", "me", "asure", "ment", ".", "ob", "served", "_", "w", "});", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġconst", "Ġgeometry", "::", "sp", "atial", "::", "Time", "Inter", "pol", "ator", "Ġinter", "p", "(", "points", ");", "Ċ", "Ġ", "Ġreturn", "Ġinter", "p", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġestimation"], "dataflow_graph": [["points", 12, "comesFrom", ["points"], [3]], ["points", 24, "comesFrom", ["points"], [21]], ["corrected_accel", 16, "comesFrom", ["corrected_accel"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::9", "code": "#include \"TextItem.h\"\n\n#include <QPainter>\n#include <QFont>\n#include <QDebug>\n\n////////////////////////////////////////////////////////////////\nTextItem::TextItem(const QString& text, QGraphicsLayoutItem *parent)\n    : BaseItem(parent)\n{\n    _text = text;\n\n    QFont font;\n    font.setPointSize(11);\n    font.setBold(false);\n\n    setFont(font);\n}\n\n////////////////////////////////////////////////////////////////\nTextItem::~TextItem()\n{\n}\n\n////////////////////////////////////////////////////////////////\nvoid TextItem::setFont(const QFont &font)\n{\n    _font = font;\n    QFontMetrics fm(_font);\n}\n\n////////////////////////////////////////////////////////////////\nQSizeF TextItem::measureSize() const\n{\n    QFontMetrics fm(_font);\n\n    const QSizeF& size = fm.size(Qt::TextExpandTabs, _text);\n    // NOTE: flag Qt::TextSingleLine ignores newline characters.\n    return size;\n}\n\n////////////////////////////////////////////////////////////////\nvoid TextItem::draw(QPainter *painter, const QRectF& bounds)\n{\n    painter->setFont(_font);\n\n    // TODO: mozno bude treba specialne handlovat novy riadok\n    painter->drawText(bounds, _text);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Text", "Item", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Pain", "ter", ">", "Ċ", "#", "include", "Ġ<", "Q", "Font", ">", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "Ċ", "////////////////////////////////", "////////////////////////////////", "Ċ", "Text", "Item", "::", "Text", "Item", "(", "const", "ĠQ", "String", "&", "Ġtext", ",", "ĠQ", "Graphics", "Layout", "Item", "Ġ*", "parent", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠBase", "Item", "(", "parent", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "text", "Ġ=", "Ġtext", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "Font", "Ġfont", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfont", ".", "set", "Point", "Size", "(", "11", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfont", ".", "set", "B", "old", "(", "false", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġset", "Font", "(", "font", ");", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////", "////////////////////////////////", "Ċ", "Text", "Item", "::", "~", "Text", "Item", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////", "////////////////////////////////", "Ċ", "void", "ĠText", "Item", "::", "set", "Font", "(", "const", "ĠQ", "Font", "Ġ&", "font", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "font", "Ġ=", "Ġfont", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Font", "Met", "rics", "Ġf", "m", "(_", "font", ");", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////", "////////////////////////////////", "Ċ", "Q", "Size", "F", "ĠText", "Item", "::", "me", "asure", "Size", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Font", "Met", "rics", "Ġf", "m", "(_", "font", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠQ", "Size", "F", "&", "Ġsize", "Ġ=", "Ġf", "m", ".", "size", "(", "Q", "t", "::", "Text", "Exp", "and", "T", "abs", ",", "Ġ_", "text", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠNOTE", ":", "Ġflag", "ĠQt", "::", "Text", "Single", "Line", "Ġignores", "Ġnew", "line", "Ġcharacters", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġsize", ";", "Ċ", "}", "Ċ", "Ċ", "////////////////////////////////", "////////////////////////////////", "Ċ", "void", "ĠText", "Item", "::", "draw", "(", "Q", "Pain", "ter", "Ġ*", "pain", "ter", ",", "Ġconst", "ĠQR", "ect", "F", "&", "Ġbounds", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpainter", "->", "set", "Font", "(_", "font", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠTOD", "O", ":", "Ġmo", "z", "no", "Ġb", "ude", "Ġtre", "ba", "Ġspecial", "ne", "Ġhand", "lov", "at", "Ġno", "vy", "Ġr", "i", "ad", "ok", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpainter", "->", "draw", "Text", "(", "b", "ounds", ",", "Ġ_", "text", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["font", 8, "comesFrom", ["font"], [7]], ["font", 10, "comesFrom", ["font"], [7]], ["font", 13, "comesFrom", ["font"], [7]], ["font", 16, "comesFrom", ["font"], [7]], ["font", 18, "comesFrom", ["font"], [7]], ["_text", 26, "comesFrom", ["_text"], [5]], ["_text", 37, "comesFrom", ["_text"], [5]], ["_font", 33, "comesFrom", ["_font"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::10", "code": "#include <vector>\n#include <iostream>\n\nstruct point\n{\n\tdouble x;\n\tdouble y;\n};\n\nint main()\n{\n\t// Generate a lot of uniformly distributed 2d points in the range -1,-1 to +1,+1.\n\tenum { numXSamples = 10000 };\n\tenum { numYSamples = 10000 };\n\tstd::vector<point> points;\n\tpoints.reserve(numXSamples * numYSamples);\n\tfor(int x = 0;x < numXSamples;++x)\n\t{\n\t\tfor(int y = 0;y < numXSamples;++y)\n\t\t{\n\t\t\tpoint p = {-1.0 + 2.0 * x / (numXSamples-1),-1.0 + 2.0 * y / (numYSamples-1)};\n\t\t\tpoints.push_back(p);\n\t\t}\n\t}\n\n\t// Count the ratio of points inside the unit circle.\n\tint numerator = 0;\n\tint denominator = 0;\n\tfor(auto pointIt = points.begin();pointIt != points.end();++pointIt)\n\t{\n\t\tif(pointIt->x * pointIt->x + pointIt->y * pointIt->y < 1.0)\n\t\t{\n\t\t\t++numerator;\n\t\t}\n\t\t++denominator;\n\t}\n\n\t// Derive the area of the unit circle.\n\tauto circleArea = 4.0 * (double)numerator / denominator;\n\tstd::cout << \"result: \" << circleArea << std::endl;\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "struct", "Ġpoint", "Ċ", "{", "Ċ", "ĉ", "double", "Ġx", ";", "Ċ", "ĉ", "double", "Ġy", ";", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "//", "ĠGener", "ate", "Ġa", "Ġlot", "Ġof", "Ġuniformly", "Ġdistributed", "Ġ2", "d", "Ġpoints", "Ġin", "Ġthe", "Ġrange", "Ġ-", "1", ",-", "1", "Ġto", "Ġ+", "1", ",", "+", "1", ".", "Ċ", "ĉ", "enum", "Ġ{", "Ġnum", "X", "S", "amples", "Ġ=", "Ġ10000", "Ġ};", "Ċ", "ĉ", "enum", "Ġ{", "Ġnum", "YS", "amples", "Ġ=", "Ġ10000", "Ġ};", "Ċ", "ĉ", "std", "::", "vector", "<", "point", ">", "Ġpoints", ";", "Ċ", "ĉ", "points", ".", "res", "erve", "(", "num", "X", "S", "amples", "Ġ*", "Ġnum", "YS", "amples", ");", "Ċ", "ĉ", "for", "(", "int", "Ġx", "Ġ=", "Ġ0", ";", "x", "Ġ<", "Ġnum", "X", "S", "amples", ";", "++", "x", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġy", "Ġ=", "Ġ0", ";", "y", "Ġ<", "Ġnum", "X", "S", "amples", ";", "++", "y", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "point", "Ġp", "Ġ=", "Ġ{", "-", "1", ".", "0", "Ġ+", "Ġ2", ".", "0", "Ġ*", "Ġx", "Ġ/", "Ġ(", "num", "X", "S", "amples", "-", "1", "),", "-", "1", ".", "0", "Ġ+", "Ġ2", ".", "0", "Ġ*", "Ġy", "Ġ/", "Ġ(", "num", "YS", "amples", "-", "1", ")", "};", "Ċ", "ĉ", "ĉ", "ĉ", "points", ".", "push", "_", "back", "(", "p", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "//", "ĠCount", "Ġthe", "Ġratio", "Ġof", "Ġpoints", "Ġinside", "Ġthe", "Ġunit", "Ġcircle", ".", "Ċ", "ĉ", "int", "Ġnumer", "ator", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "int", "Ġdenomin", "ator", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "for", "(", "auto", "Ġpoint", "It", "Ġ=", "Ġpoints", ".", "begin", "();", "point", "It", "Ġ!=", "Ġpoints", ".", "end", "();", "++", "point", "It", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "(", "point", "It", "->", "x", "Ġ*", "Ġpoint", "It", "->", "x", "Ġ+", "Ġpoint", "It", "->", "y", "Ġ*", "Ġpoint", "It", "->", "y", "Ġ<", "Ġ1", ".", "0", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "++", "n", "umer", "ator", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "++", "den", "omin", "ator", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "//", "ĠDer", "ive", "Ġthe", "Ġarea", "Ġof", "Ġthe", "Ġunit", "Ġcircle", ".", "Ċ", "ĉ", "auto", "Ġcircle", "Area", "Ġ=", "Ġ4", ".", "0", "Ġ*", "Ġ(", "double", ")", "n", "umer", "ator", "Ġ/", "Ġdenomin", "ator", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "result", ":", "Ġ\"", "Ġ<<", "Ġcircle", "Area", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["x", 11, "comesFrom", ["x"], [10]], ["x", 13, "comesFrom", ["x"], [10]], ["x", 19, "comesFrom", ["x"], [10]], ["x", 36, "comesFrom", ["x"], [10]], ["x", 38, "comesFrom", ["x"], [10]], ["y", 15, "comesFrom", ["y"], [14]], ["y", 17, "comesFrom", ["y"], [14]], ["y", 21, "comesFrom", ["y"], [14]], ["y", 40, "comesFrom", ["y"], [14]], ["y", 42, "comesFrom", ["y"], [14]], ["points", 6, "comesFrom", ["points"], [5]], ["points", 23, "comesFrom", ["points"], [5]], ["points", 29, "comesFrom", ["points"], [5]], ["points", 32, "comesFrom", ["points"], [5]], ["p", 25, "comesFrom", ["p"], [18]], ["pointIt", 31, "comesFrom", ["pointIt"], [28]], ["pointIt", 34, "comesFrom", ["pointIt"], [28]], ["pointIt", 35, "comesFrom", ["pointIt"], [28]], ["pointIt", 37, "comesFrom", ["pointIt"], [28]], ["pointIt", 39, "comesFrom", ["pointIt"], [28]], ["pointIt", 41, "comesFrom", ["pointIt"], [28]], ["numerator", 43, "comesFrom", ["numerator"], [26]], ["numerator", 46, "comesFrom", ["numerator"], [26]], ["denominator", 44, "comesFrom", ["denominator"], [27]], ["denominator", 47, "comesFrom", ["denominator"], [27]], ["circleArea", 49, "comesFrom", ["circleArea"], [45]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::11", "code": "/*\n**==============================================================================\n**\n** Copyright (c) 2003, 2004, 2005, 2006, Michael Brasher, Karl Schopmeyer\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and associated documentation files (the \"Software\"),\n** to deal in the Software without restriction, including without limitation\n** the rights to use, copy, modify, merge, publish, distribute, sublicense,\n** and/or sell copies of the Software, and to permit persons to whom the\n** Software is furnished to do so, subject to the following conditions:\n**\n** The above copyright notice and this permission notice shall be included in\n** all copies or substantial portions of the Software.\n**\n** THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n** SOFTWARE.\n**\n**==============================================================================\n*/\n\n#include \"OS.h\"\n\nint OS::close(Sock sock)\n{\n    int result;\n    SF_RESTART(::close(sock), result);\n    return result;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "**", "================================================================", "============", "==", "Ċ", "**", "Ċ", "**", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", ",", "Ġ2004", ",", "Ġ2005", ",", "Ġ2006", ",", "ĠMichael", "ĠBr", "asher", ",", "ĠKarl", "ĠSch", "op", "meyer", "Ċ", "**", "Ċ", "**", "ĠPer", "mission", "Ġis", "Ġhereby", "Ġgranted", ",", "Ġfree", "Ġof", "Ġcharge", ",", "Ġto", "Ġany", "Ġperson", "Ġobtaining", "Ġa", "Ċ", "**", "Ġcopy", "Ġof", "Ġthis", "Ġsoftware", "Ġand", "Ġassociated", "Ġdocumentation", "Ġfiles", "Ġ(", "the", "Ġ\"", "Software", "\"),", "Ċ", "**", "Ġto", "Ġdeal", "Ġin", "Ġthe", "ĠSoftware", "Ġwithout", "Ġrestriction", ",", "Ġincluding", "Ġwithout", "Ġlimitation", "Ċ", "**", "Ġthe", "Ġrights", "Ġto", "Ġuse", ",", "Ġcopy", ",", "Ġmodify", ",", "Ġmerge", ",", "Ġpublish", ",", "Ġdistribute", ",", "Ġsub", "license", ",", "Ċ", "**", "Ġand", "/", "or", "Ġsell", "Ġcopies", "Ġof", "Ġthe", "ĠSoftware", ",", "Ġand", "Ġto", "Ġpermit", "Ġpersons", "Ġto", "Ġwhom", "Ġthe", "Ċ", "**", "ĠSoftware", "Ġis", "Ġfurnished", "Ġto", "Ġdo", "Ġso", ",", "Ġsubject", "Ġto", "Ġthe", "Ġfollowing", "Ġconditions", ":", "Ċ", "**", "Ċ", "**", "ĠThe", "Ġabove", "Ġcopyright", "Ġnotice", "Ġand", "Ġthis", "Ġpermission", "Ġnotice", "Ġshall", "Ġbe", "Ġincluded", "Ġin", "Ċ", "**", "Ġall", "Ġcopies", "Ġor", "Ġsubstantial", "Ġportions", "Ġof", "Ġthe", "ĠSoftware", ".", "Ċ", "**", "Ċ", "**", "ĠTHE", "ĠSOFTWARE", "ĠIS", "ĠPROV", "ID", "ED", "Ġ\"", "AS", "ĠIS", "\",", "ĠWITHOUT", "ĠWARRANT", "Y", "ĠOF", "ĠANY", "ĠK", "IND", ",", "ĠEX", "PRESS", "ĠOR", "Ċ", "**", "ĠIM", "PLIED", ",", "ĠINCLUD", "ING", "ĠBUT", "ĠNOT", "ĠLIMITED", "ĠTO", "ĠTHE", "ĠWARRANT", "IES", "ĠOF", "ĠMER", "CH", "AN", "TA", "BILITY", ",", "Ċ", "**", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", "ĠAND", "ĠNON", "IN", "FR", "ING", "EMENT", ".", "ĠIN", "ĠNO", "ĠEVENT", "ĠSHALL", "ĠTHE", "Ċ", "**", "ĠAUTH", "ORS", "ĠOR", "ĠCOP", "YR", "IGHT", "ĠH", "OLD", "ERS", "ĠBE", "ĠLIA", "BLE", "ĠFOR", "ĠANY", "ĠCLA", "IM", ",", "ĠDAM", "AGES", "ĠOR", "ĠOTHER", "Ċ", "**", "ĠLIA", "BILITY", ",", "ĠWH", "ET", "HER", "ĠIN", "ĠAN", "ĠACTION", "ĠOF", "ĠCONTR", "ACT", ",", "ĠT", "ORT", "ĠOR", "ĠOTHER", "W", "ISE", ",", "ĠAR", "IS", "ING", "ĠFROM", ",", "Ċ", "**", "ĠOUT", "ĠOF", "ĠOR", "ĠIN", "ĠCON", "N", "ECTION", "ĠWITH", "ĠTHE", "ĠSOFTWARE", "ĠOR", "ĠTHE", "ĠUSE", "ĠOR", "ĠOTHER", "ĠDE", "AL", "INGS", "ĠIN", "ĠTHE", "Ċ", "**", "ĠSOFTWARE", ".", "Ċ", "**", "Ċ", "**", "================================================================", "============", "==", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "OS", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠOS", "::", "close", "(", "S", "ock", "Ġsock", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSF", "_", "R", "EST", "ART", "(", "::", "close", "(", "s", "ock", "),", "Ġresult", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["sock", 5, "comesFrom", ["sock"], [1]], ["result", 6, "comesFrom", ["result"], [2]], ["result", 7, "comesFrom", ["result"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::12", "code": "#include \"Renderer.h\"\n#include \"Core/Windows/Window.h\"\n#include <Resources/ResourceCache.h>\n\nnamespace uut\n{\n\tUUT_MODULE_IMPLEMENT(Renderer)\n\t{}\n\n\tRenderer::Renderer()\n\t\t: _screenSize(0)\n\t{\n\t}\n\n\tRenderer::~Renderer()\n\t{\n\t}\n\n\t//////////////////////////////////////////////////////////////////////////////\n\tbool Renderer::OnInit()\n\t{\n\t\tif (!Super::OnInit())\n\t\t\treturn false;\n\n\t\tModuleInstance<ResourceCache> cache;\n\t\tcache->AddResource(CreateMonoTexture(Color32::White), \"white\");\n\t\tcache->AddResource(CreateMonoTexture(Color32::Black), \"black\");\n\n\t\treturn true;\n\t}\n\n\tvoid Renderer::OnDone()\n\t{\n\t}\n\n\tSharedPtr<Texture2D> Renderer::CreateMonoTexture(const Color32& color)\n\t{\n\t\tauto tex = CreateTexture(Vector2i(1), TextureAccess::Static);\n\t\tuint32_t* buf = static_cast<uint32_t*>(tex->Lock());\n\t\tif (buf == nullptr)\n\t\t\treturn nullptr;\n\n\t\tbuf[0] = color.ToInt();\n\t\ttex->Unlock();\n\n\t\treturn tex;\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "R", "end", "erer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Core", "/", "Windows", "/", "Window", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Resources", "/", "Resource", "Cache", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "Ġu", "ut", "Ċ", "{", "Ċ", "ĉ", "U", "UT", "_", "MOD", "ULE", "_", "IM", "PLE", "MENT", "(", "R", "end", "erer", ")", "Ċ", "ĉ", "{", "}", "ĊĊ", "ĉ", "R", "end", "erer", "::", "R", "end", "erer", "()", "Ċ", "ĉ", "ĉ", ":", "Ġ_", "screen", "Size", "(", "0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "R", "end", "erer", "::", "~", "R", "end", "erer", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "////////////////////////////////", "////////////////////////////////", "////////", "////", "//", "Ċ", "ĉ", "bool", "ĠRend", "erer", "::", "On", "Init", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(!", "Super", "::", "On", "Init", "())", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġfalse", ";", "ĊĊ", "ĉ", "ĉ", "Module", "Instance", "<", "Resource", "Cache", ">", "Ġcache", ";", "Ċ", "ĉ", "ĉ", "cache", "->", "Add", "Resource", "(", "Create", "Mon", "o", "Texture", "(", "Color", "32", "::", "White", "),", "Ġ\"", "white", "\");", "Ċ", "ĉ", "ĉ", "cache", "->", "Add", "Resource", "(", "Create", "Mon", "o", "Texture", "(", "Color", "32", "::", "Black", "),", "Ġ\"", "black", "\");", "ĊĊ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠRend", "erer", "::", "On", "Done", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "Sh", "ared", "Ptr", "<", "Texture", "2", "D", ">", "ĠRend", "erer", "::", "Create", "Mon", "o", "Texture", "(", "const", "ĠColor", "32", "&", "Ġcolor", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "auto", "Ġtex", "Ġ=", "ĠCreate", "Texture", "(", "Vector", "2", "i", "(", "1", "),", "ĠTexture", "Access", "::", "Static", ");", "Ċ", "ĉ", "ĉ", "uint", "32", "_", "t", "*", "Ġbuf", "Ġ=", "Ġstatic", "_", "cast", "<", "uint", "32", "_", "t", "*", ">(", "tex", "->", "Lock", "());", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "buf", "Ġ==", "Ġnull", "ptr", ")", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġnull", "ptr", ";", "ĊĊ", "ĉ", "ĉ", "buf", "[", "0", "]", "Ġ=", "Ġcolor", ".", "To", "Int", "();", "Ċ", "ĉ", "ĉ", "tex", "->", "Un", "lock", "();", "ĊĊ", "ĉ", "ĉ", "return", "Ġtex", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["cache", 7, "comesFrom", ["cache"], [6]], ["cache", 11, "comesFrom", ["cache"], [6]], ["tex", 24, "comesFrom", ["tex"], [18]], ["tex", 30, "comesFrom", ["tex"], [18]], ["tex", 32, "comesFrom", ["tex"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::13", "code": "class SparseVector {\n    unordered_map<int, int> repr;\n    int size = 0;\npublic:\n    \n    SparseVector(vector<int> &nums) {\n        size = nums.size();\n        for (int i=0; i<nums.size(); i++) {\n            if (nums[i] == 0) { continue; }\n            repr[i] = nums[i];    \n        }\n    }\n    \n    // Return the dotProduct of two sparse vectors\n    int dotProduct(SparseVector& vec) {\n        if (size != vec.size) {return 0;}  // incompatible\n        int dp=0;\n        for (const auto& kv : vec.repr) {\n            if (repr.find(kv.first) == repr.end()) continue;\n            dp += kv.second * repr[kv.first];\n        }\n        return dp;\n    }\n};\n\n// Your SparseVector object will be instantiated and called as such:\n// SparseVector v1(nums1);\n// SparseVector v2(nums2);\n// int ans = v1.dotProduct(v2);\n", "code_tokens": ["Ġclass", "ĠSp", "arse", "Vector", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġun", "ordered", "_", "map", "<", "int", ",", "Ġint", ">", "Ġrepr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsize", "Ġ=", "Ġ0", ";", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSp", "arse", "Vector", "(", "vector", "<", "int", ">", "Ġ&", "n", "ums", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsize", "Ġ=", "Ġnum", "s", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", "ums", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "ums", "[", "i", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ġcontinue", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrepr", "[", "i", "]", "Ġ=", "Ġnum", "s", "[", "i", "];", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠReturn", "Ġthe", "Ġdot", "Product", "Ġof", "Ġtwo", "Ġsparse", "Ġvectors", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġdot", "Product", "(", "S", "parse", "Vector", "&", "Ġvec", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "size", "Ġ!=", "Ġvec", ".", "size", ")", "Ġ{", "return", "Ġ0", ";}", "Ġ", "Ġ//", "Ġincompatible", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġd", "p", "=", "0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "&", "Ġk", "v", "Ġ:", "Ġvec", ".", "re", "pr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "re", "pr", ".", "find", "(", "k", "v", ".", "first", ")", "Ġ==", "Ġrepr", ".", "end", "())", "Ġcontinue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "Ġ+=", "Ġk", "v", ".", "second", "Ġ*", "Ġrepr", "[", "k", "v", ".", "first", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġd", "p", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "//", "ĠYour", "ĠSp", "arse", "Vector", "Ġobject", "Ġwill", "Ġbe", "Ġinstant", "iated", "Ġand", "Ġcalled", "Ġas", "Ġsuch", ":", "Ċ", "//", "ĠSp", "arse", "Vector", "Ġv", "1", "(", "n", "ums", "1", ");", "Ċ", "//", "ĠSp", "arse", "Vector", "Ġv", "2", "(", "n", "ums", "2", ");", "Ċ", "//", "Ġint", "Ġans", "Ġ=", "Ġv", "1", ".", "dot", "Product", "(", "v", "2", ");", "Ċ"], "dataflow_graph": [["size", 6, "comesFrom", ["size"], [4]], ["size", 10, "comesFrom", ["size"], [4]], ["size", 20, "comesFrom", ["size"], [4]], ["size", 22, "comesFrom", ["size"], [4]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 11, "comesFrom", ["i"], [7]], ["i", 13, "comesFrom", ["i"], [7]], ["i", 15, "comesFrom", ["i"], [7]], ["i", 17, "comesFrom", ["i"], [7]], ["dp", 39, "comesFrom", ["dp"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::14", "code": "// 1000. 连通性问题\n#include <iostream>\nusing namespace std;\n\nint unionFind[100001];\n\nint find(int val) {\n  if (val == unionFind[val]) return val;\n  unionFind[val] = find(unionFind[val]);\n  return unionFind[val];\n}\n\nint main() {\n  int a, b;\n  for (int i = 0; i < 100001; i++) {\n    unionFind[i] = i;\n  }\n  while (cin >> a >> b) {\n    if (find(a) != find(b)) {\n      cout << a << ' ' << b << endl;\n      unionFind[find(a)] = unionFind[find(b)];\n    }\n  }\n}\n", "code_tokens": ["Ġ//", "Ġ1000", ".", "Ġè", "¿", "ŀ", "éĢ", "ļ", "æĢ", "§", "éĹ", "®", "é", "¢", "ĺ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġunion", "Find", "[", "10000", "1", "];", "Ċ", "Ċ", "int", "Ġfind", "(", "int", "Ġval", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "val", "Ġ==", "Ġunion", "Find", "[", "val", "])", "Ġreturn", "Ġval", ";", "Ċ", "Ġ", "Ġunion", "Find", "[", "val", "]", "Ġ=", "Ġfind", "(", "union", "Find", "[", "val", "]);", "Ċ", "Ġ", "Ġreturn", "Ġunion", "Find", "[", "val", "];", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100", "001", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunion", "Find", "[", "i", "]", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "find", "(", "a", ")", "Ġ!=", "Ġfind", "(", "b", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġa", "Ġ<<", "Ġ'", "Ġ'", "Ġ<<", "Ġb", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunion", "Find", "[", "find", "(", "a", ")]", "Ġ=", "Ġunion", "Find", "[", "find", "(", "b", ")", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["val", 4, "comesFrom", ["val"], [3]], ["val", 6, "comesFrom", ["val"], [3]], ["val", 7, "comesFrom", ["val"], [3]], ["val", 9, "comesFrom", ["val"], [3]], ["val", 12, "comesFrom", ["val"], [3]], ["val", 14, "comesFrom", ["val"], [3]], ["i", 19, "comesFrom", ["i"], [18]], ["i", 20, "comesFrom", ["i"], [18]], ["i", 22, "comesFrom", ["i"], [18]], ["i", 23, "comesFrom", ["i"], [18]], ["a", 25, "comesFrom", ["a"], [16]], ["a", 28, "comesFrom", ["a"], [16]], ["a", 32, "comesFrom", ["a"], [16]], ["a", 37, "comesFrom", ["a"], [16]], ["b", 26, "comesFrom", ["b"], [17]], ["b", 30, "comesFrom", ["b"], [17]], ["b", 33, "comesFrom", ["b"], [17]], ["b", 40, "comesFrom", ["b"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::15", "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n  int n;\n  string experiment;\n  for(cin>>n; n>0; n--){\n    cin >> experiment;\n    if (experiment.size() < 3) cout << '+' << endl;\n    else{\n      string s = experiment.substr(experiment.size()-2, 2);\n      string saux;\n      if(s == \"35\") cout << '-' << endl;\n      else{\n        s = s[1];\n        saux = experiment[0];\n        if(saux == \"9\" && s == \"4\") cout << '*' << endl;\n        else{\n          s = experiment.substr(0,3);\n          if(s == \"190\") cout << '?' << endl;\n          else cout << '?' << endl;\n        }\n      }\n    }\n  }\n\n\n\nreturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġstring", "Ġexperiment", ";", "Ċ", "Ġ", "Ġfor", "(", "cin", ">>", "n", ";", "Ġn", ">", "0", ";", "Ġn", "--", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġexperiment", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "exper", "iment", ".", "size", "()", "Ġ<", "Ġ3", ")", "Ġcout", "Ġ<<", "Ġ'", "+", "'", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġs", "Ġ=", "Ġexperiment", ".", "sub", "str", "(", "exper", "iment", ".", "size", "()", "-", "2", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġsa", "ux", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "s", "Ġ==", "Ġ\"", "35", "\")", "Ġcout", "Ġ<<", "Ġ'", "-'", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "Ġ=", "Ġs", "[", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsa", "ux", "Ġ=", "Ġexperiment", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "s", "aux", "Ġ==", "Ġ\"", "9", "\"", "Ġ&&", "Ġs", "Ġ==", "Ġ\"", "4", "\")", "Ġcout", "Ġ<<", "Ġ'", "*", "'", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "Ġ=", "Ġexperiment", ".", "sub", "str", "(", "0", ",", "3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "s", "Ġ==", "Ġ\"", "190", "\")", "Ġcout", "Ġ<<", "Ġ'", "?'", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġcout", "Ġ<<", "Ġ'", "?'", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ċ", "Ċ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [2]], ["n", 6, "comesFrom", ["n"], [2]], ["n", 7, "comesFrom", ["n"], [2]], ["experiment", 9, "comesFrom", ["experiment"], [3]], ["experiment", 10, "comesFrom", ["experiment"], [3]], ["experiment", 15, "comesFrom", ["experiment"], [3]], ["experiment", 17, "comesFrom", ["experiment"], [3]], ["experiment", 26, "comesFrom", ["experiment"], [3]], ["experiment", 32, "comesFrom", ["experiment"], [3]], ["s", 20, "comesFrom", ["s"], [14]], ["s", 24, "comesFrom", ["s"], [23]], ["s", 28, "comesFrom", ["s"], [23]], ["s", 34, "comesFrom", ["s"], [31]], ["saux", 27, "comesFrom", ["saux"], [25]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::16", "code": "#include <QWebView>\n\n#include \"helpdialog.h\"\n\n/**\n  * Constructor of Help Dialog\n  */\nHelpDialog::HelpDialog(QWidget *parent) : QWebPage(parent) {\n    view = new QWebView();\n}\n\n/**\n  * Shows the help dialog\n  */\nvoid HelpDialog::showHelpDialog() {\n    createWindow(QWebPage::WebModalDialog);\n    view->setPage(this);\n    view->setWindowIcon(QIcon(\":/images/help-icon.png\"));\n    view->setWindowTitle(\"Othello FPG - Help\");\n    view->load(QUrl(\"qrc:/html/index.html\"));\n    view->show();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Q", "Web", "View", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "help", "dial", "og", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ*", "ĠConstruct", "or", "Ġof", "ĠHelp", "ĠDial", "og", "Ċ", "Ġ", "Ġ*/", "Ċ", "Help", "Dialog", "::", "Help", "Dialog", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġ:", "ĠQ", "Web", "Page", "(", "parent", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "Ġ=", "Ġnew", "ĠQ", "Web", "View", "();", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ*", "ĠShows", "Ġthe", "Ġhelp", "Ġdialog", "Ċ", "Ġ", "Ġ*/", "Ċ", "void", "ĠHelp", "Dialog", "::", "show", "Help", "Dialog", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcreate", "Window", "(", "Q", "Web", "Page", "::", "Web", "Mod", "al", "Dialog", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "->", "set", "Page", "(", "this", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "->", "set", "Window", "Icon", "(", "Q", "Icon", "(", "\":", "/", "images", "/", "help", "-", "icon", ".", "png", "\")", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "->", "set", "Window", "Title", "(\"", "O", "the", "llo", "ĠF", "PG", "Ġ-", "ĠHelp", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "->", "load", "(", "QU", "rl", "(\"", "q", "rc", ":/", "html", "/", "index", ".", "html", "\")", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "->", "show", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["view", 8, "comesFrom", ["view"], [4]], ["view", 10, "comesFrom", ["view"], [4]], ["view", 13, "comesFrom", ["view"], [4]], ["view", 15, "comesFrom", ["view"], [4]], ["view", 18, "comesFrom", ["view"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::17", "code": "#include <iostream>\r\n#include <string>\r\n#include <forward_list>\r\n\r\nusing namespace std;\r\n\r\nvoid insert(forward_list<string>& fst, const string& to_find, const string& to_add);\r\n\r\nint main() {\r\n\tforward_list<string> fst{ \"pen\", \"pineapple\", \"apple\", \"pen\" };\r\n\tinsert(fst, \"pen\", \"and\");\r\n\tfor (auto& i : fst)\r\n\t\tcout << i << \" \";\r\n\tcout << endl;\r\n\treturn 0;\r\n}\r\n\r\nvoid insert(forward_list<string>& fst, const string& to_find, const string& to_add) {\r\n\tauto prev = fst.before_begin();\r\n\tfor (auto iter = fst.begin(); iter != fst.end(); prev = iter++) {\r\n\t\tif (*iter == to_find) {\r\n\t\t\tfst.insert_after(iter, to_add);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tfst.insert_after(prev, to_add);\r\n\treturn;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "Ġ<", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "forward", "_", "list", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "void", "Ġinsert", "(", "forward", "_", "list", "<", "string", ">", "&", "Ġf", "st", ",", "Ġconst", "Ġstring", "&", "Ġto", "_", "find", ",", "Ġconst", "Ġstring", "&", "Ġto", "_", "add", ");", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "ĉ", "forward", "_", "list", "<", "string", ">", "Ġf", "st", "{", "Ġ\"", "pen", "\",", "Ġ\"", "pine", "apple", "\",", "Ġ\"", "apple", "\",", "Ġ\"", "pen", "\"", "Ġ};", "č", "Ċ", "ĉ", "insert", "(", "f", "st", ",", "Ġ\"", "pen", "\",", "Ġ\"", "and", "\");", "č", "Ċ", "ĉ", "for", "Ġ(", "auto", "&", "Ġi", "Ġ:", "Ġf", "st", ")", "č", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ\"", ";", "č", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġinsert", "(", "forward", "_", "list", "<", "string", ">", "&", "Ġf", "st", ",", "Ġconst", "Ġstring", "&", "Ġto", "_", "find", ",", "Ġconst", "Ġstring", "&", "Ġto", "_", "add", ")", "Ġ{", "č", "Ċ", "ĉ", "auto", "Ġprev", "Ġ=", "Ġf", "st", ".", "before", "_", "begin", "();", "č", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġiter", "Ġ=", "Ġf", "st", ".", "begin", "();", "Ġiter", "Ġ!=", "Ġf", "st", ".", "end", "();", "Ġprev", "Ġ=", "Ġiter", "++)", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(*", "iter", "Ġ==", "Ġto", "_", "find", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "f", "st", ".", "insert", "_", "after", "(", "iter", ",", "Ġto", "_", "add", ");", "č", "Ċ", "ĉ", "ĉ", "ĉ", "return", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "f", "st", ".", "insert", "_", "after", "(", "prev", ",", "Ġto", "_", "add", ");", "č", "Ċ", "ĉ", "return", ";", "č", "Ċ", "}"], "dataflow_graph": [["fst", 8, "comesFrom", ["fst"], [6]], ["fst", 10, "comesFrom", ["fst"], [6]], ["fst", 16, "comesFrom", ["fst"], [6]], ["fst", 20, "comesFrom", ["fst"], [6]], ["fst", 23, "comesFrom", ["fst"], [6]], ["fst", 26, "comesFrom", ["fst"], [6]], ["fst", 32, "comesFrom", ["fst"], [6]], ["fst", 36, "comesFrom", ["fst"], [6]], ["iter", 25, "comesFrom", ["iter"], [22]], ["iter", 29, "comesFrom", ["iter"], [22]], ["iter", 30, "comesFrom", ["iter"], [22]], ["iter", 34, "comesFrom", ["iter"], [22]], ["prev", 38, "comesFrom", ["prev"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::18", "code": "#include \"EngineImplDefine.h\"\n\nvoid BlendColor::Init(D3DCOLOR defaultColor, D3DCOLOR disabledColor, D3DCOLOR hiddenColor)\n{\n\tfor (decltype(States.size()) i = 0; i != States.size(); ++i)\n\t{\n\t\tStates[i] = defaultColor;\n\t}\n\n\tStates[STATE_DISABLED] = disabledColor;\n\tStates[STATE_HIDDEN] = hiddenColor;\n\tCurrent = hiddenColor;\n}\n\nvoid BlendColor::Blend(CONTROL_STATE iState, float fElapsedTime, float fRate)\n{\n\tD3DXCOLOR destColor = States[iState];\n\tD3DXColorLerp(&Current, &Current, &destColor, 1.0f - powf(fRate, 30 * fElapsedTime));\n}\n\nvoid FontTexElement::SetTexture(UINT iTexture, RECT * prcTexture, D3DCOLOR defaultTextureColor)\n{\n\tthis->iTexture = iTexture;\n\n\tif (prcTexture)\n\t\trcTexture = *prcTexture;\n\telse\n\t\tSetRectEmpty(&rcTexture);\n\n\tTextureColor.Init(defaultTextureColor);\n}\n\nvoid FontTexElement::SetFont(UINT iFont, D3DCOLOR defaultFontColor, DWORD dwTextFormat)\n{\n\tthis->iFont = iFont;\n\tthis->dwTextFormat = dwTextFormat;\n\n\tFontColor.Init(defaultFontColor);\n}\n\nvoid FontTexElement::Refresh()\n{\n\tTextureColor.Current = TextureColor.States[STATE_HIDDEN];\n\tFontColor.Current = FontColor.States[STATE_HIDDEN];\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Engine", "Impl", "Def", "ine", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠBlend", "Color", "::", "Init", "(", "D", "3", "DC", "OL", "OR", "Ġdefault", "Color", ",", "ĠD", "3", "DC", "OL", "OR", "Ġdisabled", "Color", ",", "ĠD", "3", "DC", "OL", "OR", "Ġhidden", "Color", ")", "Ċ", "{", "Ċ", "ĉ", "for", "Ġ(", "decl", "type", "(", "States", ".", "size", "())", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ!=", "ĠStates", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "States", "[", "i", "]", "Ġ=", "Ġdefault", "Color", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "States", "[", "STATE", "_", "DIS", "AB", "LED", "]", "Ġ=", "Ġdisabled", "Color", ";", "Ċ", "ĉ", "States", "[", "STATE", "_", "H", "ID", "DEN", "]", "Ġ=", "Ġhidden", "Color", ";", "Ċ", "ĉ", "Current", "Ġ=", "Ġhidden", "Color", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBlend", "Color", "::", "Bl", "end", "(", "CON", "TR", "OL", "_", "STATE", "Ġi", "State", ",", "Ġfloat", "Ġf", "El", "apsed", "Time", ",", "Ġfloat", "Ġf", "Rate", ")", "Ċ", "{", "Ċ", "ĉ", "D", "3", "DX", "COLOR", "Ġdest", "Color", "Ġ=", "ĠStates", "[", "i", "State", "];", "Ċ", "ĉ", "D", "3", "DX", "Color", "L", "er", "p", "(&", "Current", ",", "Ġ&", "Current", ",", "Ġ&", "dest", "Color", ",", "Ġ1", ".", "0", "f", "Ġ-", "Ġpow", "f", "(", "f", "Rate", ",", "Ġ30", "Ġ*", "Ġf", "El", "apsed", "Time", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFont", "Tex", "Element", "::", "Set", "Texture", "(", "U", "INT", "ĠiT", "ext", "ure", ",", "ĠR", "ECT", "Ġ*", "Ġpr", "c", "Texture", ",", "ĠD", "3", "DC", "OL", "OR", "Ġdefault", "Texture", "Color", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "i", "Texture", "Ġ=", "ĠiT", "ext", "ure", ";", "ĊĊ", "ĉ", "if", "Ġ(", "pr", "c", "Texture", ")", "Ċ", "ĉ", "ĉ", "rc", "Texture", "Ġ=", "Ġ*", "pr", "c", "Texture", ";", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "Set", "Rect", "Empty", "(&", "rc", "Texture", ");", "ĊĊ", "ĉ", "Texture", "Color", ".", "Init", "(", "default", "Texture", "Color", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFont", "Tex", "Element", "::", "Set", "Font", "(", "U", "INT", "Ġi", "Font", ",", "ĠD", "3", "DC", "OL", "OR", "Ġdefault", "Font", "Color", ",", "ĠDW", "ORD", "Ġdw", "Text", "Format", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "i", "Font", "Ġ=", "Ġi", "Font", ";", "Ċ", "ĉ", "this", "->", "d", "w", "Text", "Format", "Ġ=", "Ġdw", "Text", "Format", ";", "ĊĊ", "ĉ", "Font", "Color", ".", "Init", "(", "default", "Font", "Color", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFont", "Tex", "Element", "::", "Ref", "resh", "()", "Ċ", "{", "Ċ", "ĉ", "Texture", "Color", ".", "Current", "Ġ=", "ĠTexture", "Color", ".", "States", "[", "STATE", "_", "H", "ID", "DEN", "];", "Ċ", "ĉ", "Font", "Color", ".", "Current", "Ġ=", "ĠFont", "Color", ".", "States", "[", "STATE", "_", "H", "ID", "DEN", "];", "Ċ", "}"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 10, "comesFrom", ["i"], [6]], ["i", 12, "comesFrom", ["i"], [6]], ["defaultColor", 13, "comesFrom", ["defaultColor"], [1]], ["disabledColor", 16, "comesFrom", ["disabledColor"], [2]], ["hiddenColor", 19, "comesFrom", ["hiddenColor"], [3]], ["hiddenColor", 21, "comesFrom", ["hiddenColor"], [3]], ["iState", 28, "comesFrom", ["iState"], [23]], ["Current", 30, "comesFrom", ["Current"], [20]], ["Current", 31, "comesFrom", ["Current"], [20]], ["Current", 63, "comesFrom", ["Current"], [20]], ["Current", 68, "comesFrom", ["Current"], [20]], ["destColor", 32, "comesFrom", ["destColor"], [26]], ["fRate", 34, "comesFrom", ["fRate"], [25]], ["fElapsedTime", 35, "comesFrom", ["fElapsedTime"], [24]], ["iTexture", 40, "comesFrom", ["iTexture"], [37]], ["iTexture", 41, "comesFrom", ["iTexture"], [37]], ["rcTexture", 46, "comesFrom", ["rcTexture"], [43]], ["defaultTextureColor", 49, "comesFrom", ["defaultTextureColor"], [39]], ["iFont", 54, "comesFrom", ["iFont"], [51]], ["iFont", 55, "comesFrom", ["iFont"], [51]], ["dwTextFormat", 56, "comesFrom", ["dwTextFormat"], [53]], ["dwTextFormat", 57, "comesFrom", ["dwTextFormat"], [53]], ["defaultFontColor", 60, "comesFrom", ["defaultFontColor"], [52]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::19", "code": "#include \"stdafx.h\"\n#include \"record.hpp\"\n\nnamespace tc { namespace log {\n\nconst char* record::type_acronym( void ) const {\n\tswitch( type ) {\n\tcase log::trace: return \"T\";\n\tcase log::debug: return \"D\";\n\tcase log::info: return \"I\";\n\tcase log::warn: return \"W\";\n\tcase log::error: return \"E\";\n\tcase log::fatal: return \"F\";\n\tcase log::all: return \"A\";\n\tdefault:\n\t\treturn \"!\";\n\t}\n\treturn \"?\";\n}\n\nrecord::record( tc::log::type type ,  const tc::log::tag& tag )\n\t: type(type)\n\t, tag(tag)\n\t, ts(tc::timestamp::now())  \n\t, tid(tc::threading::current_thread_id())\n{\n}\n\nrecord::~record( void ) {\n}\n\n}}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "record", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġtc", "Ġ{", "Ġnamespace", "Ġlog", "Ġ{", "Ċ", "Ċ", "const", "Ġchar", "*", "Ġrecord", "::", "type", "_", "ac", "ron", "ym", "(", "Ġvoid", "Ġ)", "Ġconst", "Ġ{", "Ċ", "ĉ", "switch", "(", "Ġtype", "Ġ)", "Ġ{", "Ċ", "ĉ", "case", "Ġlog", "::", "trace", ":", "Ġreturn", "Ġ\"", "T", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "debug", ":", "Ġreturn", "Ġ\"", "D", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "info", ":", "Ġreturn", "Ġ\"", "I", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "warn", ":", "Ġreturn", "Ġ\"", "W", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "error", ":", "Ġreturn", "Ġ\"", "E", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "f", "atal", ":", "Ġreturn", "Ġ\"", "F", "\";", "Ċ", "ĉ", "case", "Ġlog", "::", "all", ":", "Ġreturn", "Ġ\"", "A", "\";", "Ċ", "ĉ", "default", ":", "Ċ", "ĉ", "ĉ", "return", "Ġ\"", "!\"", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ\"", "?\"", ";", "Ċ", "}", "Ċ", "Ċ", "record", "::", "record", "(", "Ġtc", "::", "log", "::", "type", "Ġtype", "Ġ,", "Ġ", "Ġconst", "Ġtc", "::", "log", "::", "tag", "&", "Ġtag", "Ġ)", "Ċ", "ĉ", ":", "Ġtype", "(", "type", ")", "Ċ", "ĉ", ",", "Ġtag", "(", "tag", ")", "Ċ", "ĉ", ",", "Ġts", "(", "tc", "::", "tim", "estamp", "::", "now", "())", "Ġ", "Ġ", "Ċ", "ĉ", ",", "Ġtid", "(", "tc", "::", "thread", "ing", "::", "current", "_", "thread", "_", "id", "())", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "record", "::", "~", "record", "(", "Ġvoid", "Ġ)", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "}}", "Ċ"], "dataflow_graph": [["type", 12, "comesFrom", ["type"], [10]], ["type", 13, "comesFrom", ["type"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::20", "code": "#include <fstream>\n#include <iostream>\n#include <vector>\n\nint main(int argc, char **argv) {\n  std::vector<std::string> args(argv, argv + argc);\n  std::ofstream tty;\n  tty.open(\"/dev/tty\");\n\n  if (args.size() <= 1 || (args.size() & 2) == 1) {\n    std::cerr << \"usage: maplabel [devlocal remote]... remotedir\\n\";\n    return 1;\n  }\n\n  std::string curdir = args[args.size() - 1];\n  for (size_t i = 1; i + 1 < args.size(); i += 2) {\n    if (curdir.find(args[i + 1]) == 0) {\n      if ((curdir.size() > args[i + 1].size() &&\n           curdir[args[i + 1].size()] == '/') ||\n          curdir.size() == args[i + 1].size()) {\n        tty << \"\\033];\" << args[i] + curdir.substr(args[i + 1].size())\n            << \"\\007\\n\";\n        return 0;\n      }\n    }\n  }\n\n  tty << \"\\033];\" << curdir << \"\\007\\n\";\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġargs", "(", "arg", "v", ",", "Ġarg", "v", "Ġ+", "Ġarg", "c", ");", "Ċ", "Ġ", "Ġstd", "::", "of", "stream", "Ġt", "ty", ";", "Ċ", "Ġ", "Ġt", "ty", ".", "open", "(\"", "/", "dev", "/", "tty", "\");", "ĊĊ", "Ġ", "Ġif", "Ġ(", "args", ".", "size", "()", "Ġ<=", "Ġ1", "Ġ||", "Ġ(", "args", ".", "size", "()", "Ġ&", "Ġ2", ")", "Ġ==", "Ġ1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "usage", ":", "Ġma", "pl", "abel", "Ġ[", "dev", "local", "Ġremote", "]", "...", "Ġrem", "oted", "ir", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġstd", "::", "string", "Ġcur", "dir", "Ġ=", "Ġargs", "[", "args", ".", "size", "()", "Ġ-", "Ġ1", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ+", "Ġ1", "Ġ<", "Ġargs", ".", "size", "();", "Ġi", "Ġ+=", "Ġ2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "c", "urd", "ir", ".", "find", "(", "args", "[", "i", "Ġ+", "Ġ1", "])", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "c", "urd", "ir", ".", "size", "()", "Ġ>", "Ġargs", "[", "i", "Ġ+", "Ġ1", "].", "size", "()", "Ġ&&", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcur", "dir", "[", "args", "[", "i", "Ġ+", "Ġ1", "].", "size", "()", "]", "Ġ==", "Ġ'/", "')", "Ġ||", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcur", "dir", ".", "size", "()", "Ġ==", "Ġargs", "[", "i", "Ġ+", "Ġ1", "].", "size", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġt", "ty", "Ġ<<", "Ġ\"\\", "033", "];", "\"", "Ġ<<", "Ġargs", "[", "i", "]", "Ġ+", "Ġcur", "dir", ".", "sub", "str", "(", "args", "[", "i", "Ġ+", "Ġ1", "].", "size", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\"\\", "007", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġt", "ty", "Ġ<<", "Ġ\"\\", "033", "];", "\"", "Ġ<<", "Ġcur", "dir", "Ġ<<", "Ġ\"\\", "007", "\\", "n", "\";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 6, "comesFrom", ["argc"], [1]], ["tty", 8, "comesFrom", ["tty"], [7]], ["tty", 42, "comesFrom", ["tty"], [7]], ["tty", 50, "comesFrom", ["tty"], [7]], ["args", 10, "comesFrom", ["args"], [3]], ["args", 12, "comesFrom", ["args"], [3]], ["args", 16, "comesFrom", ["args"], [3]], ["args", 17, "comesFrom", ["args"], [3]], ["args", 21, "comesFrom", ["args"], [3]], ["args", 26, "comesFrom", ["args"], [3]], ["args", 30, "comesFrom", ["args"], [3]], ["args", 34, "comesFrom", ["args"], [3]], ["args", 39, "comesFrom", ["args"], [3]], ["args", 43, "comesFrom", ["args"], [3]], ["args", 47, "comesFrom", ["args"], [3]], ["i", 20, "comesFrom", ["i"], [19]], ["i", 27, "comesFrom", ["i"], [23]], ["i", 31, "comesFrom", ["i"], [23]], ["i", 35, "comesFrom", ["i"], [23]], ["i", 40, "comesFrom", ["i"], [23]], ["i", 44, "comesFrom", ["i"], [23]], ["i", 48, "comesFrom", ["i"], [23]], ["curdir", 24, "comesFrom", ["curdir"], [15]], ["curdir", 28, "comesFrom", ["curdir"], [15]], ["curdir", 33, "comesFrom", ["curdir"], [15]], ["curdir", 37, "comesFrom", ["curdir"], [15]], ["curdir", 45, "comesFrom", ["curdir"], [15]], ["curdir", 51, "comesFrom", ["curdir"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::21", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nint main () {\n\n  int n;\n  \n  while(scanf(\"%d\", &n) && n) {\n    bitset<32> bs,a,b;\n    bs = n;\n    int cont = 0;\n    for(int i = 0; i < 32; i++) {\n      if(bs.test(i)) {\n        if(cont%2) b.set(i);\n        else a.set(i);\n        cont++;\n      }\n    }\n    //int x = a;\n    printf(\"%u %u\\n\", a.to_ulong(), b.to_ulong());\n  }  \n  \n  return 0;    \n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "Ġll", ";", "Ċ", "ty", "ped", "ef", "Ġpair", "<", "int", ",", "int", ">", "Ġii", ";", "Ċ", "ty", "ped", "ef", "Ġvector", "<", "int", ">", "Ġvi", ";", "Ċ", "ty", "ped", "ef", "Ġvector", "<", "ii", ">", "Ġv", "ii", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "ĊĊ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġwhile", "(", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ")", "Ġ&&", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbits", "et", "<", "32", ">", "Ġb", "s", ",", "a", ",", "b", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "s", "Ġ=", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġcont", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ32", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "bs", ".", "test", "(", "i", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "cont", "%", "2", ")", "Ġb", ".", "set", "(", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġa", ".", "set", "(", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcont", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "int", "Ġx", "Ġ=", "Ġa", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "u", "Ġ%", "u", "\\", "n", "\",", "Ġa", ".", "to", "_", "ul", "ong", "(),", "Ġb", ".", "to", "_", "ul", "ong", "());", "Ċ", "Ġ", "Ġ}", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [2]], ["n", 5, "comesFrom", ["n"], [2]], ["n", 10, "comesFrom", ["n"], [2]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 14, "comesFrom", ["i"], [12]], ["i", 17, "comesFrom", ["i"], [12]], ["i", 21, "comesFrom", ["i"], [12]], ["i", 24, "comesFrom", ["i"], [12]], ["bs", 15, "comesFrom", ["bs"], [9]], ["cont", 18, "comesFrom", ["cont"], [11]], ["cont", 25, "comesFrom", ["cont"], [11]], ["b", 19, "comesFrom", ["b"], [8]], ["b", 29, "comesFrom", ["b"], [8]], ["a", 22, "comesFrom", ["a"], [7]], ["a", 27, "comesFrom", ["a"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::22", "code": "/*\r\n * boatWithSupport.cpp\r\n *\r\n *  Created on: 16 de Abr de 2013\r\n *      Author: Windows\r\n */\r\n\r\n#include \"BoatWithSupport.h\"\r\n\r\nBoatWithSupport::BoatWithSupport(int extraCapacity) :\r\n\t\tBoat() {\r\n\textraCap = extraCapacity;\r\n\tlastMaxCap = 0;\r\n\tlastTransported = 0;\r\n}\r\n\r\nBoatWithSupport::BoatWithSupport(int capacity, int extraCapacity) :\r\n\t\tBoat(capacity) {\r\n\textraCap = extraCapacity;\r\n\tlastMaxCap = 0;\r\n\tlastTransported = 0;\r\n}\r\n\r\nint BoatWithSupport::getExtraCapacity() {\r\n\treturn extraCap;\r\n}\r\n\r\nint BoatWithSupport::getMaxCapacity() {\r\n\treturn this->maxCapacity + this->extraCap;\r\n}\r\n\r\n\r\nBoatWithSupport::~BoatWithSupport() {\r\n\t// TODO Auto-generated destructor stub\r\n}\r\n\r\nvoid BoatWithSupport::reset() {\r\n\tthis->transportedQuantity = lastTransported;\r\n\tthis->maxCapacity = lastMaxCap;\r\n}\r\n\r\nvoid BoatWithSupport::resize() {\r\n\tthis->lastMaxCap = this->maxCapacity;\r\n\tthis->maxCapacity = this->extraCap;\r\n\tlastTransported = this->transportedQuantity;\r\n\tthis->transportedQuantity = this->extraCap;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "Ġboat", "With", "Support", ".", "cpp", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ16", "Ġde", "ĠA", "br", "Ġde", "Ġ2013", "č", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "ĠWindows", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "B", "oat", "With", "Support", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "B", "oat", "With", "Support", "::", "B", "oat", "With", "Support", "(", "int", "Ġextra", "Cap", "acity", ")", "Ġ:", "č", "Ċ", "ĉ", "ĉ", "B", "oat", "()", "Ġ{", "č", "Ċ", "ĉ", "extra", "Cap", "Ġ=", "Ġextra", "Cap", "acity", ";", "č", "Ċ", "ĉ", "last", "Max", "Cap", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "last", "Trans", "ported", "Ġ=", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "B", "oat", "With", "Support", "::", "B", "oat", "With", "Support", "(", "int", "Ġcapacity", ",", "Ġint", "Ġextra", "Cap", "acity", ")", "Ġ:", "č", "Ċ", "ĉ", "ĉ", "B", "oat", "(", "capacity", ")", "Ġ{", "č", "Ċ", "ĉ", "extra", "Cap", "Ġ=", "Ġextra", "Cap", "acity", ";", "č", "Ċ", "ĉ", "last", "Max", "Cap", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "last", "Trans", "ported", "Ġ=", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠBoat", "With", "Support", "::", "get", "Extra", "Cap", "acity", "()", "Ġ{", "č", "Ċ", "ĉ", "return", "Ġextra", "Cap", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠBoat", "With", "Support", "::", "get", "Max", "Cap", "acity", "()", "Ġ{", "č", "Ċ", "ĉ", "return", "Ġthis", "->", "max", "Cap", "acity", "Ġ+", "Ġthis", "->", "extra", "Cap", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "B", "oat", "With", "Support", "::", "~", "B", "oat", "With", "Support", "()", "Ġ{", "č", "Ċ", "ĉ", "//", "ĠTOD", "O", "ĠAuto", "-", "generated", "Ġdestruct", "or", "Ġstub", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠBoat", "With", "Support", "::", "reset", "()", "Ġ{", "č", "Ċ", "ĉ", "this", "->", "trans", "ported", "Quantity", "Ġ=", "Ġlast", "Trans", "ported", ";", "č", "Ċ", "ĉ", "this", "->", "max", "Cap", "acity", "Ġ=", "Ġlast", "Max", "Cap", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠBoat", "With", "Support", "::", "res", "ize", "()", "Ġ{", "č", "Ċ", "ĉ", "this", "->", "last", "Max", "Cap", "Ġ=", "Ġthis", "->", "max", "Cap", "acity", ";", "č", "Ċ", "ĉ", "this", "->", "max", "Cap", "acity", "Ġ=", "Ġthis", "->", "extra", "Cap", ";", "č", "Ċ", "ĉ", "last", "Trans", "ported", "Ġ=", "Ġthis", "->", "trans", "ported", "Quantity", ";", "č", "Ċ", "ĉ", "this", "->", "trans", "ported", "Quantity", "Ġ=", "Ġthis", "->", "extra", "Cap", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["extraCapacity", 4, "comesFrom", ["extraCapacity"], [1]], ["extraCapacity", 13, "comesFrom", ["extraCapacity"], [9]], ["capacity", 11, "comesFrom", ["capacity"], [8]], ["extraCap", 17, "comesFrom", ["extraCap"], [12]], ["extraCap", 20, "comesFrom", ["extraCap"], [12]], ["extraCap", 31, "comesFrom", ["extraCap"], [12]], ["extraCap", 35, "comesFrom", ["extraCap"], [12]], ["lastTransported", 24, "comesFrom", ["lastTransported"], [15]], ["lastMaxCap", 26, "comesFrom", ["lastMaxCap"], [14]], ["lastMaxCap", 28, "comesFrom", ["lastMaxCap"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::23", "code": "#include <iostream>\n#include <string>\n\n// time complexity O(1) - constant\n// space complexity O(1) - constant\n\nbool is_unique (std::string s) {\n\tif (s.length() > 128) return false;\n\n\tbool char_list[128] = {0};\n\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (char_list[s[i]])\treturn false;\n\t\tchar_list[s[i]] = true;\n\t}\n\treturn true;\n}\n\nint main () {\n\tstd::cout << is_unique(\"ABCDEFGA\") << std::endl;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "//", "Ġtime", "Ġcomplexity", "ĠO", "(", "1", ")", "Ġ-", "Ġconstant", "Ċ", "//", "Ġspace", "Ġcomplexity", "ĠO", "(", "1", ")", "Ġ-", "Ġconstant", "Ċ", "Ċ", "bool", "Ġis", "_", "unique", "Ġ(", "std", "::", "string", "Ġs", ")", "Ġ{", "Ċ", "ĉ", "if", "Ġ(", "s", ".", "length", "()", "Ġ>", "Ġ128", ")", "Ġreturn", "Ġfalse", ";", "ĊĊ", "ĉ", "bool", "Ġchar", "_", "list", "[", "128", "]", "Ġ=", "Ġ{", "0", "};", "ĊĊ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġs", ".", "length", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "char", "_", "list", "[", "s", "[", "i", "]]", ")", "ĉ", "return", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "char", "_", "list", "[", "s", "[", "i", "]]", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġis", "_", "unique", "(\"", "ABC", "DEF", "GA", "\")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}"], "dataflow_graph": [["s", 2, "comesFrom", ["s"], [1]], ["s", 7, "comesFrom", ["s"], [1]], ["s", 11, "comesFrom", ["s"], [1]], ["s", 14, "comesFrom", ["s"], [1]], ["i", 6, "comesFrom", ["i"], [5]], ["i", 9, "comesFrom", ["i"], [5]], ["i", 12, "comesFrom", ["i"], [5]], ["i", 15, "comesFrom", ["i"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::24", "code": "// **********************************************************************\n//\n// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.\n//\n// This copy of Ice is licensed to you under the terms described in the\n// ICE_LICENSE file included in this distribution.\n//\n// **********************************************************************\n\n#include <Ice/Ice.h>\n#include <ThroughputI.h>\n\nusing namespace std;\n\nclass ThroughputServer : public Ice::Application\n{\npublic:\n\n    virtual int run(int, char*[]);\n};\n\nint\nmain(int argc, char* argv[])\n{\n    ThroughputServer app;\n    return app.main(argc, argv, \"config.server\");\n}\n\nint\nThroughputServer::run(int argc, char*[])\n{\n    if(argc > 1)\n    {\n        cerr << appName() << \": too many arguments\" << endl;\n        return EXIT_FAILURE;\n    }\n\n    Ice::ObjectAdapterPtr adapter = communicator()->createObjectAdapter(\"Throughput\");\n    Demo::ThroughputPtr servant = new ThroughputI;\n    adapter->add(servant, communicator()->stringToIdentity(\"throughput\"));\n    adapter->activate();\n    communicator()->waitForShutdown();\n    return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ġ//", "Ġ********************************", "********************************", "****", "**", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", "-", "2014", "ĠZero", "C", ",", "ĠInc", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġcopy", "Ġof", "ĠIce", "Ġis", "Ġlicensed", "Ġto", "Ġyou", "Ġunder", "Ġthe", "Ġterms", "Ġdescribed", "Ġin", "Ġthe", "Ċ", "//", "ĠICE", "_", "L", "IC", "ENSE", "Ġfile", "Ġincluded", "Ġin", "Ġthis", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ********************************", "********************************", "****", "**", "Ċ", "Ċ", "#", "include", "Ġ<", "Ice", "/", "Ice", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Through", "put", "I", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠThrough", "put", "Server", "Ġ:", "Ġpublic", "ĠIce", "::", "Application", "Ċ", "{", "Ċ", "public", ":", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvirtual", "Ġint", "Ġrun", "(", "int", ",", "Ġchar", "*", "[]", ");", "Ċ", "};", "Ċ", "Ċ", "int", "Ċ", "main", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠThrough", "put", "Server", "Ġapp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġapp", ".", "main", "(", "arg", "c", ",", "Ġarg", "v", ",", "Ġ\"", "config", ".", "server", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "Ċ", "Through", "put", "Server", "::", "run", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "arg", "c", "Ġ>", "Ġ1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġapp", "Name", "()", "Ġ<<", "Ġ\"", ":", "Ġtoo", "Ġmany", "Ġarguments", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "FA", "IL", "URE", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠIce", "::", "Object", "Adapter", "Ptr", "Ġadapter", "Ġ=", "Ġcommun", "icator", "()", "->", "create", "Object", "Adapter", "(\"", "Through", "put", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDemo", "::", "Through", "put", "Ptr", "Ġservant", "Ġ=", "Ġnew", "ĠThrough", "put", "I", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadapter", "->", "add", "(", "serv", "ant", ",", "Ġcommun", "icator", "()", "->", "string", "To", "Id", "entity", "(\"", "through", "put", "\")", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadapter", "->", "activate", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcommun", "icator", "()", "->", "wait", "For", "Shut", "down", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["app", 6, "comesFrom", ["app"], [5]], ["argc", 8, "comesFrom", ["argc"], [3]], ["argc", 12, "comesFrom", ["argc"], [11]], ["adapter", 21, "comesFrom", ["adapter"], [17]], ["adapter", 26, "comesFrom", ["adapter"], [17]], ["servant", 23, "comesFrom", ["servant"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::25", "code": "#include \"StdInc.h\"\n#include <ShellAPI.h>\n\nunsigned int _gameFlags;\n\ntypedef struct  \n{\n\tconst wchar_t* argument;\n\tunsigned int flag;\n} flagDef_t;\n\nflagDef_t flags[] =\n{\n\t{ L\"offline\", GAME_FLAG_OFFLINE },\n\t{ L\"console\", GAME_FLAG_CONSOLE },\n\t{ 0, 0 }\n};\n\nvoid DetermineGameFlags()\n{\n\tint numArgs;\n\tLPCWSTR commandLine = GetCommandLineW();\n\tLPWSTR* argv = CommandLineToArgvW(commandLine, &numArgs);\n\n\tfor (int i = 0; i < numArgs; i++)\n\t{\n\t\tif (argv[i][0] != L'-') continue;\n\n\t\tfor (wchar_t* c = argv[i]; *c != L'\\0'; c++)\n\t\t{\n\t\t\tif (*c != L'-')\n\t\t\t{\n\t\t\t\tfor (flagDef_t* flag = flags; flag->argument; flag++)\n\t\t\t\t{\n\t\t\t\t\tif (!wcscmp(c, flag->argument))\n\t\t\t\t\t{\n\t\t\t\t\t\t_gameFlags |= flag->flag;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "St", "d", "Inc", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Shell", "API", ".", "h", ">", "Ċ", "Ċ", "unsigned", "Ġint", "Ġ_", "game", "Flags", ";", "Ċ", "Ċ", "ty", "ped", "ef", "Ġstruct", "Ġ", "Ġ", "Ċ", "{", "Ċ", "ĉ", "const", "Ġw", "char", "_", "t", "*", "Ġargument", ";", "Ċ", "ĉ", "unsigned", "Ġint", "Ġflag", ";", "Ċ", "}", "Ġflag", "Def", "_", "t", ";", "Ċ", "Ċ", "flag", "Def", "_", "t", "Ġflags", "[]", "Ġ=", "Ċ", "{", "Ċ", "ĉ", "{", "ĠL", "\"", "off", "line", "\",", "ĠGAME", "_", "FLAG", "_", "OF", "FL", "INE", "Ġ},", "Ċ", "ĉ", "{", "ĠL", "\"", "console", "\",", "ĠGAME", "_", "FLAG", "_", "CON", "SO", "LE", "Ġ},", "Ċ", "ĉ", "{", "Ġ0", ",", "Ġ0", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "void", "ĠDeter", "mine", "Game", "Flags", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġnum", "Args", ";", "Ċ", "ĉ", "L", "PC", "W", "STR", "Ġcommand", "Line", "Ġ=", "ĠGet", "Command", "Line", "W", "();", "Ċ", "ĉ", "LP", "W", "STR", "*", "Ġarg", "v", "Ġ=", "ĠCommand", "Line", "To", "Arg", "v", "W", "(", "command", "Line", ",", "Ġ&", "num", "Args", ");", "ĊĊ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnum", "Args", ";", "Ġi", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "arg", "v", "[", "i", "][", "0", "]", "Ġ!=", "ĠL", "'-", "')", "Ġcontinue", ";", "ĊĊ", "ĉ", "ĉ", "for", "Ġ(", "w", "char", "_", "t", "*", "Ġc", "Ġ=", "Ġarg", "v", "[", "i", "];", "Ġ*", "c", "Ġ!=", "ĠL", "'", "\\", "0", "';", "Ġc", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(*", "c", "Ġ!=", "ĠL", "'-", "')", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "flag", "Def", "_", "t", "*", "Ġflag", "Ġ=", "Ġflags", ";", "Ġflag", "->", "argument", ";", "Ġflag", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "Ġ(!", "w", "c", "sc", "mp", "(", "c", ",", "Ġflag", "->", "argument", "))", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "_", "game", "Flags", "Ġ|", "=", "Ġflag", "->", "flag", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}"], "dataflow_graph": [["commandLine", 12, "comesFrom", ["commandLine"], [8]], ["numArgs", 13, "comesFrom", ["numArgs"], [7]], ["numArgs", 16, "comesFrom", ["numArgs"], [7]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 17, "comesFrom", ["i"], [14]], ["i", 19, "comesFrom", ["i"], [14]], ["i", 22, "comesFrom", ["i"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::26", "code": "/*\n * blockio.cc\n *\n *\n */\n\n#define _LARGEFILE_SOURCE\n#define _FILE_OFFSET_BITS 64\n\n#include \"version.h\"\n#include \"blockio.h\"\n#include \"osutils.h\"\n#include <stdio.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <stdint.h>\n\n__ID(\"@(#) $Id: blockio.cc 2069 2009-02-12 22:53:09Z lyonel $\");\n\nssize_t readlogicalblocks(source & s,\nvoid * buffer,\nlong long pos, long long count)\n{\n  long long result = 0;\n\n  memset(buffer, 0, count*s.blocksize);\n\n                                                  /* attempt to read past the end of the section */\n  if((s.size>0) && ((pos+count)*s.blocksize>s.size)) return 0;\n\n  result = lseek(s.fd, s.offset + pos*s.blocksize, SEEK_SET);\n\n  if(result == -1) return 0;\n\n  result = read(s.fd, buffer, count*s.blocksize);\n\n  if(result!=count*s.blocksize)\n    return 0;\n  else\n    return count;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġblock", "io", ".", "cc", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "define", "Ġ_", "L", "AR", "GE", "FILE", "_", "SOURCE", "Ċ", "#", "define", "Ġ_", "FILE", "_", "OFF", "SET", "_", "BIT", "S", "Ġ64", "Ċ", "Ċ", "#", "include", "Ġ\"", "version", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "block", "io", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "os", "utils", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "types", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "stat", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "fc", "nt", "l", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "Ċ", "__", "ID", "(\"", "@", "(", "#", ")", "Ġ$", "Id", ":", "Ġblock", "io", ".", "cc", "Ġ20", "69", "Ġ2009", "-", "02", "-", "12", "Ġ22", ":", "53", ":", "09", "Z", "Ġl", "yon", "el", "Ġ$", "\");", "Ċ", "Ċ", "ss", "ize", "_", "t", "Ġread", "log", "ical", "blocks", "(", "source", "Ġ&", "Ġs", ",", "Ċ", "void", "Ġ*", "Ġbuffer", ",", "Ċ", "long", "Ġlong", "Ġpos", ",", "Ġlong", "Ġlong", "Ġcount", ")", "Ċ", "{", "Ċ", "Ġ", "Ġlong", "Ġlong", "Ġresult", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġmem", "set", "(", "buffer", ",", "Ġ0", ",", "Ġcount", "*", "s", ".", "blocks", "ize", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ/*", "Ġattempt", "Ġto", "Ġread", "Ġpast", "Ġthe", "Ġend", "Ġof", "Ġthe", "Ġsection", "Ġ*/", "Ċ", "Ġ", "Ġif", "((", "s", ".", "size", ">", "0", ")", "Ġ&&", "Ġ((", "pos", "+", "count", ")*", "s", ".", "blocks", "ize", ">", "s", ".", "size", "))", "Ġreturn", "Ġ0", ";", "ĊĊ", "Ġ", "Ġresult", "Ġ=", "Ġl", "seek", "(", "s", ".", "fd", ",", "Ġs", ".", "offset", "Ġ+", "Ġpos", "*", "s", ".", "blocks", "ize", ",", "ĠSEE", "K", "_", "SET", ");", "ĊĊ", "Ġ", "Ġif", "(", "result", "Ġ==", "Ġ-", "1", ")", "Ġreturn", "Ġ0", ";", "ĊĊ", "Ġ", "Ġresult", "Ġ=", "Ġread", "(", "s", ".", "fd", ",", "Ġbuffer", ",", "Ġcount", "*", "s", ".", "blocks", "ize", ");", "ĊĊ", "Ġ", "Ġif", "(", "result", "!", "=", "count", "*", "s", ".", "blocks", "ize", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcount", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["count", 11, "comesFrom", ["count"], [7]], ["count", 17, "comesFrom", ["count"], [7]], ["count", 38, "comesFrom", ["count"], [7]], ["count", 42, "comesFrom", ["count"], [7]], ["count", 45, "comesFrom", ["count"], [7]], ["pos", 16, "comesFrom", ["pos"], [6]], ["pos", 28, "comesFrom", ["pos"], [6]], ["result", 32, "comesFrom", ["result"], [22]], ["result", 41, "comesFrom", ["result"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::27", "code": "#include <iomanip>\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int n, p_i;\n  cin >> n;\n  double total = 0.0;\n  for (size_t i = 0; i < n; i++) {\n    cin >> p_i;\n    total += p_i;\n  }\n  cout << setprecision(12) << fixed << (total / n) << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "oman", "ip", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġi", "os", "_", "base", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "Ċ", "Ġ", "Ġc", "in", ".", "tie", "(", "null", "ptr", ");", "Ċ", "Ġ", "Ġint", "Ġn", ",", "Ġp", "_", "i", ";", "Ċ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġdouble", "Ġtotal", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġp", "_", "i", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtotal", "Ġ+=", "Ġp", "_", "i", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġset", "pre", "cision", "(", "12", ")", "Ġ<<", "Ġfixed", "Ġ<<", "Ġ(", "total", "Ġ/", "Ġn", ")", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 8, "comesFrom", ["n"], [5]], ["n", 12, "comesFrom", ["n"], [5]], ["n", 22, "comesFrom", ["n"], [5]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 13, "comesFrom", ["i"], [10]], ["p_i", 15, "comesFrom", ["p_i"], [6]], ["p_i", 17, "comesFrom", ["p_i"], [6]], ["total", 21, "comesFrom", ["total"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::28", "code": "// STLport regression testsuite component.\n// To compile as a separate example, please #define MAIN.\n#include <iterator>\n\n#include <vector>\n#include <algorithm>\n#include <iostream>\n#include <numeric>\n#include <iterator>\n\n#ifdef MAIN \n#define partsum1_test main\n#endif\n\n#if !defined (STLPORT) || defined(__STL_USE_NAMESPACES)\nusing namespace std;\n#endif\nint partsum1_test(int, char**)\n{\n  cout<<\"Results of partsum1_test:\"<<endl;\n  vector <int> v1(10);\n  iota(v1.begin(), v1.end(), 0);\n  vector <int> v2(v1.size());\n  partial_sum(v1.begin(), v1.end(), v2.begin());\n  ostream_iterator <int> iter(cout, \" \");\n  copy(v1.begin(), v1.end(), iter);\n  cout << endl;\n  copy(v2.begin(), v2.end(), iter);\n  cout << endl;\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠSTL", "port", "Ġregression", "Ġtest", "su", "ite", "Ġcomponent", ".", "Ċ", "//", "ĠTo", "Ġcompile", "Ġas", "Ġa", "Ġseparate", "Ġexample", ",", "Ġplease", "Ġ#", "define", "ĠMA", "IN", ".", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "n", "umeric", ">", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "Ċ", "#", "if", "def", "ĠMA", "IN", "Ġ", "Ċ", "#", "define", "Ġparts", "um", "1", "_", "test", "Ġmain", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "if", "Ġ!", "defined", "Ġ(", "ST", "L", "PORT", ")", "Ġ||", "Ġdefined", "(", "__", "ST", "L", "_", "USE", "_", "N", "AMES", "PAC", "ES", ")", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "endif", "Ċ", "int", "Ġparts", "um", "1", "_", "test", "(", "int", ",", "Ġchar", "**", ")", "Ċ", "{", "Ċ", "Ġ", "Ġcout", "<<", "\"", "Results", "Ġof", "Ġparts", "um", "1", "_", "test", ":\"", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġvector", "Ġ<", "int", ">", "Ġv", "1", "(", "10", ");", "Ċ", "Ġ", "Ġi", "ota", "(", "v", "1", ".", "begin", "(),", "Ġv", "1", ".", "end", "(),", "Ġ0", ");", "Ċ", "Ġ", "Ġvector", "Ġ<", "int", ">", "Ġv", "2", "(", "v", "1", ".", "size", "());", "Ċ", "Ġ", "Ġpartial", "_", "sum", "(", "v", "1", ".", "begin", "(),", "Ġv", "1", ".", "end", "(),", "Ġv", "2", ".", "begin", "());", "Ċ", "Ġ", "Ġo", "stream", "_", "iterator", "Ġ<", "int", ">", "Ġiter", "(", "c", "out", ",", "Ġ\"", "Ġ\"", ");", "Ċ", "Ġ", "Ġcopy", "(", "v", "1", ".", "begin", "(),", "Ġv", "1", ".", "end", "(),", "Ġiter", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġcopy", "(", "v", "2", ".", "begin", "(),", "Ġv", "2", ".", "end", "(),", "Ġiter", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["v1", 10, "comesFrom", ["v1"], [8]], ["v1", 12, "comesFrom", ["v1"], [8]], ["v1", 15, "comesFrom", ["v1"], [8]], ["v1", 18, "comesFrom", ["v1"], [8]], ["v1", 20, "comesFrom", ["v1"], [8]], ["v1", 27, "comesFrom", ["v1"], [8]], ["v1", 29, "comesFrom", ["v1"], [8]], ["v2", 22, "comesFrom", ["v2"], [14]], ["v2", 35, "comesFrom", ["v2"], [14]], ["v2", 37, "comesFrom", ["v2"], [14]], ["iter", 31, "comesFrom", ["iter"], [24]], ["iter", 39, "comesFrom", ["iter"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::29", "code": "#include \"Converter.h\"\n#include <TFormula.h>\n#include <iomanip>\n#include <sstream>\nstd::string Converter::doubleToString(double x,int precision,bool scientifiStyle)\n{\n  std::stringstream xs;\n  if(scientifiStyle)\n    xs<<std::scientific;\n  else\n    xs<<std::fixed;\n  xs<<std::setprecision(precision)<<x;\n  return xs.str();\n};\nstd::string Converter::intToString(int x)\n{\n  return doubleToString(x,0);\n};\ndouble Converter::stringToDouble(std::string formula)\n{\n  TFormula myf(\"myf\",formula.c_str());\n  return myf.Eval(0);\n}\nint Converter::stringToInt(std::string formula)\n{\n  return (int)(stringToDouble(formula));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Con", "ver", "ter", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "T", "Form", "ula", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "oman", "ip", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "std", "::", "string", "ĠConver", "ter", "::", "double", "To", "String", "(", "double", "Ġx", ",", "int", "Ġprecision", ",", "bool", "Ġscient", "ifi", "Style", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "string", "stream", "Ġx", "s", ";", "Ċ", "Ġ", "Ġif", "(", "scient", "ifi", "Style", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "s", "<<", "std", "::", "scientific", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "s", "<<", "std", "::", "fixed", ";", "Ċ", "Ġ", "Ġx", "s", "<<", "std", "::", "set", "pre", "cision", "(", "pre", "cision", ")", "<<", "x", ";", "Ċ", "Ġ", "Ġreturn", "Ġx", "s", ".", "str", "();", "Ċ", "};", "Ċ", "std", "::", "string", "ĠConver", "ter", "::", "int", "To", "String", "(", "int", "Ġx", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġdouble", "To", "String", "(", "x", ",", "0", ");", "Ċ", "};", "Ċ", "double", "ĠConver", "ter", "::", "string", "To", "Double", "(", "std", "::", "string", "Ġformula", ")", "Ċ", "{", "Ċ", "Ġ", "ĠT", "Form", "ula", "Ġmy", "f", "(\"", "my", "f", "\",", "form", "ula", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġreturn", "Ġmy", "f", ".", "E", "val", "(", "0", ");", "Ċ", "}", "Ċ", "int", "ĠConver", "ter", "::", "string", "To", "Int", "(", "std", "::", "string", "Ġformula", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ(", "int", ")(", "string", "To", "Double", "(", "form", "ula", "));", "Ċ", "}", "Ċ"], "dataflow_graph": [["scientifiStyle", 5, "comesFrom", ["scientifiStyle"], [3]], ["xs", 6, "comesFrom", ["xs"], [4]], ["xs", 8, "comesFrom", ["xs"], [4]], ["xs", 10, "comesFrom", ["xs"], [4]], ["xs", 14, "comesFrom", ["xs"], [4]], ["precision", 12, "comesFrom", ["precision"], [2]], ["x", 13, "comesFrom", ["x"], [1]], ["x", 19, "comesFrom", ["x"], [17]], ["formula", 23, "comesFrom", ["formula"], [21]], ["formula", 30, "comesFrom", ["formula"], [28]], ["myf", 25, "comesFrom", ["myf"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::30", "code": "#include \"shader.h\"\n\n#include <iostream>\n\nShader::Shader(GLuint shader_id)\n    : shader_id(shader_id) {}\n\nvoid Shader::use()\n{\n    glUseProgram(shader_id);\n}\n\nvoid Shader::send_cam_pos(glm::vec3 cam_pos)\n{\n\tthis->cam_pos = cam_pos;\n}\n\nvoid Shader::set_VP(glm::mat4 V, glm::mat4 P)\n{\n    this->V = V;\n    this->P = P;\n}\n\nvoid Shader::send_mesh_model(glm::mat4 mesh_model)\n{\n\tthis->mesh_model = mesh_model;\n}\n\nvoid Shader::set_material(Material m) {}\n\nvoid Shader::draw(Geometry *g, glm::mat4 to_world) {}", "code_tokens": ["Ġ#", "include", "Ġ\"", "sh", "ader", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "Sh", "ader", "::", "Sh", "ader", "(", "GL", "uint", "Ġshader", "_", "id", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġshader", "_", "id", "(", "sh", "ader", "_", "id", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠSh", "ader", "::", "use", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgl", "Use", "Program", "(", "sh", "ader", "_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSh", "ader", "::", "send", "_", "cam", "_", "pos", "(", "gl", "m", "::", "vec", "3", "Ġcam", "_", "pos", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "cam", "_", "pos", "Ġ=", "Ġcam", "_", "pos", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSh", "ader", "::", "set", "_", "VP", "(", "gl", "m", "::", "mat", "4", "ĠV", ",", "Ġgl", "m", "::", "mat", "4", "ĠP", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "V", "Ġ=", "ĠV", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "P", "Ġ=", "ĠP", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSh", "ader", "::", "send", "_", "m", "esh", "_", "model", "(", "gl", "m", "::", "mat", "4", "Ġmesh", "_", "model", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "m", "esh", "_", "model", "Ġ=", "Ġmesh", "_", "model", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSh", "ader", "::", "set", "_", "material", "(", "Material", "Ġm", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠSh", "ader", "::", "draw", "(", "Ge", "ometry", "Ġ*", "g", ",", "Ġgl", "m", "::", "mat", "4", "Ġto", "_", "world", ")", "Ġ{}"], "dataflow_graph": [["shader_id", 2, "comesFrom", ["shader_id"], [1]], ["shader_id", 3, "comesFrom", ["shader_id"], [1]], ["shader_id", 6, "comesFrom", ["shader_id"], [1]], ["cam_pos", 9, "comesFrom", ["cam_pos"], [8]], ["cam_pos", 10, "comesFrom", ["cam_pos"], [8]], ["V", 14, "comesFrom", ["V"], [12]], ["V", 15, "comesFrom", ["V"], [12]], ["P", 16, "comesFrom", ["P"], [13]], ["P", 17, "comesFrom", ["P"], [13]], ["mesh_model", 20, "comesFrom", ["mesh_model"], [19]], ["mesh_model", 21, "comesFrom", ["mesh_model"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::31", "code": "/** File errors.cc author Vladislav Tcendrovskii\n *  Copyright (c) 2013\n *  This source subjected to the Gnu General Public License v3 or later (see LICENSE)\n *  All other rights reserved\n *  THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY \n *  OF ANY  KIND, EITHER EXPRESSED OR IMPLIED, \n *  INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES \n *  OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n * */\n\n\n\n#include \"errors.h\"\n\nstd::string error_str(int errnum)\n{\n  std::string ans;\n  switch(errnum)\n  {\n    case ENO:\n      ans = \"No error\";\n      break;\n    case EZERO:\n      ans = \"Division by zero\";\n      break;\n    case EDIM:\n      ans = \"Dimension mismatch\";\n      break;\n    case EMEM:\n      ans = \"Memory allocation fail\";\n      break;\n    case ETYPE:\n      ans = \"Wrong object type/form\";\n      break;\n    case EIND:\n      ans = \"Index out of range\";\n      break;\n    default:\n      ans = \"Error number \" + errnum;\n      break;\n  }\n  \n  return ans;\n}", "code_tokens": ["Ġ/**", "ĠFile", "Ġerrors", ".", "cc", "Ġauthor", "ĠVlad", "isl", "av", "ĠT", "cend", "ro", "vs", "ki", "i", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2013", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġsource", "Ġsubjected", "Ġto", "Ġthe", "ĠGn", "u", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġv", "3", "Ġor", "Ġlater", "Ġ(", "see", "ĠLIC", "ENSE", ")", "Ċ", "Ġ*", "Ġ", "ĠAll", "Ġother", "Ġrights", "Ġreserved", "Ċ", "Ġ*", "Ġ", "ĠTHIS", "ĠCODE", "ĠAND", "ĠINFORMATION", "ĠARE", "ĠPROV", "ID", "ED", "Ġ\"", "AS", "ĠIS", "\"", "ĠWITHOUT", "ĠWARRANT", "Y", "Ġ", "Ċ", "Ġ*", "Ġ", "ĠOF", "ĠANY", "Ġ", "ĠK", "IND", ",", "ĠE", "ITH", "ER", "ĠEX", "PRESS", "ED", "ĠOR", "ĠIM", "PLIED", ",", "Ġ", "Ċ", "Ġ*", "Ġ", "ĠINCLUD", "ING", "ĠBUT", "ĠNOT", "ĠLIMITED", "ĠTO", "ĠTHE", "ĠIM", "PLIED", "ĠWARRANT", "IES", "Ġ", "Ċ", "Ġ*", "Ġ", "ĠOF", "ĠMER", "CH", "AN", "TA", "BILITY", "ĠAND", "/", "OR", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ċ", "Ġ*", "Ġ*/", "ĊĊ", "Ċ", "Ċ", "#", "include", "Ġ\"", "errors", ".", "h", "\"", "Ċ", "Ċ", "std", "::", "string", "Ġerror", "_", "str", "(", "int", "Ġerr", "num", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġans", ";", "Ċ", "Ġ", "Ġswitch", "(", "err", "num", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠEN", "O", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġ\"", "No", "Ġerror", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠE", "Z", "ERO", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġ\"", "Div", "ision", "Ġby", "Ġzero", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠED", "IM", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġ\"", "Dim", "ension", "Ġmismatch", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠEM", "EM", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġ\"", "Memory", "Ġallocation", "Ġfail", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠE", "TYPE", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġ\"", "Wr", "ong", "Ġobject", "Ġtype", "/", "form", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠE", "IND", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġ\"", "Index", "Ġout", "Ġof", "Ġrange", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdefault", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġ\"", "Error", "Ġnumber", "Ġ\"", "Ġ+", "Ġerr", "num", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġans", ";", "Ċ", "}"], "dataflow_graph": [["errnum", 3, "comesFrom", ["errnum"], [1]], ["errnum", 17, "comesFrom", ["errnum"], [1]], ["ans", 18, "comesFrom", ["ans"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::32", "code": "#include \"disablenonworkingunits.h\"\n#include \"wololo/datPatch.h\"\n\nnamespace wololo {\n\nvoid disableNonWorkingUnitsPatch(genie::DatFile *aocDat, std::map<int, std::string> *langReplacement) {\n\t/*\n\t * Disabling units that are not supposed to show in the scenario editor\n\t */\n\n\tfor (size_t civIndex = 0; civIndex < aocDat->Civs.size(); civIndex++) {\n\t\taocDat->Civs[civIndex].Units[1119].HideInEditor = 1;\n\t\taocDat->Civs[civIndex].Units[1145].HideInEditor = 1;\n\t\taocDat->Civs[civIndex].Units[1147].HideInEditor = 1;\n\t\taocDat->Civs[civIndex].Units[1221].HideInEditor = 1;\t\t\n\t\taocDat->Civs[civIndex].Units[1401].HideInEditor = 1;\n\t\tfor (size_t unitIndex = 1224; unitIndex <= 1390; unitIndex++) {\n\t\t\taocDat->Civs[civIndex].Units[unitIndex].HideInEditor = 1;\n\t\t}\n\t}\n\n}\n\nDatPatch disableNonWorkingUnits = {\n\t&disableNonWorkingUnitsPatch,\n\t\"Hide units in the scenario editor\"\n};\n\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "dis", "ab", "len", "on", "working", "units", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "w", "ol", "olo", "/", "dat", "Patch", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġw", "ol", "olo", "Ġ{", "Ċ", "Ċ", "void", "Ġdisable", "Non", "Working", "Un", "its", "Patch", "(", "gen", "ie", "::", "Dat", "File", "Ġ*", "a", "oc", "Dat", ",", "Ġstd", "::", "map", "<", "int", ",", "Ġstd", "::", "string", ">", "Ġ*", "lang", "Repl", "acement", ")", "Ġ{", "Ċ", "ĉ", "/*", "Ċ", "ĉ", "Ġ*", "ĠDis", "abling", "Ġunits", "Ġthat", "Ġare", "Ġnot", "Ġsupposed", "Ġto", "Ġshow", "Ġin", "Ġthe", "Ġscenario", "Ġeditor", "Ċ", "ĉ", "Ġ*/", "ĊĊ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġciv", "Index", "Ġ=", "Ġ0", ";", "Ġciv", "Index", "Ġ<", "Ġa", "oc", "Dat", "->", "C", "iv", "s", ".", "size", "();", "Ġciv", "Index", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Un", "its", "[", "11", "19", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Un", "its", "[", "11", "45", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Un", "its", "[", "11", "47", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Un", "its", "[", "12", "21", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Un", "its", "[", "14", "01", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġunit", "Index", "Ġ=", "Ġ12", "24", ";", "Ġunit", "Index", "Ġ<=", "Ġ13", "90", ";", "Ġunit", "Index", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "a", "oc", "Dat", "->", "C", "iv", "s", "[", "c", "iv", "Index", "].", "Un", "its", "[", "unit", "Index", "].", "Hide", "In", "Editor", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Dat", "Patch", "Ġdisable", "Non", "Working", "Un", "its", "Ġ=", "Ġ{", "Ċ", "ĉ", "&", "disable", "Non", "Working", "Un", "its", "Patch", ",", "Ċ", "ĉ", "\"", "Hide", "Ġunits", "Ġin", "Ġthe", "Ġscenario", "Ġeditor", "\"", "Ċ", "};", "Ċ", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["civIndex", 4, "comesFrom", ["civIndex"], [3]], ["civIndex", 8, "comesFrom", ["civIndex"], [3]], ["civIndex", 11, "comesFrom", ["civIndex"], [3]], ["civIndex", 16, "comesFrom", ["civIndex"], [3]], ["civIndex", 21, "comesFrom", ["civIndex"], [3]], ["civIndex", 26, "comesFrom", ["civIndex"], [3]], ["civIndex", 31, "comesFrom", ["civIndex"], [3]], ["civIndex", 39, "comesFrom", ["civIndex"], [3]], ["unitIndex", 35, "comesFrom", ["unitIndex"], [34]], ["unitIndex", 36, "comesFrom", ["unitIndex"], [34]], ["unitIndex", 41, "comesFrom", ["unitIndex"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::33", "code": "/*\n This file is part of SpatGRIS.\n\n Developers: Samuel Béland, Olivier Bélanger, Nicolas Masson\n\n SpatGRIS is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n SpatGRIS is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with SpatGRIS.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include \"sg_AbstractSliceComponent.hpp\"\n\n//==============================================================================\nAbstractSliceComponent::AbstractSliceComponent(GrisLookAndFeel & lookAndFeel, SmallGrisLookAndFeel & smallLookAndFeel)\n    : mLayout(LayoutComponent::Orientation::vertical, false, false, lookAndFeel)\n    , mVuMeter(smallLookAndFeel)\n    , mMuteSoloComponent(*this, lookAndFeel, smallLookAndFeel)\n{\n    JUCE_ASSERT_MESSAGE_THREAD;\n\n    addAndMakeVisible(mLayout);\n}\n\n//==============================================================================\nvoid AbstractSliceComponent::setState(PortState const state, bool const soloMode)\n{\n    JUCE_ASSERT_MESSAGE_THREAD;\n\n    mMuteSoloComponent.setPortState(state);\n    mVuMeter.setMuted(soloMode ? state != PortState::solo : state == PortState::muted);\n\n    repaint();\n}", "code_tokens": ["Ġ/*", "Ċ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠSp", "at", "GR", "IS", ".", "ĊĊ", "ĠDevelopers", ":", "ĠSamuel", "ĠB", "Ã©", "land", ",", "ĠOlivier", "ĠB", "Ã©", "l", "anger", ",", "ĠNicolas", "ĠMass", "on", "ĊĊ", "ĠSp", "at", "GR", "IS", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "ĠSp", "at", "GR", "IS", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġalong", "Ġwith", "ĠSp", "at", "GR", "IS", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "sg", "_", "Abstract", "Sl", "ice", "Component", ".", "h", "pp", "\"", "Ċ", "Ċ", "//", "================================================================", "============", "==", "Ċ", "Abstract", "Sl", "ice", "Component", "::", "Abstract", "Sl", "ice", "Component", "(", "G", "ris", "Look", "And", "Feel", "Ġ&", "Ġlook", "And", "Feel", ",", "ĠSmall", "G", "ris", "Look", "And", "Feel", "Ġ&", "Ġsmall", "Look", "And", "Feel", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġm", "Layout", "(", "Layout", "Component", "::", "O", "rient", "ation", "::", "vert", "ical", ",", "Ġfalse", ",", "Ġfalse", ",", "Ġlook", "And", "Feel", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ,", "Ġm", "V", "u", "M", "eter", "(", "small", "Look", "And", "Feel", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ,", "ĠmM", "ute", "S", "olo", "Component", "(*", "this", ",", "Ġlook", "And", "Feel", ",", "Ġsmall", "Look", "And", "Feel", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠJ", "U", "CE", "_", "ASS", "ERT", "_", "M", "ES", "SA", "GE", "_", "TH", "READ", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġadd", "And", "Make", "V", "isible", "(", "m", "Layout", ");", "Ċ", "}", "Ċ", "Ċ", "//", "================================================================", "============", "==", "Ċ", "void", "ĠAbstract", "Sl", "ice", "Component", "::", "set", "State", "(", "Port", "State", "Ġconst", "Ġstate", ",", "Ġbool", "Ġconst", "Ġsolo", "Mode", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠJ", "U", "CE", "_", "ASS", "ERT", "_", "M", "ES", "SA", "GE", "_", "TH", "READ", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠmM", "ute", "S", "olo", "Component", ".", "set", "Port", "State", "(", "state", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "V", "u", "M", "eter", ".", "set", "M", "uted", "(", "s", "olo", "Mode", "Ġ?", "Ġstate", "Ġ!=", "ĠPort", "State", "::", "s", "olo", "Ġ:", "Ġstate", "Ġ==", "ĠPort", "State", "::", "m", "uted", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġrep", "aint", "();", "Ċ", "}"], "dataflow_graph": [["state", 20, "comesFrom", ["state"], [15]], ["state", 24, "comesFrom", ["state"], [15]], ["state", 26, "comesFrom", ["state"], [15]], ["soloMode", 23, "comesFrom", ["soloMode"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::34", "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nLL n,m,A,B,C;\n\nLL solve1(LL x,LL y){\n\tLL ans=0;\n\tans+=y*max(max(A,B),C);\n\tif(x%2==1){\n\t\tans+=max((x-1)*(A+C)/2,(x-1)*B);\n\t}else{\n\t\tans+=max((x-2)*(A+C)/2,(x-2)*B);\n\t\tans+=max(B,min(A,C));\n\t}\n\treturn ans;\n}\nLL solve2(LL x,LL y){\n\tLL ans=0;\n\tans+=x*min(min(A,B),C);\n\tif(y%2==1){\n\t\tans+=min((y-1)*(A+C)/2,(y-1)*B);\n\t}else{\n\t\tans+=min((y-2)*(A+C)/2,(y-2)*B);\n\t\tans+=min(B,max(A,C));\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint T;cin>>T;\n\tfor(int t=1;t<=T;t++){\n\t\tcin>>n>>m;\n\t\tcin>>A>>B>>C;\n\t\tprintf(\"Case #%d: %lld %lld\\n\",t,solve1(m+1,n-m-1),solve2(m-1,n-m+1));\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "ĠLL", ";", "Ċ", "LL", "Ġn", ",", "m", ",", "A", ",", "B", ",", "C", ";", "Ċ", "Ċ", "LL", "Ġsolve", "1", "(", "LL", "Ġx", ",", "LL", "Ġy", "){", "Ċ", "ĉ", "LL", "Ġans", "=", "0", ";", "Ċ", "ĉ", "ans", "+=", "y", "*", "max", "(", "max", "(", "A", ",", "B", "),", "C", ");", "Ċ", "ĉ", "if", "(", "x", "%", "2", "==", "1", "){", "Ċ", "ĉ", "ĉ", "ans", "+=", "max", "((", "x", "-", "1", ")*", "(", "A", "+", "C", ")/", "2", ",", "(", "x", "-", "1", ")*", "B", ");", "Ċ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "ans", "+=", "max", "((", "x", "-", "2", ")*", "(", "A", "+", "C", ")/", "2", ",", "(", "x", "-", "2", ")*", "B", ");", "Ċ", "ĉ", "ĉ", "ans", "+=", "max", "(", "B", ",", "min", "(", "A", ",", "C", "));", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġans", ";", "Ċ", "}", "Ċ", "LL", "Ġsolve", "2", "(", "LL", "Ġx", ",", "LL", "Ġy", "){", "Ċ", "ĉ", "LL", "Ġans", "=", "0", ";", "Ċ", "ĉ", "ans", "+=", "x", "*", "min", "(", "min", "(", "A", ",", "B", "),", "C", ");", "Ċ", "ĉ", "if", "(", "y", "%", "2", "==", "1", "){", "Ċ", "ĉ", "ĉ", "ans", "+=", "min", "((", "y", "-", "1", ")*", "(", "A", "+", "C", ")/", "2", ",", "(", "y", "-", "1", ")*", "B", ");", "Ċ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "ans", "+=", "min", "((", "y", "-", "2", ")*", "(", "A", "+", "C", ")/", "2", ",", "(", "y", "-", "2", ")*", "B", ");", "Ċ", "ĉ", "ĉ", "ans", "+=", "min", "(", "B", ",", "max", "(", "A", ",", "C", "));", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġans", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "int", "ĠT", ";", "cin", ">>", "T", ";", "Ċ", "ĉ", "for", "(", "int", "Ġt", "=", "1", ";", "t", "<", "=", "T", ";", "t", "++", "){", "Ċ", "ĉ", "ĉ", "cin", ">>", "n", ">>", "m", ";", "Ċ", "ĉ", "ĉ", "cin", ">>", "A", ">>", "B", ">>", "C", ";", "Ċ", "ĉ", "ĉ", "printf", "(\"", "Case", "Ġ#", "%", "d", ":", "Ġ%", "ll", "d", "Ġ%", "ll", "d", "\\", "n", "\",", "t", ",", "s", "olve", "1", "(", "m", "+", "1", ",", "n", "-", "m", "-", "1", "),", "s", "olve", "2", "(", "m", "-", "1", ",", "n", "-", "m", "+", "1", "));", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["y", 11, "comesFrom", ["y"], [8]], ["y", 50, "comesFrom", ["y"], [41]], ["y", 53, "comesFrom", ["y"], [41]], ["y", 56, "comesFrom", ["y"], [41]], ["y", 60, "comesFrom", ["y"], [41]], ["y", 63, "comesFrom", ["y"], [41]], ["A", 14, "comesFrom", ["A"], [3]], ["A", 21, "comesFrom", ["A"], [3]], ["A", 28, "comesFrom", ["A"], [3]], ["A", 36, "comesFrom", ["A"], [3]], ["A", 47, "comesFrom", ["A"], [3]], ["A", 54, "comesFrom", ["A"], [3]], ["A", 61, "comesFrom", ["A"], [3]], ["A", 69, "comesFrom", ["A"], [3]], ["A", 84, "comesFrom", ["A"], [3]], ["B", 15, "comesFrom", ["B"], [4]], ["B", 24, "comesFrom", ["B"], [4]], ["B", 31, "comesFrom", ["B"], [4]], ["B", 34, "comesFrom", ["B"], [4]], ["B", 48, "comesFrom", ["B"], [4]], ["B", 57, "comesFrom", ["B"], [4]], ["B", 64, "comesFrom", ["B"], [4]], ["B", 67, "comesFrom", ["B"], [4]], ["B", 85, "comesFrom", ["B"], [4]], ["C", 16, "comesFrom", ["C"], [5]], ["C", 22, "comesFrom", ["C"], [5]], ["C", 29, "comesFrom", ["C"], [5]], ["C", 37, "comesFrom", ["C"], [5]], ["C", 49, "comesFrom", ["C"], [5]], ["C", 55, "comesFrom", ["C"], [5]], ["C", 62, "comesFrom", ["C"], [5]], ["C", 70, "comesFrom", ["C"], [5]], ["C", 86, "comesFrom", ["C"], [5]], ["x", 17, "comesFrom", ["x"], [7]], ["x", 20, "comesFrom", ["x"], [7]], ["x", 23, "comesFrom", ["x"], [7]], ["x", 27, "comesFrom", ["x"], [7]], ["x", 30, "comesFrom", ["x"], [7]], ["x", 44, "comesFrom", ["x"], [40]], ["ans", 38, "comesFrom", ["ans"], [32]], ["ans", 71, "comesFrom", ["ans"], [65]], ["T", 75, "comesFrom", ["T"], [73]], ["T", 78, "comesFrom", ["T"], [73]], ["t", 77, "comesFrom", ["t"], [76]], ["t", 79, "comesFrom", ["t"], [76]], ["t", 88, "comesFrom", ["t"], [76]], ["n", 81, "comesFrom", ["n"], [1]], ["n", 91, "comesFrom", ["n"], [1]], ["n", 95, "comesFrom", ["n"], [1]], ["m", 82, "comesFrom", ["m"], [2]], ["m", 90, "comesFrom", ["m"], [2]], ["m", 92, "comesFrom", ["m"], [2]], ["m", 94, "comesFrom", ["m"], [2]], ["m", 96, "comesFrom", ["m"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::35", "code": "/*\n * Qt REST Client\n * Copyright (C) 2014 Emílio Simões\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n#include <QDebug>\n\n#include \"autotest.h\"\n\n#if 1\n// This is all you need to run all the tests\nTEST_MAIN\n#else\n// Or supply your own main function\nint main(int argc, char* argv[]) {\n    int failures = AutoTest::run(argc, argv);\n    if (failures == 0) {\n        qDebug() << \"ALL TESTS PASSED\";\n    } else {\n        qDebug() << failures << \" TESTS FAILED!\";\n    }\n    return failures;\n}\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠQt", "ĠREST", "ĠClient", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "ĠEm", "ÃŃ", "lio", "ĠSim", "Ã", "µ", "es", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "aut", "ot", "est", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "Ġ1", "Ċ", "//", "ĠThis", "Ġis", "Ġall", "Ġyou", "Ġneed", "Ġto", "Ġrun", "Ġall", "Ġthe", "Ġtests", "Ċ", "T", "EST", "_", "MA", "IN", "Ċ", "#", "else", "Ċ", "//", "ĠOr", "Ġsupply", "Ġyour", "Ġown", "Ġmain", "Ġfunction", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġfailures", "Ġ=", "ĠAuto", "Test", "::", "run", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "fail", "ures", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġ\"", "ALL", "ĠT", "ES", "TS", "ĠPASS", "ED", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġfailures", "Ġ<<", "Ġ\"", "ĠT", "ES", "TS", "ĠFA", "IL", "ED", "!\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfailures", ";", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["argc", 6, "comesFrom", ["argc"], [2]], ["failures", 8, "comesFrom", ["failures"], [4]], ["failures", 11, "comesFrom", ["failures"], [4]], ["failures", 12, "comesFrom", ["failures"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::36", "code": "#include <iostream>\n#include <string>\n\nclass Shape {\n\tpublic :\n\t\tvirtual void draw (void) = 0;\n\t\tstatic Shape *Create (std::string type);\n};\n\nclass circle : public Shape {\n\tpublic :\n\t\tvoid draw(void){\n\t\t\tstd::cout << \"circle\" << std::endl;\n\t\t}\n};\n\nclass square : public Shape {\n\tpublic :\n\t\tvoid draw(void){\n\t\t\tstd::cout << \"square\" << std::endl;\n\t\t}\n};\n\nShape * Shape::Create (std::string type){\n\tif(type == \"circle\"){\n\t\tstd::cout << \"creating circle\" << std::endl;\n\t\treturn new circle();\n\t}\n\n\tif(type == \"square\") {\n\t\tstd::cout << \"creating circle\" << std::endl;\n\t\treturn new square();\n\t}\n\n\treturn NULL;\n};\n\n\nint main (){\n\n\tShape *cir = Shape::Create(\"circle\");\n\tif ( cir != NULL ) cir->draw();\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "class", "ĠShape", "Ġ{", "Ċ", "ĉ", "public", "Ġ:", "Ċ", "ĉ", "ĉ", "virtual", "Ġvoid", "Ġdraw", "Ġ(", "void", ")", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "static", "ĠShape", "Ġ*", "Create", "Ġ(", "std", "::", "string", "Ġtype", ");", "Ċ", "};", "Ċ", "Ċ", "class", "Ġcircle", "Ġ:", "Ġpublic", "ĠShape", "Ġ{", "Ċ", "ĉ", "public", "Ġ:", "Ċ", "ĉ", "ĉ", "void", "Ġdraw", "(", "void", "){", "Ċ", "ĉ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "circle", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "class", "Ġsquare", "Ġ:", "Ġpublic", "ĠShape", "Ġ{", "Ċ", "ĉ", "public", "Ġ:", "Ċ", "ĉ", "ĉ", "void", "Ġdraw", "(", "void", "){", "Ċ", "ĉ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "square", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "Shape", "Ġ*", "ĠShape", "::", "Create", "Ġ(", "std", "::", "string", "Ġtype", "){", "Ċ", "ĉ", "if", "(", "type", "Ġ==", "Ġ\"", "circle", "\")", "{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "creat", "ing", "Ġcircle", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "Ġcircle", "();", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "if", "(", "type", "Ġ==", "Ġ\"", "square", "\")", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "creat", "ing", "Ġcircle", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "return", "Ġnew", "Ġsquare", "();", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "ĠNULL", ";", "Ċ", "};", "ĊĊ", "Ċ", "int", "Ġmain", "Ġ()", "{", "ĊĊ", "ĉ", "Shape", "Ġ*", "c", "ir", "Ġ=", "ĠShape", "::", "Create", "(\"", "circle", "\");", "Ċ", "ĉ", "if", "Ġ(", "Ġcir", "Ġ!=", "ĠNULL", "Ġ)", "Ġcir", "->", "draw", "();", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["type", 11, "comesFrom", ["type"], [10]], ["type", 14, "comesFrom", ["type"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::37", "code": "#include <iostream>\nusing namespace std;\nint main() {\n  int n, x, y;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  x = a[1] - a[0];\n  y = a[2] - a[0];\n  for (int i = 2; i < n; ++i) {\n    x = max(a[i] - a[i - 1], x);\n    y = min(a[i] - a[i - 2], y);\n  }\n  cout << max(x, y);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġn", ",", "Ġx", ",", "Ġy", ";", "Ċ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġint", "Ġa", "[", "n", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġa", "[", "i", "];", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġx", "Ġ=", "Ġa", "[", "1", "]", "Ġ-", "Ġa", "[", "0", "];", "Ċ", "Ġ", "Ġy", "Ġ=", "Ġa", "[", "2", "]", "Ġ-", "Ġa", "[", "0", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġmax", "(", "a", "[", "i", "]", "Ġ-", "Ġa", "[", "i", "Ġ-", "Ġ1", "],", "Ġx", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġy", "Ġ=", "Ġmin", "(", "a", "[", "i", "]", "Ġ-", "Ġa", "[", "i", "Ġ-", "Ġ2", "],", "Ġy", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġmax", "(", "x", ",", "Ġy", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [2]], ["n", 8, "comesFrom", ["n"], [2]], ["n", 11, "comesFrom", ["n"], [2]], ["n", 24, "comesFrom", ["n"], [2]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]], ["i", 23, "comesFrom", ["i"], [22]], ["i", 25, "comesFrom", ["i"], [22]], ["i", 29, "comesFrom", ["i"], [22]], ["i", 31, "comesFrom", ["i"], [22]], ["i", 36, "comesFrom", ["i"], [22]], ["i", 38, "comesFrom", ["i"], [22]], ["x", 32, "comesFrom", ["x"], [26]], ["x", 42, "comesFrom", ["x"], [26]], ["y", 39, "comesFrom", ["y"], [33]], ["y", 43, "comesFrom", ["y"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::38", "code": "#include <QtGui/QApplication>\r\n#include \"xmlparser.h\"\r\n#include \"myfiledialog.h\"\r\n#include <iostream>\r\n#include <QMessageBox>\r\nusing namespace std;\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n    QApplication a(argc, argv);/*\r\n    MainWindow w;\r\n    w.show();*/\r\n\r\n      MyFileDialog my;//Create dialog\r\n\r\n      QString name=my.openFile();//Open dialog, and chose file. We get file path and file name as result\r\n\r\n      cout<<name.toUtf8().constData()<<\"Podaci uspjeno uèitani!\";\r\n\r\n\r\n\r\n\r\n    return 0;\r\n    \r\n\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Q", "t", "Gu", "i", "/", "Q", "Application", ">", "č", "Ċ", "#", "include", "Ġ\"", "xml", "parser", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "my", "f", "iled", "ial", "og", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "Ġ<", "Q", "Message", "Box", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Application", "Ġa", "(", "arg", "c", ",", "Ġarg", "v", ");", "/*", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMain", "Window", "Ġw", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġw", ".", "show", "();", "*/", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠMy", "File", "Dialog", "Ġmy", ";", "//", "Create", "Ġdialog", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "String", "Ġname", "=", "my", ".", "open", "File", "();", "//", "Open", "Ġdialog", ",", "Ġand", "Ġchose", "Ġfile", ".", "ĠWe", "Ġget", "Ġfile", "Ġpath", "Ġand", "Ġfile", "Ġname", "Ġas", "Ġresult", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "name", ".", "to", "Ut", "f", "8", "().", "const", "Data", "()", "<<", "\"", "Pod", "aci", "Ġus", "p", "je", "Â", "ļ", "no", "Ġu", "Ã¨", "it", "ani", "!\"", ";", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["my", 7, "comesFrom", ["my"], [5]], ["name", 10, "comesFrom", ["name"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::39", "code": "// opening-tag.hpp\n// Started 14 Aug 2018\n#pragma once\n#include <string>\n#include <boost/spirit/include/qi.hpp>\n\nnamespace client {\n\t// namespace fusion = boost::fusion;\n\t// namespace phoenix = boost::phoenix;\n\tnamespace qi = boost::spirit::qi;\n\tnamespace ascii = boost::spirit::ascii;\n\n\ttemplate<typename Iterator>\n\tstruct opening_tag : qi::grammar<Iterator, mini_xml_tag(), ascii::space_type>\n\t{\n\t\tqi::rule<Iterator, mini_xml_tag(), ascii::space_type> start;\n\t\tqi::rule<Iterator, std::string(), ascii::space_type> head;\n\t\tqi::rule<Iterator, std::string(), ascii::space_type> tail;\n\n\t\topening_tag()\n\t\t\t: base_type{ start }\n\t\t{\n\t\t\thead %= qi::lexeme[+ascii::alnum];\n\t\t\ttail %= qi::no_skip[*(qi::char_ - '>')];\n\t\t\tstart %= qi::lit('<') >> head >> tail >> qi::lit('>');\n\t\t}\n\t};\n}\n", "code_tokens": ["Ġ//", "Ġopening", "-", "tag", ".", "h", "pp", "Ċ", "//", "ĠStarted", "Ġ14", "ĠAug", "Ġ2018", "Ċ", "#", "pr", "ag", "ma", "Ġonce", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "spirit", "/", "include", "/", "qi", ".", "h", "pp", ">", "Ċ", "Ċ", "names", "pace", "Ġclient", "Ġ{", "Ċ", "ĉ", "//", "Ġnamespace", "Ġfusion", "Ġ=", "Ġboost", "::", "f", "usion", ";", "Ċ", "ĉ", "//", "Ġnamespace", "Ġph", "oenix", "Ġ=", "Ġboost", "::", "ph", "oenix", ";", "Ċ", "ĉ", "names", "pace", "Ġq", "i", "Ġ=", "Ġboost", "::", "spirit", "::", "qi", ";", "Ċ", "ĉ", "names", "pace", "Ġas", "ci", "i", "Ġ=", "Ġboost", "::", "spirit", "::", "as", "ci", "i", ";", "ĊĊ", "ĉ", "template", "<", "ty", "pen", "ame", "ĠIter", "ator", ">", "Ċ", "ĉ", "struct", "Ġopening", "_", "tag", "Ġ:", "Ġq", "i", "::", "gram", "mar", "<", "Iterator", ",", "Ġmini", "_", "xml", "_", "tag", "(),", "Ġas", "ci", "i", "::", "space", "_", "type", ">", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "qi", "::", "rule", "<", "Iterator", ",", "Ġmini", "_", "xml", "_", "tag", "(),", "Ġas", "ci", "i", "::", "space", "_", "type", ">", "Ġstart", ";", "Ċ", "ĉ", "ĉ", "qi", "::", "rule", "<", "Iterator", ",", "Ġstd", "::", "string", "(),", "Ġas", "ci", "i", "::", "space", "_", "type", ">", "Ġhead", ";", "Ċ", "ĉ", "ĉ", "qi", "::", "rule", "<", "Iterator", ",", "Ġstd", "::", "string", "(),", "Ġas", "ci", "i", "::", "space", "_", "type", ">", "Ġtail", ";", "ĊĊ", "ĉ", "ĉ", "opening", "_", "tag", "()", "Ċ", "ĉ", "ĉ", "ĉ", ":", "Ġbase", "_", "type", "{", "Ġstart", "Ġ}", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "head", "Ġ%", "=", "Ġq", "i", "::", "lex", "eme", "[", "+", "as", "ci", "i", "::", "al", "num", "];", "Ċ", "ĉ", "ĉ", "ĉ", "tail", "Ġ%", "=", "Ġq", "i", "::", "no", "_", "skip", "[", "*", "(", "qi", "::", "char", "_", "Ġ-", "Ġ'", ">", "')", "];", "Ċ", "ĉ", "ĉ", "ĉ", "start", "Ġ%", "=", "Ġq", "i", "::", "lit", "('", "<", "')", "Ġ>>", "Ġhead", "Ġ>>", "Ġtail", "Ġ>>", "Ġq", "i", "::", "lit", "('", ">", "');", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "};", "Ċ", "}", "Ċ"], "dataflow_graph": [["head", 14, "comesFrom", ["head"], [6]], ["tail", 15, "comesFrom", ["tail"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::40", "code": "#include \"RocksIndex.hh\"\n#include <stdlib.h>\n#include <iostream>\n\n\n// Get command line arguments for array size (100M) and number of trials (1M)\nvoid arrayArgs(int argc, char* argv[], objectId_t& asize, int& reps) {\n  asize = (argc>1) ? strtoull(argv[1], 0, 0) : 100000000;\n  reps  = (argc>2) ? strtol(argv[2], 0, 0)   : 1000000;\n}\n\n\n// Main program goes here\n\nint main(int argc, char* argv[]) {\n  objectId_t arraySize;\n  int queryTrials;\n  arrayArgs(argc, argv, arraySize, queryTrials);\n\n  std::cout << \"RocksDB Table \" << arraySize << \" elements, \" << queryTrials\n\t    << \" trials\" << std::endl;\n\n  RocksIndex rocks(2);\t\t// Verbosity\n  rocks.CreateTable(arraySize);\n  rocks.ExerciseTable(queryTrials);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "R", "ocks", "Index", ".", "hh", "\"", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "ĊĊ", "Ċ", "//", "ĠGet", "Ġcommand", "Ġline", "Ġarguments", "Ġfor", "Ġarray", "Ġsize", "Ġ(", "100", "M", ")", "Ġand", "Ġnumber", "Ġof", "Ġtrials", "Ġ(", "1", "M", ")", "Ċ", "void", "Ġarray", "Args", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "],", "Ġobject", "Id", "_", "t", "&", "Ġas", "ize", ",", "Ġint", "&", "Ġreps", ")", "Ġ{", "Ċ", "Ġ", "Ġas", "ize", "Ġ=", "Ġ(", "arg", "c", ">", "1", ")", "Ġ?", "Ġstr", "t", "ou", "ll", "(", "arg", "v", "[", "1", "],", "Ġ0", ",", "Ġ0", ")", "Ġ:", "Ġ100", "000000", ";", "Ċ", "Ġ", "Ġreps", "Ġ", "Ġ=", "Ġ(", "arg", "c", ">", "2", ")", "Ġ?", "Ġstr", "t", "ol", "(", "arg", "v", "[", "2", "],", "Ġ0", ",", "Ġ0", ")", "Ġ", "Ġ", "Ġ:", "Ġ100", "0000", ";", "Ċ", "}", "ĊĊ", "Ċ", "//", "ĠMain", "Ġprogram", "Ġgoes", "Ġhere", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġobject", "Id", "_", "t", "Ġarray", "Size", ";", "Ċ", "Ġ", "Ġint", "Ġquery", "Tri", "als", ";", "Ċ", "Ġ", "Ġarray", "Args", "(", "arg", "c", ",", "Ġarg", "v", ",", "Ġarray", "Size", ",", "Ġquery", "Tri", "als", ");", "ĊĊ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "R", "ocks", "DB", "ĠTable", "Ġ\"", "Ġ<<", "Ġarray", "Size", "Ġ<<", "Ġ\"", "Ġelements", ",", "Ġ\"", "Ġ<<", "Ġquery", "Tri", "als", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\"", "Ġtrials", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "ĠRocks", "Index", "Ġrocks", "(", "2", ");", "ĉ", "ĉ", "//", "ĠVerb", "osity", "Ċ", "Ġ", "Ġrocks", ".", "Create", "Table", "(", "array", "Size", ");", "Ċ", "Ġ", "Ġrocks", ".", "Ex", "ercise", "Table", "(", "query", "Tri", "als", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 6, "comesFrom", ["argc"], [1]], ["argc", 10, "comesFrom", ["argc"], [1]], ["argc", 19, "comesFrom", ["argc"], [14]], ["arraySize", 21, "comesFrom", ["arraySize"], [16]], ["arraySize", 24, "comesFrom", ["arraySize"], [16]], ["arraySize", 30, "comesFrom", ["arraySize"], [16]], ["queryTrials", 22, "comesFrom", ["queryTrials"], [17]], ["queryTrials", 25, "comesFrom", ["queryTrials"], [17]], ["queryTrials", 33, "comesFrom", ["queryTrials"], [17]], ["rocks", 28, "comesFrom", ["rocks"], [27]], ["rocks", 31, "comesFrom", ["rocks"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::41", "code": "#include \"../../VM/Handler/Opcode8030Handler.h\"\n#include \"../../VM/Script.h\"\n\nnamespace Falltergeist\n{\n    namespace VM\n    {\n        namespace Handler\n        {\n            Opcode8030::Opcode8030(VM::Script *script, std::shared_ptr<ILogger> logger) : OpcodeHandler(script)\n            {\n                this->logger = std::move(logger);\n            }\n\n            void Opcode8030::_run()\n            {\n                logger->debug() << \"[8030] [*] op_while(address, condition)\" << std::endl;\n                auto condition = _script->dataStack()->popLogical();\n                if (!condition) {\n                    _script->setProgramCounter(_script->dataStack()->popInteger());\n                }\n            }\n        }\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "../", "../", "VM", "/", "Handler", "/", "Op", "code", "80", "30", "Handler", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "../", "VM", "/", "Script", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠFall", "ter", "geist", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnamespace", "ĠVM", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnamespace", "ĠHandler", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠOp", "code", "80", "30", "::", "Op", "code", "80", "30", "(", "VM", "::", "Script", "Ġ*", "script", ",", "Ġstd", "::", "shared", "_", "ptr", "<", "IL", "og", "ger", ">", "Ġlogger", ")", "Ġ:", "ĠOp", "code", "Handler", "(", "script", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "log", "ger", "Ġ=", "Ġstd", "::", "move", "(", "log", "ger", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠOp", "code", "80", "30", "::", "_", "run", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlogger", "->", "debug", "()", "Ġ<<", "Ġ\"[", "80", "30", "]", "Ġ[*]", "Ġop", "_", "while", "(", "address", ",", "Ġcondition", ")\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġcondition", "Ġ=", "Ġ_", "script", "->", "data", "Stack", "()", "->", "pop", "Log", "ical", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "condition", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "script", "->", "set", "Program", "Counter", "(_", "script", "->", "data", "Stack", "()", "->", "pop", "Integer", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["logger", 5, "comesFrom", ["logger"], [2]], ["logger", 7, "comesFrom", ["logger"], [2]], ["logger", 9, "comesFrom", ["logger"], [2]], ["condition", 16, "comesFrom", ["condition"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::42", "code": "#include \"house2.h\"\n\nint House2::objCount = 0;\nGImage *House2::image = nullptr;\nHouse2::House2(int x, int y)\n{\n    posx = x;\n    posy = y;\n    width = 336;\n    height = 366;\n    if(!objCount)\n        image = new GImage(\"./assets/house-a.gif\",width,height,GImage::IS_TRANSPARENT,0);\n    objCount++;\n    if(Debug::debug_enable())\n        std::cout << \"House2 \" << objCount-1 << \" created\" << std::endl;\n}\nHouse2::~House2()\n{\n    objCount--;\n    if(!objCount)\n        delete image;\n    if(Debug::debug_enable())\n        std::cout << \"House2 \" << objCount << \" destroyed\" << std::endl;\n}\nbool House2::show(int x)\n{\n    if(posx-x+width >= 0 && posx-x <= 800)\n    {\n      image->show(posx-x,posy);\n      return 1;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "house", "2", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠHouse", "2", "::", "obj", "Count", "Ġ=", "Ġ0", ";", "Ċ", "G", "Image", "Ġ*", "House", "2", "::", "image", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "House", "2", "::", "House", "2", "(", "int", "Ġx", ",", "Ġint", "Ġy", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpos", "x", "Ġ=", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpos", "y", "Ġ=", "Ġy", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwidth", "Ġ=", "Ġ336", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġheight", "Ġ=", "Ġ366", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "obj", "Count", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġimage", "Ġ=", "Ġnew", "ĠG", "Image", "(", "\".", "/", "assets", "/", "house", "-", "a", ".", "gif", "\",", "width", ",", "height", ",", "G", "Image", "::", "IS", "_", "TR", "AN", "SP", "AR", "ENT", ",", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġobj", "Count", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "Debug", "::", "debug", "_", "enable", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "House", "2", "Ġ\"", "Ġ<<", "Ġobj", "Count", "-", "1", "Ġ<<", "Ġ\"", "Ġcreated", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "House", "2", "::", "~", "House", "2", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġobj", "Count", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "obj", "Count", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġimage", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "Debug", "::", "debug", "_", "enable", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "House", "2", "Ġ\"", "Ġ<<", "Ġobj", "Count", "Ġ<<", "Ġ\"", "Ġdestroyed", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "bool", "ĠHouse", "2", "::", "show", "(", "int", "Ġx", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "pos", "x", "-", "x", "+", "width", "Ġ>=", "Ġ0", "Ġ&&", "Ġpos", "x", "-", "x", "Ġ<=", "Ġ800", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġimage", "->", "show", "(", "pos", "x", "-", "x", ",", "pos", "y", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["image", 24, "comesFrom", ["image"], [12]], ["image", 36, "comesFrom", ["image"], [12]], ["x", 6, "comesFrom", ["x"], [3]], ["x", 32, "comesFrom", ["x"], [30]], ["x", 35, "comesFrom", ["x"], [30]], ["x", 39, "comesFrom", ["x"], [30]], ["y", 8, "comesFrom", ["y"], [4]], ["width", 13, "comesFrom", ["width"], [9]], ["width", 33, "comesFrom", ["width"], [9]], ["height", 14, "comesFrom", ["height"], [10]], ["posx", 31, "comesFrom", ["posx"], [5]], ["posx", 34, "comesFrom", ["posx"], [5]], ["posx", 38, "comesFrom", ["posx"], [5]], ["posy", 40, "comesFrom", ["posy"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::43", "code": "/**********************************************************\n * Filename:    MDBRow.cpp\n * Text Encoding: utf-8\n *\n * Description:\n *              \n *\n * Author: moxichang (ishego@gmail.com)\n *         Harbin Engineering University \n *         Information Security Research Center\n *\n *********************************************************/\n\n#include \"Exception.h\"\n#include \"MDB/MDBRow.h\"\n\nMDB::MDBRow:: MDBRow(MDBField** fields_, int numcols_ )\n\t: field_m(fields_), numcols_m(numcols_)\n{\n\n}\n\nMDB::MDBRow:: ~MDBRow()\n{\n\tfor(int i=0; i< numcols_m; i++)\n\t{\n\t\tdelete field_m[i];\t\n\t}\n\n\tdelete [] field_m;\n}\n\n\nMDB::MDBField& MDB::MDBRow:: operator [] (int index_)\n{\n\tif(index_ >= numcols_m || index_ < 0)\n\t{\n\t\tThrow(\"Row index out of range\", MException::ME_OUTRANGE);\n\t}\n\n\treturn **(field_m + index_);\n}\n", "code_tokens": ["Ġ/", "********************************", "****************", "********", "**", "Ċ", "Ġ*", "ĠFil", "ename", ":", "Ġ", "Ġ", "Ġ", "ĠMD", "BR", "ow", ".", "cpp", "Ċ", "Ġ*", "ĠText", "ĠEnc", "oding", ":", "Ġut", "f", "-", "8", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠDescription", ":", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠAuthor", ":", "Ġm", "ox", "ich", "ang", "Ġ(", "is", "he", "go", "@", "gmail", ".", "com", ")", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠHar", "bin", "ĠEngineering", "ĠUniversity", "Ġ", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠInformation", "ĠSecurity", "ĠResearch", "ĠCenter", "Ċ", "Ġ*", "Ċ", "Ġ********************************", "****************", "********", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Exception", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "M", "DB", "/", "M", "DB", "Row", ".", "h", "\"", "Ċ", "Ċ", "M", "DB", "::", "M", "DB", "Row", "::", "ĠMD", "BR", "ow", "(", "M", "DB", "Field", "**", "Ġfields", "_", ",", "Ġint", "Ġnum", "col", "s", "_", "Ġ)", "Ċ", "ĉ", ":", "Ġfield", "_", "m", "(", "fields", "_", "),", "Ġnum", "col", "s", "_", "m", "(", "num", "col", "s", "_", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "M", "DB", "::", "M", "DB", "Row", "::", "Ġ~", "M", "DB", "Row", "()", "Ċ", "{", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "Ġnum", "col", "s", "_", "m", ";", "Ġi", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "delete", "Ġfield", "_", "m", "[", "i", "];", "ĉ", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "delete", "Ġ[]", "Ġfield", "_", "m", ";", "Ċ", "}", "ĊĊ", "Ċ", "M", "DB", "::", "M", "DB", "Field", "&", "ĠMD", "B", "::", "M", "DB", "Row", "::", "Ġoperator", "Ġ[]", "Ġ(", "int", "Ġindex", "_", ")", "Ċ", "{", "Ċ", "ĉ", "if", "(", "index", "_", "Ġ>=", "Ġnum", "col", "s", "_", "m", "Ġ||", "Ġindex", "_", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Throw", "(\"", "Row", "Ġindex", "Ġout", "Ġof", "Ġrange", "\",", "ĠM", "Exception", "::", "ME", "_", "OU", "TR", "ANGE", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ**", "(", "field", "_", "m", "Ġ+", "Ġindex", "_", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["numcols_", 6, "comesFrom", ["numcols_"], [2]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 11, "comesFrom", ["i"], [8]], ["i", 13, "comesFrom", ["i"], [8]], ["index_", 16, "comesFrom", ["index_"], [15]], ["index_", 18, "comesFrom", ["index_"], [15]], ["index_", 22, "comesFrom", ["index_"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::44", "code": "#include \"hal/time/time.hpp\"\r\n\r\nnamespace hal\r\n{\r\nnamespace time\r\n{\r\n\r\nstatic u64 currentTime = 0;\r\n\r\n\r\nu64 milliseconds()\r\n{\r\n    return currentTime;\r\n}\r\n\r\n} // namespace time\r\n} // namespace hal\r\n\r\n\r\nnamespace stub\r\n{\r\nnamespace time\r\n{\r\n\r\nvoid setCurrentTime(u64 milliseconds)\r\n{\r\n    hal::time::currentTime = milliseconds;\r\n}\r\n\r\nvoid forwardTime(u64 milliseconds)\r\n{\r\n    hal::time::currentTime += milliseconds;\r\n}\r\n\r\n} // namespace time\r\n} // namespace stub\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "hal", "/", "time", "/", "time", ".", "h", "pp", "\"", "č", "Ċ", "č", "Ċ", "names", "pace", "Ġhal", "č", "Ċ", "{", "č", "Ċ", "names", "pace", "Ġtime", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "static", "Ġu", "64", "Ġcurrent", "Time", "Ġ=", "Ġ0", ";", "č", "Ċ", "č", "Ċ", "č", "Ċ", "u", "64", "Ġmilliseconds", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcurrent", "Time", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġtime", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġhal", "č", "Ċ", "č", "Ċ", "č", "Ċ", "names", "pace", "Ġstub", "č", "Ċ", "{", "č", "Ċ", "names", "pace", "Ġtime", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "Ġset", "Current", "Time", "(", "u", "64", "Ġmilliseconds", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġhal", "::", "time", "::", "current", "Time", "Ġ=", "Ġmilliseconds", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġforward", "Time", "(", "u", "64", "Ġmilliseconds", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġhal", "::", "time", "::", "current", "Time", "Ġ+=", "Ġmilliseconds", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġtime", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġstub", "č", "Ċ"], "dataflow_graph": [["milliseconds", 6, "comesFrom", ["milliseconds"], [4]], ["milliseconds", 10, "comesFrom", ["milliseconds"], [8]], ["currentTime", 2, "comesFrom", ["currentTime"], [0]], ["currentTime", 5, "comesFrom", ["currentTime"], [0]], ["currentTime", 9, "comesFrom", ["currentTime"], [0]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::45", "code": "/*\n    Buffer.cpp - This file is part of Element\n    Copyright (C) 2014  Kushview, LLC.  All rights reserved.\n*/\n\n#if ELEMENT_BUFFER_FACTORY\n\nBuffer::Buffer (DataType dataType_, uint32 subType_)\n    : factory (nullptr),\n      refs (0),\n      dataType (dataType_),\n      subType (subType_),\n      capacity (0),\n      next (nullptr)\n{ }\n\nBuffer::~Buffer() { }\n\nvoid Buffer::attach (BufferFactory* owner)\n{\n    jassert (factory == nullptr && owner != nullptr);\n    factory = owner;\n}\n\nvoid Buffer::recycle()\n{\n    if (isManaged())\n        factory->recycle (this);\n}\n\nvoid intrusive_ptr_add_ref (Buffer* b)\n{\n    if (b->isManaged())\n        ++b->refs;\n}\n\nvoid intrusive_ptr_release (Buffer* b)\n{\n    if (b->isManaged())\n        if (--b->refs == 0)\n            b->recycle();\n}\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "Ġ", "Ġ", "ĠBuffer", ".", "cpp", "Ġ-", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠElement", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "Ġ", "ĠKush", "view", ",", "ĠLLC", ".", "Ġ", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "if", "ĠELE", "MENT", "_", "BU", "FFER", "_", "F", "ACT", "ORY", "Ċ", "Ċ", "Buffer", "::", "Buffer", "Ġ(", "Data", "Type", "Ġdata", "Type", "_", ",", "Ġuint", "32", "Ġsub", "Type", "_", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġfactory", "Ġ(", "null", "ptr", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġref", "s", "Ġ(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdata", "Type", "Ġ(", "data", "Type", "_", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsub", "Type", "Ġ(", "sub", "Type", "_", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcapacity", "Ġ(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnext", "Ġ(", "null", "ptr", ")", "Ċ", "{", "Ġ}", "Ċ", "Ċ", "Buffer", "::", "~", "Buffer", "()", "Ġ{", "Ġ}", "Ċ", "Ċ", "void", "ĠBuffer", "::", "attach", "Ġ(", "Buffer", "Factory", "*", "Ġowner", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġj", "assert", "Ġ(", "f", "actory", "Ġ==", "Ġnull", "ptr", "Ġ&&", "Ġowner", "Ġ!=", "Ġnull", "ptr", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfactory", "Ġ=", "Ġowner", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBuffer", "::", "re", "cycle", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "is", "Man", "aged", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfactory", "->", "re", "cycle", "Ġ(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġintrusive", "_", "ptr", "_", "add", "_", "ref", "Ġ(", "Buffer", "*", "Ġb", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "b", "->", "is", "Man", "aged", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "b", "->", "ref", "s", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġintrusive", "_", "ptr", "_", "release", "Ġ(", "Buffer", "*", "Ġb", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "b", "->", "is", "Man", "aged", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "--", "b", "->", "ref", "s", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġb", "->", "re", "cycle", "();", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["factory", 22, "comesFrom", ["factory"], [18]], ["dataType_", 7, "comesFrom", ["dataType_"], [2]], ["subType_", 9, "comesFrom", ["subType_"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::46", "code": "/** Author: Sharmin Akter **/\r\n/** Created at: 4/30/2012 12:07:26 AM **/\r\n\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int i,j,k,p,m,n,t;\r\n\r\n    while(scanf(\"%d\",&t)==1)\r\n    {\r\n        for(i=1;i<=t;i++)\r\n        {\r\n            scanf(\"%d\",&p);\r\n            if(p==2||p==3||p==5||p==7||p==13||p==17)\r\n                printf(\"Yes\\n\");\r\n            else\r\n                printf(\"No\\n\");\r\n            getchar();\r\n        }\r\n    }\r\nreturn 0;\r\n}\r\n", "code_tokens": ["Ġ/**", "ĠAuthor", ":", "ĠShar", "min", "ĠAk", "ter", "Ġ**", "/", "č", "Ċ", "/**", "ĠCreated", "Ġat", ":", "Ġ4", "/", "30", "/", "2012", "Ġ12", ":", "07", ":", "26", "ĠAM", "Ġ**", "/", "č", "Ċ", "č", "Ċ", "#", "include", "<", "std", "io", ".", "h", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", ",", "j", ",", "k", ",", "p", ",", "m", ",", "n", ",", "t", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "scan", "f", "(\"", "%", "d", "\",", "&", "t", ")", "==", "1", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "i", "=", "1", ";", "i", "<", "=", "t", ";", "i", "++)", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "p", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "p", "==", "2", "||", "p", "==", "3", "||", "p", "==", "5", "||", "p", "==", "7", "||", "p", "==", "13", "||", "p", "==", "17", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Yes", "\\", "n", "\");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "No", "\\", "n", "\");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġget", "char", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["t", 9, "comesFrom", ["t"], [7]], ["t", 12, "comesFrom", ["t"], [7]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 13, "comesFrom", ["i"], [10]], ["p", 15, "comesFrom", ["p"], [4]], ["p", 16, "comesFrom", ["p"], [4]], ["p", 17, "comesFrom", ["p"], [4]], ["p", 18, "comesFrom", ["p"], [4]], ["p", 19, "comesFrom", ["p"], [4]], ["p", 20, "comesFrom", ["p"], [4]], ["p", 21, "comesFrom", ["p"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::47", "code": "// Copyright Benoit Blanchon 2014-2015\r\n// MIT License\r\n//\r\n// Arduino JSON library\r\n// https://github.com/bblanchon/ArduinoJson\r\n\r\n#pragma once\r\n\r\n#include \"../Arduino/Print.hpp\"\r\n\r\nnamespace ArduinoJson {\r\nnamespace Internals {\r\n\r\nclass Encoding {\r\n public:\r\n  // Optimized for code size on a 8-bit AVR\r\n  static char escapeChar(char c) {\r\n    const char *p = _escapeTable;\r\n    while (p[0] && p[1] != c) {\r\n      p += 2;\r\n    }\r\n    return p[0];\r\n  }\r\n\r\n  // Optimized for code size on a 8-bit AVR\r\n  static char unescapeChar(char c) {\r\n    const char *p = _escapeTable + 4;\r\n    for (;;) {\r\n      if (p[0] == '\\0') return c;\r\n      if (p[0] == c) return p[1];\r\n      p += 2;\r\n    }\r\n  }\r\n\r\nprivate:\r\n\tstatic const char _escapeTable[];\r\n};\r\n}\r\n}\r\n", "code_tokens": ["Ġ//", "ĠCopyright", "ĠBen", "oit", "ĠBl", "anch", "on", "Ġ2014", "-", "2015", "č", "Ċ", "//", "ĠMIT", "ĠLicense", "č", "Ċ", "//", "č", "Ċ", "//", "ĠArduino", "ĠJSON", "Ġlibrary", "č", "Ċ", "//", "Ġhttps", "://", "github", ".", "com", "/", "b", "bl", "anch", "on", "/", "Ar", "duino", "J", "son", "č", "Ċ", "č", "Ċ", "#", "pr", "ag", "ma", "Ġonce", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "../", "Ar", "duino", "/", "Print", ".", "h", "pp", "\"", "č", "Ċ", "č", "Ċ", "names", "pace", "ĠArduino", "J", "son", "Ġ{", "č", "Ċ", "names", "pace", "ĠIntern", "als", "Ġ{", "č", "Ċ", "č", "Ċ", "class", "ĠEnc", "oding", "Ġ{", "č", "Ċ", "Ġpublic", ":", "č", "Ċ", "Ġ", "Ġ//", "ĠOptim", "ized", "Ġfor", "Ġcode", "Ġsize", "Ġon", "Ġa", "Ġ8", "-", "bit", "ĠA", "VR", "č", "Ċ", "Ġ", "Ġstatic", "Ġchar", "Ġescape", "Char", "(", "char", "Ġc", ")", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġchar", "Ġ*", "p", "Ġ=", "Ġ_", "escape", "Table", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "p", "[", "0", "]", "Ġ&&", "Ġp", "[", "1", "]", "Ġ!=", "Ġc", ")", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "Ġ+=", "Ġ2", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġp", "[", "0", "];", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ//", "ĠOptim", "ized", "Ġfor", "Ġcode", "Ġsize", "Ġon", "Ġa", "Ġ8", "-", "bit", "ĠA", "VR", "č", "Ċ", "Ġ", "Ġstatic", "Ġchar", "Ġun", "escape", "Char", "(", "char", "Ġc", ")", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġchar", "Ġ*", "p", "Ġ=", "Ġ_", "escape", "Table", "Ġ+", "Ġ4", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", ";;", ")", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "p", "[", "0", "]", "Ġ==", "Ġ'", "\\", "0", "')", "Ġreturn", "Ġc", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "p", "[", "0", "]", "Ġ==", "Ġc", ")", "Ġreturn", "Ġp", "[", "1", "];", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "Ġ+=", "Ġ2", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "private", ":", "č", "Ċ", "ĉ", "static", "Ġconst", "Ġchar", "Ġ_", "escape", "Table", "[", "];", "č", "Ċ", "};", "č", "Ċ", "}", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["p", 8, "comesFrom", ["p"], [7]], ["p", 11, "comesFrom", ["p"], [7]], ["p", 13, "comesFrom", ["p"], [7]], ["p", 15, "comesFrom", ["p"], [7]], ["p", 17, "comesFrom", ["p"], [7]], ["c", 6, "comesFrom", ["c"], [1]], ["c", 14, "comesFrom", ["c"], [10]], ["c", 16, "comesFrom", ["c"], [10]], ["_escapeTable", 12, "comesFrom", ["_escapeTable"], [3]], ["_escapeTable", 19, "comesFrom", ["_escapeTable"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::48", "code": "#include \"rendertarget.h\"\n#include <system/engine.h>\n#include <renderer/renderer.h>\n#include <renderer/forms.h>\n\nusing namespace CGE;\n\nRenderTarget* RenderTarget::mCurrTarget = NULL;\n\nvoid RenderTarget::drawFullscreen(bool transform){\n  Renderer* rend = Engine::instance()->getRenderer();\n  if (transform){\n    rend->ortho(1, 1);\n    rend->resetModelView();\n  }\n  rend->enableDepthTest(false);\n  CGE::Forms& forms = *CGE::Engine::instance()->getForms();\n  forms.activateQuad();\n  rend->enableTexturing(true);\n  rend->setColor(1, 1, 1, 1);\n  if (transform){\n    if (rend->getRenderType() != DirectX){\n      rend->switchMatrixStack(CGE::MatTexture);\n      rend->resetModelView();\n      rend->scale(1, -1, 1);\n    }\n  }\n  for (unsigned i = 0; i < getNumTextures(); ++i){\n    getTexture(i)->activate(i);\n  }\n  forms.drawQuad(Vec2f(), Vec2f(1, 1));\n  if (transform){\n    if (rend->getRenderType() != DirectX){\n      rend->resetModelView();\n      rend->switchMatrixStack(CGE::Modelview);\n    }\n  }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "render", "target", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "system", "/", "engine", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "rend", "erer", "/", "rend", "erer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "rend", "erer", "/", "forms", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠC", "GE", ";", "Ċ", "Ċ", "Render", "Target", "*", "ĠRender", "Target", "::", "m", "Cur", "r", "Target", "Ġ=", "ĠNULL", ";", "Ċ", "Ċ", "void", "ĠRender", "Target", "::", "draw", "Full", "screen", "(", "bool", "Ġtransform", "){", "Ċ", "Ġ", "ĠRend", "erer", "*", "Ġrend", "Ġ=", "ĠEngine", "::", "instance", "()", "->", "get", "R", "end", "erer", "();", "Ċ", "Ġ", "Ġif", "Ġ(", "transform", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġrend", "->", "orth", "o", "(", "1", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġrend", "->", "reset", "Model", "View", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġrend", "->", "enable", "Depth", "Test", "(", "false", ");", "Ċ", "Ġ", "ĠC", "GE", "::", "Form", "s", "&", "Ġforms", "Ġ=", "Ġ*", "C", "GE", "::", "Engine", "::", "instance", "()", "->", "get", "Form", "s", "();", "Ċ", "Ġ", "Ġforms", ".", "activate", "Qu", "ad", "();", "Ċ", "Ġ", "Ġrend", "->", "enable", "Text", "uring", "(", "true", ");", "Ċ", "Ġ", "Ġrend", "->", "set", "Color", "(", "1", ",", "Ġ1", ",", "Ġ1", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "transform", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "rend", "->", "get", "Render", "Type", "()", "Ġ!=", "ĠDirectX", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrend", "->", "switch", "Matrix", "Stack", "(", "C", "GE", "::", "Mat", "Texture", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrend", "->", "reset", "Model", "View", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrend", "->", "scale", "(", "1", ",", "Ġ-", "1", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġget", "Num", "Textures", "();", "Ġ++", "i", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġget", "Texture", "(", "i", ")", "->", "activate", "(", "i", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġforms", ".", "draw", "Qu", "ad", "(", "V", "ec", "2", "f", "(),", "ĠVec", "2", "f", "(", "1", ",", "Ġ1", "));", "Ċ", "Ġ", "Ġif", "Ġ(", "transform", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "rend", "->", "get", "Render", "Type", "()", "Ġ!=", "ĠDirectX", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrend", "->", "reset", "Model", "View", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrend", "->", "switch", "Matrix", "Stack", "(", "C", "GE", "::", "Model", "view", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["transform", 7, "comesFrom", ["transform"], [3]], ["transform", 23, "comesFrom", ["transform"], [3]], ["transform", 46, "comesFrom", ["transform"], [3]], ["i", 35, "comesFrom", ["i"], [34]], ["i", 37, "comesFrom", ["i"], [34]], ["i", 39, "comesFrom", ["i"], [34]], ["i", 41, "comesFrom", ["i"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::49", "code": "/*\n * Copyright 2016 - 2021 Marcin Matula\n *\n * This file is part of Oap.\n *\n * Oap is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Oap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Oap.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"gtest/gtest.h\"\n#include \"oapHostMemoryApi.h\"\n\nclass OapMemoryApiTests : public testing::Test\n{\n public:\n\n  virtual void SetUp() {}\n\n  virtual void TearDown() {}\n};\n\nTEST_F(OapMemoryApiTests, Test_1)\n{\n  oap::Memory memory = oap::host::NewMemory ({1, 1});\n  oap::Memory memory1 = oap::host::ReuseMemory (memory);\n  oap::Memory memory2 = oap::host::ReuseMemory (memory);\n\n  oap::host::DeleteMemory (memory);\n  oap::host::DeleteMemory (memory1);\n  oap::host::DeleteMemory (memory2);\n}\n\nTEST_F(OapMemoryApiTests, Test_2)\n{\n  oap::Memory memory = oap::host::NewMemoryWithValues ({2, 1}, 2.f);\n  oap::host::DeleteMemory (memory);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2016", "Ġ-", "Ġ2021", "ĠMarc", "in", "ĠMat", "ula", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠO", "ap", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠO", "ap", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠO", "ap", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠO", "ap", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "g", "test", "/", "g", "test", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "o", "ap", "Host", "Memory", "A", "pi", ".", "h", "\"", "Ċ", "Ċ", "class", "ĠO", "ap", "Memory", "A", "pi", "T", "ests", "Ġ:", "Ġpublic", "Ġtesting", "::", "Test", "Ċ", "{", "Ċ", "Ġpublic", ":", "ĊĊ", "Ġ", "Ġvirtual", "Ġvoid", "ĠSet", "Up", "()", "Ġ{}", "ĊĊ", "Ġ", "Ġvirtual", "Ġvoid", "ĠT", "ear", "Down", "()", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "O", "ap", "Memory", "A", "pi", "T", "ests", ",", "ĠTest", "_", "1", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "ap", "::", "Memory", "Ġmemory", "Ġ=", "Ġo", "ap", "::", "host", "::", "New", "Memory", "Ġ({", "1", ",", "Ġ1", "});", "Ċ", "Ġ", "Ġo", "ap", "::", "Memory", "Ġmemory", "1", "Ġ=", "Ġo", "ap", "::", "host", "::", "Re", "use", "Memory", "Ġ(", "memory", ");", "Ċ", "Ġ", "Ġo", "ap", "::", "Memory", "Ġmemory", "2", "Ġ=", "Ġo", "ap", "::", "host", "::", "Re", "use", "Memory", "Ġ(", "memory", ");", "ĊĊ", "Ġ", "Ġo", "ap", "::", "host", "::", "Delete", "Memory", "Ġ(", "memory", ");", "Ċ", "Ġ", "Ġo", "ap", "::", "host", "::", "Delete", "Memory", "Ġ(", "memory", "1", ");", "Ċ", "Ġ", "Ġo", "ap", "::", "host", "::", "Delete", "Memory", "Ġ(", "memory", "2", ");", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "O", "ap", "Memory", "A", "pi", "T", "ests", ",", "ĠTest", "_", "2", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "ap", "::", "Memory", "Ġmemory", "Ġ=", "Ġo", "ap", "::", "host", "::", "New", "Memory", "With", "Values", "Ġ({", "2", ",", "Ġ1", "},", "Ġ2", ".", "f", ");", "Ċ", "Ġ", "Ġo", "ap", "::", "host", "::", "Delete", "Memory", "Ġ(", "memory", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["memory", 7, "comesFrom", ["memory"], [3]], ["memory", 10, "comesFrom", ["memory"], [3]], ["memory", 12, "comesFrom", ["memory"], [3]], ["memory", 21, "comesFrom", ["memory"], [18]], ["memory1", 14, "comesFrom", ["memory1"], [5]], ["memory2", 16, "comesFrom", ["memory2"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::50", "code": "#include \"serverBase.h\"\n\nint main(int argc, char** argv)\n{\n   unsigned portNumber = 12943;\n   if(argc >= 2)\n   {\n      portNumber = atoi(argv[1]);\n   }\n   try\n   {\n      asio::io_service io_service;\n      asio::ip::tcp::endpoint endpoint(asio::ip::tcp::v4(), portNumber);\n      TCPServer server(io_service, endpoint);\n      io_service.run();\n   }\n   catch (std::exception& e)\n   {\n      std::cerr << e.what() << std::endl;\n   }\n\n   return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "server", "Base", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġunsigned", "Ġport", "Number", "Ġ=", "Ġ129", "43", ";", "Ċ", "Ġ", "Ġ", "Ġif", "(", "arg", "c", "Ġ>=", "Ġ2", ")", "Ċ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġport", "Number", "Ġ=", "Ġat", "oi", "(", "arg", "v", "[", "1", "]);", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġtry", "Ċ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġas", "io", "::", "io", "_", "service", "Ġio", "_", "service", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġas", "io", "::", "ip", "::", "t", "cp", "::", "end", "point", "Ġendpoint", "(", "asio", "::", "ip", "::", "t", "cp", "::", "v", "4", "(),", "Ġport", "Number", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTC", "PS", "erver", "Ġserver", "(", "io", "_", "service", ",", "Ġendpoint", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġio", "_", "service", ".", "run", "();", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġcatch", "Ġ(", "std", "::", "ex", "ception", "&", "Ġe", ")", "Ċ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġe", ".", "what", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 4, "comesFrom", ["argc"], [1]], ["io_service", 11, "comesFrom", ["io_service"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::51", "code": "// Fill out your copyright notice in the Description page of Project Settings.\n\n#include \"Projectile.h\"\n\n\n// Sets default values\nAProjectile::AProjectile()\n{\n\t// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.\n\tPrimaryActorTick.bCanEverTick = true;\n\tProjectileMovement = CreateDefaultSubobject<UProjectileMovementComponent>(FName(\"Projectile Movement\"));\n\tProjectileMovement->bAutoActivate = false;\n}\n\n// Called when the game starts or when spawned\nvoid AProjectile::BeginPlay()\n{\n\tSuper::BeginPlay();\n\t\n}\n\n// Called every frame\nvoid AProjectile::Tick(float DeltaTime)\n{\n\tSuper::Tick(DeltaTime);\n\n}\n\nvoid AProjectile::LaunchProjectile(float Speed)\n{\n\tProjectileMovement->SetVelocityInLocalSpace(FVector::ForwardVector * Speed);\n\tProjectileMovement->Activate();\n}\n", "code_tokens": ["Ġ//", "ĠFill", "Ġout", "Ġyour", "Ġcopyright", "Ġnotice", "Ġin", "Ġthe", "ĠDescription", "Ġpage", "Ġof", "ĠProject", "ĠSettings", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "Project", "ile", ".", "h", "\"", "ĊĊ", "Ċ", "//", "ĠSets", "Ġdefault", "Ġvalues", "Ċ", "A", "Project", "ile", "::", "A", "Project", "ile", "()", "Ċ", "{", "Ċ", "ĉ", "//", "ĠSet", "Ġthis", "Ġactor", "Ġto", "Ġcall", "ĠTick", "()", "Ġevery", "Ġframe", ".", "Ġ", "ĠYou", "Ġcan", "Ġturn", "Ġthis", "Ġoff", "Ġto", "Ġimprove", "Ġperformance", "Ġif", "Ġyou", "Ġdon", "'t", "Ġneed", "Ġit", ".", "Ċ", "ĉ", "Primary", "Actor", "T", "ick", ".", "b", "Can", "Ever", "T", "ick", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "Project", "ile", "Move", "ment", "Ġ=", "ĠCreate", "Default", "Sub", "object", "<", "U", "Project", "ile", "Move", "ment", "Component", ">(", "F", "Name", "(\"", "Project", "ile", "ĠMovement", "\")", ");", "Ċ", "ĉ", "Project", "ile", "Move", "ment", "->", "b", "Auto", "Activ", "ate", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "//", "ĠCalled", "Ġwhen", "Ġthe", "Ġgame", "Ġstarts", "Ġor", "Ġwhen", "Ġspawned", "Ċ", "void", "ĠA", "Project", "ile", "::", "Begin", "Play", "()", "Ċ", "{", "Ċ", "ĉ", "Super", "::", "Begin", "Play", "();", "Ċ", "ĉ", "Ċ", "}", "Ċ", "Ċ", "//", "ĠCalled", "Ġevery", "Ġframe", "Ċ", "void", "ĠA", "Project", "ile", "::", "T", "ick", "(", "float", "ĠDelta", "Time", ")", "Ċ", "{", "Ċ", "ĉ", "Super", "::", "T", "ick", "(", "Delta", "Time", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠA", "Project", "ile", "::", "Launch", "Project", "ile", "(", "float", "ĠSpeed", ")", "Ċ", "{", "Ċ", "ĉ", "Project", "ile", "Move", "ment", "->", "Set", "Vel", "ocity", "In", "Local", "Space", "(", "F", "Vector", "::", "Forward", "Vector", "Ġ*", "ĠSpeed", ");", "Ċ", "ĉ", "Project", "ile", "Move", "ment", "->", "Activ", "ate", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["ProjectileMovement", 6, "comesFrom", ["ProjectileMovement"], [3]], ["ProjectileMovement", 16, "comesFrom", ["ProjectileMovement"], [3]], ["ProjectileMovement", 20, "comesFrom", ["ProjectileMovement"], [3]], ["DeltaTime", 13, "comesFrom", ["DeltaTime"], [11]], ["Speed", 19, "comesFrom", ["Speed"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::52", "code": "#ifdef WINDOWS_PLATFORM\n\n#include \"WindowsInputService.hpp\"\n\n#include \"WindowsMouseInterface.hpp\"\n#include \"WindowsKeyboardInterface.hpp\"\n\nnamespace MPACK\n{\n\tnamespace Input\n\t{\n\t\tWindowsInputService::WindowsInputService()\n\t\t{\n\t\t\tm_pMouse = new WindowsMouseInterface;\n\t\t\tm_pKeyboard = new WindowsKeyboardInterface;\n\t\t\tReset();\n\t\t}\n\n\t\tWindowsInputService::~WindowsInputService()\n\t\t{\n\t\t}\n\n\t\tvoid WindowsInputService::Update()\n\t\t{\n\t\t\tm_pMouse->Update();\n\t\t\tm_pKeyboard->Update();\n\t\t}\n\n\t\tvoid WindowsInputService::Reset()\n\t\t{\n\t\t\tm_pMouse->Reset();\n\t\t\tm_pKeyboard->Reset();\n\t\t}\n\n\t\tMouseInterface* WindowsInputService::GetMouse() const\n\t\t{\n\t\t\treturn m_pMouse;\n\t\t}\n\n\t\tKeyboardInterface* WindowsInputService::GetKeyboard() const\n\t\t{\n\t\t\treturn m_pKeyboard;\n\t\t}\n\t}\n}\n\n#endif\n", "code_tokens": ["Ġ#", "if", "def", "ĠW", "IND", "OWS", "_", "PL", "AT", "FORM", "Ċ", "Ċ", "#", "include", "Ġ\"", "Windows", "Input", "Service", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Windows", "Mouse", "Interface", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Windows", "Key", "board", "Interface", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "ĠMP", "ACK", "Ċ", "{", "Ċ", "ĉ", "names", "pace", "ĠInput", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Windows", "Input", "Service", "::", "Windows", "Input", "Service", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "m", "_", "p", "Mouse", "Ġ=", "Ġnew", "ĠWindows", "Mouse", "Interface", ";", "Ċ", "ĉ", "ĉ", "ĉ", "m", "_", "p", "Key", "board", "Ġ=", "Ġnew", "ĠWindows", "Key", "board", "Interface", ";", "Ċ", "ĉ", "ĉ", "ĉ", "Res", "et", "();", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "Windows", "Input", "Service", "::", "~", "Windows", "Input", "Service", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "void", "ĠWindows", "Input", "Service", "::", "Update", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "m", "_", "p", "Mouse", "->", "Update", "();", "Ċ", "ĉ", "ĉ", "ĉ", "m", "_", "p", "Key", "board", "->", "Update", "();", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "void", "ĠWindows", "Input", "Service", "::", "Res", "et", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "m", "_", "p", "Mouse", "->", "Res", "et", "();", "Ċ", "ĉ", "ĉ", "ĉ", "m", "_", "p", "Key", "board", "->", "Res", "et", "();", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "Mouse", "Interface", "*", "ĠWindows", "Input", "Service", "::", "Get", "Mouse", "()", "Ġconst", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġm", "_", "p", "Mouse", ";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "Key", "board", "Interface", "*", "ĠWindows", "Input", "Service", "::", "Get", "Key", "board", "()", "Ġconst", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġm", "_", "p", "Key", "board", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["m_pMouse", 7, "comesFrom", ["m_pMouse"], [2]], ["m_pMouse", 12, "comesFrom", ["m_pMouse"], [2]], ["m_pMouse", 17, "comesFrom", ["m_pMouse"], [2]], ["m_pKeyboard", 9, "comesFrom", ["m_pKeyboard"], [3]], ["m_pKeyboard", 14, "comesFrom", ["m_pKeyboard"], [3]], ["m_pKeyboard", 19, "comesFrom", ["m_pKeyboard"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::53", "code": "#include <mscorlib/System/Runtime/Serialization/mscorlib_System_Runtime_Serialization_SerializationObjectManager.h>\n#include <mscorlib/System/mscorlib_System_Type.h>\n#include <mscorlib/System/mscorlib_System_String.h>\n\n\n\nnamespace mscorlib\n{\n\tnamespace System\n\t{\n\t\tnamespace Runtime\n\t\t{\n\t\t\tnamespace Serialization\n\t\t\t{\n\n\t\t\t\t//Public Methods\n\t\t\t\tvoid SerializationObjectManager::RegisterObject(mscorlib::System::Object obj)\n\t\t\t\t{\n\t\t\t\t\t\tMonoType *__parameter_types__[1];\n\t\t\t\t\t\tvoid *__parameters__[1];\n\t\t\t\t\t\t__parameter_types__[0] = Global::GetType(typeid(obj).name());\n\t\t\t\t\t\t__parameters__[0] = (MonoObject*)obj;\n\t\t\t\t\t\tGlobal::InvokeMethod(\"mscorlib\", \"System.Runtime.Serialization\", \"SerializationObjectManager\", 0, NULL, \"RegisterObject\", __native_object__, 1, __parameter_types__, __parameters__, NULL);\n\t\t\t\t}\n\n\t\t\t\tvoid SerializationObjectManager::RaiseOnSerializedEvent()\n\t\t\t\t{\n\t\t\t\t\t\tGlobal::InvokeMethod(\"mscorlib\", \"System.Runtime.Serialization\", \"SerializationObjectManager\", 0, NULL, \"RaiseOnSerializedEvent\", __native_object__, 0, NULL, NULL, NULL);\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t}\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "ms", "cor", "lib", "/", "System", "/", "Runtime", "/", "Serial", "ization", "/", "ms", "cor", "lib", "_", "System", "_", "Runtime", "_", "Serial", "ization", "_", "Serial", "ization", "Object", "Manager", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "ms", "cor", "lib", "/", "System", "/", "ms", "cor", "lib", "_", "System", "_", "Type", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "ms", "cor", "lib", "/", "System", "/", "ms", "cor", "lib", "_", "System", "_", "String", ".", "h", ">", "ĊĊ", "Ċ", "Ċ", "names", "pace", "Ġm", "sc", "or", "lib", "Ċ", "{", "Ċ", "ĉ", "names", "pace", "ĠSystem", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "names", "pace", "ĠRuntime", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "names", "pace", "ĠSerial", "ization", "Ċ", "ĉ", "ĉ", "ĉ", "{", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "//", "Public", "ĠMethods", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "void", "ĠSerial", "ization", "Object", "Manager", "::", "Register", "Object", "(", "ms", "cor", "lib", "::", "System", "::", "Object", "Ġobj", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Mon", "o", "Type", "Ġ*", "__", "param", "eter", "_", "types", "__", "[", "1", "];", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "void", "Ġ*", "__", "param", "eters", "__", "[", "1", "];", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "__", "param", "eter", "_", "types", "__", "[", "0", "]", "Ġ=", "ĠGlobal", "::", "Get", "Type", "(", "type", "id", "(", "obj", ").", "name", "());", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "__", "param", "eters", "__", "[", "0", "]", "Ġ=", "Ġ(", "Mon", "o", "Object", "*)", "obj", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Global", "::", "Inv", "oke", "Method", "(\"", "ms", "cor", "lib", "\",", "Ġ\"", "System", ".", "Runtime", ".", "Serial", "ization", "\",", "Ġ\"", "Serial", "ization", "Object", "Manager", "\",", "Ġ0", ",", "ĠNULL", ",", "Ġ\"", "Register", "Object", "\",", "Ġ__", "native", "_", "object", "__", ",", "Ġ1", ",", "Ġ__", "param", "eter", "_", "types", "__", ",", "Ġ__", "param", "eters", "__", ",", "ĠNULL", ");", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "void", "ĠSerial", "ization", "Object", "Manager", "::", "Ra", "ise", "On", "Serial", "ized", "Event", "()", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Global", "::", "Inv", "oke", "Method", "(\"", "ms", "cor", "lib", "\",", "Ġ\"", "System", ".", "Runtime", ".", "Serial", "ization", "\",", "Ġ\"", "Serial", "ization", "Object", "Manager", "\",", "Ġ0", ",", "ĠNULL", ",", "Ġ\"", "Ra", "ise", "On", "Serial", "ized", "Event", "\",", "Ġ__", "native", "_", "object", "__", ",", "Ġ0", ",", "ĠNULL", ",", "ĠNULL", ",", "ĠNULL", ");", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["obj", 7, "comesFrom", ["obj"], [1]], ["obj", 10, "comesFrom", ["obj"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::54", "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <unistd.h>\n#include <utility>\n#include <sstream>\n\n#include \"./patricia-tree.hpp\"\n\n\nint main(void) {\n    std::cout << \"Add new command!\\n\";\n    PatriciaTree<Node<std::string, StringKeySpec>> pt;\n\n    std::string command = \"command\";\n    std::string key;\n\n    while(command != \"exit\") {\n        getline(std::cin, key);\n        pt.insertNode(key, command);\n        std::cout << pt << \"\\n\";\n    }\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "./", "pat", "ricia", "-", "tree", ".", "h", "pp", "\"", "ĊĊ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Add", "Ġnew", "Ġcommand", "!", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPatricia", "Tree", "<", "Node", "<", "std", "::", "string", ",", "ĠString", "Key", "Spec", ">>", "Ġpt", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġcommand", "Ġ=", "Ġ\"", "command", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġkey", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "command", "Ġ!=", "Ġ\"", "exit", "\")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġget", "line", "(", "std", "::", "cin", ",", "Ġkey", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpt", ".", "insert", "Node", "(", "key", ",", "Ġcommand", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġpt", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["command", 5, "comesFrom", ["command"], [3]], ["command", 12, "comesFrom", ["command"], [3]], ["key", 8, "comesFrom", ["key"], [4]], ["key", 11, "comesFrom", ["key"], [4]], ["pt", 9, "comesFrom", ["pt"], [2]], ["pt", 14, "comesFrom", ["pt"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::55", "code": "#include <stdio.h>\n#include <stdlib.h>\n\nstatic void foo()\n{\n  throw 123;\n}\n\nint main(int argc, char *argv[])\n{\n  int count = argc == 1 ? 10000 : atoi(argv[ 1 ]);\n  int n = 0;\n\n  for(int i = 0; i < count; ++i) {\n    try {\n      foo();\n    }\n    catch(...) {\n      ++n;\n    }\n  }\n\n  printf(\"%d\\n\", n);\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "static", "Ġvoid", "Ġfoo", "()", "Ċ", "{", "Ċ", "Ġ", "Ġthrow", "Ġ123", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġcount", "Ġ=", "Ġarg", "c", "Ġ==", "Ġ1", "Ġ?", "Ġ10000", "Ġ:", "Ġat", "oi", "(", "arg", "v", "[", "Ġ1", "Ġ]", ");", "Ċ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġcount", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtry", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfoo", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcatch", "(", "...)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġn", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 5, "comesFrom", ["argc"], [2]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["count", 11, "comesFrom", ["count"], [4]], ["n", 14, "comesFrom", ["n"], [8]], ["n", 16, "comesFrom", ["n"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::56", "code": "\n\n#include \"stdfx.h\"\n//#include \"tfxparam.h\"\n#include \"trop.h\"\n//===================================================================\n\nclass PremultiplyFx : public TStandardRasterFx {\n  FX_PLUGIN_DECLARATION(PremultiplyFx)\n  TRasterFxPort m_input;\n\npublic:\n  PremultiplyFx() { addInputPort(\"Source\", m_input); }\n  ~PremultiplyFx(){};\n\n  bool doGetBBox(double frame, TRectD &bBox, const TRenderSettings &info) {\n    if (m_input.isConnected())\n      return m_input->doGetBBox(frame, bBox, info);\n    else {\n      bBox = TRectD();\n      return false;\n    }\n  }\n\n  void doCompute(TTile &tile, double frame, const TRenderSettings &ri);\n  bool canHandle(const TRenderSettings &info, double frame) { return true; }\n};\n\n//------------------------------------------------------------------------------\n\nvoid PremultiplyFx::doCompute(TTile &tile, double frame,\n                              const TRenderSettings &ri) {\n  if (!m_input.isConnected()) return;\n\n  m_input->compute(tile, frame, ri);\n\n  TRop::premultiply(tile.getRaster());\n}\n\nFX_PLUGIN_IDENTIFIER(PremultiplyFx, \"premultiplyFx\");\n", "code_tokens": ["Ċ", "Ċ", "#", "include", "Ġ\"", "st", "dfx", ".", "h", "\"", "Ċ", "//", "#", "include", "Ġ\"", "t", "fx", "param", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "trop", ".", "h", "\"", "Ċ", "//", "================================================================", "===", "Ċ", "Ċ", "class", "ĠPrem", "ult", "ip", "ly", "F", "x", "Ġ:", "Ġpublic", "ĠT", "Standard", "R", "aster", "F", "x", "Ġ{", "Ċ", "Ġ", "ĠFX", "_", "PL", "UG", "IN", "_", "DEC", "L", "AR", "ATION", "(", "Prem", "ult", "ip", "ly", "F", "x", ")", "Ċ", "Ġ", "ĠTR", "aster", "F", "x", "Port", "Ġm", "_", "input", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "ĠPrem", "ult", "ip", "ly", "F", "x", "()", "Ġ{", "Ġadd", "Input", "Port", "(\"", "Source", "\",", "Ġm", "_", "input", ");", "Ġ}", "Ċ", "Ġ", "Ġ~", "Prem", "ult", "ip", "ly", "F", "x", "(){", "};", "ĊĊ", "Ġ", "Ġbool", "Ġdo", "Get", "B", "Box", "(", "double", "Ġframe", ",", "ĠTR", "ect", "D", "Ġ&", "b", "Box", ",", "Ġconst", "ĠTR", "ender", "Settings", "Ġ&", "info", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "m", "_", "input", ".", "is", "Connect", "ed", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġm", "_", "input", "->", "do", "Get", "B", "Box", "(", "frame", ",", "Ġb", "Box", ",", "Ġinfo", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġb", "Box", "Ġ=", "ĠTR", "ect", "D", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġvoid", "Ġdo", "Comp", "ute", "(", "TT", "ile", "Ġ&", "tile", ",", "Ġdouble", "Ġframe", ",", "Ġconst", "ĠTR", "ender", "Settings", "Ġ&", "ri", ");", "Ċ", "Ġ", "Ġbool", "Ġcan", "Handle", "(", "const", "ĠTR", "ender", "Settings", "Ġ&", "info", ",", "Ġdouble", "Ġframe", ")", "Ġ{", "Ġreturn", "Ġtrue", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------", "Ċ", "Ċ", "void", "ĠPrem", "ult", "ip", "ly", "F", "x", "::", "do", "Comp", "ute", "(", "TT", "ile", "Ġ&", "tile", ",", "Ġdouble", "Ġframe", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠTR", "ender", "Settings", "Ġ&", "ri", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "m", "_", "input", ".", "is", "Connect", "ed", "())", "Ġreturn", ";", "ĊĊ", "Ġ", "Ġm", "_", "input", "->", "comp", "ute", "(", "tile", ",", "Ġframe", ",", "Ġr", "i", ");", "ĊĊ", "Ġ", "ĠTR", "op", "::", "prem", "ult", "ip", "ly", "(", "tile", ".", "get", "R", "aster", "());", "Ċ", "}", "Ċ", "Ċ", "FX", "_", "PL", "UG", "IN", "_", "IDENT", "IF", "IER", "(", "Prem", "ult", "ip", "ly", "F", "x", ",", "Ġ\"", "prem", "ult", "ip", "ly", "F", "x", "\");", "Ċ"], "dataflow_graph": [["frame", 14, "comesFrom", ["frame"], [7]], ["frame", 35, "comesFrom", ["frame"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::57", "code": "#include <iostream>\nusing namespace std;\n#include <omp.h>\n\n#define SIZE 8\nint main(void){\n\tint x[SIZE];\n\tint sum=0;\n\tfor(int i=0;i<SIZE;i++){\n\t\tx[i]=i;\n\t}\n\t#pragma omp parallel for reduction (+:sum)\n\tfor(int i=0;i<SIZE;i++){\n                sum+=x[i];\n        }\n\tcout<<sum<<std::endl;\n\treturn 0; \n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "include", "Ġ<", "omp", ".", "h", ">", "Ċ", "Ċ", "#", "define", "ĠS", "IZE", "Ġ8", "Ċ", "int", "Ġmain", "(", "void", "){", "Ċ", "ĉ", "int", "Ġx", "[", "SIZE", "];", "Ċ", "ĉ", "int", "Ġsum", "=", "0", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "SIZE", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "x", "[", "i", "]=", "i", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "#", "pr", "ag", "ma", "Ġo", "mp", "Ġparallel", "Ġfor", "Ġreduction", "Ġ(+", ":", "sum", ")", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "SIZE", ";", "i", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsum", "+=", "x", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "ĉ", "c", "out", "<<", "sum", "<<", "std", "::", "end", "l", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ġ", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 11, "comesFrom", ["i"], [6]], ["i", 12, "comesFrom", ["i"], [6]], ["i", 14, "comesFrom", ["i"], [13]], ["i", 16, "comesFrom", ["i"], [13]], ["i", 19, "comesFrom", ["i"], [13]], ["sum", 21, "comesFrom", ["sum"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::58", "code": "#include \"arrow.h\"\n\n/**\n * @brief Arrow::Arrow\n */\nArrow::Arrow() : Shape(SHAPES::ARROW) {\n}\n\n/**\n * @brief Arrow::Arrow\n * @param col Colour of the new object\n * @param pos Starting point for the new object\n */\nArrow::Arrow(QColor col, QPoint pos) : Shape(SHAPES::ARROW, col, pos) {\n}\n\n/**\n * @brief Arrow::draw\n * Draws the object on top of the specified frame.\n * @param frame Frame to draw on.\n * @return Returns the frame with drawing.\n */\ncv::Mat Arrow::draw(cv::Mat &frame) {\n    cv::arrowedLine(frame, draw_start, draw_end, colour, LINE_THICKNESS);\n    return frame;\n}\n\n/**\n * @brief Arrow::handle_new_pos\n * Function to handle the new position of the mouse.\n * Does not need to store the new position.\n * @param pos\n */\nvoid Arrow::handle_new_pos(QPoint pos) {\n}\n\n/**\n * @brief Arrow::write\n * @param json\n * Writes to a Json object.\n */\nvoid Arrow::write(QJsonObject& json) {\n    write_shape(json);\n}\n\n/**\n * @brief Arrow::read\n * @param json\n * Reads from a Json object.\n */\nvoid Arrow::read(const QJsonObject& json) {\n    read_shape(json);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "arrow", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĠArrow", "::", "Ar", "row", "Ċ", "Ġ*/", "Ċ", "Ar", "row", "::", "Ar", "row", "()", "Ġ:", "ĠShape", "(", "SH", "AP", "ES", "::", "ARR", "OW", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĠArrow", "::", "Ar", "row", "Ċ", "Ġ*", "Ġ@", "param", "Ġcol", "ĠColour", "Ġof", "Ġthe", "Ġnew", "Ġobject", "Ċ", "Ġ*", "Ġ@", "param", "Ġpos", "ĠStarting", "Ġpoint", "Ġfor", "Ġthe", "Ġnew", "Ġobject", "Ċ", "Ġ*/", "Ċ", "Ar", "row", "::", "Ar", "row", "(", "Q", "Color", "Ġcol", ",", "ĠQ", "Point", "Ġpos", ")", "Ġ:", "ĠShape", "(", "SH", "AP", "ES", "::", "ARR", "OW", ",", "Ġcol", ",", "Ġpos", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĠArrow", "::", "draw", "Ċ", "Ġ*", "ĠDraw", "s", "Ġthe", "Ġobject", "Ġon", "Ġtop", "Ġof", "Ġthe", "Ġspecified", "Ġframe", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġframe", "ĠFrame", "Ġto", "Ġdraw", "Ġon", ".", "Ċ", "Ġ*", "Ġ@", "return", "ĠReturns", "Ġthe", "Ġframe", "Ġwith", "Ġdrawing", ".", "Ċ", "Ġ*/", "Ċ", "cv", "::", "Mat", "ĠArrow", "::", "draw", "(", "cv", "::", "Mat", "Ġ&", "frame", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "v", "::", "arrow", "ed", "Line", "(", "frame", ",", "Ġdraw", "_", "start", ",", "Ġdraw", "_", "end", ",", "Ġcolour", ",", "ĠLINE", "_", "TH", "ICK", "NESS", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġframe", ";", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĠArrow", "::", "handle", "_", "new", "_", "pos", "Ċ", "Ġ*", "ĠFunction", "Ġto", "Ġhandle", "Ġthe", "Ġnew", "Ġposition", "Ġof", "Ġthe", "Ġmouse", ".", "Ċ", "Ġ*", "ĠDoes", "Ġnot", "Ġneed", "Ġto", "Ġstore", "Ġthe", "Ġnew", "Ġposition", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġpos", "Ċ", "Ġ*/", "Ċ", "void", "ĠArrow", "::", "handle", "_", "new", "_", "pos", "(", "Q", "Point", "Ġpos", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĠArrow", "::", "write", "Ċ", "Ġ*", "Ġ@", "param", "Ġjson", "Ċ", "Ġ*", "ĠWrit", "es", "Ġto", "Ġa", "ĠJ", "son", "Ġobject", ".", "Ċ", "Ġ*/", "Ċ", "void", "ĠArrow", "::", "write", "(", "Q", "J", "son", "Object", "&", "Ġjson", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwrite", "_", "shape", "(", "json", ");", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĠArrow", "::", "read", "Ċ", "Ġ*", "Ġ@", "param", "Ġjson", "Ċ", "Ġ*", "ĠRead", "s", "Ġfrom", "Ġa", "ĠJ", "son", "Ġobject", ".", "Ċ", "Ġ*/", "Ċ", "void", "ĠArrow", "::", "read", "(", "const", "ĠQ", "J", "son", "Object", "&", "Ġjson", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġread", "_", "shape", "(", "json", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["col", 8, "comesFrom", ["col"], [4]], ["pos", 9, "comesFrom", ["pos"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::59", "code": "#include \"macros.h\"\n#include \"thread.h\"\n\nusing namespace std;\n\nndb_thread::~ndb_thread()\n{\n}\n\nvoid\nndb_thread::start()\n{\n  thd_ = std::move(thread(&ndb_thread::run, this));\n  if (daemon_)\n    thd_.detach();\n}\n\nvoid\nndb_thread::join()\n{\n  ALWAYS_ASSERT(!daemon_);\n  thd_.join();\n}\n\n// can be overloaded by subclasses\nvoid\nndb_thread::run()\n{\n  ALWAYS_ASSERT(body_);\n  body_();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "mac", "ros", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "thread", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "nd", "b", "_", "thread", "::", "~", "nd", "b", "_", "thread", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "Ċ", "nd", "b", "_", "thread", "::", "start", "()", "Ċ", "{", "Ċ", "Ġ", "Ġth", "d", "_", "Ġ=", "Ġstd", "::", "move", "(", "thread", "(&", "nd", "b", "_", "thread", "::", "run", ",", "Ġthis", "));", "Ċ", "Ġ", "Ġif", "Ġ(", "da", "emon", "_", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġth", "d", "_.", "det", "ach", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ċ", "nd", "b", "_", "thread", "::", "join", "()", "Ċ", "{", "Ċ", "Ġ", "ĠALWAYS", "_", "ASS", "ERT", "(", "!", "da", "emon", "_", ");", "Ċ", "Ġ", "Ġth", "d", "_.", "join", "();", "Ċ", "}", "Ċ", "Ċ", "//", "Ġcan", "Ġbe", "Ġoverloaded", "Ġby", "Ġsub", "classes", "Ċ", "void", "Ċ", "nd", "b", "_", "thread", "::", "run", "()", "Ċ", "{", "Ċ", "Ġ", "ĠALWAYS", "_", "ASS", "ERT", "(", "body", "_", ");", "Ċ", "Ġ", "Ġbody", "_", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["thd_", 8, "comesFrom", ["thd_"], [3]], ["thd_", 13, "comesFrom", ["thd_"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::60", "code": "#include <seqan/sequence.h>\n#include <seqan/basic.h>\n#include <seqan/find_motif.h>\n#include <seqan/file.h>\n#include <iostream>\n\nusing namespace seqan;\n\ntemplate<typename TString>//String<char>\nvoid countOneMers(TString const& str){\n\tIterator<TString>::Type StringIterator = begin(str);\n\t\n\tIterator<TString>::Type EndIterator = end(str);\n\tString<unsigned int> counter;\n\tresize(counter, 26,0);//26 = AlphSize\n\tunsigned int normalize =ordValue('a');\n\tunsigned int a=0;\n\twhile(StringIterator != EndIterator){\n\t\ta=  ordValue(*StringIterator);\n\t\tstd::cout<<a-normalize<<std::endl;\n\t\t++value(counter,(a-normalize));\n\t\t++StringIterator;\n\t}\n\tStringIterator = begin(str);\n\t//Iterator<String<unsigned int> >::Type countIterator = begin(counter);\n\tint i=0;\n\twhile(i<26){\n\t\tif(counter[i]>0)\n\t\t\tstd::cout<<char(i+'a')<<\" \"<<counter[i]<<std::endl;\n\t\t++i;\n\t\t\n\t}\n}\nvoid replaceAs(String<char>& str){\n\tstr=\"hi\";\n\n\n}\n\nint main(){\n\n\tString<char> str = \"helloworld\";\n\t//countOneMers(str);\n\treplaceAs(str);\n\tstd::cout<<str;\n\n\n\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "basic", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "find", "_", "mot", "if", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", "String", ">", "//", "String", "<", "char", ">", "Ċ", "void", "Ġcount", "One", "M", "ers", "(", "T", "String", "Ġconst", "&", "Ġstr", "){", "Ċ", "ĉ", "Iterator", "<", "T", "String", ">", "::", "Type", "ĠString", "Iterator", "Ġ=", "Ġbegin", "(", "str", ");", "Ċ", "ĉ", "Ċ", "ĉ", "Iterator", "<", "T", "String", ">", "::", "Type", "ĠEnd", "Iterator", "Ġ=", "Ġend", "(", "str", ");", "Ċ", "ĉ", "String", "<", "unsigned", "Ġint", ">", "Ġcounter", ";", "Ċ", "ĉ", "res", "ize", "(", "counter", ",", "Ġ26", ",", "0", ");", "//", "26", "Ġ=", "ĠAlph", "Size", "Ċ", "ĉ", "unsigned", "Ġint", "Ġnormal", "ize", "Ġ=", "ord", "Value", "('", "a", "');", "Ċ", "ĉ", "unsigned", "Ġint", "Ġa", "=", "0", ";", "Ċ", "ĉ", "while", "(", "String", "Iterator", "Ġ!=", "ĠEnd", "Iterator", "){", "Ċ", "ĉ", "ĉ", "a", "=", "Ġ", "Ġord", "Value", "(*", "String", "Iterator", ");", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "<<", "a", "-", "normal", "ize", "<<", "std", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "++", "value", "(", "counter", ",", "(", "a", "-", "normal", "ize", "));", "Ċ", "ĉ", "ĉ", "++", "String", "Iterator", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "String", "Iterator", "Ġ=", "Ġbegin", "(", "str", ");", "Ċ", "ĉ", "//", "Iterator", "<", "String", "<", "unsigned", "Ġint", ">", "Ġ>", "::", "Type", "Ġcount", "Iterator", "Ġ=", "Ġbegin", "(", "counter", ");", "Ċ", "ĉ", "int", "Ġi", "=", "0", ";", "Ċ", "ĉ", "while", "(", "i", "<", "26", "){", "Ċ", "ĉ", "ĉ", "if", "(", "counter", "[", "i", "]", ">", "0", ")", "Ċ", "ĉ", "ĉ", "ĉ", "std", "::", "c", "out", "<<", "char", "(", "i", "+", "'", "a", "')", "<<", "\"", "Ġ\"", "<<", "counter", "[", "i", "]", "<<", "std", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "++", "i", ";", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "void", "Ġreplace", "As", "(", "String", "<", "char", ">", "&", "Ġstr", "){", "Ċ", "ĉ", "str", "=\"", "hi", "\";", "ĊĊ", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "ĊĊ", "ĉ", "String", "<", "char", ">", "Ġstr", "Ġ=", "Ġ\"", "hell", "ow", "orld", "\";", "Ċ", "ĉ", "//", "count", "One", "M", "ers", "(", "str", ");", "Ċ", "ĉ", "replace", "As", "(", "str", ");", "Ċ", "ĉ", "std", "::", "c", "out", "<<", "str", ";", "ĊĊ", "ĊĊ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["str", 48, "comesFrom", ["str"], [46]], ["str", 50, "comesFrom", ["str"], [46]], ["counter", 11, "comesFrom", ["counter"], [9]], ["counter", 25, "comesFrom", ["counter"], [9]], ["counter", 34, "comesFrom", ["counter"], [9]], ["counter", 38, "comesFrom", ["counter"], [9]], ["StringIterator", 15, "comesFrom", ["StringIterator"], [3]], ["StringIterator", 19, "comesFrom", ["StringIterator"], [3]], ["StringIterator", 28, "comesFrom", ["StringIterator"], [3]], ["EndIterator", 16, "comesFrom", ["EndIterator"], [6]], ["a", 21, "comesFrom", ["a"], [17]], ["a", 26, "comesFrom", ["a"], [17]], ["normalize", 22, "comesFrom", ["normalize"], [12]], ["normalize", 27, "comesFrom", ["normalize"], [12]], ["i", 33, "comesFrom", ["i"], [32]], ["i", 35, "comesFrom", ["i"], [32]], ["i", 37, "comesFrom", ["i"], [32]], ["i", 39, "comesFrom", ["i"], [32]], ["i", 41, "comesFrom", ["i"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::61", "code": "#include \"UniformBuffer.hpp\"\n\n#include <iostream>\n#include <cstring>\n\nUniformBuffer::UniformBuffer(const void* data, unsigned int size, VkDevice device, VkPhysicalDevice physicalDevice, VkDescriptorPool descriptorPool, VkShaderStageFlags flags) : Buffer(device, physicalDevice, descriptorPool) {\n    this->device = device;\n    this->physicalDevice = physicalDevice;\n    this->descriptorPool = descriptorPool;\n    \n    createBuffer(size, VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT, VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT, &buffer, &bufferMemory);\n    \n    // Copy data to mapped memory.\n    setData(data, size);\n    \n    // Create descriptor set.\n    createDescriptorSetLayout(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER, flags);\n    createDescriptorSet(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER, buffer, size);\n}\n\nUniformBuffer::~UniformBuffer() {\n    vkDestroyBuffer(device, buffer, nullptr);\n    vkFreeMemory(device, bufferMemory, nullptr);\n}\n\nvoid UniformBuffer::setData(const void* data, unsigned int size) {\n    void* mappedMemory;\n    vkMapMemory(device, bufferMemory, 0, size, 0, &mappedMemory);\n    memcpy(mappedMemory, data, size);\n    vkUnmapMemory(device, bufferMemory);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Un", "iform", "Buffer", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "Ċ", "Un", "iform", "Buffer", "::", "Un", "iform", "Buffer", "(", "const", "Ġvoid", "*", "Ġdata", ",", "Ġunsigned", "Ġint", "Ġsize", ",", "ĠV", "k", "Device", "Ġdevice", ",", "ĠV", "k", "Physical", "Device", "Ġphysical", "Device", ",", "ĠV", "k", "Desc", "ript", "or", "Pool", "Ġdescriptor", "Pool", ",", "ĠV", "k", "Sh", "ader", "Stage", "Flags", "Ġflags", ")", "Ġ:", "ĠBuffer", "(", "device", ",", "Ġphysical", "Device", ",", "Ġdescriptor", "Pool", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "device", "Ġ=", "Ġdevice", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "physical", "Device", "Ġ=", "Ġphysical", "Device", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "desc", "ript", "or", "Pool", "Ġ=", "Ġdescriptor", "Pool", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcreate", "Buffer", "(", "size", ",", "ĠVK", "_", "BU", "FFER", "_", "US", "AGE", "_", "UN", "IF", "OR", "M", "_", "BU", "FFER", "_", "BIT", ",", "ĠVK", "_", "M", "EM", "ORY", "_", "PR", "OPER", "TY", "_", "H", "OST", "_", "VIS", "IBLE", "_", "BIT", "Ġ|", "ĠVK", "_", "M", "EM", "ORY", "_", "PR", "OPER", "TY", "_", "H", "OST", "_", "CO", "HER", "ENT", "_", "BIT", ",", "Ġ&", "buffer", ",", "Ġ&", "buffer", "Memory", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠCopy", "Ġdata", "Ġto", "Ġmapped", "Ġmemory", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Data", "(", "data", ",", "Ġsize", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠCreate", "Ġdescriptor", "Ġset", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcreate", "Desc", "ript", "or", "Set", "Layout", "(", "VK", "_", "DES", "CRIP", "TOR", "_", "TYPE", "_", "UN", "IF", "OR", "M", "_", "BU", "FFER", ",", "Ġflags", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcreate", "Desc", "ript", "or", "Set", "(", "VK", "_", "DES", "CRIP", "TOR", "_", "TYPE", "_", "UN", "IF", "OR", "M", "_", "BU", "FFER", ",", "Ġbuffer", ",", "Ġsize", ");", "Ċ", "}", "Ċ", "Ċ", "Un", "iform", "Buffer", "::", "~", "Un", "iform", "Buffer", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġv", "k", "Destroy", "Buffer", "(", "device", ",", "Ġbuffer", ",", "Ġnull", "ptr", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġv", "k", "Free", "Memory", "(", "device", ",", "Ġbuffer", "Memory", ",", "Ġnull", "ptr", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠUniform", "Buffer", "::", "set", "Data", "(", "const", "Ġvoid", "*", "Ġdata", ",", "Ġunsigned", "Ġint", "Ġsize", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "*", "Ġmapped", "Memory", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġv", "k", "Map", "Memory", "(", "device", ",", "Ġbuffer", "Memory", ",", "Ġ0", ",", "Ġsize", ",", "Ġ0", ",", "Ġ&", "m", "apped", "Memory", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmem", "c", "py", "(", "m", "apped", "Memory", ",", "Ġdata", ",", "Ġsize", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġv", "k", "Un", "map", "Memory", "(", "device", ",", "Ġbuffer", "Memory", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["device", 8, "comesFrom", ["device"], [3]], ["device", 11, "comesFrom", ["device"], [3]], ["device", 12, "comesFrom", ["device"], [3]], ["device", 36, "comesFrom", ["device"], [3]], ["device", 39, "comesFrom", ["device"], [3]], ["device", 46, "comesFrom", ["device"], [3]], ["device", 55, "comesFrom", ["device"], [3]], ["physicalDevice", 9, "comesFrom", ["physicalDevice"], [4]], ["physicalDevice", 13, "comesFrom", ["physicalDevice"], [4]], ["physicalDevice", 14, "comesFrom", ["physicalDevice"], [4]], ["descriptorPool", 10, "comesFrom", ["descriptorPool"], [5]], ["descriptorPool", 15, "comesFrom", ["descriptorPool"], [5]], ["descriptorPool", 16, "comesFrom", ["descriptorPool"], [5]], ["size", 18, "comesFrom", ["size"], [2]], ["size", 26, "comesFrom", ["size"], [2]], ["size", 33, "comesFrom", ["size"], [2]], ["size", 48, "comesFrom", ["size"], [43]], ["size", 53, "comesFrom", ["size"], [43]], ["flags", 29, "comesFrom", ["flags"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::62", "code": "#include <iostream>\n#include <map>\n#include <stdexcept>\n\nusing namespace std;\n\n\nint main(int argc, char* argv[]){\n\n\tmap<string, int> m;\n\t\n\tm[\"bob\"] = 56;\n\tm[\"alice\"] = 89;\n\tm[\"billy\"] = 3;\n\t\n\t// print it out\n\tmap<string,int>::iterator i;\n\tfor(i = m.begin(); i != m.end(); i++){\n\t\tcout << i->first << \": \" << i->second << endl;\n\t}\n\t\n\tcout << \"size: \" << m.size() << endl << endl;\n\t\n\ti = m.find(\"billy\");\n\tif(i == m.end()){ \n\t\tcout << \"No billy!\\n\";\n\t}else{\n\t\tcout << i->first << \": \" << i->second << endl;\n\t}\n\t\n\t\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "{", "ĊĊ", "ĉ", "map", "<", "string", ",", "Ġint", ">", "Ġm", ";", "Ċ", "ĉ", "Ċ", "ĉ", "m", "[\"", "b", "ob", "\"]", "Ġ=", "Ġ56", ";", "Ċ", "ĉ", "m", "[\"", "al", "ice", "\"]", "Ġ=", "Ġ89", ";", "Ċ", "ĉ", "m", "[\"", "b", "illy", "\"]", "Ġ=", "Ġ3", ";", "Ċ", "ĉ", "Ċ", "ĉ", "//", "Ġprint", "Ġit", "Ġout", "Ċ", "ĉ", "map", "<", "string", ",", "int", ">", "::", "iterator", "Ġi", ";", "Ċ", "ĉ", "for", "(", "i", "Ġ=", "Ġm", ".", "begin", "();", "Ġi", "Ġ!=", "Ġm", ".", "end", "();", "Ġi", "++", "){", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġi", "->", "first", "Ġ<<", "Ġ\"", ":", "Ġ\"", "Ġ<<", "Ġi", "->", "second", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "size", ":", "Ġ\"", "Ġ<<", "Ġm", ".", "size", "()", "Ġ<<", "Ġend", "l", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "Ċ", "ĉ", "i", "Ġ=", "Ġm", ".", "find", "(\"", "b", "illy", "\");", "Ċ", "ĉ", "if", "(", "i", "Ġ==", "Ġm", ".", "end", "()", "){", "Ġ", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "No", "Ġbill", "y", "!", "\\", "n", "\";", "Ċ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġi", "->", "first", "Ġ<<", "Ġ\"", ":", "Ġ\"", "Ġ<<", "Ġi", "->", "second", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["m", 5, "comesFrom", ["m"], [4]], ["m", 6, "comesFrom", ["m"], [4]], ["m", 7, "comesFrom", ["m"], [4]], ["m", 10, "comesFrom", ["m"], [4]], ["m", 13, "comesFrom", ["m"], [4]], ["m", 23, "comesFrom", ["m"], [4]], ["m", 28, "comesFrom", ["m"], [4]], ["m", 31, "comesFrom", ["m"], [4]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]], ["i", 17, "comesFrom", ["i"], [9]], ["i", 19, "comesFrom", ["i"], [9]], ["i", 30, "comesFrom", ["i"], [27]], ["i", 35, "comesFrom", ["i"], [27]], ["i", 37, "comesFrom", ["i"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::63", "code": "class Base {\npublic:\n\tResource *p;\n\tBase() {\n\t\tp = createResource();\n\t}\n\tvirtual void f() { //has virtual function\n\t\t//...\n\t}\n\t//...\n\t~Base() { //wrong: is non-virtual\n\t\tfreeResource(p);\n\t}\n};\n\nclass Derived: public Base {\npublic:\n\tResource *dp;\n\tDerived() {\n\t\tdp = createResource2();\n\t}\n\t~Derived() {\n\t\tfreeResource2(dp);\n\t}\n};\n\nint f() {\n\tBase *b = new Derived(); //creates resources for both Base::p and Derived::dp\n\t//...\n\n\t//will only call Base::~Base(), leaking the resource dp.\n\t//Change both destructors to virtual to ensure they are both called.\n\tdelete b;\n}\n", "code_tokens": ["Ġclass", "ĠBase", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "Resource", "Ġ*", "p", ";", "Ċ", "ĉ", "Base", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "p", "Ġ=", "Ġcreate", "Resource", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "virtual", "Ġvoid", "Ġf", "()", "Ġ{", "Ġ//", "has", "Ġvirtual", "Ġfunction", "Ċ", "ĉ", "ĉ", "//", "...", "Ċ", "ĉ", "}", "Ċ", "ĉ", "//", "...", "Ċ", "ĉ", "~", "Base", "()", "Ġ{", "Ġ//", "wrong", ":", "Ġis", "Ġnon", "-", "virtual", "Ċ", "ĉ", "ĉ", "free", "Resource", "(", "p", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠDer", "ived", ":", "Ġpublic", "ĠBase", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "Resource", "Ġ*", "dp", ";", "Ċ", "ĉ", "Der", "ived", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "dp", "Ġ=", "Ġcreate", "Resource", "2", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "~", "Der", "ived", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "free", "Resource", "2", "(", "dp", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġf", "()", "Ġ{", "Ċ", "ĉ", "Base", "Ġ*", "b", "Ġ=", "Ġnew", "ĠDer", "ived", "();", "Ġ//", "creat", "es", "Ġresources", "Ġfor", "Ġboth", "ĠBase", "::", "p", "Ġand", "ĠDer", "ived", "::", "dp", "Ċ", "ĉ", "//", "...", "ĊĊ", "ĉ", "//", "will", "Ġonly", "Ġcall", "ĠBase", "::", "~", "Base", "(),", "Ġleaking", "Ġthe", "Ġresource", "Ġd", "p", ".", "Ċ", "ĉ", "//", "Change", "Ġboth", "Ġdestruct", "ors", "Ġto", "Ġvirtual", "Ġto", "Ġensure", "Ġthey", "Ġare", "Ġboth", "Ġcalled", ".", "Ċ", "ĉ", "delete", "Ġb", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["p", 7, "comesFrom", ["p"], [2]], ["dp", 14, "comesFrom", ["dp"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::64", "code": "/*\nA small frog wants to get to the other side of the road. The frog is currently located at position X and wants to get to a position greater than or equal to Y. The small frog always jumps a fixed distance, D.\nCount the minimal number of jumps that the small frog must perform to reach its target.\nWrite a function:\nint solution(int X, int Y, int D);\nthat, given three integers X, Y and D, returns the minimal number of jumps from position X to a position equal to or greater than Y.\n\n*/\n// you can write to stdout for debugging purposes, e.g.\n// printf(\"this is a debug message\\n\");\n\nint solution(int X, int Y, int D) {\n    // write your code in C99\n    int diff=Y-X;\n    if(diff%D==0)\n        return diff/D;\n    else\n        return diff/D+1;   \n}\n", "code_tokens": ["Ġ/*", "Ċ", "A", "Ġsmall", "Ġfrog", "Ġwants", "Ġto", "Ġget", "Ġto", "Ġthe", "Ġother", "Ġside", "Ġof", "Ġthe", "Ġroad", ".", "ĠThe", "Ġfrog", "Ġis", "Ġcurrently", "Ġlocated", "Ġat", "Ġposition", "ĠX", "Ġand", "Ġwants", "Ġto", "Ġget", "Ġto", "Ġa", "Ġposition", "Ġgreater", "Ġthan", "Ġor", "Ġequal", "Ġto", "ĠY", ".", "ĠThe", "Ġsmall", "Ġfrog", "Ġalways", "Ġjumps", "Ġa", "Ġfixed", "Ġdistance", ",", "ĠD", ".", "Ċ", "Count", "Ġthe", "Ġminimal", "Ġnumber", "Ġof", "Ġjumps", "Ġthat", "Ġthe", "Ġsmall", "Ġfrog", "Ġmust", "Ġperform", "Ġto", "Ġreach", "Ġits", "Ġtarget", ".", "Ċ", "Write", "Ġa", "Ġfunction", ":", "Ċ", "int", "Ġsolution", "(", "int", "ĠX", ",", "Ġint", "ĠY", ",", "Ġint", "ĠD", ");", "Ċ", "that", ",", "Ġgiven", "Ġthree", "Ġintegers", "ĠX", ",", "ĠY", "Ġand", "ĠD", ",", "Ġreturns", "Ġthe", "Ġminimal", "Ġnumber", "Ġof", "Ġjumps", "Ġfrom", "Ġposition", "ĠX", "Ġto", "Ġa", "Ġposition", "Ġequal", "Ġto", "Ġor", "Ġgreater", "Ġthan", "ĠY", ".", "Ċ", "Ċ", "*/", "Ċ", "//", "Ġyou", "Ġcan", "Ġwrite", "Ġto", "Ġstd", "out", "Ġfor", "Ġdebugging", "Ġpurposes", ",", "Ġe", ".", "g", ".", "Ċ", "//", "Ġprintf", "(\"", "this", "Ġis", "Ġa", "Ġdebug", "Ġmessage", "\\", "n", "\");", "Ċ", "Ċ", "int", "Ġsolution", "(", "int", "ĠX", ",", "Ġint", "ĠY", ",", "Ġint", "ĠD", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġwrite", "Ġyour", "Ġcode", "Ġin", "ĠC", "99", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġdiff", "=", "Y", "-", "X", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "diff", "%", "D", "==", "0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġdiff", "/", "D", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġdiff", "/", "D", "+", "1", ";", "Ġ", "Ġ", "Ġ", "Ċ", "}", "Ċ"], "dataflow_graph": [["Y", 5, "comesFrom", ["Y"], [2]], ["X", 6, "comesFrom", ["X"], [1]], ["diff", 7, "comesFrom", ["diff"], [4]], ["diff", 9, "comesFrom", ["diff"], [4]], ["diff", 11, "comesFrom", ["diff"], [4]], ["D", 8, "comesFrom", ["D"], [3]], ["D", 10, "comesFrom", ["D"], [3]], ["D", 12, "comesFrom", ["D"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::65", "code": "\n#include <iostream>\n\n#include \"common.h\"\n\n\nusing namespace storage;\nusing namespace std;\n\n\nStorageInterface* s = NULL;\n\n\nvoid\ntest(const string& device)\n{\n    ResizeInfo resize_info;\n    ContentInfo content_info;\n\n    if (s->getFreeInfo(device, true, resize_info, true, content_info, true))\n    {\n\tcout << device << \" true\" << endl;\n\tcout << \"    \" << resize_info.resize_freeK << \" \" << resize_info.df_freeK << \" \"\n\t     << resize_info.usedK << \" \" << resize_info.resize_ok << endl;\n\tcout << \"    \" << content_info.windows << \" \" << content_info.efi << \" \"\n\t     << content_info.homes << endl;\n    }\n    else\n    {\n\tcout << device << \" false\" << endl;\n    }\n}\n\n\nint\nmain()\n{\n    cout.setf(std::ios::boolalpha);\n\n    setup_logger();\n\n    setup_system(\"thalassa\");\n\n    s = createStorageInterface(TestEnvironment());\n\n    test(\"/dev/system/arvin\");\n    test(\"/dev/system/root\");\n\n    delete s;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "common", ".", "h", "\"", "ĊĊ", "Ċ", "using", "Ġnamespace", "Ġstorage", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "Storage", "Interface", "*", "Ġs", "Ġ=", "ĠNULL", ";", "ĊĊ", "Ċ", "void", "Ċ", "test", "(", "const", "Ġstring", "&", "Ġdevice", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠRes", "ize", "Info", "Ġresize", "_", "info", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠContent", "Info", "Ġcontent", "_", "info", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "->", "get", "Free", "Info", "(", "device", ",", "Ġtrue", ",", "Ġresize", "_", "info", ",", "Ġtrue", ",", "Ġcontent", "_", "info", ",", "Ġtrue", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġdevice", "Ġ<<", "Ġ\"", "Ġtrue", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Ġ", "Ġ", "Ġ", "Ġ\"", "Ġ<<", "Ġresize", "_", "info", ".", "res", "ize", "_", "free", "K", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġresize", "_", "info", ".", "df", "_", "free", "K", "Ġ<<", "Ġ\"", "Ġ\"", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġresize", "_", "info", ".", "used", "K", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġresize", "_", "info", ".", "res", "ize", "_", "ok", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Ġ", "Ġ", "Ġ", "Ġ\"", "Ġ<<", "Ġcontent", "_", "info", ".", "windows", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġcontent", "_", "info", ".", "ef", "i", "Ġ<<", "Ġ\"", "Ġ\"", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġcontent", "_", "info", ".", "h", "omes", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġdevice", "Ġ<<", "Ġ\"", "Ġfalse", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", ".", "set", "f", "(", "std", "::", "ios", "::", "bool", "alpha", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġsetup", "_", "log", "ger", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġsetup", "_", "system", "(\"", "thal", "ass", "a", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġs", "Ġ=", "Ġcreate", "Storage", "Interface", "(", "Test", "Environment", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġtest", "(\"", "/", "dev", "/", "system", "/", "ar", "vin", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "(\"", "/", "dev", "/", "system", "/", "root", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġs", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["s", 47, "comesFrom", ["s"], [42]], ["resize_info", 10, "comesFrom", ["resize_info"], [5]], ["resize_info", 16, "comesFrom", ["resize_info"], [5]], ["resize_info", 18, "comesFrom", ["resize_info"], [5]], ["resize_info", 20, "comesFrom", ["resize_info"], [5]], ["resize_info", 22, "comesFrom", ["resize_info"], [5]], ["content_info", 11, "comesFrom", ["content_info"], [6]], ["content_info", 26, "comesFrom", ["content_info"], [6]], ["content_info", 28, "comesFrom", ["content_info"], [6]], ["content_info", 30, "comesFrom", ["content_info"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::66", "code": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nlong long n, ans = 0;\r\nlong long dn[500][500];\r\n\r\n\r\nlong long rec(long long prlvl, long long sum)\r\n{\r\n\tif (sum < 0) return 0;\r\n\telse if (sum == 0) return 1;\r\n\telse\r\n\t{\r\n\t\tif (dn[prlvl][sum] != -1)\r\n\t\t\treturn dn[prlvl][sum];\r\n\t\telse\r\n\t\t{\r\n\t\t\tlong long res = 0;\r\n\t\t\tfor (int i = 1; i<prlvl; i++)\r\n\t\t\t\tres += rec(i, sum - i);\r\n\t\t\treturn dn[prlvl][sum] = res;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid memorySet()\r\n{\r\n\tfor (int i = 0; i<500; i++)\r\n\tfor (int j = 0; j<500; j++) dn[i][j] = -1;\r\n}\r\n\r\nint main()\r\n{\r\n\tmemorySet();\r\n\r\n\tcin >> n;\r\n\tfor (int i = 1; i<n; i++)\r\n\t\tans += rec(i, n - i);\r\n\tcout << ans << endl;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "long", "Ġlong", "Ġn", ",", "Ġans", "Ġ=", "Ġ0", ";", "č", "Ċ", "long", "Ġlong", "Ġd", "n", "[", "500", "][", "500", "];", "č", "Ċ", "č", "Ċ", "č", "Ċ", "long", "Ġlong", "Ġrec", "(", "long", "Ġlong", "Ġpr", "lvl", ",", "Ġlong", "Ġlong", "Ġsum", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "if", "Ġ(", "sum", "Ġ<", "Ġ0", ")", "Ġreturn", "Ġ0", ";", "č", "Ċ", "ĉ", "else", "Ġif", "Ġ(", "sum", "Ġ==", "Ġ0", ")", "Ġreturn", "Ġ1", ";", "č", "Ċ", "ĉ", "else", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "dn", "[", "pr", "lvl", "][", "sum", "]", "Ġ!=", "Ġ-", "1", ")", "č", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġd", "n", "[", "pr", "lvl", "][", "sum", "];", "č", "Ċ", "ĉ", "ĉ", "else", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "long", "Ġlong", "Ġres", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "<", "pr", "lvl", ";", "Ġi", "++)", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "res", "Ġ+=", "Ġrec", "(", "i", ",", "Ġsum", "Ġ-", "Ġi", ");", "č", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġd", "n", "[", "pr", "lvl", "][", "sum", "]", "Ġ=", "Ġres", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġmemory", "Set", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "500", ";", "Ġi", "++)", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "<", "500", ";", "Ġj", "++)", "Ġd", "n", "[", "i", "][", "j", "]", "Ġ=", "Ġ-", "1", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "memory", "Set", "();", "č", "Ċ", "č", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", ";", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "č", "Ċ", "ĉ", "ĉ", "ans", "Ġ+=", "Ġrec", "(", "i", ",", "Ġn", "Ġ-", "Ġi", ");", "č", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġans", "Ġ<<", "Ġend", "l", ";", "č", "Ċ", "}"], "dataflow_graph": [["sum", 7, "comesFrom", ["sum"], [6]], ["sum", 8, "comesFrom", ["sum"], [6]], ["sum", 11, "comesFrom", ["sum"], [6]], ["sum", 14, "comesFrom", ["sum"], [6]], ["sum", 23, "comesFrom", ["sum"], [6]], ["sum", 27, "comesFrom", ["sum"], [6]], ["prlvl", 10, "comesFrom", ["prlvl"], [5]], ["prlvl", 13, "comesFrom", ["prlvl"], [5]], ["prlvl", 18, "comesFrom", ["prlvl"], [5]], ["prlvl", 26, "comesFrom", ["prlvl"], [5]], ["i", 17, "comesFrom", ["i"], [16]], ["i", 19, "comesFrom", ["i"], [16]], ["i", 22, "comesFrom", ["i"], [16]], ["i", 24, "comesFrom", ["i"], [16]], ["i", 31, "comesFrom", ["i"], [30]], ["i", 32, "comesFrom", ["i"], [30]], ["i", 37, "comesFrom", ["i"], [30]], ["i", 44, "comesFrom", ["i"], [43]], ["i", 46, "comesFrom", ["i"], [43]], ["i", 49, "comesFrom", ["i"], [43]], ["i", 51, "comesFrom", ["i"], [43]], ["res", 28, "comesFrom", ["res"], [20]], ["j", 34, "comesFrom", ["j"], [33]], ["j", 35, "comesFrom", ["j"], [33]], ["j", 38, "comesFrom", ["j"], [33]], ["n", 42, "comesFrom", ["n"], [1]], ["n", 45, "comesFrom", ["n"], [1]], ["n", 50, "comesFrom", ["n"], [1]], ["ans", 53, "comesFrom", ["ans"], [47]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::67", "code": "#include \"BitArray.h\"\n\nnamespace Rapid {\n\nvoid BitArrayT::append(char const * Bytes, std::size_t Size)\n{\n\tmBytes.append(Bytes, Size);\n}\n\nstd::size_t BitArrayT::size() const\n{\n\treturn mBytes.size() * 8;\n}\n\nbool BitArrayT::operator[](std::size_t Index) const\n{\n\tauto ByteIndex = Index / 8;\n\tauto BitIndex = Index % 8;\n\treturn static_cast<std::uint8_t>(mBytes[ByteIndex]) >> BitIndex & 0x1;\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Bit", "Array", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠRapid", "Ġ{", "Ċ", "Ċ", "void", "ĠBit", "Array", "T", "::", "append", "(", "char", "Ġconst", "Ġ*", "ĠBy", "tes", ",", "Ġstd", "::", "size", "_", "t", "ĠSize", ")", "Ċ", "{", "Ċ", "ĉ", "m", "Bytes", ".", "append", "(", "Bytes", ",", "ĠSize", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "size", "_", "t", "ĠBit", "Array", "T", "::", "size", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġm", "Bytes", ".", "size", "()", "Ġ*", "Ġ8", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠBit", "Array", "T", "::", "operator", "[", "](", "std", "::", "size", "_", "t", "ĠIndex", ")", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "auto", "ĠByte", "Index", "Ġ=", "ĠIndex", "Ġ/", "Ġ8", ";", "Ċ", "ĉ", "auto", "ĠBit", "Index", "Ġ=", "ĠIndex", "Ġ%", "Ġ8", ";", "Ċ", "ĉ", "return", "Ġstatic", "_", "cast", "<", "std", "::", "uint", "8", "_", "t", ">(", "m", "Bytes", "[", "Byte", "Index", "])", "Ġ>>", "ĠBit", "Index", "Ġ&", "Ġ0", "x", "1", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["Size", 6, "comesFrom", ["Size"], [2]], ["Index", 12, "comesFrom", ["Index"], [10]], ["Index", 14, "comesFrom", ["Index"], [10]], ["ByteIndex", 17, "comesFrom", ["ByteIndex"], [11]], ["BitIndex", 18, "comesFrom", ["BitIndex"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::68", "code": "template <typename Item>\nvoid mergesort(Item a[], int l, int r)\n{\n    if (r <= 1) return ;\n    int m = (r+1)/2;\n    mergesort(a, l, m);\n    mergesort(a, m+1, r);\n    merge(a, l, m, r);\n}\n", "code_tokens": ["Ġtemplate", "Ġ<", "ty", "pen", "ame", "ĠItem", ">", "Ċ", "void", "Ġmer", "ges", "ort", "(", "Item", "Ġa", "[", "],", "Ġint", "Ġl", ",", "Ġint", "Ġr", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "r", "Ġ<=", "Ġ1", ")", "Ġreturn", "Ġ;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", "Ġ=", "Ġ(", "r", "+", "1", ")/", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmer", "ges", "ort", "(", "a", ",", "Ġl", ",", "Ġm", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmer", "ges", "ort", "(", "a", ",", "Ġm", "+", "1", ",", "Ġr", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmerge", "(", "a", ",", "Ġl", ",", "Ġm", ",", "Ġr", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["r", 4, "comesFrom", ["r"], [3]], ["r", 6, "comesFrom", ["r"], [3]], ["r", 14, "comesFrom", ["r"], [3]], ["r", 19, "comesFrom", ["r"], [3]], ["l", 9, "comesFrom", ["l"], [2]], ["l", 17, "comesFrom", ["l"], [2]], ["m", 10, "comesFrom", ["m"], [5]], ["m", 13, "comesFrom", ["m"], [5]], ["m", 18, "comesFrom", ["m"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::69", "code": "// prng.cpp or pseudo-random number generator (prng)\n// Generates some pseudo-random numbers.\n#include <iostream>\n#include <iomanip>\nusing std::cout; // iostream\nusing std::endl;\nusing std::setw; // iomanip\n\n// function generates random number\nunsigned pseudoRNG() {\n\tstatic unsigned seed = 5493; // some (any) initial starting seed; initialized only once!\n\n\t// Take the current seed and generate new value from it\n\t// Due to larg numbers used to generate numbers is difficult to\n\t// predict next value from previous one.\n\t// Static keyword has program scope and is terminated at the end of\n\t// program. Seed value is stored every time in memory using previous \n\t// value.\n\tseed = (3852591 * seed + 5180347);\n\n\t// return value between 0 and 65535\n\treturn (seed % 65535);\n}\n\nint main()\n{\n\t// generate 100 random numbers - print in separate fields\n\tfor (int i = 1; i <= 100; i++) {\n\t\tcout << setw(8) << pseudoRNG();\n\n\t\t// new line every fifth number\n\t\tif (i % 5 == 0)\n\t\t\tcout << endl;\n\t}\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ//", "Ġpr", "ng", ".", "cpp", "Ġor", "Ġpseudo", "-", "random", "Ġnumber", "Ġgenerator", "Ġ(", "pr", "ng", ")", "Ċ", "//", "ĠGener", "ates", "Ġsome", "Ġpseudo", "-", "random", "Ġnumbers", ".", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "i", "oman", "ip", ">", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ġ//", "Ġi", "ost", "ream", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "using", "Ġstd", "::", "set", "w", ";", "Ġ//", "Ġi", "oman", "ip", "Ċ", "Ċ", "//", "Ġfunction", "Ġgenerates", "Ġrandom", "Ġnumber", "Ċ", "unsigned", "Ġpseudo", "R", "NG", "()", "Ġ{", "Ċ", "ĉ", "static", "Ġunsigned", "Ġseed", "Ġ=", "Ġ5", "493", ";", "Ġ//", "Ġsome", "Ġ(", "any", ")", "Ġinitial", "Ġstarting", "Ġseed", ";", "Ġinitialized", "Ġonly", "Ġonce", "!", "ĊĊ", "ĉ", "//", "ĠTake", "Ġthe", "Ġcurrent", "Ġseed", "Ġand", "Ġgenerate", "Ġnew", "Ġvalue", "Ġfrom", "Ġit", "Ċ", "ĉ", "//", "ĠDue", "Ġto", "Ġlarg", "Ġnumbers", "Ġused", "Ġto", "Ġgenerate", "Ġnumbers", "Ġis", "Ġdifficult", "Ġto", "Ċ", "ĉ", "//", "Ġpredict", "Ġnext", "Ġvalue", "Ġfrom", "Ġprevious", "Ġone", ".", "Ċ", "ĉ", "//", "ĠStatic", "Ġkeyword", "Ġhas", "Ġprogram", "Ġscope", "Ġand", "Ġis", "Ġterminated", "Ġat", "Ġthe", "Ġend", "Ġof", "Ċ", "ĉ", "//", "Ġprogram", ".", "ĠSeed", "Ġvalue", "Ġis", "Ġstored", "Ġevery", "Ġtime", "Ġin", "Ġmemory", "Ġusing", "Ġprevious", "Ġ", "Ċ", "ĉ", "//", "Ġvalue", ".", "Ċ", "ĉ", "seed", "Ġ=", "Ġ(", "385", "25", "91", "Ġ*", "Ġseed", "Ġ+", "Ġ5", "180", "347", ");", "ĊĊ", "ĉ", "//", "Ġreturn", "Ġvalue", "Ġbetween", "Ġ0", "Ġand", "Ġ655", "35", "Ċ", "ĉ", "return", "Ġ(", "seed", "Ġ%", "Ġ655", "35", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "//", "Ġgenerate", "Ġ100", "Ġrandom", "Ġnumbers", "Ġ-", "Ġprint", "Ġin", "Ġseparate", "Ġfields", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġ100", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġset", "w", "(", "8", ")", "Ġ<<", "Ġpseudo", "R", "NG", "();", "ĊĊ", "ĉ", "ĉ", "//", "Ġnew", "Ġline", "Ġevery", "Ġfifth", "Ġnumber", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "i", "Ġ%", "Ġ5", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["seed", 6, "comesFrom", ["seed"], [5]], ["seed", 7, "comesFrom", ["seed"], [5]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 11, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::70", "code": "#include \"Halide.h\"\n#include <tiramisu/utils.h>\n#include <cstdlib>\n#include <iostream>\n\n#include \"wrapper_test_71.h\"\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#ifdef __cplusplus\n}  // extern \"C\"\n#endif\n\n// We assume that the increment is 1.\nvoid reference_saxpy(int N1, float alpha, float *A, float *B)\n{\n\tfor (int i=0; i<N1; i++)\n\t\tB[i] = alpha*A[i] + B[i];\n}\n\nint main(int, char **)\n{\n    Halide::Buffer<float> a(1, \"a\");\n    Halide::Buffer<float> x(SIZE, \"x\");\n    Halide::Buffer<float> y_ref(SIZE, \"y_ref\");\n    Halide::Buffer<float> y(SIZE, \"y\");\n\n    init_buffer(x, (float)1);\n    init_buffer(y, (float)1);\n    init_buffer(y_ref, (float)1);\n    init_buffer(a, (float)1);\n\n    reference_saxpy(SIZE, 1, x.data(), y_ref.data());\n    tiramisu_generated_code(a.raw_buffer(), x.raw_buffer(), y.raw_buffer());\n\n    compare_buffers(\"test_\" + std::string(TEST_NUMBER_STR) + \"_\"  + std::string(TEST_NAME_STR), y, y_ref);\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Hal", "ide", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "t", "ir", "am", "isu", "/", "utils", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "wrapper", "_", "test", "_", "71", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "def", "Ġ__", "c", "plus", "plus", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġ{", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "if", "def", "Ġ__", "c", "plus", "plus", "Ċ", "}", "Ġ", "Ġ//", "Ġex", "tern", "Ġ\"", "C", "\"", "Ċ", "#", "endif", "Ċ", "Ċ", "//", "ĠWe", "Ġassume", "Ġthat", "Ġthe", "Ġincrement", "Ġis", "Ġ1", ".", "Ċ", "void", "Ġreference", "_", "s", "ax", "py", "(", "int", "ĠN", "1", ",", "Ġfloat", "Ġalpha", ",", "Ġfloat", "Ġ*", "A", ",", "Ġfloat", "Ġ*", "B", ")", "Ċ", "{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "N", "1", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "B", "[", "i", "]", "Ġ=", "Ġalpha", "*", "A", "[", "i", "]", "Ġ+", "ĠB", "[", "i", "];", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "Ġ**", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠHal", "ide", "::", "Buffer", "<", "float", ">", "Ġa", "(", "1", ",", "Ġ\"", "a", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠHal", "ide", "::", "Buffer", "<", "float", ">", "Ġx", "(", "SIZE", ",", "Ġ\"", "x", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠHal", "ide", "::", "Buffer", "<", "float", ">", "Ġy", "_", "ref", "(", "SIZE", ",", "Ġ\"", "y", "_", "ref", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠHal", "ide", "::", "Buffer", "<", "float", ">", "Ġy", "(", "SIZE", ",", "Ġ\"", "y", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġinit", "_", "buffer", "(", "x", ",", "Ġ(", "float", ")", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "_", "buffer", "(", "y", ",", "Ġ(", "float", ")", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "_", "buffer", "(", "y", "_", "ref", ",", "Ġ(", "float", ")", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "_", "buffer", "(", "a", ",", "Ġ(", "float", ")", "1", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreference", "_", "s", "ax", "py", "(", "SIZE", ",", "Ġ1", ",", "Ġx", ".", "data", "(),", "Ġy", "_", "ref", ".", "data", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtir", "am", "isu", "_", "generated", "_", "code", "(", "a", ".", "raw", "_", "buffer", "(),", "Ġx", ".", "raw", "_", "buffer", "(),", "Ġy", ".", "raw", "_", "buffer", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcompare", "_", "buff", "ers", "(\"", "test", "_", "\"", "Ġ+", "Ġstd", "::", "string", "(", "T", "EST", "_", "NUM", "BER", "_", "STR", ")", "Ġ+", "Ġ\"_", "\"", "Ġ", "Ġ+", "Ġstd", "::", "string", "(", "T", "EST", "_", "NAME", "_", "STR", "),", "Ġy", ",", "Ġy", "_", "ref", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["i", 12, "comesFrom", ["i"], [7]], ["i", 15, "comesFrom", ["i"], [7]], ["i", 17, "comesFrom", ["i"], [7]], ["N1", 9, "comesFrom", ["N1"], [3]], ["alpha", 13, "comesFrom", ["alpha"], [4]], ["x", 27, "comesFrom", ["x"], [20]], ["x", 36, "comesFrom", ["x"], [20]], ["x", 43, "comesFrom", ["x"], [20]], ["y", 29, "comesFrom", ["y"], [24]], ["y", 45, "comesFrom", ["y"], [24]], ["y", 52, "comesFrom", ["y"], [24]], ["y_ref", 31, "comesFrom", ["y_ref"], [22]], ["y_ref", 38, "comesFrom", ["y_ref"], [22]], ["y_ref", 53, "comesFrom", ["y_ref"], [22]], ["a", 33, "comesFrom", ["a"], [19]], ["a", 41, "comesFrom", ["a"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::71", "code": "/* This file is part of HSPlasma.\n *\n * HSPlasma is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * HSPlasma is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with HSPlasma.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"plSDL.h\"\n\nunsigned int plSDL::VariableLengthRead(hsStream* S, size_t size) {\n    if (size < 0x100)\n        return S->readByte();\n    else if (size < 0x10000)\n        return S->readShort();\n    else\n        return S->readInt();\n}\n\nvoid plSDL::VariableLengthWrite(hsStream* S, size_t size, unsigned int value) {\n    if (size < 0x100)\n        S->writeByte(value);\n    else if (size < 0x10000)\n        S->writeShort(value);\n    else\n        S->writeInt(value);\n}\n", "code_tokens": ["Ġ/*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠHS", "Pl", "asma", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠHS", "Pl", "asma", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠHS", "Pl", "asma", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠHS", "Pl", "asma", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "pl", "SD", "L", ".", "h", "\"", "Ċ", "Ċ", "unsigned", "Ġint", "Ġpl", "SD", "L", "::", "Variable", "Length", "Read", "(", "hs", "Stream", "*", "ĠS", ",", "Ġsize", "_", "t", "Ġsize", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "size", "Ġ<", "Ġ0", "x", "100", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠS", "->", "read", "Byte", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "size", "Ġ<", "Ġ0", "x", "10000", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠS", "->", "read", "Short", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠS", "->", "read", "Int", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpl", "SD", "L", "::", "Variable", "Length", "Write", "(", "hs", "Stream", "*", "ĠS", ",", "Ġsize", "_", "t", "Ġsize", ",", "Ġunsigned", "Ġint", "Ġvalue", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "size", "Ġ<", "Ġ0", "x", "100", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠS", "->", "write", "Byte", "(", "value", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "size", "Ġ<", "Ġ0", "x", "10000", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠS", "->", "write", "Short", "(", "value", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠS", "->", "write", "Int", "(", "value", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["size", 3, "comesFrom", ["size"], [2]], ["size", 6, "comesFrom", ["size"], [2]], ["size", 15, "comesFrom", ["size"], [13]], ["size", 19, "comesFrom", ["size"], [13]], ["value", 18, "comesFrom", ["value"], [14]], ["value", 22, "comesFrom", ["value"], [14]], ["value", 25, "comesFrom", ["value"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::72", "code": "#include \"stdafx.h\"\n#include \"com4j.h\"\n\nvoid error( JNIEnv* env, const char* file, int line, HRESULT hr, const char* msg ... ) {\n\t// format the message\n\tva_list va;\n\tva_start(va,msg);\n\n\tint len = _vscprintf(msg,va);\n\tchar* w = reinterpret_cast<char*>(alloca(len+1)); // +1 for '\\0'\n\tvsprintf(w,msg,va);\n\n\tenv->ExceptionClear();\n\tenv->Throw( (jthrowable)comexception_new_hr( env, env->NewStringUTF(w), hr, env->NewStringUTF(file), line ) );\n}\n\nvoid error( JNIEnv* env, const char* file, int line, const char* msg ... ) {\n\t// format the message\n\tva_list va;\n\tva_start(va,msg);\n\n\tint len = _vscprintf(msg,va);\n\tchar* w = reinterpret_cast<char*>(alloca(len+1)); // +1 for '\\0'\n\tvsprintf(w,msg,va);\n\n\tenv->ExceptionClear();\n\tenv->Throw( (jthrowable)comexception_new( env, env->NewStringUTF(w), env->NewStringUTF(file), line ) );\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "com", "4", "j", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġerror", "(", "ĠJ", "NI", "En", "v", "*", "Ġenv", ",", "Ġconst", "Ġchar", "*", "Ġfile", ",", "Ġint", "Ġline", ",", "ĠHR", "ES", "ULT", "Ġhr", ",", "Ġconst", "Ġchar", "*", "Ġmsg", "Ġ...", "Ġ)", "Ġ{", "Ċ", "ĉ", "//", "Ġformat", "Ġthe", "Ġmessage", "Ċ", "ĉ", "va", "_", "list", "Ġva", ";", "Ċ", "ĉ", "va", "_", "start", "(", "va", ",", "msg", ");", "ĊĊ", "ĉ", "int", "Ġlen", "Ġ=", "Ġ_", "v", "sc", "printf", "(", "msg", ",", "va", ");", "Ċ", "ĉ", "char", "*", "Ġw", "Ġ=", "Ġre", "interpret", "_", "cast", "<", "char", "*", ">(", "all", "oca", "(", "len", "+", "1", "));", "Ġ//", "Ġ+", "1", "Ġfor", "Ġ'", "\\", "0", "'", "Ċ", "ĉ", "vs", "printf", "(", "w", ",", "msg", ",", "va", ");", "ĊĊ", "ĉ", "env", "->", "Exception", "Clear", "();", "Ċ", "ĉ", "env", "->", "Throw", "(", "Ġ(", "j", "throw", "able", ")", "come", "x", "ception", "_", "new", "_", "hr", "(", "Ġenv", ",", "Ġenv", "->", "New", "String", "UTF", "(", "w", "),", "Ġhr", ",", "Ġenv", "->", "New", "String", "UTF", "(", "file", "),", "Ġline", "Ġ)", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "void", "Ġerror", "(", "ĠJ", "NI", "En", "v", "*", "Ġenv", ",", "Ġconst", "Ġchar", "*", "Ġfile", ",", "Ġint", "Ġline", ",", "Ġconst", "Ġchar", "*", "Ġmsg", "Ġ...", "Ġ)", "Ġ{", "Ċ", "ĉ", "//", "Ġformat", "Ġthe", "Ġmessage", "Ċ", "ĉ", "va", "_", "list", "Ġva", ";", "Ċ", "ĉ", "va", "_", "start", "(", "va", ",", "msg", ");", "ĊĊ", "ĉ", "int", "Ġlen", "Ġ=", "Ġ_", "v", "sc", "printf", "(", "msg", ",", "va", ");", "Ċ", "ĉ", "char", "*", "Ġw", "Ġ=", "Ġre", "interpret", "_", "cast", "<", "char", "*", ">(", "all", "oca", "(", "len", "+", "1", "));", "Ġ//", "Ġ+", "1", "Ġfor", "Ġ'", "\\", "0", "'", "Ċ", "ĉ", "vs", "printf", "(", "w", ",", "msg", ",", "va", ");", "ĊĊ", "ĉ", "env", "->", "Exception", "Clear", "();", "Ċ", "ĉ", "env", "->", "Throw", "(", "Ġ(", "j", "throw", "able", ")", "come", "x", "ception", "_", "new", "(", "Ġenv", ",", "Ġenv", "->", "New", "String", "UTF", "(", "w", "),", "Ġenv", "->", "New", "String", "UTF", "(", "file", "),", "Ġline", "Ġ)", "Ġ);", "Ċ", "}", "Ċ"], "dataflow_graph": [["va", 8, "comesFrom", ["va"], [6]], ["va", 13, "comesFrom", ["va"], [6]], ["va", 21, "comesFrom", ["va"], [6]], ["va", 43, "comesFrom", ["va"], [41]], ["va", 48, "comesFrom", ["va"], [41]], ["va", 56, "comesFrom", ["va"], [41]], ["len", 17, "comesFrom", ["len"], [10]], ["len", 52, "comesFrom", ["len"], [45]], ["hr", 31, "comesFrom", ["hr"], [4]], ["line", 35, "comesFrom", ["line"], [3]], ["line", 69, "comesFrom", ["line"], [39]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::73", "code": "// File: fig0621.cpp\n// Computer Systems, Fourth Edition\n// Figure 6.21\n\n#include <iostream>\nusing namespace std;\n\nint numPts;\nint value;\nint j;\n\nvoid printBar (int n) {\n   int k;\n   for (k = 1; k <= n; k++) {\n      cout << '*';\n   }\n   cout << endl;\n}\n\nint main () {\n   cin >> numPts;\n   for (j = 1; j <= numPts; j++) {\n      cin >> value;\n      printBar (value);\n   }\n   return 0;\n}\n", "code_tokens": ["Ġ//", "ĠFile", ":", "Ġfig", "06", "21", ".", "cpp", "Ċ", "//", "ĠComputer", "ĠSystems", ",", "ĠFourth", "ĠEdition", "Ċ", "//", "ĠFigure", "Ġ6", ".", "21", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġnum", "P", "ts", ";", "Ċ", "int", "Ġvalue", ";", "Ċ", "int", "Ġj", ";", "Ċ", "Ċ", "void", "Ġprint", "Bar", "Ġ(", "int", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġint", "Ġk", ";", "Ċ", "Ġ", "Ġ", "Ġfor", "Ġ(", "k", "Ġ=", "Ġ1", ";", "Ġk", "Ġ<=", "Ġn", ";", "Ġk", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ'", "*", "';", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġnum", "P", "ts", ";", "Ċ", "Ġ", "Ġ", "Ġfor", "Ġ(", "j", "Ġ=", "Ġ1", ";", "Ġj", "Ġ<=", "Ġnum", "P", "ts", ";", "Ġj", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġvalue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprint", "Bar", "Ġ(", "value", ");", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["k", 8, "comesFrom", ["k"], [7]], ["k", 10, "comesFrom", ["k"], [7]], ["n", 9, "comesFrom", ["n"], [5]], ["numPts", 16, "comesFrom", ["numPts"], [1]], ["numPts", 19, "comesFrom", ["numPts"], [1]], ["j", 18, "comesFrom", ["j"], [17]], ["j", 20, "comesFrom", ["j"], [17]], ["value", 22, "comesFrom", ["value"], [2]], ["value", 24, "comesFrom", ["value"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::74", "code": "/*\n *  Copyright (c) 2015 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree. An additional intellectual property rights grant can be found\n *  in the file PATENTS.  All contributing project authors may\n *  be found in the AUTHORS file in the root of the source tree.\n */\n#include \"modules/rtp_rtcp/source/rtp_format_h264.h\"\n\nnamespace webrtc {\nvoid FuzzOneInput(const uint8_t* data, size_t size) {\n  RtpDepacketizerH264 depacketizer;\n  RtpDepacketizer::ParsedPayload parsed_payload;\n  depacketizer.Parse(&parsed_payload, data, size);\n}\n}  // namespace webrtc\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "ĠThe", "ĠWeb", "R", "TC", "Ġproject", "Ġauthors", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ċ", "Ġ*", "Ġ", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġof", "Ġthe", "Ġsource", "Ċ", "Ġ*", "Ġ", "Ġtree", ".", "ĠAn", "Ġadditional", "Ġintellectual", "Ġproperty", "Ġrights", "Ġgrant", "Ġcan", "Ġbe", "Ġfound", "Ċ", "Ġ*", "Ġ", "Ġin", "Ġthe", "Ġfile", "ĠPAT", "ENTS", ".", "Ġ", "ĠAll", "Ġcontributing", "Ġproject", "Ġauthors", "Ġmay", "Ċ", "Ġ*", "Ġ", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠAUTH", "ORS", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġof", "Ġthe", "Ġsource", "Ġtree", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "modules", "/", "rt", "p", "_", "rt", "cp", "/", "source", "/", "rt", "p", "_", "format", "_", "h", "264", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġwe", "br", "tc", "Ġ{", "Ċ", "void", "ĠF", "uzz", "One", "Input", "(", "const", "Ġuint", "8", "_", "t", "*", "Ġdata", ",", "Ġsize", "_", "t", "Ġsize", ")", "Ġ{", "Ċ", "Ġ", "ĠR", "tp", "Dep", "acket", "izer", "H", "264", "Ġdep", "acket", "izer", ";", "Ċ", "Ġ", "ĠR", "tp", "Dep", "acket", "izer", "::", "P", "ars", "ed", "Pay", "load", "Ġparsed", "_", "pay", "load", ";", "Ċ", "Ġ", "Ġdep", "acket", "izer", ".", "Par", "se", "(&", "p", "ars", "ed", "_", "pay", "load", ",", "Ġdata", ",", "Ġsize", ");", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġwe", "br", "tc", "Ċ"], "dataflow_graph": [["depacketizer", 5, "comesFrom", ["depacketizer"], [3]], ["parsed_payload", 7, "comesFrom", ["parsed_payload"], [4]], ["size", 9, "comesFrom", ["size"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::75", "code": "#include \"vocabulary.h\"\n\nnamespace extractor {\n\nVocabulary::~Vocabulary() {}\n\nint Vocabulary::GetTerminalIndex(const string& word) {\n  int word_id = -1;\n  #pragma omp critical (vocabulary)\n  {\n    auto it = dictionary.find(word);\n    if (it != dictionary.end()) {\n      word_id = it->second;\n    } else {\n      word_id = words.size();\n      dictionary[word] = word_id;\n      words.push_back(word);\n    }\n  }\n  return word_id;\n}\n\nint Vocabulary::GetNonterminalIndex(int position) {\n  return -position;\n}\n\nbool Vocabulary::IsTerminal(int symbol) {\n  return symbol >= 0;\n}\n\nstring Vocabulary::GetTerminalValue(int symbol) {\n  string word;\n  #pragma omp critical (vocabulary)\n  word = words[symbol];\n  return word;\n}\n\nbool Vocabulary::operator==(const Vocabulary& other) const {\n  return words == other.words && dictionary == other.dictionary;\n}\n\n} // namespace extractor\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "voc", "abulary", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġextract", "or", "Ġ{", "Ċ", "Ċ", "V", "oc", "abulary", "::", "~", "V", "oc", "abulary", "()", "Ġ{}", "Ċ", "Ċ", "int", "ĠVoc", "abulary", "::", "Get", "Termin", "al", "Index", "(", "const", "Ġstring", "&", "Ġword", ")", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġword", "_", "id", "Ġ=", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ#", "pr", "ag", "ma", "Ġo", "mp", "Ġcritical", "Ġ(", "voc", "abulary", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġit", "Ġ=", "Ġdictionary", ".", "find", "(", "word", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "it", "Ġ!=", "Ġdictionary", ".", "end", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġword", "_", "id", "Ġ=", "Ġit", "->", "second", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġword", "_", "id", "Ġ=", "Ġwords", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdictionary", "[", "word", "]", "Ġ=", "Ġword", "_", "id", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwords", ".", "push", "_", "back", "(", "word", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġword", "_", "id", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠVoc", "abulary", "::", "Get", "Non", "termin", "al", "Index", "(", "int", "Ġposition", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġ-", "position", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠVoc", "abulary", "::", "Is", "Termin", "al", "(", "int", "Ġsymbol", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġsymbol", "Ġ>=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "string", "ĠVoc", "abulary", "::", "Get", "Termin", "al", "Value", "(", "int", "Ġsymbol", ")", "Ġ{", "Ċ", "Ġ", "Ġstring", "Ġword", ";", "Ċ", "Ġ", "Ġ#", "pr", "ag", "ma", "Ġo", "mp", "Ġcritical", "Ġ(", "voc", "abulary", ")", "Ċ", "Ġ", "Ġword", "Ġ=", "Ġwords", "[", "sy", "mbol", "];", "Ċ", "Ġ", "Ġreturn", "Ġword", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠVoc", "abulary", "::", "operator", "==", "(", "const", "ĠVoc", "abulary", "&", "Ġother", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġwords", "Ġ==", "Ġother", ".", "words", "Ġ&&", "Ġdictionary", "Ġ==", "Ġother", ".", "d", "ictionary", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġextract", "or", "Ċ"], "dataflow_graph": [["word", 36, "comesFrom", ["word"], [33]], ["it", 8, "comesFrom", ["it"], [4]], ["it", 12, "comesFrom", ["it"], [4]], ["word_id", 19, "comesFrom", ["word_id"], [14]], ["word_id", 23, "comesFrom", ["word_id"], [14]], ["position", 26, "comesFrom", ["position"], [25]], ["symbol", 29, "comesFrom", ["symbol"], [28]], ["symbol", 35, "comesFrom", ["symbol"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::76", "code": "#include \"bench_framework.hpp\"\n#include <mapnik/image_util.hpp>\n\nclass test : public benchmark::test_case\n{\n    mapnik::image_rgba8 im_;\npublic:\n    test(mapnik::parameters const& params)\n     : test_case(params),\n       im_(256,256) {}\n    bool validate() const\n    {\n        return true;\n    }\n    bool operator()() const\n    {\n        std::string out;\n        for (std::size_t i=0;i<iterations_;++i) {\n            out.clear();\n            out = mapnik::save_to_string(im_,\"png8:m=h:z=1\");\n        }\n        return true;\n    }\n};\n\nBENCHMARK(test,\"encoding blank png\")\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "bench", "_", "framework", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "map", "nik", "/", "image", "_", "util", ".", "h", "pp", ">", "Ċ", "Ċ", "class", "Ġtest", "Ġ:", "Ġpublic", "Ġbenchmark", "::", "test", "_", "case", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmap", "nik", "::", "image", "_", "rg", "ba", "8", "Ġim", "_", ";", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "(", "map", "nik", "::", "param", "eters", "Ġconst", "&", "Ġparams", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġtest", "_", "case", "(", "params", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġim", "_(", "256", ",", "256", ")", "Ġ{}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġvalidate", "()", "Ġconst", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġoperator", "()", "()", "Ġconst", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġout", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "std", "::", "size", "_", "t", "Ġi", "=", "0", ";", "i", "<", "iter", "ations", "_", ";", "++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", ".", "clear", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "Ġ=", "Ġmap", "nik", "::", "save", "_", "to", "_", "string", "(", "im", "_", ",\"", "png", "8", ":", "m", "=", "h", ":", "z", "=", "1", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "B", "EN", "CH", "M", "ARK", "(", "test", ",\"", "enc", "oding", "Ġblank", "Ġp", "ng", "\")", "Ċ"], "dataflow_graph": [["i", 9, "comesFrom", ["i"], [8]], ["i", 11, "comesFrom", ["i"], [8]], ["out", 12, "comesFrom", ["out"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::77", "code": "// Copyright (C) 2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <regex>\n#include <testsuite_performance.h>\n\nusing namespace __gnu_test;\n\nint main()\n{\n  time_counter time;\n  resource_counter resource;\n\n  start_counters(time, resource);\n\n  // this should get compiled to just L\"[abcd]\"\n  auto re = std::wregex(L'[' + std::wstring(300, L'a') + L\"bc\"\n                        + std::wstring(1000, 'a') + L\"d]\");\n  bool ok = true;\n  for (int i = 0; i < 100000; ++i)\n    ok = ok && (std::regex_match(L\"b\", re) && std::regex_match(L\"d\", re));\n\n  stop_counters(time, resource);\n  report_performance(__FILE__, \"\", time, resource);\n\n  return ok ? 0 : 1;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "re", "gex", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "performance", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġ__", "gnu", "_", "test", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtime", "_", "counter", "Ġtime", ";", "Ċ", "Ġ", "Ġresource", "_", "counter", "Ġresource", ";", "ĊĊ", "Ġ", "Ġstart", "_", "c", "ounters", "(", "time", ",", "Ġresource", ");", "ĊĊ", "Ġ", "Ġ//", "Ġthis", "Ġshould", "Ġget", "Ġcompiled", "Ġto", "Ġjust", "ĠL", "\"[", "ab", "cd", "]\"", "Ċ", "Ġ", "Ġauto", "Ġre", "Ġ=", "Ġstd", "::", "w", "re", "gex", "(", "L", "'", "['", "Ġ+", "Ġstd", "::", "w", "string", "(", "300", ",", "ĠL", "'", "a", "')", "Ġ+", "ĠL", "\"", "bc", "\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ+", "Ġstd", "::", "w", "string", "(", "1000", ",", "Ġ'", "a", "')", "Ġ+", "ĠL", "\"", "d", "]", "\");", "Ċ", "Ġ", "Ġbool", "Ġok", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100", "000", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġok", "Ġ=", "Ġok", "Ġ&&", "Ġ(", "std", "::", "re", "gex", "_", "match", "(", "L", "\"", "b", "\",", "Ġre", ")", "Ġ&&", "Ġstd", "::", "re", "gex", "_", "match", "(", "L", "\"", "d", "\",", "Ġre", "));", "ĊĊ", "Ġ", "Ġstop", "_", "c", "ounters", "(", "time", ",", "Ġresource", ");", "Ċ", "Ġ", "Ġreport", "_", "performance", "(", "__", "FILE", "__", ",", "Ġ\"", "\",", "Ġtime", ",", "Ġresource", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġok", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["time", 5, "comesFrom", ["time"], [2]], ["time", 22, "comesFrom", ["time"], [2]], ["time", 26, "comesFrom", ["time"], [2]], ["resource", 6, "comesFrom", ["resource"], [3]], ["resource", 23, "comesFrom", ["resource"], [3]], ["resource", 27, "comesFrom", ["resource"], [3]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 14, "comesFrom", ["i"], [12]], ["ok", 16, "comesFrom", ["ok"], [15]], ["ok", 28, "comesFrom", ["ok"], [15]], ["re", 18, "comesFrom", ["re"], [7]], ["re", 20, "comesFrom", ["re"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::78", "code": "// RUN: %clang_cc1 -fsyntax-only -verify %s\n// RUN: %clang_cc1 -fsyntax-only -Wno-signed-unsigned-wchar -verify=allow-signed -DSKIP_ERROR_TESTS %s\n// allow-signed-no-diagnostics\nwchar_t x;\n\nvoid f(wchar_t p) {\n  wchar_t x;\n  unsigned wchar_t y; // expected-error {{'wchar_t' cannot be signed or unsigned}}\n  signed wchar_t z; // expected-error {{'wchar_t' cannot be signed or unsigned}}\n  ++x;\n}\n\n// PR4502\nwchar_t const c = L'c';\nint a[c == L'c' ? 1 : -1];\n\n\n// PR5917\ntemplate<typename _CharT>\nstruct basic_string {\n};\n\ntemplate<typename _CharT>\nbasic_string<_CharT> operator+ (const basic_string<_CharT>&, _CharT);\n\nint t(void) {\n  basic_string<wchar_t>() + L'-';\n  return (0);\n}\n\n\n// rdar://8040728\nwchar_t in[] = L\"\\x434\" \"\\x434\";  // No warning\n\n#ifndef SKIP_ERROR_TESTS\n// Verify that we do not crash when assigning wchar_t* to another pointer type.\nvoid assignment(wchar_t *x) {\n  char *y;\n  y = x; // expected-error {{incompatible pointer types assigning to 'char *' from 'wchar_t *'}}\n}\n#endif\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "cl", "ang", "_", "cc", "1", "Ġ-", "f", "sy", "ntax", "-", "only", "Ġ-", "ver", "ify", "Ġ%", "s", "Ċ", "//", "ĠRUN", ":", "Ġ%", "cl", "ang", "_", "cc", "1", "Ġ-", "f", "sy", "ntax", "-", "only", "Ġ-", "W", "no", "-", "signed", "-", "unsigned", "-", "w", "char", "Ġ-", "ver", "ify", "=", "allow", "-", "signed", "Ġ-", "DS", "K", "IP", "_", "ERROR", "_", "T", "ES", "TS", "Ġ%", "s", "Ċ", "//", "Ġallow", "-", "signed", "-", "no", "-", "diagn", "ostics", "Ċ", "w", "char", "_", "t", "Ġx", ";", "Ċ", "Ċ", "void", "Ġf", "(", "w", "char", "_", "t", "Ġp", ")", "Ġ{", "Ċ", "Ġ", "Ġw", "char", "_", "t", "Ġx", ";", "Ċ", "Ġ", "Ġunsigned", "Ġw", "char", "_", "t", "Ġy", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "'", "w", "char", "_", "t", "'", "Ġcannot", "Ġbe", "Ġsigned", "Ġor", "Ġunsigned", "}}", "Ċ", "Ġ", "Ġsigned", "Ġw", "char", "_", "t", "Ġz", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "'", "w", "char", "_", "t", "'", "Ġcannot", "Ġbe", "Ġsigned", "Ġor", "Ġunsigned", "}}", "Ċ", "Ġ", "Ġ++", "x", ";", "Ċ", "}", "Ċ", "Ċ", "//", "ĠPR", "450", "2", "Ċ", "w", "char", "_", "t", "Ġconst", "Ġc", "Ġ=", "ĠL", "'", "c", "';", "Ċ", "int", "Ġa", "[", "c", "Ġ==", "ĠL", "'", "c", "'", "Ġ?", "Ġ1", "Ġ:", "Ġ-", "1", "];", "ĊĊ", "Ċ", "//", "ĠPR", "59", "17", "Ċ", "template", "<", "ty", "pen", "ame", "Ġ_", "Char", "T", ">", "Ċ", "struct", "Ġbasic", "_", "string", "Ġ{", "Ċ", "};", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "Ġ_", "Char", "T", ">", "Ċ", "basic", "_", "string", "<", "_", "Char", "T", ">", "Ġoperator", "+", "Ġ(", "const", "Ġbasic", "_", "string", "<", "_", "Char", "T", ">", "&", ",", "Ġ_", "Char", "T", ");", "Ċ", "Ċ", "int", "Ġt", "(", "void", ")", "Ġ{", "Ċ", "Ġ", "Ġbasic", "_", "string", "<", "w", "char", "_", "t", ">", "()", "Ġ+", "ĠL", "'-", "';", "Ċ", "Ġ", "Ġreturn", "Ġ(", "0", ");", "Ċ", "}", "ĊĊ", "Ċ", "//", "Ġr", "dar", "://", "80", "407", "28", "Ċ", "w", "char", "_", "t", "Ġin", "[]", "Ġ=", "ĠL", "\"", "\\", "x", "434", "\"", "Ġ\"\\", "x", "434", "\";", "Ġ", "Ġ//", "ĠNo", "Ġwarning", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠSK", "IP", "_", "ERROR", "_", "T", "ES", "TS", "Ċ", "//", "ĠVerify", "Ġthat", "Ġwe", "Ġdo", "Ġnot", "Ġcrash", "Ġwhen", "Ġassigning", "Ġw", "char", "_", "t", "*", "Ġto", "Ġanother", "Ġpointer", "Ġtype", ".", "Ċ", "void", "Ġassignment", "(", "w", "char", "_", "t", "Ġ*", "x", ")", "Ġ{", "Ċ", "Ġ", "Ġchar", "Ġ*", "y", ";", "Ċ", "Ġ", "Ġy", "Ġ=", "Ġx", ";", "Ġ//", "Ġexpected", "-", "error", "Ġ{{", "in", "compatible", "Ġpointer", "Ġtypes", "Ġassigning", "Ġto", "Ġ'", "char", "Ġ*", "'", "Ġfrom", "Ġ'", "w", "char", "_", "t", "Ġ*", "'", "}}", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["x", 6, "comesFrom", ["x"], [3]], ["x", 15, "comesFrom", ["x"], [3]], ["x", 18, "comesFrom", ["x"], [3]], ["c", 9, "comesFrom", ["c"], [7]], ["y", 16, "comesFrom", ["y"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::79", "code": "#include <iostream>\n#include <seqan/file.h>\n#include <seqan/sequence.h>\n#include <seqan/score.h>\n\nusing namespace seqan;\n\ntemplate <typename TText, typename TPattern>\nint computeLocalScore(TText const & subText, TPattern const & pattern)\n{\n    int localScore = 0;\n    for (unsigned i = 0; i < length(pattern); ++i)\n        if (subText[i] == pattern[i])\n            ++localScore;\n\n    return localScore;\n}\n\ntemplate <typename TText, typename TPattern>\nString<int> computeScore(TText const & text, TPattern const & pattern)\n{\n    String<int> score;\n    resize(score, length(text) - length(pattern) + 1, 0);\n\n    for (unsigned i = 0; i < length(text) - length(pattern) + 1; ++i)\n        score[i] = computeLocalScore(infix(text, i, i + length(pattern)), pattern);\n\n    return score;\n}\n\nvoid print(String<int> const & text)\n{\n    for (unsigned i = 0; i < length(text); ++i)\n        std::cout << text[i] << \" \";\n    std::cout << std::endl;\n}\n\nint main()\n{\n    String<char> text = \"This is an awesome tutorial to get to know SeqAn!\";\n    String<char> pattern = \"tutorial\";\n    String<int> score = computeScore(text, pattern);\n    print(score);\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "score", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", "Text", ",", "Ġtyp", "ename", "ĠT", "Pattern", ">", "Ċ", "int", "Ġcompute", "Local", "Score", "(", "T", "Text", "Ġconst", "Ġ&", "Ġsub", "Text", ",", "ĠT", "Pattern", "Ġconst", "Ġ&", "Ġpattern", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlocal", "Score", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "pattern", ");", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "sub", "Text", "[", "i", "]", "Ġ==", "Ġpattern", "[", "i", "])", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "local", "Score", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġlocal", "Score", ";", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", "Text", ",", "Ġtyp", "ename", "ĠT", "Pattern", ">", "Ċ", "String", "<", "int", ">", "Ġcompute", "Score", "(", "T", "Text", "Ġconst", "Ġ&", "Ġtext", ",", "ĠT", "Pattern", "Ġconst", "Ġ&", "Ġpattern", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "<", "int", ">", "Ġscore", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġresize", "(", "score", ",", "Ġlength", "(", "text", ")", "Ġ-", "Ġlength", "(", "pattern", ")", "Ġ+", "Ġ1", ",", "Ġ0", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "text", ")", "Ġ-", "Ġlength", "(", "pattern", ")", "Ġ+", "Ġ1", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscore", "[", "i", "]", "Ġ=", "Ġcompute", "Local", "Score", "(", "inf", "ix", "(", "text", ",", "Ġi", ",", "Ġi", "Ġ+", "Ġlength", "(", "pattern", ")),", "Ġpattern", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġscore", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġprint", "(", "String", "<", "int", ">", "Ġconst", "Ġ&", "Ġtext", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "text", ");", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġtext", "[", "i", "]", "Ġ<<", "Ġ\"", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "<", "char", ">", "Ġtext", "Ġ=", "Ġ\"", "This", "Ġis", "Ġan", "Ġawesome", "Ġtutorial", "Ġto", "Ġget", "Ġto", "Ġknow", "ĠSe", "q", "An", "!\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "<", "char", ">", "Ġpattern", "Ġ=", "Ġ\"", "t", "utorial", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "<", "int", ">", "Ġscore", "Ġ=", "Ġcompute", "Score", "(", "text", ",", "Ġpattern", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprint", "(", "score", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["pattern", 62, "comesFrom", ["pattern"], [58]], ["i", 6, "comesFrom", ["i"], [5]], ["i", 9, "comesFrom", ["i"], [5]], ["i", 11, "comesFrom", ["i"], [5]], ["i", 13, "comesFrom", ["i"], [5]], ["i", 27, "comesFrom", ["i"], [26]], ["i", 32, "comesFrom", ["i"], [26]], ["i", 34, "comesFrom", ["i"], [26]], ["i", 38, "comesFrom", ["i"], [26]], ["i", 39, "comesFrom", ["i"], [26]], ["i", 47, "comesFrom", ["i"], [46]], ["i", 50, "comesFrom", ["i"], [46]], ["i", 53, "comesFrom", ["i"], [46]], ["localScore", 14, "comesFrom", ["localScore"], [4]], ["localScore", 15, "comesFrom", ["localScore"], [4]], ["text", 61, "comesFrom", ["text"], [57]], ["score", 21, "comesFrom", ["score"], [19]], ["score", 33, "comesFrom", ["score"], [19]], ["score", 43, "comesFrom", ["score"], [19]], ["score", 64, "comesFrom", ["score"], [59]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::80", "code": "#if 0  // Disabled until updated to use current API.\n// Copyright 2019 Google LLC.\n// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n#include \"tools/fiddle/examples.h\"\n// HASH=a75bbdb8bb866b125c4c1dd5e967d470\nREG_FIDDLE(Paint_setTextScaleX, 256, 256, true, 0) {\nvoid draw(SkCanvas* canvas) {\n    SkPaint paint;\n    paint.setTextScaleX(0.f / 0.f);\n    SkDebugf(\"text scale %s-a-number\\n\", SkScalarIsNaN(paint.getTextScaleX()) ? \"not\" : \"is\");\n}\n}  // END FIDDLE\n#endif  // Disabled until updated to use current API.\n", "code_tokens": ["Ġ#", "if", "Ġ0", "Ġ", "Ġ//", "ĠDisabled", "Ġuntil", "Ġupdated", "Ġto", "Ġuse", "Ġcurrent", "ĠAPI", ".", "Ċ", "//", "ĠCopyright", "Ġ2019", "ĠGoogle", "ĠLLC", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "#", "include", "Ġ\"", "tools", "/", "f", "iddle", "/", "ex", "amples", ".", "h", "\"", "Ċ", "//", "ĠH", "ASH", "=", "a", "75", "bb", "db", "8", "bb", "866", "b", "125", "c", "4", "c", "1", "dd", "5", "e", "9", "67", "d", "470", "Ċ", "REG", "_", "F", "ID", "D", "LE", "(", "P", "aint", "_", "set", "Text", "Scale", "X", ",", "Ġ256", ",", "Ġ256", ",", "Ġtrue", ",", "Ġ0", ")", "Ġ{", "Ċ", "void", "Ġdraw", "(", "Sk", "Can", "vas", "*", "Ġcanvas", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "P", "aint", "Ġpaint", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpaint", ".", "set", "Text", "Scale", "X", "(", "0", ".", "f", "Ġ/", "Ġ0", ".", "f", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "Debug", "f", "(\"", "text", "Ġscale", "Ġ%", "s", "-", "a", "-", "number", "\\", "n", "\",", "ĠSk", "Sc", "al", "ar", "Is", "Na", "N", "(", "p", "aint", ".", "get", "Text", "Scale", "X", "())", "Ġ?", "Ġ\"", "not", "\"", "Ġ:", "Ġ\"", "is", "\");", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "ĠEND", "ĠF", "ID", "D", "LE", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠDisabled", "Ġuntil", "Ġupdated", "Ġto", "Ġuse", "Ġcurrent", "ĠAPI", ".", "Ċ"], "dataflow_graph": [["paint", 5, "comesFrom", ["paint"], [4]], ["paint", 9, "comesFrom", ["paint"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::81", "code": "#include <Wt/WApplication>\n#include <Wt/WStandardItemModel>\n#include <Wt/WTableView>\n#include \"../treeview-dragdrop/CsvUtil.h\"\n\nSAMPLE_BEGIN(SmallTableView)\nWt::WTableView *tableView = new Wt::WTableView();\ntableView->setModel(csvToModel(Wt::WApplication::appRoot() + \"table.csv\",\n\t\t\t       tableView));\n\ntableView->setColumnResizeEnabled(false);\ntableView->setColumnAlignment(0, Wt::AlignCenter);\ntableView->setHeaderAlignment(0, Wt::AlignCenter);\ntableView->setAlternatingRowColors(true);\ntableView->setRowHeight(28);\ntableView->setHeaderHeight(28);\ntableView->setSelectionMode(Wt::SingleSelection);\ntableView->setEditTriggers(Wt::WAbstractItemView::NoEditTrigger);\n\n/*\n * Configure column widths and matching table width\n */\nconst int WIDTH = 120;\nfor (int i = 0; i < tableView->model()->columnCount(); ++i)\n    tableView->setColumnWidth(i, 120);\n\n/*\n * 7 pixels are padding/border per column\n * 2 pixels are border of the entire table\n */\ntableView->setWidth((WIDTH + 7) * tableView->model()->columnCount() + 2);\n\nSAMPLE_END(return tableView)\n", "code_tokens": ["Ġ#", "include", "Ġ<", "W", "t", "/", "W", "Application", ">", "Ċ", "#", "include", "Ġ<", "W", "t", "/", "W", "Standard", "Item", "Model", ">", "Ċ", "#", "include", "Ġ<", "W", "t", "/", "W", "Table", "View", ">", "Ċ", "#", "include", "Ġ\"", "../", "tree", "view", "-", "dr", "ag", "drop", "/", "C", "sv", "Ut", "il", ".", "h", "\"", "Ċ", "Ċ", "SAM", "PLE", "_", "B", "EGIN", "(", "Small", "Table", "View", ")", "Ċ", "W", "t", "::", "W", "Table", "View", "Ġ*", "table", "View", "Ġ=", "Ġnew", "ĠW", "t", "::", "W", "Table", "View", "();", "Ċ", "table", "View", "->", "set", "Model", "(", "csv", "To", "Model", "(", "W", "t", "::", "W", "Application", "::", "app", "Root", "()", "Ġ+", "Ġ\"", "table", ".", "csv", "\",", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtable", "View", "));", "Ċ", "Ċ", "table", "View", "->", "set", "Column", "Res", "ize", "Enabled", "(", "false", ");", "Ċ", "table", "View", "->", "set", "Column", "Al", "ignment", "(", "0", ",", "ĠW", "t", "::", "Al", "ign", "Center", ");", "Ċ", "table", "View", "->", "set", "Header", "Al", "ignment", "(", "0", ",", "ĠW", "t", "::", "Al", "ign", "Center", ");", "Ċ", "table", "View", "->", "set", "Altern", "ating", "Row", "Col", "ors", "(", "true", ");", "Ċ", "table", "View", "->", "set", "Row", "Height", "(", "28", ");", "Ċ", "table", "View", "->", "set", "Header", "Height", "(", "28", ");", "Ċ", "table", "View", "->", "set", "Se", "lection", "Mode", "(", "W", "t", "::", "Single", "Se", "lection", ");", "Ċ", "table", "View", "->", "set", "Edit", "Tr", "ig", "gers", "(", "W", "t", "::", "W", "Abstract", "Item", "View", "::", "No", "Edit", "Trigger", ");", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠConfig", "ure", "Ġcolumn", "Ġwidth", "s", "Ġand", "Ġmatching", "Ġtable", "Ġwidth", "Ċ", "Ġ*/", "Ċ", "const", "Ġint", "ĠW", "ID", "TH", "Ġ=", "Ġ120", ";", "Ċ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġtable", "View", "->", "model", "()", "->", "column", "Count", "();", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtable", "View", "->", "set", "Column", "Width", "(", "i", ",", "Ġ120", ");", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ġ7", "Ġpixels", "Ġare", "Ġpadding", "/", "border", "Ġper", "Ġcolumn", "Ċ", "Ġ*", "Ġ2", "Ġpixels", "Ġare", "Ġborder", "Ġof", "Ġthe", "Ġentire", "Ġtable", "Ċ", "Ġ*/", "Ċ", "table", "View", "->", "set", "Width", "((", "W", "ID", "TH", "Ġ+", "Ġ7", ")", "Ġ*", "Ġtable", "View", "->", "model", "()", "->", "column", "Count", "()", "Ġ+", "Ġ2", ");", "Ċ", "Ċ", "SAM", "PLE", "_", "END", "(", "return", "Ġtable", "View", ")", "Ċ"], "dataflow_graph": [["i", 30, "comesFrom", ["i"], [29]], ["i", 34, "comesFrom", ["i"], [29]], ["i", 37, "comesFrom", ["i"], [29]], ["WIDTH", 40, "comesFrom", ["WIDTH"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::82", "code": "// ---------------------------------------------------------------------\n//\n// Copyright (C) 2008 - 2014 by the deal.II authors\n//\n// This file is part of the deal.II library.\n//\n// The deal.II library is free software; you can use it, redistribute\n// it, and/or modify it under the terms of the GNU Lesser General\n// Public License as published by the Free Software Foundation; either\n// version 2.1 of the License, or (at your option) any later version.\n// The full text of the license can be found in the file LICENSE at\n// the top level of the deal.II distribution.\n//\n// ---------------------------------------------------------------------\n\n\n\n// check CompressedSparsityPattern::copy constructor with offdiagonals\n\n#include \"sparsity_pattern_common.h\"\n\nint main ()\n{\n  std::ofstream logfile(\"output\");\n  logfile.setf(std::ios::fixed);\n  deallog << std::setprecision(3);\n  deallog.attach(logfile);\n  deallog.depth_console(0);\n  deallog.threshold_double(1.e-10);\n\n  copy_with_offdiagonals_2<CompressedSparsityPattern> ();\n}\n\n\n\n", "code_tokens": ["Ġ//", "Ġ----------------------------------------------------------------", "-----", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "Ġ-", "Ġ2014", "Ġby", "Ġthe", "Ġdeal", ".", "II", "Ġauthors", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġlibrary", ".", "Ċ", "//", "Ċ", "//", "ĠThe", "Ġdeal", ".", "II", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġuse", "Ġit", ",", "Ġredist", "ribute", "Ċ", "//", "Ġit", ",", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "Ċ", "//", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "//", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "ĠThe", "Ġfull", "Ġtext", "Ġof", "Ġthe", "Ġlicense", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "ĠLIC", "ENSE", "Ġat", "Ċ", "//", "Ġthe", "Ġtop", "Ġlevel", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ----------------------------------------------------------------", "-----", "ĊĊ", "Ċ", "Ċ", "//", "Ġcheck", "ĠComp", "ressed", "Sp", "arsity", "Pattern", "::", "copy", "Ġconstructor", "Ġwith", "Ġoff", "di", "agon", "als", "Ċ", "Ċ", "#", "include", "Ġ\"", "sp", "arsity", "_", "pattern", "_", "common", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "of", "stream", "Ġlog", "file", "(\"", "output", "\");", "Ċ", "Ġ", "Ġlog", "file", ".", "set", "f", "(", "std", "::", "ios", "::", "fixed", ");", "Ċ", "Ġ", "Ġde", "all", "og", "Ġ<<", "Ġstd", "::", "set", "pre", "cision", "(", "3", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "attach", "(", "log", "file", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "depth", "_", "console", "(", "0", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "th", "reshold", "_", "double", "(", "1", ".", "e", "-", "10", ");", "ĊĊ", "Ġ", "Ġcopy", "_", "with", "_", "off", "di", "agon", "als", "_", "2", "<", "Comp", "ressed", "Sp", "arsity", "Pattern", ">", "Ġ();", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["logfile", 2, "comesFrom", ["logfile"], [1]], ["logfile", 9, "comesFrom", ["logfile"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::83", "code": "// { dg-do compile }\n// { dg-options \"-O -w -Wno-psabi\" }\n\ntypedef int vec __attribute__((vector_size(32)));\nvec fn1()\n{\n  vec x, zero{};\n  vec one = zero + 1;\n  return x < zero ? one : zero;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "O", "Ġ-", "w", "Ġ-", "W", "no", "-", "ps", "abi", "\"", "Ġ}", "Ċ", "Ċ", "ty", "ped", "ef", "Ġint", "Ġvec", "Ġ__", "attribute", "__", "((", "vector", "_", "size", "(", "32", "))", ");", "Ċ", "vec", "Ġfn", "1", "()", "Ċ", "{", "Ċ", "Ġ", "Ġvec", "Ġx", ",", "Ġzero", "{", "};", "Ċ", "Ġ", "Ġvec", "Ġone", "Ġ=", "Ġzero", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġreturn", "Ġx", "Ġ<", "Ġzero", "Ġ?", "Ġone", "Ġ:", "Ġzero", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["zero", 5, "comesFrom", ["zero"], [3]], ["zero", 7, "comesFrom", ["zero"], [3]], ["zero", 9, "comesFrom", ["zero"], [3]], ["x", 6, "comesFrom", ["x"], [2]], ["one", 8, "comesFrom", ["one"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::84", "code": "#include <kccachedb.h>\n\nusing namespace std;\nusing namespace kyotocabinet;\n\n// main routine\nint main(int argc, char** argv) {\n\n  // create the database object\n  GrassDB db;\n\n  // open the database\n  if (!db.open(\"*\", GrassDB::OWRITER | GrassDB::OCREATE)) {\n    cerr << \"open error: \" << db.error().name() << endl;\n  }\n\n  // store records\n  if (!db.set(\"foo\", \"hop\") ||\n      !db.set(\"bar\", \"step\") ||\n      !db.set(\"baz\", \"jump\")) {\n    cerr << \"set error: \" << db.error().name() << endl;\n  }\n\n  // retrieve a record\n  string value;\n  if (db.get(\"foo\", &value)) {\n    cout << value << endl;\n  } else {\n    cerr << \"get error: \" << db.error().name() << endl;\n  }\n\n  // traverse records\n  DB::Cursor* cur = db.cursor();\n  cur->jump();\n  string ckey, cvalue;\n  while (cur->get(&ckey, &cvalue, true)) {\n    cout << ckey << \":\" << cvalue << endl;\n  }\n  delete cur;\n\n  // close the database\n  if (!db.close()) {\n    cerr << \"close error: \" << db.error().name() << endl;\n  }\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "k", "cc", "ached", "b", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "Ġk", "y", "ot", "oc", "abin", "et", ";", "Ċ", "Ċ", "//", "Ġmain", "Ġroutine", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ//", "Ġcreate", "Ġthe", "Ġdatabase", "Ġobject", "Ċ", "Ġ", "ĠGrass", "DB", "Ġdb", ";", "ĊĊ", "Ġ", "Ġ//", "Ġopen", "Ġthe", "Ġdatabase", "Ċ", "Ġ", "Ġif", "Ġ(!", "db", ".", "open", "(\"", "*", "\",", "ĠGrass", "DB", "::", "OW", "R", "IT", "ER", "Ġ|", "ĠGrass", "DB", "::", "OC", "RE", "ATE", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "open", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġdb", ".", "error", "().", "name", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ//", "Ġstore", "Ġrecords", "Ċ", "Ġ", "Ġif", "Ġ(!", "db", ".", "set", "(\"", "foo", "\",", "Ġ\"", "hop", "\")", "Ġ||", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ!", "db", ".", "set", "(\"", "bar", "\",", "Ġ\"", "step", "\")", "Ġ||", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ!", "db", ".", "set", "(\"", "b", "az", "\",", "Ġ\"", "jump", "\"))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "set", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġdb", ".", "error", "().", "name", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ//", "Ġretrieve", "Ġa", "Ġrecord", "Ċ", "Ġ", "Ġstring", "Ġvalue", ";", "Ċ", "Ġ", "Ġif", "Ġ(", "db", ".", "get", "(\"", "foo", "\",", "Ġ&", "value", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġvalue", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "get", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġdb", ".", "error", "().", "name", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ//", "Ġtraverse", "Ġrecords", "Ċ", "Ġ", "ĠDB", "::", "C", "ursor", "*", "Ġcur", "Ġ=", "Ġdb", ".", "c", "ursor", "();", "Ċ", "Ġ", "Ġcur", "->", "jump", "();", "Ċ", "Ġ", "Ġstring", "Ġc", "key", ",", "Ġc", "value", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cur", "->", "get", "(&", "c", "key", ",", "Ġ&", "c", "value", ",", "Ġtrue", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġc", "key", "Ġ<<", "Ġ\"", ":\"", "Ġ<<", "Ġc", "value", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġdelete", "Ġcur", ";", "ĊĊ", "Ġ", "Ġ//", "Ġclose", "Ġthe", "Ġdatabase", "Ċ", "Ġ", "Ġif", "Ġ(!", "db", ".", "close", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "close", "Ġerror", ":", "Ġ\"", "Ġ<<", "Ġdb", ".", "error", "().", "name", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["db", 6, "comesFrom", ["db"], [5]], ["db", 11, "comesFrom", ["db"], [5]], ["db", 15, "comesFrom", ["db"], [5]], ["db", 17, "comesFrom", ["db"], [5]], ["db", 19, "comesFrom", ["db"], [5]], ["db", 22, "comesFrom", ["db"], [5]], ["db", 27, "comesFrom", ["db"], [5]], ["db", 34, "comesFrom", ["db"], [5]], ["db", 39, "comesFrom", ["db"], [5]], ["db", 54, "comesFrom", ["db"], [5]], ["db", 57, "comesFrom", ["db"], [5]], ["value", 29, "comesFrom", ["value"], [26]], ["value", 31, "comesFrom", ["value"], [26]], ["ckey", 47, "comesFrom", ["ckey"], [43]], ["ckey", 50, "comesFrom", ["ckey"], [43]], ["cvalue", 48, "comesFrom", ["cvalue"], [44]], ["cvalue", 51, "comesFrom", ["cvalue"], [44]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::85", "code": "// stdafx.cpp : source file that includes just the standard includes\n// xpad.pch will be the pre-compiled header\n// stdafx.obj will contain the pre-compiled type information\n\n#include \"stdafx.h\"\n\n// TODO: reference any additional headers you need in STDAFX.H\n// and not in this file\n\nstring format(const char* fmt, ...)\n{\n\tva_list args;\n\tva_start(args, fmt);\n\n\tint result = -1, length = 256;\n\n\tchar* buffer = NULL;\n\n\twhile(result == -1)\n\t{\n\t\tif(buffer) delete [] buffer;\n\n\t\tbuffer = new char[length + 1];\n\n\t\tmemset(buffer, 0, length + 1);\n\n\t\tresult = _vsnprintf(buffer, length, fmt, args);\n\n\t\tlength *= 2;\n\t}\n\n\tva_end(args);\n\n\tstring s(buffer);\n\n\tdelete [] buffer;\n\n\treturn s;\n}\n", "code_tokens": ["Ġ//", "Ġstd", "af", "x", ".", "cpp", "Ġ:", "Ġsource", "Ġfile", "Ġthat", "Ġincludes", "Ġjust", "Ġthe", "Ġstandard", "Ġincludes", "Ċ", "//", "Ġx", "pad", ".", "p", "ch", "Ġwill", "Ġbe", "Ġthe", "Ġpre", "-", "comp", "iled", "Ġheader", "Ċ", "//", "Ġstd", "af", "x", ".", "obj", "Ġwill", "Ġcontain", "Ġthe", "Ġpre", "-", "comp", "iled", "Ġtype", "Ġinformation", "Ċ", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "Ċ", "//", "ĠTOD", "O", ":", "Ġreference", "Ġany", "Ġadditional", "Ġheaders", "Ġyou", "Ġneed", "Ġin", "ĠST", "DA", "FX", ".", "H", "Ċ", "//", "Ġand", "Ġnot", "Ġin", "Ġthis", "Ġfile", "Ċ", "Ċ", "string", "Ġformat", "(", "const", "Ġchar", "*", "Ġfmt", ",", "Ġ...", ")", "Ċ", "{", "Ċ", "ĉ", "va", "_", "list", "Ġargs", ";", "Ċ", "ĉ", "va", "_", "start", "(", "args", ",", "Ġfmt", ");", "ĊĊ", "ĉ", "int", "Ġresult", "Ġ=", "Ġ-", "1", ",", "Ġlength", "Ġ=", "Ġ256", ";", "ĊĊ", "ĉ", "char", "*", "Ġbuffer", "Ġ=", "ĠNULL", ";", "ĊĊ", "ĉ", "while", "(", "result", "Ġ==", "Ġ-", "1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "(", "buffer", ")", "Ġdelete", "Ġ[]", "Ġbuffer", ";", "ĊĊ", "ĉ", "ĉ", "buffer", "Ġ=", "Ġnew", "Ġchar", "[", "length", "Ġ+", "Ġ1", "];", "ĊĊ", "ĉ", "ĉ", "mem", "set", "(", "buffer", ",", "Ġ0", ",", "Ġlength", "Ġ+", "Ġ1", ");", "ĊĊ", "ĉ", "ĉ", "result", "Ġ=", "Ġ_", "vs", "n", "printf", "(", "buffer", ",", "Ġlength", ",", "Ġfmt", ",", "Ġargs", ");", "ĊĊ", "ĉ", "ĉ", "length", "Ġ*", "=", "Ġ2", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "va", "_", "end", "(", "args", ");", "ĊĊ", "ĉ", "string", "Ġs", "(", "buffer", ");", "ĊĊ", "ĉ", "delete", "Ġ[]", "Ġbuffer", ";", "ĊĊ", "ĉ", "return", "Ġs", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["args", 4, "comesFrom", ["args"], [2]], ["args", 22, "comesFrom", ["args"], [2]], ["args", 25, "comesFrom", ["args"], [2]], ["buffer", 15, "comesFrom", ["buffer"], [12]], ["buffer", 19, "comesFrom", ["buffer"], [12]], ["buffer", 27, "comesFrom", ["buffer"], [12]], ["result", 9, "comesFrom", ["result"], [6]], ["length", 13, "comesFrom", ["length"], [7]], ["length", 16, "comesFrom", ["length"], [7]], ["length", 20, "comesFrom", ["length"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::86", "code": "// { dg-options \"-std=c++0x\" }\n// { dg-require-cstdint \"\" }\n//\n// 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n//\n// Copyright (C) 2008-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <random>\n#include <testsuite_hooks.h>\n\nvoid\ntest01()\n{\n  bool test __attribute__((unused)) = true;\n\n  std::subtract_with_carry_engine<unsigned long, 24, 10, 24> x;\n  VERIFY( x.min() == 0 );\n  VERIFY( x.max() == ((1UL << 24) - 1) );\n  VERIFY( x() == 15039276 );\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "c", "++", "0", "x", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "c", "std", "int", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ċ", "//", "Ġ2008", "-", "11", "-", "24", "Ġ", "ĠEdward", "ĠM", ".", "ĠSmith", "-", "Row", "land", "Ġ<", "3", "d", "w", "4", "rd", "@", "ver", "izon", ".", "net", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "random", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġstd", "::", "sub", "t", "ract", "_", "with", "_", "carry", "_", "engine", "<", "unsigned", "Ġlong", ",", "Ġ24", ",", "Ġ10", ",", "Ġ24", ">", "Ġx", ";", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġx", ".", "min", "()", "Ġ==", "Ġ0", "Ġ);", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġx", ".", "max", "()", "Ġ==", "Ġ((", "1", "UL", "Ġ<<", "Ġ24", ")", "Ġ-", "Ġ1", ")", "Ġ);", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġx", "()", "Ġ==", "Ġ150", "39", "276", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 5, "comesFrom", ["x"], [3]], ["x", 8, "comesFrom", ["x"], [3]], ["x", 11, "comesFrom", ["x"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::87", "code": "// { dg-do compile }\n// { dg-options \"-std=gnu++0x\" }\n\n// Copyright (C) 2012-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <list>\n\n// libstdc++/43813\nvoid test01()\n{\n  std::list<double*> l(7, 0);\n  l.assign(7, 0);\n  l.insert(l.begin(), 7, 0);\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "0", "x", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "Ċ", "//", "Ġlib", "st", "dc", "++", "/", "438", "13", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "list", "<", "double", "*", ">", "Ġl", "(", "7", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġl", ".", "ass", "ign", "(", "7", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġl", ".", "insert", "(", "l", ".", "begin", "(),", "Ġ7", ",", "Ġ0", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["l", 2, "comesFrom", ["l"], [1]], ["l", 4, "comesFrom", ["l"], [1]], ["l", 6, "comesFrom", ["l"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::88", "code": "/*\n *  Copyright (C) 2005-2020 Team Kodi\n *  This file is part of Kodi - https://kodi.tv\n *\n *  SPDX-License-Identifier: GPL-2.0-or-later\n *  See LICENSES/README.md for more information.\n */\n\n#include \"DRMEncoder.h\"\n\n#include <cstring>\n#include <errno.h>\n#include <stdexcept>\n#include <string>\n\nusing namespace KODI::WINDOWING::GBM;\n\nCDRMEncoder::CDRMEncoder(int fd, uint32_t encoder)\n  : CDRMObject(fd), m_encoder(drmModeGetEncoder(m_fd, encoder))\n{\n  if (!m_encoder)\n    throw std::runtime_error(\"drmModeGetEncoder failed: \" + std::string{strerror(errno)});\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "-", "2020", "ĠTeam", "ĠKodi", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠKodi", "Ġ-", "Ġhttps", "://", "k", "odi", ".", "tv", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠGPL", "-", "2", ".", "0", "-", "or", "-", "later", "Ċ", "Ġ*", "Ġ", "ĠSee", "ĠLIC", "ENS", "ES", "/", "READ", "ME", ".", "md", "Ġfor", "Ġmore", "Ġinformation", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "DR", "M", "Enc", "oder", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "#", "include", "Ġ<", "err", "no", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠK", "OD", "I", "::", "WIND", "OW", "ING", "::", "GB", "M", ";", "Ċ", "Ċ", "C", "DR", "M", "Enc", "oder", "::", "C", "DR", "M", "Enc", "oder", "(", "int", "Ġf", "d", ",", "Ġuint", "32", "_", "t", "Ġenc", "oder", ")", "Ċ", "Ġ", "Ġ:", "ĠCD", "RM", "Object", "(", "fd", "),", "Ġm", "_", "enc", "oder", "(", "drm", "Mode", "Get", "Enc", "oder", "(", "m", "_", "fd", ",", "Ġenc", "oder", "))", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(!", "m", "_", "enc", "oder", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "drm", "Mode", "Get", "Enc", "oder", "Ġfailed", ":", "Ġ\"", "Ġ+", "Ġstd", "::", "string", "{", "st", "rer", "ror", "(", "err", "no", ")", "});", "Ċ", "}", "Ċ"], "dataflow_graph": [["fd", 5, "comesFrom", ["fd"], [2]], ["encoder", 9, "comesFrom", ["encoder"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::89", "code": "// Copyright (C) 2011-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n//\n\n// { dg-do compile }\n\n#include <map>\n\nstruct Key\n{\n  Key() { }\n\n  Key(const Key&) { }\n\n  template<typename T>\n    Key(const T&)\n    { }\n\n  bool operator<(const Key&) const;\n};\n\n#if __cplusplus < 201103L\n// libstdc++/47628\nvoid f()\n{\n  typedef std::multimap<Key, int> MMap;\n  MMap mm;\n  mm.insert(MMap::value_type());\n  MMap::iterator i = mm.begin();\n  mm.erase(i);\n}\n#endif\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "//", "Ċ", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "struct", "ĠKey", "Ċ", "{", "Ċ", "Ġ", "ĠKey", "()", "Ġ{", "Ġ}", "ĊĊ", "Ġ", "ĠKey", "(", "const", "ĠKey", "&", ")", "Ġ{", "Ġ}", "ĊĊ", "Ġ", "Ġtemplate", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "Ġ", "Ġ", "Ġ", "ĠKey", "(", "const", "ĠT", "&", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġ}", "ĊĊ", "Ġ", "Ġbool", "Ġoperator", "<", "(", "const", "ĠKey", "&", ")", "Ġconst", ";", "Ċ", "};", "Ċ", "Ċ", "#", "if", "Ġ__", "c", "plus", "plus", "Ġ<", "Ġ201", "103", "L", "Ċ", "//", "Ġlib", "st", "dc", "++", "/", "476", "28", "Ċ", "void", "Ġf", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtyped", "ef", "Ġstd", "::", "mult", "im", "ap", "<", "Key", ",", "Ġint", ">", "ĠM", "Map", ";", "Ċ", "Ġ", "ĠM", "Map", "Ġmm", ";", "Ċ", "Ġ", "Ġmm", ".", "insert", "(", "MM", "ap", "::", "value", "_", "type", "());", "Ċ", "Ġ", "ĠM", "Map", "::", "iterator", "Ġi", "Ġ=", "Ġmm", ".", "begin", "();", "Ċ", "Ġ", "Ġmm", ".", "er", "ase", "(", "i", ");", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["mm", 6, "comesFrom", ["mm"], [5]], ["mm", 10, "comesFrom", ["mm"], [5]], ["mm", 12, "comesFrom", ["mm"], [5]], ["i", 14, "comesFrom", ["i"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::90", "code": "#include \"ex14_49.h\"\n\nint main()\n{\n    Date date(12, 4, 2015);\n    if (static_cast<bool>(date))\n        std::cout << date << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ex", "14", "_", "49", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDate", "Ġdate", "(", "12", ",", "Ġ4", ",", "Ġ2015", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "static", "_", "cast", "<", "bool", ">(", "date", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġdate", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["date", 3, "comesFrom", ["date"], [1]], ["date", 5, "comesFrom", ["date"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::91", "code": "// { dg-do assemble  }\n// GROUPS passed patches\n// patches file\n// From: david.binderman@pmsr.philips.co.uk\n// Date:     Wed, 6 Oct 93 17:05:54 BST\n// Subject:  Reno 1.2 bug fix\n// Message-ID: <9310061605.AA04160@pmsr.philips.co.uk>\n\nint type(float)       { return 1; }\nint type(double)      { return 2; }\nint type(long double) { return 3; }\n\nextern \"C\" int printf( const char *, ...);\n\nint main()\n{\n      int i = 0;\n      if (type(0.0) != 2)\n              ++i;\n      if (i > 0)\n\t{ printf (\"FAIL\\n\"); return 1; }\n      else\n\tprintf (\"PASS\\n\");\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġassemble", "Ġ", "Ġ}", "Ċ", "//", "ĠGR", "OU", "PS", "Ġpassed", "Ġpatches", "Ċ", "//", "Ġpatches", "Ġfile", "Ċ", "//", "ĠFrom", ":", "Ġdavid", ".", "bind", "erman", "@", "p", "ms", "r", ".", "phil", "ips", ".", "co", ".", "uk", "Ċ", "//", "ĠDate", ":", "Ġ", "Ġ", "Ġ", "Ġ", "ĠWed", ",", "Ġ6", "ĠOct", "Ġ93", "Ġ17", ":", "05", ":", "54", "ĠBST", "Ċ", "//", "ĠSubject", ":", "Ġ", "ĠReno", "Ġ1", ".", "2", "Ġbug", "Ġfix", "Ċ", "//", "ĠMessage", "-", "ID", ":", "Ġ<", "93", "100", "616", "05", ".", "AA", "04", "160", "@", "p", "ms", "r", ".", "phil", "ips", ".", "co", ".", "uk", ">", "Ċ", "Ċ", "int", "Ġtype", "(", "float", ")", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġreturn", "Ġ1", ";", "Ġ}", "Ċ", "int", "Ġtype", "(", "double", ")", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġreturn", "Ġ2", ";", "Ġ}", "Ċ", "int", "Ġtype", "(", "long", "Ġdouble", ")", "Ġ{", "Ġreturn", "Ġ3", ";", "Ġ}", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġint", "Ġprintf", "(", "Ġconst", "Ġchar", "Ġ*", ",", "Ġ...", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "type", "(", "0", ".", "0", ")", "Ġ!=", "Ġ2", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "i", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "i", "Ġ>", "Ġ0", ")", "Ċ", "ĉ", "{", "Ġprintf", "Ġ(\"", "FA", "IL", "\\", "n", "\");", "Ġreturn", "Ġ1", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "ĉ", "printf", "Ġ(\"", "PASS", "\\", "n", "\");", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [5]], ["i", 8, "comesFrom", ["i"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::92", "code": "#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tif(n<6)\r\n\tcout << n/2+1 <<endl;\r\n\telse\r\n\tcout << (10-n)/2+1 <<endl;\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġn", ";", "č", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", ";", "č", "Ċ", "ĉ", "if", "(", "n", "<", "6", ")", "č", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġn", "/", "2", "+", "1", "Ġ<<", "end", "l", ";", "č", "Ċ", "ĉ", "else", "č", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ(", "10", "-", "n", ")/", "2", "+", "1", "Ġ<<", "end", "l", ";", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [2]], ["n", 5, "comesFrom", ["n"], [2]], ["n", 7, "comesFrom", ["n"], [2]], ["n", 10, "comesFrom", ["n"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::93", "code": "#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int maxn = 111;\nint arr[maxn];\n\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    int n, m;\n    while(2 == scanf(\"%d%d\", &n, &m) && !(n==0 && m==0)) {\n        for(int i = 0; i < n; ++i)\n            scanf(\"%d\", &arr[i]);\n        arr[n] = m;\n        sort(arr, arr+n+1);\n        printf(\"%d\", arr[0]);\n        for(int i = 1; i < n+1; ++i)\n            printf(\" %d\", arr[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "const", "Ġint", "Ġmax", "n", "Ġ=", "Ġ111", ";", "Ċ", "int", "Ġarr", "[", "max", "n", "];", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "fre", "open", "(\"", "in", ".", "txt", "\",", "Ġ\"", "r", "\",", "Ġstd", "in", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ",", "Ġm", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "2", "Ġ==", "Ġscan", "f", "(\"", "%", "d", "%", "d", "\",", "Ġ&", "n", ",", "Ġ&", "m", ")", "Ġ&&", "Ġ!", "(", "n", "==", "0", "Ġ&&", "Ġm", "==", "0", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "arr", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġarr", "[", "n", "]", "Ġ=", "Ġm", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsort", "(", "arr", ",", "Ġarr", "+", "n", "+", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\",", "Ġarr", "[", "0", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġn", "+", "1", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Ġ%", "d", "\",", "Ġarr", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["maxn", 3, "comesFrom", ["maxn"], [1]], ["n", 8, "comesFrom", ["n"], [5]], ["n", 10, "comesFrom", ["n"], [5]], ["n", 14, "comesFrom", ["n"], [5]], ["n", 20, "comesFrom", ["n"], [5]], ["n", 25, "comesFrom", ["n"], [5]], ["n", 30, "comesFrom", ["n"], [5]], ["m", 9, "comesFrom", ["m"], [6]], ["m", 11, "comesFrom", ["m"], [6]], ["m", 21, "comesFrom", ["m"], [6]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 15, "comesFrom", ["i"], [12]], ["i", 18, "comesFrom", ["i"], [12]], ["i", 29, "comesFrom", ["i"], [28]], ["i", 31, "comesFrom", ["i"], [28]], ["i", 34, "comesFrom", ["i"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::94", "code": "#include \"background_extractor.h\"\n\nnamespace TooManyPeeps {\n\n  BackgroundExtractor::BackgroundExtractor(const cv::Mat& original, cv::Mat& result,\n    int historySize, double threshold)\n    : ProcessFilter(original, result) {\n\n    backgroundExtractor = cv::createBackgroundSubtractorMOG2(historySize, threshold, TRACK_SHADOWS);\n    // If TRACK_SHADOWS = true, shadows are also marked in result with value = 127\n  }\n\n  BackgroundExtractor::BackgroundExtractor(cv::Mat& image, int historySize, double threshold)\n    : BackgroundExtractor(image, image, historySize, threshold) {\n  }\n\n  BackgroundExtractor::~BackgroundExtractor(void) {\n    delete backgroundExtractor;\n  }\n\n  void BackgroundExtractor::execute(void) {\n    backgroundExtractor->apply(get_original(), get_result());\n  }\n\n};\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "background", "_", "ext", "ractor", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠToo", "Many", "Pe", "eps", "Ġ{", "ĊĊ", "Ġ", "ĠBackground", "Ext", "ractor", "::", "Background", "Ext", "ractor", "(", "const", "Ġc", "v", "::", "Mat", "&", "Ġoriginal", ",", "Ġc", "v", "::", "Mat", "&", "Ġresult", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġhistory", "Size", ",", "Ġdouble", "Ġthreshold", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠProcess", "Filter", "(", "original", ",", "Ġresult", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbackground", "Ext", "ractor", "Ġ=", "Ġc", "v", "::", "create", "Background", "Sub", "t", "ractor", "M", "OG", "2", "(", "history", "Size", ",", "Ġthreshold", ",", "ĠTR", "ACK", "_", "SH", "AD", "OWS", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠIf", "ĠTR", "ACK", "_", "SH", "AD", "OWS", "Ġ=", "Ġtrue", ",", "Ġshadows", "Ġare", "Ġalso", "Ġmarked", "Ġin", "Ġresult", "Ġwith", "Ġvalue", "Ġ=", "Ġ127", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "ĠBackground", "Ext", "ractor", "::", "Background", "Ext", "ractor", "(", "cv", "::", "Mat", "&", "Ġimage", ",", "Ġint", "Ġhistory", "Size", ",", "Ġdouble", "Ġthreshold", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠBackground", "Ext", "ractor", "(", "image", ",", "Ġimage", ",", "Ġhistory", "Size", ",", "Ġthreshold", ")", "Ġ{", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "ĠBackground", "Ext", "ractor", "::", "~", "Background", "Ext", "ractor", "(", "void", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġbackground", "Ext", "ractor", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġvoid", "ĠBackground", "Ext", "ractor", "::", "execute", "(", "void", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbackground", "Ext", "ractor", "->", "apply", "(", "get", "_", "original", "(),", "Ġget", "_", "result", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "};", "Ċ"], "dataflow_graph": [["historySize", 10, "comesFrom", ["historySize"], [3]], ["historySize", 20, "comesFrom", ["historySize"], [15]], ["threshold", 11, "comesFrom", ["threshold"], [4]], ["threshold", 21, "comesFrom", ["threshold"], [16]], ["backgroundExtractor", 23, "comesFrom", ["backgroundExtractor"], [8]], ["backgroundExtractor", 25, "comesFrom", ["backgroundExtractor"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::95", "code": "///////////////////////////////////////////////////////////////////////////////\n// Copyright (c) Lewis Baker\n// Licenced under MIT license. See LICENSE.txt for details.\n///////////////////////////////////////////////////////////////////////////////\n#ifndef CPPCORO_TESTS_COUNTED_HPP_INCLUDED\n#define CPPCORO_TESTS_COUNTED_HPP_INCLUDED\n\nstruct counted\n{\n\tstatic int default_construction_count;\n\tstatic int copy_construction_count;\n\tstatic int move_construction_count;\n\tstatic int destruction_count;\n\n\tint id;\n\n\tstatic void reset_counts()\n\t{\n\t\tdefault_construction_count = 0;\n\t\tcopy_construction_count = 0;\n\t\tmove_construction_count = 0;\n\t\tdestruction_count = 0;\n\t}\n\n\tstatic int construction_count()\n\t{\n\t\treturn default_construction_count + copy_construction_count + move_construction_count;\n\t}\n\n\tstatic int active_count()\n\t{\n\t\treturn construction_count() - destruction_count;\n\t}\n\n\tcounted() : id(default_construction_count++) {}\n\tcounted(const counted& other) : id(other.id) { ++copy_construction_count; }\n\tcounted(counted&& other) : id(other.id) { ++move_construction_count; other.id = -1; }\n\t~counted() { ++destruction_count; }\n\n};\n\n#endif\n", "code_tokens": ["Ġ//", "////////////////////////////////", "////////////////////////////////", "////////", "////", "/", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "ĠLewis", "ĠBaker", "Ċ", "//", "ĠLic", "enced", "Ġunder", "ĠMIT", "Ġlicense", ".", "ĠSee", "ĠLIC", "ENSE", ".", "txt", "Ġfor", "Ġdetails", ".", "Ċ", "////////////////////////////////", "////////////////////////////////", "////////", "////", "///", "Ċ", "#", "if", "nd", "ef", "ĠCP", "PC", "OR", "O", "_", "T", "ES", "TS", "_", "C", "OUNT", "ED", "_", "H", "PP", "_", "IN", "CLUD", "ED", "Ċ", "#", "define", "ĠCP", "PC", "OR", "O", "_", "T", "ES", "TS", "_", "C", "OUNT", "ED", "_", "H", "PP", "_", "IN", "CLUD", "ED", "Ċ", "Ċ", "struct", "Ġcounted", "Ċ", "{", "Ċ", "ĉ", "static", "Ġint", "Ġdefault", "_", "const", "ruction", "_", "count", ";", "Ċ", "ĉ", "static", "Ġint", "Ġcopy", "_", "const", "ruction", "_", "count", ";", "Ċ", "ĉ", "static", "Ġint", "Ġmove", "_", "const", "ruction", "_", "count", ";", "Ċ", "ĉ", "static", "Ġint", "Ġdestruction", "_", "count", ";", "ĊĊ", "ĉ", "int", "Ġid", ";", "ĊĊ", "ĉ", "static", "Ġvoid", "Ġreset", "_", "count", "s", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "default", "_", "const", "ruction", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "copy", "_", "const", "ruction", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "move", "_", "const", "ruction", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "dest", "ruction", "_", "count", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "static", "Ġint", "Ġconstruction", "_", "count", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġdefault", "_", "const", "ruction", "_", "count", "Ġ+", "Ġcopy", "_", "const", "ruction", "_", "count", "Ġ+", "Ġmove", "_", "const", "ruction", "_", "count", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "static", "Ġint", "Ġactive", "_", "count", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġconstruction", "_", "count", "()", "Ġ-", "Ġdestruction", "_", "count", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "count", "ed", "()", "Ġ:", "Ġid", "(", "default", "_", "const", "ruction", "_", "count", "++)", "Ġ{}", "Ċ", "ĉ", "count", "ed", "(", "const", "Ġcounted", "&", "Ġother", ")", "Ġ:", "Ġid", "(", "other", ".", "id", ")", "Ġ{", "Ġ++", "copy", "_", "const", "ruction", "_", "count", ";", "Ġ}", "Ċ", "ĉ", "count", "ed", "(", "count", "ed", "&&", "Ġother", ")", "Ġ:", "Ġid", "(", "other", ".", "id", ")", "Ġ{", "Ġ++", "move", "_", "const", "ruction", "_", "count", ";", "Ġother", ".", "id", "Ġ=", "Ġ-", "1", ";", "Ġ}", "Ċ", "ĉ", "~", "count", "ed", "()", "Ġ{", "Ġ++", "dest", "ruction", "_", "count", ";", "Ġ}", "Ċ", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["default_construction_count", 13, "comesFrom", ["default_construction_count"], [8]], ["default_construction_count", 21, "comesFrom", ["default_construction_count"], [8]], ["copy_construction_count", 14, "comesFrom", ["copy_construction_count"], [9]], ["copy_construction_count", 27, "comesFrom", ["copy_construction_count"], [9]], ["move_construction_count", 15, "comesFrom", ["move_construction_count"], [10]], ["move_construction_count", 33, "comesFrom", ["move_construction_count"], [10]], ["destruction_count", 18, "comesFrom", ["destruction_count"], [11]], ["destruction_count", 37, "comesFrom", ["destruction_count"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::96", "code": "#include <SFML/Graphics.hpp>\n#include <SFML/Audio.hpp>\n#include <iostream>\n\nint main()\n{\n    sf::RenderWindow window(sf::VideoMode(200, 200), \"Donguili\");\n\n    sf::Music sound;\n    if (!sound.openFromFile(\"C:/Users/Alpha/Documents/Donguili/bin/Debug/test.ogg\"))\n    return -1; // erreur\n    sound.play();\n\n    while (window.isOpen())\n    {\n        sf::Event event;\n        while (window.pollEvent(event))\n        {\n            if (event.type == sf::Event::Closed)\n                window.close();\n        }\n// Presse de touche\n\n     if (sf::Keyboard::isKeyPressed(sf::Keyboard::Space))\n    {\n        std::cout << \"Musique en pause\" << std::endl;\n        sound.pause();\n    }\n    if (sf::Keyboard::isKeyPressed(sf::Keyboard::P))\n    {\n        std::cout << \"Musique lancé\" << std::endl;\n         sound.play();\n     }\n\n// Fin Presse touche\n        window.clear();\n        window.display();\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "SF", "ML", "/", "Graphics", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "SF", "ML", "/", "Audio", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", "f", "::", "Render", "Window", "Ġwindow", "(", "sf", "::", "Video", "Mode", "(", "200", ",", "Ġ200", "),", "Ġ\"", "D", "ong", "u", "ili", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġs", "f", "::", "Music", "Ġsound", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "sound", ".", "open", "From", "File", "(\"", "C", ":/", "Users", "/", "Alpha", "/", "Documents", "/", "D", "ong", "u", "ili", "/", "bin", "/", "Debug", "/", "test", ".", "ogg", "\"))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ġ//", "Ġer", "re", "ur", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsound", ".", "play", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "window", ".", "is", "Open", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "f", "::", "Event", "Ġevent", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "window", ".", "poll", "Event", "(", "event", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "event", ".", "type", "Ġ==", "Ġs", "f", "::", "Event", "::", "Cl", "osed", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwindow", ".", "close", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "//", "ĠPres", "se", "Ġde", "Ġtou", "che", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "sf", "::", "Key", "board", "::", "is", "Key", "P", "ressed", "(", "sf", "::", "Key", "board", "::", "Space", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Mus", "ique", "Ġen", "Ġpause", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsound", ".", "pause", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "sf", "::", "Key", "board", "::", "is", "Key", "P", "ressed", "(", "sf", "::", "Key", "board", "::", "P", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Mus", "ique", "Ġl", "anc", "Ã©", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsound", ".", "play", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "//", "ĠFin", "ĠPres", "se", "Ġtou", "che", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwindow", ".", "clear", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwindow", ".", "display", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["sound", 4, "comesFrom", ["sound"], [3]], ["sound", 6, "comesFrom", ["sound"], [3]], ["sound", 23, "comesFrom", ["sound"], [3]], ["sound", 29, "comesFrom", ["sound"], [3]], ["window", 8, "comesFrom", ["window"], [1]], ["window", 11, "comesFrom", ["window"], [1]], ["window", 17, "comesFrom", ["window"], [1]], ["window", 31, "comesFrom", ["window"], [1]], ["window", 33, "comesFrom", ["window"], [1]], ["event", 13, "comesFrom", ["event"], [10]], ["event", 14, "comesFrom", ["event"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::97", "code": "#include \"hiscores.h\"\n#include \"nucleo.h\"\n#include \"galeria.h\"\n\nHi_Scores::Hi_Scores(Nucleo *nucleo) : Widget( nucleo->screen, (SDL_Rect) {200, 50, 430, 520} )\n{\n    this->nucleo = nucleo;\n    fuente = nucleo->galeria->get_fuente(CHICA2);\n    set_color(183, 238, 128);\n    refresh();\n}\n\nvoid Hi_Scores::refresh()\n{\n    static Image *fondo;\n    fondo = nucleo->galeria->get_imagen (HI_SCORES);\n\n    fondo->imprimir(widget);\n    print_scores();\n}\n\nvoid Hi_Scores::print_scores(void)\n{\n    for(int i = 0; i < WIN_LIST.size(); i++)\n    {\n        fuente->imprimir(widget, (char*) WIN_LIST[i].name.c_str(), 50, 100 + (20*i) );\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "h", "isc", "ores", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "n", "ucle", "o", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gal", "eria", ".", "h", "\"", "Ċ", "Ċ", "Hi", "_", "Sc", "ores", "::", "Hi", "_", "Sc", "ores", "(", "N", "ucle", "o", "Ġ*", "n", "ucle", "o", ")", "Ġ:", "ĠW", "idget", "(", "Ġnucle", "o", "->", "screen", ",", "Ġ(", "SD", "L", "_", "Rect", ")", "Ġ{", "200", ",", "Ġ50", ",", "Ġ430", ",", "Ġ520", "}", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "n", "ucle", "o", "Ġ=", "Ġnucle", "o", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfu", "ente", "Ġ=", "Ġnucle", "o", "->", "gal", "eria", "->", "get", "_", "fu", "ente", "(", "CH", "ICA", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "_", "color", "(", "183", ",", "Ġ238", ",", "Ġ128", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġrefresh", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHi", "_", "Sc", "ores", "::", "ref", "resh", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "ĠImage", "Ġ*", "f", "ondo", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfond", "o", "Ġ=", "Ġnucle", "o", "->", "gal", "eria", "->", "get", "_", "im", "agen", "Ġ(", "HI", "_", "SC", "OR", "ES", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfond", "o", "->", "im", "pr", "imir", "(", "widget", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprint", "_", "sc", "ores", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHi", "_", "Sc", "ores", "::", "print", "_", "sc", "ores", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠWIN", "_", "LIST", ".", "size", "();", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfu", "ente", "->", "im", "pr", "imir", "(", "widget", ",", "Ġ(", "char", "*)", "ĠWIN", "_", "LIST", "[", "i", "].", "name", ".", "c", "_", "str", "(),", "Ġ50", ",", "Ġ100", "Ġ+", "Ġ(", "20", "*", "i", ")", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["fondo", 21, "comesFrom", ["fondo"], [16]], ["i", 27, "comesFrom", ["i"], [26]], ["i", 30, "comesFrom", ["i"], [26]], ["i", 35, "comesFrom", ["i"], [26]], ["i", 38, "comesFrom", ["i"], [26]], ["fuente", 31, "comesFrom", ["fuente"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::98", "code": "class Solution {\r\npublic:\r\n    vector<int> ori, cur;\r\n    random_device rd;\r\n    mt19937 g;\r\n    Solution(vector<int> nums) : ori(nums), cur(nums), g(rd()) {\r\n    }\r\n    \r\n    /** Resets the array to its original configuration and return it. */\r\n    vector<int> reset() {\r\n        return cur = ori;\r\n    }\r\n    \r\n    /** Returns a random shuffling of the array. */\r\n    vector<int> shuffle() {\r\n        std::shuffle(cur.begin(), cur.end(), g);\r\n        return cur;\r\n    }\r\n};\r\n\r\n/**\r\n * Your Solution object will be instantiated and called as such:\r\n * Solution obj = new Solution(nums);\r\n * vector<int> param_1 = obj.reset();\r\n * vector<int> param_2 = obj.shuffle();\r\n */", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "č", "Ċ", "public", ":", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġori", ",", "Ġcur", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġrandom", "_", "device", "Ġr", "d", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmt", "199", "37", "Ġg", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSolution", "(", "vector", "<", "int", ">", "Ġnum", "s", ")", "Ġ:", "Ġori", "(", "n", "ums", "),", "Ġcur", "(", "n", "ums", "),", "Ġg", "(", "rd", "())", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ/**", "ĠRes", "ets", "Ġthe", "Ġarray", "Ġto", "Ġits", "Ġoriginal", "Ġconfiguration", "Ġand", "Ġreturn", "Ġit", ".", "Ġ*/", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġreset", "()", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcur", "Ġ=", "Ġori", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ/**", "ĠReturns", "Ġa", "Ġrandom", "Ġshuff", "ling", "Ġof", "Ġthe", "Ġarray", ".", "Ġ*/", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġshuffle", "()", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "sh", "uffle", "(", "cur", ".", "begin", "(),", "Ġcur", ".", "end", "(),", "Ġg", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcur", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "};", "č", "Ċ", "č", "Ċ", "/**", "č", "Ċ", "Ġ*", "ĠYour", "ĠSolution", "Ġobject", "Ġwill", "Ġbe", "Ġinstant", "iated", "Ġand", "Ġcalled", "Ġas", "Ġsuch", ":", "č", "Ċ", "Ġ*", "ĠSolution", "Ġobj", "Ġ=", "Ġnew", "ĠSolution", "(", "n", "ums", ");", "č", "Ċ", "Ġ*", "Ġvector", "<", "int", ">", "Ġparam", "_", "1", "Ġ=", "Ġobj", ".", "reset", "();", "č", "Ċ", "Ġ*", "Ġvector", "<", "int", ">", "Ġparam", "_", "2", "Ġ=", "Ġobj", ".", "sh", "uffle", "();", "č", "Ċ", "Ġ*/"], "dataflow_graph": [["cur", 17, "comesFrom", ["cur"], [13]], ["cur", 19, "comesFrom", ["cur"], [13]], ["cur", 22, "comesFrom", ["cur"], [13]], ["nums", 7, "comesFrom", ["nums"], [5]], ["nums", 9, "comesFrom", ["nums"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::99", "code": "#include \"NoReturnFunctionExtractionValidator.hpp\"\n#include <cppmanip/boundary/ExtractMethodError.hpp>\n#include <boost/range/adaptor/transformed.hpp>\n#include <boost/algorithm/string/join.hpp>\n#include <boost/range/algorithm_ext/push_back.hpp>\n#include <boost/range/algorithm/sort.hpp>\n\nnamespace cppmanip\n{\n\nnamespace\n{\n\nstd::string printOrderedVariableNameList(const ast::LocalVariables& variables)\n{\n    using boost::adaptors::transformed;\n    std::vector<std::string> names;\n    boost::push_back(names, variables | transformed(std::bind(&ast::LocalVariable::getName, std::placeholders::_1)));\n    boost::sort(names);\n    return boost::algorithm::join(names, \", \");\n}\n\n}\n\nvoid NoReturnFunctionExtractionValidator::validateStatements(const std::string& functionName, ast::ScopedStatementRange selected)\n{\n    auto used = findVariablesDeclaredByAndUsedAfterStmts(selected.getRange(), selected.getScope());\n    if (!used.empty())\n        throw boundary::ExtractMethodError(\"Cannot extract \\'\" + functionName +\n            \"\\'. Following variables are in use after the selected statements: \" + printOrderedVariableNameList(used));\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "No", "Return", "Function", "Ext", "raction", "Valid", "ator", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "cpp", "man", "ip", "/", "bound", "ary", "/", "Ext", "ract", "Method", "Error", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "range", "/", "adapt", "or", "/", "trans", "formed", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "al", "gorithm", "/", "string", "/", "join", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "range", "/", "al", "gorithm", "_", "ext", "/", "push", "_", "back", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "range", "/", "al", "gorithm", "/", "sort", ".", "h", "pp", ">", "Ċ", "Ċ", "names", "pace", "Ġc", "pp", "man", "ip", "Ċ", "{", "Ċ", "Ċ", "names", "pace", "Ċ", "{", "Ċ", "Ċ", "std", "::", "string", "Ġprint", "Ord", "ered", "Variable", "Name", "List", "(", "const", "Ġast", "::", "Local", "Vari", "ables", "&", "Ġvariables", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġusing", "Ġboost", "::", "adapt", "ors", "::", "trans", "formed", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġnames", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġboost", "::", "push", "_", "back", "(", "names", ",", "Ġvariables", "Ġ|", "Ġtransformed", "(", "std", "::", "bind", "(&", "ast", "::", "Local", "Variable", "::", "get", "Name", ",", "Ġstd", "::", "place", "holders", "::", "_", "1", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġboost", "::", "sort", "(", "names", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġboost", "::", "al", "gorithm", "::", "join", "(", "names", ",", "Ġ\",", "Ġ\"", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNo", "Return", "Function", "Ext", "raction", "Valid", "ator", "::", "valid", "ate", "Stat", "ements", "(", "const", "Ġstd", "::", "string", "&", "Ġfunction", "Name", ",", "Ġast", "::", "Sc", "oped", "Statement", "Range", "Ġselected", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġused", "Ġ=", "Ġfind", "Vari", "ables", "Decl", "ared", "By", "And", "Used", "After", "St", "m", "ts", "(", "selected", ".", "get", "Range", "(),", "Ġselected", ".", "get", "Scope", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "used", ".", "empty", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġboundary", "::", "Ext", "ract", "Method", "Error", "(\"", "C", "annot", "Ġextract", "Ġ\\", "'\"", "Ġ+", "Ġfunction", "Name", "Ġ+", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"\\", "'.", "ĠFollowing", "Ġvariables", "Ġare", "Ġin", "Ġuse", "Ġafter", "Ġthe", "Ġselected", "Ġstatements", ":", "Ġ\"", "Ġ+", "Ġprint", "Ord", "ered", "Variable", "Name", "List", "(", "used", "));", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["names", 5, "comesFrom", ["names"], [3]], ["names", 12, "comesFrom", ["names"], [3]], ["names", 14, "comesFrom", ["names"], [3]], ["selected", 20, "comesFrom", ["selected"], [17]], ["selected", 22, "comesFrom", ["selected"], [17]], ["used", 24, "comesFrom", ["used"], [18]], ["used", 29, "comesFrom", ["used"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::100", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifndef int64\n#define int64 long long\n#endif\n\nint main() {\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n#endif\n    int64 h1, h2, a, b;\n    cin >> h1 >> h2 >> a >> b;\n\n    h1 += a * 8;\n    if (a <= b && h1 < h2) {\n        puts(\"-1\");\n    } else if (h1 >= h2) {\n        puts(\"0\");\n    } else {\n        int64 y = 12 * (a - b);\n        int64 i = (h2 - h1) / y;\n        if (h1 + i * y < h2)\n            i++;\n        cout << i << endl;\n    }\n\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "if", "nd", "ef", "Ġint", "64", "Ċ", "#", "define", "Ġint", "64", "Ġlong", "Ġlong", "Ċ", "#", "endif", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "#", "if", "nd", "ef", "ĠON", "LINE", "_", "J", "UD", "GE", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfre", "open", "(\"", "input", ".", "txt", "\",", "Ġ\"", "r", "\",", "Ġstd", "in", ");", "Ċ", "#", "endif", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "64", "Ġh", "1", ",", "Ġh", "2", ",", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġh", "1", "Ġ>>", "Ġh", "2", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġh", "1", "Ġ+=", "Ġa", "Ġ*", "Ġ8", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "Ġ<=", "Ġb", "Ġ&&", "Ġh", "1", "Ġ<", "Ġh", "2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġputs", "(\"", "-", "1", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "h", "1", "Ġ>=", "Ġh", "2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġputs", "(\"", "0", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "64", "Ġy", "Ġ=", "Ġ12", "Ġ*", "Ġ(", "a", "Ġ-", "Ġb", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "64", "Ġi", "Ġ=", "Ġ(", "h", "2", "Ġ-", "Ġh", "1", ")", "Ġ/", "Ġy", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "h", "1", "Ġ+", "Ġi", "Ġ*", "Ġy", "Ġ<", "Ġh", "2", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġi", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["h1", 12, "comesFrom", ["h1"], [7]], ["h1", 20, "comesFrom", ["h1"], [16]], ["h1", 23, "comesFrom", ["h1"], [16]], ["h1", 31, "comesFrom", ["h1"], [16]], ["h1", 33, "comesFrom", ["h1"], [16]], ["h2", 13, "comesFrom", ["h2"], [8]], ["h2", 21, "comesFrom", ["h2"], [8]], ["h2", 24, "comesFrom", ["h2"], [8]], ["h2", 30, "comesFrom", ["h2"], [8]], ["h2", 36, "comesFrom", ["h2"], [8]], ["a", 14, "comesFrom", ["a"], [9]], ["a", 17, "comesFrom", ["a"], [9]], ["a", 18, "comesFrom", ["a"], [9]], ["a", 27, "comesFrom", ["a"], [9]], ["b", 15, "comesFrom", ["b"], [10]], ["b", 19, "comesFrom", ["b"], [10]], ["b", 28, "comesFrom", ["b"], [10]], ["y", 32, "comesFrom", ["y"], [26]], ["y", 35, "comesFrom", ["y"], [26]], ["i", 34, "comesFrom", ["i"], [29]], ["i", 37, "comesFrom", ["i"], [29]], ["i", 39, "comesFrom", ["i"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::101", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nvoid solve() {\n    string s; cin >> s;\n    reverse(s.begin(), s.end());\n    vector<string> pre = {\"dream\", \"dreamer\", \"erase\", \"eraser\"};\n    for (auto& x: pre) {\n        reverse(x.begin(), x.end());\n    }\n    int i = 0, n = s.size();\n    while (i < n) {\n        if (s.substr(i, 5) == pre[0] || s.substr(i, 5) == pre[2])\n            i += 5;\n        else if (s.substr(i, 6) == pre[3])\n            i += 6;\n        else if (s.substr(i, 7) == pre[1])\n            i += 7;\n        else {\n            cout << \"NO\"; return;\n        }\n    }\n    cout << \"YES\";\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    solve();\n    cout << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "void", "Ġsolve", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġs", ";", "Ġc", "in", "Ġ>>", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreverse", "(", "s", ".", "begin", "(),", "Ġs", ".", "end", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "string", ">", "Ġpre", "Ġ=", "Ġ{\"", "dream", "\",", "Ġ\"", "dream", "er", "\",", "Ġ\"", "er", "ase", "\",", "Ġ\"", "er", "aser", "\"", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "&", "Ġx", ":", "Ġpre", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreverse", "(", "x", ".", "begin", "(),", "Ġx", ".", "end", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ0", ",", "Ġn", "Ġ=", "Ġs", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "i", "Ġ<", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", ".", "sub", "str", "(", "i", ",", "Ġ5", ")", "Ġ==", "Ġpre", "[", "0", "]", "Ġ||", "Ġs", ".", "sub", "str", "(", "i", ",", "Ġ5", ")", "Ġ==", "Ġpre", "[", "2", "])", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "Ġ+=", "Ġ5", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "s", ".", "sub", "str", "(", "i", ",", "Ġ6", ")", "Ġ==", "Ġpre", "[", "3", "])", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "Ġ+=", "Ġ6", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "s", ".", "sub", "str", "(", "i", ",", "Ġ7", ")", "Ġ==", "Ġpre", "[", "1", "])", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "Ġ+=", "Ġ7", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "NO", "\";", "Ġreturn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "YES", "\";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġi", "os", "_", "base", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ".", "tie", "(", "NULL", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsolve", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["s", 4, "comesFrom", ["s"], [2]], ["s", 6, "comesFrom", ["s"], [2]], ["s", 8, "comesFrom", ["s"], [2]], ["s", 20, "comesFrom", ["s"], [2]], ["s", 24, "comesFrom", ["s"], [2]], ["s", 28, "comesFrom", ["s"], [2]], ["s", 33, "comesFrom", ["s"], [2]], ["s", 38, "comesFrom", ["s"], [2]], ["pre", 12, "comesFrom", ["pre"], [10]], ["pre", 27, "comesFrom", ["pre"], [10]], ["pre", 31, "comesFrom", ["pre"], [10]], ["pre", 36, "comesFrom", ["pre"], [10]], ["pre", 41, "comesFrom", ["pre"], [10]], ["i", 22, "comesFrom", ["i"], [18]], ["i", 26, "comesFrom", ["i"], [18]], ["i", 30, "comesFrom", ["i"], [18]], ["i", 35, "comesFrom", ["i"], [32]], ["i", 40, "comesFrom", ["i"], [37]], ["n", 23, "comesFrom", ["n"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::102", "code": "#include <cstdio>\nint main(int argc, char** argv) {\n    printf (\"Hello World\");\n    for (int i=0; i < 10; ++i) {\n        j = i && i;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "Ġ(\"", "Hello", "ĠWorld", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "Ġ10", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġj", "Ġ=", "Ġi", "Ġ&&", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 6, "comesFrom", ["i"], [4]], ["i", 8, "comesFrom", ["i"], [4]], ["i", 9, "comesFrom", ["i"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::103", "code": "#include \"log/logger.h\"\r\n#include \"log/stdoutlog.h\"\r\n//#include <windows.h>\r\n//void SetColor(unsigned short forecolor = 4, unsigned short backgroudcolor = 0)\r\n//{\r\n//\tHANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE); //»ñÈ¡»º³åÇø¾ä±ú\r\n//\tSetConsoleTextAttribute(hCon, forecolor | backgroudcolor); //ÉèÖÃÎÄ±¾¼°±³¾°É«\r\n//}\r\n\r\nint main(){\r\n\t\r\n\tLogger l;\r\n\tStdoutLogSink cl;\r\n\t\r\n\tl.Trace(\"trace .....\");\r\n\tl.Debug(\"debug --- %d\", 11);\r\n\t\r\n\tl.Info(\"info --- %d\", 11);\r\n\tl.Warn(\"warn ..yellow\");\r\n\tl.Error(\"error --- %d\", 11);\r\n\r\n\tl.Fatal(\"fatal--------------\");\r\n\treturn 0;\r\n}\r\n\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "log", "/", "log", "ger", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "log", "/", "std", "out", "log", ".", "h", "\"", "č", "Ċ", "//", "#", "include", "Ġ<", "windows", ".", "h", ">", "č", "Ċ", "//", "void", "ĠSet", "Color", "(", "unsigned", "Ġshort", "Ġfore", "color", "Ġ=", "Ġ4", ",", "Ġunsigned", "Ġshort", "Ġback", "g", "roud", "color", "Ġ=", "Ġ0", ")", "č", "Ċ", "//", "{", "č", "Ċ", "//", "ĉ", "H", "AND", "LE", "Ġh", "Con", "Ġ=", "ĠGet", "St", "d", "Handle", "(", "STD", "_", "OU", "TP", "UT", "_", "H", "AND", "LE", ");", "Ġ//", "Â»", "Ã±", "Ã", "Ī", "Â", "¡", "Â»", "Âº", "Â", "³", "Ã¥", "Ã", "ĩ", "Ã¸", "Â", "¾", "Ã¤", "Â±", "Ãº", "č", "Ċ", "//", "ĉ", "Set", "Console", "Text", "Attribute", "(", "h", "Con", ",", "Ġfore", "color", "Ġ|", "Ġback", "g", "roud", "color", ");", "Ġ//", "Ãī", "Ã¨", "Ã", "ĸ", "Ãĥ", "Ã", "İ", "Ã", "Ħ", "Â±", "Â", "¾", "Â", "¼", "Â°", "Â±", "Â", "³", "Â", "¾", "Â°", "Ãī", "Â«", "č", "Ċ", "//", "}", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(){", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "Log", "ger", "Ġl", ";", "č", "Ċ", "ĉ", "St", "d", "out", "Log", "S", "ink", "Ġcl", ";", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "l", ".", "Tr", "ace", "(\"", "trace", "Ġ....", ".\"", ");", "č", "Ċ", "ĉ", "l", ".", "Debug", "(\"", "debug", "Ġ---", "Ġ%", "d", "\",", "Ġ11", ");", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "l", ".", "Info", "(\"", "info", "Ġ---", "Ġ%", "d", "\",", "Ġ11", ");", "č", "Ċ", "ĉ", "l", ".", "W", "arn", "(\"", "warn", "Ġ..", "yellow", "\");", "č", "Ċ", "ĉ", "l", ".", "Error", "(\"", "error", "Ġ---", "Ġ%", "d", "\",", "Ġ11", ");", "č", "Ċ", "č", "Ċ", "ĉ", "l", ".", "F", "atal", "(\"", "f", "atal", "--------------", "\");", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ"], "dataflow_graph": [["l", 3, "comesFrom", ["l"], [1]], ["l", 5, "comesFrom", ["l"], [1]], ["l", 7, "comesFrom", ["l"], [1]], ["l", 9, "comesFrom", ["l"], [1]], ["l", 11, "comesFrom", ["l"], [1]], ["l", 13, "comesFrom", ["l"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::104", "code": "#include \"problem_28.hpp\"\n\n#include <iostream>\n\nusing namespace std;\n\nint sum_for_corners_in_square(int side) {\n    return 4*side*side - 6*(side - 1);\n}\n\nTEST(problem_28, full) {\n    int sum(1);\n\n    for (int d = 3; d <= 1001; d+=2) {\n        sum += sum_for_corners_in_square(d);\n    }\n    \n    EXPECT_EQ(669171001, sum);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "problem", "_", "28", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġsum", "_", "for", "_", "corn", "ers", "_", "in", "_", "square", "(", "int", "Ġside", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ4", "*", "side", "*", "side", "Ġ-", "Ġ6", "*", "(", "side", "Ġ-", "Ġ1", ");", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "(", "problem", "_", "28", ",", "Ġfull", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsum", "(", "1", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġd", "Ġ=", "Ġ3", ";", "Ġd", "Ġ<=", "Ġ100", "1", ";", "Ġd", "+=", "2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsum", "Ġ+=", "Ġsum", "_", "for", "_", "corn", "ers", "_", "in", "_", "square", "(", "d", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "669", "17", "1001", ",", "Ġsum", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["side", 3, "comesFrom", ["side"], [2]], ["side", 4, "comesFrom", ["side"], [2]], ["side", 5, "comesFrom", ["side"], [2]], ["d", 9, "comesFrom", ["d"], [8]], ["d", 13, "comesFrom", ["d"], [10]], ["sum", 15, "comesFrom", ["sum"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::105", "code": "#include <iostream>\nusing namespace std;\nint main(int argc, char const *argv[]) {\n\n   int n= 20;\n  label:\n      cout << n << endl;\n      n--;\n    if(n > 0){\n       goto  label;\n    }\n\n  std::cout << \"endle\" << '\\n';\n\n\n  std::cout << \"string euqals: \" << (strcmp(\"hello\", \"hello\")) << '\\n';\n\n  if(strcmp(\"hello\", \"hello\") == 0){\n      printf(\"hello equals hello\\n\");\n  }\n\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġconst", "Ġ*", "arg", "v", "[", "])", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġint", "Ġn", "=", "Ġ20", ";", "Ċ", "Ġ", "Ġlabel", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġn", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "n", "Ġ>", "Ġ0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġgoto", "Ġ", "Ġlabel", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "end", "le", "\"", "Ġ<<", "Ġ'", "\\", "n", "';", "ĊĊ", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "string", "Ġe", "u", "q", "als", ":", "Ġ\"", "Ġ<<", "Ġ(", "str", "cmp", "(\"", "hello", "\",", "Ġ\"", "hello", "\"))", "Ġ<<", "Ġ'", "\\", "n", "';", "ĊĊ", "Ġ", "Ġif", "(", "str", "cmp", "(\"", "hello", "\",", "Ġ\"", "hello", "\")", "Ġ==", "Ġ0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "hello", "Ġequals", "Ġhello", "\\", "n", "\");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [4]], ["n", 8, "comesFrom", ["n"], [4]], ["n", 9, "comesFrom", ["n"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::106", "code": "#include <progress_bar.hh>\n\nPROGRESS_BAR\n::\nPROGRESS_BAR(int x, int y, int w, int h, void(*opf)(void), void(*orf)(void), int ea, int ia, int l)\n:\nWIDGET(x,y,w,h,opf,orf)\n{\n    this->ext_angle = ea;\n    this->int_angle = ia;\n    this->level = l;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "progress", "_", "bar", ".", "hh", ">", "Ċ", "Ċ", "PR", "OGR", "ESS", "_", "B", "AR", "Ċ", "::", "Ċ", "PR", "OGR", "ESS", "_", "B", "AR", "(", "int", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġw", ",", "Ġint", "Ġh", ",", "Ġvoid", "(*", "op", "f", ")(", "void", "),", "Ġvoid", "(*", "orf", ")(", "void", "),", "Ġint", "Ġe", "a", ",", "Ġint", "Ġ", "ia", ",", "Ġint", "Ġl", ")", "Ċ", ":", "Ċ", "W", "ID", "GET", "(", "x", ",", "y", ",", "w", ",", "h", ",", "op", "f", ",", "orf", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "ext", "_", "angle", "Ġ=", "Ġe", "a", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "int", "_", "angle", "Ġ=", "Ġ", "ia", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "level", "Ġ=", "Ġl", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 11, "comesFrom", ["x"], [1]], ["y", 12, "comesFrom", ["y"], [2]], ["w", 13, "comesFrom", ["w"], [3]], ["h", 14, "comesFrom", ["h"], [4]], ["ea", 18, "comesFrom", ["ea"], [7]], ["ia", 20, "comesFrom", ["ia"], [8]], ["l", 22, "comesFrom", ["l"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::107", "code": "#include \"peerreview/vrf.h\"\n\n#define SUBSYSTEM \"VrfExtInfoPolicy\"\n\nVrfExtInfoPolicy::VrfExtInfoPolicy(VerifiablePRNG *vprng) : ExtInfoPolicy()\n{\n  this->vprng = vprng;\n}\n\nVrfExtInfoPolicy::~VrfExtInfoPolicy()\n{\n}\n\nint VrfExtInfoPolicy::storeExtInfo(SecureHistory *history, long long followingSeq, unsigned char *buffer, unsigned int maxlen)\n{\n  int extInfoLen = vprng->storeExtInfo(buffer, maxlen);\n  if (extInfoLen > 0) {\n    unsigned char ty = EVT_VRF;\n    int ne = history->findNextEntry(&ty, 1, followingSeq);\n    if (ne >= 0) {\n      //plog(3, \"GETTING VRF @%d/%lld\", ne, followingSeq);\n      extInfoLen = history->getEntry(ne, buffer, maxlen);\n      //plog(3, \"=> %d\", extInfoLen);\n    }\n  }\n  \n  return extInfoLen;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "peer", "review", "/", "vr", "f", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠSU", "BS", "Y", "STEM", "Ġ\"", "V", "rf", "Ext", "Info", "Policy", "\"", "Ċ", "Ċ", "V", "rf", "Ext", "Info", "Policy", "::", "V", "rf", "Ext", "Info", "Policy", "(", "Ver", "ifiable", "PR", "NG", "Ġ*", "v", "pr", "ng", ")", "Ġ:", "ĠExt", "Info", "Policy", "()", "Ċ", "{", "Ċ", "Ġ", "Ġthis", "->", "v", "pr", "ng", "Ġ=", "Ġv", "pr", "ng", ";", "Ċ", "}", "Ċ", "Ċ", "V", "rf", "Ext", "Info", "Policy", "::", "~", "V", "rf", "Ext", "Info", "Policy", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "int", "ĠV", "rf", "Ext", "Info", "Policy", "::", "store", "Ext", "Info", "(", "Secure", "History", "Ġ*", "history", ",", "Ġlong", "Ġlong", "Ġfollowing", "Se", "q", ",", "Ġunsigned", "Ġchar", "Ġ*", "buffer", ",", "Ġunsigned", "Ġint", "Ġmax", "len", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġext", "Info", "Len", "Ġ=", "Ġv", "pr", "ng", "->", "store", "Ext", "Info", "(", "buffer", ",", "Ġmax", "len", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "ext", "Info", "Len", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġchar", "Ġty", "Ġ=", "ĠEV", "T", "_", "VR", "F", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġne", "Ġ=", "Ġhistory", "->", "find", "Next", "Entry", "(&", "ty", ",", "Ġ1", ",", "Ġfollowing", "Se", "q", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "ne", "Ġ>=", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "pl", "og", "(", "3", ",", "Ġ\"", "GET", "TING", "ĠVR", "F", "Ġ@", "%", "d", "/", "%", "ll", "d", "\",", "Ġne", ",", "Ġfollowing", "Se", "q", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġext", "Info", "Len", "Ġ=", "Ġhistory", "->", "get", "Entry", "(", "ne", ",", "Ġbuffer", ",", "Ġmax", "len", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "pl", "og", "(", "3", ",", "Ġ\"", "=>", "Ġ%", "d", "\",", "Ġext", "Info", "Len", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġext", "Info", "Len", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["maxlen", 16, "comesFrom", ["maxlen"], [11]], ["maxlen", 31, "comesFrom", ["maxlen"], [11]], ["extInfoLen", 17, "comesFrom", ["extInfoLen"], [12]], ["extInfoLen", 32, "comesFrom", ["extInfoLen"], [26]], ["ty", 23, "comesFrom", ["ty"], [18]], ["followingSeq", 24, "comesFrom", ["followingSeq"], [9]], ["ne", 25, "comesFrom", ["ne"], [20]], ["ne", 29, "comesFrom", ["ne"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::108", "code": "//Symbolic Property\n#ifndef _PROBMODELS_BASE_SYMBOLIC_PROPERTY_HPP_\n#define _PROBMODELS_BASE_SYMBOLIC_PROPERTY_HPP_\n\n#include <array>\n\n#include \"boost/pending/property.hpp\"\n\nnamespace probmodels {\nnamespace base {\n\n//Property must be copyable, assignable and copy constructable\ntemplate <std::size_t Len, typename Property = boost::no_property>\nclass SymbolicProperty {\n\n    static const std::size_t _array_len = Len+1;\n\npublic:\n    SymbolicProperty() {}\n    SymbolicProperty(const SymbolicProperty& prop) :\n        _label(prop._label), _prop(prop._prop) {}\n\n    inline const char* label() const { return _label; }\n\n    SymbolicProperty& operator= (const SymbolicProperty& property) {\n        std::copy(property._label, property._label+Len+1, _label);\n    }\n\nprivate:\n    std::array<char,_array_len> _label;\n    Property _prop;\n};\n\n}\n}\n\n#endif\n", "code_tokens": ["Ġ//", "Sy", "mb", "olic", "ĠProperty", "Ċ", "#", "if", "nd", "ef", "Ġ_", "PR", "OB", "MOD", "ELS", "_", "B", "ASE", "_", "SY", "MB", "OL", "IC", "_", "PR", "OPER", "TY", "_", "H", "PP", "_", "Ċ", "#", "define", "Ġ_", "PR", "OB", "MOD", "ELS", "_", "B", "ASE", "_", "SY", "MB", "OL", "IC", "_", "PR", "OPER", "TY", "_", "H", "PP", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "array", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "boost", "/", "p", "ending", "/", "property", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġprob", "models", "Ġ{", "Ċ", "names", "pace", "Ġbase", "Ġ{", "Ċ", "Ċ", "//", "Property", "Ġmust", "Ġbe", "Ġcopy", "able", ",", "Ġassign", "able", "Ġand", "Ġcopy", "Ġconstruct", "able", "Ċ", "template", "Ġ<", "std", "::", "size", "_", "t", "ĠLen", ",", "Ġtyp", "ename", "ĠProperty", "Ġ=", "Ġboost", "::", "no", "_", "property", ">", "Ċ", "class", "ĠSymb", "olic", "Property", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġconst", "Ġstd", "::", "size", "_", "t", "Ġ_", "array", "_", "len", "Ġ=", "ĠLen", "+", "1", ";", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSymb", "olic", "Property", "()", "Ġ{}", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSymb", "olic", "Property", "(", "const", "ĠSymb", "olic", "Property", "&", "Ġprop", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "label", "(", "prop", "._", "label", "),", "Ġ_", "prop", "(", "prop", "._", "prop", ")", "Ġ{}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġconst", "Ġchar", "*", "Ġlabel", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġ_", "label", ";", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠSymb", "olic", "Property", "&", "Ġoperator", "=", "Ġ(", "const", "ĠSymb", "olic", "Property", "&", "Ġproperty", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "copy", "(", "property", "._", "label", ",", "Ġproperty", "._", "label", "+", "Len", "+", "1", ",", "Ġ_", "label", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "array", "<", "char", ",", "_", "array", "_", "len", ">", "Ġ_", "label", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠProperty", "Ġ_", "prop", ";", "Ċ", "};", "Ċ", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["Len", 4, "comesFrom", ["Len"], [2]], ["Len", 22, "comesFrom", ["Len"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::109", "code": "/**\n * @file\t\tsingleton.hpp\n * @brief\t\tdynamic Singleton pattern design template class\n * @author\t\tByunghun Hwang<bhhwang@nsynapse.com>\n * @date \t\t2015. 8. 2\n * @details\tsingleton ÆÐÅÏ ÅÛÇÃ¸´ Å¬·¡½º\n */\n\n#ifndef _COSSB_ARCH_SINGLETON_HPP_\n#define _COSSB_ARCH_SINGLETON_HPP_\n\n#include <iostream>\n#include <utility>\n\nusing namespace std;\n\nnamespace cossb {\nnamespace arch {\n\n/**\n * @brief\tdynamic singleton design pattern\n */\ntemplate <class T>\nclass singleton {\npublic:\n\ttemplate<typename... Args>\n\tstatic T* instance(Args... args) {\n\t\tif(!_instance) {\n\t\t\t_instance = new T(std::forward<Args>(args)...);\n\t\t}\n\t\treturn _instance;\n\t}\n\tstatic void destroy() {\n\t\tif(_instance) {\n\t\t\tdelete _instance;\n\t\t\t_instance = nullptr;\n\t\t}\n\t}\n\nprotected:\n\tsingleton() {}\n\tsingleton(singleton const&) {}\n\tsingleton& operator=(singleton const&) { return *this; }\n\n\nprivate:\n\tstatic T* _instance;\n\n};\n\ntemplate <class T> T* singleton<T>::_instance = nullptr;\n\n} /* namespace arch */\n} /* namespace cossb */\n\n\n#endif /* _COSSB_ARCH_SINGLETON_HPP_ */\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "file", "ĉ", "ĉ", "sing", "leton", ".", "h", "pp", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĉ", "ĉ", "d", "ynamic", "ĠSing", "leton", "Ġpattern", "Ġdesign", "Ġtemplate", "Ġclass", "Ċ", "Ġ*", "Ġ@", "author", "ĉ", "ĉ", "By", "un", "gh", "un", "ĠH", "wang", "<", "b", "hh", "wang", "@", "n", "syn", "apse", ".", "com", ">", "Ċ", "Ġ*", "Ġ@", "date", "Ġ", "ĉ", "ĉ", "2015", ".", "Ġ8", ".", "Ġ2", "Ċ", "Ġ*", "Ġ@", "details", "ĉ", "sing", "leton", "ĠÃ", "Ĩ", "Ã", "Ĳ", "Ã", "ħ", "Ã", "ı", "ĠÃ", "ħ", "ÃĽ", "Ã", "ĩ", "Ãĥ", "Â", "¸", "Â´", "ĠÃ", "ħ", "Â", "¬", "Â·", "Â", "¡", "Â½", "Âº", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "if", "nd", "ef", "Ġ_", "C", "OS", "SB", "_", "ARCH", "_", "S", "ING", "LE", "TON", "_", "H", "PP", "_", "Ċ", "#", "define", "Ġ_", "C", "OS", "SB", "_", "ARCH", "_", "S", "ING", "LE", "TON", "_", "H", "PP", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "names", "pace", "Ġc", "oss", "b", "Ġ{", "Ċ", "names", "pace", "Ġarch", "Ġ{", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĉ", "d", "ynamic", "Ġsingle", "ton", "Ġdesign", "Ġpattern", "Ċ", "Ġ*/", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "class", "Ġsingle", "ton", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "template", "<", "ty", "pen", "ame", "...", "ĠAr", "gs", ">", "Ċ", "ĉ", "static", "ĠT", "*", "Ġinstance", "(", "Args", "...", "Ġargs", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "(", "!", "_", "instance", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "_", "instance", "Ġ=", "Ġnew", "ĠT", "(", "std", "::", "forward", "<", "Args", ">(", "args", ")...", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "return", "Ġ_", "instance", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "static", "Ġvoid", "Ġdestroy", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "(_", "instance", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "delete", "Ġ_", "instance", ";", "Ċ", "ĉ", "ĉ", "ĉ", "_", "instance", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "protected", ":", "Ċ", "ĉ", "sing", "leton", "()", "Ġ{}", "Ċ", "ĉ", "sing", "leton", "(", "sing", "leton", "Ġconst", "&", ")", "Ġ{}", "Ċ", "ĉ", "sing", "leton", "&", "Ġoperator", "=(", "sing", "leton", "Ġconst", "&", ")", "Ġ{", "Ġreturn", "Ġ*", "this", ";", "Ġ}", "ĊĊ", "Ċ", "private", ":", "Ċ", "ĉ", "static", "ĠT", "*", "Ġ_", "instance", ";", "Ċ", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "ĠT", "*", "Ġsingle", "ton", "<", "T", ">", "::", "_", "instance", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġarch", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġc", "oss", "b", "Ġ*/", "ĊĊ", "Ċ", "#", "endif", "Ġ/*", "Ġ_", "C", "OS", "SB", "_", "ARCH", "_", "S", "ING", "LE", "TON", "_", "H", "PP", "_", "Ġ*/", "Ċ"], "dataflow_graph": [["_instance", 9, "comesFrom", ["_instance"], [6]], ["_instance", 11, "comesFrom", ["_instance"], [6]], ["_instance", 12, "comesFrom", ["_instance"], [6]], ["_instance", 16, "comesFrom", ["_instance"], [13]], ["_instance", 17, "comesFrom", ["_instance"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::110", "code": "#include \"expression.h\"\n\n#include \"opt.h\"\n#include \"vm/instruction.h\"\n\nstd::vector<vv::vm::command> vv::ast::expression::code() const\n{\n  auto vec = generate();\n  optimize(vec);\n  return vec;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "expression", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "opt", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "vm", "/", "inst", "ruction", ".", "h", "\"", "Ċ", "Ċ", "std", "::", "vector", "<", "vv", "::", "vm", "::", "command", ">", "Ġv", "v", "::", "ast", "::", "expression", "::", "code", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġauto", "Ġvec", "Ġ=", "Ġgenerate", "();", "Ċ", "Ġ", "Ġoptimize", "(", "vec", ");", "Ċ", "Ġ", "Ġreturn", "Ġvec", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["vec", 4, "comesFrom", ["vec"], [1]], ["vec", 5, "comesFrom", ["vec"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::111", "code": "//\n// Created by Chris Richards on 28/04/2016.\n//\n\n#include <gtest/gtest.h>\n#include <DbfTable.h>\n\nclass Dbase31TableFixture : public ::testing::Test {\nprotected:\n    virtual void SetUp() {\n        dbf_table_ = DbfTablePtr(new DbfTable(\"/Users/chrisr/Development/ClionProjects/dbf2csv/dbf_tests/fixtures/dbase_31.dbf\"));\n    }\n\n    virtual void TearDown() {\n        dbf_table_->close();\n    }\n\npublic:\n    Dbase31TableFixture() : Test() {\n    }\n\n    virtual ~Dbase31TableFixture() {\n    }\n\n    DbfTablePtr dbf_table_;\n};\n\nTEST_F(Dbase31TableFixture, good_check) {\n    EXPECT_TRUE(dbf_table_->good());\n}\n\nTEST_F(Dbase31TableFixture, has_memo_check) {\n    EXPECT_FALSE(dbf_table_->has_memo_file());\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "ĠChris", "ĠRichards", "Ġon", "Ġ28", "/", "04", "/", "2016", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "D", "bf", "Table", ".", "h", ">", "Ċ", "Ċ", "class", "ĠD", "base", "31", "Table", "F", "ixture", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ġ{", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvirtual", "Ġvoid", "ĠSet", "Up", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "bf", "_", "table", "_", "Ġ=", "ĠD", "bf", "Table", "Ptr", "(", "new", "ĠD", "bf", "Table", "(\"", "/", "Users", "/", "ch", "ris", "r", "/", "Development", "/", "Cl", "ion", "Project", "s", "/", "db", "f", "2", "csv", "/", "db", "f", "_", "tests", "/", "f", "ixtures", "/", "d", "base", "_", "31", ".", "db", "f", "\")", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvirtual", "Ġvoid", "ĠT", "ear", "Down", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "bf", "_", "table", "_", "->", "close", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠD", "base", "31", "Table", "F", "ixture", "()", "Ġ:", "ĠTest", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvirtual", "Ġ~", "D", "base", "31", "Table", "F", "ixture", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠD", "bf", "Table", "Ptr", "Ġd", "bf", "_", "table", "_", ";", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "D", "base", "31", "Table", "F", "ixture", ",", "Ġgood", "_", "check", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "TR", "UE", "(", "db", "f", "_", "table", "_", "->", "good", "());", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "D", "base", "31", "Table", "F", "ixture", ",", "Ġhas", "_", "mem", "o", "_", "check", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "F", "ALSE", "(", "db", "f", "_", "table", "_", "->", "has", "_", "mem", "o", "_", "file", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["dbf_table_", 4, "comesFrom", ["dbf_table_"], [1]], ["dbf_table_", 9, "comesFrom", ["dbf_table_"], [1]], ["dbf_table_", 12, "comesFrom", ["dbf_table_"], [1]], ["dbf_table_", 16, "comesFrom", ["dbf_table_"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::112", "code": "#include \"MW_Timer.hpp\"\n\nMW_Timer::MW_Timer(double periodInSeconds): period(periodInSeconds)\n{\n\treset();\n}\n\nbool MW_Timer::get() const\n{\n\tb_mutex.lock();\n\tbool retVal = MPI::Wtime() > expirationTime;\n\tb_mutex.unlock();\n\t\n\treturn retVal;\n}\n\nvoid MW_Timer::reset()\n{\n\tb_mutex.lock();\n\texpirationTime = MPI::Wtime() + period;\n\tb_mutex.unlock();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "MW", "_", "Timer", ".", "h", "pp", "\"", "Ċ", "Ċ", "MW", "_", "Timer", "::", "MW", "_", "Timer", "(", "double", "Ġperiod", "In", "Second", "s", "):", "Ġperiod", "(", "period", "In", "Second", "s", ")", "Ċ", "{", "Ċ", "ĉ", "reset", "();", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠMW", "_", "Timer", "::", "get", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "b", "_", "mut", "ex", ".", "lock", "();", "Ċ", "ĉ", "bool", "Ġret", "Val", "Ġ=", "ĠMP", "I", "::", "W", "time", "()", "Ġ>", "Ġexpiration", "Time", ";", "Ċ", "ĉ", "b", "_", "mut", "ex", ".", "un", "lock", "();", "Ċ", "ĉ", "Ċ", "ĉ", "return", "Ġret", "Val", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMW", "_", "Timer", "::", "reset", "()", "Ċ", "{", "Ċ", "ĉ", "b", "_", "mut", "ex", ".", "lock", "();", "Ċ", "ĉ", "ex", "piration", "Time", "Ġ=", "ĠMP", "I", "::", "W", "time", "()", "Ġ+", "Ġperiod", ";", "Ċ", "ĉ", "b", "_", "mut", "ex", ".", "un", "lock", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["periodInSeconds", 3, "comesFrom", ["periodInSeconds"], [1]], ["retVal", 13, "comesFrom", ["retVal"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::113", "code": "class Solution {\npublic:\n    int minMoves(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int ans = 0;\n        for(int i = 1; i < nums.size(); i++){\n            ans += nums[i] - nums[0];\n        }\n        return ans;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġmin", "M", "oves", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsort", "(", "n", "ums", ".", "begin", "(),", "Ġnum", "s", ".", "end", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġnum", "s", ".", "size", "();", "Ġi", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ+=", "Ġnum", "s", "[", "i", "]", "Ġ-", "Ġnum", "s", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġans", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["i", 9, "comesFrom", ["i"], [8]], ["i", 12, "comesFrom", ["i"], [8]], ["i", 15, "comesFrom", ["i"], [8]], ["ans", 17, "comesFrom", ["ans"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::114", "code": "#include <iostream>\n\n#include \"Net.h\"\n#include \"InputLayer.h\"\n#include \"ForwardLayer.h\"\n#include \"RecurrentLayer.h\"\n\nusing namespace std;\n\nint main() {\n//    arma::arma_rng::set_seed(100);\n    arma::arma_rng::set_seed_random();\n    Net net;\n\n    net.add_layer(new InputLayer(2));\n    net.add_layer(new ForwardLayer(3));\n    net.add_layer(new ForwardLayer(1));\n\n\n    TrainData<double> train_data;\n    train_data.add({{0, 0}}, {0});\n    train_data.add({{0, 1}}, {1});\n    train_data.add({{1, 0}}, {1});\n    train_data.add({{1, 1}}, {0});\n\n    net.train(std::move(train_data));\n\n    std::cout << \"{0, 0} => \" << net.predict(arma::vec({0, 0})) << std::endl;\n    std::cout << \"{0, 1} => \" << net.predict(arma::vec({0, 1})) << std::endl;\n    std::cout << \"{1, 0} => \" << net.predict(arma::vec({1, 0})) << std::endl;\n    std::cout << \"{1, 1} => \" << net.predict(arma::vec({1, 1})) << std::endl;\n\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Net", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Input", "Layer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Forward", "Layer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Rec", "urrent", "Layer", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġar", "ma", "::", "arma", "_", "r", "ng", "::", "set", "_", "seed", "(", "100", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġar", "ma", "::", "arma", "_", "r", "ng", "::", "set", "_", "seed", "_", "random", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNet", "Ġnet", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġnet", ".", "add", "_", "layer", "(", "new", "ĠInput", "Layer", "(", "2", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnet", ".", "add", "_", "layer", "(", "new", "ĠForward", "Layer", "(", "3", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnet", ".", "add", "_", "layer", "(", "new", "ĠForward", "Layer", "(", "1", "));", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTrain", "Data", "<", "double", ">", "Ġtrain", "_", "data", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtrain", "_", "data", ".", "add", "({", "{", "0", ",", "Ġ0", "}", "},", "Ġ{", "0", "});", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtrain", "_", "data", ".", "add", "({", "{", "0", ",", "Ġ1", "}", "},", "Ġ{", "1", "});", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtrain", "_", "data", ".", "add", "({", "{", "1", ",", "Ġ0", "}", "},", "Ġ{", "1", "});", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtrain", "_", "data", ".", "add", "({", "{", "1", ",", "Ġ1", "}", "},", "Ġ{", "0", "});", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġnet", ".", "train", "(", "std", "::", "move", "(", "train", "_", "data", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"{", "0", ",", "Ġ0", "}", "Ġ=>", "Ġ\"", "Ġ<<", "Ġnet", ".", "p", "redict", "(", "arma", "::", "vec", "({", "0", ",", "Ġ0", "}", "))", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"{", "0", ",", "Ġ1", "}", "Ġ=>", "Ġ\"", "Ġ<<", "Ġnet", ".", "p", "redict", "(", "arma", "::", "vec", "({", "0", ",", "Ġ1", "}", "))", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"{", "1", ",", "Ġ0", "}", "Ġ=>", "Ġ\"", "Ġ<<", "Ġnet", ".", "p", "redict", "(", "arma", "::", "vec", "({", "1", ",", "Ġ0", "}", "))", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"{", "1", ",", "Ġ1", "}", "Ġ=>", "Ġ\"", "Ġ<<", "Ġnet", ".", "p", "redict", "(", "arma", "::", "vec", "({", "1", ",", "Ġ1", "}", "))", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["net", 4, "comesFrom", ["net"], [3]], ["net", 6, "comesFrom", ["net"], [3]], ["net", 8, "comesFrom", ["net"], [3]], ["net", 19, "comesFrom", ["net"], [3]], ["net", 24, "comesFrom", ["net"], [3]], ["net", 29, "comesFrom", ["net"], [3]], ["net", 34, "comesFrom", ["net"], [3]], ["net", 39, "comesFrom", ["net"], [3]], ["train_data", 11, "comesFrom", ["train_data"], [10]], ["train_data", 13, "comesFrom", ["train_data"], [10]], ["train_data", 15, "comesFrom", ["train_data"], [10]], ["train_data", 17, "comesFrom", ["train_data"], [10]], ["train_data", 22, "comesFrom", ["train_data"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::115", "code": "/////////////////////////////////////////////////////////////////////////////\n// Name:        ExifHandler.cpp\n// Purpose:     ExifHandler class\n// Author:      Alex Thuering\n// Created:\t\t30.12.2007\n// RCS-ID:      $Id: ExifHandler.cpp,v 1.1 2007/12/30 22:45:02 ntalex Exp $\n// Copyright:   (c) Alex Thuering\n// Licence:     wxWindows licence\n/////////////////////////////////////////////////////////////////////////////\n\n#include \"ExifHandler.h\"\n#include <libexif/exif-loader.h>\n\nint ExifHandler::getOrient(wxString filename) {\n\tExifData* exifData = exif_data_new_from_file(filename.mb_str());\n\tif (!exifData)\n\t\treturn -1;\n\tif (!exif_content_get_entry(exifData->ifd[EXIF_IFD_EXIF], EXIF_TAG_EXIF_VERSION))\n\t\treturn -1;\n\tgint orient = -1;\n\tExifEntry* entry = exif_content_get_entry(exifData->ifd[EXIF_IFD_0], EXIF_TAG_ORIENTATION);\n\tif (entry) {\n\t\tExifByteOrder byteOrder = exif_data_get_byte_order(exifData);\n\t\torient = exif_get_short(entry->data, byteOrder);\n\t}\n\texif_data_unref(exifData);\n\treturn (int) orient;\n}\n", "code_tokens": ["Ġ//", "////////////////////////////////", "////////////////////////////////", "////////", "///", "Ċ", "//", "ĠName", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠEx", "if", "Handler", ".", "cpp", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ġ", "Ġ", "Ġ", "ĠEx", "if", "Handler", "Ġclass", "Ċ", "//", "ĠAuthor", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAlex", "ĠThu", "ering", "Ċ", "//", "ĠCreated", ":", "ĉ", "ĉ", "30", ".", "12", ".", "2007", "Ċ", "//", "ĠR", "CS", "-", "ID", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ$", "Id", ":", "ĠEx", "if", "Handler", ".", "cpp", ",", "v", "Ġ1", ".", "1", "Ġ2007", "/", "12", "/", "30", "Ġ22", ":", "45", ":", "02", "Ġn", "tale", "x", "ĠExp", "Ġ$", "Ċ", "//", "ĠCopyright", ":", "Ġ", "Ġ", "Ġ(", "c", ")", "ĠAlex", "ĠThu", "ering", "Ċ", "//", "ĠLic", "ence", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġw", "x", "Windows", "Ġlicence", "Ċ", "////////////////////////////////", "////////////////////////////////", "////////", "////", "/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Ex", "if", "Handler", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "lib", "ex", "if", "/", "ex", "if", "-", "loader", ".", "h", ">", "Ċ", "Ċ", "int", "ĠEx", "if", "Handler", "::", "get", "O", "rient", "(", "wx", "String", "Ġfilename", ")", "Ġ{", "Ċ", "ĉ", "Ex", "if", "Data", "*", "Ġex", "if", "Data", "Ġ=", "Ġex", "if", "_", "data", "_", "new", "_", "from", "_", "file", "(", "filename", ".", "mb", "_", "str", "());", "Ċ", "ĉ", "if", "Ġ(!", "ex", "if", "Data", ")", "Ċ", "ĉ", "ĉ", "return", "Ġ-", "1", ";", "Ċ", "ĉ", "if", "Ġ(!", "ex", "if", "_", "content", "_", "get", "_", "entry", "(", "ex", "if", "Data", "->", "if", "d", "[", "EX", "IF", "_", "IF", "D", "_", "EX", "IF", "],", "ĠEX", "IF", "_", "TAG", "_", "EX", "IF", "_", "VERSION", "))", "Ċ", "ĉ", "ĉ", "return", "Ġ-", "1", ";", "Ċ", "ĉ", "g", "int", "Ġorient", "Ġ=", "Ġ-", "1", ";", "Ċ", "ĉ", "Ex", "if", "Entry", "*", "Ġentry", "Ġ=", "Ġex", "if", "_", "content", "_", "get", "_", "entry", "(", "ex", "if", "Data", "->", "if", "d", "[", "EX", "IF", "_", "IF", "D", "_", "0", "],", "ĠEX", "IF", "_", "TAG", "_", "OR", "IENT", "ATION", ");", "Ċ", "ĉ", "if", "Ġ(", "entry", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "Ex", "if", "Byte", "Order", "Ġbyte", "Order", "Ġ=", "Ġex", "if", "_", "data", "_", "get", "_", "byte", "_", "order", "(", "ex", "if", "Data", ");", "Ċ", "ĉ", "ĉ", "orient", "Ġ=", "Ġex", "if", "_", "get", "_", "short", "(", "entry", "->", "data", ",", "Ġbyte", "Order", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "ex", "if", "_", "data", "_", "un", "ref", "(", "ex", "if", "Data", ");", "Ċ", "ĉ", "return", "Ġ(", "int", ")", "Ġorient", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["filename", 4, "comesFrom", ["filename"], [1]], ["byteOrder", 27, "comesFrom", ["byteOrder"], [20]], ["orient", 30, "comesFrom", ["orient"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::116", "code": "// Copyright (C) 2012-2016 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n//\n// { dg-do run { target c++11 xfail *-*-* } }\n// { dg-require-debug-mode \"\" }\n\n#include <set>\n\nvoid test01()\n{\n  std::set<int> s1;\n  auto it1 = s1.begin();\n  it1 = std::move(it1);\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "2016", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "//", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġx", "fail", "Ġ*", "-", "*", "-", "*", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "debug", "-", "mode", "Ġ\"\"", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "set", "<", "int", ">", "Ġs", "1", ";", "Ċ", "Ġ", "Ġauto", "Ġit", "1", "Ġ=", "Ġs", "1", ".", "begin", "();", "Ċ", "Ġ", "Ġit", "1", "Ġ=", "Ġstd", "::", "move", "(", "it", "1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["s1", 3, "comesFrom", ["s1"], [1]], ["it1", 7, "comesFrom", ["it1"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::117", "code": "class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        const int n = nums.size();\n        if (n == 1) return nums[0];\n        int result = nums[0];\n        for (int i = 1; i < n; ++i){\n            result ^= nums[i];\n        }\n        return result;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsingle", "Number", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġint", "Ġn", "Ġ=", "Ġnum", "s", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ==", "Ġ1", ")", "Ġreturn", "Ġnum", "s", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġresult", "Ġ=", "Ġnum", "s", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ^", "=", "Ġnum", "s", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [2]], ["n", 11, "comesFrom", ["n"], [2]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]], ["result", 16, "comesFrom", ["result"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::118", "code": "#include <iostream>\n#include \"DVB.hh\"\n\nint main(int argc, char **argv)\n{\n        ifstream con(argv[1]);\t\n\tDVB dvbd(-1);\n\tcon >> dvbd;\n\n\t//\tdvbd.set_outtype(VDR_OUT);\n\tcout << dvbd;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ\"", "D", "VB", ".", "hh", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "stream", "Ġcon", "(", "arg", "v", "[", "1", "]);", "ĉ", "Ċ", "ĉ", "D", "VB", "Ġd", "v", "bd", "(-", "1", ");", "Ċ", "ĉ", "con", "Ġ>>", "Ġd", "v", "bd", ";", "ĊĊ", "ĉ", "//", "ĉ", "d", "v", "bd", ".", "set", "_", "out", "type", "(", "V", "DR", "_", "OUT", ");", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġd", "v", "bd", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["dvbd", 6, "comesFrom", ["dvbd"], [4]], ["dvbd", 8, "comesFrom", ["dvbd"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::119", "code": "//BE NAME DOOST\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <set>\n#include <iostream>\nusing namespace std;\n\n\nint main()\n{\n\tstring a,b;\n\tcin>>a>>b;\n\tset <char> d;\n\tfor(int i=0;i<a.size();i++)\n\t\td.insert(a[i]);\n\tint B=0,C=0;\n\tfor(int i=0;i<b.size();i++)\n\t{\n\t\tif(a[i]==b[i])\n\t\t\tB++;\n\t\telse\n\t\t{\n\t\t\tset <char> tmp=d;\n\t\t\tint s=tmp.size();\n\t\t\ttmp.insert(b[i]);\n\t\t\tif(s==tmp.size())\n\t\t\t\tC++;\n\t\t}\n\t}\n\tcout<<B<<\" \"<<C;\n}\n", "code_tokens": ["Ġ//", "BE", "ĠNAME", "ĠD", "OO", "ST", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "string", "Ġa", ",", "b", ";", "Ċ", "ĉ", "cin", ">>", "a", ">>", "b", ";", "Ċ", "ĉ", "set", "Ġ<", "char", ">", "Ġd", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "a", ".", "size", "();", "i", "++)", "Ċ", "ĉ", "ĉ", "d", ".", "insert", "(", "a", "[", "i", "]);", "Ċ", "ĉ", "int", "ĠB", "=", "0", ",", "C", "=", "0", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "b", ".", "size", "();", "i", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "(", "a", "[", "i", "]", "==", "b", "[", "i", "])", "Ċ", "ĉ", "ĉ", "ĉ", "B", "++;", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "set", "Ġ<", "char", ">", "Ġtmp", "=", "d", ";", "Ċ", "ĉ", "ĉ", "ĉ", "int", "Ġs", "=", "tmp", ".", "size", "();", "Ċ", "ĉ", "ĉ", "ĉ", "tmp", ".", "insert", "(", "b", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "s", "==", "tmp", ".", "size", "())", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "C", "++;", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "c", "out", "<<", "B", "<<", "\"", "Ġ\"", "<<", "C", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 5, "comesFrom", ["a"], [2]], ["a", 10, "comesFrom", ["a"], [2]], ["a", 15, "comesFrom", ["a"], [2]], ["a", 24, "comesFrom", ["a"], [2]], ["b", 6, "comesFrom", ["b"], [3]], ["b", 21, "comesFrom", ["b"], [3]], ["b", 26, "comesFrom", ["b"], [3]], ["b", 36, "comesFrom", ["b"], [3]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 12, "comesFrom", ["i"], [8]], ["i", 16, "comesFrom", ["i"], [8]], ["i", 20, "comesFrom", ["i"], [19]], ["i", 23, "comesFrom", ["i"], [19]], ["i", 25, "comesFrom", ["i"], [19]], ["i", 27, "comesFrom", ["i"], [19]], ["i", 37, "comesFrom", ["i"], [19]], ["d", 13, "comesFrom", ["d"], [7]], ["B", 28, "comesFrom", ["B"], [17]], ["B", 43, "comesFrom", ["B"], [17]], ["tmp", 32, "comesFrom", ["tmp"], [29]], ["tmp", 34, "comesFrom", ["tmp"], [29]], ["tmp", 39, "comesFrom", ["tmp"], [29]], ["s", 38, "comesFrom", ["s"], [31]], ["C", 41, "comesFrom", ["C"], [18]], ["C", 44, "comesFrom", ["C"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::120", "code": "#include \"control.h\"\n\nControl::Control (int special_index) :\n\t_special_index (special_index)\n{\n\n}\n\nvoid Control::process_g (double delta_t)\n{\n\n}\n\nvoid Control::process_c (double delta_t)\n{\n\tfor (size_t i = 0; i < _control_outs.size(); ++i)\n\t{\n\t\t_control_outs[i] = *(_control_ins[0] + _special_index + i);\n\t}\n}\n\n\nTrigControl::TrigControl (int special_index) :\n\t_special_index (special_index)\n{\n\n}\n\nvoid TrigControl::process_g (double delta_t)\n{\n\n}\n\nvoid TrigControl::process_c (double delta_t)\n{\n\t// TODO make it work for synth-wide controls, not just local ones\n\tfor (size_t i = 0; i < _control_outs.size(); ++i)\n\t{\n\t\t_control_outs[i] = *(_control_ins[0] + _special_index + i);\n\t\t*(_control_ins[0] + _special_index + i) = 0.f;\n\t}\n}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "control", ".", "h", "\"", "Ċ", "Ċ", "Control", "::", "Control", "Ġ(", "int", "Ġspecial", "_", "index", ")", "Ġ:", "Ċ", "ĉ", "_", "special", "_", "index", "Ġ(", "special", "_", "index", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠControl", "::", "process", "_", "g", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠControl", "::", "process", "_", "c", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ_", "control", "_", "outs", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "_", "control", "_", "outs", "[", "i", "]", "Ġ=", "Ġ*", "(_", "control", "_", "ins", "[", "0", "]", "Ġ+", "Ġ_", "special", "_", "index", "Ġ+", "Ġi", ");", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ", "Ċ", "Tr", "ig", "Control", "::", "Tr", "ig", "Control", "Ġ(", "int", "Ġspecial", "_", "index", ")", "Ġ:", "Ċ", "ĉ", "_", "special", "_", "index", "Ġ(", "special", "_", "index", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTr", "ig", "Control", "::", "process", "_", "g", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTr", "ig", "Control", "::", "process", "_", "c", "Ġ(", "double", "Ġdelta", "_", "t", ")", "Ċ", "{", "Ċ", "ĉ", "//", "ĠTOD", "O", "Ġmake", "Ġit", "Ġwork", "Ġfor", "Ġsynth", "-", "wide", "Ġcontrols", ",", "Ġnot", "Ġjust", "Ġlocal", "Ġones", "Ċ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ_", "control", "_", "outs", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "_", "control", "_", "outs", "[", "i", "]", "Ġ=", "Ġ*", "(_", "control", "_", "ins", "[", "0", "]", "Ġ+", "Ġ_", "special", "_", "index", "Ġ+", "Ġi", ");", "Ċ", "ĉ", "ĉ", "*", "(_", "control", "_", "ins", "[", "0", "]", "Ġ+", "Ġ_", "special", "_", "index", "Ġ+", "Ġi", ")", "Ġ=", "Ġ0", ".", "f", ";", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["special_index", 3, "comesFrom", ["special_index"], [1]], ["special_index", 21, "comesFrom", ["special_index"], [19]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 12, "comesFrom", ["i"], [8]], ["i", 14, "comesFrom", ["i"], [8]], ["i", 17, "comesFrom", ["i"], [8]], ["i", 27, "comesFrom", ["i"], [26]], ["i", 30, "comesFrom", ["i"], [26]], ["i", 32, "comesFrom", ["i"], [26]], ["i", 35, "comesFrom", ["i"], [26]], ["i", 38, "comesFrom", ["i"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::121", "code": "/*\n *   Copyright (C) 2010 Michael Buesch <m@bues.ch>\n *\n *   This program is free software; you can redistribute it and/or\n *   modify it under the terms of the GNU General Public License\n *   as published by the Free Software Foundation; either version 2\n *   of the License, or (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n */\n\n#include \"util.h\"\n\n#include <time.h>\n#include <errno.h>\n#include <string.h>\n\n#include <iostream>\n\n\nvoid msleep(unsigned int msecs)\n{\n\tint err;\n\tstruct timespec time;\n\n\ttime.tv_sec = 0;\n\twhile (msecs >= 1000) {\n\t\ttime.tv_sec++;\n\t\tmsecs -= 1000;\n\t}\n\ttime.tv_nsec = msecs;\n\ttime.tv_nsec *= 1000000;\n\tdo {\n\t\terr = nanosleep(&time, &time);\n\t} while (err && errno == EINTR);\n\tif (err) {\n\t\tstd::cerr << \"nanosleep() failed with: \"\n\t\t\t  << strerror(errno) << std::endl;\n\t}\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠMichael", "ĠB", "ues", "ch", "Ġ<", "m", "@", "b", "ues", ".", "ch", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "Ġ", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "Ġ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "time", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "err", "no", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "ĊĊ", "Ċ", "void", "Ġms", "leep", "(", "unsigned", "Ġint", "Ġmsec", "s", ")", "Ċ", "{", "Ċ", "ĉ", "int", "Ġerr", ";", "Ċ", "ĉ", "struct", "Ġtimes", "pec", "Ġtime", ";", "ĊĊ", "ĉ", "time", ".", "tv", "_", "sec", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "while", "Ġ(", "m", "sec", "s", "Ġ>=", "Ġ1000", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "time", ".", "tv", "_", "sec", "++;", "Ċ", "ĉ", "ĉ", "m", "sec", "s", "Ġ-=", "Ġ1000", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "time", ".", "tv", "_", "n", "sec", "Ġ=", "Ġmsec", "s", ";", "Ċ", "ĉ", "time", ".", "tv", "_", "n", "sec", "Ġ*", "=", "Ġ100", "0000", ";", "Ċ", "ĉ", "do", "Ġ{", "Ċ", "ĉ", "ĉ", "err", "Ġ=", "Ġnan", "os", "leep", "(&", "time", ",", "Ġ&", "time", ");", "Ċ", "ĉ", "}", "Ġwhile", "Ġ(", "err", "Ġ&&", "Ġerr", "no", "Ġ==", "ĠE", "IN", "TR", ");", "Ċ", "ĉ", "if", "Ġ(", "err", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "cer", "r", "Ġ<<", "Ġ\"", "nan", "os", "leep", "()", "Ġfailed", "Ġwith", ":", "Ġ\"", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ<<", "Ġstre", "r", "ror", "(", "err", "no", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["time", 4, "comesFrom", ["time"], [3]], ["time", 7, "comesFrom", ["time"], [3]], ["time", 10, "comesFrom", ["time"], [3]], ["time", 13, "comesFrom", ["time"], [3]], ["time", 17, "comesFrom", ["time"], [3]], ["time", 18, "comesFrom", ["time"], [3]], ["msecs", 6, "comesFrom", ["msecs"], [1]], ["msecs", 12, "comesFrom", ["msecs"], [9]], ["err", 19, "comesFrom", ["err"], [15]], ["err", 22, "comesFrom", ["err"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::122", "code": "#include \"ComboBox.h\"\r\n\r\n#include <QDebug>\r\n\r\nComboBox::ComboBox(QWidget* parent)\r\n\t: QComboBox(parent)\r\n{\r\n}\r\n\r\nComboBox::~ComboBox()\r\n{\r\n}\r\n\r\nvoid ComboBox::setCurrentItemById(const int id)\r\n{\r\n\tconst int size = count();\r\n\r\n\tfor (int i = 0; i < size; ++i)\r\n\t{\r\n\t\tif (id == itemData(i).toInt())\r\n\t\t{\r\n\t\t\tsetCurrentIndex(i);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tqDebug() << __FUNCTION__ << \"Cannot find id: \" << id;\r\n}\r\n\r\nint ComboBox::currentId()\r\n{\r\n\treturn itemData(currentIndex()).toInt();\r\n}\r\n\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Com", "bo", "Box", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "č", "Ċ", "č", "Ċ", "Com", "bo", "Box", "::", "Com", "bo", "Box", "(", "Q", "Widget", "*", "Ġparent", ")", "č", "Ċ", "ĉ", ":", "ĠQ", "Com", "bo", "Box", "(", "parent", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Com", "bo", "Box", "::", "~", "Com", "bo", "Box", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠCombo", "Box", "::", "set", "Current", "Item", "ById", "(", "const", "Ġint", "Ġid", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "const", "Ġint", "Ġsize", "Ġ=", "Ġcount", "();", "č", "Ċ", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġsize", ";", "Ġ++", "i", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "id", "Ġ==", "Ġitem", "Data", "(", "i", ").", "to", "Int", "())", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "set", "Current", "Index", "(", "i", ");", "č", "Ċ", "ĉ", "ĉ", "ĉ", "return", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "q", "Debug", "()", "Ġ<<", "Ġ__", "FUN", "CT", "ION", "__", "Ġ<<", "Ġ\"", "C", "annot", "Ġfind", "Ġid", ":", "Ġ\"", "Ġ<<", "Ġid", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠCombo", "Box", "::", "current", "Id", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġitem", "Data", "(", "current", "Index", "()", ").", "to", "Int", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ"], "dataflow_graph": [["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]], ["i", 18, "comesFrom", ["i"], [9]], ["size", 11, "comesFrom", ["size"], [7]], ["id", 13, "comesFrom", ["id"], [6]], ["id", 21, "comesFrom", ["id"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::123", "code": "class Solution {\npublic:\n  int minCut(string s) {\n    if (s.size() < 2) {\n      return 0;\n    }\n\n    int len = s.size();\n    vector<int> cut(len + 1, 0); // cut[i] : s[0..i-1] min cut\n    for (int i = 0; i <= len; i++) {\n      cut[i] = i - 1;\n    }\n\n    for (int i = 0; i < len; i++) {\n      // odd len\n      for (int l = 0; i - l >= 0 && i + l < len && s[i - l] == s[i + l]; l++) {\n        cut[i + l + 1] = min(cut[i + l + 1], cut[i - l - 1 + 1] + 1);\n      }\n\n      // even\n      // i,i+1\n      for (int l = 0; i - l >= 0 && i + 1 + l < len && s[i - l] == s[i + 1 + l];\n           l++) {\n        cut[i + 1 + l + 1] = min(cut[i + 1 + l + 1], cut[i - l - 1 + 1] + 1);\n      }\n    }\n\n    return cut[len];\n  }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġint", "Ġmin", "Cut", "(", "string", "Ġs", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", ".", "size", "()", "Ġ<", "Ġ2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "Ġ=", "Ġs", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġcut", "(", "len", "Ġ+", "Ġ1", ",", "Ġ0", ");", "Ġ//", "Ġcut", "[", "i", "]", "Ġ:", "Ġs", "[", "0", "..", "i", "-", "1", "]", "Ġmin", "Ġcut", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġlen", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcut", "[", "i", "]", "Ġ=", "Ġi", "Ġ-", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlen", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġodd", "Ġlen", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġl", "Ġ=", "Ġ0", ";", "Ġi", "Ġ-", "Ġl", "Ġ>=", "Ġ0", "Ġ&&", "Ġi", "Ġ+", "Ġl", "Ġ<", "Ġlen", "Ġ&&", "Ġs", "[", "i", "Ġ-", "Ġl", "]", "Ġ==", "Ġs", "[", "i", "Ġ+", "Ġl", "];", "Ġl", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcut", "[", "i", "Ġ+", "Ġl", "Ġ+", "Ġ1", "]", "Ġ=", "Ġmin", "(", "cut", "[", "i", "Ġ+", "Ġl", "Ġ+", "Ġ1", "],", "Ġcut", "[", "i", "Ġ-", "Ġl", "Ġ-", "Ġ1", "Ġ+", "Ġ1", "]", "Ġ+", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġeven", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġi", ",", "i", "+", "1", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġl", "Ġ=", "Ġ0", ";", "Ġi", "Ġ-", "Ġl", "Ġ>=", "Ġ0", "Ġ&&", "Ġi", "Ġ+", "Ġ1", "Ġ+", "Ġl", "Ġ<", "Ġlen", "Ġ&&", "Ġs", "[", "i", "Ġ-", "Ġl", "]", "Ġ==", "Ġs", "[", "i", "Ġ+", "Ġ1", "Ġ+", "Ġl", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġl", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcut", "[", "i", "Ġ+", "Ġ1", "Ġ+", "Ġl", "Ġ+", "Ġ1", "]", "Ġ=", "Ġmin", "(", "cut", "[", "i", "Ġ+", "Ġ1", "Ġ+", "Ġl", "Ġ+", "Ġ1", "],", "Ġcut", "[", "i", "Ġ-", "Ġl", "Ġ-", "Ġ1", "Ġ+", "Ġ1", "]", "Ġ+", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcut", "[", "len", "];", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["s", 2, "comesFrom", ["s"], [1]], ["s", 5, "comesFrom", ["s"], [1]], ["s", 26, "comesFrom", ["s"], [1]], ["s", 29, "comesFrom", ["s"], [1]], ["s", 49, "comesFrom", ["s"], [1]], ["s", 52, "comesFrom", ["s"], [1]], ["len", 8, "comesFrom", ["len"], [4]], ["len", 11, "comesFrom", ["len"], [4]], ["len", 18, "comesFrom", ["len"], [4]], ["len", 25, "comesFrom", ["len"], [4]], ["len", 48, "comesFrom", ["len"], [4]], ["len", 67, "comesFrom", ["len"], [4]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 14, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]], ["i", 17, "comesFrom", ["i"], [16]], ["i", 19, "comesFrom", ["i"], [16]], ["i", 21, "comesFrom", ["i"], [16]], ["i", 23, "comesFrom", ["i"], [16]], ["i", 27, "comesFrom", ["i"], [16]], ["i", 30, "comesFrom", ["i"], [16]], ["i", 34, "comesFrom", ["i"], [16]], ["i", 38, "comesFrom", ["i"], [16]], ["i", 41, "comesFrom", ["i"], [16]], ["i", 44, "comesFrom", ["i"], [16]], ["i", 46, "comesFrom", ["i"], [16]], ["i", 50, "comesFrom", ["i"], [16]], ["i", 53, "comesFrom", ["i"], [16]], ["i", 57, "comesFrom", ["i"], [16]], ["i", 61, "comesFrom", ["i"], [16]], ["i", 64, "comesFrom", ["i"], [16]], ["cut", 13, "comesFrom", ["cut"], [7]], ["cut", 33, "comesFrom", ["cut"], [7]], ["cut", 37, "comesFrom", ["cut"], [7]], ["cut", 40, "comesFrom", ["cut"], [7]], ["cut", 56, "comesFrom", ["cut"], [7]], ["cut", 60, "comesFrom", ["cut"], [7]], ["cut", 63, "comesFrom", ["cut"], [7]], ["cut", 66, "comesFrom", ["cut"], [7]], ["l", 22, "comesFrom", ["l"], [20]], ["l", 24, "comesFrom", ["l"], [20]], ["l", 28, "comesFrom", ["l"], [20]], ["l", 31, "comesFrom", ["l"], [20]], ["l", 32, "comesFrom", ["l"], [20]], ["l", 35, "comesFrom", ["l"], [20]], ["l", 39, "comesFrom", ["l"], [20]], ["l", 42, "comesFrom", ["l"], [20]], ["l", 45, "comesFrom", ["l"], [43]], ["l", 47, "comesFrom", ["l"], [43]], ["l", 51, "comesFrom", ["l"], [43]], ["l", 54, "comesFrom", ["l"], [43]], ["l", 55, "comesFrom", ["l"], [43]], ["l", 58, "comesFrom", ["l"], [43]], ["l", 62, "comesFrom", ["l"], [43]], ["l", 65, "comesFrom", ["l"], [43]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::124", "code": "#include \"logger/Stack.hpp\"\n\nusing namespace logger;\n\n///////////////////////////////////////\n\nstd::ostream& operator<<(std::ostream& ioOut, const Stack& stack)\n{\n\tif (stack.empty())\n\t\treturn ioOut;\n\n\tstd::deque<std::string>::const_iterator dequeIt;\n\tfor(dequeIt  = stack.begin();\n\t\tdequeIt != stack.end();\n\t\t++dequeIt)\n\t{\n\t\tif (dequeIt != stack.begin())\n\t\t\tioOut << \"_\";\n\t\tioOut << *dequeIt;\n\t}\n\t\n\treturn ioOut;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "log", "ger", "/", "Stack", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġlogger", ";", "Ċ", "Ċ", "////////////////////////////////", "////", "///", "Ċ", "Ċ", "std", "::", "ost", "ream", "&", "Ġoperator", "<<", "(", "std", "::", "ost", "ream", "&", "Ġio", "Out", ",", "Ġconst", "ĠStack", "&", "Ġstack", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "stack", ".", "empty", "())", "Ċ", "ĉ", "ĉ", "return", "Ġio", "Out", ";", "ĊĊ", "ĉ", "std", "::", "de", "que", "<", "std", "::", "string", ">", "::", "const", "_", "iterator", "Ġde", "que", "It", ";", "Ċ", "ĉ", "for", "(", "de", "que", "It", "Ġ", "Ġ=", "Ġstack", ".", "begin", "();", "Ċ", "ĉ", "ĉ", "de", "que", "It", "Ġ!=", "Ġstack", ".", "end", "();", "Ċ", "ĉ", "ĉ", "++", "de", "que", "It", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "de", "que", "It", "Ġ!=", "Ġstack", ".", "begin", "())", "Ċ", "ĉ", "ĉ", "ĉ", "io", "Out", "Ġ<<", "Ġ\"_", "\";", "Ċ", "ĉ", "ĉ", "io", "Out", "Ġ<<", "Ġ*", "de", "que", "It", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "return", "Ġio", "Out", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["dequeIt", 10, "comesFrom", ["dequeIt"], [7]], ["dequeIt", 13, "comesFrom", ["dequeIt"], [7]], ["dequeIt", 14, "comesFrom", ["dequeIt"], [7]], ["dequeIt", 19, "comesFrom", ["dequeIt"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::125", "code": " \n#include \"ObjetoCompuesto.h\"\n\nObjetoCompuesto:: ObjetoCompuesto() {\n\thijos = new Objeto3D*[100000];\n\tnumHijos = 0;\n\t\n\tm1 = new GLfloat[16];\n}\n\nObjetoCompuesto:: ~ObjetoCompuesto() {\n\tfor(int i =0; i < numHijos; i++) {     \n\t\tdelete hijos[i];\n    }  \n}\n\nvoid ObjetoCompuesto:: dibuja() {\n\tglMatrixMode(GL_MODELVIEW);\n\tglPushMatrix();\n\tglMultMatrixf(dameMatrizAfin());\n\t// Copiar en m1 la matriz actual de modelado-vista\n\tglGetFloatv(GL_MODELVIEW_MATRIX, m1);\n\tfor(int i =0; i < numHijos; i++) {\n\t\tglColor4f(hijos[i]->getR(), hijos[i]->getG(), hijos[i]->getB(), hijos[i]->getA());\n\t\tglMultMatrixf(hijos[i]->dameMatrizAfin());\n\t\thijos[i]->dibuja();\n\t\tglLoadMatrixf(m1);\n    }\n\tglPopMatrix();\n}\n\nvoid ObjetoCompuesto:: introduceObjeto(Objeto3D* objeto) {\n\thijos[numHijos++] = objeto;\n}\n\n\n\n\n", "code_tokens": ["Ġ", "Ċ", "#", "include", "Ġ\"", "Obj", "eto", "Comp", "u", "est", "o", ".", "h", "\"", "Ċ", "Ċ", "Obj", "eto", "Comp", "u", "est", "o", "::", "ĠObj", "eto", "Comp", "u", "est", "o", "()", "Ġ{", "Ċ", "ĉ", "h", "ij", "os", "Ġ=", "Ġnew", "ĠObj", "eto", "3", "D", "*", "[", "100", "000", "];", "Ċ", "ĉ", "num", "H", "ij", "os", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "Ċ", "ĉ", "m", "1", "Ġ=", "Ġnew", "ĠGL", "float", "[", "16", "];", "Ċ", "}", "Ċ", "Ċ", "Obj", "eto", "Comp", "u", "est", "o", "::", "Ġ~", "Obj", "eto", "Comp", "u", "est", "o", "()", "Ġ{", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "0", ";", "Ġi", "Ġ<", "Ġnum", "H", "ij", "os", ";", "Ġi", "++)", "Ġ{", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "ĉ", "ĉ", "delete", "Ġhij", "os", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġ", "Ġ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠObj", "eto", "Comp", "u", "est", "o", "::", "Ġd", "ibu", "ja", "()", "Ġ{", "Ċ", "ĉ", "gl", "Matrix", "Mode", "(", "GL", "_", "MOD", "EL", "VIEW", ");", "Ċ", "ĉ", "gl", "Push", "Matrix", "();", "Ċ", "ĉ", "gl", "Mult", "Matrix", "f", "(", "d", "ame", "Mat", "riz", "A", "fin", "());", "Ċ", "ĉ", "//", "ĠCop", "iar", "Ġen", "Ġm", "1", "Ġla", "Ġmat", "riz", "Ġactual", "Ġde", "Ġmodel", "ado", "-", "v", "ista", "Ċ", "ĉ", "gl", "Get", "Float", "v", "(", "GL", "_", "MOD", "EL", "VIEW", "_", "MAT", "RI", "X", ",", "Ġm", "1", ");", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "0", ";", "Ġi", "Ġ<", "Ġnum", "H", "ij", "os", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "gl", "Color", "4", "f", "(", "h", "ij", "os", "[", "i", "]", "->", "get", "R", "(),", "Ġhij", "os", "[", "i", "]", "->", "get", "G", "(),", "Ġhij", "os", "[", "i", "]", "->", "get", "B", "(),", "Ġhij", "os", "[", "i", "]", "->", "get", "A", "());", "Ċ", "ĉ", "ĉ", "gl", "Mult", "Matrix", "f", "(", "h", "ij", "os", "[", "i", "]", "->", "d", "ame", "Mat", "riz", "A", "fin", "());", "Ċ", "ĉ", "ĉ", "h", "ij", "os", "[", "i", "]", "->", "d", "ibu", "ja", "();", "Ċ", "ĉ", "ĉ", "gl", "Load", "Matrix", "f", "(", "m", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "ĉ", "gl", "Pop", "Matrix", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠObj", "eto", "Comp", "u", "est", "o", "::", "Ġintroduce", "Obj", "eto", "(", "Obj", "eto", "3", "D", "*", "Ġobj", "eto", ")", "Ġ{", "Ċ", "ĉ", "h", "ij", "os", "[", "num", "H", "ij", "os", "++", "]", "Ġ=", "Ġobj", "eto", ";", "Ċ", "}", "ĊĊ", "ĊĊ", "Ċ"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 8, "comesFrom", ["i"], [5]], ["i", 10, "comesFrom", ["i"], [5]], ["i", 21, "comesFrom", ["i"], [20]], ["i", 23, "comesFrom", ["i"], [20]], ["i", 26, "comesFrom", ["i"], [20]], ["i", 29, "comesFrom", ["i"], [20]], ["i", 32, "comesFrom", ["i"], [20]], ["i", 35, "comesFrom", ["i"], [20]], ["i", 39, "comesFrom", ["i"], [20]], ["i", 42, "comesFrom", ["i"], [20]], ["numHijos", 7, "comesFrom", ["numHijos"], [2]], ["numHijos", 22, "comesFrom", ["numHijos"], [2]], ["numHijos", 50, "comesFrom", ["numHijos"], [2]], ["hijos", 9, "comesFrom", ["hijos"], [1]], ["hijos", 25, "comesFrom", ["hijos"], [1]], ["hijos", 28, "comesFrom", ["hijos"], [1]], ["hijos", 31, "comesFrom", ["hijos"], [1]], ["hijos", 34, "comesFrom", ["hijos"], [1]], ["hijos", 38, "comesFrom", ["hijos"], [1]], ["hijos", 41, "comesFrom", ["hijos"], [1]], ["hijos", 49, "comesFrom", ["hijos"], [1]], ["m1", 19, "comesFrom", ["m1"], [3]], ["m1", 45, "comesFrom", ["m1"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::126", "code": "\n\n\n\n#include \"qtreversimenudialog.h\"\n\n#include <QKeyEvent>\n#include <QApplication>\n#include <QDesktopWidget>\n\n#include \"reversimenudialog.h\"\n#include \"qtaboutdialog.h\"\n\n#include \"qtreversimaindialog.h\"\n#include \"reversimenudialog.h\"\n#include \"ui_qtreversimenudialog.h\"\n\n\n\nribi::reversi::QtReversiMenuDialog::QtReversiMenuDialog(QWidget *parent) noexcept\n  : QtHideAndShowDialog(parent),\n    ui(new Ui::QtReversiMenuDialog)\n{\n  ui->setupUi(this);\n}\n\nribi::reversi::QtReversiMenuDialog::~QtReversiMenuDialog() noexcept\n{\n  delete ui;\n}\n\nvoid ribi::reversi::QtReversiMenuDialog::keyPressEvent(QKeyEvent * e)\n{\n  if (e->key() == Qt::Key_Escape) { close(); }\n}\n\nvoid ribi::reversi::QtReversiMenuDialog::on_button_start_clicked() noexcept\n{\n  QtReversiMainDialog d;\n  this->ShowChild(&d);\n}\n\nvoid ribi::reversi::QtReversiMenuDialog::on_button_about_clicked() noexcept\n{\n  QtAboutDialog d(MenuDialog().GetAbout());\n  d.setWindowIcon(windowIcon());\n  d.setStyleSheet(styleSheet());\n  ShowChild(&d);\n}\n\nvoid ribi::reversi::QtReversiMenuDialog::on_button_quit_clicked() noexcept\n{\n  close();\n}\n", "code_tokens": ["ĊĊ", "Ċ", "Ċ", "#", "include", "Ġ\"", "q", "tre", "vers", "imen", "ud", "ial", "og", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Key", "Event", ">", "Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "Ċ", "#", "include", "Ġ<", "Q", "Desktop", "Widget", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "re", "vers", "imen", "ud", "ial", "og", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "q", "tab", "out", "dial", "og", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "q", "tre", "vers", "im", "ain", "dial", "og", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "re", "vers", "imen", "ud", "ial", "og", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "q", "tre", "vers", "imen", "ud", "ial", "og", ".", "h", "\"", "ĊĊ", "Ċ", "Ċ", "rib", "i", "::", "re", "vers", "i", "::", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", "::", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġno", "except", "Ċ", "Ġ", "Ġ:", "ĠQt", "Hide", "And", "Show", "Dialog", "(", "parent", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "(", "new", "ĠU", "i", "::", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", ")", "Ċ", "{", "Ċ", "Ġ", "Ġu", "i", "->", "setup", "U", "i", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "rib", "i", "::", "re", "vers", "i", "::", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", "::", "~", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", "()", "Ġno", "except", "Ċ", "{", "Ċ", "Ġ", "Ġdelete", "Ġu", "i", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġrib", "i", "::", "re", "vers", "i", "::", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", "::", "key", "Press", "Event", "(", "Q", "Key", "Event", "Ġ*", "Ġe", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "e", "->", "key", "()", "Ġ==", "ĠQt", "::", "Key", "_", "E", "scape", ")", "Ġ{", "Ġclose", "();", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġrib", "i", "::", "re", "vers", "i", "::", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", "::", "on", "_", "button", "_", "start", "_", "cl", "icked", "()", "Ġno", "except", "Ċ", "{", "Ċ", "Ġ", "ĠQt", "Re", "vers", "i", "Main", "Dialog", "Ġd", ";", "Ċ", "Ġ", "Ġthis", "->", "Show", "Child", "(&", "d", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġrib", "i", "::", "re", "vers", "i", "::", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", "::", "on", "_", "button", "_", "about", "_", "cl", "icked", "()", "Ġno", "except", "Ċ", "{", "Ċ", "Ġ", "ĠQt", "About", "Dialog", "Ġd", "(", "Menu", "Dialog", "().", "Get", "About", "());", "Ċ", "Ġ", "Ġd", ".", "set", "Window", "Icon", "(", "window", "Icon", "());", "Ċ", "Ġ", "Ġd", ".", "set", "Style", "She", "et", "(", "style", "She", "et", "());", "Ċ", "Ġ", "ĠShow", "Child", "(&", "d", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġrib", "i", "::", "re", "vers", "i", "::", "Q", "t", "Re", "vers", "i", "Menu", "Dialog", "::", "on", "_", "button", "_", "quit", "_", "cl", "icked", "()", "Ġno", "except", "Ċ", "{", "Ċ", "Ġ", "Ġclose", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["d", 18, "comesFrom", ["d"], [16]], ["d", 23, "comesFrom", ["d"], [20]], ["d", 26, "comesFrom", ["d"], [20]], ["d", 30, "comesFrom", ["d"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::127", "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    freopen(\"in.txt\",\"r\",stdin);\r\n    int tc,n;\r\n    int A[1000],B[1000];\r\n    scanf(\"%d\",&tc);\r\n    while(tc--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int sum=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&A[i]);\r\n            int j=i;\r\n            B[i]=0;\r\n            while(j--)\r\n            {\r\n                if(A[j]<=A[i]) B[i]++;\r\n            }\r\n            sum+=B[i];\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n    return 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "<", "bits", "/", "st", "dc", "++", ".", "h", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfre", "open", "(\"", "in", ".", "txt", "\",\"", "r", "\",", "std", "in", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtc", ",", "n", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "ĠA", "[", "1000", "],", "B", "[", "1000", "];", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "tc", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "tc", "--", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "n", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsum", "=", "0", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";", "i", "++)", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "A", "[", "i", "]);", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġj", "=", "i", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "[", "i", "]=", "0", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "j", "--", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "A", "[", "j", "]", "<", "=", "A", "[", "i", "])", "ĠB", "[", "i", "]", "++;", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsum", "+=", "B", "[", "i", "];", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "sum", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["tc", 9, "comesFrom", ["tc"], [4]], ["tc", 10, "comesFrom", ["tc"], [4]], ["n", 12, "comesFrom", ["n"], [5]], ["n", 16, "comesFrom", ["n"], [5]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 17, "comesFrom", ["i"], [14]], ["i", 20, "comesFrom", ["i"], [14]], ["i", 24, "comesFrom", ["i"], [22]], ["i", 29, "comesFrom", ["i"], [22]], ["i", 31, "comesFrom", ["i"], [22]], ["i", 34, "comesFrom", ["i"], [22]], ["j", 25, "comesFrom", ["j"], [21]], ["j", 27, "comesFrom", ["j"], [21]], ["sum", 36, "comesFrom", ["sum"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::128", "code": "/*\n\tSPDX-FileCopyrightText: 2009-2013 Graeme Gott <graeme@gottcode.org>\n\n\tSPDX-License-Identifier: GPL-3.0-or-later\n*/\n\n#include \"hole.h\"\n\n#include <QBrush>\n#include <QPen>\n#include <QRadialGradient>\n\n//-----------------------------------------------------------------------------\n\nHole::Hole(const QPoint& position, QGraphicsItem* parent)\n\t: QGraphicsEllipseItem(0, 0, 16, 16, parent)\n\t, m_peg(nullptr)\n{\n\tQRadialGradient gradient(QPointF(8,8), 8);\n\tgradient.setColorAt(0, QColor(0, 0, 0, 0));\n\tgradient.setColorAt(1, QColor(0, 0, 0, 64));\n\tsetBrush(gradient);\n\tsetPen(Qt::NoPen);\n\n\tsetZValue(1);\n\tsetPos(position.x() * 20 + 2, position.y() * 20 + 2);\n\tsetFlag(QGraphicsItem::ItemIsMovable, false);\n}\n\n//-----------------------------------------------------------------------------\n\nvoid Hole::setHighlight(bool highlight)\n{\n\tsetPen(!highlight ? Qt::NoPen : QPen(Qt::yellow, 2));\n}\n\n//-----------------------------------------------------------------------------\n", "code_tokens": ["Ġ/*", "Ċ", "ĉ", "SP", "DX", "-", "File", "Copyright", "Text", ":", "Ġ2009", "-", "2013", "ĠGra", "eme", "ĠGott", "Ġ<", "gra", "eme", "@", "g", "ott", "code", ".", "org", ">", "ĊĊ", "ĉ", "SP", "DX", "-", "License", "-", "Ident", "ifier", ":", "ĠGPL", "-", "3", ".", "0", "-", "or", "-", "later", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "hole", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Br", "ush", ">", "Ċ", "#", "include", "Ġ<", "Q", "Pen", ">", "Ċ", "#", "include", "Ġ<", "Q", "Rad", "ial", "Grad", "ient", ">", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ", "Ċ", "H", "ole", "::", "H", "ole", "(", "const", "ĠQ", "Point", "&", "Ġposition", ",", "ĠQ", "Graphics", "Item", "*", "Ġparent", ")", "Ċ", "ĉ", ":", "ĠQ", "Graphics", "Ell", "ip", "se", "Item", "(", "0", ",", "Ġ0", ",", "Ġ16", ",", "Ġ16", ",", "Ġparent", ")", "Ċ", "ĉ", ",", "Ġm", "_", "peg", "(", "null", "ptr", ")", "Ċ", "{", "Ċ", "ĉ", "Q", "Rad", "ial", "Grad", "ient", "Ġgradient", "(", "Q", "Point", "F", "(", "8", ",", "8", "),", "Ġ8", ");", "Ċ", "ĉ", "gradient", ".", "set", "Color", "At", "(", "0", ",", "ĠQ", "Color", "(", "0", ",", "Ġ0", ",", "Ġ0", ",", "Ġ0", "));", "Ċ", "ĉ", "gradient", ".", "set", "Color", "At", "(", "1", ",", "ĠQ", "Color", "(", "0", ",", "Ġ0", ",", "Ġ0", ",", "Ġ64", "));", "Ċ", "ĉ", "set", "Br", "ush", "(", "gradient", ");", "Ċ", "ĉ", "set", "Pen", "(", "Q", "t", "::", "No", "Pen", ");", "ĊĊ", "ĉ", "set", "Z", "Value", "(", "1", ");", "Ċ", "ĉ", "set", "Pos", "(", "position", ".", "x", "()", "Ġ*", "Ġ20", "Ġ+", "Ġ2", ",", "Ġposition", ".", "y", "()", "Ġ*", "Ġ20", "Ġ+", "Ġ2", ");", "Ċ", "ĉ", "set", "Flag", "(", "Q", "Graphics", "Item", "::", "Item", "Is", "M", "ovable", ",", "Ġfalse", ");", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ", "Ċ", "void", "ĠHole", "::", "set", "High", "light", "(", "bool", "Ġhighlight", ")", "Ċ", "{", "Ċ", "ĉ", "set", "Pen", "(", "!", "high", "light", "Ġ?", "ĠQt", "::", "No", "Pen", "Ġ:", "ĠQ", "Pen", "(", "Q", "t", "::", "yellow", ",", "Ġ2", "));", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ"], "dataflow_graph": [["gradient", 8, "comesFrom", ["gradient"], [6]], ["gradient", 11, "comesFrom", ["gradient"], [6]], ["gradient", 15, "comesFrom", ["gradient"], [6]], ["highlight", 29, "comesFrom", ["highlight"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::129", "code": "#include <stdafx.h>\n#include \"VertexBufferObject.h\"\n\nVertexBufferObject::VertexBufferObject() {\n\tglGenBuffers(1, &_id);\n}\n\nVertexBufferObject::~VertexBufferObject() {\n\tglDeleteBuffers(1, &_id);\n}\n\nvoid VertexBufferObject::Bind() {\n\tglBindBuffer(GL_ARRAY_BUFFER, _id);\n}\n\nvoid VertexBufferObject::Upload(void *data, size_t size, int type) {\n\tglBufferData(GL_ARRAY_BUFFER, size, data, type);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "af", "x", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "Ver", "tex", "Buffer", "Object", ".", "h", "\"", "Ċ", "Ċ", "Ver", "tex", "Buffer", "Object", "::", "Ver", "tex", "Buffer", "Object", "()", "Ġ{", "Ċ", "ĉ", "gl", "Gen", "Buff", "ers", "(", "1", ",", "Ġ&", "_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "Ver", "tex", "Buffer", "Object", "::", "~", "Ver", "tex", "Buffer", "Object", "()", "Ġ{", "Ċ", "ĉ", "gl", "Delete", "Buff", "ers", "(", "1", ",", "Ġ&", "_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠVer", "tex", "Buffer", "Object", "::", "Bind", "()", "Ġ{", "Ċ", "ĉ", "gl", "Bind", "Buffer", "(", "GL", "_", "AR", "RAY", "_", "BU", "FFER", ",", "Ġ_", "id", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠVer", "tex", "Buffer", "Object", "::", "Upload", "(", "void", "Ġ*", "data", ",", "Ġsize", "_", "t", "Ġsize", ",", "Ġint", "Ġtype", ")", "Ġ{", "Ċ", "ĉ", "gl", "Buffer", "Data", "(", "GL", "_", "AR", "RAY", "_", "BU", "FFER", ",", "Ġsize", ",", "Ġdata", ",", "Ġtype", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["size", 16, "comesFrom", ["size"], [12]], ["type", 18, "comesFrom", ["type"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::130", "code": "int ObservableBlockedComForce::actual_calculate(PartCfg & partCfg) {\n  double* A = last_value;\n  unsigned int i;\n  unsigned int block;\n  unsigned int n_blocks;\n  unsigned int blocksize;\n  unsigned int id;\n  IntList* ids;\n  if (!sortPartCfg()) {\n      runtimeErrorMsg() <<\"could not sort partCfg\";\n    return -1;\n  }\n  ids=(IntList*) container;\n  n_blocks=n/3; \n  blocksize=ids->n/n_blocks;\n  for ( block = 0; block < n_blocks; block++ ) {\n    for ( i = 0; i < blocksize; i++ ) {\n      id = ids->e[block*blocksize+i];\n      if (ids->e[i] >= n_part)\n        return 1;\n      A[3*block+0] +=  partCfg[id].f.f[0]/time_step/time_step*2;\n      A[3*block+1] +=  partCfg[id].f.f[1]/time_step/time_step*2;\n      A[3*block+2] +=  partCfg[id].f.f[2]/time_step/time_step*2;\n    }\n  }\n  return 0;\n}\n", "code_tokens": ["Ġint", "ĠObserv", "able", "Bl", "ocked", "Com", "Force", "::", "actual", "_", "cal", "cul", "ate", "(", "Part", "C", "fg", "Ġ&", "Ġpart", "C", "fg", ")", "Ġ{", "Ċ", "Ġ", "Ġdouble", "*", "ĠA", "Ġ=", "Ġlast", "_", "value", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġblock", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġn", "_", "blocks", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġblocks", "ize", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġid", ";", "Ċ", "Ġ", "ĠInt", "List", "*", "Ġ", "ids", ";", "Ċ", "Ġ", "Ġif", "Ġ(!", "sort", "Part", "C", "fg", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġruntime", "Error", "Msg", "()", "Ġ<<", "\"", "could", "Ġnot", "Ġsort", "Ġpart", "C", "fg", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "ids", "=(", "Int", "List", "*)", "Ġcontainer", ";", "Ċ", "Ġ", "Ġn", "_", "blocks", "=", "n", "/", "3", ";", "Ġ", "Ċ", "Ġ", "Ġblocks", "ize", "=", "ids", "->", "n", "/", "n", "_", "blocks", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "Ġblock", "Ġ=", "Ġ0", ";", "Ġblock", "Ġ<", "Ġn", "_", "blocks", ";", "Ġblock", "++", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġblocks", "ize", ";", "Ġi", "++", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġid", "Ġ=", "Ġ", "ids", "->", "e", "[", "block", "*", "blocks", "ize", "+", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "ids", "->", "e", "[", "i", "]", "Ġ>=", "Ġn", "_", "part", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠA", "[", "3", "*", "block", "+", "0", "]", "Ġ+=", "Ġ", "Ġpart", "C", "fg", "[", "id", "].", "f", ".", "f", "[", "0", "]", "/", "time", "_", "step", "/", "time", "_", "step", "*", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠA", "[", "3", "*", "block", "+", "1", "]", "Ġ+=", "Ġ", "Ġpart", "C", "fg", "[", "id", "].", "f", ".", "f", "[", "1", "]", "/", "time", "_", "step", "/", "time", "_", "step", "*", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠA", "[", "3", "*", "block", "+", "2", "]", "Ġ+=", "Ġ", "Ġpart", "C", "fg", "[", "id", "].", "f", ".", "f", "[", "2", "]", "/", "time", "_", "step", "/", "time", "_", "step", "*", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["ids", 17, "comesFrom", ["ids"], [12]], ["ids", 29, "comesFrom", ["ids"], [12]], ["ids", 34, "comesFrom", ["ids"], [12]], ["n_blocks", 19, "comesFrom", ["n_blocks"], [14]], ["n_blocks", 22, "comesFrom", ["n_blocks"], [14]], ["block", 21, "comesFrom", ["block"], [20]], ["block", 23, "comesFrom", ["block"], [20]], ["block", 31, "comesFrom", ["block"], [20]], ["block", 39, "comesFrom", ["block"], [20]], ["block", 47, "comesFrom", ["block"], [20]], ["block", 55, "comesFrom", ["block"], [20]], ["i", 25, "comesFrom", ["i"], [24]], ["i", 27, "comesFrom", ["i"], [24]], ["i", 33, "comesFrom", ["i"], [24]], ["i", 36, "comesFrom", ["i"], [24]], ["blocksize", 26, "comesFrom", ["blocksize"], [16]], ["blocksize", 32, "comesFrom", ["blocksize"], [16]], ["id", 41, "comesFrom", ["id"], [28]], ["id", 49, "comesFrom", ["id"], [28]], ["id", 57, "comesFrom", ["id"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::131", "code": "/*\n* A Command & Conquer: Renegade SSGM Plugin, containing all the single player mission scripts\n* Copyright(C) 2017  Neijwiert\n*\n* This program is free software : you can redistribute it and / or modify\n* it under the terms of the GNU General Public License as published by\n* the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program.If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include \"General.h\"\n#include \"M01_Nod_GuardTower_Tailgun_JDG.h\"\n\n// This script is never used\nvoid M01_Nod_GuardTower_Tailgun_JDG::Created(GameObject *obj)\n{\n\tActionParamsStruct params;\n\tparams.Set_Basic(this, 100.0f, 17);\n\t\n\tVector3 pos = Commands->Get_Position(obj);\n\tGameObject *starObj = Commands->Get_A_Star(pos);\n\n\tparams.Set_Attack(starObj, 30.0f, 1.0f, true);\n\n\tCommands->Action_Attack(obj, params);\n}\n\nScriptRegistrant<M01_Nod_GuardTower_Tailgun_JDG> M01_Nod_GuardTower_Tailgun_JDGRegistrant(\"M01_Nod_GuardTower_Tailgun_JDG\", \"\");", "code_tokens": ["Ġ/*", "Ċ", "*", "ĠA", "ĠCommand", "Ġ&", "ĠConquer", ":", "ĠReneg", "ade", "ĠSS", "GM", "ĠPlugin", ",", "Ġcontaining", "Ġall", "Ġthe", "Ġsingle", "Ġplayer", "Ġmission", "Ġscripts", "Ċ", "*", "ĠCopyright", "(", "C", ")", "Ġ2017", "Ġ", "ĠNe", "ij", "wi", "ert", "Ċ", "*", "Ċ", "*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", "Ġ:", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "Ġ/", "Ġor", "Ġmodify", "Ċ", "*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "*", "Ċ", "*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "See", "Ġthe", "Ċ", "*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "*", "Ċ", "*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "If", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "General", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "M", "01", "_", "N", "od", "_", "Guard", "T", "ower", "_", "T", "ail", "gun", "_", "JD", "G", ".", "h", "\"", "Ċ", "Ċ", "//", "ĠThis", "Ġscript", "Ġis", "Ġnever", "Ġused", "Ċ", "void", "ĠM", "01", "_", "N", "od", "_", "Guard", "T", "ower", "_", "T", "ail", "gun", "_", "JD", "G", "::", "Created", "(", "Game", "Object", "Ġ*", "obj", ")", "Ċ", "{", "Ċ", "ĉ", "Action", "Par", "ams", "Struct", "Ġparams", ";", "Ċ", "ĉ", "params", ".", "Set", "_", "Basic", "(", "this", ",", "Ġ100", ".", "0", "f", ",", "Ġ17", ");", "Ċ", "ĉ", "Ċ", "ĉ", "Vector", "3", "Ġpos", "Ġ=", "ĠCommands", "->", "Get", "_", "Position", "(", "obj", ");", "Ċ", "ĉ", "Game", "Object", "Ġ*", "star", "Obj", "Ġ=", "ĠCommands", "->", "Get", "_", "A", "_", "Star", "(", "pos", ");", "ĊĊ", "ĉ", "params", ".", "Set", "_", "Attack", "(", "star", "Obj", ",", "Ġ30", ".", "0", "f", ",", "Ġ1", ".", "0", "f", ",", "Ġtrue", ");", "ĊĊ", "ĉ", "Comm", "ands", "->", "Action", "_", "Attack", "(", "obj", ",", "Ġparams", ");", "Ċ", "}", "Ċ", "Ċ", "Script", "Reg", "ist", "rant", "<", "M", "01", "_", "N", "od", "_", "Guard", "T", "ower", "_", "T", "ail", "gun", "_", "JD", "G", ">", "ĠM", "01", "_", "N", "od", "_", "Guard", "T", "ower", "_", "T", "ail", "gun", "_", "JD", "G", "Reg", "ist", "rant", "(\"", "M", "01", "_", "N", "od", "_", "Guard", "T", "ower", "_", "T", "ail", "gun", "_", "JD", "G", "\",", "Ġ\"\"", ");"], "dataflow_graph": [["params", 3, "comesFrom", ["params"], [2]], ["params", 13, "comesFrom", ["params"], [2]], ["params", 19, "comesFrom", ["params"], [2]], ["pos", 12, "comesFrom", ["pos"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::132", "code": "// Example 4-8: Using continue in a loop.\n#include <cmath>\n#include <iostream>\n#include <istream>\n#include <limits>\n#include <ostream>\nusing namespace std;\n\nint main(int argc, char *argv[]){\n\t\n  while(true) {\n    cout << \"Enter a number: \";\n    double x;\n    cin >> x;\n    if (cin.eof() || cin.bad())\n      // Input error: exit.\n      break;\n    else if (cin.fail()) {\n      // Invalid input: skip the rest of the line.\n      cin.clear();\n      cin.ignore(numeric_limits<int>::max(), '\\n');\n      continue;\n    }\n    cout << \"sqrt(\" << x << \")=\" << sqrt(x) << endl;\n  }\n}\n", "code_tokens": ["Ġ//", "ĠExample", "Ġ4", "-", "8", ":", "ĠUsing", "Ġcontinue", "Ġin", "Ġa", "Ġloop", ".", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "ist", "ream", ">", "Ċ", "#", "include", "Ġ<", "limits", ">", "Ċ", "#", "include", "Ġ<", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "{", "Ċ", "ĉ", "Ċ", "Ġ", "Ġwhile", "(", "true", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Enter", "Ġa", "Ġnumber", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "cin", ".", "e", "of", "()", "Ġ||", "Ġc", "in", ".", "bad", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠInput", "Ġerror", ":", "Ġexit", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "cin", ".", "fail", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠInvalid", "Ġinput", ":", "Ġskip", "Ġthe", "Ġrest", "Ġof", "Ġthe", "Ġline", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ".", "clear", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ".", "ignore", "(", "n", "umeric", "_", "limits", "<", "int", ">", "::", "max", "(),", "Ġ'", "\\", "n", "');", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcontinue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "sq", "rt", "(\"", "Ġ<<", "Ġx", "Ġ<<", "Ġ\"", ")", "=\"", "Ġ<<", "Ġsq", "rt", "(", "x", ")", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 7, "comesFrom", ["x"], [5]], ["x", 20, "comesFrom", ["x"], [5]], ["x", 22, "comesFrom", ["x"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::133", "code": "\n#include \"h17disk.h\"\n\n#include <stdio.h>\n\n\nstatic int usage(char *progName) {\n\tfprintf(stderr,\"Usage: %s old_h17disk_file new_h17disk_file\\n\",progName);\n\treturn 1;\n}\n\nint main(int argc, char *argv[]) {\n    H17Disk *image = new(H17Disk);\n\n    if (argc < 2 || argc > 3)\n    {\n        usage(argv[0]);\n        return 1;\n    }\n\n    std::string infile(argv[1]);\n\n    image->loadFile(infile.c_str());\n\n    std::string outfile;\n\n    if (argc == 2) \n    {\n        outfile.assign(argv[1], infile.rfind(\".\"));\n        outfile.append(\".h17raw\");\n    }\n    else \n    {\n        outfile.assign(argv[2]);\n    }\n\n    printf(\"------------------------\\n\");\n    printf(\"  Read Complete\\n\");\n    printf(\"------------------------\\n\");\n\n    image->analyze();\n\n    image->saveAsRaw(outfile.c_str());\n    \n    if (image)\n    {\n        delete image;\n    } \n    return 0; \n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "h", "17", "disk", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "ĊĊ", "Ċ", "static", "Ġint", "Ġusage", "(", "char", "Ġ*", "pro", "g", "Name", ")", "Ġ{", "Ċ", "ĉ", "f", "printf", "(", "st", "der", "r", ",\"", "Usage", ":", "Ġ%", "s", "Ġold", "_", "h", "17", "disk", "_", "file", "Ġnew", "_", "h", "17", "disk", "_", "file", "\\", "n", "\",", "pro", "g", "Name", ");", "Ċ", "ĉ", "return", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠH", "17", "Disk", "Ġ*", "image", "Ġ=", "Ġnew", "(", "H", "17", "Disk", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ<", "Ġ2", "Ġ||", "Ġarg", "c", "Ġ>", "Ġ3", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġusage", "(", "arg", "v", "[", "0", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġinf", "ile", "(", "arg", "v", "[", "1", "]);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġimage", "->", "load", "File", "(", "in", "file", ".", "c", "_", "str", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġout", "file", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ==", "Ġ2", ")", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "file", ".", "ass", "ign", "(", "arg", "v", "[", "1", "],", "Ġinf", "ile", ".", "r", "find", "(\"", ".\"", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "file", ".", "append", "(", "\".", "h", "17", "raw", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "file", ".", "ass", "ign", "(", "arg", "v", "[", "2", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "------------------------", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Ġ", "ĠRead", "ĠComplete", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "------------------------", "\\", "n", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġimage", "->", "analy", "ze", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġimage", "->", "save", "As", "Raw", "(", "out", "file", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "image", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġimage", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ġ", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["argc", 10, "comesFrom", ["argc"], [6]], ["argc", 11, "comesFrom", ["argc"], [6]], ["argc", 20, "comesFrom", ["argc"], [6]], ["outfile", 21, "comesFrom", ["outfile"], [19]], ["outfile", 26, "comesFrom", ["outfile"], [19]], ["outfile", 28, "comesFrom", ["outfile"], [19]], ["outfile", 38, "comesFrom", ["outfile"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::134", "code": "#include \"gradientwidget.h\"\n#include \"ui_gradientwidget.h\"\n\nGradientWidget::GradientWidget(QWidget *parent) :\n    AbstractWidget(parent),\n    ui(new Ui::GradientWidget)\n{\n    ui->setupUi(this);\n    connect(ui->nextButton,SIGNAL(clicked(bool)),this,SLOT(nextClick(bool)));\n    hide();\n}\n\nGradientWidget::~GradientWidget()\n{\n    delete ui;\n}\n\nvoid GradientWidget::showEvent(QShowEvent *)\n{\n    ui->graphicsView->setScene(new QGraphicsScene);\n}\n\nvoid GradientWidget::execute()\n{\n    module.mod_main();\n    m_picture renPic;\n    renPic.width = module.p_width;\n    renPic.height = module.p_height;\n    renPic.data = module.HDR;\n    ui->graphicsView->scene()->addPixmap(QPixmap::fromImage(picToImg(renPic)));\n    ui->graphicsView->scene()->update();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "gradient", "widget", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "gradient", "widget", ".", "h", "\"", "Ċ", "Ċ", "Grad", "ient", "Widget", "::", "Grad", "ient", "Widget", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAbstract", "Widget", "(", "parent", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "(", "new", "ĠU", "i", "::", "Grad", "ient", "Widget", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "setup", "U", "i", "(", "this", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconnect", "(", "ui", "->", "next", "Button", ",", "SIGN", "AL", "(", "cl", "icked", "(", "bool", ")),", "this", ",", "SL", "OT", "(", "next", "Click", "(", "bool", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġhide", "();", "Ċ", "}", "Ċ", "Ċ", "Grad", "ient", "Widget", "::", "~", "Grad", "ient", "Widget", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġu", "i", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGrad", "ient", "Widget", "::", "show", "Event", "(", "Q", "Show", "Event", "Ġ*)", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "g", "raphics", "View", "->", "set", "Scene", "(", "new", "ĠQ", "Graphics", "Scene", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGrad", "ient", "Widget", "::", "execute", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmodule", ".", "mod", "_", "main", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "picture", "Ġren", "Pic", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġren", "Pic", ".", "width", "Ġ=", "Ġmodule", ".", "p", "_", "width", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġren", "Pic", ".", "height", "Ġ=", "Ġmodule", ".", "p", "_", "height", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġren", "Pic", ".", "data", "Ġ=", "Ġmodule", ".", "H", "DR", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "g", "raphics", "View", "->", "scene", "()", "->", "add", "P", "ix", "map", "(", "Q", "P", "ix", "map", "::", "from", "Image", "(", "pic", "To", "Im", "g", "(", "ren", "Pic", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "g", "raphics", "View", "->", "scene", "()", "->", "update", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["renPic", 25, "comesFrom", ["renPic"], [24]], ["renPic", 29, "comesFrom", ["renPic"], [24]], ["renPic", 33, "comesFrom", ["renPic"], [24]], ["renPic", 43, "comesFrom", ["renPic"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::135", "code": "#include \"musicabstractfloatwidget.h\"\n\nMusicAbstractFloatWidget::MusicAbstractFloatWidget(QWidget *parent)\n    : QLabel(parent)\n{\n    m_animation = new QPropertyAnimation(this, \"geometry\", this);\n    m_animation->setDuration(500);\n    m_blockAnimation = false;\n}\n\nMusicAbstractFloatWidget::~MusicAbstractFloatWidget()\n{\n    delete m_animation;\n}\n\nvoid MusicAbstractFloatWidget::animationIn()\n{\n    m_animation->setStartValue(m_rectOut);\n    m_animation->setEndValue(m_rectIn);\n    m_animation->start();\n}\n\nvoid MusicAbstractFloatWidget::animationOut()\n{\n    m_animation->setStartValue(m_rectIn);\n    m_animation->setEndValue(m_rectOut);\n    m_animation->start();\n}\n\n#if TTK_QT_VERSION_CHECK(6,0,0)\nvoid MusicAbstractFloatWidget::enterEvent(QEnterEvent *event)\n#else\nvoid MusicAbstractFloatWidget::enterEvent(QEvent *event)\n#endif\n{\n    QLabel::enterEvent(event);\n    if(!m_blockAnimation)\n    {\n        animationIn();\n    }\n}\n\nvoid MusicAbstractFloatWidget::leaveEvent(QEvent *event)\n{\n    QLabel::leaveEvent(event);\n    if(!m_blockAnimation)\n    {\n        animationOut();\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "music", "ab", "stract", "float", "widget", ".", "h", "\"", "Ċ", "Ċ", "Music", "Abstract", "Float", "Widget", "::", "Music", "Abstract", "Float", "Widget", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠQ", "Label", "(", "parent", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "anim", "ation", "Ġ=", "Ġnew", "ĠQ", "Property", "Animation", "(", "this", ",", "Ġ\"", "ge", "ometry", "\",", "Ġthis", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "anim", "ation", "->", "set", "Duration", "(", "500", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "block", "Animation", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "Music", "Abstract", "Float", "Widget", "::", "~", "Music", "Abstract", "Float", "Widget", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġm", "_", "anim", "ation", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "anim", "ation", "In", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "anim", "ation", "->", "set", "Start", "Value", "(", "m", "_", "rect", "Out", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "anim", "ation", "->", "set", "End", "Value", "(", "m", "_", "rect", "In", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "anim", "ation", "->", "start", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "anim", "ation", "Out", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "anim", "ation", "->", "set", "Start", "Value", "(", "m", "_", "rect", "In", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "anim", "ation", "->", "set", "End", "Value", "(", "m", "_", "rect", "Out", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "anim", "ation", "->", "start", "();", "Ċ", "}", "Ċ", "Ċ", "#", "if", "ĠTT", "K", "_", "Q", "T", "_", "VERSION", "_", "CHECK", "(", "6", ",", "0", ",", "0", ")", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "enter", "Event", "(", "Q", "Enter", "Event", "Ġ*", "event", ")", "Ċ", "#", "else", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "enter", "Event", "(", "Q", "Event", "Ġ*", "event", ")", "Ċ", "#", "endif", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Label", "::", "enter", "Event", "(", "event", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "m", "_", "block", "Animation", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġanimation", "In", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMusic", "Abstract", "Float", "Widget", "::", "leave", "Event", "(", "Q", "Event", "Ġ*", "event", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Label", "::", "leave", "Event", "(", "event", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "m", "_", "block", "Animation", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġanimation", "Out", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["m_animation", 5, "comesFrom", ["m_animation"], [4]], ["m_animation", 9, "comesFrom", ["m_animation"], [4]], ["m_animation", 11, "comesFrom", ["m_animation"], [4]], ["m_animation", 14, "comesFrom", ["m_animation"], [4]], ["m_animation", 17, "comesFrom", ["m_animation"], [4]], ["m_animation", 20, "comesFrom", ["m_animation"], [4]], ["m_animation", 23, "comesFrom", ["m_animation"], [4]], ["m_animation", 26, "comesFrom", ["m_animation"], [4]], ["m_blockAnimation", 35, "comesFrom", ["m_blockAnimation"], [7]], ["m_blockAnimation", 41, "comesFrom", ["m_blockAnimation"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::136", "code": "/**\n * @author Michele Tomaiuolo - http://www.ce.unipr.it/people/tomamic\n * @license This software is free - http://www.gnu.org/licenses/gpl.html\n */\n\n#include \"fifteenmodel.h\"\n\nFifteenModel::FifteenModel(int rows, int columns)\n    : silent(false), FifteenPuzzle(rows, columns)\n{\n}\n\nvoid FifteenModel::shuffle()\n{\n    silent = true;\n    FifteenPuzzle::shuffle();\n    silent = false;\n}\n\nvoid FifteenModel::moveBlank(Coord delta)\n{\n    FifteenPuzzle::moveBlank(delta);\n    if (!silent) emit blankMoved();\n}\n\nFifteenPuzzle::Coord FifteenModel::getBlank()\n{\n    return blank;\n}\n\nFifteenPuzzle::Coord FifteenModel::getMoved()\n{\n    return moved;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "author", "ĠMichele", "ĠTom", "ai", "u", "olo", "Ġ-", "Ġhttp", "://", "www", ".", "ce", ".", "un", "ip", "r", ".", "it", "/", "people", "/", "tom", "amic", "Ċ", "Ġ*", "Ġ@", "license", "ĠThis", "Ġsoftware", "Ġis", "Ġfree", "Ġ-", "Ġhttp", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/", "g", "pl", ".", "html", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "fif", "teen", "model", ".", "h", "\"", "Ċ", "Ċ", "Fif", "teen", "Model", "::", "Fif", "teen", "Model", "(", "int", "Ġrows", ",", "Ġint", "Ġcolumns", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġsilent", "(", "false", "),", "ĠFif", "teen", "P", "uzzle", "(", "rows", ",", "Ġcolumns", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFif", "teen", "Model", "::", "sh", "uffle", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsilent", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFif", "teen", "P", "uzzle", "::", "sh", "uffle", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsilent", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFif", "teen", "Model", "::", "move", "Bl", "ank", "(", "Co", "ord", "Ġdelta", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFif", "teen", "P", "uzzle", "::", "move", "Bl", "ank", "(", "d", "elta", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "sil", "ent", ")", "Ġemit", "Ġblank", "M", "oved", "();", "Ċ", "}", "Ċ", "Ċ", "Fif", "teen", "P", "uzzle", "::", "Co", "ord", "ĠFif", "teen", "Model", "::", "get", "Bl", "ank", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġblank", ";", "Ċ", "}", "Ċ", "Ċ", "Fif", "teen", "P", "uzzle", "::", "Co", "ord", "ĠFif", "teen", "Model", "::", "get", "M", "oved", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmoved", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["silent", 15, "comesFrom", ["silent"], [10]], ["rows", 5, "comesFrom", ["rows"], [1]], ["columns", 6, "comesFrom", ["columns"], [2]], ["delta", 14, "comesFrom", ["delta"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::137", "code": "#include \"faktionbankkauftwertpapiere.h\"\n\n\nFAktionBankKauftWertpapiere::FAktionBankKauftWertpapiere(){\n    }\n\n\n\nFAktionBankKauftWertpapiere::FAktionBankKauftWertpapiere(FGeld BETRAG, int BANKNR, int BANKKUNDENNR){\n    Betrag       = BETRAG;\n    BankNr       = BANKNR;\n    BankKundenNr = BANKKUNDENNR;\n    }\n\n\n\nvoid FAktionBankKauftWertpapiere::Execute_on(FAlleDaten *AlleDaten){\n\n    // Operation auf Geschäftsbanken ausführen.\n    AlleDaten->Banken[BankNr].Wertpapiere              += Betrag;\n    AlleDaten->Banken[BankNr].GiroKonten[BankKundenNr] += Betrag;\n\n\n    // Fehlermeldungen\n    Fehlerbeschreibung = AlleDaten->Checken_ob_alle_Bilanzen_valide_sind_sonst_Fehlermeldung();\n\n\n    // Beschreibung\n    BeschreibungDerOperation = \") Die Bank hat Wertpapiere gekauft.\";\n    }\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "f", "ak", "tion", "bank", "k", "au", "ft", "w", "ert", "p", "ap", "iere", ".", "h", "\"", "ĊĊ", "Ċ", "FA", "k", "tion", "Bank", "K", "au", "ft", "W", "ert", "p", "ap", "iere", "::", "FA", "k", "tion", "Bank", "K", "au", "ft", "W", "ert", "p", "ap", "iere", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ċ", "Ċ", "FA", "k", "tion", "Bank", "K", "au", "ft", "W", "ert", "p", "ap", "iere", "::", "FA", "k", "tion", "Bank", "K", "au", "ft", "W", "ert", "p", "ap", "iere", "(", "F", "Ge", "ld", "ĠBET", "RAG", ",", "Ġint", "ĠB", "ANK", "NR", ",", "Ġint", "ĠB", "ANK", "K", "UN", "DEN", "NR", "){", "Ċ", "Ġ", "Ġ", "Ġ", "ĠBet", "rag", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ=", "ĠBET", "RAG", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠBank", "N", "r", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ=", "ĠB", "ANK", "NR", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠBank", "K", "und", "en", "N", "r", "Ġ=", "ĠB", "ANK", "K", "UN", "DEN", "NR", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ċ", "Ċ", "void", "ĠFA", "k", "tion", "Bank", "K", "au", "ft", "W", "ert", "p", "ap", "iere", "::", "Exec", "ute", "_", "on", "(", "F", "Al", "le", "Dat", "en", "Ġ*", "Al", "le", "Dat", "en", "){", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠOperation", "Ġa", "uf", "ĠGes", "ch", "Ã¤", "fts", "bank", "en", "Ġa", "us", "f", "Ã¼", "h", "ren", ".", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAl", "le", "Dat", "en", "->", "Bank", "en", "[", "Bank", "N", "r", "].", "W", "ert", "p", "ap", "iere", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ+=", "ĠBet", "rag", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAl", "le", "Dat", "en", "->", "Bank", "en", "[", "Bank", "N", "r", "].", "G", "iro", "K", "ont", "en", "[", "Bank", "K", "und", "en", "N", "r", "]", "Ġ+=", "ĠBet", "rag", ";", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠFe", "hler", "me", "ld", "ung", "en", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFe", "hler", "bes", "ch", "re", "ib", "ung", "Ġ=", "ĠAl", "le", "Dat", "en", "->", "Check", "en", "_", "ob", "_", "alle", "_", "B", "ilan", "zen", "_", "val", "ide", "_", "s", "ind", "_", "son", "st", "_", "Fe", "hler", "me", "ld", "ung", "();", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠBes", "ch", "re", "ib", "ung", "Ċ", "Ġ", "Ġ", "Ġ", "ĠBes", "ch", "re", "ib", "ung", "Der", "Operation", "Ġ=", "Ġ\"", ")", "ĠDie", "ĠBank", "Ġhat", "ĠW", "ert", "p", "ap", "iere", "Ġg", "ek", "au", "ft", ".\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ"], "dataflow_graph": [["BETRAG", 6, "comesFrom", ["BETRAG"], [2]], ["BANKNR", 8, "comesFrom", ["BANKNR"], [3]], ["BANKKUNDENNR", 10, "comesFrom", ["BANKKUNDENNR"], [4]], ["BankNr", 15, "comesFrom", ["BankNr"], [7]], ["BankNr", 20, "comesFrom", ["BankNr"], [7]], ["Betrag", 17, "comesFrom", ["Betrag"], [5]], ["Betrag", 23, "comesFrom", ["Betrag"], [5]], ["BankKundenNr", 22, "comesFrom", ["BankKundenNr"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::138", "code": "#include<bits/stdc++.h>\nusing namespace std;\nnamespace p1073_2{\nint f[20001],n,m,p;\nint g(int x){\n\tif(f[x]!=x)f[x]=g(f[x]);\n\treturn f[x];\n}\ninline void u(int a,int b){\n\tif(g(a)!=g(b))f[g(b)]=g(a);\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor(int i=1;i<=n;i++){\n\t\tf[i]=i;\n\t}\n\tint a,b;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tu(a,b);\n\t}\n\tfor(int i=1;i<=p;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tprintf((g(a)==g(b))?\"Yes\\n\":\"No\\n\");\n\t}\n\treturn 0;\n}\n}\n", "code_tokens": ["Ġ#", "include", "<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "names", "pace", "Ġp", "10", "73", "_", "2", "{", "Ċ", "int", "Ġf", "[", "200", "01", "],", "n", ",", "m", ",", "p", ";", "Ċ", "int", "Ġg", "(", "int", "Ġx", "){", "Ċ", "ĉ", "if", "(", "f", "[", "x", "]", "!", "=", "x", ")", "f", "[", "x", "]=", "g", "(", "f", "[", "x", "]);", "Ċ", "ĉ", "return", "Ġf", "[", "x", "];", "Ċ", "}", "Ċ", "inline", "Ġvoid", "Ġu", "(", "int", "Ġa", ",", "int", "Ġb", "){", "Ċ", "ĉ", "if", "(", "g", "(", "a", ")!", "=", "g", "(", "b", "))", "f", "[", "g", "(", "b", ")]", "=", "g", "(", "a", ");", "Ċ", "}", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "%", "d", "%", "d", "\",", "&", "n", ",", "&", "m", ",", "&", "p", ");", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "i", "<", "=", "n", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "f", "[", "i", "]=", "i", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "int", "Ġa", ",", "b", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "i", "<", "=", "m", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "%", "d", "\",", "&", "a", ",", "&", "b", ");", "Ċ", "ĉ", "ĉ", "u", "(", "a", ",", "b", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "i", "<", "=", "p", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "%", "d", "\",", "&", "a", ",", "&", "b", ");", "Ċ", "ĉ", "ĉ", "printf", "((", "g", "(", "a", ")", "==", "g", "(", "b", "))", "?\"", "Yes", "\\", "n", "\":\"", "No", "\\", "n", "\");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 8, "comesFrom", ["x"], [6]], ["x", 9, "comesFrom", ["x"], [6]], ["x", 11, "comesFrom", ["x"], [6]], ["x", 14, "comesFrom", ["x"], [6]], ["x", 16, "comesFrom", ["x"], [6]], ["a", 21, "comesFrom", ["a"], [18]], ["a", 28, "comesFrom", ["a"], [18]], ["a", 48, "comesFrom", ["a"], [41]], ["a", 51, "comesFrom", ["a"], [41]], ["a", 58, "comesFrom", ["a"], [41]], ["a", 62, "comesFrom", ["a"], [41]], ["b", 23, "comesFrom", ["b"], [19]], ["b", 26, "comesFrom", ["b"], [19]], ["b", 49, "comesFrom", ["b"], [42]], ["b", 52, "comesFrom", ["b"], [42]], ["b", 59, "comesFrom", ["b"], [42]], ["b", 64, "comesFrom", ["b"], [42]], ["n", 31, "comesFrom", ["n"], [2]], ["n", 36, "comesFrom", ["n"], [2]], ["m", 32, "comesFrom", ["m"], [3]], ["m", 45, "comesFrom", ["m"], [3]], ["p", 33, "comesFrom", ["p"], [4]], ["p", 55, "comesFrom", ["p"], [4]], ["i", 35, "comesFrom", ["i"], [34]], ["i", 37, "comesFrom", ["i"], [34]], ["i", 39, "comesFrom", ["i"], [34]], ["i", 40, "comesFrom", ["i"], [34]], ["i", 44, "comesFrom", ["i"], [43]], ["i", 46, "comesFrom", ["i"], [43]], ["i", 54, "comesFrom", ["i"], [53]], ["i", 56, "comesFrom", ["i"], [53]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::139", "code": "#include <iostream>\n#include <string>\n\n#include <boost/filesystem.hpp>\n\nint main() {\n    std::string ps = \"/usr/local/dayu/scripts\"; \n    boost::filesystem::path p(ps);\n    p /= \"kk.py\";\n    \n    std::cout << p.string() << std::endl;\n    std::cout << p.stem() << std::endl;\n    std::cout << p.parent_path() << std::endl;\n    std::cout << p.filename() << std::endl;\n    std::cout << p.extension() << std::endl;\n\n    std::cerr << \"Something error occurred.\" << std::endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "files", "ystem", ".", "h", "pp", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġps", "Ġ=", "Ġ\"/", "usr", "/", "local", "/", "day", "u", "/", "scripts", "\";", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġboost", "::", "files", "ystem", "::", "path", "Ġp", "(", "ps", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "Ġ/", "=", "Ġ\"", "kk", ".", "py", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġp", ".", "string", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġp", ".", "stem", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġp", ".", "parent", "_", "path", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġp", ".", "filename", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġp", ".", "ext", "ension", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Something", "Ġerror", "Ġoccurred", ".\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["p", 5, "comesFrom", ["p"], [3]], ["p", 9, "comesFrom", ["p"], [3]], ["p", 13, "comesFrom", ["p"], [3]], ["p", 17, "comesFrom", ["p"], [3]], ["p", 21, "comesFrom", ["p"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::140", "code": "#include <ladspam-jack-0/instrument.h>\n#include <ladspam1.pb.h>\n\n#include <iostream>\n#include <fstream>\n#include <unistd.h>\n#include <string>\n\nint main(int argc, char *argv[])\n{\n\tif (argc < 2)\n\t{\n\t\tstd::cout << \"Missing filename parameter\" << std::endl;\n\t\treturn EXIT_FAILURE;\n\t}\n\t\n\tladspam_proto1::Instrument instrument_pb;\n\tstd::ifstream input_file(argv[1], std::ios::in | std::ios::binary);\n\t\n\tif (false == input_file.good())\n\t{\n\t\tstd::cout << \"Failed to open input stream\" << std::endl;\n\t\treturn EXIT_FAILURE;\n\t}\n\t\t\n\t\n\tif (false == instrument_pb.ParseFromIstream(&input_file))\n\t{\n\t\tstd::cout << \"Failed to parse instrument definition file\" << std::endl;\n\t\treturn EXIT_FAILURE;\n\t}\n\t\n\tladspam_jack::instrument instrument(\"synth\", instrument_pb, 32);\n\t\n\tstd::cout << \"type anything and press enter to quit...\" << std::endl;\n\tstd::string line;\n\tstd::cin >> line;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "lad", "sp", "am", "-", "jack", "-", "0", "/", "in", "strument", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "lad", "sp", "am", "1", ".", "pb", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "arg", "c", "Ġ<", "Ġ2", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Missing", "Ġfilename", "Ġparameter", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "return", "ĠEX", "IT", "_", "FA", "IL", "URE", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "lad", "sp", "am", "_", "pro", "to", "1", "::", "In", "strument", "Ġinstrument", "_", "pb", ";", "Ċ", "ĉ", "std", "::", "if", "stream", "Ġinput", "_", "file", "(", "arg", "v", "[", "1", "],", "Ġstd", "::", "ios", "::", "in", "Ġ|", "Ġstd", "::", "ios", "::", "binary", ");", "Ċ", "ĉ", "Ċ", "ĉ", "if", "Ġ(", "false", "Ġ==", "Ġinput", "_", "file", ".", "good", "())", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "F", "ailed", "Ġto", "Ġopen", "Ġinput", "Ġstream", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "return", "ĠEX", "IT", "_", "FA", "IL", "URE", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "Ċ", "ĉ", "if", "Ġ(", "false", "Ġ==", "Ġinstrument", "_", "pb", ".", "Par", "se", "From", "I", "stream", "(&", "input", "_", "file", "))", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "F", "ailed", "Ġto", "Ġparse", "Ġinstrument", "Ġdefinition", "Ġfile", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "return", "ĠEX", "IT", "_", "FA", "IL", "URE", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "lad", "sp", "am", "_", "jack", "::", "in", "strument", "Ġinstrument", "(\"", "syn", "th", "\",", "Ġinstrument", "_", "pb", ",", "Ġ32", ");", "Ċ", "ĉ", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "type", "Ġanything", "Ġand", "Ġpress", "Ġenter", "Ġto", "Ġquit", "...\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "string", "Ġline", ";", "Ċ", "ĉ", "std", "::", "cin", "Ġ>>", "Ġline", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["argc", 3, "comesFrom", ["argc"], [1]], ["input_file", 12, "comesFrom", ["input_file"], [8]], ["input_file", 19, "comesFrom", ["input_file"], [8]], ["instrument_pb", 17, "comesFrom", ["instrument_pb"], [7]], ["instrument_pb", 24, "comesFrom", ["instrument_pb"], [7]], ["line", 29, "comesFrom", ["line"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::141", "code": "\n#include \"Wire.h\"\n\nPwmRPi::PwmRPi(unsigned char channel) {\n    this->channel = (channel & 0x01);\n}\n\nvoid PwmRPi::begin() {\n    pwm.address = PWM_ADDRESS;\n    Bcm2835::mapPeripheral(&pwm);\n}\n\nvoid PwmRPi::stop() {\n    Bcm2835::unmapPeripheral(&pwm);\n}\n\nPwmRPi Pwm0(0);\nPwmRPi Pwm1(1);\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "Wire", ".", "h", "\"", "Ċ", "Ċ", "P", "wm", "RP", "i", "::", "P", "wm", "RP", "i", "(", "unsigned", "Ġchar", "Ġchannel", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "channel", "Ġ=", "Ġ(", "channel", "Ġ&", "Ġ0", "x", "01", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠP", "wm", "RP", "i", "::", "begin", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "wm", ".", "address", "Ġ=", "ĠP", "WM", "_", "AD", "DR", "ESS", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠB", "cm", "28", "35", "::", "map", "Per", "ipher", "al", "(&", "p", "wm", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠP", "wm", "RP", "i", "::", "stop", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠB", "cm", "28", "35", "::", "un", "map", "Per", "ipher", "al", "(&", "p", "wm", ");", "Ċ", "}", "Ċ", "Ċ", "P", "wm", "RP", "i", "ĠP", "wm", "0", "(", "0", ");", "Ċ", "P", "wm", "RP", "i", "ĠP", "wm", "1", "(", "1", ");", "Ċ"], "dataflow_graph": [["channel", 2, "comesFrom", ["channel"], [1]], ["channel", 3, "comesFrom", ["channel"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::142", "code": "#include<queue>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N = 20012, inf = 2000000000;\nint p[N], f[N], t[N], s[N], dg[N];\nint main() {\n  int i, j, n;\n  while (scanf(\"%d\", &n) == 1 && n) {\n    fill(dg, dg+n, 0);\n    fill(s, s+n, inf);\n    for (i = 0; i < n; ++i) {\n      scanf(\"%d %d %d\", p+i, f+i, t+i);\n      ++dg[--p[i]];\n    }\n    queue<int> Q;\n    for (i = 0; i < n; ++i)\n      if (dg[i] == 0) {\n        s[i] = 0;\n        Q.push(i);\n      }\n    while (!Q.empty()) {\n      i = Q.front();\n      Q.pop();\n      if (p[i] < 0) continue;\n      j = (t[i] + s[i])*2 + !f[i];\n      if (j < s[p[i]]) s[p[i]] = j;\n      if (!--dg[p[i]]) Q.push(p[i]);\n    }\n    for (i = 0; p[i] >= 0; ++i);\n    printf(\"%d\\n\", s[i] + t[i]);\n  }\n}\n", "code_tokens": ["Ġ#", "include", "<", "queue", ">", "Ċ", "#", "include", "<", "c", "std", "io", ">", "Ċ", "#", "include", "<", "al", "gorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "const", "Ġint", "ĠN", "Ġ=", "Ġ200", "12", ",", "Ġinf", "Ġ=", "Ġ200", "0000000", ";", "Ċ", "int", "Ġp", "[", "N", "],", "Ġf", "[", "N", "],", "Ġt", "[", "N", "],", "Ġs", "[", "N", "],", "Ġd", "g", "[", "N", "];", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġi", ",", "Ġj", ",", "Ġn", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ")", "Ġ==", "Ġ1", "Ġ&&", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfill", "(", "d", "g", ",", "Ġd", "g", "+", "n", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfill", "(", "s", ",", "Ġs", "+", "n", ",", "Ġinf", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "Ġ%", "d", "Ġ%", "d", "\",", "Ġp", "+", "i", ",", "Ġf", "+", "i", ",", "Ġt", "+", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "d", "g", "[", "--", "p", "[", "i", "]", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġqueue", "<", "int", ">", "ĠQ", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "d", "g", "[", "i", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "[", "i", "]", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", ".", "push", "(", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(!", "Q", ".", "empty", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "Ġ=", "ĠQ", ".", "front", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", ".", "pop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "p", "[", "i", "]", "Ġ<", "Ġ0", ")", "Ġcontinue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġj", "Ġ=", "Ġ(", "t", "[", "i", "]", "Ġ+", "Ġs", "[", "i", "])", "*", "2", "Ġ+", "Ġ!", "f", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "j", "Ġ<", "Ġs", "[", "p", "[", "i", "]]", ")", "Ġs", "[", "p", "[", "i", "]]", "Ġ=", "Ġj", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "--", "d", "g", "[", "p", "[", "i", "]]", ")", "ĠQ", ".", "push", "(", "p", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġp", "[", "i", "]", "Ġ>=", "Ġ0", ";", "Ġ++", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġs", "[", "i", "]", "Ġ+", "Ġt", "[", "i", "]);", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["N", 4, "comesFrom", ["N"], [1]], ["N", 6, "comesFrom", ["N"], [1]], ["N", 8, "comesFrom", ["N"], [1]], ["N", 10, "comesFrom", ["N"], [1]], ["N", 12, "comesFrom", ["N"], [1]], ["n", 18, "comesFrom", ["n"], [16]], ["n", 19, "comesFrom", ["n"], [16]], ["n", 23, "comesFrom", ["n"], [16]], ["n", 27, "comesFrom", ["n"], [16]], ["n", 31, "comesFrom", ["n"], [16]], ["n", 46, "comesFrom", ["n"], [16]], ["inf", 28, "comesFrom", ["inf"], [2]], ["i", 30, "comesFrom", ["i"], [29]], ["i", 32, "comesFrom", ["i"], [29]], ["i", 35, "comesFrom", ["i"], [29]], ["i", 37, "comesFrom", ["i"], [29]], ["i", 39, "comesFrom", ["i"], [29]], ["i", 42, "comesFrom", ["i"], [29]], ["i", 45, "comesFrom", ["i"], [44]], ["i", 47, "comesFrom", ["i"], [44]], ["i", 49, "comesFrom", ["i"], [44]], ["i", 51, "comesFrom", ["i"], [44]], ["i", 54, "comesFrom", ["i"], [44]], ["i", 63, "comesFrom", ["i"], [57]], ["i", 66, "comesFrom", ["i"], [57]], ["i", 68, "comesFrom", ["i"], [57]], ["i", 70, "comesFrom", ["i"], [57]], ["i", 74, "comesFrom", ["i"], [57]], ["i", 77, "comesFrom", ["i"], [57]], ["i", 81, "comesFrom", ["i"], [57]], ["i", 85, "comesFrom", ["i"], [57]], ["i", 88, "comesFrom", ["i"], [86]], ["i", 89, "comesFrom", ["i"], [86]], ["i", 92, "comesFrom", ["i"], [86]], ["i", 94, "comesFrom", ["i"], [86]], ["Q", 52, "comesFrom", ["Q"], [43]], ["Q", 55, "comesFrom", ["Q"], [43]], ["Q", 58, "comesFrom", ["Q"], [43]], ["Q", 60, "comesFrom", ["Q"], [43]], ["Q", 82, "comesFrom", ["Q"], [43]], ["j", 71, "comesFrom", ["j"], [64]], ["j", 78, "comesFrom", ["j"], [64]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::143", "code": "#include <iostream>\n#include <zmf/AbstractModule.hpp>\n#include \"zsdn/StartupHelper.h\"\n#include \"LinkDiscoveryModule.hpp\"\n#include <google/protobuf/stubs/common.h>\n\nint main(int argc, char* argv[]) {\n    int returnCode;\n    if (zsdn::StartupHelper::paramsOkay(argc, argv)) {\n        zmf::logging::ZmfLogging::initializeLogging(\"LinkDiscoveryModule\", argv[1]);\n        returnCode = zsdn::StartupHelper::startInConsole(new LinkDiscoveryModule(0), argv[1]);\n    } else {\n        returnCode = 1;\n    }\n    google::protobuf::ShutdownProtobufLibrary();\n    return returnCode;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "z", "m", "f", "/", "Abstract", "Module", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ\"", "z", "sd", "n", "/", "Start", "up", "Helper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Link", "D", "iscovery", "Module", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "google", "/", "prot", "ob", "uf", "/", "st", "ubs", "/", "common", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġreturn", "Code", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "z", "sd", "n", "::", "Start", "up", "Helper", "::", "params", "Okay", "(", "arg", "c", ",", "Ġarg", "v", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġz", "m", "f", "::", "log", "ging", "::", "Z", "m", "f", "Log", "ging", "::", "initial", "ize", "Log", "ging", "(\"", "Link", "D", "iscovery", "Module", "\",", "Ġarg", "v", "[", "1", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Code", "Ġ=", "Ġz", "sd", "n", "::", "Start", "up", "Helper", "::", "start", "In", "Console", "(", "new", "ĠLink", "D", "iscovery", "Module", "(", "0", "),", "Ġarg", "v", "[", "1", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Code", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgoogle", "::", "prot", "ob", "uf", "::", "Shut", "down", "Prot", "ob", "uf", "Library", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġreturn", "Code", ";", "Ċ", "}"], "dataflow_graph": [["argc", 5, "comesFrom", ["argc"], [1]], ["returnCode", 14, "comesFrom", ["returnCode"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::144", "code": "#include \"barista_core/barista_core.h\"\n#include \"decafs_types/ip_address.h\"\n\n#include \"network_fake.h\"\n\n#define MIN_ARGS 6\n#define STRIPE_SIZE 1\n#define CHUNK_SIZE 2\n#define METADATA 3\n#define NUM_ESPRESSOS 4\n#define PORT 5\n\nint main(int argc, char** argv) {\n\n   // barista_core_init()\n   // set_node_up x 4 or whatever you want\n   \n   char* args[] = {(char*)\"\", (char*)\"1024\", (char*)\"512\", (char*)\"barista_metadata\", (char*)\"4\", (char*)\"1024\"};\n   barista_core_init(6, args);\n\n   set_node_up(1);\n   set_node_up(2);\n   set_node_up(3);\n   set_node_up(4);\n \n   struct ip_address ipaddr1 = ip_address((char*)\"192.168.1.1\"); \n   ConnectionToClient* ctc = NULL; \n   struct client client1 = client(ipaddr1, 1, ctc);\n\n   //open_dir(\"hello.txt\", client1);\n\n   open_file(\"hello.txt\", O_RDWR, client1);\n   std::string teststr(\"testwrite\");\n   write_file(1, teststr.c_str(), teststr.size(), client1); \n\n   close_file(1, client1);\n   open_file(\"hello.txt\", O_RDWR, client1);\n \n   read_file(2, teststr.size(), client1); \n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "bar", "ista", "_", "core", "/", "bar", "ista", "_", "core", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "dec", "af", "s", "_", "types", "/", "ip", "_", "address", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "network", "_", "fake", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠMIN", "_", "AR", "GS", "Ġ6", "Ċ", "#", "define", "ĠSTR", "IP", "E", "_", "SIZE", "Ġ1", "Ċ", "#", "define", "ĠCH", "UN", "K", "_", "SIZE", "Ġ2", "Ċ", "#", "define", "ĠMET", "AD", "ATA", "Ġ3", "Ċ", "#", "define", "ĠNUM", "_", "ES", "PRESS", "OS", "Ġ4", "Ċ", "#", "define", "ĠP", "ORT", "Ġ5", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ//", "Ġbar", "ista", "_", "core", "_", "init", "()", "Ċ", "Ġ", "Ġ", "Ġ//", "Ġset", "_", "node", "_", "up", "Ġx", "Ġ4", "Ġor", "Ġwhatever", "Ġyou", "Ġwant", "Ċ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġchar", "*", "Ġargs", "[]", "Ġ=", "Ġ{", "(", "char", "*", ")\"", "\",", "Ġ(", "char", "*", ")\"", "1024", "\",", "Ġ(", "char", "*", ")\"", "512", "\",", "Ġ(", "char", "*", ")\"", "bar", "ista", "_", "metadata", "\",", "Ġ(", "char", "*", ")\"", "4", "\",", "Ġ(", "char", "*", ")\"", "1024", "\"", "};", "Ċ", "Ġ", "Ġ", "Ġbar", "ista", "_", "core", "_", "init", "(", "6", ",", "Ġargs", ");", "ĊĊ", "Ġ", "Ġ", "Ġset", "_", "node", "_", "up", "(", "1", ");", "Ċ", "Ġ", "Ġ", "Ġset", "_", "node", "_", "up", "(", "2", ");", "Ċ", "Ġ", "Ġ", "Ġset", "_", "node", "_", "up", "(", "3", ");", "Ċ", "Ġ", "Ġ", "Ġset", "_", "node", "_", "up", "(", "4", ");", "Ċ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġstruct", "Ġip", "_", "address", "Ġip", "addr", "1", "Ġ=", "Ġip", "_", "address", "((", "char", "*", ")\"", "192", ".", "168", ".", "1", ".", "1", "\");", "Ġ", "Ċ", "Ġ", "Ġ", "ĠConnection", "To", "Client", "*", "Ġc", "tc", "Ġ=", "ĠNULL", ";", "Ġ", "Ċ", "Ġ", "Ġ", "Ġstruct", "Ġclient", "Ġclient", "1", "Ġ=", "Ġclient", "(", "ip", "addr", "1", ",", "Ġ1", ",", "Ġc", "tc", ");", "ĊĊ", "Ġ", "Ġ", "Ġ//", "open", "_", "dir", "(\"", "hello", ".", "txt", "\",", "Ġclient", "1", ");", "ĊĊ", "Ġ", "Ġ", "Ġopen", "_", "file", "(\"", "hello", ".", "txt", "\",", "ĠO", "_", "RD", "WR", ",", "Ġclient", "1", ");", "Ċ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġtest", "str", "(\"", "test", "write", "\");", "Ċ", "Ġ", "Ġ", "Ġwrite", "_", "file", "(", "1", ",", "Ġtest", "str", ".", "c", "_", "str", "(),", "Ġtest", "str", ".", "size", "(),", "Ġclient", "1", ");", "Ġ", "ĊĊ", "Ġ", "Ġ", "Ġclose", "_", "file", "(", "1", ",", "Ġclient", "1", ");", "Ċ", "Ġ", "Ġ", "Ġopen", "_", "file", "(\"", "hello", ".", "txt", "\",", "ĠO", "_", "RD", "WR", ",", "Ġclient", "1", ");", "Ċ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġread", "_", "file", "(", "2", ",", "Ġtest", "str", ".", "size", "(),", "Ġclient", "1", ");", "Ġ", "Ċ", "}", "Ċ"], "dataflow_graph": [["ipaddr1", 21, "comesFrom", ["ipaddr1"], [16]], ["client1", 25, "comesFrom", ["client1"], [19]], ["client1", 32, "comesFrom", ["client1"], [19]], ["client1", 34, "comesFrom", ["client1"], [19]], ["client1", 37, "comesFrom", ["client1"], [19]], ["client1", 41, "comesFrom", ["client1"], [19]], ["teststr", 28, "comesFrom", ["teststr"], [26]], ["teststr", 30, "comesFrom", ["teststr"], [26]], ["teststr", 39, "comesFrom", ["teststr"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::145", "code": "/*----------------------------------------------------------------------------*/\n/* Copyright (c) FIRST 2011. All Rights Reserved.\n */\n/* Open Source Software - may be modified and shared by FRC teams. The code   */\n/* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */\n/*----------------------------------------------------------------------------*/\n\n#include \"Commands/WaitUntilCommand.h\"\n#include \"Timer.h\"\n\n/**\n * A {@link WaitCommand} will wait until a certain match time before finishing.\n * This will wait until the game clock reaches some value, then continue to the\n * next command.\n * @see CommandGroup\n */\nWaitUntilCommand::WaitUntilCommand(double time)\n    : Command(\"WaitUntilCommand\", time) {\n  m_time = time;\n}\n\nWaitUntilCommand::WaitUntilCommand(const std::string &name, double time)\n    : Command(name, time) {\n  m_time = time;\n}\n\nvoid WaitUntilCommand::Initialize() {}\n\nvoid WaitUntilCommand::Execute() {}\n\n/**\n * Check if we've reached the actual finish time.\n */\nbool WaitUntilCommand::IsFinished() { return Timer::GetMatchTime() >= m_time; }\n\nvoid WaitUntilCommand::End() {}\n\nvoid WaitUntilCommand::Interrupted() {}\n", "code_tokens": ["Ġ/*", "----------------------------------------------------------------", "------------", "*/", "Ċ", "/*", "ĠCopyright", "Ġ(", "c", ")", "ĠFIRST", "Ġ2011", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*/", "Ċ", "/*", "ĠOpen", "ĠSource", "ĠSoftware", "Ġ-", "Ġmay", "Ġbe", "Ġmodified", "Ġand", "Ġshared", "Ġby", "ĠF", "RC", "Ġteams", ".", "ĠThe", "Ġcode", "Ġ", "Ġ", "Ġ*/", "Ċ", "/*", "Ġmust", "Ġbe", "Ġaccompanied", "Ġby", "Ġthe", "ĠFIRST", "ĠB", "SD", "Ġlicense", "Ġfile", "Ġin", "Ġ$(", "WIND", "_", "B", "ASE", ")/", "WP", "IL", "ib", ".", "Ġ", "Ġ*/", "Ċ", "/*", "----------------------------------------------------------------", "------------", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Comm", "ands", "/", "Wait", "Until", "Command", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Timer", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠA", "Ġ{", "@", "link", "ĠWait", "Command", "}", "Ġwill", "Ġwait", "Ġuntil", "Ġa", "Ġcertain", "Ġmatch", "Ġtime", "Ġbefore", "Ġfinishing", ".", "Ċ", "Ġ*", "ĠThis", "Ġwill", "Ġwait", "Ġuntil", "Ġthe", "Ġgame", "Ġclock", "Ġreaches", "Ġsome", "Ġvalue", ",", "Ġthen", "Ġcontinue", "Ġto", "Ġthe", "Ċ", "Ġ*", "Ġnext", "Ġcommand", ".", "Ċ", "Ġ*", "Ġ@", "see", "ĠCommand", "Group", "Ċ", "Ġ*/", "Ċ", "Wait", "Until", "Command", "::", "Wait", "Until", "Command", "(", "double", "Ġtime", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠCommand", "(\"", "Wait", "Until", "Command", "\",", "Ġtime", ")", "Ġ{", "Ċ", "Ġ", "Ġm", "_", "time", "Ġ=", "Ġtime", ";", "Ċ", "}", "Ċ", "Ċ", "Wait", "Until", "Command", "::", "Wait", "Until", "Command", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ",", "Ġdouble", "Ġtime", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠCommand", "(", "name", ",", "Ġtime", ")", "Ġ{", "Ċ", "Ġ", "Ġm", "_", "time", "Ġ=", "Ġtime", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWait", "Until", "Command", "::", "Initial", "ize", "()", "Ġ{}", "Ċ", "Ċ", "void", "ĠWait", "Until", "Command", "::", "Exec", "ute", "()", "Ġ{}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠCheck", "Ġif", "Ġwe", "'ve", "Ġreached", "Ġthe", "Ġactual", "Ġfinish", "Ġtime", ".", "Ċ", "Ġ*/", "Ċ", "bool", "ĠWait", "Until", "Command", "::", "Is", "Fin", "ished", "()", "Ġ{", "Ġreturn", "ĠTim", "er", "::", "Get", "Match", "Time", "()", "Ġ>=", "Ġm", "_", "time", ";", "Ġ}", "Ċ", "Ċ", "void", "ĠWait", "Until", "Command", "::", "End", "()", "Ġ{}", "Ċ", "Ċ", "void", "ĠWait", "Until", "Command", "::", "Inter", "rupted", "()", "Ġ{}", "Ċ"], "dataflow_graph": [["time", 3, "comesFrom", ["time"], [1]], ["time", 5, "comesFrom", ["time"], [1]], ["time", 11, "comesFrom", ["time"], [8]], ["time", 13, "comesFrom", ["time"], [8]], ["m_time", 18, "comesFrom", ["m_time"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::146", "code": "/*\n * ColorRGB property file\n * \n * This file is part of the \"ForkENGINE\" (Copyright (c) 2014 by Lukas Hermanns)\n * See \"LICENSE.txt\" for license information.\n */\n\n#include \"Engine/Component/Component.h\"\n#include \"IO/FileSystem/File.h\"\n\n\nnamespace Fork\n{\n\nnamespace Engine\n{\n\n\nComponent::Property::Types Component::ColorRGBProperty::Type() const\n{\n    return Types::ColorRGB;\n}\n\nvoid Component::ColorRGBProperty::WriteToFile(IO::File& file) const\n{\n    file.Write<unsigned char>(value.r);\n    file.Write<unsigned char>(value.g);\n    file.Write<unsigned char>(value.b);\n}\n\nvoid Component::ColorRGBProperty::ReadFromFile(IO::File& file)\n{\n    value.r = file.Read<unsigned char>();\n    value.g = file.Read<unsigned char>();\n    value.b = file.Read<unsigned char>();\n}\n\nvoid Component::ColorRGBProperty::WriteToVariant(IO::Variant& variant) const\n{\n    variant = value;\n}\n\nvoid Component::ColorRGBProperty::ReadFromVariant(const IO::Variant& variant)\n{\n    value = variant.GetColorRGB();\n}\n\n\n} // /namespace Engine\n\n} // /namespace Fork\n\n\n\n// ========================", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠColor", "RGB", "Ġproperty", "Ġfile", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġ\"", "F", "ork", "ENG", "INE", "\"", "Ġ(", "Copyright", "Ġ(", "c", ")", "Ġ2014", "Ġby", "ĠLuk", "as", "ĠHerman", "ns", ")", "Ċ", "Ġ*", "ĠSee", "Ġ\"", "L", "IC", "ENSE", ".", "txt", "\"", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Engine", "/", "Component", "/", "Component", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "IO", "/", "File", "System", "/", "File", ".", "h", "\"", "ĊĊ", "Ċ", "names", "pace", "ĠFork", "Ċ", "{", "Ċ", "Ċ", "names", "pace", "ĠEngine", "Ċ", "{", "ĊĊ", "Ċ", "Component", "::", "Property", "::", "Types", "ĠComponent", "::", "Color", "RGB", "Property", "::", "Type", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠTypes", "::", "Color", "RGB", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComponent", "::", "Color", "RGB", "Property", "::", "Write", "To", "File", "(", "IO", "::", "File", "&", "Ġfile", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfile", ".", "Write", "<", "unsigned", "Ġchar", ">(", "value", ".", "r", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfile", ".", "Write", "<", "unsigned", "Ġchar", ">(", "value", ".", "g", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfile", ".", "Write", "<", "unsigned", "Ġchar", ">(", "value", ".", "b", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComponent", "::", "Color", "RGB", "Property", "::", "Read", "From", "File", "(", "IO", "::", "File", "&", "Ġfile", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvalue", ".", "r", "Ġ=", "Ġfile", ".", "Read", "<", "unsigned", "Ġchar", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvalue", ".", "g", "Ġ=", "Ġfile", ".", "Read", "<", "unsigned", "Ġchar", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvalue", ".", "b", "Ġ=", "Ġfile", ".", "Read", "<", "unsigned", "Ġchar", ">", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComponent", "::", "Color", "RGB", "Property", "::", "Write", "To", "Vari", "ant", "(", "IO", "::", "Vari", "ant", "&", "Ġvariant", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvariant", "Ġ=", "Ġvalue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComponent", "::", "Color", "RGB", "Property", "::", "Read", "From", "Vari", "ant", "(", "const", "ĠIO", "::", "Vari", "ant", "&", "Ġvariant", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvalue", "Ġ=", "Ġvariant", ".", "Get", "Color", "RGB", "();", "Ċ", "}", "ĊĊ", "Ċ", "}", "Ġ//", "Ġ/", "names", "pace", "ĠEngine", "Ċ", "Ċ", "}", "Ġ//", "Ġ/", "names", "pace", "ĠFork", "ĊĊ", "Ċ", "Ċ", "//", "Ġ=================", "====", "==="], "dataflow_graph": [["variant", 35, "comesFrom", ["variant"], [32]], ["variant", 37, "comesFrom", ["variant"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::147", "code": "\n//\n// This is example code from Chapter 25.7 \"Drill\" of\n// \"Programming -- Principles and Practice Using C++\" by Bjarne Stroustrup\n//\n\n#include <iostream>\n\nusing namespace std;\n\n//------------------------------------------------------------------------------\n\nint main()\n{\n    // for int\n    {\n        int v = 1;\n\n        for (int i = 0; i<sizeof(v)*8; ++i) \n        { \n            cout << v << ' '; v <<=1; \n        }\n    }\n\n    // for unsigned int\n    {\n        unsigned int v = 1;\n\n        for (int i = 0; i<sizeof(v)*8; ++i) \n        { \n            cout << v << ' '; v <<=1; \n        }\n    }\n}\n\n//------------------------------------------------------------------------------\n", "code_tokens": ["Ċ", "//", "Ċ", "//", "ĠThis", "Ġis", "Ġexample", "Ġcode", "Ġfrom", "ĠChapter", "Ġ25", ".", "7", "Ġ\"", "Dr", "ill", "\"", "Ġof", "Ċ", "//", "Ġ\"", "Program", "ming", "Ġ--", "ĠPrinciples", "Ġand", "ĠPractice", "ĠUsing", "ĠC", "++", "\"", "Ġby", "ĠB", "jar", "ne", "ĠSt", "rou", "st", "rup", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġfor", "Ġint", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġv", "Ġ=", "Ġ1", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "size", "of", "(", "v", ")*", "8", ";", "Ġ++", "i", ")", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġv", "Ġ<<", "Ġ'", "Ġ'", ";", "Ġv", "Ġ<<", "=", "1", ";", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġfor", "Ġunsigned", "Ġint", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġint", "Ġv", "Ġ=", "Ġ1", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "size", "of", "(", "v", ")*", "8", ";", "Ġ++", "i", ")", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġv", "Ġ<<", "Ġ'", "Ġ'", ";", "Ġv", "Ġ<<", "=", "1", ";", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------", "Ċ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 6, "comesFrom", ["i"], [3]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["v", 5, "comesFrom", ["v"], [2]], ["v", 8, "comesFrom", ["v"], [2]], ["v", 13, "comesFrom", ["v"], [10]], ["v", 16, "comesFrom", ["v"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::148", "code": "/*\n  Copyright (C) 2005 Steven L. Scott\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n*/\n#include <fstream>\n#include <string>\n#include <vector>\n\nnamespace BOOM {\n\n  std::vector<std::string> read_file(std::istream &in) {\n    std::vector<std::string> ans;\n    while (in) {\n      std::string line;\n      getline(in, line);\n      if (!in) break;\n      ans.push_back(line);\n    }\n    return ans;\n  }\n\n  std::vector<std::string> read_file(const std::string &fname) {\n    std::ifstream in(fname.c_str());\n    return read_file(in);\n  }\n}  // namespace BOOM\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "ĠSteven", "ĠL", ".", "ĠScott", "ĊĊ", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "Ġ", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠFranklin", "ĠStreet", ",", "ĠFifth", "ĠFloor", ",", "ĠBoston", ",", "ĠMA", "Ġ", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", "Ċ", "*/", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "names", "pace", "ĠBO", "OM", "Ġ{", "ĊĊ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġread", "_", "file", "(", "std", "::", "ist", "ream", "Ġ&", "in", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġans", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "in", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġline", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġget", "line", "(", "in", ",", "Ġline", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "in", ")", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", ".", "push", "_", "back", "(", "line", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġans", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġread", "_", "file", "(", "const", "Ġstd", "::", "string", "Ġ&", "f", "name", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "if", "stream", "Ġin", "(", "f", "name", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġread", "_", "file", "(", "in", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "ĠBO", "OM", "Ċ"], "dataflow_graph": [["in", 19, "comesFrom", ["in"], [15]], ["line", 7, "comesFrom", ["line"], [4]], ["line", 11, "comesFrom", ["line"], [4]], ["ans", 9, "comesFrom", ["ans"], [2]], ["ans", 12, "comesFrom", ["ans"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::149", "code": "//Subset-Sum -> (G = O valor total sendo testado, N = numero de valores disponiveis no array 'values'\nint values[n];\nbool subsetSum(int n, int g) {\n    for(j = 0; j <= g; j++) sub[j] = 0;\n    sub[0] = 1;\n    for(j = 0; j < n; j++) if(values[j] != g) {\n        for(int k = g; k >= values[j]; k--) {\n            sub[k] |= sub[k - values[j]];\n        }\n    }\n    return sub[g];\n}\n", "code_tokens": ["Ġ//", "Sub", "set", "-", "Sum", "Ġ->", "Ġ(", "G", "Ġ=", "ĠO", "Ġval", "or", "Ġtotal", "Ġsend", "o", "Ġtest", "ado", ",", "ĠN", "Ġ=", "Ġnum", "ero", "Ġde", "Ġval", "ores", "Ġdisp", "on", "ive", "is", "Ġno", "Ġarray", "Ġ'", "values", "'", "Ċ", "int", "Ġvalues", "[", "n", "];", "Ċ", "bool", "Ġsubset", "Sum", "(", "int", "Ġn", ",", "Ġint", "Ġg", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "j", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<=", "Ġg", ";", "Ġj", "++)", "Ġsub", "[", "j", "]", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsub", "[", "0", "]", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "j", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġj", "++)", "Ġif", "(", "values", "[", "j", "]", "Ġ!=", "Ġg", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġk", "Ġ=", "Ġg", ";", "Ġk", "Ġ>=", "Ġvalues", "[", "j", "];", "Ġk", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsub", "[", "k", "]", "Ġ|", "=", "Ġsub", "[", "k", "Ġ-", "Ġvalues", "[", "j", "]", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġsub", "[", "g", "];", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 14, "comesFrom", ["n"], [3]], ["j", 6, "comesFrom", ["j"], [5]], ["j", 8, "comesFrom", ["j"], [5]], ["j", 10, "comesFrom", ["j"], [5]], ["j", 13, "comesFrom", ["j"], [12]], ["j", 15, "comesFrom", ["j"], [12]], ["j", 17, "comesFrom", ["j"], [12]], ["j", 23, "comesFrom", ["j"], [12]], ["j", 30, "comesFrom", ["j"], [12]], ["g", 7, "comesFrom", ["g"], [4]], ["g", 18, "comesFrom", ["g"], [4]], ["g", 32, "comesFrom", ["g"], [20]], ["k", 21, "comesFrom", ["k"], [19]], ["k", 24, "comesFrom", ["k"], [19]], ["k", 26, "comesFrom", ["k"], [19]], ["k", 28, "comesFrom", ["k"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::150", "code": "#include <iostream>\n\n#include \"GameObject.h\"\n\nusing namespace Physics;\n\nvoid GameObject::init(string name, string particle, string entity)\n{\n\tm_name = name;\n\n\tif (mp_PhysicsManager->hasParticle(particle))\n\t\tm_particleName = particle;\n\n\tif (mp_GraphicsManager->hasEntity(entity))\n\t\tm_entityName = entity;\n\n\tm_position = mp_PhysicsManager->getParticlePosition(m_particleName);\n}\n\nvoid GameObject::update()\n{\n\t// get data from physics engine\n\tm_position = mp_PhysicsManager->getParticlePosition(m_particleName);\n\t//std::cout << \"GAMEOBJECT:: update(): Attempting to update particle \" << m_particleName << \" with physics postion: \" << newPos.ToString() << std::endl;\n\n\t// give data to graphics engine\n\tmp_GraphicsManager->updateEntityPosition(m_entityName, m_position.GLM());\n\n\t//std::cout << \"GAMEOBJECT:: update(): \" << m_particleName << \"'s position after update: \" << newPos.ToString() << std::endl;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Game", "Object", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠPhysics", ";", "Ċ", "Ċ", "void", "ĠGame", "Object", "::", "init", "(", "string", "Ġname", ",", "Ġstring", "Ġparticle", ",", "Ġstring", "Ġentity", ")", "Ċ", "{", "Ċ", "ĉ", "m", "_", "name", "Ġ=", "Ġname", ";", "ĊĊ", "ĉ", "if", "Ġ(", "mp", "_", "Ph", "ysics", "Manager", "->", "has", "Part", "icle", "(", "part", "icle", "))", "Ċ", "ĉ", "ĉ", "m", "_", "part", "icle", "Name", "Ġ=", "Ġparticle", ";", "ĊĊ", "ĉ", "if", "Ġ(", "mp", "_", "Graphics", "Manager", "->", "has", "Entity", "(", "entity", "))", "Ċ", "ĉ", "ĉ", "m", "_", "entity", "Name", "Ġ=", "Ġentity", ";", "ĊĊ", "ĉ", "m", "_", "position", "Ġ=", "Ġmp", "_", "Ph", "ysics", "Manager", "->", "get", "Part", "icle", "Position", "(", "m", "_", "part", "icle", "Name", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGame", "Object", "::", "update", "()", "Ċ", "{", "Ċ", "ĉ", "//", "Ġget", "Ġdata", "Ġfrom", "Ġphysics", "Ġengine", "Ċ", "ĉ", "m", "_", "position", "Ġ=", "Ġmp", "_", "Ph", "ysics", "Manager", "->", "get", "Part", "icle", "Position", "(", "m", "_", "part", "icle", "Name", ");", "Ċ", "ĉ", "//", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "G", "AM", "EO", "B", "JECT", "::", "Ġupdate", "():", "ĠAttempt", "ing", "Ġto", "Ġupdate", "Ġparticle", "Ġ\"", "Ġ<<", "Ġm", "_", "part", "icle", "Name", "Ġ<<", "Ġ\"", "Ġwith", "Ġphysics", "Ġpost", "ion", ":", "Ġ\"", "Ġ<<", "Ġnew", "Pos", ".", "To", "String", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "ĉ", "//", "Ġgive", "Ġdata", "Ġto", "Ġgraphics", "Ġengine", "Ċ", "ĉ", "mp", "_", "Graphics", "Manager", "->", "update", "Entity", "Position", "(", "m", "_", "entity", "Name", ",", "Ġm", "_", "position", ".", "GL", "M", "());", "ĊĊ", "ĉ", "//", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "G", "AM", "EO", "B", "JECT", "::", "Ġupdate", "():", "Ġ\"", "Ġ<<", "Ġm", "_", "part", "icle", "Name", "Ġ<<", "Ġ\"'", "s", "Ġposition", "Ġafter", "Ġupdate", ":", "Ġ\"", "Ġ<<", "Ġnew", "Pos", ".", "To", "String", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}"], "dataflow_graph": [["name", 6, "comesFrom", ["name"], [2]], ["particle", 9, "comesFrom", ["particle"], [3]], ["particle", 11, "comesFrom", ["particle"], [3]], ["entity", 14, "comesFrom", ["entity"], [4]], ["entity", 16, "comesFrom", ["entity"], [4]], ["m_particleName", 20, "comesFrom", ["m_particleName"], [10]], ["m_particleName", 25, "comesFrom", ["m_particleName"], [10]], ["m_entityName", 28, "comesFrom", ["m_entityName"], [15]], ["m_position", 29, "comesFrom", ["m_position"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::151", "code": "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE369_Divide_by_Zero__int_zero_modulo_82_goodB2G.cpp\r\nLabel Definition File: CWE369_Divide_by_Zero__int.label.xml\r\nTemplate File: sources-sinks-82_goodB2G.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 369 Divide by Zero\r\n * BadSource: zero Fixed value of zero\r\n * GoodSource: Non-zero\r\n * Sinks: modulo\r\n *    GoodSink: Check for zero before modulo\r\n *    BadSink : Modulo a constant with data\r\n * Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer\r\n *\r\n * */\r\n#ifndef OMITGOOD\r\n\r\n#include \"std_testcase.h\"\r\n#include \"CWE369_Divide_by_Zero__int_zero_modulo_82.h\"\r\n\r\nnamespace CWE369_Divide_by_Zero__int_zero_modulo_82\r\n{\r\n\r\nvoid CWE369_Divide_by_Zero__int_zero_modulo_82_goodB2G::action(int data)\r\n{\r\n    /* FIX: test for a zero denominator */\r\n    if( data != 0 )\r\n    {\r\n        printIntLine(100 % data);\r\n    }\r\n    else\r\n    {\r\n        printLine(\"This would result in a divide by zero\");\r\n    }\r\n}\r\n\r\n}\r\n#endif /* OMITGOOD */\r\n", "code_tokens": ["Ġ/*", "ĠT", "EM", "PL", "ATE", "ĠGEN", "ER", "ATED", "ĠT", "ES", "TC", "ASE", "ĠFILE", "č", "Ċ", "Filename", ":", "ĠC", "WE", "369", "_", "Div", "ide", "_", "by", "_", "Zero", "__", "int", "_", "zero", "_", "mod", "ulo", "_", "82", "_", "good", "B", "2", "G", ".", "cpp", "č", "Ċ", "Label", "ĠDefinition", "ĠFile", ":", "ĠC", "WE", "369", "_", "Div", "ide", "_", "by", "_", "Zero", "__", "int", ".", "label", ".", "xml", "č", "Ċ", "Template", "ĠFile", ":", "Ġsources", "-", "s", "inks", "-", "82", "_", "good", "B", "2", "G", ".", "tm", "pl", ".", "cpp", "č", "Ċ", "*/", "č", "Ċ", "/*", "č", "Ċ", "Ġ*", "Ġ@", "description", "č", "Ċ", "Ġ*", "ĠC", "WE", ":", "Ġ369", "ĠDivide", "Ġby", "ĠZero", "č", "Ċ", "Ġ*", "ĠBad", "Source", ":", "Ġzero", "ĠFixed", "Ġvalue", "Ġof", "Ġzero", "č", "Ċ", "Ġ*", "ĠGood", "Source", ":", "ĠNon", "-", "zero", "č", "Ċ", "Ġ*", "ĠS", "inks", ":", "Ġmod", "ulo", "č", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "ĠGood", "S", "ink", ":", "ĠCheck", "Ġfor", "Ġzero", "Ġbefore", "Ġmod", "ulo", "č", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "ĠBad", "S", "ink", "Ġ:", "ĠMod", "ulo", "Ġa", "Ġconstant", "Ġwith", "Ġdata", "č", "Ċ", "Ġ*", "ĠFlow", "ĠVariant", ":", "Ġ82", "ĠData", "Ġflow", ":", "Ġdata", "Ġpassed", "Ġin", "Ġa", "Ġparameter", "Ġto", "Ġan", "Ġvirtual", "Ġmethod", "Ġcalled", "Ġvia", "Ġa", "Ġpointer", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ*/", "č", "Ċ", "#", "if", "nd", "ef", "ĠOM", "IT", "GO", "OD", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "_", "test", "case", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "C", "WE", "369", "_", "Div", "ide", "_", "by", "_", "Zero", "__", "int", "_", "zero", "_", "mod", "ulo", "_", "82", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "names", "pace", "ĠC", "WE", "369", "_", "Div", "ide", "_", "by", "_", "Zero", "__", "int", "_", "zero", "_", "mod", "ulo", "_", "82", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "void", "ĠC", "WE", "369", "_", "Div", "ide", "_", "by", "_", "Zero", "__", "int", "_", "zero", "_", "mod", "ulo", "_", "82", "_", "good", "B", "2", "G", "::", "action", "(", "int", "Ġdata", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ/*", "ĠFIX", ":", "Ġtest", "Ġfor", "Ġa", "Ġzero", "Ġdenomin", "ator", "Ġ*/", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "Ġdata", "Ġ!=", "Ġ0", "Ġ)", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprint", "Int", "Line", "(", "100", "Ġ%", "Ġdata", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprint", "Line", "(\"", "This", "Ġwould", "Ġresult", "Ġin", "Ġa", "Ġdivide", "Ġby", "Ġzero", "\");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "Ġ/*", "ĠOM", "IT", "GO", "OD", "Ġ*/", "č", "Ċ"], "dataflow_graph": [["data", 3, "comesFrom", ["data"], [2]], ["data", 5, "comesFrom", ["data"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::152", "code": "// Copyright © 2010-2014 The CefSharp Project. All rights reserved.\n//\n// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n#pragma once\n\n#include \"Stdafx.h\"\n\n#include \"JavascriptPropertyWrapper.h\"\n#include \"JavascriptObjectWrapper.h\"\n\nusing namespace System;\n\nnamespace CefSharp\n{\n    void JavascriptPropertyWrapper::Bind()\n    {\n        auto propertyName = StringUtils::ToNative(_javascriptProperty->JavascriptName);\n        auto clrPropertyName = _javascriptProperty->JavascriptName;\n\n        if (_javascriptProperty->IsComplexType)\n        {\n            auto javascriptObjectWrapper = gcnew JavascriptObjectWrapper(_javascriptProperty->JsObject, _browserProcess);\n            javascriptObjectWrapper->V8Value = V8Value.get();\n            javascriptObjectWrapper->Bind();\n\n            _javascriptObjectWrapper = javascriptObjectWrapper;\n        }\n        else\n        {\n            auto propertyAttribute = _javascriptProperty->IsReadOnly ? V8_PROPERTY_ATTRIBUTE_READONLY : V8_PROPERTY_ATTRIBUTE_NONE;\n\n            V8Value->SetValue(propertyName, V8_ACCESS_CONTROL_DEFAULT, propertyAttribute);\n        }\n    };\n}", "code_tokens": ["Ġ//", "ĠCopyright", "ĠÂ©", "Ġ2010", "-", "2014", "ĠThe", "ĠC", "ef", "Sharp", "ĠProject", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "St", "d", "af", "x", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "J", "avascript", "Property", "Wra", "pper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "J", "avascript", "Object", "Wra", "pper", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠSystem", ";", "Ċ", "Ċ", "names", "pace", "ĠC", "ef", "Sharp", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠJavascript", "Property", "Wra", "pper", "::", "Bind", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġproperty", "Name", "Ġ=", "ĠString", "Ut", "ils", "::", "To", "Native", "(_", "javascript", "Property", "->", "J", "avascript", "Name", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġcl", "r", "Property", "Name", "Ġ=", "Ġ_", "javascript", "Property", "->", "J", "avascript", "Name", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(_", "javascript", "Property", "->", "Is", "Com", "plex", "Type", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġjavascript", "Object", "Wra", "pper", "Ġ=", "Ġg", "c", "new", "ĠJavascript", "Object", "Wra", "pper", "(_", "javascript", "Property", "->", "Js", "Object", ",", "Ġ_", "browser", "Process", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġjavascript", "Object", "Wra", "pper", "->", "V", "8", "Value", "Ġ=", "ĠV", "8", "Value", ".", "get", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġjavascript", "Object", "Wra", "pper", "->", "Bind", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "javascript", "Object", "Wra", "pper", "Ġ=", "Ġjavascript", "Object", "Wra", "pper", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġproperty", "Attribute", "Ġ=", "Ġ_", "javascript", "Property", "->", "Is", "Read", "Only", "Ġ?", "ĠV", "8", "_", "PR", "OPER", "TY", "_", "AT", "TR", "IB", "UTE", "_", "READ", "ON", "LY", "Ġ:", "ĠV", "8", "_", "PR", "OPER", "TY", "_", "AT", "TR", "IB", "UTE", "_", "N", "ONE", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠV", "8", "Value", "->", "Set", "Value", "(", "property", "Name", ",", "ĠV", "8", "_", "ACC", "ESS", "_", "CON", "TR", "OL", "_", "DE", "FAULT", ",", "Ġproperty", "Attribute", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "}"], "dataflow_graph": [["javascriptObjectWrapper", 17, "comesFrom", ["javascriptObjectWrapper"], [11]], ["javascriptObjectWrapper", 21, "comesFrom", ["javascriptObjectWrapper"], [11]], ["javascriptObjectWrapper", 24, "comesFrom", ["javascriptObjectWrapper"], [11]], ["propertyName", 32, "comesFrom", ["propertyName"], [2]], ["propertyAttribute", 34, "comesFrom", ["propertyAttribute"], [25]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::153", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"base/command_line.h\"\n#include \"base/test/launcher/test_launcher.h\"\n#include \"build/build_config.h\"\n#include \"extensions/shell/test/shell_test_launcher_delegate.h\"\n#include \"testing/gtest/include/gtest/gtest.h\"\n\n#if defined(OS_WIN)\n#include \"base/win/win_util.h\"\n#endif  // defined(OS_WIN)\n\nint main(int argc, char** argv) {\n  base::CommandLine::Init(argc, argv);\n  size_t parallel_jobs = base::NumParallelJobs(/*cores_per_job=*/2);\n  if (parallel_jobs == 0U)\n    return 1;\n\n#if defined(OS_WIN)\n  // Load and pin user32.dll to avoid having to load it once tests start while\n  // on the main thread loop where blocking calls are disallowed.\n  base::win::PinUser32();\n#endif  // OS_WIN\n\n  extensions::AppShellTestLauncherDelegate launcher_delegate;\n  return content::LaunchTests(&launcher_delegate, parallel_jobs, argc, argv);\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "command", "_", "line", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "test", "/", "laun", "cher", "/", "test", "_", "laun", "cher", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "build", "/", "build", "_", "config", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ext", "ensions", "/", "shell", "/", "test", "/", "shell", "_", "test", "_", "laun", "cher", "_", "de", "legate", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "testing", "/", "g", "test", "/", "include", "/", "g", "test", "/", "g", "test", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "Ġdefined", "(", "OS", "_", "WIN", ")", "Ċ", "#", "include", "Ġ\"", "base", "/", "win", "/", "win", "_", "util", ".", "h", "\"", "Ċ", "#", "endif", "Ġ", "Ġ//", "Ġdefined", "(", "OS", "_", "WIN", ")", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġbase", "::", "Command", "Line", "::", "Init", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġparallel", "_", "jobs", "Ġ=", "Ġbase", "::", "Num", "Par", "allel", "J", "obs", "(", "/*", "c", "ores", "_", "per", "_", "job", "=", "*/", "2", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "par", "allel", "_", "jobs", "Ġ==", "Ġ0", "U", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ċ", "#", "if", "Ġdefined", "(", "OS", "_", "WIN", ")", "Ċ", "Ġ", "Ġ//", "ĠLoad", "Ġand", "Ġpin", "Ġuser", "32", ".", "dll", "Ġto", "Ġavoid", "Ġhaving", "Ġto", "Ġload", "Ġit", "Ġonce", "Ġtests", "Ġstart", "Ġwhile", "Ċ", "Ġ", "Ġ//", "Ġon", "Ġthe", "Ġmain", "Ġthread", "Ġloop", "Ġwhere", "Ġblocking", "Ġcalls", "Ġare", "Ġdis", "allowed", ".", "Ċ", "Ġ", "Ġbase", "::", "win", "::", "Pin", "User", "32", "();", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠOS", "_", "WIN", "ĊĊ", "Ġ", "Ġextensions", "::", "App", "Shell", "Test", "Laun", "cher", "De", "legate", "Ġlauncher", "_", "de", "legate", ";", "Ċ", "Ġ", "Ġreturn", "Ġcontent", "::", "Launch", "T", "ests", "(&", "laun", "cher", "_", "de", "legate", ",", "Ġparallel", "_", "jobs", ",", "Ġarg", "c", ",", "Ġarg", "v", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 5, "comesFrom", ["argc"], [2]], ["argc", 16, "comesFrom", ["argc"], [2]], ["parallel_jobs", 9, "comesFrom", ["parallel_jobs"], [7]], ["parallel_jobs", 15, "comesFrom", ["parallel_jobs"], [7]], ["launcher_delegate", 14, "comesFrom", ["launcher_delegate"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::154", "code": "#include <Arduino.h>\n#include <IRSender.h>\n\n// Send IR using the IR Blaster. The IR Blaster generates the 38 kHz carrier frequency\n\n\nIRSenderBlaster::IRSenderBlaster(uint8_t pin) : IRSender(pin)\n{\n  pinMode(_pin, OUTPUT);\n}\n\n\nvoid IRSenderBlaster::setFrequency(int frequency)\n{\n  (void)frequency;\n}\n\n\n// Send an IR 'mark' symbol, i.e. transmitter ON\nvoid IRSenderBlaster::mark(int markLength)\n{\n  digitalWrite(_pin, HIGH);\n\n  if (markLength < 16383) {\n    delayMicroseconds(markLength);\n  } else {\n    delay(markLength/1000);\n  }\n}\n\n\n// Send an IR 'space' symbol, i.e. transmitter OFF\nvoid IRSenderBlaster::space(int spaceLength)\n{\n  digitalWrite(_pin, LOW);\n\n  if (spaceLength < 16383) {\n    delayMicroseconds(spaceLength);\n  } else {\n    delay(spaceLength/1000);\n  }\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "Ar", "duino", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "IR", "S", "ender", ".", "h", ">", "Ċ", "Ċ", "//", "ĠSend", "ĠIR", "Ġusing", "Ġthe", "ĠIR", "ĠBlaster", ".", "ĠThe", "ĠIR", "ĠBlaster", "Ġgenerates", "Ġthe", "Ġ38", "ĠkHz", "Ġcarrier", "Ġfrequency", "ĊĊ", "Ċ", "IR", "S", "ender", "Bl", "aster", "::", "IR", "S", "ender", "Bl", "aster", "(", "uint", "8", "_", "t", "Ġpin", ")", "Ġ:", "ĠIRS", "ender", "(", "pin", ")", "Ċ", "{", "Ċ", "Ġ", "Ġpin", "Mode", "(_", "pin", ",", "ĠOUT", "PUT", ");", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠIRS", "ender", "Bl", "aster", "::", "set", "F", "requency", "(", "int", "Ġfrequency", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ(", "void", ")", "frequency", ";", "Ċ", "}", "ĊĊ", "Ċ", "//", "ĠSend", "Ġan", "ĠIR", "Ġ'", "mark", "'", "Ġsymbol", ",", "Ġi", ".", "e", ".", "Ġtransmitter", "ĠON", "Ċ", "void", "ĠIRS", "ender", "Bl", "aster", "::", "mark", "(", "int", "Ġmark", "Length", ")", "Ċ", "{", "Ċ", "Ġ", "Ġdigital", "Write", "(_", "pin", ",", "ĠHIGH", ");", "ĊĊ", "Ġ", "Ġif", "Ġ(", "mark", "Length", "Ġ<", "Ġ16", "383", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelay", "Micro", "seconds", "(", "mark", "Length", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelay", "(", "mark", "Length", "/", "1000", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ", "Ċ", "//", "ĠSend", "Ġan", "ĠIR", "Ġ'", "space", "'", "Ġsymbol", ",", "Ġi", ".", "e", ".", "Ġtransmitter", "ĠOFF", "Ċ", "void", "ĠIRS", "ender", "Bl", "aster", "::", "space", "(", "int", "Ġspace", "Length", ")", "Ċ", "{", "Ċ", "Ġ", "Ġdigital", "Write", "(_", "pin", ",", "ĠLOW", ");", "ĊĊ", "Ġ", "Ġif", "Ġ(", "space", "Length", "Ġ<", "Ġ16", "383", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelay", "Micro", "seconds", "(", "space", "Length", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelay", "(", "space", "Length", "/", "1000", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}"], "dataflow_graph": [["pin", 3, "comesFrom", ["pin"], [1]], ["frequency", 9, "comesFrom", ["frequency"], [8]], ["markLength", 15, "comesFrom", ["markLength"], [11]], ["markLength", 17, "comesFrom", ["markLength"], [11]], ["markLength", 19, "comesFrom", ["markLength"], [11]], ["spaceLength", 25, "comesFrom", ["spaceLength"], [21]], ["spaceLength", 27, "comesFrom", ["spaceLength"], [21]], ["spaceLength", 29, "comesFrom", ["spaceLength"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::155", "code": "// { dg-do run { target c++11 } }\n//\n// Copyright (C) 2012-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <array>\n#include <testsuite_hooks.h>\n\nstruct A\n{\n  bool valid = true;\n  ~A() { valid = false; }\n};\n\nvoid\ntest01()\n{\n  const std::array<A, 1> a;\n  const A& aa = a.at(0);\n  VERIFY(aa.valid);\n}\n\nint main()\n{\n  test01();\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "20", "21", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "array", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "struct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġvalid", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ~", "A", "()", "Ġ{", "Ġvalid", "Ġ=", "Ġfalse", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "array", "<", "A", ",", "Ġ1", ">", "Ġa", ";", "Ċ", "Ġ", "Ġconst", "ĠA", "&", "Ġa", "a", "Ġ=", "Ġa", ".", "at", "(", "0", ");", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "aa", ".", "valid", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["valid", 10, "comesFrom", ["valid"], [2]], ["a", 6, "comesFrom", ["a"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::156", "code": "#include \"dnsdist.hh\"\n#include \"lock.hh\"\n\nunsigned int Rings::numDistinctRequestors()\n{\n  std::set<ComboAddress, ComboAddress::addressOnlyLessThan> s;\n  WriteLock wl(&queryLock);\n  for(const auto& q : queryRing)\n    s.insert(q.requestor);\n  return s.size();\n}\n\nvector<pair<unsigned int,ComboAddress> > Rings::getTopBandwidth(unsigned int numentries)\n{\n  map<ComboAddress, unsigned int, ComboAddress::addressOnlyLessThan> counts;\n  {\n    WriteLock wl(&queryLock);\n    for(const auto& q : queryRing)\n      counts[q.requestor]+=q.size;\n  }\n\n  {\n    std::lock_guard<std::mutex> lock(respMutex);\n    for(const auto& r : respRing)\n      counts[r.requestor]+=r.size;\n  }\n\n  typedef vector<pair<unsigned int, ComboAddress>> ret_t;\n  ret_t ret;\n  for(const auto& p : counts)\n    ret.push_back({p.second, p.first});\n  numentries = ret.size() < numentries ? ret.size() : numentries;\n  partial_sort(ret.begin(), ret.begin()+numentries, ret.end(), [](const ret_t::value_type&a, const ret_t::value_type&b)\n\t       {\n\t\t return(b.second < a.second);\n\t       });\n  ret.resize(numentries);\n  return ret;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "d", "ns", "dist", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "lock", ".", "hh", "\"", "Ċ", "Ċ", "unsigned", "Ġint", "ĠRings", "::", "num", "Dist", "inct", "Request", "ors", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "set", "<", "Com", "bo", "Address", ",", "ĠCombo", "Address", "::", "address", "Only", "Less", "Th", "an", ">", "Ġs", ";", "Ċ", "Ġ", "ĠWrite", "Lock", "Ġw", "l", "(&", "query", "Lock", ");", "Ċ", "Ġ", "Ġfor", "(", "const", "Ġauto", "&", "Ġq", "Ġ:", "Ġquery", "Ring", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "insert", "(", "q", ".", "request", "or", ");", "Ċ", "Ġ", "Ġreturn", "Ġs", ".", "size", "();", "Ċ", "}", "Ċ", "Ċ", "vector", "<", "pair", "<", "unsigned", "Ġint", ",", "Com", "bo", "Address", ">", "Ġ>", "ĠRings", "::", "get", "Top", "Band", "width", "(", "unsigned", "Ġint", "Ġnum", "ent", "ries", ")", "Ċ", "{", "Ċ", "Ġ", "Ġmap", "<", "Com", "bo", "Address", ",", "Ġunsigned", "Ġint", ",", "ĠCombo", "Address", "::", "address", "Only", "Less", "Th", "an", ">", "Ġcounts", ";", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWrite", "Lock", "Ġw", "l", "(&", "query", "Lock", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "const", "Ġauto", "&", "Ġq", "Ġ:", "Ġquery", "Ring", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcounts", "[", "q", ".", "request", "or", "]", "+=", "q", ".", "size", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "lock", "_", "guard", "<", "std", "::", "mut", "ex", ">", "Ġlock", "(", "resp", "Mut", "ex", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "const", "Ġauto", "&", "Ġr", "Ġ:", "Ġresp", "Ring", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcounts", "[", "r", ".", "request", "or", "]", "+=", "r", ".", "size", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġtyped", "ef", "Ġvector", "<", "pair", "<", "unsigned", "Ġint", ",", "ĠCombo", "Address", ">>", "Ġret", "_", "t", ";", "Ċ", "Ġ", "Ġret", "_", "t", "Ġret", ";", "Ċ", "Ġ", "Ġfor", "(", "const", "Ġauto", "&", "Ġp", "Ġ:", "Ġcounts", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġret", ".", "push", "_", "back", "({", "p", ".", "second", ",", "Ġp", ".", "first", "});", "Ċ", "Ġ", "Ġnum", "ent", "ries", "Ġ=", "Ġret", ".", "size", "()", "Ġ<", "Ġnum", "ent", "ries", "Ġ?", "Ġret", ".", "size", "()", "Ġ:", "Ġnum", "ent", "ries", ";", "Ċ", "Ġ", "Ġpartial", "_", "sort", "(", "ret", ".", "begin", "(),", "Ġret", ".", "begin", "()", "+", "n", "ument", "ries", ",", "Ġret", ".", "end", "(),", "Ġ[", "](", "const", "Ġret", "_", "t", "::", "value", "_", "type", "&", "a", ",", "Ġconst", "Ġret", "_", "t", "::", "value", "_", "type", "&", "b", ")", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "ĉ", "ĉ", "Ġreturn", "(", "b", ".", "second", "Ġ<", "Ġa", ".", "second", ");", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ});", "Ċ", "Ġ", "Ġret", ".", "res", "ize", "(", "n", "ument", "ries", ");", "Ċ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["s", 6, "comesFrom", ["s"], [1]], ["s", 10, "comesFrom", ["s"], [1]], ["counts", 19, "comesFrom", ["counts"], [14]], ["counts", 27, "comesFrom", ["counts"], [14]], ["counts", 34, "comesFrom", ["counts"], [14]], ["ret", 35, "comesFrom", ["ret"], [32]], ["ret", 42, "comesFrom", ["ret"], [32]], ["ret", 45, "comesFrom", ["ret"], [32]], ["ret", 49, "comesFrom", ["ret"], [32]], ["ret", 51, "comesFrom", ["ret"], [32]], ["ret", 54, "comesFrom", ["ret"], [32]], ["ret", 62, "comesFrom", ["ret"], [32]], ["ret", 65, "comesFrom", ["ret"], [32]], ["numentries", 44, "comesFrom", ["numentries"], [41]], ["numentries", 47, "comesFrom", ["numentries"], [41]], ["numentries", 53, "comesFrom", ["numentries"], [41]], ["numentries", 64, "comesFrom", ["numentries"], [41]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::157", "code": "// Copyright Louis Dionne 2013-2017\n// Distributed under the Boost Software License, Version 1.0.\n// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#include <boost/hana/basic_tuple.hpp>\nnamespace hana = boost::hana;\n\n\ntemplate <int i>\nstruct x { };\n\n\nint main() {\n    constexpr hana::basic_tuple<> empty{}; (void)empty;\n\n    constexpr hana::basic_tuple<int, float> xs{1, 2.3f};\n    constexpr auto ys = hana::basic_tuple<int, float>{1, 2.3f};\n    constexpr auto copy = ys; (void)copy;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "ĠLouis", "ĠDion", "ne", "Ġ2013", "-", "2017", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "Ġ(", "See", "Ġaccompanying", "Ġfile", "ĠLIC", "ENSE", ".", "md", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "h", "ana", "/", "basic", "_", "t", "uple", ".", "h", "pp", ">", "Ċ", "names", "pace", "Ġh", "ana", "Ġ=", "Ġboost", "::", "h", "ana", ";", "ĊĊ", "Ċ", "template", "Ġ<", "int", "Ġi", ">", "Ċ", "struct", "Ġx", "Ġ{", "Ġ};", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "expr", "Ġh", "ana", "::", "basic", "_", "t", "uple", "<", ">", "Ġempty", "{", "};", "Ġ(", "void", ")", "empty", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġconst", "expr", "Ġh", "ana", "::", "basic", "_", "t", "uple", "<", "int", ",", "Ġfloat", ">", "Ġx", "s", "{", "1", ",", "Ġ2", ".", "3", "f", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "expr", "Ġauto", "Ġy", "s", "Ġ=", "Ġh", "ana", "::", "basic", "_", "t", "uple", "<", "int", ",", "Ġfloat", ">", "{", "1", ",", "Ġ2", ".", "3", "f", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "expr", "Ġauto", "Ġcopy", "Ġ=", "Ġy", "s", ";", "Ġ(", "void", ")", "copy", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["empty", 3, "comesFrom", ["empty"], [2]], ["copy", 8, "comesFrom", ["copy"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::158", "code": "/*===================================================================\n\nThe Medical Imaging Interaction Toolkit (MITK)\n\nCopyright (c) German Cancer Research Center,\nDivision of Medical and Biological Informatics.\nAll rights reserved.\n\nThis software is distributed WITHOUT ANY WARRANTY; without\neven the implied warranty of MERCHANTABILITY or FITNESS FOR\nA PARTICULAR PURPOSE.\n\nSee LICENSE.txt or http://www.mitk.org for details.\n\n===================================================================*/\n\n#include \"mitkNavigationDataPassThroughFilter.h\"\n\nmitk::NavigationDataPassThroughFilter::NavigationDataPassThroughFilter()\n{\n}\n\nmitk::NavigationDataPassThroughFilter::~NavigationDataPassThroughFilter()\n{\n}\n\nvoid mitk::NavigationDataPassThroughFilter::GenerateData()\n{\n  // get each input and transfer the data\n  DataObjectPointerArray inputs = this->GetInputs(); //get all inputs\n  for ( unsigned int index = 0; index < inputs.size(); ++index )\n  {\n    // get the needed variables (input and output)\n    const mitk::NavigationData* nd = this->GetInput(index);\n    mitk::NavigationData* output = this->GetOutput(index);\n\n    if ( ! nd || ! output )\n    {\n      MITK_ERROR(\"NavigationDataToNavigationDataFilter\")(\"NavigationDataPassThroughFilter\")\n          << \"Input and output must not be null.\";\n      mitkThrow() << \"Input and output must not be null.\";\n    }\n\n    output->Graft(nd); // copy all information from input to output\n    output->SetDataValid(nd->IsDataValid());\n  }\n}\n", "code_tokens": ["Ġ/*", "================================================================", "===", "Ċ", "Ċ", "The", "ĠMedical", "ĠImaging", "ĠInter", "action", "ĠTool", "kit", "Ġ(", "MIT", "K", ")", "Ċ", "Ċ", "Copyright", "Ġ(", "c", ")", "ĠGerman", "ĠCancer", "ĠResearch", "ĠCenter", ",", "Ċ", "Div", "ision", "Ġof", "ĠMedical", "Ġand", "ĠBiological", "ĠIn", "format", "ics", ".", "Ċ", "All", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "This", "Ġsoftware", "Ġis", "Ġdistributed", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ċ", "even", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "Ċ", "A", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ċ", "Ċ", "See", "ĠLIC", "ENSE", ".", "txt", "Ġor", "Ġhttp", "://", "www", ".", "mit", "k", ".", "org", "Ġfor", "Ġdetails", ".", "Ċ", "Ċ", "================================================================", "===", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "mit", "k", "Nav", "igation", "Data", "Pass", "Through", "Filter", ".", "h", "\"", "Ċ", "Ċ", "mit", "k", "::", "Nav", "igation", "Data", "Pass", "Through", "Filter", "::", "Nav", "igation", "Data", "Pass", "Through", "Filter", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "mit", "k", "::", "Nav", "igation", "Data", "Pass", "Through", "Filter", "::", "~", "Nav", "igation", "Data", "Pass", "Through", "Filter", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "Ġmit", "k", "::", "Nav", "igation", "Data", "Pass", "Through", "Filter", "::", "Gener", "ate", "Data", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "Ġget", "Ġeach", "Ġinput", "Ġand", "Ġtransfer", "Ġthe", "Ġdata", "Ċ", "Ġ", "ĠData", "Object", "Po", "inter", "Array", "Ġinputs", "Ġ=", "Ġthis", "->", "Get", "Input", "s", "();", "Ġ//", "get", "Ġall", "Ġinputs", "Ċ", "Ġ", "Ġfor", "Ġ(", "Ġunsigned", "Ġint", "Ġindex", "Ġ=", "Ġ0", ";", "Ġindex", "Ġ<", "Ġinputs", ".", "size", "();", "Ġ++", "index", "Ġ)", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġget", "Ġthe", "Ġneeded", "Ġvariables", "Ġ(", "input", "Ġand", "Ġoutput", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġmit", "k", "::", "Nav", "igation", "Data", "*", "Ġn", "d", "Ġ=", "Ġthis", "->", "Get", "Input", "(", "index", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmit", "k", "::", "Nav", "igation", "Data", "*", "Ġoutput", "Ġ=", "Ġthis", "->", "Get", "Output", "(", "index", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "Ġ!", "Ġn", "d", "Ġ||", "Ġ!", "Ġoutput", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠMIT", "K", "_", "ERROR", "(\"", "Nav", "igation", "Data", "To", "Nav", "igation", "Data", "Filter", "\")", "(\"", "Nav", "igation", "Data", "Pass", "Through", "Filter", "\")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\"", "Input", "Ġand", "Ġoutput", "Ġmust", "Ġnot", "Ġbe", "Ġnull", ".\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmit", "k", "Throw", "()", "Ġ<<", "Ġ\"", "Input", "Ġand", "Ġoutput", "Ġmust", "Ġnot", "Ġbe", "Ġnull", ".\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġoutput", "->", "G", "raft", "(", "nd", ");", "Ġ//", "Ġcopy", "Ġall", "Ġinformation", "Ġfrom", "Ġinput", "Ġto", "Ġoutput", "Ċ", "Ġ", "Ġ", "Ġ", "Ġoutput", "->", "Set", "Data", "Valid", "(", "nd", "->", "Is", "Data", "Valid", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["index", 6, "comesFrom", ["index"], [5]], ["index", 9, "comesFrom", ["index"], [5]], ["index", 12, "comesFrom", ["index"], [5]], ["index", 15, "comesFrom", ["index"], [5]], ["inputs", 7, "comesFrom", ["inputs"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::159", "code": "#ifndef STD_HASH_HPP\n#define STD_HASH_HPP\n\n#include <functional>\n\n// this is largely inspired by boost's hash combine as can be found in\n// \"The C++ Standard Library\" 2nd Edition. Nicolai M. Josuttis. 2012.\n\ntemplate <typename T> void hash_combine(std::size_t &seed, const T &val)\n{\n    seed ^= std::hash<T>()(val) + 0x9e3779b9 + (seed << 6) + (seed >> 2);\n}\n\ntemplate <typename T> void hash_val(std::size_t &seed, const T &val) { hash_combine(seed, val); }\n\ntemplate <typename T, typename... Types>\nvoid hash_val(std::size_t &seed, const T &val, const Types &... args)\n{\n    hash_combine(seed, val);\n    hash_val(seed, args...);\n}\n\ntemplate <typename... Types> std::size_t hash_val(const Types &... args)\n{\n    std::size_t seed = 0;\n    hash_val(seed, args...);\n    return seed;\n}\n\nnamespace std\n{\ntemplate <typename T1, typename T2> struct hash<std::pair<T1, T2>>\n{\n    size_t operator()(const std::pair<T1, T2> &pair) const\n    {\n        return hash_val(pair.first, pair.second);\n    }\n};\n}\n\n#endif // STD_HASH_HPP\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠSTD", "_", "H", "ASH", "_", "H", "PP", "Ċ", "#", "define", "ĠSTD", "_", "H", "ASH", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "Ċ", "//", "Ġthis", "Ġis", "Ġlargely", "Ġinspired", "Ġby", "Ġboost", "'s", "Ġhash", "Ġcombine", "Ġas", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ċ", "//", "Ġ\"", "The", "ĠC", "++", "ĠStandard", "ĠLibrary", "\"", "Ġ2", "nd", "ĠEdition", ".", "ĠNicol", "ai", "ĠM", ".", "ĠJos", "utt", "is", ".", "Ġ2012", ".", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ġvoid", "Ġhash", "_", "comb", "ine", "(", "std", "::", "size", "_", "t", "Ġ&", "seed", ",", "Ġconst", "ĠT", "Ġ&", "val", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġseed", "Ġ^", "=", "Ġstd", "::", "hash", "<", "T", ">", "()", "(", "val", ")", "Ġ+", "Ġ0", "x", "9", "e", "37", "79", "b", "9", "Ġ+", "Ġ(", "seed", "Ġ<<", "Ġ6", ")", "Ġ+", "Ġ(", "seed", "Ġ>>", "Ġ2", ");", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ġvoid", "Ġhash", "_", "val", "(", "std", "::", "size", "_", "t", "Ġ&", "seed", ",", "Ġconst", "ĠT", "Ġ&", "val", ")", "Ġ{", "Ġhash", "_", "comb", "ine", "(", "seed", ",", "Ġval", ");", "Ġ}", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ",", "Ġtyp", "ename", "...", "ĠTypes", ">", "Ċ", "void", "Ġhash", "_", "val", "(", "std", "::", "size", "_", "t", "Ġ&", "seed", ",", "Ġconst", "ĠT", "Ġ&", "val", ",", "Ġconst", "ĠTypes", "Ġ&", "...", "Ġargs", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġhash", "_", "comb", "ine", "(", "seed", ",", "Ġval", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġhash", "_", "val", "(", "seed", ",", "Ġargs", "...", ");", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "...", "ĠTypes", ">", "Ġstd", "::", "size", "_", "t", "Ġhash", "_", "val", "(", "const", "ĠTypes", "Ġ&", "...", "Ġargs", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "size", "_", "t", "Ġseed", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġhash", "_", "val", "(", "seed", ",", "Ġargs", "...", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġseed", ";", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "Ġstd", "Ċ", "{", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", "1", ",", "Ġtyp", "ename", "ĠT", "2", ">", "Ġstruct", "Ġhash", "<", "std", "::", "pair", "<", "T", "1", ",", "ĠT", "2", ">>", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsize", "_", "t", "Ġoperator", "()", "(", "const", "Ġstd", "::", "pair", "<", "T", "1", ",", "ĠT", "2", ">", "Ġ&", "pair", ")", "Ġconst", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġhash", "_", "val", "(", "pair", ".", "first", ",", "Ġpair", ".", "second", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠSTD", "_", "H", "ASH", "_", "H", "PP", "Ċ"], "dataflow_graph": [["seed", 8, "comesFrom", ["seed"], [5]], ["seed", 9, "comesFrom", ["seed"], [5]], ["seed", 11, "comesFrom", ["seed"], [5]], ["seed", 14, "comesFrom", ["seed"], [5]], ["seed", 17, "comesFrom", ["seed"], [5]], ["seed", 21, "comesFrom", ["seed"], [5]], ["seed", 24, "comesFrom", ["seed"], [5]], ["seed", 30, "comesFrom", ["seed"], [28]], ["seed", 32, "comesFrom", ["seed"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::160", "code": "//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n\n// <mutex>\n\n// template <class Mutex> class unique_lock;\n\n// explicit unique_lock(mutex_type& m);\n\n#include <mutex>\n#include <thread>\n#include <cstdlib>\n#include <cassert>\n\nstd::mutex m;\n\ntypedef std::chrono::system_clock Clock;\ntypedef Clock::time_point time_point;\ntypedef Clock::duration duration;\ntypedef std::chrono::milliseconds ms;\ntypedef std::chrono::nanoseconds ns;\n\nvoid f()\n{\n    time_point t0 = Clock::now();\n    time_point t1;\n    {\n    std::unique_lock<std::mutex> ul(m);\n    t1 = Clock::now();\n    }\n    ns d = t1 - t0 - ms(250);\n    assert(d < ms(50));  // within 50ms\n}\n\nint main()\n{\n    m.lock();\n    std::thread t(f);\n    std::this_thread::sleep_for(ms(250));\n    m.unlock();\n    t.join();\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠThe", "ĠLL", "VM", "ĠComp", "iler", "ĠInfrastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUniversity", "Ġof", "ĠIllinois", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLIC", "ENSE", ".", "T", "XT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "Ċ", "//", "Ġ<", "mut", "ex", ">", "Ċ", "Ċ", "//", "Ġtemplate", "Ġ<", "class", "ĠMut", "ex", ">", "Ġclass", "Ġunique", "_", "lock", ";", "Ċ", "Ċ", "//", "Ġexplicit", "Ġunique", "_", "lock", "(", "mut", "ex", "_", "type", "&", "Ġm", ");", "Ċ", "Ċ", "#", "include", "Ġ<", "mut", "ex", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "std", "::", "mut", "ex", "Ġm", ";", "Ċ", "Ċ", "ty", "ped", "ef", "Ġstd", "::", "chron", "o", "::", "system", "_", "clock", "ĠClock", ";", "Ċ", "ty", "ped", "ef", "ĠClock", "::", "time", "_", "point", "Ġtime", "_", "point", ";", "Ċ", "ty", "ped", "ef", "ĠClock", "::", "duration", "Ġduration", ";", "Ċ", "ty", "ped", "ef", "Ġstd", "::", "chron", "o", "::", "mill", "isec", "onds", "Ġms", ";", "Ċ", "ty", "ped", "ef", "Ġstd", "::", "chron", "o", "::", "nan", "ose", "cond", "s", "Ġns", ";", "Ċ", "Ċ", "void", "Ġf", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtime", "_", "point", "Ġt", "0", "Ġ=", "ĠClock", "::", "now", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtime", "_", "point", "Ġt", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mut", "ex", ">", "Ġul", "(", "m", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", "1", "Ġ=", "ĠClock", "::", "now", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġns", "Ġd", "Ġ=", "Ġt", "1", "Ġ-", "Ġt", "0", "Ġ-", "Ġms", "(", "250", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "d", "Ġ<", "Ġms", "(", "50", "));", "Ġ", "Ġ//", "Ġwithin", "Ġ50", "ms", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", ".", "lock", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "thread", "Ġt", "(", "f", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "this", "_", "thread", "::", "sleep", "_", "for", "(", "ms", "(", "250", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", ".", "un", "lock", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", ".", "join", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["t1", 9, "comesFrom", ["t1"], [6]], ["t0", 10, "comesFrom", ["t0"], [2]], ["d", 13, "comesFrom", ["d"], [8]], ["m", 16, "comesFrom", ["m"], [0]], ["m", 21, "comesFrom", ["m"], [0]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::161", "code": "// PR c++/35315\n\ntypedef union { int i; } U __attribute__((transparent_union));\n\nstatic void foo(U) {}\nstatic void foo(int) {}\n\nvoid bar()\n{\n  foo(0);\n}\n\ntypedef union U1 { int i; } U2 __attribute__((transparent_union)); // { dg-warning \"ignored\" }\n\nstatic void foo2(U1) {}\t\t// { dg-error \"previously defined\" }\nstatic void foo2(U2) {}\t\t// { dg-error \"redefinition\" }\n\nvoid bar2(U1 u1, U2 u2)\n{\n  foo2(u1);\n  foo2(u2);\n}\n\n// PR c++/36410\nstruct A\n{\n  typedef union\n  {\n    int i;\n  } B __attribute__((transparent_union));\n};\n\nvoid foo(A::B b)\n{\n  b.i;\n}\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "35", "315", "Ċ", "Ċ", "ty", "ped", "ef", "Ġunion", "Ġ{", "Ġint", "Ġi", ";", "Ġ}", "ĠU", "Ġ__", "attribute", "__", "((", "trans", "parent", "_", "union", "));", "Ċ", "Ċ", "static", "Ġvoid", "Ġfoo", "(", "U", ")", "Ġ{}", "Ċ", "static", "Ġvoid", "Ġfoo", "(", "int", ")", "Ġ{}", "Ċ", "Ċ", "void", "Ġbar", "()", "Ċ", "{", "Ċ", "Ġ", "Ġfoo", "(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "ty", "ped", "ef", "Ġunion", "ĠU", "1", "Ġ{", "Ġint", "Ġi", ";", "Ġ}", "ĠU", "2", "Ġ__", "attribute", "__", "((", "trans", "parent", "_", "union", "));", "Ġ//", "Ġ{", "Ġd", "g", "-", "warning", "Ġ\"", "ign", "ored", "\"", "Ġ}", "Ċ", "Ċ", "static", "Ġvoid", "Ġfoo", "2", "(", "U", "1", ")", "Ġ{}", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "pre", "viously", "Ġdefined", "\"", "Ġ}", "Ċ", "static", "Ġvoid", "Ġfoo", "2", "(", "U", "2", ")", "Ġ{}", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "red", "ef", "inition", "\"", "Ġ}", "Ċ", "Ċ", "void", "Ġbar", "2", "(", "U", "1", "Ġu", "1", ",", "ĠU", "2", "Ġu", "2", ")", "Ċ", "{", "Ċ", "Ġ", "Ġfoo", "2", "(", "u", "1", ");", "Ċ", "Ġ", "Ġfoo", "2", "(", "u", "2", ");", "Ċ", "}", "Ċ", "Ċ", "//", "ĠPR", "Ġc", "++", "/", "364", "10", "Ċ", "struct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "Ġtyped", "ef", "Ġunion", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġ}", "ĠB", "Ġ__", "attribute", "__", "((", "trans", "parent", "_", "union", "));", "Ċ", "};", "Ċ", "Ċ", "void", "Ġfoo", "(", "A", "::", "B", "Ġb", ")", "Ċ", "{", "Ċ", "Ġ", "Ġb", ".", "i", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["u1", 14, "comesFrom", ["u1"], [11]], ["u2", 16, "comesFrom", ["u2"], [12]], ["b", 21, "comesFrom", ["b"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::162", "code": "// Copyright (C) 2014-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n//\n// { dg-options \"-std=gnu++11\" }\n// { dg-do run { xfail *-*-* } }\n\n#include <debug/forward_list>\n\n#include <testsuite_allocator.h>\n\nvoid test01()\n{\n  bool test __attribute__((unused)) = true;\n\n  typedef __gnu_test::uneq_allocator<int> alloc_type;\n  typedef __gnu_debug::forward_list<int, alloc_type> test_type;\n  test_type v1(alloc_type(1));\n  v1.push_front(0);\n  auto it = v1.begin();\n\n  test_type v2(std::move(v1), alloc_type(2));\n\n  VERIFY( it == v2.begin() ); // Error, it is singular\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "//", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ{", "Ġx", "fail", "Ġ*", "-", "*", "-", "*", "Ġ}", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "debug", "/", "forward", "_", "list", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "alloc", "ator", ".", "h", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġtyped", "ef", "Ġ__", "gnu", "_", "test", "::", "une", "q", "_", "alloc", "ator", "<", "int", ">", "Ġalloc", "_", "type", ";", "Ċ", "Ġ", "Ġtyped", "ef", "Ġ__", "gnu", "_", "debug", "::", "forward", "_", "list", "<", "int", ",", "Ġalloc", "_", "type", ">", "Ġtest", "_", "type", ";", "Ċ", "Ġ", "Ġtest", "_", "type", "Ġv", "1", "(", "alloc", "_", "type", "(", "1", "));", "Ċ", "Ġ", "Ġv", "1", ".", "push", "_", "front", "(", "0", ");", "Ċ", "Ġ", "Ġauto", "Ġit", "Ġ=", "Ġv", "1", ".", "begin", "();", "ĊĊ", "Ġ", "Ġtest", "_", "type", "Ġv", "2", "(", "std", "::", "move", "(", "v", "1", "),", "Ġalloc", "_", "type", "(", "2", "));", "ĊĊ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġit", "Ġ==", "Ġv", "2", ".", "begin", "()", "Ġ);", "Ġ//", "ĠError", ",", "Ġit", "Ġis", "Ġsingular", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["v1", 5, "comesFrom", ["v1"], [3]], ["v1", 8, "comesFrom", ["v1"], [3]], ["v1", 12, "comesFrom", ["v1"], [3]], ["it", 15, "comesFrom", ["it"], [7]], ["v2", 16, "comesFrom", ["v2"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::163", "code": "// { dg-options \"-std=gnu++11\" }\n// { dg-require-cstdint \"\" }\n//\n// 2012-01-28  Edward M. Smith-Rowland  <3dw4rd@verizon.net>\n//\n// Copyright (C) 2012-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// Class template rice_distribution\n// 26.5.1.6 Random number distribution requirements [rand.req.dist]\n\n#include <ext/random>\n#include <sstream>\n#include <testsuite_hooks.h>\n\nvoid\ntest01()\n{\n  bool test __attribute__((unused)) = true;\n\n  std::stringstream str;\n  __gnu_cxx::rice_distribution<double> u(1.5, 3.0), v;\n  std::minstd_rand0 rng;\n\n  u(rng); // advance\n  str << u;\n\n  str >> v;\n  VERIFY( u == v );\n}\n\nint\nmain()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "c", "std", "int", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ċ", "//", "Ġ2012", "-", "01", "-", "28", "Ġ", "ĠEdward", "ĠM", ".", "ĠSmith", "-", "Row", "land", "Ġ", "Ġ<", "3", "d", "w", "4", "rd", "@", "ver", "izon", ".", "net", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "ĠClass", "Ġtemplate", "Ġrice", "_", "dist", "ribution", "Ċ", "//", "Ġ26", ".", "5", ".", "1", ".", "6", "ĠRandom", "Ġnumber", "Ġdistribution", "Ġrequirements", "Ġ[", "rand", ".", "req", ".", "dist", "]", "Ċ", "Ċ", "#", "include", "Ġ<", "ext", "/", "random", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġstd", "::", "string", "stream", "Ġstr", ";", "Ċ", "Ġ", "Ġ__", "gnu", "_", "c", "xx", "::", "rice", "_", "dist", "ribution", "<", "double", ">", "Ġu", "(", "1", ".", "5", ",", "Ġ3", ".", "0", "),", "Ġv", ";", "Ċ", "Ġ", "Ġstd", "::", "min", "std", "_", "rand", "0", "Ġr", "ng", ";", "ĊĊ", "Ġ", "Ġu", "(", "r", "ng", ");", "Ġ//", "Ġadvance", "Ċ", "Ġ", "Ġstr", "Ġ<<", "Ġu", ";", "ĊĊ", "Ġ", "Ġstr", "Ġ>>", "Ġv", ";", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġu", "Ġ==", "Ġv", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["u", 7, "comesFrom", ["u"], [4]], ["u", 10, "comesFrom", ["u"], [4]], ["u", 14, "comesFrom", ["u"], [4]], ["rng", 8, "comesFrom", ["rng"], [6]], ["str", 9, "comesFrom", ["str"], [3]], ["str", 11, "comesFrom", ["str"], [3]], ["v", 12, "comesFrom", ["v"], [5]], ["v", 15, "comesFrom", ["v"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::164", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"mojo/public/cpp/environment/async_waiter.h\"\n\nnamespace mojo {\n\nAsyncWaiter::AsyncWaiter(Handle handle,\n                         MojoHandleSignals signals,\n                         const Callback& callback)\n    : waiter_(Environment::GetDefaultAsyncWaiter()),\n      id_(0),\n      callback_(callback) {\n  id_ = waiter_->AsyncWait(handle.value(), signals, MOJO_DEADLINE_INDEFINITE,\n                           &AsyncWaiter::WaitComplete, this);\n}\n\nAsyncWaiter::~AsyncWaiter() {\n  if (id_)\n    waiter_->CancelWait(id_);\n}\n\n// static\nvoid AsyncWaiter::WaitComplete(void* waiter, MojoResult result) {\n  static_cast<AsyncWaiter*>(waiter)->WaitCompleteInternal(result);\n}\n\nvoid AsyncWaiter::WaitCompleteInternal(MojoResult result) {\n  id_ = 0;\n  callback_.Run(result);\n}\n\n}  // namespace mojo\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "mo", "jo", "/", "public", "/", "cpp", "/", "environment", "/", "as", "ync", "_", "wa", "iter", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġmo", "jo", "Ġ{", "Ċ", "Ċ", "Async", "Wa", "iter", "::", "Async", "Wa", "iter", "(", "Handle", "Ġhandle", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠMo", "jo", "Handle", "Sign", "als", "Ġsignals", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠCall", "back", "&", "Ġcallback", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġwaiter", "_(", "Environment", "::", "Get", "Default", "Async", "Wa", "iter", "()", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġid", "_(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcallback", "_(", "callback", ")", "Ġ{", "Ċ", "Ġ", "Ġid", "_", "Ġ=", "Ġwaiter", "_", "->", "Async", "Wait", "(", "handle", ".", "value", "(),", "Ġsignals", ",", "ĠMO", "JO", "_", "DE", "AD", "LINE", "_", "IN", "DE", "FIN", "ITE", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ&", "Async", "Wa", "iter", "::", "Wait", "Complete", ",", "Ġthis", ");", "Ċ", "}", "Ċ", "Ċ", "Async", "Wa", "iter", "::", "~", "Async", "Wa", "iter", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "id", "_", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwaiter", "_", "->", "C", "ancel", "Wait", "(", "id", "_", ");", "Ċ", "}", "Ċ", "Ċ", "//", "Ġstatic", "Ċ", "void", "ĠAs", "ync", "Wa", "iter", "::", "Wait", "Complete", "(", "void", "*", "Ġwaiter", ",", "ĠMo", "jo", "Result", "Ġresult", ")", "Ġ{", "Ċ", "Ġ", "Ġstatic", "_", "cast", "<", "Async", "Wa", "iter", "*", ">(", "wa", "iter", ")", "->", "Wait", "Complete", "Internal", "(", "result", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAs", "ync", "Wa", "iter", "::", "Wait", "Complete", "Internal", "(", "Mo", "jo", "Result", "Ġresult", ")", "Ġ{", "Ċ", "Ġ", "Ġid", "_", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġcallback", "_.", "Run", "(", "result", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġmo", "jo", "Ċ"], "dataflow_graph": [["id_", 18, "comesFrom", ["id_"], [9]], ["id_", 21, "comesFrom", ["id_"], [9]], ["handle", 12, "comesFrom", ["handle"], [1]], ["signals", 14, "comesFrom", ["signals"], [2]], ["result", 28, "comesFrom", ["result"], [24]], ["result", 34, "comesFrom", ["result"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::165", "code": "// PR middle-end/42760\n// { dg-do compile }\n\ntemplate <typename T>\nstruct A\n{\n  static T b (T it) { return it; }\n};\n\ntemplate <typename T, typename U>\nstatic U\nbaz (T x, T y, U z)\n{\n  for (long n = y - x; n > 0; --n)\n    {\n      *z = *x;\n      ++z;\n    }\n};\n\ntemplate <typename T, typename U>\nU\nbar (T x, T y, U z)\n{\n  baz (A <T>::b (x), A <T>::b (y), A <U>::b (z));\n}\n\nstruct C\n{\n  __complex__ float v;\n};\n\ntemplate <class T>\nstruct B\n{\n  B (T y[]) { bar (y, y + 1, x); }\n  operator T *() { return x; }\n  T x[1];\n};\n\nB <C>\nfoo ()\n{\n  C y[1];\n  return B <C> (y);\n};\n", "code_tokens": ["Ġ//", "ĠPR", "Ġmiddle", "-", "end", "/", "427", "60", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "struct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "Ġstatic", "ĠT", "Ġb", "Ġ(", "T", "Ġit", ")", "Ġ{", "Ġreturn", "Ġit", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ",", "Ġtyp", "ename", "ĠU", ">", "Ċ", "static", "ĠU", "Ċ", "b", "az", "Ġ(", "T", "Ġx", ",", "ĠT", "Ġy", ",", "ĠU", "Ġz", ")", "Ċ", "{", "Ċ", "Ġ", "Ġfor", "Ġ(", "long", "Ġn", "Ġ=", "Ġy", "Ġ-", "Ġx", ";", "Ġn", "Ġ>", "Ġ0", ";", "Ġ--", "n", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "z", "Ġ=", "Ġ*", "x", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "z", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ",", "Ġtyp", "ename", "ĠU", ">", "Ċ", "U", "Ċ", "bar", "Ġ(", "T", "Ġx", ",", "ĠT", "Ġy", ",", "ĠU", "Ġz", ")", "Ċ", "{", "Ċ", "Ġ", "Ġb", "az", "Ġ(", "A", "Ġ<", "T", ">", "::", "b", "Ġ(", "x", "),", "ĠA", "Ġ<", "T", ">", "::", "b", "Ġ(", "y", "),", "ĠA", "Ġ<", "U", ">", "::", "b", "Ġ(", "z", "));", "Ċ", "}", "Ċ", "Ċ", "struct", "ĠC", "Ċ", "{", "Ċ", "Ġ", "Ġ__", "complex", "__", "Ġfloat", "Ġv", ";", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "struct", "ĠB", "Ċ", "{", "Ċ", "Ġ", "ĠB", "Ġ(", "T", "Ġy", "[", "])", "Ġ{", "Ġbar", "Ġ(", "y", ",", "Ġy", "Ġ+", "Ġ1", ",", "Ġx", ");", "Ġ}", "Ċ", "Ġ", "Ġoperator", "ĠT", "Ġ*", "()", "Ġ{", "Ġreturn", "Ġx", ";", "Ġ}", "Ċ", "Ġ", "ĠT", "Ġx", "[", "1", "];", "Ċ", "};", "Ċ", "Ċ", "B", "Ġ<", "C", ">", "Ċ", "foo", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "ĠC", "Ġy", "[", "1", "];", "Ċ", "Ġ", "Ġreturn", "ĠB", "Ġ<", "C", ">", "Ġ(", "y", ");", "Ċ", "};", "Ċ"], "dataflow_graph": [["it", 2, "comesFrom", ["it"], [1]], ["y", 8, "comesFrom", ["y"], [5]], ["y", 23, "comesFrom", ["y"], [17]], ["y", 29, "comesFrom", ["y"], [17]], ["y", 31, "comesFrom", ["y"], [17]], ["y", 32, "comesFrom", ["y"], [17]], ["y", 37, "comesFrom", ["y"], [17]], ["y", 39, "comesFrom", ["y"], [17]], ["x", 9, "comesFrom", ["x"], [4]], ["x", 13, "comesFrom", ["x"], [4]], ["x", 21, "comesFrom", ["x"], [16]], ["x", 33, "comesFrom", ["x"], [16]], ["x", 34, "comesFrom", ["x"], [16]], ["x", 35, "comesFrom", ["x"], [16]], ["n", 10, "comesFrom", ["n"], [7]], ["n", 11, "comesFrom", ["n"], [7]], ["z", 12, "comesFrom", ["z"], [6]], ["z", 14, "comesFrom", ["z"], [6]], ["z", 25, "comesFrom", ["z"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::166", "code": "// { dg-do run  }\n// GROUPS passed miscellaneous\nextern \"C\" int printf (const char *, ...);\n\nint main()\n{\n  int i = 0;\n  // Make sure build_unary_op correctly computes this.\n  int *pi = &(++i);\n  *pi = 4;\n\n  if (i != 4)\n    { printf (\"FAIL\\n\"); return 1; }\n  else\n    printf (\"PASS\\n\");\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ", "Ġ}", "Ċ", "//", "ĠGR", "OU", "PS", "Ġpassed", "Ġmis", "cellaneous", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġint", "Ġprintf", "Ġ(", "const", "Ġchar", "Ġ*", ",", "Ġ...", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ//", "ĠMake", "Ġsure", "Ġbuild", "_", "un", "ary", "_", "op", "Ġcorrectly", "Ġcomp", "utes", "Ġthis", ".", "Ċ", "Ġ", "Ġint", "Ġ*", "pi", "Ġ=", "Ġ&", "(", "++", "i", ");", "Ċ", "Ġ", "Ġ*", "pi", "Ġ=", "Ġ4", ";", "ĊĊ", "Ġ", "Ġif", "Ġ(", "i", "Ġ!=", "Ġ4", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġprintf", "Ġ(\"", "FA", "IL", "\\", "n", "\");", "Ġreturn", "Ġ1", ";", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "Ġ(\"", "PASS", "\\", "n", "\");", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [2]], ["i", 6, "comesFrom", ["i"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::167", "code": "// { dg-do assemble  }\n\ntemplate <class A> class B { public: A a; };\nstatic B<int> b_int;\nstatic B<char> b_char;\nstatic B<unsigned char> b_uchar;\n\nint foo () { return b_int.a + b_char.a + b_uchar.a; }\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġassemble", "Ġ", "Ġ}", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠA", ">", "Ġclass", "ĠB", "Ġ{", "Ġpublic", ":", "ĠA", "Ġa", ";", "Ġ};", "Ċ", "static", "ĠB", "<", "int", ">", "Ġb", "_", "int", ";", "Ċ", "static", "ĠB", "<", "char", ">", "Ġb", "_", "char", ";", "Ċ", "static", "ĠB", "<", "unsigned", "Ġchar", ">", "Ġb", "_", "uch", "ar", ";", "Ċ", "Ċ", "int", "Ġfoo", "Ġ()", "Ġ{", "Ġreturn", "Ġb", "_", "int", ".", "a", "Ġ+", "Ġb", "_", "char", ".", "a", "Ġ+", "Ġb", "_", "uch", "ar", ".", "a", ";", "Ġ}", "Ċ"], "dataflow_graph": [["b_int", 5, "comesFrom", ["b_int"], [1]], ["b_char", 7, "comesFrom", ["b_char"], [2]], ["b_uchar", 9, "comesFrom", ["b_uchar"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::168", "code": "#include \"ThinObject.h\"\n#include \"Object.h\"\n#include \"SnowString.h\"\n#include \"Exception.h\"\n\nnamespace snow {\n\tstatic volatile uintx global_object_id_counter = 1;\n\n\tvoid ThinObject::init() {\n\t\tm_Info.frozen = false;\n\t\tm_Info.gc_lock = false;\n\t\t// XXX: With multithreading, this will most certainly go wrong.\n\t\t#ifdef ARCH_IS_64_BIT\n\t\tASSERT(global_object_id_counter < (1LU<<61));\n\t\t#else\n\t\tASSERT(global_object_id_counter < (1<<29));\n\t\t#endif\n\t\tm_Info.id = global_object_id_counter++;\n\t}\n\n\tValue ThinObject::get_raw(Symbol name) const {\n\t\t return prototype()->get_raw(name);\n\t}\n\t\n\tValue ThinObject::set_raw(Symbol name, const Value&) {\n\t\tthrow_exception(new String(\"Thin objects cannot have members assigned. Modify the prototype, or create a wrapper.\"));\n\t\treturn nil();\n\t}\n\t\n\tValue ThinObject::set(const Value& self, Symbol member, const Value& val) {\n\t\treturn prototype()->set(self, member, val);\n\t}\n\n\tValue ThinObject::get(const Value& self, Symbol member) const {\n\t\treturn prototype()->get(self, member);\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Th", "in", "Object", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Object", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Snow", "String", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Exception", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġsnow", "Ġ{", "Ċ", "ĉ", "static", "Ġvolatile", "Ġuint", "x", "Ġglobal", "_", "object", "_", "id", "_", "counter", "Ġ=", "Ġ1", ";", "ĊĊ", "ĉ", "void", "ĠThin", "Object", "::", "init", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "m", "_", "Info", ".", "f", "rozen", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "m", "_", "Info", ".", "gc", "_", "lock", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "//", "ĠXXX", ":", "ĠWith", "Ġmult", "ith", "reading", ",", "Ġthis", "Ġwill", "Ġmost", "Ġcertainly", "Ġgo", "Ġwrong", ".", "Ċ", "ĉ", "ĉ", "#", "if", "def", "ĠAR", "CH", "_", "IS", "_", "64", "_", "BIT", "Ċ", "ĉ", "ĉ", "ASS", "ERT", "(", "global", "_", "object", "_", "id", "_", "counter", "Ġ<", "Ġ(", "1", "LU", "<<", "61", "));", "Ċ", "ĉ", "ĉ", "#", "else", "Ċ", "ĉ", "ĉ", "ASS", "ERT", "(", "global", "_", "object", "_", "id", "_", "counter", "Ġ<", "Ġ(", "1", "<<", "29", "));", "Ċ", "ĉ", "ĉ", "#", "endif", "Ċ", "ĉ", "ĉ", "m", "_", "Info", ".", "id", "Ġ=", "Ġglobal", "_", "object", "_", "id", "_", "counter", "++;", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "Value", "ĠThin", "Object", "::", "get", "_", "raw", "(", "Sy", "mbol", "Ġname", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "Ġreturn", "Ġprototype", "()", "->", "get", "_", "raw", "(", "name", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "Value", "ĠThin", "Object", "::", "set", "_", "raw", "(", "Sy", "mbol", "Ġname", ",", "Ġconst", "ĠValue", "&", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "throw", "_", "ex", "ception", "(", "new", "ĠString", "(\"", "Th", "in", "Ġobjects", "Ġcannot", "Ġhave", "Ġmembers", "Ġassigned", ".", "ĠMod", "ify", "Ġthe", "Ġprototype", ",", "Ġor", "Ġcreate", "Ġa", "Ġwrapper", ".\"", "));", "Ċ", "ĉ", "ĉ", "return", "Ġnil", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "Value", "ĠThin", "Object", "::", "set", "(", "const", "ĠValue", "&", "Ġself", ",", "ĠSymbol", "Ġmember", ",", "Ġconst", "ĠValue", "&", "Ġval", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġprototype", "()", "->", "set", "(", "self", ",", "Ġmember", ",", "Ġval", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "Value", "ĠThin", "Object", "::", "get", "(", "const", "ĠValue", "&", "Ġself", ",", "ĠSymbol", "Ġmember", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġprototype", "()", "->", "get", "(", "self", ",", "Ġmember", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["global_object_id_counter", 8, "comesFrom", ["global_object_id_counter"], [0]], ["global_object_id_counter", 10, "comesFrom", ["global_object_id_counter"], [0]], ["global_object_id_counter", 13, "comesFrom", ["global_object_id_counter"], [0]], ["name", 18, "comesFrom", ["name"], [15]], ["member", 30, "comesFrom", ["member"], [25]], ["member", 38, "comesFrom", ["member"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::169", "code": "\n#include \"texture.h\"\n\nusing namespace gl;\n\n/**\n * Constructs a new Texture object, storing the specified textureID for binding\n * @param textureID the Integer representing the texture that can be bound\n */\nTexture::Texture(std::string associatedFileName, gl::GLuint textureID) : textureID(textureID), associatedFileName(associatedFileName)\n{\n}\n\n/**\n * Binds the texture using GL11. The texture will remain bound until the next bind() call of a different\n * texture object, or manual call to GL11.glBindTexture(...)\n */\nvoid Texture::bind()\n{\n    glBindTexture(GL_TEXTURE_2D, textureID);\n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "texture", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġgl", ";", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠConstruct", "s", "Ġa", "Ġnew", "ĠTexture", "Ġobject", ",", "Ġstoring", "Ġthe", "Ġspecified", "Ġtexture", "ID", "Ġfor", "Ġbinding", "Ċ", "Ġ*", "Ġ@", "param", "Ġtexture", "ID", "Ġthe", "ĠInteger", "Ġrepresenting", "Ġthe", "Ġtexture", "Ġthat", "Ġcan", "Ġbe", "Ġbound", "Ċ", "Ġ*/", "Ċ", "Texture", "::", "Texture", "(", "std", "::", "string", "Ġassociated", "File", "Name", ",", "Ġgl", "::", "GL", "uint", "Ġtexture", "ID", ")", "Ġ:", "Ġtexture", "ID", "(", "texture", "ID", "),", "Ġassociated", "File", "Name", "(", "associated", "File", "Name", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠBind", "s", "Ġthe", "Ġtexture", "Ġusing", "ĠGL", "11", ".", "ĠThe", "Ġtexture", "Ġwill", "Ġremain", "Ġbound", "Ġuntil", "Ġthe", "Ġnext", "Ġbind", "()", "Ġcall", "Ġof", "Ġa", "Ġdifferent", "Ċ", "Ġ*", "Ġtexture", "Ġobject", ",", "Ġor", "Ġmanual", "Ġcall", "Ġto", "ĠGL", "11", ".", "gl", "Bind", "Texture", "(", "...)", "Ċ", "Ġ*/", "Ċ", "void", "ĠTexture", "::", "bind", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgl", "Bind", "Texture", "(", "GL", "_", "TEXTURE", "_", "2", "D", ",", "Ġtexture", "ID", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["textureID", 4, "comesFrom", ["textureID"], [3]], ["textureID", 5, "comesFrom", ["textureID"], [3]], ["textureID", 11, "comesFrom", ["textureID"], [3]], ["associatedFileName", 6, "comesFrom", ["associatedFileName"], [2]], ["associatedFileName", 7, "comesFrom", ["associatedFileName"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::170", "code": "//\n//\n//\n#include \"network.hpp\"\n#include \"session.hpp\"\n\nnamespace led_d\n{\n\n  network_t::network_t (asio::io_service &io_service,\n                        core::port_t::value_t port,\n                        queue_t &queue)\n    : m_acceptor (io_service, asio::ip::tcp::endpoint (asio::ip::tcp::v4 (), port)),\n      m_socket (io_service),\n      m_queue (queue)\n  {\n    do_accept ();\n  }\n\n  void network_t::do_accept ()\n  {\n    m_acceptor.async_accept\n      (m_socket,\n       [this] (std::error_code err_code)\n       {\n         if (!err_code) {\n           std::make_shared<session_t>(std::move (m_socket), m_queue)->start ();\n         }\n         do_accept ();\n       }\n       );\n  }\n\n} // namespace led_d\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ċ", "//", "Ċ", "#", "include", "Ġ\"", "network", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "session", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġled", "_", "d", "Ċ", "{", "ĊĊ", "Ġ", "Ġnetwork", "_", "t", "::", "network", "_", "t", "Ġ(", "asio", "::", "io", "_", "service", "Ġ&", "io", "_", "service", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcore", "::", "port", "_", "t", "::", "value", "_", "t", "Ġport", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġqueue", "_", "t", "Ġ&", "queue", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġm", "_", "accept", "or", "Ġ(", "io", "_", "service", ",", "Ġas", "io", "::", "ip", "::", "t", "cp", "::", "end", "point", "Ġ(", "asio", "::", "ip", "::", "t", "cp", "::", "v", "4", "Ġ(),", "Ġport", ")),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "socket", "Ġ(", "io", "_", "service", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "queue", "Ġ(", "queue", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdo", "_", "accept", "Ġ();", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġvoid", "Ġnetwork", "_", "t", "::", "do", "_", "accept", "Ġ()", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "accept", "or", ".", "as", "ync", "_", "accept", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "m", "_", "socket", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ[", "this", "]", "Ġ(", "std", "::", "error", "_", "code", "Ġerr", "_", "code", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "err", "_", "code", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "make", "_", "shared", "<", "session", "_", "t", ">(", "std", "::", "move", "Ġ(", "m", "_", "socket", "),", "Ġm", "_", "queue", ")", "->", "start", "Ġ();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdo", "_", "accept", "Ġ();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġled", "_", "d", "Ċ"], "dataflow_graph": [["port", 8, "comesFrom", ["port"], [2]], ["err_code", 19, "comesFrom", ["err_code"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::171", "code": "#include <cstdio>\n#include <vector>\nusing namespace std;\n\nlong long phi(long long n)\n{\n  long long ans = n;\n  for (long long i = 2LL; i*i <= n; i++) {\n    if (n % i == 0LL) {\n      ans -= ans / i;\n      while (n % i == 0LL) {\n        n /= i;\n      }\n    }\n  }\n  if (n > 1) {\n    ans -= ans / n;\n  }\n  return ans;\n}\n\nvector<long long> factorize(long long n)\n{\n  vector<long long> fs;\n  for (long long i = 1LL; i*i <= n; i++) {\n    if (n % i == 0LL) {\n      fs.push_back(i);\n      if (i*i != n) {\n        fs.push_back(n/i);\n      }\n    }\n  }\n  return fs;\n}\nint main()\n{\n  long long N;\n  while (scanf(\"%lld\", &N) != EOF) {\n    long long ans = 0;\n    const vector<long long> fs = factorize(N);\n    ans = 0;\n    for (vector<long long>::const_iterator it = fs.begin(); it != fs.end(); ++it) {\n      ans += *it * phi(N / *it);\n    }\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "long", "Ġlong", "Ġph", "i", "(", "long", "Ġlong", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġlong", "Ġlong", "Ġans", "Ġ=", "Ġn", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "long", "Ġlong", "Ġi", "Ġ=", "Ġ2", "LL", ";", "Ġi", "*", "i", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ%", "Ġi", "Ġ==", "Ġ0", "LL", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ-=", "Ġans", "Ġ/", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "n", "Ġ%", "Ġi", "Ġ==", "Ġ0", "LL", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Ġ/", "=", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ(", "n", "Ġ>", "Ġ1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ-=", "Ġans", "Ġ/", "Ġn", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġans", ";", "Ċ", "}", "Ċ", "Ċ", "vector", "<", "long", "Ġlong", ">", "Ġfactor", "ize", "(", "long", "Ġlong", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġvector", "<", "long", "Ġlong", ">", "Ġfs", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "long", "Ġlong", "Ġi", "Ġ=", "Ġ1", "LL", ";", "Ġi", "*", "i", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ%", "Ġi", "Ġ==", "Ġ0", "LL", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfs", ".", "push", "_", "back", "(", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "i", "*", "i", "Ġ!=", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfs", ".", "push", "_", "back", "(", "n", "/", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġfs", ";", "Ċ", "}", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġlong", "Ġlong", "ĠN", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "scan", "f", "(\"", "%", "ll", "d", "\",", "Ġ&", "N", ")", "Ġ!=", "ĠE", "OF", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġlong", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġvector", "<", "long", "Ġlong", ">", "Ġfs", "Ġ=", "Ġfactor", "ize", "(", "N", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "vector", "<", "long", "Ġlong", ">", "::", "const", "_", "iterator", "Ġit", "Ġ=", "Ġfs", ".", "begin", "();", "Ġit", "Ġ!=", "Ġfs", ".", "end", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ+=", "Ġ*", "it", "Ġ*", "Ġph", "i", "(", "N", "Ġ/", "Ġ*", "it", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "ll", "d", "\\", "n", "\",", "Ġans", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 7, "comesFrom", ["i"], [5]], ["i", 9, "comesFrom", ["i"], [5]], ["i", 11, "comesFrom", ["i"], [5]], ["i", 14, "comesFrom", ["i"], [5]], ["i", 16, "comesFrom", ["i"], [5]], ["i", 18, "comesFrom", ["i"], [5]], ["i", 28, "comesFrom", ["i"], [27]], ["i", 29, "comesFrom", ["i"], [27]], ["i", 31, "comesFrom", ["i"], [27]], ["i", 33, "comesFrom", ["i"], [27]], ["i", 36, "comesFrom", ["i"], [27]], ["i", 37, "comesFrom", ["i"], [27]], ["i", 38, "comesFrom", ["i"], [27]], ["i", 43, "comesFrom", ["i"], [27]], ["n", 8, "comesFrom", ["n"], [4]], ["n", 10, "comesFrom", ["n"], [4]], ["n", 15, "comesFrom", ["n"], [4]], ["n", 19, "comesFrom", ["n"], [17]], ["n", 22, "comesFrom", ["n"], [17]], ["n", 30, "comesFrom", ["n"], [25]], ["n", 32, "comesFrom", ["n"], [25]], ["n", 39, "comesFrom", ["n"], [25]], ["n", 42, "comesFrom", ["n"], [25]], ["ans", 13, "comesFrom", ["ans"], [12]], ["ans", 21, "comesFrom", ["ans"], [20]], ["ans", 23, "comesFrom", ["ans"], [20]], ["ans", 68, "comesFrom", ["ans"], [62]], ["fs", 34, "comesFrom", ["fs"], [26]], ["fs", 40, "comesFrom", ["fs"], [26]], ["fs", 44, "comesFrom", ["fs"], [26]], ["fs", 56, "comesFrom", ["fs"], [51]], ["fs", 59, "comesFrom", ["fs"], [51]], ["N", 48, "comesFrom", ["N"], [46]], ["N", 53, "comesFrom", ["N"], [46]], ["N", 65, "comesFrom", ["N"], [46]], ["it", 58, "comesFrom", ["it"], [55]], ["it", 61, "comesFrom", ["it"], [55]], ["it", 63, "comesFrom", ["it"], [55]], ["it", 66, "comesFrom", ["it"], [55]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::172", "code": "#include \"benchmark/benchmark.h\"\n\n#include \"c4/log.hpp\"\n#include \"c4/allocator.hpp\"\n#include \"../list_types.hpp\"\n\nnamespace bm = benchmark;\n\nnamespace c4 {\n\ntemplate< class List >\nvoid BM_ListPushBack(bm::State& st)\n{\n    List li;\n    using T = typename List::value_type;\n    T v{};\n    size_t count = 0;\n    while(st.KeepRunning())\n    {\n        for(int i = 0, e = st.range(0); i < e; ++i)\n        {\n            if(li.size() == li.max_size()) li.clear();\n            li.push_back(v);\n            ++count;\n        }\n        li.clear();\n    }\n    st.SetComplexityN(st.range(0));\n    st.SetItemsProcessed(count);\n    st.SetBytesProcessed(count * sizeof(T));\n}\n\nBENCHMARK_TEMPLATE(BM_ListPushBack, split_list__paged_rt< int C4_COMMA  int32_t >)\n    ->RangeMultiplier(2)\n    ->Range(4, 1<<19)\n    ->Complexity();\n\n} // end namespace c4\n\nBENCHMARK_MAIN()", "code_tokens": ["Ġ#", "include", "Ġ\"", "bench", "mark", "/", "bench", "mark", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "c", "4", "/", "log", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "c", "4", "/", "alloc", "ator", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "../", "list", "_", "types", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġb", "m", "Ġ=", "Ġbenchmark", ";", "Ċ", "Ċ", "names", "pace", "Ġc", "4", "Ġ{", "Ċ", "Ċ", "template", "<", "Ġclass", "ĠList", "Ġ>", "Ċ", "void", "ĠBM", "_", "List", "Push", "Back", "(", "bm", "::", "State", "&", "Ġst", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠList", "Ġli", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġusing", "ĠT", "Ġ=", "Ġtyp", "ename", "ĠList", "::", "value", "_", "type", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠT", "Ġv", "{", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsize", "_", "t", "Ġcount", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "st", ".", "Keep", "Running", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ",", "Ġe", "Ġ=", "Ġst", ".", "range", "(", "0", ");", "Ġi", "Ġ<", "Ġe", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "li", ".", "size", "()", "Ġ==", "Ġli", ".", "max", "_", "size", "())", "Ġli", ".", "clear", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġli", ".", "push", "_", "back", "(", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "count", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġli", ".", "clear", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġst", ".", "Set", "Com", "plex", "ity", "N", "(", "st", ".", "range", "(", "0", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġst", ".", "Set", "Items", "Process", "ed", "(", "count", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġst", ".", "Set", "Bytes", "Process", "ed", "(", "count", "Ġ*", "Ġsizeof", "(", "T", "));", "Ċ", "}", "Ċ", "Ċ", "B", "EN", "CH", "M", "ARK", "_", "T", "EM", "PL", "ATE", "(", "BM", "_", "List", "Push", "Back", ",", "Ġsplit", "_", "list", "__", "p", "aged", "_", "rt", "<", "Ġint", "ĠC", "4", "_", "COM", "MA", "Ġ", "Ġint", "32", "_", "t", "Ġ>", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ->", "Range", "Mult", "ipl", "ier", "(", "2", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ->", "Range", "(", "4", ",", "Ġ1", "<<", "19", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ->", "Com", "plex", "ity", "();", "Ċ", "Ċ", "}", "Ġ//", "Ġend", "Ġnamespace", "Ġc", "4", "Ċ", "Ċ", "B", "EN", "CH", "M", "ARK", "_", "MA", "IN", "()"], "dataflow_graph": [["i", 11, "comesFrom", ["i"], [7]], ["i", 13, "comesFrom", ["i"], [7]], ["e", 12, "comesFrom", ["e"], [8]], ["li", 14, "comesFrom", ["li"], [2]], ["li", 16, "comesFrom", ["li"], [2]], ["li", 18, "comesFrom", ["li"], [2]], ["li", 20, "comesFrom", ["li"], [2]], ["li", 24, "comesFrom", ["li"], [2]], ["v", 22, "comesFrom", ["v"], [3]], ["count", 23, "comesFrom", ["count"], [4]], ["count", 32, "comesFrom", ["count"], [4]], ["count", 35, "comesFrom", ["count"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::173", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ull = unsigned long long;\n\null arr[int(1e5)+5];\nint n, q, x;\n\nint bs(int key) {\n\tint l = 0, r = n-1, mid, ans=-1;\n\n\twhile (l <= r) {\n\t\tmid = l + (r - l + 1)/2;\n\n\t\tif (arr[mid] == key) {\n\t\t\tr = mid - 1;\n\t\t\tans = mid;\n\t\t}\n\t\telse if (arr[mid] < key) l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\n\treturn ans;\n}\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\n\tcin >> n >> q;\n\n\tfor (int i = 0; i < n; ++i) cin >> x, arr[i] = x + INT_MAX;\n\n\tfor (int i = 0; i < q; ++i) {\n\t\tcin >> x;\n\t\tcout << bs(x + INT_MAX) << '\\n';\n\t}\n\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "using", "Ġu", "ll", "Ġ=", "Ġunsigned", "Ġlong", "Ġlong", ";", "Ċ", "Ċ", "ull", "Ġarr", "[", "int", "(", "1", "e", "5", ")+", "5", "];", "Ċ", "int", "Ġn", ",", "Ġq", ",", "Ġx", ";", "Ċ", "Ċ", "int", "Ġb", "s", "(", "int", "Ġkey", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġl", "Ġ=", "Ġ0", ",", "Ġr", "Ġ=", "Ġn", "-", "1", ",", "Ġmid", ",", "Ġans", "=-", "1", ";", "ĊĊ", "ĉ", "while", "Ġ(", "l", "Ġ<=", "Ġr", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "mid", "Ġ=", "Ġl", "Ġ+", "Ġ(", "r", "Ġ-", "Ġl", "Ġ+", "Ġ1", ")/", "2", ";", "ĊĊ", "ĉ", "ĉ", "if", "Ġ(", "arr", "[", "mid", "]", "Ġ==", "Ġkey", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "r", "Ġ=", "Ġmid", "Ġ-", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ans", "Ġ=", "Ġmid", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ġif", "Ġ(", "arr", "[", "mid", "]", "Ġ<", "Ġkey", ")", "Ġl", "Ġ=", "Ġmid", "Ġ+", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "else", "Ġr", "Ġ=", "Ġmid", "Ġ-", "Ġ1", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġans", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "ios", "::", "sync", "_", "with", "_", "std", "io", "(", "0", ");", "Ċ", "ĉ", "cin", ".", "tie", "(", "0", ");", "ĊĊ", "ĉ", "cin", "Ġ>>", "Ġn", "Ġ>>", "Ġq", ";", "ĊĊ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġc", "in", "Ġ>>", "Ġx", ",", "Ġarr", "[", "i", "]", "Ġ=", "Ġx", "Ġ+", "ĠINT", "_", "MAX", ";", "ĊĊ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġq", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġx", ";", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġb", "s", "(", "x", "Ġ+", "ĠINT", "_", "MAX", ")", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["n", 9, "comesFrom", ["n"], [2]], ["n", 38, "comesFrom", ["n"], [2]], ["n", 42, "comesFrom", ["n"], [2]], ["l", 12, "comesFrom", ["l"], [7]], ["l", 15, "comesFrom", ["l"], [7]], ["l", 17, "comesFrom", ["l"], [7]], ["r", 13, "comesFrom", ["r"], [8]], ["r", 16, "comesFrom", ["r"], [8]], ["mid", 19, "comesFrom", ["mid"], [14]], ["mid", 22, "comesFrom", ["mid"], [14]], ["mid", 24, "comesFrom", ["mid"], [14]], ["mid", 26, "comesFrom", ["mid"], [14]], ["mid", 29, "comesFrom", ["mid"], [14]], ["mid", 31, "comesFrom", ["mid"], [14]], ["key", 20, "comesFrom", ["key"], [6]], ["key", 27, "comesFrom", ["key"], [6]], ["ans", 32, "comesFrom", ["ans"], [23]], ["q", 39, "comesFrom", ["q"], [3]], ["q", 52, "comesFrom", ["q"], [3]], ["i", 41, "comesFrom", ["i"], [40]], ["i", 43, "comesFrom", ["i"], [40]], ["i", 47, "comesFrom", ["i"], [40]], ["i", 51, "comesFrom", ["i"], [50]], ["i", 53, "comesFrom", ["i"], [50]], ["x", 45, "comesFrom", ["x"], [4]], ["x", 48, "comesFrom", ["x"], [4]], ["x", 55, "comesFrom", ["x"], [4]], ["x", 58, "comesFrom", ["x"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::174", "code": "#include <unistd.h>\n#include <string.h>\n#include <stdio.h>\n#include <iostream>\n\nusing namespace std;\n\nvoid foo(char* p){\n    memcpy(p, \"01234567890\", 32);\n}\n\nvoid foo2(char *p) {\n  for (int i = 0; i < 100; i++) {\n    cout << \"start p[\" << i << \"]\" << endl;\n    p[i] = 'a';\n    cout << \"p[\" << i << \"] ok \" << endl;\n  }\n} \nint main(int argc, char** argv){\n    char* p = new char[10];\n    //foo(p);\n    delete []p;\n    foo2(p);\n    printf(\"p=%s\\n\", p);\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġfoo", "(", "char", "*", "Ġp", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmem", "c", "py", "(", "p", ",", "Ġ\"", "01", "23", "45", "678", "90", "\",", "Ġ32", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġfoo", "2", "(", "char", "Ġ*", "p", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "start", "Ġp", "[\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "]\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "i", "]", "Ġ=", "Ġ'", "a", "';", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "p", "[\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "]", "Ġok", "Ġ\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ġ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "*", "Ġp", "Ġ=", "Ġnew", "Ġchar", "[", "10", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "foo", "(", "p", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġ[]", "p", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfoo", "2", "(", "p", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "p", "=", "%", "s", "\\", "n", "\",", "Ġp", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 8, "comesFrom", ["i"], [7]], ["i", 9, "comesFrom", ["i"], [7]], ["i", 11, "comesFrom", ["i"], [7]], ["i", 14, "comesFrom", ["i"], [7]], ["i", 16, "comesFrom", ["i"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::175", "code": "// Copyright (c) 2009-2010 Satoshi Nakamoto\n// Copyright (c) 2009-2017 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n#include <galaxycash.h>\n\n#include <chainparams.h>\n#include <hash.h>\n#include <memory>\n#include <pow.h>\n#include <uint256.h>\n#include <util.h>\n\n#include <stdint.h>\n\n\nCGalaxyCashStateRef g_galaxycash;\n\n\nCGalaxyCashDB::CGalaxyCashDB(size_t nCacheSize, bool fMemory, bool fWipe) : CDBWrapper(GetDataDir() / \"galaxycash\" / \"database\", nCacheSize, fMemory, fWipe)\n{\n}\n\n\nclass CGalaxyCashVM\n{\npublic:\n    CGalaxyCashVM();\n    ~CGalaxyCashVM();\n};\n\nCGalaxyCashVM::CGalaxyCashVM()\n{\n}\n\nCGalaxyCashState::CGalaxyCashState() : pdb(new CGalaxyCashDB((gArgs.GetArg(\"-gchdbcache\", 128) << 20), false, gArgs.GetBoolArg(\"-reindex\", false)))\n{\n}\nCGalaxyCashState::~CGalaxyCashState()\n{\n    delete pdb;\n}\n\nvoid CGalaxyCashState::EvalScript()\n{\n}\n\nbool CGalaxyCashConsensus::CheckSignature() const\n{\n    return true;\n}", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2010", "ĠSatoshi", "ĠNak", "amoto", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2017", "ĠThe", "ĠBitcoin", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġaccompanying", "Ċ", "//", "Ġfile", "ĠCOP", "YING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "#", "include", "Ġ<", "gal", "axy", "cash", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "chain", "params", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "hash", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "p", "ow", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "uint", "256", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "util", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "ĊĊ", "Ċ", "C", "Gal", "axy", "Cash", "State", "Ref", "Ġg", "_", "gal", "axy", "cash", ";", "ĊĊ", "Ċ", "C", "Gal", "axy", "Cash", "DB", "::", "C", "Gal", "axy", "Cash", "DB", "(", "size", "_", "t", "Ġn", "Cache", "Size", ",", "Ġbool", "Ġf", "Memory", ",", "Ġbool", "Ġf", "W", "ipe", ")", "Ġ:", "ĠCD", "B", "Wra", "pper", "(", "Get", "Data", "Dir", "()", "Ġ/", "Ġ\"", "gal", "axy", "cash", "\"", "Ġ/", "Ġ\"", "database", "\",", "Ġn", "Cache", "Size", ",", "Ġf", "Memory", ",", "Ġf", "W", "ipe", ")", "Ċ", "{", "Ċ", "}", "ĊĊ", "Ċ", "class", "ĠC", "Gal", "axy", "Cash", "VM", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠC", "Gal", "axy", "Cash", "VM", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ~", "C", "Gal", "axy", "Cash", "VM", "();", "Ċ", "};", "Ċ", "Ċ", "C", "Gal", "axy", "Cash", "VM", "::", "C", "Gal", "axy", "Cash", "VM", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "C", "Gal", "axy", "Cash", "State", "::", "C", "Gal", "axy", "Cash", "State", "()", "Ġ:", "Ġp", "db", "(", "new", "ĠC", "Gal", "axy", "Cash", "DB", "((", "g", "Args", ".", "Get", "Arg", "(\"", "-", "g", "ch", "db", "cache", "\",", "Ġ128", ")", "Ġ<<", "Ġ20", "),", "Ġfalse", ",", "Ġg", "Args", ".", "Get", "B", "ool", "Arg", "(\"", "-", "re", "index", "\",", "Ġfalse", ")))", "Ċ", "{", "Ċ", "}", "Ċ", "C", "Gal", "axy", "Cash", "State", "::", "~", "C", "Gal", "axy", "Cash", "State", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġp", "db", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Gal", "axy", "Cash", "State", "::", "E", "val", "Script", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠC", "Gal", "axy", "Cash", "Cons", "ensus", "::", "Check", "Sign", "ature", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}"], "dataflow_graph": [["nCacheSize", 7, "comesFrom", ["nCacheSize"], [2]], ["fMemory", 8, "comesFrom", ["fMemory"], [3]], ["fWipe", 9, "comesFrom", ["fWipe"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::176", "code": "#include \"DirectFormOscillator.h\"\r\n\r\nusing namespace DSP;\r\n\r\nDirectFormOscillator::DirectFormOscillator(){\r\n    init = false;\r\n}\r\n\r\nvoid DirectFormOscillator::setFrequency(float frequency, float sampleRate){\r\n    if(fo != frequency){\r\n        flush();\r\n        fo = frequency;\r\n    }\r\n    fs = sampleRate;\r\n\ttheta = 2 * PI * fo / fs;\r\n    b1 = -2 * cosf(theta);\r\n    b2 = 1.0f;\r\n    if(!init){\r\n        yn1 = sinf(-1 * theta);\r\n        yn2 = sinf(-2 * theta);\r\n        init = true;\r\n    }\r\n}\r\n\r\nfloat DirectFormOscillator::getNextSample(float input){\r\n    float output = - (b1 * yn1) - (b2 * yn2);\r\n    yn2 = yn1;\r\n    yn1 = output;\r\n    return output;\r\n}\r\n\r\nvoid DirectFormOscillator::flush(){\r\n    yn1 = yn2 = 0;\r\n    init = false;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Direct", "Form", "O", "scill", "ator", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "ĠD", "SP", ";", "č", "Ċ", "č", "Ċ", "Direct", "Form", "O", "scill", "ator", "::", "Direct", "Form", "O", "scill", "ator", "(){", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "Ġ=", "Ġfalse", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDirect", "Form", "O", "scill", "ator", "::", "set", "F", "requency", "(", "float", "Ġfrequency", ",", "Ġfloat", "Ġsample", "Rate", "){", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "fo", "Ġ!=", "Ġfrequency", "){", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġflush", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfo", "Ġ=", "Ġfrequency", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfs", "Ġ=", "Ġsample", "Rate", ";", "č", "Ċ", "ĉ", "the", "ta", "Ġ=", "Ġ2", "Ġ*", "ĠPI", "Ġ*", "Ġfo", "Ġ/", "Ġfs", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "1", "Ġ=", "Ġ-", "2", "Ġ*", "Ġcos", "f", "(", "the", "ta", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "2", "Ġ=", "Ġ1", ".", "0", "f", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "init", "){", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġy", "n", "1", "Ġ=", "Ġsin", "f", "(-", "1", "Ġ*", "Ġthe", "ta", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġy", "n", "2", "Ġ=", "Ġsin", "f", "(-", "2", "Ġ*", "Ġthe", "ta", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġinit", "Ġ=", "Ġtrue", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "float", "ĠDirect", "Form", "O", "scill", "ator", "::", "get", "Next", "Sample", "(", "float", "Ġinput", "){", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġoutput", "Ġ=", "Ġ-", "Ġ(", "b", "1", "Ġ*", "Ġy", "n", "1", ")", "Ġ-", "Ġ(", "b", "2", "Ġ*", "Ġy", "n", "2", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġy", "n", "2", "Ġ=", "Ġy", "n", "1", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġy", "n", "1", "Ġ=", "Ġoutput", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġoutput", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDirect", "Form", "O", "scill", "ator", "::", "flush", "(){", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġy", "n", "1", "Ġ=", "Ġy", "n", "2", "Ġ=", "Ġ0", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "Ġ=", "Ġfalse", ";", "č", "Ċ", "}"], "dataflow_graph": [["fo", 15, "comesFrom", ["fo"], [9]], ["frequency", 7, "comesFrom", ["frequency"], [4]], ["frequency", 10, "comesFrom", ["frequency"], [4]], ["sampleRate", 12, "comesFrom", ["sampleRate"], [5]], ["fs", 16, "comesFrom", ["fs"], [11]], ["theta", 19, "comesFrom", ["theta"], [13]], ["theta", 24, "comesFrom", ["theta"], [13]], ["theta", 27, "comesFrom", ["theta"], [13]], ["init", 21, "comesFrom", ["init"], [2]], ["b1", 32, "comesFrom", ["b1"], [17]], ["yn1", 33, "comesFrom", ["yn1"], [22]], ["yn1", 37, "comesFrom", ["yn1"], [22]], ["b2", 34, "comesFrom", ["b2"], [20]], ["yn2", 35, "comesFrom", ["yn2"], [25]], ["output", 39, "comesFrom", ["output"], [31]], ["output", 40, "comesFrom", ["output"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::177", "code": "#define BOOST_TEST_DYN_LINK\n#include <boost/test/unit_test.hpp>\n#include \"utils/VerticalLinearizer2D.hpp\"\n#include <cstdlib>\n\nvoid verticalLinearizer2D_test_array(const std::size_t width, const std::size_t height)\n{\n  VerticalLinearizer2D linearizer (width, height, -10, -20);\n\n  std::size_t linearized = 0;\n\n  for(int y = -20; y < height; ++y) {\n    for(int x = -10; x < width; ++x) {\n      BOOST_REQUIRE(linearizer.getX(linearized) == x);\n      BOOST_REQUIRE(linearizer.getY(linearized) == y);\n      BOOST_REQUIRE(linearizer.linearize(x, y) == linearized);\n      linearized += 1;\n    }\n  }\n}\n\nBOOST_AUTO_TEST_CASE( VerticalLinearizer2DTest )\n{\n  verticalLinearizer2D_test_array(0, 0);\n  verticalLinearizer2D_test_array(10, 10);\n  verticalLinearizer2D_test_array(20, 60);\n  verticalLinearizer2D_test_array(60, 20);\n}\n", "code_tokens": ["Ġ#", "define", "ĠB", "OO", "ST", "_", "T", "EST", "_", "D", "YN", "_", "L", "INK", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "unit", "_", "test", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ\"", "utils", "/", "Vert", "ical", "Lin", "ear", "izer", "2", "D", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "Ċ", "void", "Ġvertical", "Lin", "ear", "izer", "2", "D", "_", "test", "_", "array", "(", "const", "Ġstd", "::", "size", "_", "t", "Ġwidth", ",", "Ġconst", "Ġstd", "::", "size", "_", "t", "Ġheight", ")", "Ċ", "{", "Ċ", "Ġ", "ĠVertical", "Lin", "ear", "izer", "2", "D", "Ġlinear", "izer", "Ġ(", "width", ",", "Ġheight", ",", "Ġ-", "10", ",", "Ġ-", "20", ");", "ĊĊ", "Ġ", "Ġstd", "::", "size", "_", "t", "Ġlinear", "ized", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġfor", "(", "int", "Ġy", "Ġ=", "Ġ-", "20", ";", "Ġy", "Ġ<", "Ġheight", ";", "Ġ++", "y", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġx", "Ġ=", "Ġ-", "10", ";", "Ġx", "Ġ<", "Ġwidth", ";", "Ġ++", "x", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "RE", "QUIRE", "(", "linear", "izer", ".", "get", "X", "(", "linear", "ized", ")", "Ġ==", "Ġx", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "RE", "QUIRE", "(", "linear", "izer", ".", "get", "Y", "(", "linear", "ized", ")", "Ġ==", "Ġy", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "RE", "QUIRE", "(", "linear", "izer", ".", "linear", "ize", "(", "x", ",", "Ġy", ")", "Ġ==", "Ġlinear", "ized", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlinear", "ized", "Ġ+=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "B", "OO", "ST", "_", "AUT", "O", "_", "T", "EST", "_", "C", "ASE", "(", "ĠVertical", "Lin", "ear", "izer", "2", "D", "Test", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġvertical", "Lin", "ear", "izer", "2", "D", "_", "test", "_", "array", "(", "0", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġvertical", "Lin", "ear", "izer", "2", "D", "_", "test", "_", "array", "(", "10", ",", "Ġ10", ");", "Ċ", "Ġ", "Ġvertical", "Lin", "ear", "izer", "2", "D", "_", "test", "_", "array", "(", "20", ",", "Ġ60", ");", "Ċ", "Ġ", "Ġvertical", "Lin", "ear", "izer", "2", "D", "_", "test", "_", "array", "(", "60", ",", "Ġ20", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["width", 5, "comesFrom", ["width"], [2]], ["width", 14, "comesFrom", ["width"], [2]], ["height", 6, "comesFrom", ["height"], [3]], ["height", 10, "comesFrom", ["height"], [3]], ["y", 9, "comesFrom", ["y"], [8]], ["y", 11, "comesFrom", ["y"], [8]], ["y", 25, "comesFrom", ["y"], [8]], ["y", 30, "comesFrom", ["y"], [8]], ["x", 13, "comesFrom", ["x"], [12]], ["x", 15, "comesFrom", ["x"], [12]], ["x", 20, "comesFrom", ["x"], [12]], ["x", 29, "comesFrom", ["x"], [12]], ["linearizer", 17, "comesFrom", ["linearizer"], [4]], ["linearizer", 22, "comesFrom", ["linearizer"], [4]], ["linearizer", 27, "comesFrom", ["linearizer"], [4]], ["linearized", 19, "comesFrom", ["linearized"], [7]], ["linearized", 24, "comesFrom", ["linearized"], [7]], ["linearized", 31, "comesFrom", ["linearized"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::178", "code": "#include \"ofApp.h\"\n\nvoid ofApp::setup() {\n\tofSetVerticalSync(true);\n\tcam.initGrabber(1280, 720);\n\tbulgeEffect.setup(1280, 720);\n}\n\nvoid ofApp::update() {\n\tcam.update();\n}\n\nvoid ofApp::draw() {\n\tif(ofGetMousePressed()) {\n\t\tbulgeEffect.addBulge(ofGetWidth() / 2 - mouseX, ofGetHeight() / 2, mouseY);\n\t\tbulgeEffect.addBulge(ofGetWidth() / 2 + mouseX, ofGetHeight() / 2, mouseY);\n\t} else {\n\t\tofSeedRandom(0);\n\t\tfor(int i = 0; i < 64; i++) {\n\t\t\tfloat x = ofMap(sin(ofGetElapsedTimef() * ofRandom(3)), -1, 1, 0, ofGetWidth());\n\t\t\tfloat y = ofMap(sin(ofGetElapsedTimef() * ofRandom(3)), -1, 1, 0, ofGetHeight());\n\t\t\tbulgeEffect.addBulge(x, y, ofRandom(64, 512));\n\t\t}\n\t}\n\t\n\tbulgeEffect.draw(cam.getTextureReference(), 0, 0);\n\t\n\tofDrawBitmapStringHighlight(ofToString((int) ofGetFrameRate()), 10, 20);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "of", "App", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġof", "App", "::", "setup", "()", "Ġ{", "Ċ", "ĉ", "of", "Set", "Vert", "ical", "Sync", "(", "true", ");", "Ċ", "ĉ", "cam", ".", "init", "Grab", "ber", "(", "12", "80", ",", "Ġ720", ");", "Ċ", "ĉ", "bul", "ge", "Effect", ".", "setup", "(", "12", "80", ",", "Ġ720", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġof", "App", "::", "update", "()", "Ġ{", "Ċ", "ĉ", "cam", ".", "update", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ġof", "App", "::", "draw", "()", "Ġ{", "Ċ", "ĉ", "if", "(", "of", "Get", "Mouse", "P", "ressed", "())", "Ġ{", "Ċ", "ĉ", "ĉ", "bul", "ge", "Effect", ".", "add", "Bul", "ge", "(", "of", "Get", "Width", "()", "Ġ/", "Ġ2", "Ġ-", "Ġmouse", "X", ",", "Ġof", "Get", "Height", "()", "Ġ/", "Ġ2", ",", "Ġmouse", "Y", ");", "Ċ", "ĉ", "ĉ", "bul", "ge", "Effect", ".", "add", "Bul", "ge", "(", "of", "Get", "Width", "()", "Ġ/", "Ġ2", "Ġ+", "Ġmouse", "X", ",", "Ġof", "Get", "Height", "()", "Ġ/", "Ġ2", ",", "Ġmouse", "Y", ");", "Ċ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "of", "S", "eed", "Random", "(", "0", ");", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ64", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "float", "Ġx", "Ġ=", "Ġof", "Map", "(", "sin", "(", "of", "Get", "El", "apsed", "Time", "f", "()", "Ġ*", "Ġof", "Random", "(", "3", ")),", "Ġ-", "1", ",", "Ġ1", ",", "Ġ0", ",", "Ġof", "Get", "Width", "());", "Ċ", "ĉ", "ĉ", "ĉ", "float", "Ġy", "Ġ=", "Ġof", "Map", "(", "sin", "(", "of", "Get", "El", "apsed", "Time", "f", "()", "Ġ*", "Ġof", "Random", "(", "3", ")),", "Ġ-", "1", ",", "Ġ1", ",", "Ġ0", ",", "Ġof", "Get", "Height", "());", "Ċ", "ĉ", "ĉ", "ĉ", "bul", "ge", "Effect", ".", "add", "Bul", "ge", "(", "x", ",", "Ġy", ",", "Ġof", "Random", "(", "64", ",", "Ġ512", "));", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "bul", "ge", "Effect", ".", "draw", "(", "cam", ".", "get", "Texture", "Reference", "(),", "Ġ0", ",", "Ġ0", ");", "Ċ", "ĉ", "Ċ", "ĉ", "of", "Draw", "Bit", "map", "String", "High", "light", "(", "of", "To", "String", "((", "int", ")", "Ġof", "Get", "Frame", "Rate", "()", "),", "Ġ10", ",", "Ġ20", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 25, "comesFrom", ["i"], [24]], ["i", 26, "comesFrom", ["i"], [24]], ["x", 41, "comesFrom", ["x"], [27]], ["y", 42, "comesFrom", ["y"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::179", "code": "#include <cstdio>\n#include <vector>\nusing namespace std;\n\nint k;\nint s[13], result[6];\n\nvoid dfs(int start, int depth) {\n    if (depth == 6) { // 숫자 6개를 선택했을 때\n        for (int i = 0; i < 6; i++) {\n            printf(\"%d \", result[i]);\n        }\n        printf(\"\\n\");\n        return;\n    }\n    \n    for (int i = start; i < k; i++) { // 숫자 선택\n        result[depth] = s[i];\n        dfs(i + 1, depth + 1);\n    }\n}\n\nint main() {\n    while (scanf(\"%d\", &k) && k) {\n        for (int i = 0; i < k; i++) {\n            scanf(\"%d\", &s[i]);\n        }\n        \n        dfs(0, 0);\n        \n        printf(\"\\n\");\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġk", ";", "Ċ", "int", "Ġs", "[", "13", "],", "Ġresult", "[", "6", "];", "Ċ", "Ċ", "void", "Ġd", "fs", "(", "int", "Ġstart", ",", "Ġint", "Ġdepth", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "depth", "Ġ==", "Ġ6", ")", "Ġ{", "Ġ//", "Ġì", "Ī", "«", "ì", "ŀ", "Ĳ", "Ġ6", "ê", "°", "ľ", "ë", "¥", "¼", "Ġì", "Ħ", "ł", "í", "ĥ", "Ŀ", "í", "ĸ", "Ī", "ìĿ", "Ħ", "Ġë", "ķ", "Į", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ6", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "Ġ\",", "Ġresult", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġstart", ";", "Ġi", "Ġ<", "Ġk", ";", "Ġi", "++)", "Ġ{", "Ġ//", "Ġì", "Ī", "«", "ì", "ŀ", "Ĳ", "Ġì", "Ħ", "ł", "í", "ĥ", "Ŀ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "[", "depth", "]", "Ġ=", "Ġs", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "fs", "(", "i", "Ġ+", "Ġ1", ",", "Ġdepth", "Ġ+", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "k", ")", "Ġ&&", "Ġk", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġk", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "s", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "fs", "(", "0", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["depth", 7, "comesFrom", ["depth"], [6]], ["depth", 21, "comesFrom", ["depth"], [6]], ["depth", 26, "comesFrom", ["depth"], [6]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 10, "comesFrom", ["i"], [8]], ["i", 13, "comesFrom", ["i"], [8]], ["i", 17, "comesFrom", ["i"], [15]], ["i", 19, "comesFrom", ["i"], [15]], ["i", 23, "comesFrom", ["i"], [15]], ["i", 25, "comesFrom", ["i"], [15]], ["i", 32, "comesFrom", ["i"], [31]], ["i", 34, "comesFrom", ["i"], [31]], ["i", 37, "comesFrom", ["i"], [31]], ["k", 18, "comesFrom", ["k"], [1]], ["k", 29, "comesFrom", ["k"], [1]], ["k", 30, "comesFrom", ["k"], [1]], ["k", 33, "comesFrom", ["k"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::180", "code": "#ifndef __BD_SO_BROADCASTCENTER__\n#define __BD_SO_BROADCASTCENTER__\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <string>\n#include <cstring>\n#include <strings.h>\nconst int MAXDATASIZE = 256;\nnamespace bd_so {\n\tclass BroadcastCenter {\n\t\tprivate:\n\t\tbool is_sender; /// is a caster;\n\t\tbool is_casting; /// is sending broadcast \n\t\tbool is_receiving; /// is waiting broadcast\n\t\tvoid init_addr(); /// init sockets\n\t\tint socket_fd;\n\t\tstruct sockaddr_in my_addr,user_addr;\n\t\tchar buf[MAXDATASIZE];\n\t\tint so_broadcast = 1;\n\t\tchar my_ip[20];\n\t\tpublic:\n\t\tBroadcastCenter(bool is_s):is_sender(is_s) {\n\t\t\tinit_addr();\n\t\t}\t\t\n\t\tvoid startSend(std::string msg,std::string &server_ip); \n\t\tstatic void start_listen_thread(void);\n\t\tfriend void startReceiving(void *);\n\t};\n\tvoid startReceiving(void *);\n};\n\n#endif\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "Ġ__", "BD", "_", "SO", "_", "BR", "OAD", "C", "AS", "TC", "ENT", "ER", "__", "Ċ", "#", "define", "Ġ__", "BD", "_", "SO", "_", "BR", "OAD", "C", "AS", "TC", "ENT", "ER", "__", "Ċ", "#", "include", "Ġ<", "sys", "/", "socket", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "arp", "a", "/", "inet", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "#", "include", "Ġ<", "strings", ".", "h", ">", "Ċ", "const", "Ġint", "ĠMAX", "D", "AT", "AS", "IZE", "Ġ=", "Ġ256", ";", "Ċ", "names", "pace", "Ġb", "d", "_", "so", "Ġ{", "Ċ", "ĉ", "class", "ĠBroadcast", "Center", "Ġ{", "Ċ", "ĉ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "bool", "Ġis", "_", "s", "ender", ";", "Ġ///", "Ġis", "Ġa", "Ġcaster", ";", "Ċ", "ĉ", "ĉ", "bool", "Ġis", "_", "casting", ";", "Ġ///", "Ġis", "Ġsending", "Ġbroadcast", "Ġ", "Ċ", "ĉ", "ĉ", "bool", "Ġis", "_", "re", "ce", "iving", ";", "Ġ///", "Ġis", "Ġwaiting", "Ġbroadcast", "Ċ", "ĉ", "ĉ", "void", "Ġinit", "_", "addr", "();", "Ġ///", "Ġinit", "Ġsockets", "Ċ", "ĉ", "ĉ", "int", "Ġsocket", "_", "fd", ";", "Ċ", "ĉ", "ĉ", "struct", "Ġsock", "addr", "_", "in", "Ġmy", "_", "addr", ",", "user", "_", "addr", ";", "Ċ", "ĉ", "ĉ", "char", "Ġbuf", "[", "MAX", "D", "AT", "AS", "IZE", "];", "Ċ", "ĉ", "ĉ", "int", "Ġso", "_", "broad", "cast", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "char", "Ġmy", "_", "ip", "[", "20", "];", "Ċ", "ĉ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "Broad", "cast", "Center", "(", "bool", "Ġis", "_", "s", "):", "is", "_", "s", "ender", "(", "is", "_", "s", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "init", "_", "addr", "();", "Ċ", "ĉ", "ĉ", "}", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "void", "Ġstart", "Send", "(", "std", "::", "string", "Ġmsg", ",", "std", "::", "string", "Ġ&", "server", "_", "ip", ");", "Ġ", "Ċ", "ĉ", "ĉ", "static", "Ġvoid", "Ġstart", "_", "list", "en", "_", "thread", "(", "void", ");", "Ċ", "ĉ", "ĉ", "friend", "Ġvoid", "Ġstart", "Re", "ce", "iving", "(", "void", "Ġ*", ");", "Ċ", "ĉ", "};", "Ċ", "ĉ", "void", "Ġstart", "Re", "ce", "iving", "(", "void", "Ġ*", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["MAXDATASIZE", 11, "comesFrom", ["MAXDATASIZE"], [2]], ["is_s", 17, "comesFrom", ["is_s"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::181", "code": "#include <nan.h>\n\nusing namespace v8;\n\nNAN_METHOD(Length) {\n  Nan::MaybeLocal<String> maybeStr = Nan::To<String>(info[0]);\n  v8::Local<String> str;\n\n  if(maybeStr.ToLocal(&str) == false) {\n    Nan::ThrowError(\"Error converting first argument to string\");\n  }\n\n  int len = strlen(*String::Utf8Value(str));\n\n  info.GetReturnValue().Set(len);\n}\n\nNAN_MODULE_INIT(Init) {\n  Nan::Set(target, Nan::New(\"length\").ToLocalChecked(),\n      Nan::GetFunction(Nan::New<FunctionTemplate>(Delay)).ToLocalChecked());\n}\n\nNODE_MODULE(myaddon, Init)\n", "code_tokens": ["Ġ#", "include", "Ġ<", "nan", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġv", "8", ";", "Ċ", "Ċ", "N", "AN", "_", "METHOD", "(", "Length", ")", "Ġ{", "Ċ", "Ġ", "ĠNan", "::", "Maybe", "Local", "<", "String", ">", "Ġmaybe", "Str", "Ġ=", "ĠNan", "::", "To", "<", "String", ">(", "info", "[", "0", "]);", "Ċ", "Ġ", "Ġv", "8", "::", "Local", "<", "String", ">", "Ġstr", ";", "ĊĊ", "Ġ", "Ġif", "(", "maybe", "Str", ".", "To", "Local", "(&", "str", ")", "Ġ==", "Ġfalse", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNan", "::", "Throw", "Error", "(\"", "Error", "Ġconverting", "Ġfirst", "Ġargument", "Ġto", "Ġstring", "\");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġint", "Ġlen", "Ġ=", "Ġstr", "len", "(*", "String", "::", "Ut", "f", "8", "Value", "(", "str", "));", "ĊĊ", "Ġ", "Ġinfo", ".", "Get", "Return", "Value", "().", "Set", "(", "len", ");", "Ċ", "}", "Ċ", "Ċ", "N", "AN", "_", "MOD", "ULE", "_", "IN", "IT", "(", "Init", ")", "Ġ{", "Ċ", "Ġ", "ĠNan", "::", "Set", "(", "target", ",", "ĠNan", "::", "New", "(\"", "length", "\").", "To", "Local", "Check", "ed", "(),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠNan", "::", "Get", "Function", "(", "N", "an", "::", "New", "<", "Function", "Template", ">(", "Del", "ay", ")).", "To", "Local", "Check", "ed", "());", "Ċ", "}", "Ċ", "Ċ", "N", "ODE", "_", "MOD", "ULE", "(", "my", "addon", ",", "ĠInit", ")", "Ċ"], "dataflow_graph": [["maybeStr", 6, "comesFrom", ["maybeStr"], [2]], ["str", 8, "comesFrom", ["str"], [5]], ["str", 13, "comesFrom", ["str"], [5]], ["len", 17, "comesFrom", ["len"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::182", "code": "#include \"stage.h\"\n\n#include <assert.h>\n#include <map>\n#include <string>\n#include <vector>\n\n#include \"util.h\"\n\nstatic std::vector<std::string> stageStrings = {\"planning\", \"alpha\", \"beta\", \"release\", \"mature\", \"inactive\",\n        \"abandoned\", \"deleted\", \"unknown\"};\n\nstatic std::map<std::string, Stage> stageMap = std::map<std::string, Stage>();\nstatic std::map<Stage, std::string> stageMap2 = std::map<Stage, std::string>(); // idgaf anymore\n\nstatic void initMaps() {\n    if (stageMap.empty()) {\n        for (int i = Stage::kAlpha; i != Stage::kUnknown; i++) {\n            stageMap[stageStrings[i - Stage::kAlpha]] = (Stage) i;\n            stageMap2[(Stage) i] = stageStrings[i - Stage::kAlpha];\n        }\n    }\n}\n\nStage stageFromString(std::string str) {\n    initMaps();\n    if (stageMap.count(str) > 0) {\n        return stageMap[str];\n    } else {\n        return Stage::kUnknown;\n    }\n}\n\nstd::string stringFromStage(Stage stage) {\n    initMaps();\n    return stageMap2[stage];\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "stage", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", ".", "h", "\"", "Ċ", "Ċ", "static", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġstage", "Str", "ings", "Ġ=", "Ġ{\"", "plan", "ning", "\",", "Ġ\"", "alpha", "\",", "Ġ\"", "beta", "\",", "Ġ\"", "release", "\",", "Ġ\"", "m", "ature", "\",", "Ġ\"", "in", "active", "\",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "ab", "andon", "ed", "\",", "Ġ\"", "de", "leted", "\",", "Ġ\"", "unknown", "\"", "};", "Ċ", "Ċ", "static", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠStage", ">", "Ġstage", "Map", "Ġ=", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠStage", ">", "();", "Ċ", "static", "Ġstd", "::", "map", "<", "Stage", ",", "Ġstd", "::", "string", ">", "Ġstage", "Map", "2", "Ġ=", "Ġstd", "::", "map", "<", "Stage", ",", "Ġstd", "::", "string", ">", "();", "Ġ//", "Ġid", "g", "af", "Ġanymore", "Ċ", "Ċ", "static", "Ġvoid", "Ġinit", "Maps", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "stage", "Map", ".", "empty", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "ĠStage", "::", "k", "Alpha", ";", "Ġi", "Ġ!=", "ĠStage", "::", "k", "Unknown", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstage", "Map", "[", "stage", "Str", "ings", "[", "i", "Ġ-", "ĠStage", "::", "k", "Alpha", "]]", "Ġ=", "Ġ(", "Stage", ")", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstage", "Map", "2", "[", "(", "Stage", ")", "Ġi", "]", "Ġ=", "Ġstage", "Str", "ings", "[", "i", "Ġ-", "ĠStage", "::", "k", "Alpha", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Stage", "Ġstage", "From", "String", "(", "std", "::", "string", "Ġstr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "Maps", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "stage", "Map", ".", "count", "(", "str", ")", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstage", "Map", "[", "str", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠStage", "::", "k", "Unknown", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "Ġstring", "From", "Stage", "(", "Stage", "Ġstage", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "Maps", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstage", "Map", "2", "[", "stage", "];", "Ċ", "}", "Ċ"], "dataflow_graph": [["stageMap", 6, "comesFrom", ["stageMap"], [1]], ["stageMap", 13, "comesFrom", ["stageMap"], [1]], ["stageMap", 26, "comesFrom", ["stageMap"], [1]], ["stageMap", 29, "comesFrom", ["stageMap"], [1]], ["i", 10, "comesFrom", ["i"], [8]], ["i", 12, "comesFrom", ["i"], [8]], ["i", 15, "comesFrom", ["i"], [8]], ["i", 17, "comesFrom", ["i"], [8]], ["i", 19, "comesFrom", ["i"], [8]], ["i", 21, "comesFrom", ["i"], [8]], ["stageStrings", 14, "comesFrom", ["stageStrings"], [0]], ["stageStrings", 20, "comesFrom", ["stageStrings"], [0]], ["stageMap2", 18, "comesFrom", ["stageMap2"], [3]], ["stageMap2", 35, "comesFrom", ["stageMap2"], [3]], ["str", 28, "comesFrom", ["str"], [24]], ["str", 30, "comesFrom", ["str"], [24]], ["stage", 36, "comesFrom", ["stage"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::183", "code": "// Copyright (c) 2018 The PIVX developers\n// Distributed under the MIT/X11 software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"masternode-budget.h\"\n#include \"tinyformat.h\"\n#include \"utilmoneystr.h\"\n#include \"test_syndicate.h\"\n\n#include <boost/test/unit_test.hpp>\n\nBOOST_FIXTURE_TEST_SUITE(budget_tests, TestingSetup)\n\nvoid CheckBudgetValue(int nHeight, std::string strNetwork, CAmount nExpectedValue)\n{\n    CBudgetManager budget;\n    CAmount nBudget = budget.GetTotalBudget(nHeight);\n    std::string strError = strprintf(\"Budget is not as expected for %s. Result: %s, Expected: %s\", strNetwork, FormatMoney(nBudget), FormatMoney(nExpectedValue));\n    BOOST_CHECK_MESSAGE(nBudget == nExpectedValue, strError);\n}\n\nBOOST_AUTO_TEST_CASE(budget_value)\n{\n    SelectParams(CBaseChainParams::TESTNET);\n    int nHeightTest = Params().Zerocoin_Block_V2_Start() + 1;\n    CheckBudgetValue(nHeightTest, \"testnet\", 7300*COIN);\n\n    SelectParams(CBaseChainParams::MAIN);\n    nHeightTest = Params().Zerocoin_Block_V2_Start() + 1;\n    CheckBudgetValue(nHeightTest, \"mainnet\", 43200*COIN);\n}\n\nBOOST_AUTO_TEST_SUITE_END()\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2018", "ĠThe", "ĠP", "IV", "X", "Ġdevelopers", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠMIT", "/", "X", "11", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġaccompanying", "Ċ", "//", "Ġfile", "ĠCOP", "YING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "mas", "tern", "ode", "-", "budget", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "tiny", "format", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "money", "str", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "test", "_", "sy", "nd", "icate", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "unit", "_", "test", ".", "h", "pp", ">", "Ċ", "Ċ", "B", "OO", "ST", "_", "FIX", "T", "URE", "_", "T", "EST", "_", "SU", "ITE", "(", "budget", "_", "tests", ",", "ĠTesting", "Setup", ")", "Ċ", "Ċ", "void", "ĠCheck", "B", "udget", "Value", "(", "int", "Ġn", "Height", ",", "Ġstd", "::", "string", "Ġstr", "Network", ",", "ĠC", "Amount", "Ġn", "Ex", "pected", "Value", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCB", "udget", "Manager", "Ġbudget", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠC", "Amount", "Ġn", "B", "udget", "Ġ=", "Ġbudget", ".", "Get", "Total", "B", "udget", "(", "n", "Height", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġstr", "Error", "Ġ=", "Ġstr", "printf", "(\"", "B", "udget", "Ġis", "Ġnot", "Ġas", "Ġexpected", "Ġfor", "Ġ%", "s", ".", "ĠResult", ":", "Ġ%", "s", ",", "ĠEx", "pected", ":", "Ġ%", "s", "\",", "Ġstr", "Network", ",", "ĠFormat", "Money", "(", "n", "B", "udget", "),", "ĠFormat", "Money", "(", "n", "Ex", "pected", "Value", "));", "Ċ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "CHECK", "_", "M", "ES", "SA", "GE", "(", "n", "B", "udget", "Ġ==", "Ġn", "Ex", "pected", "Value", ",", "Ġstr", "Error", ");", "Ċ", "}", "Ċ", "Ċ", "B", "OO", "ST", "_", "AUT", "O", "_", "T", "EST", "_", "C", "ASE", "(", "budget", "_", "value", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSelect", "Par", "ams", "(", "C", "Base", "Chain", "Par", "ams", "::", "T", "EST", "NET", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", "Height", "Test", "Ġ=", "ĠPar", "ams", "().", "Z", "er", "oco", "in", "_", "Block", "_", "V", "2", "_", "Start", "()", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCheck", "B", "udget", "Value", "(", "n", "Height", "Test", ",", "Ġ\"", "test", "net", "\",", "Ġ7", "300", "*", "CO", "IN", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠSelect", "Par", "ams", "(", "C", "Base", "Chain", "Par", "ams", "::", "MA", "IN", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġn", "Height", "Test", "Ġ=", "ĠPar", "ams", "().", "Z", "er", "oco", "in", "_", "Block", "_", "V", "2", "_", "Start", "()", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCheck", "B", "udget", "Value", "(", "n", "Height", "Test", ",", "Ġ\"", "main", "net", "\",", "Ġ43", "200", "*", "CO", "IN", ");", "Ċ", "}", "Ċ", "Ċ", "B", "OO", "ST", "_", "AUT", "O", "_", "T", "EST", "_", "SU", "ITE", "_", "END", "()", "Ċ"], "dataflow_graph": [["budget", 9, "comesFrom", ["budget"], [7]], ["nHeight", 11, "comesFrom", ["nHeight"], [4]], ["strNetwork", 14, "comesFrom", ["strNetwork"], [5]], ["nBudget", 16, "comesFrom", ["nBudget"], [8]], ["nBudget", 20, "comesFrom", ["nBudget"], [8]], ["nExpectedValue", 18, "comesFrom", ["nExpectedValue"], [6]], ["nExpectedValue", 21, "comesFrom", ["nExpectedValue"], [6]], ["strError", 22, "comesFrom", ["strError"], [12]], ["nHeightTest", 30, "comesFrom", ["nHeightTest"], [26]], ["nHeightTest", 38, "comesFrom", ["nHeightTest"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::184", "code": "#include <chrono>\n#include <thread>\n\n#include \"./input.h\"\n#include \"../common/SharedState.h\"\n#include \"../common/Logger.h\"\n#include \"./FaceDetector.h\"\n\nusing namespace std;\n\nvoid inputLoop()\n{\n    SharedState& state = SharedState::getInstance();\n    Logger& logger = Logger::getInstance();\n    double posX = 0.5;\n\n    FaceDetector fd;\n    fd.load();\n\n    while(true)\n    {\n        if(state.isGameOver())\n            break;\n\n        bool isSmilingOld = fd.isSmiling;\n\n        fd.read();\n        fd.detect();\n\n        state.setHeadPositionX(fd.headPosX);\n        state.setHeadPositionY(fd.headPosY);\n\n        if (!isSmilingOld && fd.isSmiling)\n            state.pushCommand(Command::SHOOT);\n\n        this_thread::sleep_for(chrono::milliseconds(10));\n    }\n\n    fd.cleanup();\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "chron", "o", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "./", "input", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "common", "/", "Sh", "ared", "State", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "common", "/", "Log", "ger", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "./", "Face", "Det", "ector", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġinput", "Loop", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠShared", "State", "&", "Ġstate", "Ġ=", "ĠShared", "State", "::", "get", "Instance", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠLog", "ger", "&", "Ġlogger", "Ġ=", "ĠLog", "ger", "::", "get", "Instance", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġpos", "X", "Ġ=", "Ġ0", ".", "5", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠFace", "Det", "ector", "Ġf", "d", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġf", "d", ".", "load", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "true", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "state", ".", "is", "Game", "Over", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġis", "Sm", "iling", "Old", "Ġ=", "Ġf", "d", ".", "is", "Sm", "iling", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġf", "d", ".", "read", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġf", "d", ".", "det", "ect", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstate", ".", "set", "Head", "Position", "X", "(", "fd", ".", "head", "Pos", "X", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstate", ".", "set", "Head", "Position", "Y", "(", "fd", ".", "head", "Pos", "Y", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "is", "Sm", "iling", "Old", "Ġ&&", "Ġf", "d", ".", "is", "Sm", "iling", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstate", ".", "push", "Command", "(", "Command", "::", "SH", "O", "OT", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "_", "thread", "::", "sleep", "_", "for", "(", "chron", "o", "::", "mill", "isec", "onds", "(", "10", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġf", "d", ".", "clean", "up", "();", "Ċ", "}"], "dataflow_graph": [["fd", 8, "comesFrom", ["fd"], [7]], ["fd", 13, "comesFrom", ["fd"], [7]], ["fd", 15, "comesFrom", ["fd"], [7]], ["fd", 17, "comesFrom", ["fd"], [7]], ["fd", 21, "comesFrom", ["fd"], [7]], ["fd", 25, "comesFrom", ["fd"], [7]], ["fd", 28, "comesFrom", ["fd"], [7]], ["fd", 35, "comesFrom", ["fd"], [7]], ["isSmilingOld", 27, "comesFrom", ["isSmilingOld"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::185", "code": "#include <iostream>\n\nint main(int argc, char const *argv[])\n{\n    int i = 5, i2 = 20;\n    int *ptr1 = &i, *ptr2 = &i;\n    ptr1 = &i2;\n    *ptr2 = 10;\n    std::cout << i << \" \" << i2 << std::endl;\n    std::cout << *ptr1 << \" \" << *ptr2 << std::endl;\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġconst", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ5", ",", "Ġi", "2", "Ġ=", "Ġ20", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġ*", "ptr", "1", "Ġ=", "Ġ&", "i", ",", "Ġ*", "ptr", "2", "Ġ=", "Ġ&", "i", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġptr", "1", "Ġ=", "Ġ&", "i", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ*", "ptr", "2", "Ġ=", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġi", "2", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ*", "ptr", "1", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġ*", "ptr", "2", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["ptr1", 17, "comesFrom", ["ptr1"], [9]], ["i", 6, "comesFrom", ["i"], [3]], ["i", 8, "comesFrom", ["i"], [3]], ["i", 13, "comesFrom", ["i"], [3]], ["i2", 10, "comesFrom", ["i2"], [4]], ["i2", 14, "comesFrom", ["i2"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::186", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nlong long unsigned v[63], a, b;\n\nlong long unsigned S(long long unsigned n){\n\tif(!n) return 0;\n\tif((1LL<<((sizeof(long long)<<3) - __builtin_clzll(n)))-1 == n)\n\t\treturn v[(sizeof(long long)<<3) - __builtin_clzll(n)];\n\treturn v[(sizeof(long long)<<3) - __builtin_clzll(n)-1] + S(n^(1LL<<((sizeof(long long))<<3) - __builtin_clzll(n)-1)) + n - ((1LL << ((sizeof(long long)<<3) - __builtin_clzll(n)-1))-1);\n}\n\nint main(){\n\tv[0] = 0;\n\tfor(int i=1; i<63; i++)\n\t\tv[i] = (v[i-1]<<1) + (1LL<<(i-1));\n\twhile(scanf(\"%llu %llu\", &a, &b) != EOF)\n\t\tprintf(\"%llu\\n\", S(b)-S(a-1));\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "long", "Ġlong", "Ġunsigned", "Ġv", "[", "63", "],", "Ġa", ",", "Ġb", ";", "Ċ", "Ċ", "long", "Ġlong", "Ġunsigned", "ĠS", "(", "long", "Ġlong", "Ġunsigned", "Ġn", "){", "Ċ", "ĉ", "if", "(", "!", "n", ")", "Ġreturn", "Ġ0", ";", "Ċ", "ĉ", "if", "((", "1", "LL", "<<", "((", "size", "of", "(", "long", "Ġlong", ")", "<<", "3", ")", "Ġ-", "Ġ__", "built", "in", "_", "cl", "z", "ll", "(", "n", "))", ")-", "1", "Ġ==", "Ġn", ")", "Ċ", "ĉ", "ĉ", "return", "Ġv", "[", "(", "size", "of", "(", "long", "Ġlong", ")", "<<", "3", ")", "Ġ-", "Ġ__", "built", "in", "_", "cl", "z", "ll", "(", "n", ")", "];", "Ċ", "ĉ", "return", "Ġv", "[", "(", "size", "of", "(", "long", "Ġlong", ")", "<<", "3", ")", "Ġ-", "Ġ__", "built", "in", "_", "cl", "z", "ll", "(", "n", ")-", "1", "]", "Ġ+", "ĠS", "(", "n", "^", "(", "1", "LL", "<<", "((", "size", "of", "(", "long", "Ġlong", "))", "<<", "3", ")", "Ġ-", "Ġ__", "built", "in", "_", "cl", "z", "ll", "(", "n", ")-", "1", "))", "Ġ+", "Ġn", "Ġ-", "Ġ((", "1", "LL", "Ġ<<", "Ġ((", "size", "of", "(", "long", "Ġlong", ")", "<<", "3", ")", "Ġ-", "Ġ__", "built", "in", "_", "cl", "z", "ll", "(", "n", ")-", "1", "))", "-", "1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "v", "[", "0", "]", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "Ġi", "<", "63", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "v", "[", "i", "]", "Ġ=", "Ġ(", "v", "[", "i", "-", "1", "]", "<<", "1", ")", "Ġ+", "Ġ(", "1", "LL", "<<", "(", "i", "-", "1", "));", "Ċ", "ĉ", "while", "(", "scan", "f", "(\"", "%", "ll", "u", "Ġ%", "ll", "u", "\",", "Ġ&", "a", ",", "Ġ&", "b", ")", "Ġ!=", "ĠE", "OF", ")", "Ċ", "ĉ", "ĉ", "printf", "(\"", "%", "ll", "u", "\\", "n", "\",", "ĠS", "(", "b", ")-", "S", "(", "a", "-", "1", "));", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [5]], ["n", 8, "comesFrom", ["n"], [5]], ["n", 9, "comesFrom", ["n"], [5]], ["n", 12, "comesFrom", ["n"], [5]], ["n", 15, "comesFrom", ["n"], [5]], ["n", 17, "comesFrom", ["n"], [5]], ["n", 19, "comesFrom", ["n"], [5]], ["n", 20, "comesFrom", ["n"], [5]], ["n", 22, "comesFrom", ["n"], [5]], ["i", 26, "comesFrom", ["i"], [25]], ["i", 27, "comesFrom", ["i"], [25]], ["i", 29, "comesFrom", ["i"], [25]], ["i", 31, "comesFrom", ["i"], [25]], ["i", 32, "comesFrom", ["i"], [25]], ["a", 34, "comesFrom", ["a"], [2]], ["a", 41, "comesFrom", ["a"], [2]], ["b", 35, "comesFrom", ["b"], [3]], ["b", 39, "comesFrom", ["b"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::187", "code": "#include <iostream>\n#include <locale>\n#include <sstream>\n#include \"hash.h\"\n#include \"bloomierHasher.h\"\n\nusing namespace std;\n\nnamespace bloomier\n{\n\nvoid BloomierHasher::getNeighborhood(string key, unsigned char result[])\n{\n    Hash::getHash(key, hashSeed, m, k, result);\n    // for (int i = 0; i < k; i++)\n    // {\n    //     cout << result[i] << endl;\n    // }\n}\n\nvoid BloomierHasher::getM(string key, unsigned char array[], int byteSize)\n{\n    locale loc;\n    const collate<char>& coll = use_facet<collate<char> >(loc);\n    int seed = coll.hash(key.data(),key.data()+key.length());\n    srand (seed);\n    for (int i = 0; i < byteSize; i++)\n        array[i] = rand() % 255;\n}\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "loc", "ale", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ\"", "hash", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "bl", "oom", "ier", "Has", "her", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "names", "pace", "Ġbloom", "ier", "Ċ", "{", "Ċ", "Ċ", "void", "ĠBloom", "ier", "Has", "her", "::", "get", "Neigh", "bor", "hood", "(", "string", "Ġkey", ",", "Ġunsigned", "Ġchar", "Ġresult", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠHash", "::", "get", "Hash", "(", "key", ",", "Ġhash", "S", "eed", ",", "Ġm", ",", "Ġk", ",", "Ġresult", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġk", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġresult", "[", "i", "]", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBloom", "ier", "Has", "her", "::", "get", "M", "(", "string", "Ġkey", ",", "Ġunsigned", "Ġchar", "Ġarray", "[", "],", "Ġint", "Ġbyte", "Size", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlocale", "Ġloc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġcoll", "ate", "<", "char", ">", "&", "Ġcoll", "Ġ=", "Ġuse", "_", "f", "acet", "<", "coll", "ate", "<", "char", ">", "Ġ>", "(", "loc", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġseed", "Ġ=", "Ġcoll", ".", "hash", "(", "key", ".", "data", "(),", "key", ".", "data", "()", "+", "key", ".", "length", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsr", "and", "Ġ(", "seed", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġbyte", "Size", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġarray", "[", "i", "]", "Ġ=", "Ġrand", "()", "Ġ%", "Ġ255", ";", "Ċ", "}", "Ċ", "}"], "dataflow_graph": [["key", 5, "comesFrom", ["key"], [2]], ["key", 21, "comesFrom", ["key"], [11]], ["key", 23, "comesFrom", ["key"], [11]], ["key", 25, "comesFrom", ["key"], [11]], ["loc", 17, "comesFrom", ["loc"], [14]], ["seed", 28, "comesFrom", ["seed"], [18]], ["i", 30, "comesFrom", ["i"], [29]], ["i", 32, "comesFrom", ["i"], [29]], ["i", 34, "comesFrom", ["i"], [29]], ["byteSize", 31, "comesFrom", ["byteSize"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::188", "code": "#include <iostream>\n#include <algorithm>\n#include <numeric>\n\n/*\n * 原来是自己在初始化f数组时长度没有指定好。233\n */\n\nusing namespace std;\n\nint T, n;\nint coins[105];\nint f[50005];\n\nint main() {\n    cin >> T;\n    while (T-- > 0) {\n        cin >> n;\n        fill(f, f + 50005, 0);\n        for (int i = 0; i < n; ++i)\n            cin >> coins[i];\n        int total = accumulate(coins, coins + n, 0);\n        for (int i = 0; i < n; ++i)\n            for (int j = total / 2; j - coins[i] >= 0; --j)\n                f[j] = max(f[j], f[j - coins[i]] + coins[i]);\n        cout << total - 2 * f[total / 2] << endl;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "n", "umeric", ">", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ġå", "İ", "Ł", "æĿ", "¥", "æĺ¯", "è", "ĩ", "ª", "å·", "±", "åľ", "¨", "åĪ", "Ŀ", "å§", "ĭ", "åĮ", "ĸ", "f", "æķ", "°", "ç", "»", "Ħ", "æĹ", "¶", "é", "ķ", "¿", "åº", "¦", "æ", "²", "¡", "æľ", "ī", "æ", "Į", "ĩ", "å®", "ļ", "å¥", "½", "ãĢĤ", "233", "Ċ", "Ġ*/", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "ĠT", ",", "Ġn", ";", "Ċ", "int", "Ġcoins", "[", "105", "];", "Ċ", "int", "Ġf", "[", "5000", "5", "];", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "ĠT", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "T", "--", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfill", "(", "f", ",", "Ġf", "Ġ+", "Ġ5000", "5", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġcoins", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtotal", "Ġ=", "Ġaccumulate", "(", "coins", ",", "Ġcoins", "Ġ+", "Ġn", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġtotal", "Ġ/", "Ġ2", ";", "Ġj", "Ġ-", "Ġcoins", "[", "i", "]", "Ġ>=", "Ġ0", ";", "Ġ--", "j", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġf", "[", "j", "]", "Ġ=", "Ġmax", "(", "f", "[", "j", "],", "Ġf", "[", "j", "Ġ-", "Ġcoins", "[", "i", "]]", "Ġ+", "Ġcoins", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġtotal", "Ġ-", "Ġ2", "Ġ*", "Ġf", "[", "total", "Ġ/", "Ġ2", "]", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["T", 7, "comesFrom", ["T"], [1]], ["T", 8, "comesFrom", ["T"], [1]], ["n", 10, "comesFrom", ["n"], [2]], ["n", 16, "comesFrom", ["n"], [2]], ["n", 25, "comesFrom", ["n"], [2]], ["n", 28, "comesFrom", ["n"], [2]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 17, "comesFrom", ["i"], [14]], ["i", 20, "comesFrom", ["i"], [14]], ["i", 27, "comesFrom", ["i"], [26]], ["i", 29, "comesFrom", ["i"], [26]], ["i", 34, "comesFrom", ["i"], [26]], ["i", 44, "comesFrom", ["i"], [26]], ["i", 46, "comesFrom", ["i"], [26]], ["total", 31, "comesFrom", ["total"], [21]], ["total", 48, "comesFrom", ["total"], [21]], ["total", 50, "comesFrom", ["total"], [21]], ["j", 32, "comesFrom", ["j"], [30]], ["j", 35, "comesFrom", ["j"], [30]], ["j", 37, "comesFrom", ["j"], [30]], ["j", 40, "comesFrom", ["j"], [30]], ["j", 42, "comesFrom", ["j"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::189", "code": "#include <sys/time.h>\n#include <pangomm/init.h>\n#include \"pbd/compose.h\"\n#include \"pbd/xml++.h\"\n#include \"canvas/group.h\"\n#include \"canvas/canvas.h\"\n#include \"canvas/root_group.h\"\n#include \"canvas/rectangle.h\"\n#include \"benchmark.h\"\n\nusing namespace std;\nusing namespace Canvas;\n\nclass RenderFromLog : public Benchmark\n{\npublic:\n\tRenderFromLog (string const & session) : Benchmark (session) {}\n\n\tvoid do_run (ImageCanvas& canvas)\n\t{\n\t\tcanvas.set_log_renders (false);\n\n\t\tlist<Rect> const & renders = canvas.renders ();\n\t\t\n\t\tfor (list<Rect>::const_iterator i = renders.begin(); i != renders.end(); ++i) {\n\t\t\tcanvas.render_to_image (*i);\n\t\t}\n\t}\n};\n\nint main (int argc, char* argv[])\n{\n\tif (argc < 2) {\n\t\tcerr << \"Syntax: render_parts <session>\\n\";\n\t\texit (EXIT_FAILURE);\n\t}\n\n\tPango::init ();\n\n\tRenderFromLog render_from_log (argv[1]);\n\tcout << render_from_log.run () << \"\\n\";\n\n\treturn 0;\n}\n\n\t\n", "code_tokens": ["Ġ#", "include", "Ġ<", "sys", "/", "time", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "p", "ang", "omm", "/", "init", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "p", "bd", "/", "com", "pose", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "p", "bd", "/", "xml", "++", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "can", "vas", "/", "group", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "can", "vas", "/", "can", "vas", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "can", "vas", "/", "root", "_", "group", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "can", "vas", "/", "rect", "angle", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "bench", "mark", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "ĠCan", "vas", ";", "Ċ", "Ċ", "class", "ĠRender", "From", "Log", "Ġ:", "Ġpublic", "ĠBench", "mark", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "Render", "From", "Log", "Ġ(", "string", "Ġconst", "Ġ&", "Ġsession", ")", "Ġ:", "ĠBench", "mark", "Ġ(", "session", ")", "Ġ{}", "ĊĊ", "ĉ", "void", "Ġdo", "_", "run", "Ġ(", "Image", "Can", "vas", "&", "Ġcanvas", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "can", "vas", ".", "set", "_", "log", "_", "rend", "ers", "Ġ(", "false", ");", "ĊĊ", "ĉ", "ĉ", "list", "<", "Rect", ">", "Ġconst", "Ġ&", "Ġrenders", "Ġ=", "Ġcanvas", ".", "rend", "ers", "Ġ();", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "list", "<", "Rect", ">", "::", "const", "_", "iterator", "Ġi", "Ġ=", "Ġrenders", ".", "begin", "();", "Ġi", "Ġ!=", "Ġrenders", ".", "end", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "can", "vas", ".", "render", "_", "to", "_", "image", "Ġ(*", "i", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "arg", "c", "Ġ<", "Ġ2", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cer", "r", "Ġ<<", "Ġ\"", "Sy", "ntax", ":", "Ġrender", "_", "parts", "Ġ<", "session", ">", "\\", "n", "\";", "Ċ", "ĉ", "ĉ", "exit", "Ġ(", "EX", "IT", "_", "FA", "IL", "URE", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "P", "ango", "::", "init", "Ġ();", "ĊĊ", "ĉ", "Render", "From", "Log", "Ġrender", "_", "from", "_", "log", "Ġ(", "arg", "v", "[", "1", "]);", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġrender", "_", "from", "_", "log", ".", "run", "Ġ()", "Ġ<<", "Ġ\"\\", "n", "\";", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ", "ĉ", "Ċ"], "dataflow_graph": [["i", 16, "comesFrom", ["i"], [13]], ["i", 19, "comesFrom", ["i"], [13]], ["i", 22, "comesFrom", ["i"], [13]], ["argc", 26, "comesFrom", ["argc"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::190", "code": "/*\n * JSExceptionArgNoBool.cpp\n *\n *  Created on: 15/gen/2015\n *      Author: Paolo Achdjian\n */\n\n#include <sstream>\n\n#include \"JSExceptionArgNoBool.h\"\n\nnamespace zigbee {\n\nJSExceptionArgNoBool::JSExceptionArgNoBool() {\n\tstd::stringstream stream;\n\tstream << \"Invalid parameter: expected an argument of type boolean\";\n\tmessage = stream.str();\n\n}\n\nJSExceptionArgNoBool::~JSExceptionArgNoBool() {\n}\n\n} /* namespace zigbee */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠJS", "Exception", "Arg", "No", "B", "ool", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ15", "/", "gen", "/", "2015", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "ĠPa", "olo", "ĠAch", "dj", "ian", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "JS", "Exception", "Arg", "No", "B", "ool", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġz", "ig", "bee", "Ġ{", "Ċ", "Ċ", "JS", "Exception", "Arg", "No", "B", "ool", "::", "JS", "Exception", "Arg", "No", "B", "ool", "()", "Ġ{", "Ċ", "ĉ", "std", "::", "string", "stream", "Ġstream", ";", "Ċ", "ĉ", "stream", "Ġ<<", "Ġ\"", "Invalid", "Ġparameter", ":", "Ġexpected", "Ġan", "Ġargument", "Ġof", "Ġtype", "Ġboolean", "\";", "Ċ", "ĉ", "message", "Ġ=", "Ġstream", ".", "str", "();", "Ċ", "Ċ", "}", "Ċ", "Ċ", "JS", "Exception", "Arg", "No", "B", "ool", "::", "~", "JS", "Exception", "Arg", "No", "B", "ool", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġz", "ig", "bee", "Ġ*/", "Ċ"], "dataflow_graph": [["stream", 2, "comesFrom", ["stream"], [1]], ["stream", 4, "comesFrom", ["stream"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::191", "code": "#include <cstdio>\nint b[8] = {0,1,10,11,100,101,110,111};\nint main()\n{\n    char c = getchar();\n    printf(\"%d\", b[c-'0']);\n    while((c = getchar()) != '\\n')\n        printf(\"%03d\", b[c-'0']);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "int", "Ġb", "[", "8", "]", "Ġ=", "Ġ{", "0", ",", "1", ",", "10", ",", "11", ",", "100", ",", "101", ",", "110", ",", "111", "};", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġc", "Ġ=", "Ġget", "char", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\",", "Ġb", "[", "c", "-'", "0", "']", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "((", "c", "Ġ=", "Ġget", "char", "())", "Ġ!=", "Ġ'", "\\", "n", "')", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "03", "d", "\",", "Ġb", "[", "c", "-'", "0", "']", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["c", 6, "comesFrom", ["c"], [2]], ["c", 11, "comesFrom", ["c"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::192", "code": "#include <gtkmm/application.h>\n#include <gtkmm/window.h>\n#include <glibmm/main.h>\n\n#include \"MyArea.h\"\n\nint main(int argc, char** argv) {\n\tauto app = Gtk::Application::create(argc, argv, \"org.gtkmm.example\");\n\tGtk::Window win;\n\twin.set_title(\"Cairo example\");\n\tMyArea my_area;\n\twin.add(my_area);\n\tmy_area.show();\n\treturn app->run(win);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "gt", "k", "mm", "/", "application", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "gt", "k", "mm", "/", "window", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "gl", "ib", "mm", "/", "main", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "My", "Area", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġapp", "Ġ=", "ĠG", "tk", "::", "Application", "::", "create", "(", "arg", "c", ",", "Ġarg", "v", ",", "Ġ\"", "org", ".", "gt", "k", "mm", ".", "example", "\");", "Ċ", "ĉ", "G", "tk", "::", "Window", "Ġwin", ";", "Ċ", "ĉ", "win", ".", "set", "_", "title", "(\"", "C", "airo", "Ġexample", "\");", "Ċ", "ĉ", "My", "Area", "Ġmy", "_", "area", ";", "Ċ", "ĉ", "win", ".", "add", "(", "my", "_", "area", ");", "Ċ", "ĉ", "my", "_", "area", ".", "show", "();", "Ċ", "ĉ", "return", "Ġapp", "->", "run", "(", "win", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 5, "comesFrom", ["argc"], [1]], ["win", 8, "comesFrom", ["win"], [7]], ["win", 11, "comesFrom", ["win"], [7]], ["win", 18, "comesFrom", ["win"], [7]], ["my_area", 13, "comesFrom", ["my_area"], [10]], ["my_area", 14, "comesFrom", ["my_area"], [10]], ["app", 16, "comesFrom", ["app"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::193", "code": "#include <vector>\n#include <iostream>\n#include <iomanip>\n#include \"drvg.hpp\"\n#include \"random.hpp\"\n#include \"timer.hpp\"\n\nusing namespace std;\nusing namespace wat;\n\ntemplate<typename T>\nvoid test(const vector<double>& prob, int number)\n{\n    T ge(prob.begin(), prob.end());\n    std::vector<int> sum(prob.size());\n    timer ti;\n    ti.start();\n    for (int i = 0; i < number; ++i)\n    {\n        ++sum[ge()];\n    }\n    ti.stop();\n    std::cout << std::setw(11) << ti.time() << std::endl;\n}\n\nint main()\n{\n    vector<double> prob;\n    int size = 100000;\n    int number = 1000000;\n    for (int i = 0; i < size; ++i)\n    {\n        prob.push_back(wat::random_01());\n    }\n    std::cout << std::setw(23) << \"sequential search:\" << \" size=\" << number / 100;\n    test<drvg_sequential_search>(prob, number / 100);\n    std::cout << std::setw(23) << \"binary search:\" << \" size=\" << number;\n    test<drvg_binary_search>(prob, number);\n    return 0;\n};\n", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "i", "oman", "ip", ">", "Ċ", "#", "include", "Ġ\"", "dr", "vg", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "random", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "timer", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "Ġwat", ";", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "void", "Ġtest", "(", "const", "Ġvector", "<", "double", ">", "&", "Ġprob", ",", "Ġint", "Ġnumber", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠT", "Ġge", "(", "pro", "b", ".", "begin", "(),", "Ġprob", ".", "end", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġsum", "(", "pro", "b", ".", "size", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtimer", "Ġti", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġti", ".", "start", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnumber", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "sum", "[", "ge", "()", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġti", ".", "stop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġstd", "::", "set", "w", "(", "11", ")", "Ġ<<", "Ġti", ".", "time", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "double", ">", "Ġprob", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsize", "Ġ=", "Ġ100", "000", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġnumber", "Ġ=", "Ġ100", "0000", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġsize", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprob", ".", "push", "_", "back", "(", "wat", "::", "random", "_", "01", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġstd", "::", "set", "w", "(", "23", ")", "Ġ<<", "Ġ\"", "sequ", "ential", "Ġsearch", ":\"", "Ġ<<", "Ġ\"", "Ġsize", "=\"", "Ġ<<", "Ġnumber", "Ġ/", "Ġ100", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "<", "dr", "vg", "_", "sequ", "ential", "_", "search", ">(", "pro", "b", ",", "Ġnumber", "Ġ/", "Ġ100", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġstd", "::", "set", "w", "(", "23", ")", "Ġ<<", "Ġ\"", "binary", "Ġsearch", ":\"", "Ġ<<", "Ġ\"", "Ġsize", "=\"", "Ġ<<", "Ġnumber", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "<", "dr", "vg", "_", "binary", "_", "search", ">(", "pro", "b", ",", "Ġnumber", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "};", "Ċ"], "dataflow_graph": [["prob", 37, "comesFrom", ["prob"], [30]], ["prob", 44, "comesFrom", ["prob"], [30]], ["prob", 50, "comesFrom", ["prob"], [30]], ["size", 35, "comesFrom", ["size"], [31]], ["ti", 14, "comesFrom", ["ti"], [13]], ["ti", 22, "comesFrom", ["ti"], [13]], ["ti", 26, "comesFrom", ["ti"], [13]], ["i", 17, "comesFrom", ["i"], [16]], ["i", 19, "comesFrom", ["i"], [16]], ["i", 34, "comesFrom", ["i"], [33]], ["i", 36, "comesFrom", ["i"], [33]], ["number", 18, "comesFrom", ["number"], [4]], ["number", 42, "comesFrom", ["number"], [32]], ["number", 45, "comesFrom", ["number"], [32]], ["number", 48, "comesFrom", ["number"], [32]], ["number", 51, "comesFrom", ["number"], [32]], ["sum", 20, "comesFrom", ["sum"], [10]], ["ge", 21, "comesFrom", ["ge"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::194", "code": "/*\n * PT2314PreAmp.cpp\n *\n *  Created on: 28.12.2017\n *      Author: wmarkowski\n */\n\n#include \"PT2314PreAmp.h\"\n\nPT2314PreAmp::PT2314PreAmp(PT2314 *pt2314)\n{\n   this->pt2314 = pt2314;\n   this->volume = 0;\n   this->inputChannel = 0;\n}\n\nvoid PT2314PreAmp::setVolume(uint8_t newVolume)\n{\n   if (getVolume() == newVolume)\n   {\n      return;\n   }\n\n   this->volume = newVolume;\n   pt2314->volume(newVolume);\n}\n\nuint8_t PT2314PreAmp::getVolume()\n{\n   return volume;\n}\n\nvoid PT2314PreAmp::setInputChannel(uint8_t channel)\n{\n   this->inputChannel = channel;\n   pt2314->channel(channel);\n}\n\nuint8_t PT2314PreAmp::getInputChannel()\n{\n   return inputChannel;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠPT", "23", "14", "Pre", "A", "mp", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ28", ".", "12", ".", "2017", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "Ġw", "mark", "owski", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "PT", "23", "14", "Pre", "A", "mp", ".", "h", "\"", "Ċ", "Ċ", "PT", "23", "14", "Pre", "A", "mp", "::", "PT", "23", "14", "Pre", "A", "mp", "(", "PT", "23", "14", "Ġ*", "pt", "23", "14", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġthis", "->", "pt", "23", "14", "Ġ=", "Ġpt", "23", "14", ";", "Ċ", "Ġ", "Ġ", "Ġthis", "->", "volume", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġthis", "->", "input", "Channel", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPT", "23", "14", "Pre", "A", "mp", "::", "set", "Volume", "(", "uint", "8", "_", "t", "Ġnew", "Volume", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġif", "Ġ(", "get", "Volume", "()", "Ġ==", "Ġnew", "Volume", ")", "Ċ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġthis", "->", "volume", "Ġ=", "Ġnew", "Volume", ";", "Ċ", "Ġ", "Ġ", "Ġpt", "23", "14", "->", "volume", "(", "new", "Volume", ");", "Ċ", "}", "Ċ", "Ċ", "uint", "8", "_", "t", "ĠPT", "23", "14", "Pre", "A", "mp", "::", "get", "Volume", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġvolume", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPT", "23", "14", "Pre", "A", "mp", "::", "set", "Input", "Channel", "(", "uint", "8", "_", "t", "Ġchannel", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġthis", "->", "input", "Channel", "Ġ=", "Ġchannel", ";", "Ċ", "Ġ", "Ġ", "Ġpt", "23", "14", "->", "channel", "(", "channel", ");", "Ċ", "}", "Ċ", "Ċ", "uint", "8", "_", "t", "ĠPT", "23", "14", "Pre", "A", "mp", "::", "get", "Input", "Channel", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġinput", "Channel", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["newVolume", 9, "comesFrom", ["newVolume"], [7]], ["newVolume", 11, "comesFrom", ["newVolume"], [7]], ["newVolume", 14, "comesFrom", ["newVolume"], [7]], ["channel", 20, "comesFrom", ["channel"], [18]], ["channel", 22, "comesFrom", ["channel"], [18]], ["channel", 23, "comesFrom", ["channel"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::195", "code": "#include \"button.h\"\n#include \"util.h\"\n\nnamespace GUI\n{\n\nvoid ZCGtkButton::onClick(GtkButton*, ZCGtkButton* btn)\n{\n    btn->onClickFunc();\n}\n\nZCGtkButton::ZCGtkButton(const std::string& text, boost::function<void(void)> c):\n    onClickFunc(c)\n{\n    std::string mod=convertMnemonic(text);\n    button=gtk_button_new_with_mnemonic(mod.c_str());\n    gtk_widget_set_halign(button, GTK_ALIGN_CENTER);\n    gtk_widget_set_valign(button, GTK_ALIGN_START);\n    g_signal_connect(button, \"destroy\", G_CALLBACK(gtk_widget_destroyed), &button);\n    g_signal_connect(button, \"clicked\", G_CALLBACK(onClick), this);\n}\n\nGtkWidget* ZCGtkButton::get()\n{\n    return button;\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "button", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠGUI", "Ċ", "{", "Ċ", "Ċ", "void", "ĠZ", "CG", "tk", "Button", "::", "on", "Click", "(", "G", "tk", "Button", "*,", "ĠZ", "CG", "tk", "Button", "*", "Ġb", "tn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "tn", "->", "on", "Click", "F", "unc", "();", "Ċ", "}", "Ċ", "Ċ", "Z", "CG", "tk", "Button", "::", "Z", "CG", "tk", "Button", "(", "const", "Ġstd", "::", "string", "&", "Ġtext", ",", "Ġboost", "::", "function", "<", "void", "(", "void", ")", ">", "Ġc", "):", "Ċ", "Ġ", "Ġ", "Ġ", "Ġon", "Click", "F", "unc", "(", "c", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġmod", "=", "con", "vert", "M", "n", "emonic", "(", "text", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbutton", "=", "gt", "k", "_", "button", "_", "new", "_", "with", "_", "mn", "emonic", "(", "mod", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġg", "tk", "_", "widget", "_", "set", "_", "hal", "ign", "(", "button", ",", "ĠGT", "K", "_", "AL", "IGN", "_", "CENT", "ER", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġg", "tk", "_", "widget", "_", "set", "_", "val", "ign", "(", "button", ",", "ĠGT", "K", "_", "AL", "IGN", "_", "ST", "ART", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġg", "_", "sign", "al", "_", "connect", "(", "button", ",", "Ġ\"", "destroy", "\",", "ĠG", "_", "C", "ALL", "BACK", "(", "gt", "k", "_", "widget", "_", "destroy", "ed", "),", "Ġ&", "button", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġg", "_", "sign", "al", "_", "connect", "(", "button", ",", "Ġ\"", "cl", "icked", "\",", "ĠG", "_", "C", "ALL", "BACK", "(", "on", "Click", "),", "Ġthis", ");", "Ċ", "}", "Ċ", "Ċ", "G", "tk", "Widget", "*", "ĠZ", "CG", "tk", "Button", "::", "get", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġbutton", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["c", 8, "comesFrom", ["c"], [6]], ["mod", 14, "comesFrom", ["mod"], [9]], ["button", 17, "comesFrom", ["button"], [12]], ["button", 20, "comesFrom", ["button"], [12]], ["button", 23, "comesFrom", ["button"], [12]], ["button", 26, "comesFrom", ["button"], [12]], ["button", 28, "comesFrom", ["button"], [12]], ["button", 32, "comesFrom", ["button"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::196", "code": "/* ---------------------------------------------------------------------------\n * Programa: lee_lineas\n * Entradas: Una serie de líneas de texto\n * Salidas:  - La línea más larga (si no se introduce ninguna se muestra una cadena vacía)\n *           - La línea menor lexicográficamente (si no se introduce ninguna se\n *             muestra la cadena FIN)\n * --------------------------------------------------------------------------- */\n\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main ()\n{\n\tconst string CENTINELA = \"FIN\";\n\tstring masLarga = \"\"; // tiene longitud 0\n\tstring linea;\n\n\tcout << \"Introduzca una línea (\" << CENTINELA << \" para acabar): \";\n\tgetline (cin, linea);\n\tstring menor = linea; // se inicia la menor a la primera línea leída\n\twhile (linea != CENTINELA) {\n\t\tif (linea.length () > masLarga.length ())\n\t\t\tmasLarga = linea;\n\t\tif (linea < menor)\n\t\t\tmenor = linea;\n\t\tcout << \"Introduzca una línea (\" << CENTINELA << \" para acabar): \";\n\t\tgetline (cin, linea);\n\t}\n\n\tcout << \"Línea más larga: \" << masLarga << endl;\n\tcout << \"Línea menor lexicográficamente: \" << menor << endl;\n\treturn 0;\n}\n", "code_tokens": ["Ġ/*", "Ġ----------------------------------------------------------------", "-----------", "Ċ", "Ġ*", "ĠProgram", "a", ":", "Ġle", "e", "_", "line", "as", "Ċ", "Ġ*", "ĠEnt", "rad", "as", ":", "ĠUn", "a", "Ġser", "ie", "Ġde", "Ġl", "ÃŃ", "ne", "as", "Ġde", "Ġtext", "o", "Ċ", "Ġ*", "ĠSal", "idas", ":", "Ġ", "Ġ-", "ĠLa", "Ġl", "ÃŃ", "nea", "Ġm", "Ã¡s", "Ġlarg", "a", "Ġ(", "si", "Ġno", "Ġse", "Ġintroduce", "Ġn", "ing", "una", "Ġse", "Ġmu", "est", "ra", "Ġun", "a", "Ġcad", "ena", "Ġvac", "ÃŃa", ")", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ-", "ĠLa", "Ġl", "ÃŃ", "nea", "Ġmen", "or", "Ġlex", "ic", "og", "r", "Ã¡", "f", "ic", "ament", "e", "Ġ(", "si", "Ġno", "Ġse", "Ġintroduce", "Ġn", "ing", "una", "Ġse", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmu", "est", "ra", "Ġla", "Ġcad", "ena", "ĠFIN", ")", "Ċ", "Ġ*", "Ġ----------------------------------------------------------------", "-----------", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "ĉ", "const", "Ġstring", "ĠCENT", "IN", "EL", "A", "Ġ=", "Ġ\"", "FIN", "\";", "Ċ", "ĉ", "string", "Ġmas", "L", "arg", "a", "Ġ=", "Ġ\"", "\";", "Ġ//", "Ġti", "ene", "Ġlong", "itud", "Ġ0", "Ċ", "ĉ", "string", "Ġline", "a", ";", "ĊĊ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Introdu", "z", "ca", "Ġun", "a", "Ġl", "ÃŃ", "nea", "Ġ(\"", "Ġ<<", "ĠCENT", "IN", "EL", "A", "Ġ<<", "Ġ\"", "Ġpara", "Ġac", "ab", "ar", "):", "Ġ\"", ";", "Ċ", "ĉ", "get", "line", "Ġ(", "cin", ",", "Ġline", "a", ");", "Ċ", "ĉ", "string", "Ġmen", "or", "Ġ=", "Ġline", "a", ";", "Ġ//", "Ġse", "Ġin", "icia", "Ġla", "Ġmen", "or", "Ġa", "Ġla", "Ġprim", "era", "Ġl", "ÃŃ", "nea", "Ġle", "ÃŃ", "da", "Ċ", "ĉ", "while", "Ġ(", "line", "a", "Ġ!=", "ĠCENT", "IN", "EL", "A", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "line", "a", ".", "length", "Ġ()", "Ġ>", "Ġmas", "L", "arg", "a", ".", "length", "Ġ())", "Ċ", "ĉ", "ĉ", "ĉ", "mas", "L", "arg", "a", "Ġ=", "Ġline", "a", ";", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "line", "a", "Ġ<", "Ġmen", "or", ")", "Ċ", "ĉ", "ĉ", "ĉ", "men", "or", "Ġ=", "Ġline", "a", ";", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Introdu", "z", "ca", "Ġun", "a", "Ġl", "ÃŃ", "nea", "Ġ(\"", "Ġ<<", "ĠCENT", "IN", "EL", "A", "Ġ<<", "Ġ\"", "Ġpara", "Ġac", "ab", "ar", "):", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "get", "line", "Ġ(", "cin", ",", "Ġline", "a", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "L", "ÃŃ", "nea", "Ġm", "Ã¡s", "Ġlarg", "a", ":", "Ġ\"", "Ġ<<", "Ġmas", "L", "arg", "a", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "L", "ÃŃ", "nea", "Ġmen", "or", "Ġlex", "ic", "og", "r", "Ã¡", "f", "ic", "ament", "e", ":", "Ġ\"", "Ġ<<", "Ġmen", "or", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["CENTINELA", 6, "comesFrom", ["CENTINELA"], [2]], ["CENTINELA", 13, "comesFrom", ["CENTINELA"], [2]], ["CENTINELA", 25, "comesFrom", ["CENTINELA"], [2]], ["linea", 9, "comesFrom", ["linea"], [4]], ["linea", 12, "comesFrom", ["linea"], [11]], ["linea", 14, "comesFrom", ["linea"], [11]], ["linea", 19, "comesFrom", ["linea"], [11]], ["linea", 20, "comesFrom", ["linea"], [11]], ["linea", 23, "comesFrom", ["linea"], [11]], ["linea", 28, "comesFrom", ["linea"], [11]], ["masLarga", 16, "comesFrom", ["masLarga"], [3]], ["masLarga", 30, "comesFrom", ["masLarga"], [18]], ["menor", 21, "comesFrom", ["menor"], [10]], ["menor", 33, "comesFrom", ["menor"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::197", "code": "#include<iostream>\nusing namespace std;\nint main()\n{\n\tint a,d,x[20],y[20],a1,temp,i,j;\n\twhile(1)\n\t{\n\t\ta1=20000;\n\t\tcin>>a>>d;\n\t\tif(a==0 & d==0)\n\t\t\tbreak;\n\t\tfor(i=0;i<a;i++)\n\t\t{\n\t\t\tcin>>x[i];\n\t\t\tif(x[i]<a1)\n\t\t\t\ta1=x[i];\n\t\t}\n\t\tfor(i=0;i<d;i++)\n\t\t{\n\t\t\tcin>>y[i];\n\t\t}\n\t\tfor(i=0;i<2;i++)\n\t\t{\n\t\t\tfor(j=i+1;j<d;j++)\n\t\t\t{\n\t\t\t\tif(y[i]>y[j])\n\t\t\t\t{\n\t\t\t\t\ttemp=y[i];\n\t\t\t\t\ty[i]=y[j];\n\t\t\t\t\ty[j]=temp;\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(a1>=y[1] || (a1>=y[0] && a1>=y[1]))\n\t\t{\n\t\t\tcout<<\"N\\n\";\n\t\t}\n\t\telse\n\t\t\tcout<<\"Y\\n\";\n\t}\n}\n\n", "code_tokens": ["Ġ#", "include", "<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġa", ",", "d", ",", "x", "[", "20", "],", "y", "[", "20", "],", "a", "1", ",", "temp", ",", "i", ",", "j", ";", "Ċ", "ĉ", "while", "(", "1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "a", "1", "=", "200", "00", ";", "Ċ", "ĉ", "ĉ", "cin", ">>", "a", ">>", "d", ";", "Ċ", "ĉ", "ĉ", "if", "(", "a", "==", "0", "Ġ&", "Ġd", "==", "0", ")", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "a", ";", "i", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "cin", ">>", "x", "[", "i", "];", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "x", "[", "i", "]", "<", "a", "1", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "a", "1", "=", "x", "[", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "d", ";", "i", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "cin", ">>", "y", "[", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "2", ";", "i", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "for", "(", "j", "=", "i", "+", "1", ";", "j", "<", "d", ";", "j", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "y", "[", "i", "]", ">", "y", "[", "j", "])", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "temp", "=", "y", "[", "i", "];", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "y", "[", "i", "]=", "y", "[", "j", "];", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "y", "[", "j", "]=", "temp", ";", "ĉ", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "if", "(", "a", "1", ">", "=", "y", "[", "1", "]", "Ġ||", "Ġ(", "a", "1", ">", "=", "y", "[", "0", "]", "Ġ&&", "Ġa", "1", ">", "=", "y", "[", "1", "]", "))", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "<<", "\"", "N", "\\", "n", "\";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "<<", "\"", "Y", "\\", "n", "\";", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["a", 12, "comesFrom", ["a"], [2]], ["a", 14, "comesFrom", ["a"], [2]], ["a", 18, "comesFrom", ["a"], [2]], ["d", 13, "comesFrom", ["d"], [3]], ["d", 15, "comesFrom", ["d"], [3]], ["d", 31, "comesFrom", ["d"], [3]], ["d", 42, "comesFrom", ["d"], [3]], ["i", 17, "comesFrom", ["i"], [16]], ["i", 19, "comesFrom", ["i"], [16]], ["i", 22, "comesFrom", ["i"], [16]], ["i", 24, "comesFrom", ["i"], [16]], ["i", 28, "comesFrom", ["i"], [16]], ["i", 30, "comesFrom", ["i"], [29]], ["i", 32, "comesFrom", ["i"], [29]], ["i", 35, "comesFrom", ["i"], [29]], ["i", 37, "comesFrom", ["i"], [36]], ["i", 38, "comesFrom", ["i"], [36]], ["i", 40, "comesFrom", ["i"], [36]], ["i", 45, "comesFrom", ["i"], [36]], ["i", 50, "comesFrom", ["i"], [36]], ["i", 52, "comesFrom", ["i"], [36]], ["a1", 25, "comesFrom", ["a1"], [10]], ["a1", 58, "comesFrom", ["a1"], [26]], ["a1", 60, "comesFrom", ["a1"], [26]], ["a1", 62, "comesFrom", ["a1"], [26]], ["j", 41, "comesFrom", ["j"], [39]], ["j", 43, "comesFrom", ["j"], [39]], ["j", 47, "comesFrom", ["j"], [39]], ["j", 54, "comesFrom", ["j"], [39]], ["j", 56, "comesFrom", ["j"], [39]], ["temp", 57, "comesFrom", ["temp"], [48]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::198", "code": "#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <set>\nusing namespace std;\n\n#define all(t) begin(t), end(t)\n#define sp << \" \" <<\n\nlong gcd(long m, long n) {\n  while (m != 0) {\n    long k = n%m;\n    n=m;\n    m=k;\n  }\n  return n;\n}\n\nbool is_square(long S) {\n  long sqr = sqrt(S);\n  return sqr*sqr == S;\n}\n\nint main() {\n  long sum{0};\n  while (cin) {\n    long n;\n    cin >> n;\n    if (cin) {if (is_square(n)) {cout << n << endl;sum += n;}}\n  }\n  cout << endl << sum << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "define", "Ġall", "(", "t", ")", "Ġbegin", "(", "t", "),", "Ġend", "(", "t", ")", "Ċ", "#", "define", "Ġsp", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ċ", "Ċ", "long", "Ġg", "cd", "(", "long", "Ġm", ",", "Ġlong", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġwhile", "Ġ(", "m", "Ġ!=", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġk", "Ġ=", "Ġn", "%", "m", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġn", "=", "m", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "=", "k", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġn", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "Ġis", "_", "square", "(", "long", "ĠS", ")", "Ġ{", "Ċ", "Ġ", "Ġlong", "Ġsq", "r", "Ġ=", "Ġsq", "rt", "(", "S", ");", "Ċ", "Ġ", "Ġreturn", "Ġsq", "r", "*", "sq", "r", "Ġ==", "ĠS", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġlong", "Ġsum", "{", "0", "};", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cin", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "cin", ")", "Ġ{", "if", "Ġ(", "is", "_", "square", "(", "n", "))", "Ġ{", "c", "out", "Ġ<<", "Ġn", "Ġ<<", "Ġend", "l", ";", "sum", "Ġ+=", "Ġn", ";", "}}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", "Ġ<<", "Ġsum", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["m", 7, "comesFrom", ["m"], [5]], ["m", 10, "comesFrom", ["m"], [5]], ["m", 12, "comesFrom", ["m"], [5]], ["n", 9, "comesFrom", ["n"], [6]], ["n", 15, "comesFrom", ["n"], [11]], ["n", 29, "comesFrom", ["n"], [27]], ["n", 32, "comesFrom", ["n"], [27]], ["n", 34, "comesFrom", ["n"], [27]], ["n", 37, "comesFrom", ["n"], [27]], ["k", 14, "comesFrom", ["k"], [8]], ["S", 20, "comesFrom", ["S"], [17]], ["S", 23, "comesFrom", ["S"], [17]], ["sqr", 21, "comesFrom", ["sqr"], [18]], ["sqr", 22, "comesFrom", ["sqr"], [18]], ["sum", 40, "comesFrom", ["sum"], [36]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::199", "code": "#include \"log.h\"\n\n#include <iostream>\n\nusing WhatsAcppi::Util::Log;\n\nusing std::cout;\nusing std::endl;\n\nLog::LogMsgType Log::logLevel = CriticalMsg;\n\nLog::Log(Log::LogMsgType type) : level(type) {\n}\n\nLog::~Log(){\n\tcout << this->ss.str() << endl;\n}\n\nvoid Log::setLogLevel(Log::LogMsgType level){\n\tLog::logLevel = level;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "log", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "ĠWhats", "Ac", "pp", "i", "::", "Ut", "il", "::", "Log", ";", "Ċ", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "Ċ", "Log", "::", "Log", "Msg", "Type", "ĠLog", "::", "log", "Level", "Ġ=", "ĠCritical", "Msg", ";", "Ċ", "Ċ", "Log", "::", "Log", "(", "Log", "::", "Log", "Msg", "Type", "Ġtype", ")", "Ġ:", "Ġlevel", "(", "type", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Log", "::", "~", "Log", "(){", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġthis", "->", "ss", ".", "str", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLog", "::", "set", "Log", "Level", "(", "Log", "::", "Log", "Msg", "Type", "Ġlevel", "){", "Ċ", "ĉ", "Log", "::", "log", "Level", "Ġ=", "Ġlevel", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["level", 17, "comesFrom", ["level"], [15]], ["type", 8, "comesFrom", ["type"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::200", "code": "#include \"Utility.hpp\"\r\nstd::string prefix;\r\ntime_t rawtime ;\r\nstd::string return_file_name(const std::string file_name)\r\n{\r\n    std::string result_file_name;\r\n    if(prefix.length()>0)\r\n        result_file_name=prefix+\".\"+file_name;\r\n    else\r\n        result_file_name=file_name;\r\n    return   result_file_name;\r\n\r\n}\r\nvoid delete_created_file(const std::string file_name)\r\n{\r\n     \r\n    if( remove( file_name.c_str() ) != 0 )\r\n     std::cerr<<\"--- error deleting the file. \"<<file_name<<std::endl;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Ut", "ility", ".", "h", "pp", "\"", "č", "Ċ", "std", "::", "string", "Ġprefix", ";", "č", "Ċ", "time", "_", "t", "Ġraw", "time", "Ġ;", "č", "Ċ", "std", "::", "string", "Ġreturn", "_", "file", "_", "name", "(", "const", "Ġstd", "::", "string", "Ġfile", "_", "name", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġresult", "_", "file", "_", "name", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "prefix", ".", "length", "()", ">", "0", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "_", "file", "_", "name", "=", "prefix", "+", "\"", ".\"", "+", "file", "_", "name", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "_", "file", "_", "name", "=", "file", "_", "name", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ", "Ġ", "Ġresult", "_", "file", "_", "name", ";", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "void", "Ġdelete", "_", "created", "_", "file", "(", "const", "Ġstd", "::", "string", "Ġfile", "_", "name", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "Ġremove", "(", "Ġfile", "_", "name", ".", "c", "_", "str", "()", "Ġ)", "Ġ!=", "Ġ0", "Ġ)", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "<<", "\"", "---", "Ġerror", "Ġdeleting", "Ġthe", "Ġfile", ".", "Ġ\"", "<<", "file", "_", "name", "<<", "std", "::", "end", "l", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["prefix", 5, "comesFrom", ["prefix"], [0]], ["prefix", 8, "comesFrom", ["prefix"], [0]], ["file_name", 9, "comesFrom", ["file_name"], [3]], ["file_name", 11, "comesFrom", ["file_name"], [3]], ["file_name", 16, "comesFrom", ["file_name"], [14]], ["file_name", 19, "comesFrom", ["file_name"], [14]], ["result_file_name", 12, "comesFrom", ["result_file_name"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::201", "code": "/*\r\n * Copyright (c) 2016 by Alexander Schroeder\r\n */\r\n#include <agge/graphics/render_context.hpp>\r\n#include \"agge/graphics/index_buffer.hpp\"\r\n\r\n#include \"directxtest_test.hpp\"\r\n\r\nusing agge::graphics::index_buffer;\r\nusing agge::graphics::index_type;\r\n\r\nnamespace agge {\r\n    namespace directx {\r\n        class index_buffer_test : public agge::directx::directxtest_with_context\r\n        {\r\n        };\r\n\r\n        TEST_F(index_buffer_test, create_and_destroy)\r\n        {\r\n            auto buffer = context->create_index_buffer(\r\n                            agge::graphics::index_type::UINT32,\r\n                            100 * sizeof(uint32_t));\r\n            void *ptr = buffer->lock();\r\n            ASSERT_EQ(100 * sizeof(uint32_t), buffer->size());\r\n            memset(ptr, 0, buffer->size());\r\n            buffer->unlock();\r\n        }\r\n    }\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2016", "Ġby", "ĠAlexander", "ĠSchro", "eder", "č", "Ċ", "Ġ*/", "č", "Ċ", "#", "include", "Ġ<", "ag", "ge", "/", "g", "raphics", "/", "render", "_", "context", ".", "h", "pp", ">", "č", "Ċ", "#", "include", "Ġ\"", "ag", "ge", "/", "g", "raphics", "/", "index", "_", "buffer", ".", "h", "pp", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "direct", "xt", "est", "_", "test", ".", "h", "pp", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġag", "ge", "::", "g", "raphics", "::", "index", "_", "buffer", ";", "č", "Ċ", "using", "Ġag", "ge", "::", "g", "raphics", "::", "index", "_", "type", ";", "č", "Ċ", "č", "Ċ", "names", "pace", "Ġag", "ge", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnamespace", "Ġdirect", "x", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġclass", "Ġindex", "_", "buffer", "_", "test", "Ġ:", "Ġpublic", "Ġag", "ge", "::", "direct", "x", "::", "direct", "xt", "est", "_", "with", "_", "context", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ};", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTEST", "_", "F", "(", "index", "_", "buffer", "_", "test", ",", "Ġcreate", "_", "and", "_", "destroy", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġbuffer", "Ġ=", "Ġcontext", "->", "create", "_", "index", "_", "buffer", "(", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġag", "ge", "::", "g", "raphics", "::", "index", "_", "type", "::", "U", "INT", "32", ",", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ100", "Ġ*", "Ġsizeof", "(", "uint", "32", "_", "t", "));", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġ*", "ptr", "Ġ=", "Ġbuffer", "->", "lock", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠASS", "ERT", "_", "E", "Q", "(", "100", "Ġ*", "Ġsizeof", "(", "uint", "32", "_", "t", "),", "Ġbuffer", "->", "size", "());", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmem", "set", "(", "ptr", ",", "Ġ0", ",", "Ġbuffer", "->", "size", "());", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbuffer", "->", "un", "lock", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["buffer", 8, "comesFrom", ["buffer"], [3]], ["buffer", 11, "comesFrom", ["buffer"], [3]], ["buffer", 15, "comesFrom", ["buffer"], [3]], ["buffer", 17, "comesFrom", ["buffer"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::202", "code": "#include \"utest_helper.hpp\"\n\nstatic void compiler_fill_image(void)\n{\n  const size_t w = 512;\n  const size_t h = 512;\n  uint32_t color = 0x12345678;\n  cl_image_format format;\n\n  format.image_channel_order = CL_RGBA;\n  format.image_channel_data_type = CL_UNSIGNED_INT8;\n\n  // Setup kernel and images\n  OCL_CREATE_KERNEL(\"test_fill_image\");\n\n  OCL_CREATE_IMAGE2D(buf[0], 0, &format, w, h, 0, NULL);\n\n  // Run the kernel\n  OCL_SET_ARG(0, sizeof(cl_mem), &buf[0]);\n  OCL_SET_ARG(1, sizeof(color), &color);\n  globals[0] = w;\n  globals[1] = h;\n  locals[0] = 16;\n  locals[1] = 16;\n  OCL_NDRANGE(2);\n\n  // Check result\n  OCL_MAP_BUFFER(0);\n  for (uint32_t j = 0; j < h; ++j)\n    for (uint32_t i = 0; i < w; i++)\n      OCL_ASSERT(((uint32_t*)buf_data[0])[j * w + i] == 0x78563412);\n  OCL_UNMAP_BUFFER(0);\n}\n\nMAKE_UTEST_FROM_FUNCTION(compiler_fill_image);\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ut", "est", "_", "hel", "per", ".", "h", "pp", "\"", "Ċ", "Ċ", "static", "Ġvoid", "Ġcompiler", "_", "fill", "_", "image", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġconst", "Ġsize", "_", "t", "Ġw", "Ġ=", "Ġ512", ";", "Ċ", "Ġ", "Ġconst", "Ġsize", "_", "t", "Ġh", "Ġ=", "Ġ512", ";", "Ċ", "Ġ", "Ġuint", "32", "_", "t", "Ġcolor", "Ġ=", "Ġ0", "x", "123", "45", "678", ";", "Ċ", "Ġ", "Ġcl", "_", "image", "_", "format", "Ġformat", ";", "ĊĊ", "Ġ", "Ġformat", ".", "image", "_", "channel", "_", "order", "Ġ=", "ĠCL", "_", "RG", "BA", ";", "Ċ", "Ġ", "Ġformat", ".", "image", "_", "channel", "_", "data", "_", "type", "Ġ=", "ĠCL", "_", "UN", "SIGN", "ED", "_", "INT", "8", ";", "ĊĊ", "Ġ", "Ġ//", "ĠSetup", "Ġkernel", "Ġand", "Ġimages", "Ċ", "Ġ", "ĠO", "CL", "_", "CRE", "ATE", "_", "K", "ERN", "EL", "(\"", "test", "_", "fill", "_", "image", "\");", "ĊĊ", "Ġ", "ĠO", "CL", "_", "CRE", "ATE", "_", "IM", "AGE", "2", "D", "(", "buf", "[", "0", "],", "Ġ0", ",", "Ġ&", "format", ",", "Ġw", ",", "Ġh", ",", "Ġ0", ",", "ĠNULL", ");", "ĊĊ", "Ġ", "Ġ//", "ĠRun", "Ġthe", "Ġkernel", "Ċ", "Ġ", "ĠO", "CL", "_", "SET", "_", "AR", "G", "(", "0", ",", "Ġsizeof", "(", "cl", "_", "mem", "),", "Ġ&", "buf", "[", "0", "]);", "Ċ", "Ġ", "ĠO", "CL", "_", "SET", "_", "AR", "G", "(", "1", ",", "Ġsizeof", "(", "color", "),", "Ġ&", "color", ");", "Ċ", "Ġ", "Ġglob", "als", "[", "0", "]", "Ġ=", "Ġw", ";", "Ċ", "Ġ", "Ġglob", "als", "[", "1", "]", "Ġ=", "Ġh", ";", "Ċ", "Ġ", "Ġlocals", "[", "0", "]", "Ġ=", "Ġ16", ";", "Ċ", "Ġ", "Ġlocals", "[", "1", "]", "Ġ=", "Ġ16", ";", "Ċ", "Ġ", "ĠO", "CL", "_", "N", "DR", "ANGE", "(", "2", ");", "ĊĊ", "Ġ", "Ġ//", "ĠCheck", "Ġresult", "Ċ", "Ġ", "ĠO", "CL", "_", "MAP", "_", "BU", "FFER", "(", "0", ");", "Ċ", "Ġ", "Ġfor", "Ġ(", "uint", "32", "_", "t", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġh", ";", "Ġ++", "j", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "uint", "32", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġw", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠO", "CL", "_", "ASS", "ERT", "((", "(", "uint", "32", "_", "t", "*)", "buf", "_", "data", "[", "0", "])", "[", "j", "Ġ*", "Ġw", "Ġ+", "Ġi", "]", "Ġ==", "Ġ0", "x", "78", "56", "34", "12", ");", "Ċ", "Ġ", "ĠO", "CL", "_", "UN", "MAP", "_", "BU", "FFER", "(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "MA", "KE", "_", "UT", "EST", "_", "FR", "OM", "_", "FUN", "CT", "ION", "(", "comp", "iler", "_", "fill", "_", "image", ");", "Ċ"], "dataflow_graph": [["format", 5, "comesFrom", ["format"], [4]], ["format", 8, "comesFrom", ["format"], [4]], ["format", 14, "comesFrom", ["format"], [4]], ["w", 15, "comesFrom", ["w"], [1]], ["w", 24, "comesFrom", ["w"], [1]], ["w", 37, "comesFrom", ["w"], [1]], ["w", 42, "comesFrom", ["w"], [1]], ["h", 16, "comesFrom", ["h"], [2]], ["h", 26, "comesFrom", ["h"], [2]], ["h", 33, "comesFrom", ["h"], [2]], ["color", 21, "comesFrom", ["color"], [3]], ["color", 22, "comesFrom", ["color"], [3]], ["j", 32, "comesFrom", ["j"], [31]], ["j", 34, "comesFrom", ["j"], [31]], ["j", 41, "comesFrom", ["j"], [31]], ["i", 36, "comesFrom", ["i"], [35]], ["i", 38, "comesFrom", ["i"], [35]], ["i", 43, "comesFrom", ["i"], [35]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::203", "code": "#include <gtest/gtest.h>\n#include \"solution.h\"\n\nTEST(test, testcase0)\n{\n    Stack s;\n    EXPECT_EQ(true, s.empty());\n    s.push(1);\n    s.push(2);\n    s.push(3);\n    EXPECT_EQ(false, s.empty());\n    EXPECT_EQ(3, s.top());\n    s.pop();\n    EXPECT_EQ(2, s.top());\n    s.pop();\n    EXPECT_EQ(1, s.top());\n    s.pop();\n    EXPECT_EQ(true, s.empty());\n}\n\nint main(int argc, char **argv)\n{\n    ::testing::InitGoogleTest(&argc, argv);\n    return RUN_ALL_TESTS();\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "s", "olution", ".", "h", "\"", "Ċ", "Ċ", "T", "EST", "(", "test", ",", "Ġtest", "case", "0", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠStack", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "true", ",", "Ġs", ".", "empty", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "push", "(", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "push", "(", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "push", "(", "3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "false", ",", "Ġs", ".", "empty", "());", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "3", ",", "Ġs", ".", "top", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "pop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "2", ",", "Ġs", ".", "top", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "pop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "1", ",", "Ġs", ".", "top", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "pop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "true", ",", "Ġs", ".", "empty", "());", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ::", "testing", "::", "Init", "Google", "Test", "(&", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠRUN", "_", "ALL", "_", "T", "ES", "TS", "();", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["s", 3, "comesFrom", ["s"], [1]], ["s", 5, "comesFrom", ["s"], [1]], ["s", 7, "comesFrom", ["s"], [1]], ["s", 9, "comesFrom", ["s"], [1]], ["s", 12, "comesFrom", ["s"], [1]], ["s", 15, "comesFrom", ["s"], [1]], ["s", 17, "comesFrom", ["s"], [1]], ["s", 20, "comesFrom", ["s"], [1]], ["s", 22, "comesFrom", ["s"], [1]], ["s", 25, "comesFrom", ["s"], [1]], ["s", 27, "comesFrom", ["s"], [1]], ["s", 30, "comesFrom", ["s"], [1]], ["argc", 36, "comesFrom", ["argc"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::204", "code": "/*\n *  Copyright (c) 2016, https://github.com/nebula-im/nebula\n *  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include \"nebula/redis_client/redis_client.h\"\n\nbool RedisConnPoolMgr::Initialize(const std::vector<RedisAddrInfo>& redis_addr_list) {\n  for (const auto & addr : redis_addr_list) {\n    auto pool = std::make_shared<RedisConnPool>();\n    pool->Initialize(addr);\n    conn_pools_.insert(std::make_pair(addr.name, pool));\n  }\n  return true;\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2016", ",", "Ġhttps", "://", "github", ".", "com", "/", "ne", "b", "ula", "-", "im", "/", "ne", "b", "ula", "Ċ", "Ġ*", "Ġ", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "ne", "b", "ula", "/", "red", "is", "_", "client", "/", "red", "is", "_", "client", ".", "h", "\"", "Ċ", "Ċ", "bool", "ĠRed", "is", "Conn", "Pool", "M", "gr", "::", "Initial", "ize", "(", "const", "Ġstd", "::", "vector", "<", "Red", "is", "Add", "r", "Info", ">", "&", "Ġred", "is", "_", "addr", "_", "list", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "Ġ&", "Ġaddr", "Ġ:", "Ġred", "is", "_", "addr", "_", "list", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġpool", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "Red", "is", "Conn", "Pool", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpool", "->", "Initial", "ize", "(", "addr", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconn", "_", "pool", "s", "_.", "insert", "(", "std", "::", "make", "_", "pair", "(", "addr", ".", "name", ",", "Ġpool", "));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["pool", 6, "comesFrom", ["pool"], [4]], ["pool", 14, "comesFrom", ["pool"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::205", "code": "#include <stdio.h>\n#include <string.h>\nchar haab[19][10] = { \"pop\", \"no\", \"zip\", \"zotz\", \"tzec\", \"xul\", \"yoxkin\", \"mol\", \"chen\", \"yax\", \"zac\", \"ceh\", \"mac\", \"kankin\", \"muan\", \"pax\", \"koyab\", \"cumhu\", \"uayet\" };\nchar tzolkin[20][10] = { \"imix\", \"ik\", \"akbal\", \"kan\", \"chicchan\", \"cimi\", \"manik\", \"lamat\", \"muluk\", \"ok\", \"chuen\", \"eb\", \"ben\", \"ix\", \"mem\", \"cib\", \"caban\", \"eznab\", \"canac\", \"ahau\" };\nint main(void)\n{\n  int n;\n  int d, m, y; \n  int sum;\n  char month[10];\n\n  scanf(\"%d\", &n);\n\n  printf(\"%d\\n\", n);\n  while (n--) {\n    scanf(\" %d. %s %d\", &d, month, &y);\n\n    for (int i = 0; i < 19; i++)\n      if (!strcmp(month, haab[i])) {\n        m = i;\n        break;\n      }\n\n    \n    sum = y*365 + m*20 + d;\n    printf(\"%d %s %d\\n\", sum%260%13+1, tzolkin[sum%260%20], sum/260);\n  }\n\n\n  return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "char", "Ġha", "ab", "[", "19", "][", "10", "]", "Ġ=", "Ġ{", "Ġ\"", "pop", "\",", "Ġ\"", "no", "\",", "Ġ\"", "zip", "\",", "Ġ\"", "z", "ot", "z", "\",", "Ġ\"", "tz", "ec", "\",", "Ġ\"", "x", "ul", "\",", "Ġ\"", "y", "ox", "kin", "\",", "Ġ\"", "mol", "\",", "Ġ\"", "chen", "\",", "Ġ\"", "y", "ax", "\",", "Ġ\"", "zac", "\",", "Ġ\"", "ce", "h", "\",", "Ġ\"", "mac", "\",", "Ġ\"", "k", "ank", "in", "\",", "Ġ\"", "m", "uan", "\",", "Ġ\"", "p", "ax", "\",", "Ġ\"", "k", "oy", "ab", "\",", "Ġ\"", "cum", "hu", "\",", "Ġ\"", "uay", "et", "\"", "Ġ};", "Ċ", "char", "Ġt", "z", "ol", "kin", "[", "20", "][", "10", "]", "Ġ=", "Ġ{", "Ġ\"", "im", "ix", "\",", "Ġ\"", "ik", "\",", "Ġ\"", "ak", "bal", "\",", "Ġ\"", "kan", "\",", "Ġ\"", "ch", "ic", "chan", "\",", "Ġ\"", "c", "imi", "\",", "Ġ\"", "man", "ik", "\",", "Ġ\"", "lam", "at", "\",", "Ġ\"", "m", "ul", "uk", "\",", "Ġ\"", "ok", "\",", "Ġ\"", "chu", "en", "\",", "Ġ\"", "eb", "\",", "Ġ\"", "ben", "\",", "Ġ\"", "ix", "\",", "Ġ\"", "mem", "\",", "Ġ\"", "c", "ib", "\",", "Ġ\"", "c", "aban", "\",", "Ġ\"", "ez", "n", "ab", "\",", "Ġ\"", "can", "ac", "\",", "Ġ\"", "ah", "au", "\"", "Ġ};", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġint", "Ġd", ",", "Ġm", ",", "Ġy", ";", "Ġ", "Ċ", "Ġ", "Ġint", "Ġsum", ";", "Ċ", "Ġ", "Ġchar", "Ġmonth", "[", "10", "];", "ĊĊ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "ĊĊ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġn", ");", "Ċ", "Ġ", "Ġwhile", "Ġ(", "n", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "Ġ%", "d", ".", "Ġ%", "s", "Ġ%", "d", "\",", "Ġ&", "d", ",", "Ġmonth", ",", "Ġ&", "y", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ19", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "str", "cmp", "(", "month", ",", "Ġha", "ab", "[", "i", "]", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsum", "Ġ=", "Ġy", "*", "365", "Ġ+", "Ġm", "*", "20", "Ġ+", "Ġd", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "Ġ%", "s", "Ġ%", "d", "\\", "n", "\",", "Ġsum", "%", "260", "%", "13", "+", "1", ",", "Ġt", "z", "ol", "kin", "[", "sum", "%", "260", "%", "20", "],", "Ġsum", "/", "260", ");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["n", 10, "comesFrom", ["n"], [3]], ["n", 12, "comesFrom", ["n"], [3]], ["n", 13, "comesFrom", ["n"], [3]], ["d", 15, "comesFrom", ["d"], [4]], ["d", 30, "comesFrom", ["d"], [4]], ["y", 17, "comesFrom", ["y"], [6]], ["y", 28, "comesFrom", ["y"], [6]], ["i", 19, "comesFrom", ["i"], [18]], ["i", 20, "comesFrom", ["i"], [18]], ["i", 24, "comesFrom", ["i"], [18]], ["i", 26, "comesFrom", ["i"], [18]], ["m", 29, "comesFrom", ["m"], [25]], ["sum", 32, "comesFrom", ["sum"], [27]], ["sum", 34, "comesFrom", ["sum"], [27]], ["sum", 35, "comesFrom", ["sum"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::206", "code": "#include \"common/api/os_sys_calls_impl_hot_restart.h\"\n\n#include <cerrno>\n\nnamespace Envoy {\nnamespace Api {\n\nSysCallIntResult HotRestartOsSysCallsImpl::shmOpen(const char* name, int oflag, mode_t mode) {\n  const int rc = ::shm_open(name, oflag, mode);\n  return {rc, errno};\n}\n\nSysCallIntResult HotRestartOsSysCallsImpl::shmUnlink(const char* name) {\n  const int rc = ::shm_unlink(name);\n  return {rc, errno};\n}\n\n} // namespace Api\n} // namespace Envoy\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "common", "/", "api", "/", "os", "_", "sys", "_", "c", "alls", "_", "impl", "_", "hot", "_", "rest", "art", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "cer", "r", "no", ">", "Ċ", "Ċ", "names", "pace", "ĠEn", "voy", "Ġ{", "Ċ", "names", "pace", "ĠAp", "i", "Ġ{", "Ċ", "Ċ", "Sys", "Call", "Int", "Result", "ĠHot", "Rest", "art", "Os", "Sys", "C", "alls", "Impl", "::", "sh", "m", "Open", "(", "const", "Ġchar", "*", "Ġname", ",", "Ġint", "Ġof", "lag", ",", "Ġmode", "_", "t", "Ġmode", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġrc", "Ġ=", "Ġ::", "sh", "m", "_", "open", "(", "name", ",", "Ġof", "lag", ",", "Ġmode", ");", "Ċ", "Ġ", "Ġreturn", "Ġ{", "rc", ",", "Ġerr", "no", "};", "Ċ", "}", "Ċ", "Ċ", "Sys", "Call", "Int", "Result", "ĠHot", "Rest", "art", "Os", "Sys", "C", "alls", "Impl", "::", "sh", "m", "Un", "link", "(", "const", "Ġchar", "*", "Ġname", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġrc", "Ġ=", "Ġ::", "sh", "m", "_", "un", "link", "(", "name", ");", "Ċ", "Ġ", "Ġreturn", "Ġ{", "rc", ",", "Ġerr", "no", "};", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠAp", "i", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠEn", "voy", "Ċ"], "dataflow_graph": [["oflag", 7, "comesFrom", ["oflag"], [2]], ["mode", 8, "comesFrom", ["mode"], [3]], ["rc", 9, "comesFrom", ["rc"], [4]], ["rc", 16, "comesFrom", ["rc"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::207", "code": "#include <sltbench/Bench.h>\n\n#include <iomanip>\n#include <iostream>\n\n\nnamespace {\n\nclass MyReporter : public sltbench::reporter::IReporter\n{\npublic:\n\tMyReporter() = default;\n\t~MyReporter() override = default;\n\npublic:\n\tvoid ReportBenchmarkStarted() override\n\t{\n\t\t// for example, ignore this event\n\t}\n\n\tvoid ReportBenchmarkFinished() override\n\t{\n\t\t// for example, ignore this event\n\t}\n\n\tvoid Report(\n\t\tconst std::string& name,\n\t\tconst std::string& params,\n\t\tsltbench::Verdict verdict,\n\t\tstd::chrono::nanoseconds timing_result) override\n\t{\n\t\tstd::cout\n\t\t\t<< std::left << std::setw(60) << name\n\t\t\t<< std::left << std::setw(25) << params\n\t\t\t<< std::left << std::setw(9) << ToString(verdict)\n\t\t\t<< std::right << std::setw(20) << timing_result.count() << std::endl;\n\t}\n\n\tvoid ReportWarning(sltbench::RunWarning warning) override\n\t{\n\t\t// for example, do not report warnings.\n\t}\n};\n\n} // namespace\n\nSLTBENCH_CONFIG().SetReporter(std::unique_ptr<MyReporter>(new MyReporter()));\n", "code_tokens": ["Ġ#", "include", "Ġ<", "s", "lt", "bench", "/", "Bench", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "oman", "ip", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "ĊĊ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "class", "ĠMy", "Rep", "orter", "Ġ:", "Ġpublic", "Ġsl", "t", "bench", "::", "re", "porter", "::", "IR", "ep", "orter", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "My", "Rep", "orter", "()", "Ġ=", "Ġdefault", ";", "Ċ", "ĉ", "~", "My", "Rep", "orter", "()", "Ġoverride", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "void", "ĠReport", "Bench", "mark", "Start", "ed", "()", "Ġoverride", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġfor", "Ġexample", ",", "Ġignore", "Ġthis", "Ġevent", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠReport", "Bench", "mark", "Fin", "ished", "()", "Ġoverride", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġfor", "Ġexample", ",", "Ġignore", "Ġthis", "Ġevent", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠReport", "(", "Ċ", "ĉ", "ĉ", "const", "Ġstd", "::", "string", "&", "Ġname", ",", "Ċ", "ĉ", "ĉ", "const", "Ġstd", "::", "string", "&", "Ġparams", ",", "Ċ", "ĉ", "ĉ", "s", "lt", "bench", "::", "Ver", "dict", "Ġverdict", ",", "Ċ", "ĉ", "ĉ", "std", "::", "chron", "o", "::", "nan", "ose", "cond", "s", "Ġtiming", "_", "result", ")", "Ġoverride", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ċ", "ĉ", "ĉ", "ĉ", "<<", "Ġstd", "::", "left", "Ġ<<", "Ġstd", "::", "set", "w", "(", "60", ")", "Ġ<<", "Ġname", "Ċ", "ĉ", "ĉ", "ĉ", "<<", "Ġstd", "::", "left", "Ġ<<", "Ġstd", "::", "set", "w", "(", "25", ")", "Ġ<<", "Ġparams", "Ċ", "ĉ", "ĉ", "ĉ", "<<", "Ġstd", "::", "left", "Ġ<<", "Ġstd", "::", "set", "w", "(", "9", ")", "Ġ<<", "ĠTo", "String", "(", "ver", "dict", ")", "Ċ", "ĉ", "ĉ", "ĉ", "<<", "Ġstd", "::", "right", "Ġ<<", "Ġstd", "::", "set", "w", "(", "20", ")", "Ġ<<", "Ġtiming", "_", "result", ".", "count", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠReport", "Warning", "(", "s", "lt", "bench", "::", "Run", "Warning", "Ġwarning", ")", "Ġoverride", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġfor", "Ġexample", ",", "Ġdo", "Ġnot", "Ġreport", "Ġwarnings", ".", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "SL", "TB", "EN", "CH", "_", "CON", "FIG", "().", "Set", "Rep", "orter", "(", "std", "::", "unique", "_", "ptr", "<", "My", "Rep", "orter", ">(", "new", "ĠMy", "Rep", "orter", "()", "));", "Ċ"], "dataflow_graph": [["verdict", 19, "comesFrom", ["verdict"], [7]], ["timing_result", 22, "comesFrom", ["timing_result"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::208", "code": "/*\n * arraytokenizer.hpp\n *\n *  Created on: Sep 28, 2015\n *      Author: zmij\n */\n\n#ifndef LIB_PG_ASYNC_INCLUDE_TIP_DB_PG_DETAIL_ARRAY_TOKENIZER_HPP_\n#define LIB_PG_ASYNC_INCLUDE_TIP_DB_PG_DETAIL_ARRAY_TOKENIZER_HPP_\n\n#include <tip/db/pg/detail/tokenizer_base.hpp>\n\nnamespace tip {\nnamespace db {\nnamespace pg {\nnamespace io {\nnamespace detail {\n\ntemplate < typename InputIterator >\nclass array_tokenizer {\npublic:\n\ttypedef InputIterator\t\t\t\t\t\t\t\titerator_type;\n\ttypedef tokenizer_base< InputIterator, '{', '}' >\ttokenizer_type;\npublic:\n\ttemplate< typename OutputIterator >\n\tarray_tokenizer(iterator_type& begin, iterator_type end, OutputIterator out)\n\t{\n\t\ttokenizer_type(begin, end, out);\n\t}\n};\n\n} /* namespace detail */\n}  // namespace io\n} /* namespace pg */\n} /* namespace db */\n} /* namespace tip */\n\n#endif /* LIB_PG_ASYNC_INCLUDE_TIP_DB_PG_DETAIL_ARRAY_TOKENIZER_HPP_ */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġarray", "token", "izer", ".", "h", "pp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠSep", "Ġ28", ",", "Ġ2015", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "Ġz", "m", "ij", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠLIB", "_", "PG", "_", "ASY", "NC", "_", "IN", "CL", "U", "DE", "_", "T", "IP", "_", "DB", "_", "PG", "_", "D", "ETA", "IL", "_", "AR", "RAY", "_", "TO", "KEN", "IZ", "ER", "_", "H", "PP", "_", "Ċ", "#", "define", "ĠLIB", "_", "PG", "_", "ASY", "NC", "_", "IN", "CL", "U", "DE", "_", "T", "IP", "_", "DB", "_", "PG", "_", "D", "ETA", "IL", "_", "AR", "RAY", "_", "TO", "KEN", "IZ", "ER", "_", "H", "PP", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "tip", "/", "db", "/", "pg", "/", "detail", "/", "token", "izer", "_", "base", ".", "h", "pp", ">", "Ċ", "Ċ", "names", "pace", "Ġtip", "Ġ{", "Ċ", "names", "pace", "Ġdb", "Ġ{", "Ċ", "names", "pace", "Ġpg", "Ġ{", "Ċ", "names", "pace", "Ġio", "Ġ{", "Ċ", "names", "pace", "Ġdetail", "Ġ{", "Ċ", "Ċ", "template", "Ġ<", "Ġtyp", "ename", "ĠInput", "Iterator", "Ġ>", "Ċ", "class", "Ġarray", "_", "token", "izer", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "ty", "ped", "ef", "ĠInput", "Iterator", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "iterator", "_", "type", ";", "Ċ", "ĉ", "ty", "ped", "ef", "Ġtoken", "izer", "_", "base", "<", "ĠInput", "Iterator", ",", "Ġ'", "{", "',", "Ġ'", "}", "'", "Ġ>", "ĉ", "token", "izer", "_", "type", ";", "Ċ", "public", ":", "Ċ", "ĉ", "template", "<", "Ġtyp", "ename", "ĠOutput", "Iterator", "Ġ>", "Ċ", "ĉ", "array", "_", "token", "izer", "(", "iterator", "_", "type", "&", "Ġbegin", ",", "Ġiterator", "_", "type", "Ġend", ",", "ĠOutput", "Iterator", "Ġout", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "token", "izer", "_", "type", "(", "begin", ",", "Ġend", ",", "Ġout", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġdetail", "Ġ*/", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġio", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġpg", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġdb", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġtip", "Ġ*/", "Ċ", "Ċ", "#", "endif", "Ġ/*", "ĠLIB", "_", "PG", "_", "ASY", "NC", "_", "IN", "CL", "U", "DE", "_", "T", "IP", "_", "DB", "_", "PG", "_", "D", "ETA", "IL", "_", "AR", "RAY", "_", "TO", "KEN", "IZ", "ER", "_", "H", "PP", "_", "Ġ*/", "Ċ"], "dataflow_graph": [["end", 8, "comesFrom", ["end"], [4]], ["out", 9, "comesFrom", ["out"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::209", "code": "/// HEADER\n#include <csapex/io/protcol/node_notes.h>\n\n/// PROJECT\n#include <csapex/serialization/io/std_io.h>\n#include <csapex/serialization/note_serializer.h>\n\nCSAPEX_REGISTER_NOTE_SERIALIZER(NodeNote)\n\nusing namespace csapex;\n\nNodeNote::NodeNote()\n{\n}\n\nNodeNote::NodeNote(NodeNoteType request_type, const AUUID& uuid) : NoteImplementation(uuid), note_type_(request_type)\n{\n}\n\nNodeNote::NodeNote(NodeNoteType request_type, const AUUID& uuid, const std::vector<std::any>& payload) : NoteImplementation(uuid), note_type_(request_type), payload_(payload)\n{\n}\n\nvoid NodeNote::serialize(SerializationBuffer& data, SemanticVersion& version) const\n{\n    Note::serialize(data, version);\n\n    data << note_type_;\n    data << payload_;\n}\n\nvoid NodeNote::deserialize(const SerializationBuffer& data, const SemanticVersion& version)\n{\n    Note::deserialize(data, version);\n\n    data >> note_type_;\n    data >> payload_;\n}\n", "code_tokens": ["Ġ///", "ĠHEAD", "ER", "Ċ", "#", "include", "Ġ<", "cs", "ape", "x", "/", "io", "/", "prot", "col", "/", "node", "_", "notes", ".", "h", ">", "Ċ", "Ċ", "///", "ĠPRO", "JECT", "Ċ", "#", "include", "Ġ<", "cs", "ape", "x", "/", "serial", "ization", "/", "io", "/", "std", "_", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cs", "ape", "x", "/", "serial", "ization", "/", "note", "_", "serial", "izer", ".", "h", ">", "Ċ", "Ċ", "CS", "AP", "EX", "_", "REG", "ISTER", "_", "NOTE", "_", "SER", "IAL", "IZ", "ER", "(", "Node", "Note", ")", "Ċ", "Ċ", "using", "Ġnamespace", "Ġcs", "ape", "x", ";", "Ċ", "Ċ", "Node", "Note", "::", "Node", "Note", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Node", "Note", "::", "Node", "Note", "(", "Node", "Note", "Type", "Ġrequest", "_", "type", ",", "Ġconst", "ĠAU", "UID", "&", "Ġu", "uid", ")", "Ġ:", "ĠNote", "Im", "plementation", "(", "uu", "id", "),", "Ġnote", "_", "type", "_(", "request", "_", "type", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Node", "Note", "::", "Node", "Note", "(", "Node", "Note", "Type", "Ġrequest", "_", "type", ",", "Ġconst", "ĠAU", "UID", "&", "Ġu", "uid", ",", "Ġconst", "Ġstd", "::", "vector", "<", "std", "::", "any", ">", "&", "Ġpayload", ")", "Ġ:", "ĠNote", "Im", "plementation", "(", "uu", "id", "),", "Ġnote", "_", "type", "_(", "request", "_", "type", "),", "Ġpayload", "_(", "pay", "load", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNode", "Note", "::", "serial", "ize", "(", "Serial", "ization", "Buffer", "&", "Ġdata", ",", "ĠSem", "antic", "Version", "&", "Ġversion", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNote", "::", "serial", "ize", "(", "data", ",", "Ġversion", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġdata", "Ġ<<", "Ġnote", "_", "type", "_", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdata", "Ġ<<", "Ġpayload", "_", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNode", "Note", "::", "des", "erial", "ize", "(", "const", "ĠSerial", "ization", "Buffer", "&", "Ġdata", ",", "Ġconst", "ĠSem", "antic", "Version", "&", "Ġversion", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNote", "::", "des", "erial", "ize", "(", "data", ",", "Ġversion", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġdata", "Ġ>>", "Ġnote", "_", "type", "_", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdata", "Ġ>>", "Ġpayload", "_", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["request_type", 10, "comesFrom", ["request_type"], [5]], ["request_type", 18, "comesFrom", ["request_type"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::210", "code": "#include <iostream>\n\nusing namespace std;\n\n/**\n * Definition for singly-linked list.\n */\nstruct ListNode {\n    int val;\n    ListNode *next;\n    ListNode(int x) : val(x), next(NULL) {}\n};\n\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if (!head)\n            return head;\n        ListNode *ret = head;\n        ListNode *pos = head;\n        head = pos->next;\n        while (head) {\n            if (head->val == pos->val) {\n                pos->next = head->next;\n                delete head;\n            } else {\n                pos = pos->next;\n            }\n            head = pos->next;\n        }\n        return ret;\n    }\n};\n\nint main(void)\n{\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠDefinition", "Ġfor", "Ġsing", "ly", "-", "linked", "Ġlist", ".", "Ċ", "Ġ*/", "Ċ", "struct", "ĠList", "Node", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġnext", "(", "NULL", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "*", "Ġdelete", "Du", "pl", "icates", "(", "List", "Node", "*", "Ġhead", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "head", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "ret", "Ġ=", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "pos", "Ġ=", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhead", "Ġ=", "Ġpos", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "head", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "head", "->", "val", "Ġ==", "Ġpos", "->", "val", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpos", "->", "next", "Ġ=", "Ġhead", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpos", "Ġ=", "Ġpos", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhead", "Ġ=", "Ġpos", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 6, "comesFrom", ["x"], [4]], ["head", 19, "comesFrom", ["head"], [16]], ["head", 20, "comesFrom", ["head"], [16]], ["head", 26, "comesFrom", ["head"], [16]], ["head", 28, "comesFrom", ["head"], [16]], ["pos", 30, "comesFrom", ["pos"], [29]], ["pos", 33, "comesFrom", ["pos"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::211", "code": "#include \"orca_gazebo/orca_gazebo_util.h\"\n\nvoid testGaussianKernel()\n{\n  // Anything outside of 4 stddev on either side is an outlier, and go in the first and last buckets\n\n  constexpr int NUM_BUCKETS = 10;\n  constexpr double MEAN = NUM_BUCKETS / 2;\n  constexpr double STDDEV = 1;\n  constexpr double BUCKET_WIDTH = STDDEV * 8 / (NUM_BUCKETS - 2);\n\n  std::vector<int>h(NUM_BUCKETS);\n\n  for (int s = 0; s < 10000; ++s)\n  {\n    double m = orca_gazebo::gaussianKernel(MEAN, STDDEV);\n    int i = static_cast<int>(m / BUCKET_WIDTH);\n    if (i < 0) i = 0;\n    if (i >= NUM_BUCKETS) i = NUM_BUCKETS - 1;\n    h[i]++;\n  }\n\n  for (int i = 0; i < h.size(); ++i)\n  {\n    std::cout << \"Bucket \" << i << \", \" << h[i] << std::endl;\n  }\n}\n\nint main(int argc, char** argv)\n{\n  testGaussianKernel();\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "or", "ca", "_", "g", "az", "eb", "o", "/", "or", "ca", "_", "g", "az", "eb", "o", "_", "util", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġtest", "Ga", "ussian", "K", "ernel", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠAnything", "Ġoutside", "Ġof", "Ġ4", "Ġst", "dd", "ev", "Ġon", "Ġeither", "Ġside", "Ġis", "Ġan", "Ġout", "lier", ",", "Ġand", "Ġgo", "Ġin", "Ġthe", "Ġfirst", "Ġand", "Ġlast", "Ġbuckets", "ĊĊ", "Ġ", "Ġconst", "expr", "Ġint", "ĠNUM", "_", "B", "UCK", "ETS", "Ġ=", "Ġ10", ";", "Ċ", "Ġ", "Ġconst", "expr", "Ġdouble", "ĠME", "AN", "Ġ=", "ĠNUM", "_", "B", "UCK", "ETS", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġconst", "expr", "Ġdouble", "ĠSTD", "DEV", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġconst", "expr", "Ġdouble", "ĠB", "UCK", "ET", "_", "W", "ID", "TH", "Ġ=", "ĠSTD", "DEV", "Ġ*", "Ġ8", "Ġ/", "Ġ(", "NUM", "_", "B", "UCK", "ETS", "Ġ-", "Ġ2", ");", "ĊĊ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "h", "(", "NUM", "_", "B", "UCK", "ETS", ");", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "int", "Ġs", "Ġ=", "Ġ0", ";", "Ġs", "Ġ<", "Ġ10000", ";", "Ġ++", "s", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġm", "Ġ=", "Ġor", "ca", "_", "g", "az", "eb", "o", "::", "ga", "ussian", "K", "ernel", "(", "ME", "AN", ",", "ĠSTD", "DEV", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "m", "Ġ/", "ĠB", "UCK", "ET", "_", "W", "ID", "TH", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "i", "Ġ<", "Ġ0", ")", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "i", "Ġ>=", "ĠNUM", "_", "B", "UCK", "ETS", ")", "Ġi", "Ġ=", "ĠNUM", "_", "B", "UCK", "ETS", "Ġ-", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġh", "[", "i", "]", "++;", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġh", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "B", "ucket", "Ġ\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġh", "[", "i", "]", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "Ga", "ussian", "K", "ernel", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["NUM_BUCKETS", 3, "comesFrom", ["NUM_BUCKETS"], [1]], ["NUM_BUCKETS", 7, "comesFrom", ["NUM_BUCKETS"], [1]], ["NUM_BUCKETS", 23, "comesFrom", ["NUM_BUCKETS"], [1]], ["NUM_BUCKETS", 25, "comesFrom", ["NUM_BUCKETS"], [1]], ["STDDEV", 6, "comesFrom", ["STDDEV"], [4]], ["STDDEV", 15, "comesFrom", ["STDDEV"], [4]], ["s", 10, "comesFrom", ["s"], [9]], ["s", 11, "comesFrom", ["s"], [9]], ["MEAN", 14, "comesFrom", ["MEAN"], [2]], ["m", 18, "comesFrom", ["m"], [12]], ["BUCKET_WIDTH", 19, "comesFrom", ["BUCKET_WIDTH"], [5]], ["i", 20, "comesFrom", ["i"], [16]], ["i", 22, "comesFrom", ["i"], [21]], ["i", 27, "comesFrom", ["i"], [24]], ["i", 29, "comesFrom", ["i"], [28]], ["i", 32, "comesFrom", ["i"], [28]], ["i", 34, "comesFrom", ["i"], [28]], ["i", 36, "comesFrom", ["i"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::212", "code": "//Kappy ; While Loop program\n//While.cpp : Shows how the while loop is used\n\n#include <iostream>\n\nusing namespace std;\n\nvoid main()\n{\n\tdouble amountOfSyrup, numOfWaffles;\n\tamountOfSyrup = 2.6;\n\n\tcout << \"How many waffles do you have? \";\n\tcin >> numOfWaffles;\n\tcout << endl;\n\n\twhile(amountOfSyrup > 0 && numOfWaffles > 0)\n\t{\n\t\tnumOfWaffles = numOfWaffles - 0.25;\n\t\tamountOfSyrup = amountOfSyrup - 0.125;\n\t}\n\n\tif(amountOfSyrup < 0)\n\t{\n\t\tcout << \"You ran out of syrup!\" << endl;\n\t}\n\telse if(numOfWaffles == 0)\n\t{\n\t\tcout << \"You ran out of waffles!\" << endl;\n\t}\n\n\tsystem(\"PAUSE\");\n}", "code_tokens": ["Ġ//", "K", "appy", "Ġ;", "ĠWhile", "ĠLoop", "Ġprogram", "Ċ", "//", "While", ".", "cpp", "Ġ:", "ĠShows", "Ġhow", "Ġthe", "Ġwhile", "Ġloop", "Ġis", "Ġused", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "double", "Ġamount", "Of", "Sy", "rup", ",", "Ġnum", "Of", "W", "affles", ";", "Ċ", "ĉ", "amount", "Of", "Sy", "rup", "Ġ=", "Ġ2", ".", "6", ";", "ĊĊ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "How", "Ġmany", "Ġw", "affles", "Ġdo", "Ġyou", "Ġhave", "?", "Ġ\"", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġnum", "Of", "W", "affles", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "while", "(", "amount", "Of", "Sy", "rup", "Ġ>", "Ġ0", "Ġ&&", "Ġnum", "Of", "W", "affles", "Ġ>", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "num", "Of", "W", "affles", "Ġ=", "Ġnum", "Of", "W", "affles", "Ġ-", "Ġ0", ".", "25", ";", "Ċ", "ĉ", "ĉ", "amount", "Of", "Sy", "rup", "Ġ=", "Ġamount", "Of", "Sy", "rup", "Ġ-", "Ġ0", ".", "125", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "if", "(", "amount", "Of", "Sy", "rup", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "You", "Ġran", "Ġout", "Ġof", "Ġsyrup", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġif", "(", "num", "Of", "W", "affles", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "You", "Ġran", "Ġout", "Ġof", "Ġw", "affles", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "system", "(\"", "PA", "USE", "\");", "Ċ", "}"], "dataflow_graph": [["numOfWaffles", 7, "comesFrom", ["numOfWaffles"], [3]], ["numOfWaffles", 11, "comesFrom", ["numOfWaffles"], [3]], ["numOfWaffles", 13, "comesFrom", ["numOfWaffles"], [12]], ["numOfWaffles", 19, "comesFrom", ["numOfWaffles"], [12]], ["amountOfSyrup", 10, "comesFrom", ["amountOfSyrup"], [4]], ["amountOfSyrup", 15, "comesFrom", ["amountOfSyrup"], [14]], ["amountOfSyrup", 16, "comesFrom", ["amountOfSyrup"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::213", "code": "#include <boost/container/vector.hpp>\n#include <boost/move/utility_core.hpp>\n#include <cassert>\n\n// Non-copyable class\nclass non_copyable {\n\tBOOST_MOVABLE_BUT_NOT_COPYABLE(non_copyable)\n\n  public:\n\t  non_copyable() {}\n\t  non_copyable(BOOST_RV_REF(non_copyable)) {}\n\t  non_copyable& operator=(BOOST_RV_REF(non_copyable)) {\n\t\t  return *this;\n\t  }\n};\n\nint main() {\n\tusing namespace boost::container;\n\n\t// Store non-copyable objects in a vector\n\tvector<non_copyable> v;\n\tnon_copyable nc;\n\tv.push_back(boost::move(nc));\n\tassert(v.size() == 1);\n\n\t// Reserve no longer needs copy-constructible\n\tv.reserve(100);\n\tassert(v.capacity() >= 100);\n\n\t// This resize overload only needs movable and default constructible\n\tv.resize(200);\n\tassert(v.size() == 200);\n\n\t// Containers are also movable\n\tvector<non_copyable> v_other(boost::move(v));\n\tassert(v_other.size() == 200);\n\tassert(v.empty());\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "boost", "/", "container", "/", "vector", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "move", "/", "ut", "ility", "_", "core", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "//", "ĠNon", "-", "copy", "able", "Ġclass", "Ċ", "class", "Ġnon", "_", "copy", "able", "Ġ{", "Ċ", "ĉ", "B", "OO", "ST", "_", "M", "OV", "ABLE", "_", "BUT", "_", "NOT", "_", "C", "OP", "Y", "ABLE", "(", "non", "_", "copy", "able", ")", "ĊĊ", "Ġ", "Ġpublic", ":", "Ċ", "ĉ", "Ġ", "Ġnon", "_", "copy", "able", "()", "Ġ{}", "Ċ", "ĉ", "Ġ", "Ġnon", "_", "copy", "able", "(", "B", "OO", "ST", "_", "R", "V", "_", "REF", "(", "non", "_", "copy", "able", "))", "Ġ{}", "Ċ", "ĉ", "Ġ", "Ġnon", "_", "copy", "able", "&", "Ġoperator", "=(", "B", "OO", "ST", "_", "R", "V", "_", "REF", "(", "non", "_", "copy", "able", "))", "Ġ{", "Ċ", "ĉ", "ĉ", "Ġ", "Ġreturn", "Ġ*", "this", ";", "Ċ", "ĉ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "using", "Ġnamespace", "Ġboost", "::", "container", ";", "ĊĊ", "ĉ", "//", "ĠStore", "Ġnon", "-", "copy", "able", "Ġobjects", "Ġin", "Ġa", "Ġvector", "Ċ", "ĉ", "vector", "<", "non", "_", "copy", "able", ">", "Ġv", ";", "Ċ", "ĉ", "non", "_", "copy", "able", "Ġn", "c", ";", "Ċ", "ĉ", "v", ".", "push", "_", "back", "(", "boost", "::", "move", "(", "nc", "));", "Ċ", "ĉ", "assert", "(", "v", ".", "size", "()", "Ġ==", "Ġ1", ");", "ĊĊ", "ĉ", "//", "ĠReserve", "Ġno", "Ġlonger", "Ġneeds", "Ġcopy", "-", "construct", "ible", "Ċ", "ĉ", "v", ".", "res", "erve", "(", "100", ");", "Ċ", "ĉ", "assert", "(", "v", ".", "capacity", "()", "Ġ>=", "Ġ100", ");", "ĊĊ", "ĉ", "//", "ĠThis", "Ġresize", "Ġoverload", "Ġonly", "Ġneeds", "Ġmov", "able", "Ġand", "Ġdefault", "Ġconstruct", "ible", "Ċ", "ĉ", "v", ".", "res", "ize", "(", "200", ");", "Ċ", "ĉ", "assert", "(", "v", ".", "size", "()", "Ġ==", "Ġ200", ");", "ĊĊ", "ĉ", "//", "ĠCont", "ainers", "Ġare", "Ġalso", "Ġmov", "able", "Ċ", "ĉ", "vector", "<", "non", "_", "copy", "able", ">", "Ġv", "_", "other", "(", "boost", "::", "move", "(", "v", "));", "Ċ", "ĉ", "assert", "(", "v", "_", "other", ".", "size", "()", "Ġ==", "Ġ200", ");", "Ċ", "ĉ", "assert", "(", "v", ".", "empty", "());", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["v", 7, "comesFrom", ["v"], [5]], ["v", 12, "comesFrom", ["v"], [5]], ["v", 14, "comesFrom", ["v"], [5]], ["v", 17, "comesFrom", ["v"], [5]], ["v", 19, "comesFrom", ["v"], [5]], ["v", 22, "comesFrom", ["v"], [5]], ["v", 29, "comesFrom", ["v"], [5]], ["nc", 10, "comesFrom", ["nc"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::214", "code": "// Copyright (c) 2015, Samvel Khalatyan. All rights reserved.\n\n#include <unistd.h>\n#include <stdio.h>\n\n#include <initializer_list>\n\nnamespace {\n\nconst char* StdFilename(int fd) {\n    if (fd > STDERR_FILENO) {\n        return \"invalid file descriptor\";\n    }\n    const char* fnames[] {\"stdin\", \"stdout\", \"stderr\"};\n    return fnames[fd];\n}\n\nvoid Seek(int fd) {\n    off_t offset = lseek(fd, 0, SEEK_CUR);\n    if (-1 == offset) {\n        printf(\"%s offset: can not be seeked\\n\", StdFilename(fd));\n    } else {\n        printf(\"%s offset: %ld\\n\", StdFilename(fd), offset);\n    }\n}\n\n}  // namespace\n\nint main(int, char* []) {\n    for (auto fd : {STDIN_FILENO, STDOUT_FILENO, STDERR_FILENO}) {\n        Seek(fd);\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", ",", "ĠSam", "vel", "ĠKhal", "at", "yan", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "initial", "izer", "_", "list", ">", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "const", "Ġchar", "*", "ĠSt", "d", "Filename", "(", "int", "Ġf", "d", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "fd", "Ġ>", "ĠST", "DERR", "_", "FIL", "EN", "O", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ\"", "in", "valid", "Ġfile", "Ġdescriptor", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġchar", "*", "Ġf", "names", "[]", "Ġ{\"", "std", "in", "\",", "Ġ\"", "std", "out", "\",", "Ġ\"", "st", "der", "r", "\"", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġf", "names", "[", "fd", "];", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSeek", "(", "int", "Ġf", "d", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġoff", "_", "t", "Ġoffset", "Ġ=", "Ġl", "seek", "(", "fd", ",", "Ġ0", ",", "ĠSEE", "K", "_", "C", "UR", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(-", "1", "Ġ==", "Ġoffset", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "s", "Ġoffset", ":", "Ġcan", "Ġnot", "Ġbe", "Ġseek", "ed", "\\", "n", "\",", "ĠSt", "d", "Filename", "(", "fd", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "s", "Ġoffset", ":", "Ġ%", "ld", "\\", "n", "\",", "ĠSt", "d", "Filename", "(", "fd", "),", "Ġoffset", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "*", "Ġ[", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "Ġf", "d", "Ġ:", "Ġ{", "STD", "IN", "_", "FIL", "EN", "O", ",", "ĠSTD", "OUT", "_", "FIL", "EN", "O", ",", "ĠST", "DERR", "_", "FIL", "EN", "O", "})", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSeek", "(", "fd", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["fd", 2, "comesFrom", ["fd"], [1]], ["fd", 6, "comesFrom", ["fd"], [1]], ["fd", 11, "comesFrom", ["fd"], [8]], ["fd", 16, "comesFrom", ["fd"], [8]], ["fd", 19, "comesFrom", ["fd"], [8]], ["fd", 22, "comesFrom", ["fd"], [8]], ["fd", 27, "comesFrom", ["fd"], [8]], ["offset", 13, "comesFrom", ["offset"], [9]], ["offset", 20, "comesFrom", ["offset"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::215", "code": "// 2001-08-15 Benjamin Kosnik  <bkoz@redhat.com>\n\n// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 2, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING.  If not, write to the Free\n// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n// USA.\n\n// 22.2.4.1.1 collate members\n\n// { dg-do run }\n// { dg-xfail-if \"\" { \"*-*-hpux11.23\" } { \"*\" } { \"\" } } */\n// { dg-options \"-finput-charset=ISO8859-1\" }\n// { dg-require-iconv \"ISO8859-1\" }\n\n#include <testsuite_hooks.h>\n\n#define main discard_main_2\n#include \"2.cc\"\n#undef main \n\nint main()\n{\n  using namespace __gnu_test;\n  func_callback two;\n  two.push_back(&test02);\n  run_tests_wrapped_env(\"de_DE\", \"LANG\", two);\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ2001", "-", "08", "-", "15", "ĠBenjamin", "ĠKos", "nik", "Ġ", "Ġ<", "b", "ko", "z", "@", "red", "hat", ".", "com", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2001", ",", "Ġ2002", ",", "Ġ2003", "ĠFree", "ĠSoftware", "ĠFoundation", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "Ċ", "//", "ĠSoftware", "ĠFoundation", ",", "Ġ59", "ĠTemple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ330", ",", "ĠBoston", ",", "ĠMA", "Ġ02", "111", "-", "130", "7", ",", "Ċ", "//", "ĠUSA", ".", "Ċ", "Ċ", "//", "Ġ22", ".", "2", ".", "4", ".", "1", ".", "1", "Ġcoll", "ate", "Ġmembers", "Ċ", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "xf", "ail", "-", "if", "Ġ\"\"", "Ġ{", "Ġ\"", "*", "-", "*", "-", "hp", "ux", "11", ".", "23", "\"", "Ġ}", "Ġ{", "Ġ\"", "*", "\"", "Ġ}", "Ġ{", "Ġ\"\"", "Ġ}", "Ġ}", "Ġ*/", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "f", "input", "-", "ch", "ars", "et", "=", "ISO", "88", "59", "-", "1", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "icon", "v", "Ġ\"", "ISO", "88", "59", "-", "1", "\"", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "#", "define", "Ġmain", "Ġdiscard", "_", "main", "_", "2", "Ċ", "#", "include", "Ġ\"", "2", ".", "cc", "\"", "Ċ", "#", "und", "ef", "Ġmain", "Ġ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġ__", "gnu", "_", "test", ";", "Ċ", "Ġ", "Ġfunc", "_", "callback", "Ġtwo", ";", "Ċ", "Ġ", "Ġtwo", ".", "push", "_", "back", "(&", "test", "02", ");", "Ċ", "Ġ", "Ġrun", "_", "tests", "_", "wra", "pped", "_", "env", "(\"", "de", "_", "DE", "\",", "Ġ\"", "L", "ANG", "\",", "Ġtwo", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["two", 4, "comesFrom", ["two"], [3]], ["two", 8, "comesFrom", ["two"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::216", "code": "//\n//  File = con_hamm.cpp\n//\n\n#include <iostream>\n#include <math.h>\n#include \"typedefs.h\"\n#include \"con_hamm.h\"\n#include \"misdefs.h\"\n#include \"sinc.h\"\n\nusing namespace std;\n\nContHammingMagResp::ContHammingMagResp(istream& uin, ostream& uout)\n  : ContinWindowResponse(uin, uout)\n{\n  double x, amp0, tau, freq, freq_exp, freq_cyc;\n\n  tau = 1.0;\n  freq_cyc = 2.0;\n  amp0 = 0.54;\n\n  for (int n = 0; n < Num_Resp_Pts; n++) {\n    freq_exp = 1.0 + freq_cyc * (n - Num_Resp_Pts) / ((double)Num_Resp_Pts);\n    freq = pow((double)10.0, freq_exp);\n    x = 0.54 * tau * sinc(PI * tau * freq);\n    x += (0.23 * tau * sinc(PI * tau * (freq - tau)));\n    x += (0.23 * tau * sinc(PI * tau * (freq + tau)));\n    if (Db_Scale_Enab)\n      x = 20.0 * log10(fabs(x / amp0));\n    (*Response_File) << freq << \", \" << x << std::endl;\n  }\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠFile", "Ġ=", "Ġcon", "_", "ham", "m", ".", "cpp", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "ty", "ped", "ef", "s", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "con", "_", "ham", "m", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mis", "def", "s", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "s", "inc", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Cont", "Ham", "ming", "Mag", "Resp", "::", "Cont", "Ham", "ming", "Mag", "Resp", "(", "ist", "ream", "&", "Ġu", "in", ",", "Ġo", "stream", "&", "Ġu", "out", ")", "Ċ", "Ġ", "Ġ:", "ĠContin", "Window", "Response", "(", "uin", ",", "Ġu", "out", ")", "Ċ", "{", "Ċ", "Ġ", "Ġdouble", "Ġx", ",", "Ġamp", "0", ",", "Ġt", "au", ",", "Ġfre", "q", ",", "Ġfre", "q", "_", "exp", ",", "Ġfre", "q", "_", "cy", "c", ";", "ĊĊ", "Ġ", "Ġt", "au", "Ġ=", "Ġ1", ".", "0", ";", "Ċ", "Ġ", "Ġfre", "q", "_", "cy", "c", "Ġ=", "Ġ2", ".", "0", ";", "Ċ", "Ġ", "Ġamp", "0", "Ġ=", "Ġ0", ".", "54", ";", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "int", "Ġn", "Ġ=", "Ġ0", ";", "Ġn", "Ġ<", "ĠNum", "_", "Resp", "_", "P", "ts", ";", "Ġn", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfre", "q", "_", "exp", "Ġ=", "Ġ1", ".", "0", "Ġ+", "Ġfre", "q", "_", "cy", "c", "Ġ*", "Ġ(", "n", "Ġ-", "ĠNum", "_", "Resp", "_", "P", "ts", ")", "Ġ/", "Ġ((", "double", ")", "Num", "_", "Resp", "_", "P", "ts", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfre", "q", "Ġ=", "Ġpow", "((", "double", ")", "10", ".", "0", ",", "Ġfre", "q", "_", "exp", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġ0", ".", "54", "Ġ*", "Ġt", "au", "Ġ*", "Ġs", "inc", "(", "PI", "Ġ*", "Ġt", "au", "Ġ*", "Ġfre", "q", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ+=", "Ġ(", "0", ".", "23", "Ġ*", "Ġt", "au", "Ġ*", "Ġs", "inc", "(", "PI", "Ġ*", "Ġt", "au", "Ġ*", "Ġ(", "fre", "q", "Ġ-", "Ġt", "au", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ+=", "Ġ(", "0", ".", "23", "Ġ*", "Ġt", "au", "Ġ*", "Ġs", "inc", "(", "PI", "Ġ*", "Ġt", "au", "Ġ*", "Ġ(", "fre", "q", "Ġ+", "Ġt", "au", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "Db", "_", "Scale", "_", "En", "ab", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġ20", ".", "0", "Ġ*", "Ġlog", "10", "(", "f", "abs", "(", "x", "Ġ/", "Ġamp", "0", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(*", "Response", "_", "File", ")", "Ġ<<", "Ġfre", "q", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġx", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 17, "comesFrom", ["n"], [16]], ["n", 19, "comesFrom", ["n"], [16]], ["n", 22, "comesFrom", ["n"], [16]], ["freq_cyc", 21, "comesFrom", ["freq_cyc"], [14]], ["freq_exp", 27, "comesFrom", ["freq_exp"], [20]], ["tau", 29, "comesFrom", ["tau"], [13]], ["tau", 32, "comesFrom", ["tau"], [13]], ["tau", 35, "comesFrom", ["tau"], [13]], ["tau", 38, "comesFrom", ["tau"], [13]], ["tau", 40, "comesFrom", ["tau"], [13]], ["tau", 42, "comesFrom", ["tau"], [13]], ["tau", 45, "comesFrom", ["tau"], [13]], ["tau", 47, "comesFrom", ["tau"], [13]], ["freq", 33, "comesFrom", ["freq"], [25]], ["freq", 39, "comesFrom", ["freq"], [25]], ["freq", 46, "comesFrom", ["freq"], [25]], ["freq", 55, "comesFrom", ["freq"], [25]], ["x", 52, "comesFrom", ["x"], [49]], ["x", 56, "comesFrom", ["x"], [49]], ["amp0", 53, "comesFrom", ["amp0"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::217", "code": "#include \"factory_meas_periodic.hpp\"\n\nFactoryMeasPeriodic::FactoryMeasPeriodic() {\n  namePrefix = \"stats_\";\n  bufferMax = 365;\n  calcInterval = 5*60*1000;\n  interval = 24*60*60*1000;\n}\n\nvoid FactoryMeasPeriodic::makeItSo(std::shared_ptr<MeasTypeArray> measTypeArray, std::shared_ptr<AddonsArray> addonsArray) {\n  for(std::vector<std::shared_ptr<MeasType>>::iterator it = measTypeArray->measTypes.begin(); it != measTypeArray->measTypes.end(); ++it) {\n    std::shared_ptr<MeasType> measType = *it;\n\n    std::unique_ptr<MeasPeriodicStatsAddon> mps = std::make_unique<MeasPeriodicStatsAddon>();\n\n    mps->name = namePrefix + measType->name;\n    mps->bufferMax = bufferMax;\n    mps->calcInterval = calcInterval;\n    mps->interval = interval;\n    mps->measName = measType->name;\n\n    addonsArray->addons.push_back(std::move(mps));\n\n  }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "f", "actory", "_", "me", "as", "_", "period", "ic", ".", "h", "pp", "\"", "Ċ", "Ċ", "Factory", "Me", "as", "Per", "iod", "ic", "::", "Factory", "Me", "as", "Per", "iod", "ic", "()", "Ġ{", "Ċ", "Ġ", "Ġname", "Pref", "ix", "Ġ=", "Ġ\"", "stats", "_", "\";", "Ċ", "Ġ", "Ġbuffer", "Max", "Ġ=", "Ġ365", ";", "Ċ", "Ġ", "Ġcalc", "Inter", "val", "Ġ=", "Ġ5", "*", "60", "*", "1000", ";", "Ċ", "Ġ", "Ġinterval", "Ġ=", "Ġ24", "*", "60", "*", "60", "*", "1000", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFactory", "Me", "as", "Per", "iod", "ic", "::", "make", "It", "So", "(", "std", "::", "shared", "_", "ptr", "<", "Me", "as", "Type", "Array", ">", "Ġmeas", "Type", "Array", ",", "Ġstd", "::", "shared", "_", "ptr", "<", "Add", "ons", "Array", ">", "Ġadd", "ons", "Array", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "(", "std", "::", "vector", "<", "std", "::", "shared", "_", "ptr", "<", "Me", "as", "Type", ">>", "::", "iterator", "Ġit", "Ġ=", "Ġmeas", "Type", "Array", "->", "me", "as", "Types", ".", "begin", "();", "Ġit", "Ġ!=", "Ġmeas", "Type", "Array", "->", "me", "as", "Types", ".", "end", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "Me", "as", "Type", ">", "Ġmeas", "Type", "Ġ=", "Ġ*", "it", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "Me", "as", "Per", "iod", "ic", "Stats", "Add", "on", ">", "Ġm", "ps", "Ġ=", "Ġstd", "::", "make", "_", "unique", "<", "Me", "as", "Per", "iod", "ic", "Stats", "Add", "on", ">", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġm", "ps", "->", "name", "Ġ=", "Ġname", "Pref", "ix", "Ġ+", "Ġmeas", "Type", "->", "name", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ps", "->", "buffer", "Max", "Ġ=", "Ġbuffer", "Max", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ps", "->", "cal", "c", "Inter", "val", "Ġ=", "Ġcalc", "Inter", "val", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ps", "->", "inter", "val", "Ġ=", "Ġinterval", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ps", "->", "me", "as", "Name", "Ġ=", "Ġmeas", "Type", "->", "name", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġadd", "ons", "Array", "->", "addons", ".", "push", "_", "back", "(", "std", "::", "move", "(", "m", "ps", "));", "ĊĊ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["measTypeArray", 9, "comesFrom", ["measTypeArray"], [6]], ["measTypeArray", 13, "comesFrom", ["measTypeArray"], [6]], ["it", 12, "comesFrom", ["it"], [8]], ["it", 16, "comesFrom", ["it"], [8]], ["it", 18, "comesFrom", ["it"], [8]], ["mps", 21, "comesFrom", ["mps"], [19]], ["mps", 26, "comesFrom", ["mps"], [19]], ["mps", 29, "comesFrom", ["mps"], [19]], ["mps", 32, "comesFrom", ["mps"], [19]], ["mps", 35, "comesFrom", ["mps"], [19]], ["mps", 43, "comesFrom", ["mps"], [19]], ["namePrefix", 23, "comesFrom", ["namePrefix"], [1]], ["measType", 24, "comesFrom", ["measType"], [17]], ["measType", 37, "comesFrom", ["measType"], [17]], ["bufferMax", 27, "comesFrom", ["bufferMax"], [2]], ["bufferMax", 28, "comesFrom", ["bufferMax"], [2]], ["calcInterval", 30, "comesFrom", ["calcInterval"], [3]], ["calcInterval", 31, "comesFrom", ["calcInterval"], [3]], ["interval", 33, "comesFrom", ["interval"], [4]], ["interval", 34, "comesFrom", ["interval"], [4]], ["addonsArray", 39, "comesFrom", ["addonsArray"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::218", "code": "// Functor\n// Source: ./examples/functor.cpp\n#include <qpp.h>\nusing namespace qpp;\nusing std::cout;\nusing std::endl;\n\n// test function used by qpp::cwise()\ncplx pow3(const cplx& z)\n{\n    return std::pow(z, 3);\n}\n\nint main()\n{\n    // functor test\n    cout << \">> Functor z^3 acting component-wise on:\" << endl;\n    cmat A(2, 2);\n    A << 1, 2, 3, 4;\n    cout << disp(A) << endl;\n\n    cout << \">> Result (with lambda):\" << endl;\n    // functor z^3 componentwise, specify OutputScalar and Derived for lambdas\n    cout << disp(cwise<cplx, cmat>(A, [](const cplx& z) -> cplx\n    {\n        return z * z * z;\n    })) << endl;\n\n    cout << \">> Result (with genuine function):\" << endl;\n    // automatic type deduction for proper functions\n    cout << disp(cwise(A, &pow3)) << endl;\n}\n", "code_tokens": ["Ġ//", "ĠFun", "ctor", "Ċ", "//", "ĠSource", ":", "Ġ./", "ex", "amples", "/", "fun", "ctor", ".", "cpp", "Ċ", "#", "include", "Ġ<", "q", "pp", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġq", "pp", ";", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "Ċ", "//", "Ġtest", "Ġfunction", "Ġused", "Ġby", "Ġq", "pp", "::", "c", "wise", "()", "Ċ", "c", "pl", "x", "Ġpow", "3", "(", "const", "Ġc", "pl", "x", "&", "Ġz", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstd", "::", "p", "ow", "(", "z", ",", "Ġ3", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġfun", "ctor", "Ġtest", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", ">>", "ĠFun", "ctor", "Ġz", "^", "3", "Ġacting", "Ġcomponent", "-", "wise", "Ġon", ":\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "mat", "ĠA", "(", "2", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠA", "Ġ<<", "Ġ1", ",", "Ġ2", ",", "Ġ3", ",", "Ġ4", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġdisp", "(", "A", ")", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", ">>", "ĠResult", "Ġ(", "with", "Ġlambda", "):", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġfun", "ctor", "Ġz", "^", "3", "Ġcomponent", "wise", ",", "Ġspecify", "ĠOutput", "Sc", "al", "ar", "Ġand", "ĠDer", "ived", "Ġfor", "Ġlamb", "d", "as", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġdisp", "(", "c", "wise", "<", "c", "pl", "x", ",", "Ġc", "mat", ">(", "A", ",", "Ġ[", "](", "const", "Ġc", "pl", "x", "&", "Ġz", ")", "Ġ->", "Ġc", "pl", "x", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġz", "Ġ*", "Ġz", "Ġ*", "Ġz", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "))", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", ">>", "ĠResult", "Ġ(", "with", "Ġgenuine", "Ġfunction", "):", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġautomatic", "Ġtype", "Ġdeduction", "Ġfor", "Ġproper", "Ġfunctions", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġdisp", "(", "c", "wise", "(", "A", ",", "Ġ&", "p", "ow", "3", "))", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["A", 11, "comesFrom", ["A"], [10]], ["A", 14, "comesFrom", ["A"], [10]], ["A", 21, "comesFrom", ["A"], [10]], ["A", 32, "comesFrom", ["A"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::219", "code": "/////////////////////////////////////////////////////////////\n// Copyright (C) 2003-2006 Bryan Clark and Kenneth Esler   //\n//                                                         //\n// This program is free software; you can redistribute it  //\n// and/or modify it under the terms of the GNU General     //\n// Public License as published by the Free Software        //\n// Foundation; either version 2 of the License, or         //\n// (at your option) any later version.  This program is    //\n// distributed in the hope that it will be useful, but     //\n// WITHOUT ANY WARRANTY; without even the implied warranty //\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. //  \n// See the GNU General Public License for more details.    //\n// For more information, please see the PIMC++ Home Page:  //\n//           http://pathintegrals.info                     //\n/////////////////////////////////////////////////////////////\n\n#include \"PotentialBase.h\"\n\nbool \nPotential::IsPH()     \n{ \n  return false; \n}\n\nbool\nPotential::NeedsRel()\n{\n  return false;\n}\n\ndouble\nPotential::V(int l, double r)\n{  return V(r); }\n\ndouble\nPotential::dVdr(int l, double r)\n{  return dVdr(r); }\n\ndouble\nPotential::d2Vdr2(int l, double r)\n{  return d2Vdr2(r); }\n", "code_tokens": ["Ġ//", "////////////////////////////////", "////////////////", "////////", "///", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "-", "2006", "ĠBryan", "ĠClark", "Ġand", "ĠKenneth", "ĠEs", "ler", "Ġ", "Ġ", "Ġ//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġ", "Ġ//", "Ċ", "//", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ċ", "//", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ċ", "//", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġ", "Ġ", "Ġ", "Ġ//", "Ċ", "//", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ċ", "//", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġ//", "Ċ", "//", "Ġof", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ//", "Ġ", "Ġ", "Ċ", "//", "ĠSee", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ġ", "Ġ", "Ġ", "Ġ//", "Ċ", "//", "ĠFor", "Ġmore", "Ġinformation", ",", "Ġplease", "Ġsee", "Ġthe", "ĠP", "IM", "C", "++", "ĠHome", "ĠPage", ":", "Ġ", "Ġ//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "path", "integ", "rals", ".", "info", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ċ", "////////////////////////////////", "////////////////", "////////", "////", "/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Pot", "ential", "Base", ".", "h", "\"", "Ċ", "Ċ", "bool", "Ġ", "Ċ", "Pot", "ential", "::", "Is", "PH", "()", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "{", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ġ", "Ċ", "}", "Ċ", "Ċ", "bool", "Ċ", "Pot", "ential", "::", "Need", "s", "Rel", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "double", "Ċ", "Pot", "ential", "::", "V", "(", "int", "Ġl", ",", "Ġdouble", "Ġr", ")", "Ċ", "{", "Ġ", "Ġreturn", "ĠV", "(", "r", ");", "Ġ}", "Ċ", "Ċ", "double", "Ċ", "Pot", "ential", "::", "d", "V", "dr", "(", "int", "Ġl", ",", "Ġdouble", "Ġr", ")", "Ċ", "{", "Ġ", "Ġreturn", "Ġd", "V", "dr", "(", "r", ");", "Ġ}", "Ċ", "Ċ", "double", "Ċ", "Pot", "ential", "::", "d", "2", "V", "dr", "2", "(", "int", "Ġl", ",", "Ġdouble", "Ġr", ")", "Ċ", "{", "Ġ", "Ġreturn", "Ġd", "2", "V", "dr", "2", "(", "r", ");", "Ġ}", "Ċ"], "dataflow_graph": [["r", 6, "comesFrom", ["r"], [4]], ["r", 11, "comesFrom", ["r"], [9]], ["r", 16, "comesFrom", ["r"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::220", "code": "#include <QtTest>\n\n#include <timing/onofftiming.h>\n#include <controller/ntpcontroller.h>\n\nclass TestOnOffTiming : public QObject\n{\n    Q_OBJECT\n\nprivate slots:\n    void nextRuns()\n    {\n        NtpController ntp;\n        ntp.init();\n\n        QDateTime start = ntp.currentDateTime();\n        OnOffTiming timing(start);\n\n        QCOMPARE(timing.type(), QLatin1String(\"onoff\"));\n        qDebug(\"start timing now\");\n        QCOMPARE(timing.nextRun(), start);\n        qDebug(\"reset timing\");\n        QCOMPARE(timing.reset(), false);\n    }\n};\n\nQTEST_MAIN(TestOnOffTiming)\n\n#include \"tst_onofftiming.moc\"\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Q", "t", "Test", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "tim", "ing", "/", "on", "off", "tim", "ing", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "controller", "/", "nt", "p", "controller", ".", "h", ">", "Ċ", "Ċ", "class", "ĠTest", "On", "Off", "Tim", "ing", "Ġ:", "Ġpublic", "ĠQ", "Object", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "OB", "JECT", "Ċ", "Ċ", "private", "Ġslots", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġnext", "Run", "s", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠN", "tp", "Controller", "Ġn", "tp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "tp", ".", "init", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "Date", "Time", "Ġstart", "Ġ=", "Ġn", "tp", ".", "current", "Date", "Time", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠOn", "Off", "Tim", "ing", "Ġtiming", "(", "start", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "tim", "ing", ".", "type", "(),", "ĠQ", "Latin", "1", "String", "(\"", "on", "off", "\")", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "(\"", "start", "Ġtiming", "Ġnow", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "tim", "ing", ".", "next", "Run", "(),", "Ġstart", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "(\"", "reset", "Ġtiming", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "tim", "ing", ".", "reset", "(),", "Ġfalse", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "Q", "T", "EST", "_", "MA", "IN", "(", "Test", "On", "Off", "Tim", "ing", ")", "Ċ", "Ċ", "#", "include", "Ġ\"", "t", "st", "_", "on", "off", "tim", "ing", ".", "m", "oc", "\"", "Ċ"], "dataflow_graph": [["ntp", 4, "comesFrom", ["ntp"], [3]], ["ntp", 7, "comesFrom", ["ntp"], [3]], ["start", 18, "comesFrom", ["start"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::221", "code": "/***************************************************************************\n**\n** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).\n** All rights reserved.\n** Contact: Karoliina T. Salminen <karoliina.t.salminen@nokia.com>\n**\n** This file is part of duicontrolpanel.\n**\n**\n** This program is free software; you can redistribute it and/or\n** modify it under the terms of the GNU Lesser General Public\n** License version 2.1 as published by the Free Software Foundation\n** and appearing in the file LICENSE.LGPL included in the packaging\n** of this file.\n**\n****************************************************************************/\n\n#include <QtGui>\n#include <QDebug>\n#include <MAction>\n#include <DcpWidget>\n#include \"buttonapplet.h\"\n#include \"button.h\"\n#include \"buttonbrief.h\"\n\nQ_EXPORT_PLUGIN2(buttonapplet, ButtonApplet)\n\nvoid ButtonApplet::init()\n{\n};\n\nDcpWidget* ButtonApplet::constructWidget(int widgetId)\n{\n    Q_UNUSED(widgetId);\n    return 0;\n}\n\nQString ButtonApplet::title() const\n{\n    return \"\";\n}\n\nQVector<MAction*> ButtonApplet::viewMenuItems()\n{\n    QVector<MAction*> vector(1);\n    return vector;\n}\n\nDcpBrief* ButtonApplet::constructBrief(int)\n{\n    return new ButtonBrief();\n}\n\n", "code_tokens": ["Ġ/", "********************************", "********************************", "********", "***", "Ċ", "**", "Ċ", "**", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠNokia", "ĠCorporation", "Ġand", "/", "or", "Ġits", "Ġsubsidiary", "(-", "ies", ").", "Ċ", "**", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "**", "ĠContact", ":", "ĠKar", "oli", "ina", "ĠT", ".", "ĠSal", "min", "en", "Ġ<", "kar", "oli", "ina", ".", "t", ".", "sal", "min", "en", "@", "n", "okia", ".", "com", ">", "Ċ", "**", "Ċ", "**", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġdu", "ic", "ont", "rol", "panel", ".", "Ċ", "**", "Ċ", "**", "Ċ", "**", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "**", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "**", "ĠLicense", "Ġversion", "Ġ2", ".", "1", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", "Ċ", "**", "Ġand", "Ġappearing", "Ġin", "Ġthe", "Ġfile", "ĠLIC", "ENSE", ".", "LG", "PL", "Ġincluded", "Ġin", "Ġthe", "Ġpackaging", "Ċ", "**", "Ġof", "Ġthis", "Ġfile", ".", "Ċ", "**", "Ċ", "********************************", "********************************", "************", "/", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "t", "Gu", "i", ">", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "#", "include", "Ġ<", "MA", "ction", ">", "Ċ", "#", "include", "Ġ<", "D", "cp", "Widget", ">", "Ċ", "#", "include", "Ġ\"", "button", "app", "let", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "button", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "button", "b", "rief", ".", "h", "\"", "Ċ", "Ċ", "Q", "_", "EX", "PORT", "_", "PL", "UG", "IN", "2", "(", "button", "app", "let", ",", "ĠButton", "App", "let", ")", "Ċ", "Ċ", "void", "ĠButton", "App", "let", "::", "init", "()", "Ċ", "{", "Ċ", "};", "Ċ", "Ċ", "D", "cp", "Widget", "*", "ĠButton", "App", "let", "::", "construct", "Widget", "(", "int", "Ġwidget", "Id", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "UN", "US", "ED", "(", "widget", "Id", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Q", "String", "ĠButton", "App", "let", "::", "title", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ\"", "\";", "Ċ", "}", "Ċ", "Ċ", "Q", "Vector", "<", "MA", "ction", "*", ">", "ĠButton", "App", "let", "::", "view", "Menu", "Items", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Vector", "<", "MA", "ction", "*", ">", "Ġvector", "(", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġvector", ";", "Ċ", "}", "Ċ", "Ċ", "D", "cp", "B", "rief", "*", "ĠButton", "App", "let", "::", "construct", "B", "rief", "(", "int", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġnew", "ĠButton", "B", "rief", "();", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["widgetId", 7, "comesFrom", ["widgetId"], [5]], ["vector", 11, "comesFrom", ["vector"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::222", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/medialive/model/CreateTagsRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n\n#include <utility>\n\nusing namespace Aws::MediaLive::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\n\nCreateTagsRequest::CreateTagsRequest() : \n    m_resourceArnHasBeenSet(false),\n    m_tagsHasBeenSet(false)\n{\n}\n\nAws::String CreateTagsRequest::SerializePayload() const\n{\n  JsonValue payload;\n\n  if(m_tagsHasBeenSet)\n  {\n   JsonValue tagsJsonMap;\n   for(auto& tagsItem : m_tags)\n   {\n     tagsJsonMap.WithString(tagsItem.first, tagsItem.second);\n   }\n   payload.WithObject(\"tags\", std::move(tagsJsonMap));\n\n  }\n\n  return payload.View().WriteReadable();\n}\n\n\n\n\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "med", "ial", "ive", "/", "model", "/", "Create", "Tags", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "J", "son", "Serial", "izer", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Media", "Live", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", "::", "J", "son", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "Ċ", "Create", "Tags", "Request", "::", "Create", "Tags", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "resource", "Ar", "n", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "tags", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠCreate", "Tags", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠJ", "son", "Value", "Ġpayload", ";", "ĊĊ", "Ġ", "Ġif", "(", "m", "_", "tags", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "ĠJ", "son", "Value", "Ġtags", "J", "son", "Map", ";", "Ċ", "Ġ", "Ġ", "Ġfor", "(", "auto", "&", "Ġtags", "Item", "Ġ:", "Ġm", "_", "tags", ")", "Ċ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtags", "J", "son", "Map", ".", "With", "String", "(", "tags", "Item", ".", "first", ",", "Ġtags", "Item", ".", "second", ");", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġpayload", ".", "With", "Object", "(\"", "tags", "\",", "Ġstd", "::", "move", "(", "tags", "J", "son", "Map", "));", "ĊĊ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġpayload", ".", "View", "().", "Write", "Read", "able", "();", "Ċ", "}", "ĊĊ", "ĊĊ", "Ċ"], "dataflow_graph": [["tagsJsonMap", 12, "comesFrom", ["tagsJsonMap"], [9]], ["tagsJsonMap", 21, "comesFrom", ["tagsJsonMap"], [9]], ["payload", 18, "comesFrom", ["payload"], [7]], ["payload", 22, "comesFrom", ["payload"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::223", "code": "#include \"foobar2000.h\"\r\n\r\nnamespace {\r\n\tclass main_thread_callback_myimpl : public main_thread_callback {\r\n\tpublic:\r\n\t\tvoid callback_run() {\r\n\t\t\tm_notify->on_completion(m_code);\r\n\t\t}\r\n\r\n\t\tmain_thread_callback_myimpl(completion_notify_ptr p_notify,unsigned p_code) : m_notify(p_notify), m_code(p_code) {}\r\n\tprivate:\r\n\t\tcompletion_notify_ptr m_notify;\r\n\t\tunsigned m_code;\r\n\t};\r\n}\r\n\r\nvoid completion_notify::g_signal_completion_async(completion_notify_ptr p_notify,unsigned p_code) {\r\n\tif (p_notify.is_valid()) {\r\n\t\tstatic_api_ptr_t<main_thread_callback_manager>()->add_callback(new service_impl_t<main_thread_callback_myimpl>(p_notify,p_code));\r\n\t}\r\n}\r\n\r\nvoid completion_notify::on_completion_async(unsigned p_code) {\r\n\tstatic_api_ptr_t<main_thread_callback_manager>()->add_callback(new service_impl_t<main_thread_callback_myimpl>(this,p_code));\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "fo", "obar", "2000", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "names", "pace", "Ġ{", "č", "Ċ", "ĉ", "class", "Ġmain", "_", "thread", "_", "callback", "_", "my", "impl", "Ġ:", "Ġpublic", "Ġmain", "_", "thread", "_", "callback", "Ġ{", "č", "Ċ", "ĉ", "public", ":", "č", "Ċ", "ĉ", "ĉ", "void", "Ġcallback", "_", "run", "()", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "m", "_", "not", "ify", "->", "on", "_", "com", "pletion", "(", "m", "_", "code", ");", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "main", "_", "thread", "_", "callback", "_", "my", "impl", "(", "com", "pletion", "_", "not", "ify", "_", "ptr", "Ġp", "_", "not", "ify", ",", "unsigned", "Ġp", "_", "code", ")", "Ġ:", "Ġm", "_", "not", "ify", "(", "p", "_", "not", "ify", "),", "Ġm", "_", "code", "(", "p", "_", "code", ")", "Ġ{}", "č", "Ċ", "ĉ", "private", ":", "č", "Ċ", "ĉ", "ĉ", "com", "pletion", "_", "not", "ify", "_", "ptr", "Ġm", "_", "not", "ify", ";", "č", "Ċ", "ĉ", "ĉ", "unsigned", "Ġm", "_", "code", ";", "č", "Ċ", "ĉ", "};", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġcompletion", "_", "not", "ify", "::", "g", "_", "sign", "al", "_", "com", "pletion", "_", "as", "ync", "(", "com", "pletion", "_", "not", "ify", "_", "ptr", "Ġp", "_", "not", "ify", ",", "unsigned", "Ġp", "_", "code", ")", "Ġ{", "č", "Ċ", "ĉ", "if", "Ġ(", "p", "_", "not", "ify", ".", "is", "_", "valid", "())", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "static", "_", "api", "_", "ptr", "_", "t", "<", "main", "_", "thread", "_", "callback", "_", "manager", ">", "()", "->", "add", "_", "callback", "(", "new", "Ġservice", "_", "impl", "_", "t", "<", "main", "_", "thread", "_", "callback", "_", "my", "impl", ">(", "p", "_", "not", "ify", ",", "p", "_", "code", "));", "č", "Ċ", "ĉ", "}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġcompletion", "_", "not", "ify", "::", "on", "_", "com", "pletion", "_", "as", "ync", "(", "unsigned", "Ġp", "_", "code", ")", "Ġ{", "č", "Ċ", "ĉ", "static", "_", "api", "_", "ptr", "_", "t", "<", "main", "_", "thread", "_", "callback", "_", "manager", ">", "()", "->", "add", "_", "callback", "(", "new", "Ġservice", "_", "impl", "_", "t", "<", "main", "_", "thread", "_", "callback", "_", "my", "impl", ">(", "this", ",", "p", "_", "code", "));", "č", "Ċ", "}"], "dataflow_graph": [["p_notify", 8, "comesFrom", ["p_notify"], [5]], ["p_notify", 16, "comesFrom", ["p_notify"], [14]], ["p_notify", 20, "comesFrom", ["p_notify"], [14]], ["p_code", 10, "comesFrom", ["p_code"], [6]], ["p_code", 21, "comesFrom", ["p_code"], [15]], ["p_code", 26, "comesFrom", ["p_code"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::224", "code": "// PR c++/91353 - P1331R2: Allow trivial default init in constexpr contexts.\n// { dg-do compile { target c++20 } }\n\nstruct S {\n  int a = 1;\n  constexpr S() = default;\n};\n\nconstexpr S s;\n\nunion U {\n  int a = 1;\n  constexpr U() = default;\n};\n\nconstexpr U u;\n\nstruct S2 {\n  int a;\n  constexpr S2() = default;\n};\n\nconstexpr S2 s2; // { dg-error \"uninitialized .const s2.\" }\n\nunion U2 {\n  int a;\n  constexpr U2() = default;\n};\n\nconstexpr U2 u2; // { dg-error \"uninitialized .const u2.\" }\n\nstruct S3 {\n  // FIXME if it's anonymous union, we don't give the error below\n  union {\n    int a;\n  } u;\n  constexpr S3() = default;\n};\n\nconstexpr S3 s3; // { dg-error \"uninitialized .const s3.\" }\n\nstruct S4 {\n  // FIXME if it's anonymous union, we don't give the error below\n  union {\n    int n;\n  } u;\n  constexpr S4() = default;\n};\n\nconstexpr S4 s4; // { dg-error \"uninitialized .const s4.\" }\n\nstruct S5 {\n  union {\n    int n = 0;\n  };\n  // FIXME if it's anonymous union, we don't give the error below\n  union {\n    int m;\n  } u;\n  constexpr S5() = default;\n};\n\nconstexpr S5 s5; // { dg-error \"uninitialized .const s5.|not a constant expression\" }\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "9", "13", "53", "Ġ-", "ĠP", "13", "31", "R", "2", ":", "ĠAllow", "Ġtrivial", "Ġdefault", "Ġinit", "Ġin", "Ġconst", "expr", "Ġcontexts", ".", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "20", "Ġ}", "Ġ}", "Ċ", "Ċ", "struct", "ĠS", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġconst", "expr", "ĠS", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "const", "expr", "ĠS", "Ġs", ";", "Ċ", "Ċ", "union", "ĠU", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġconst", "expr", "ĠU", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "const", "expr", "ĠU", "Ġu", ";", "Ċ", "Ċ", "struct", "ĠS", "2", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ";", "Ċ", "Ġ", "Ġconst", "expr", "ĠS", "2", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "const", "expr", "ĠS", "2", "Ġs", "2", ";", "Ġ//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "un", "initialized", "Ġ.", "const", "Ġs", "2", ".\"", "Ġ}", "Ċ", "Ċ", "union", "ĠU", "2", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ";", "Ċ", "Ġ", "Ġconst", "expr", "ĠU", "2", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "const", "expr", "ĠU", "2", "Ġu", "2", ";", "Ġ//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "un", "initialized", "Ġ.", "const", "Ġu", "2", ".\"", "Ġ}", "Ċ", "Ċ", "struct", "ĠS", "3", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠFIX", "ME", "Ġif", "Ġit", "'s", "Ġanonymous", "Ġunion", ",", "Ġwe", "Ġdon", "'t", "Ġgive", "Ġthe", "Ġerror", "Ġbelow", "Ċ", "Ġ", "Ġunion", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġa", ";", "Ċ", "Ġ", "Ġ}", "Ġu", ";", "Ċ", "Ġ", "Ġconst", "expr", "ĠS", "3", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "const", "expr", "ĠS", "3", "Ġs", "3", ";", "Ġ//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "un", "initialized", "Ġ.", "const", "Ġs", "3", ".\"", "Ġ}", "Ċ", "Ċ", "struct", "ĠS", "4", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠFIX", "ME", "Ġif", "Ġit", "'s", "Ġanonymous", "Ġunion", ",", "Ġwe", "Ġdon", "'t", "Ġgive", "Ġthe", "Ġerror", "Ġbelow", "Ċ", "Ġ", "Ġunion", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ}", "Ġu", ";", "Ċ", "Ġ", "Ġconst", "expr", "ĠS", "4", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "const", "expr", "ĠS", "4", "Ġs", "4", ";", "Ġ//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "un", "initialized", "Ġ.", "const", "Ġs", "4", ".\"", "Ġ}", "Ċ", "Ċ", "struct", "ĠS", "5", "Ġ{", "Ċ", "Ġ", "Ġunion", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġ//", "ĠFIX", "ME", "Ġif", "Ġit", "'s", "Ġanonymous", "Ġunion", ",", "Ġwe", "Ġdon", "'t", "Ġgive", "Ġthe", "Ġerror", "Ġbelow", "Ċ", "Ġ", "Ġunion", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", ";", "Ċ", "Ġ", "Ġ}", "Ġu", ";", "Ċ", "Ġ", "Ġconst", "expr", "ĠS", "5", "()", "Ġ=", "Ġdefault", ";", "Ċ", "};", "Ċ", "Ċ", "const", "expr", "ĠS", "5", "Ġs", "5", ";", "Ġ//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "un", "initialized", "Ġ.", "const", "Ġs", "5", ".", "|", "not", "Ġa", "Ġconstant", "Ġexpression", "\"", "Ġ}", "Ċ"], "dataflow_graph": [["u", 13, "comesFrom", ["u"], [5]], ["u", 17, "comesFrom", ["u"], [5]], ["u", 22, "comesFrom", ["u"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::225", "code": "#include <fstream>\n#include <iostream>\n\n#include <seqan/seq_io.h>\n#include <seqan/sequence.h>\n\nint main(int argc, char const ** argv)\n{\n    if (argc != 2)\n        return 1;  // Invalid number of arguments.\n\n    // Open file and create RecordReader.\n    std::fstream in(argv[1], std::ios::binary | std::ios::in);\n    seqan::RecordReader<std::fstream, seqan::SinglePass<> > reader(in);\n\n    // Read file in one pass.\n    seqan::StringSet<seqan::CharString> ids;\n    seqan::StringSet<seqan::CharString> seqs;\n    seqan::StringSet<seqan::CharString> quals;\n    if (read2(ids, seqs, quals, reader, seqan::Fastq()) != 0)\n        return 1;  // Could not read file.\n\n    for (unsigned i = 0; i < length(ids); ++i)\n        std::cout << ids[i] << '\\t' << seqs[i] << '\\t' << quals[i] << '\\n';\n    \n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "seq", "_", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġconst", "Ġ**", "Ġarg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ!=", "Ġ2", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ġ", "Ġ//", "ĠInvalid", "Ġnumber", "Ġof", "Ġarguments", ".", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠOpen", "Ġfile", "Ġand", "Ġcreate", "ĠRecord", "Reader", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "f", "stream", "Ġin", "(", "arg", "v", "[", "1", "],", "Ġstd", "::", "ios", "::", "binary", "Ġ|", "Ġstd", "::", "ios", "::", "in", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġseq", "an", "::", "Record", "Reader", "<", "std", "::", "f", "stream", ",", "Ġseq", "an", "::", "Single", "Pass", "<", ">", "Ġ>", "Ġreader", "(", "in", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠRead", "Ġfile", "Ġin", "Ġone", "Ġpass", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġseq", "an", "::", "String", "Set", "<", "seq", "an", "::", "Char", "String", ">", "Ġ", "ids", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġseq", "an", "::", "String", "Set", "<", "seq", "an", "::", "Char", "String", ">", "Ġseq", "s", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġseq", "an", "::", "String", "Set", "<", "seq", "an", "::", "Char", "String", ">", "Ġqu", "als", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "read", "2", "(", "ids", ",", "Ġseq", "s", ",", "Ġqu", "als", ",", "Ġreader", ",", "Ġseq", "an", "::", "Fast", "q", "())", "Ġ!=", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ġ", "Ġ//", "ĠCould", "Ġnot", "Ġread", "Ġfile", ".", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "ids", ");", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ", "ids", "[", "i", "]", "Ġ<<", "Ġ'", "\\", "t", "'", "Ġ<<", "Ġseq", "s", "[", "i", "]", "Ġ<<", "Ġ'", "\\", "t", "'", "Ġ<<", "Ġqu", "als", "[", "i", "]", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 3, "comesFrom", ["argc"], [1]], ["in", 7, "comesFrom", ["in"], [4]], ["ids", 13, "comesFrom", ["ids"], [9]], ["ids", 21, "comesFrom", ["ids"], [9]], ["ids", 24, "comesFrom", ["ids"], [9]], ["seqs", 14, "comesFrom", ["seqs"], [10]], ["seqs", 26, "comesFrom", ["seqs"], [10]], ["quals", 15, "comesFrom", ["quals"], [11]], ["quals", 28, "comesFrom", ["quals"], [11]], ["i", 19, "comesFrom", ["i"], [18]], ["i", 22, "comesFrom", ["i"], [18]], ["i", 25, "comesFrom", ["i"], [18]], ["i", 27, "comesFrom", ["i"], [18]], ["i", 29, "comesFrom", ["i"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::226", "code": "// { dg-require-namedlocale \"en_US\" }\n\n// Copyright (C) 2003-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 27.8.1.4 Overridden virtual functions\n\n#include <fstream>\n#include <locale>\n#include <testsuite_hooks.h>\n\n// libstdc++/13171\nvoid test01()\n{\n  bool test __attribute__((unused)) = true;\n  using namespace std;\n\n  filebuf fb;\n  \n  fb.pubimbue(locale(\"en_US\"));\n  fb.pubimbue(locale(\"en_US\"));\n  \n  fb.open(\"tmp_13171-1\", ios_base::out);\n  fb.sputc('F');\n  fb.pubsync();\n  fb.close();\n}\n\nint main()\n{\n  test01();\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "require", "-", "named", "loc", "ale", "Ġ\"", "en", "_", "US", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ27", ".", "8", ".", "1", ".", "4", "ĠOver", "ridden", "Ġvirtual", "Ġfunctions", "Ċ", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "loc", "ale", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "//", "Ġlib", "st", "dc", "++", "/", "13", "171", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ġ", "Ġfile", "buf", "Ġf", "b", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġf", "b", ".", "pub", "imb", "ue", "(", "loc", "ale", "(\"", "en", "_", "US", "\")", ");", "Ċ", "Ġ", "Ġf", "b", ".", "pub", "imb", "ue", "(", "loc", "ale", "(\"", "en", "_", "US", "\")", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġf", "b", ".", "open", "(\"", "tmp", "_", "13", "171", "-", "1", "\",", "Ġi", "os", "_", "base", "::", "out", ");", "Ċ", "Ġ", "Ġf", "b", ".", "s", "put", "c", "('", "F", "');", "Ċ", "Ġ", "Ġf", "b", ".", "pub", "sync", "();", "Ċ", "Ġ", "Ġf", "b", ".", "close", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["fb", 5, "comesFrom", ["fb"], [4]], ["fb", 8, "comesFrom", ["fb"], [4]], ["fb", 11, "comesFrom", ["fb"], [4]], ["fb", 14, "comesFrom", ["fb"], [4]], ["fb", 16, "comesFrom", ["fb"], [4]], ["fb", 18, "comesFrom", ["fb"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::227", "code": "//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n\n// <random>\n\n// template<class _IntType = int>\n// class uniform_int_distribution\n\n// uniform_int_distribution(const uniform_int_distribution&);\n\n#include <random>\n#include <cassert>\n\nvoid\ntest1()\n{\n    typedef std::uniform_int_distribution<long> D;\n    D d1(2, 5);\n    D d2 = d1;\n    assert(d1 == d2);\n}\n\nint main()\n{\n    test1();\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠThe", "ĠLL", "VM", "ĠComp", "iler", "ĠInfrastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUniversity", "Ġof", "ĠIllinois", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLIC", "ENSE", ".", "T", "XT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "Ċ", "//", "Ġ<", "random", ">", "Ċ", "Ċ", "//", "Ġtemplate", "<", "class", "Ġ_", "Int", "Type", "Ġ=", "Ġint", ">", "Ċ", "//", "Ġclass", "Ġuniform", "_", "int", "_", "dist", "ribution", "Ċ", "Ċ", "//", "Ġuniform", "_", "int", "_", "dist", "ribution", "(", "const", "Ġuniform", "_", "int", "_", "dist", "ribution", "&", ");", "Ċ", "Ċ", "#", "include", "Ġ<", "random", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "void", "Ċ", "test", "1", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtyped", "ef", "Ġstd", "::", "un", "iform", "_", "int", "_", "dist", "ribution", "<", "long", ">", "ĠD", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠD", "Ġd", "1", "(", "2", ",", "Ġ5", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠD", "Ġd", "2", "Ġ=", "Ġd", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "d", "1", "Ġ==", "Ġd", "2", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "1", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["d1", 5, "comesFrom", ["d1"], [3]], ["d2", 6, "comesFrom", ["d2"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::228", "code": "/*\n * This file is part of BlottleshipsServer.\n * BlottleshipsServer is licenced under MIT License. See LICENSE for more details.\n */\n\n/** @file manager.cpp Definitons of the game manager. */\n\n#include <iostream>\n\n#include \"manager.h\"\n#include \"player.h\"\n\n/**\n * Constructor.\n * @param io_service Socket to listen to new connections on.\n * @param port Network port to listen on.\n */\nManager::Manager(io_service& io_service, short port)\n\t: acceptor(io_service, ip::tcp::endpoint(ip::tcp::v4(), port)),\n\t  socket(io_service)\n{\n\tthis->DoAccept();\n}\n\n/**\n * Disconnects a player, and removes them from the list.\n * @param player Player to remove.\n */\nvoid Manager::DisconnectPlayer(std::shared_ptr<Player> player)\n{\n\tauto it = std::find(this->connections.begin(), this->connections.end(), player);\n\tassert(it != this->connections.end());\n\tthis->connections.erase(it);\n}\n\n/** Accept an incoming connection */\nvoid Manager::DoAccept()\n{\n\tthis->acceptor.async_accept(this->socket,\n\t\t[this](boost::system::error_code ec)\n\t\t{\n\t\t\tif (!ec) {\n\t\t\t\tauto player = std::make_shared<Player>(std::move(this->socket), *this);\n\t\t\t\tplayer->StartRead();\n\t\t\t\tthis->connections.push_back(std::move(player));\n\t\t\t\tstd::cout << \"New client connected\" << std::endl;\n\t\t\t\tthis->DoAccept();\n\t\t\t}\n\t\t});\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠBl", "ott", "les", "hips", "Server", ".", "Ċ", "Ġ*", "ĠBl", "ott", "les", "hips", "Server", "Ġis", "Ġlic", "enced", "Ġunder", "ĠMIT", "ĠLicense", ".", "ĠSee", "ĠLIC", "ENSE", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "/**", "Ġ@", "file", "Ġmanager", ".", "cpp", "ĠDef", "init", "ons", "Ġof", "Ġthe", "Ġgame", "Ġmanager", ".", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "manager", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "player", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠConstruct", "or", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġio", "_", "service", "ĠSocket", "Ġto", "Ġlisten", "Ġto", "Ġnew", "Ġconnections", "Ġon", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġport", "ĠNetwork", "Ġport", "Ġto", "Ġlisten", "Ġon", ".", "Ċ", "Ġ*/", "Ċ", "Manager", "::", "Manager", "(", "io", "_", "service", "&", "Ġio", "_", "service", ",", "Ġshort", "Ġport", ")", "Ċ", "ĉ", ":", "Ġaccept", "or", "(", "io", "_", "service", ",", "Ġip", "::", "t", "cp", "::", "end", "point", "(", "ip", "::", "t", "cp", "::", "v", "4", "(),", "Ġport", ")),", "Ċ", "ĉ", "Ġ", "Ġsocket", "(", "io", "_", "service", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "Do", "Accept", "();", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠDis", "connect", "s", "Ġa", "Ġplayer", ",", "Ġand", "Ġremoves", "Ġthem", "Ġfrom", "Ġthe", "Ġlist", ".", "Ċ", "Ġ*", "Ġ@", "param", "Ġplayer", "ĠPlayer", "Ġto", "Ġremove", ".", "Ċ", "Ġ*/", "Ċ", "void", "ĠManager", "::", "Dis", "connect", "Player", "(", "std", "::", "shared", "_", "ptr", "<", "Player", ">", "Ġplayer", ")", "Ċ", "{", "Ċ", "ĉ", "auto", "Ġit", "Ġ=", "Ġstd", "::", "find", "(", "this", "->", "connect", "ions", ".", "begin", "(),", "Ġthis", "->", "connect", "ions", ".", "end", "(),", "Ġplayer", ");", "Ċ", "ĉ", "assert", "(", "it", "Ġ!=", "Ġthis", "->", "connect", "ions", ".", "end", "());", "Ċ", "ĉ", "this", "->", "connect", "ions", ".", "er", "ase", "(", "it", ");", "Ċ", "}", "Ċ", "Ċ", "/**", "ĠAccept", "Ġan", "Ġincoming", "Ġconnection", "Ġ*/", "Ċ", "void", "ĠManager", "::", "Do", "Accept", "()", "Ċ", "{", "Ċ", "ĉ", "this", "->", "accept", "or", ".", "as", "ync", "_", "accept", "(", "this", "->", "socket", ",", "Ċ", "ĉ", "ĉ", "[", "this", "](", "boost", "::", "system", "::", "error", "_", "code", "Ġec", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(!", "ec", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "auto", "Ġplayer", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "Player", ">(", "std", "::", "move", "(", "this", "->", "socket", "),", "Ġ*", "this", ");", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "player", "->", "Start", "Read", "();", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "this", "->", "connect", "ions", ".", "push", "_", "back", "(", "std", "::", "move", "(", "player", "));", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "New", "Ġclient", "Ġconnected", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "this", "->", "Do", "Accept", "();", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "});", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["port", 7, "comesFrom", ["port"], [2]], ["player", 19, "comesFrom", ["player"], [12]], ["player", 37, "comesFrom", ["player"], [33]], ["player", 42, "comesFrom", ["player"], [33]], ["it", 21, "comesFrom", ["it"], [13]], ["it", 26, "comesFrom", ["it"], [13]], ["ec", 32, "comesFrom", ["ec"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::229", "code": "#include <iostream>\n\nint main () \n{\n    const float r1= 3.5, r2 = 7.3, pi = 3.14159;\n\n    float area1 = pi * r1*r1;\n    std::cout << \"A circle of radius \" << r1 << \" has area \" \n\t      << area1 << \".\" << std::endl;\n\n    std::cout << \"The average of \" << r1 << \" and \" << r2 << \" is \" \n\t      << (r1 + r2) / 2 << \".\" << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġfloat", "Ġr", "1", "=", "Ġ3", ".", "5", ",", "Ġr", "2", "Ġ=", "Ġ7", ".", "3", ",", "Ġpi", "Ġ=", "Ġ3", ".", "14", "159", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġarea", "1", "Ġ=", "Ġpi", "Ġ*", "Ġr", "1", "*", "r", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "A", "Ġcircle", "Ġof", "Ġradius", "Ġ\"", "Ġ<<", "Ġr", "1", "Ġ<<", "Ġ\"", "Ġhas", "Ġarea", "Ġ\"", "Ġ", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġarea", "1", "Ġ<<", "Ġ\"", ".\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "The", "Ġaverage", "Ġof", "Ġ\"", "Ġ<<", "Ġr", "1", "Ġ<<", "Ġ\"", "Ġand", "Ġ\"", "Ġ<<", "Ġr", "2", "Ġ<<", "Ġ\"", "Ġis", "Ġ\"", "Ġ", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ(", "r", "1", "Ġ+", "Ġr", "2", ")", "Ġ/", "Ġ2", "Ġ<<", "Ġ\"", ".\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["pi", 5, "comesFrom", ["pi"], [3]], ["r1", 6, "comesFrom", ["r1"], [1]], ["r1", 7, "comesFrom", ["r1"], [1]], ["r1", 9, "comesFrom", ["r1"], [1]], ["r1", 13, "comesFrom", ["r1"], [1]], ["r1", 15, "comesFrom", ["r1"], [1]], ["area1", 10, "comesFrom", ["area1"], [4]], ["r2", 14, "comesFrom", ["r2"], [2]], ["r2", 16, "comesFrom", ["r2"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::230", "code": "#include \"IRRemoteBenq.h\"\n\nIRRemoteBenq::IRRemoteBenq(int irPin) : IRRemote(irPin){\n  setup(38, 32, 9000, 4500, 600, 1600, 520);\n}\n\nvoid IRRemoteBenq::SendCommand(String command) { \n  if(command == \"ON\")\n    send(ON);\n  if(command == \"OFF\")\n    send(OFF);\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "IR", "Remote", "Ben", "q", ".", "h", "\"", "Ċ", "Ċ", "IR", "Remote", "Ben", "q", "::", "IR", "Remote", "Ben", "q", "(", "int", "Ġir", "Pin", ")", "Ġ:", "ĠIR", "Remote", "(", "ir", "Pin", "){", "Ċ", "Ġ", "Ġsetup", "(", "38", ",", "Ġ32", ",", "Ġ9000", ",", "Ġ4", "500", ",", "Ġ600", ",", "Ġ1600", ",", "Ġ520", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠIR", "Remote", "Ben", "q", "::", "Send", "Command", "(", "String", "Ġcommand", ")", "Ġ{", "Ġ", "Ċ", "Ġ", "Ġif", "(", "command", "Ġ==", "Ġ\"", "ON", "\")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsend", "(", "ON", ");", "Ċ", "Ġ", "Ġif", "(", "command", "Ġ==", "Ġ\"", "OFF", "\")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsend", "(", "OFF", ");", "Ċ", "}"], "dataflow_graph": [["irPin", 3, "comesFrom", ["irPin"], [1]], ["command", 7, "comesFrom", ["command"], [6]], ["command", 10, "comesFrom", ["command"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::231", "code": "int main() {\r\n\tint n = 5;\r\n\tTower towers[n];\r\n\tfor (int i = n - 1; i >= 0; -- i) {\r\n\t\ttowers[0].add(i);\r\n\t}\r\n\ttowers[0].moveDisks(n, towers[2], towers[1]);\r\n}\r\nclass Tower {\r\npublic:\r\n\tTower(int i) {\r\n\t\tindex = i;\r\n\t}\r\n\tint index() {\r\n\t\treturn index;\r\n\t}\r\n\tvoid add(int d) {\r\n\t\tif (! disks.empty() && disks.peek() <= d) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisks.push(d);\r\n\t\t}\r\n\t}\r\n\tvoid moveTopTo(Tower t) {\r\n\t\tint top = disks.pop();\r\n\t\tt.add(top);\r\n\t}\r\nprivate:\r\n\tstack<int> disks;\r\n\tint index;\r\n};", "code_tokens": ["Ġint", "Ġmain", "()", "Ġ{", "č", "Ċ", "ĉ", "int", "Ġn", "Ġ=", "Ġ5", ";", "č", "Ċ", "ĉ", "T", "ower", "Ġtowers", "[", "n", "];", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġn", "Ġ-", "Ġ1", ";", "Ġi", "Ġ>=", "Ġ0", ";", "Ġ--", "Ġi", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "t", "owers", "[", "0", "].", "add", "(", "i", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "t", "owers", "[", "0", "].", "move", "Dis", "ks", "(", "n", ",", "Ġtowers", "[", "2", "],", "Ġtowers", "[", "1", "]);", "č", "Ċ", "}", "č", "Ċ", "class", "ĠTower", "Ġ{", "č", "Ċ", "public", ":", "č", "Ċ", "ĉ", "T", "ower", "(", "int", "Ġi", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "index", "Ġ=", "Ġi", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "int", "Ġindex", "()", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "return", "Ġindex", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "void", "Ġadd", "(", "int", "Ġd", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(!", "Ġdisks", ".", "empty", "()", "Ġ&&", "Ġdisks", ".", "pe", "ek", "()", "Ġ<=", "Ġd", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "return", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "else", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "dis", "ks", ".", "push", "(", "d", ");", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "void", "Ġmove", "Top", "To", "(", "T", "ower", "Ġt", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "int", "Ġtop", "Ġ=", "Ġdisks", ".", "pop", "();", "č", "Ċ", "ĉ", "ĉ", "t", ".", "add", "(", "top", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "private", ":", "č", "Ċ", "ĉ", "stack", "<", "int", ">", "Ġdisks", ";", "č", "Ċ", "ĉ", "int", "Ġindex", ";", "č", "Ċ", "};"], "dataflow_graph": [["n", 3, "comesFrom", ["n"], [1]], ["n", 5, "comesFrom", ["n"], [1]], ["n", 13, "comesFrom", ["n"], [1]], ["i", 6, "comesFrom", ["i"], [4]], ["i", 7, "comesFrom", ["i"], [4]], ["i", 10, "comesFrom", ["i"], [4]], ["i", 19, "comesFrom", ["i"], [17]], ["index", 20, "comesFrom", ["index"], [18]], ["index", 21, "comesFrom", ["index"], [18]], ["index", 41, "comesFrom", ["index"], [18]], ["d", 28, "comesFrom", ["d"], [23]], ["d", 31, "comesFrom", ["d"], [23]], ["t", 37, "comesFrom", ["t"], [33]], ["top", 39, "comesFrom", ["top"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::232", "code": "#include \"uartserver.h\"\n\nvoid UARTserver::begin(unsigned long int baudrate) {\n    Serial.begin(baudrate);\n    while(Serial.available());\n        Serial.read();\n}\n\n#define CMD_SIZE 10\n\nchar *UARTserver::getCmd(void) {\n    int c;\n    int static index;\n    char static cmd[CMD_SIZE+1];\n\n    if ((c = Serial.read()) != -1) {\n        if (index && ((char) c == '\\r')) {\n            cmd[index] = '\\0';\n            index = 0;\n            return cmd;\n        }\n        else {\n            if (index < CMD_SIZE)\n                cmd[index++] = (char) c;\n            return 0;\n        }\n    }\n    return 0;\n}\n\nvoid UARTserver::sendMsg(const char *msg) {\n    Serial.println(msg);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "uart", "server", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠU", "ART", "server", "::", "begin", "(", "unsigned", "Ġlong", "Ġint", "Ġb", "aud", "rate", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSerial", ".", "begin", "(", "b", "aud", "rate", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "Serial", ".", "available", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSerial", ".", "read", "();", "Ċ", "}", "Ċ", "Ċ", "#", "define", "ĠC", "MD", "_", "SIZE", "Ġ10", "Ċ", "Ċ", "char", "Ġ*", "U", "ART", "server", "::", "get", "Cmd", "(", "void", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġstatic", "Ġindex", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġstatic", "Ġcmd", "[", "C", "MD", "_", "SIZE", "+", "1", "];", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "c", "Ġ=", "ĠSerial", ".", "read", "())", "Ġ!=", "Ġ-", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "index", "Ġ&&", "Ġ((", "char", ")", "Ġc", "Ġ==", "Ġ'", "\\", "r", "'", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcmd", "[", "index", "]", "Ġ=", "Ġ'", "\\", "0", "';", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġindex", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcmd", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "index", "Ġ<", "ĠC", "MD", "_", "SIZE", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcmd", "[", "index", "++", "]", "Ġ=", "Ġ(", "char", ")", "Ġc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠU", "ART", "server", "::", "send", "Msg", "(", "const", "Ġchar", "Ġ*", "msg", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSerial", ".", "println", "(", "msg", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["baudrate", 4, "comesFrom", ["baudrate"], [1]], ["index", 18, "comesFrom", ["index"], [12]], ["index", 21, "comesFrom", ["index"], [12]], ["index", 24, "comesFrom", ["index"], [22]], ["index", 27, "comesFrom", ["index"], [22]], ["c", 19, "comesFrom", ["c"], [15]], ["c", 28, "comesFrom", ["c"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::233", "code": "#include <iostream>\nusing namespace std;\n\nint gcd(int num1,int num2);\n\nint main()\n{\nint x=40;\nint y =150;\nint result =gcd(x,y);\ncout << \"the gcd of \" << x << \" and \" << y<<\" is \"<< result;\n\n}\n\nint gcd(int num1, int num2)\n{\n\tint m,i;\n\tif(num1>num2)\n\t{\n\t   m=num2;\n\t}\n\telse\n\t{\n\t   m=num1;\n\t}\n\n\tfor(i=m;i>=1;i--)\n\t{\n\t    if(num1%i==0 && num2%i==0)\n\t\t{\n\t\t\tm=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn m;\n\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġg", "cd", "(", "int", "Ġnum", "1", ",", "int", "Ġnum", "2", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "int", "Ġx", "=", "40", ";", "Ċ", "int", "Ġy", "Ġ=", "150", ";", "Ċ", "int", "Ġresult", "Ġ=", "g", "cd", "(", "x", ",", "y", ");", "Ċ", "c", "out", "Ġ<<", "Ġ\"", "the", "Ġg", "cd", "Ġof", "Ġ\"", "Ġ<<", "Ġx", "Ġ<<", "Ġ\"", "Ġand", "Ġ\"", "Ġ<<", "Ġy", "<<", "\"", "Ġis", "Ġ\"", "<<", "Ġresult", ";", "Ċ", "Ċ", "}", "Ċ", "Ċ", "int", "Ġg", "cd", "(", "int", "Ġnum", "1", ",", "Ġint", "Ġnum", "2", ")", "Ċ", "{", "Ċ", "ĉ", "int", "Ġm", ",", "i", ";", "Ċ", "ĉ", "if", "(", "num", "1", ">", "num", "2", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġm", "=", "num", "2", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ċ", "ĉ", "{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġm", "=", "num", "1", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "for", "(", "i", "=", "m", ";", "i", ">", "=", "1", ";", "i", "--", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "num", "1", "%", "i", "==", "0", "Ġ&&", "Ġnum", "2", "%", "i", "==", "0", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "m", "=", "i", ";", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġm", ";", "ĊĊ", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 9, "comesFrom", ["x"], [5]], ["x", 12, "comesFrom", ["x"], [5]], ["y", 10, "comesFrom", ["y"], [6]], ["y", 13, "comesFrom", ["y"], [6]], ["result", 14, "comesFrom", ["result"], [7]], ["num1", 20, "comesFrom", ["num1"], [16]], ["num1", 25, "comesFrom", ["num1"], [16]], ["num1", 30, "comesFrom", ["num1"], [16]], ["num2", 21, "comesFrom", ["num2"], [17]], ["num2", 23, "comesFrom", ["num2"], [17]], ["num2", 32, "comesFrom", ["num2"], [17]], ["m", 27, "comesFrom", ["m"], [24]], ["m", 36, "comesFrom", ["m"], [34]], ["i", 28, "comesFrom", ["i"], [26]], ["i", 29, "comesFrom", ["i"], [26]], ["i", 31, "comesFrom", ["i"], [26]], ["i", 33, "comesFrom", ["i"], [26]], ["i", 35, "comesFrom", ["i"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::234", "code": "#include \"gecko.hpp\"\n#include <string>\n#include <thread>\n#include <iostream>\n#include \"time.h\"\n\nusing namespace std;\n\n\nvoid pubt(void){\n    gecko::init();\n\n    Rate rate(2);\n\n    Publisher *p = gecko::advertise(\"bob\");\n\n    while(gecko::ok()){\n        zmq::message_t msg(\"hello\",5);\n        cout << msg << endl;\n        p->pub(msg);\n        rate.sleep();\n    }\n\n    delete p;\n}\n\n\nvoid callback(zmq::message_t& m){\n    cout << m << endl;\n}\n\nvoid subt(void){\n    gecko::init();\n    // gecko::subscribe(\"bob\", callback);\n    // gecko::spin();\n}\n\nint main(int argc, char* argv[]){\n    thread t1(pubt);\n    thread t2(subt);\n\n    t1.join();\n    t2.join();\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ge", "cko", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ\"", "time", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "void", "Ġpub", "t", "(", "void", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġge", "cko", "::", "init", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠRate", "Ġrate", "(", "2", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠPublisher", "Ġ*", "p", "Ġ=", "Ġge", "cko", "::", "advert", "ise", "(\"", "b", "ob", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "ge", "cko", "::", "ok", "()", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġz", "m", "q", "::", "message", "_", "t", "Ġmsg", "(\"", "hello", "\",", "5", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġmsg", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "->", "pub", "(", "msg", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrate", ".", "sleep", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġp", ";", "Ċ", "}", "ĊĊ", "Ċ", "void", "Ġcallback", "(", "z", "m", "q", "::", "message", "_", "t", "&", "Ġm", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġm", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsubt", "(", "void", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġge", "cko", "::", "init", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġge", "cko", "::", "sub", "scribe", "(\"", "b", "ob", "\",", "Ġcallback", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġge", "cko", "::", "spin", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthread", "Ġt", "1", "(", "pub", "t", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthread", "Ġt", "2", "(", "sub", "t", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġt", "1", ".", "join", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", "2", ".", "join", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["msg", 9, "comesFrom", ["msg"], [7]], ["msg", 13, "comesFrom", ["msg"], [7]], ["rate", 14, "comesFrom", ["rate"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::235", "code": "/*\n * Copyright 2017 Rowun Giles - http://github.com/rowungiles\n */\n\n#ifndef helpers\n#define helpers\n\n#include <string>\n#include <vector>\n\nnamespace HeckelDiffHelpers {\n\n    static auto components_seperated_by_delimiter(const std::string string, const char delimiter) {\n\n        uint32_t i = 0;\n\n        std::string tmp;\n        std::vector<std::string> s;\n\n        for (const auto &character : string) {\n\n            if (character != delimiter) {\n                tmp.insert(i, 1, character);\n                i += 1;\n            } else {\n                s.push_back(tmp);\n                tmp = \"\";\n                i = 0;\n            }\n        }\n\n        s.push_back(tmp);\n\n        return s;\n    }\n\n#endif //helpers\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2017", "ĠRow", "un", "ĠGiles", "Ġ-", "Ġhttp", "://", "github", ".", "com", "/", "row", "ung", "iles", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "if", "nd", "ef", "Ġhelpers", "Ċ", "#", "define", "Ġhelpers", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "names", "pace", "ĠHe", "c", "kel", "Diff", "Hel", "pers", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġauto", "Ġcomponents", "_", "se", "per", "ated", "_", "by", "_", "del", "im", "iter", "(", "const", "Ġstd", "::", "string", "Ġstring", ",", "Ġconst", "Ġchar", "Ġdelim", "iter", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġuint", "32", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġtmp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġs", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "Ġ&", "character", "Ġ:", "Ġstring", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "character", "Ġ!=", "Ġdelim", "iter", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtmp", ".", "insert", "(", "i", ",", "Ġ1", ",", "Ġcharacter", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "Ġ+=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "push", "_", "back", "(", "tmp", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtmp", "Ġ=", "Ġ\"", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", ".", "push", "_", "back", "(", "tmp", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "#", "endif", "Ġ//", "help", "ers", "Ċ", "}", "Ċ"], "dataflow_graph": [["string", 9, "comesFrom", ["string"], [3]], ["delimiter", 11, "comesFrom", ["delimiter"], [4]], ["tmp", 12, "comesFrom", ["tmp"], [6]], ["tmp", 19, "comesFrom", ["tmp"], [6]], ["tmp", 24, "comesFrom", ["tmp"], [20]], ["i", 14, "comesFrom", ["i"], [5]], ["s", 17, "comesFrom", ["s"], [7]], ["s", 22, "comesFrom", ["s"], [7]], ["s", 25, "comesFrom", ["s"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::236", "code": "#include <iterator>\n\n#include \"pipe/algorithm.h\"\n#include \"pipe/generator.h\"\n\n#include \"pintest.hpp\"\n\nusing namespace pipe::algorithm;\nusing namespace pipe::generator;\n\nTEST_GROUP(collect_test)\n{\n    TEST(collect_no_items)\n    {\n        std::vector<int> out {};\n        count<int>() | take_n(0) | collect(std::back_inserter(out));\n\n        test::assert::is_true(out.empty());\n    }\n\n    TEST(collect_multiple_items)\n    {\n        std::vector<int> out { };\n        count<int>() | take_n(5) | collect(std::back_inserter(out));\n\n        test::assert::equals(5, out.size());\n    }\n};", "code_tokens": ["Ġ#", "include", "Ġ<", "iterator", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "pipe", "/", "al", "gorithm", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "pipe", "/", "gener", "ator", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "p", "int", "est", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġpipe", "::", "al", "gorithm", ";", "Ċ", "using", "Ġnamespace", "Ġpipe", "::", "gener", "ator", ";", "Ċ", "Ċ", "T", "EST", "_", "GROUP", "(", "collect", "_", "test", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTEST", "(", "collect", "_", "no", "_", "items", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġout", "Ġ{", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcount", "<", "int", ">", "()", "Ġ|", "Ġtake", "_", "n", "(", "0", ")", "Ġ|", "Ġcollect", "(", "std", "::", "back", "_", "ins", "er", "ter", "(", "out", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtest", "::", "assert", "::", "is", "_", "true", "(", "out", ".", "empty", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠTEST", "(", "collect", "_", "multiple", "_", "items", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġout", "Ġ{", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcount", "<", "int", ">", "()", "Ġ|", "Ġtake", "_", "n", "(", "5", ")", "Ġ|", "Ġcollect", "(", "std", "::", "back", "_", "ins", "er", "ter", "(", "out", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtest", "::", "assert", "::", "equ", "als", "(", "5", ",", "Ġout", ".", "size", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["out", 9, "comesFrom", ["out"], [4]], ["out", 11, "comesFrom", ["out"], [4]], ["out", 19, "comesFrom", ["out"], [14]], ["out", 21, "comesFrom", ["out"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::237", "code": "#include <gtest/gtest.h>\nusing namespace std;\n\ndouble myPow1(double x, int n)\n{\n\tdouble result = 1;\n\tbool sign = false;\n\tif (n < 0)\n\t{\n\t\tsign = true;\n\t\tn = -n;\n\t}\n\n\twhile(--n >= 0)\n\t{\n\t\tresult *= x;\n\t}\n\n\tif (sign)\n\t{\n\t\tresult = 1 / result;\n\t}\n\n\treturn result;\n}\n\ndouble myPow(double x, int n)\n{\n\tif (n==0)\n\t{\n\t\treturn 1;\n\t}\n\n\tif (n < 0)\n\t{\n\t\tx = 1/x;\n\t\tif (n == 0x80000000)\n\t\t{\n\t\t\tn = 0x7FFFFFFF;\n\t\t\tx *= x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tn = -n;\n\t\t}\n\t}\n\n\treturn (n % 2==0) ? myPow(x*x,n/2) : x* myPow(x*x,n/2);\n}\n\nTEST(LeetCode, tMyPow)\n{\n\tASSERT_DOUBLE_EQ(myPow(8.88023,3),700.281482945268167);\n\tASSERT_DOUBLE_EQ(myPow(34.00515,-3),0.00003);\n\t//ASSERT_DOUBLE_EQ(myPow(2.00000,-2147483648),0.00000);\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "double", "Ġmy", "P", "ow", "1", "(", "double", "Ġx", ",", "Ġint", "Ġn", ")", "Ċ", "{", "Ċ", "ĉ", "double", "Ġresult", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "bool", "Ġsign", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "if", "Ġ(", "n", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "sign", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "n", "Ġ=", "Ġ-", "n", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "while", "(", "--", "n", "Ġ>=", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "result", "Ġ*", "=", "Ġx", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "if", "Ġ(", "sign", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "result", "Ġ=", "Ġ1", "Ġ/", "Ġresult", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "double", "Ġmy", "P", "ow", "(", "double", "Ġx", ",", "Ġint", "Ġn", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "n", "==", "0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "if", "Ġ(", "n", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "x", "Ġ=", "Ġ1", "/", "x", ";", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "n", "Ġ==", "Ġ0", "x", "8", "0000000", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "n", "Ġ=", "Ġ0", "x", "7", "FFFF", "FF", "F", ";", "Ċ", "ĉ", "ĉ", "ĉ", "x", "Ġ*", "=", "Ġx", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "n", "Ġ=", "Ġ-", "n", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ(", "n", "Ġ%", "Ġ2", "==", "0", ")", "Ġ?", "Ġmy", "P", "ow", "(", "x", "*", "x", ",", "n", "/", "2", ")", "Ġ:", "Ġx", "*", "Ġmy", "P", "ow", "(", "x", "*", "x", ",", "n", "/", "2", ");", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "(", "Le", "et", "Code", ",", "Ġt", "My", "P", "ow", ")", "Ċ", "{", "Ċ", "ĉ", "ASS", "ERT", "_", "D", "OU", "BLE", "_", "E", "Q", "(", "my", "P", "ow", "(", "8", ".", "880", "23", ",", "3", "),", "700", ".", "28", "148", "29", "45", "268", "167", ");", "Ċ", "ĉ", "ASS", "ERT", "_", "D", "OU", "BLE", "_", "E", "Q", "(", "my", "P", "ow", "(", "34", ".", "005", "15", ",-", "3", "),", "0", ".", "0000", "3", ");", "Ċ", "ĉ", "//", "ASS", "ERT", "_", "D", "OU", "BLE", "_", "E", "Q", "(", "my", "P", "ow", "(", "2", ".", "00000", ",-", "2", "147", "48", "364", "8", "),", "0", ".", "00000", ");", "Ċ", "}"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [3]], ["n", 9, "comesFrom", ["n"], [8]], ["n", 10, "comesFrom", ["n"], [8]], ["n", 20, "comesFrom", ["n"], [19]], ["n", 21, "comesFrom", ["n"], [19]], ["n", 24, "comesFrom", ["n"], [19]], ["n", 29, "comesFrom", ["n"], [28]], ["n", 30, "comesFrom", ["n"], [28]], ["n", 34, "comesFrom", ["n"], [28]], ["n", 39, "comesFrom", ["n"], [28]], ["x", 12, "comesFrom", ["x"], [2]], ["x", 23, "comesFrom", ["x"], [22]], ["x", 27, "comesFrom", ["x"], [26]], ["x", 32, "comesFrom", ["x"], [26]], ["x", 33, "comesFrom", ["x"], [26]], ["x", 35, "comesFrom", ["x"], [26]], ["x", 37, "comesFrom", ["x"], [26]], ["x", 38, "comesFrom", ["x"], [26]], ["sign", 13, "comesFrom", ["sign"], [7]], ["result", 15, "comesFrom", ["result"], [14]], ["result", 16, "comesFrom", ["result"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::238", "code": "#include \"length.h\"\r\n#include \"defaultunit.h\"\r\n#include <QReadWriteLock>\r\n#include <QReadLocker>\r\n\r\nnamespace dewalls {\r\n\r\nLength::Length()\r\n    : UnitType<Length>(\"length\")\r\n{\r\n    _meters = new DefaultUnit<Length>(\"m\", this, 1.0L, 1.0L);\r\n    _centimeters = new DefaultUnit<Length>(\"cm\", this, 0.001L, _meters);\r\n    _kilometers = new DefaultUnit<Length>(\"km\", this, 1000.0L, _meters);\r\n    _feet = new DefaultUnit<Length>(\"ft\", this, 0.3048L, _meters);\r\n    _yards = new DefaultUnit<Length>(\"yd\", this, 3.0L, _feet);\r\n    _inches = new DefaultUnit<Length>(\"in\", this, 1.0L / 12.0L, _feet);\r\n\r\n    addUnit(_meters);\r\n    addUnit(_centimeters);\r\n    addUnit(_kilometers);\r\n    addUnit(_feet);\r\n    addUnit(_yards);\r\n    addUnit(_inches);\r\n}\r\n\r\nQSharedPointer<Length> Length::_type = QSharedPointer<Length>();\r\n\r\nvoid Length::init()\r\n{\r\n    if (_type.isNull())\r\n    {\r\n        _type = QSharedPointer<Length>(new Length());\r\n    }\r\n}\r\n\r\n} // namespace dewalls\r\n\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "length", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "default", "unit", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "Q", "Read", "Write", "Lock", ">", "č", "Ċ", "#", "include", "Ġ<", "Q", "Read", "L", "ocker", ">", "č", "Ċ", "č", "Ċ", "names", "pace", "Ġde", "w", "alls", "Ġ{", "č", "Ċ", "č", "Ċ", "Length", "::", "Length", "()", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠUnit", "Type", "<", "Length", ">", "(\"", "length", "\")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "met", "ers", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">", "(\"", "m", "\",", "Ġthis", ",", "Ġ1", ".", "0", "L", ",", "Ġ1", ".", "0", "L", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "cent", "imeters", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">", "(\"", "cm", "\",", "Ġthis", ",", "Ġ0", ".", "001", "L", ",", "Ġ_", "met", "ers", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "kil", "ometers", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">", "(\"", "km", "\",", "Ġthis", ",", "Ġ1000", ".", "0", "L", ",", "Ġ_", "met", "ers", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "feet", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">", "(\"", "ft", "\",", "Ġthis", ",", "Ġ0", ".", "30", "48", "L", ",", "Ġ_", "met", "ers", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "yards", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">", "(\"", "yd", "\",", "Ġthis", ",", "Ġ3", ".", "0", "L", ",", "Ġ_", "feet", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "inches", "Ġ=", "Ġnew", "ĠDefault", "Unit", "<", "Length", ">", "(\"", "in", "\",", "Ġthis", ",", "Ġ1", ".", "0", "L", "Ġ/", "Ġ12", ".", "0", "L", ",", "Ġ_", "feet", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadd", "Unit", "(_", "met", "ers", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadd", "Unit", "(_", "cent", "imeters", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadd", "Unit", "(_", "kil", "ometers", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadd", "Unit", "(_", "feet", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadd", "Unit", "(_", "yards", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadd", "Unit", "(_", "inches", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Q", "Sh", "ared", "Po", "inter", "<", "Length", ">", "ĠLength", "::", "_", "type", "Ġ=", "ĠQ", "Sh", "ared", "Po", "inter", "<", "Length", ">", "();", "č", "Ċ", "č", "Ċ", "void", "ĠLength", "::", "init", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(_", "type", ".", "is", "Null", "())", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "type", "Ġ=", "ĠQ", "Sh", "ared", "Po", "inter", "<", "Length", ">(", "new", "ĠLength", "());", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġde", "w", "alls", "č", "Ċ", "č", "Ċ"], "dataflow_graph": [["_meters", 4, "comesFrom", ["_meters"], [2]], ["_meters", 6, "comesFrom", ["_meters"], [2]], ["_meters", 8, "comesFrom", ["_meters"], [2]], ["_meters", 14, "comesFrom", ["_meters"], [2]], ["_feet", 10, "comesFrom", ["_feet"], [7]], ["_feet", 12, "comesFrom", ["_feet"], [7]], ["_feet", 20, "comesFrom", ["_feet"], [7]], ["_centimeters", 16, "comesFrom", ["_centimeters"], [3]], ["_kilometers", 18, "comesFrom", ["_kilometers"], [5]], ["_yards", 22, "comesFrom", ["_yards"], [9]], ["_inches", 24, "comesFrom", ["_inches"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::239", "code": "#include \"ycommon/utils/assert.h\"\n\n#include <cstdio>\n#include <Windows.h>\n\n#include \"ycommon/platform/platform_handle_win.h\"\n\nnamespace {\n  HWND gMainWindowHandle = NULL;\n}\n\nnamespace ycommon { namespace utils {\n\nvoid Assert::Initialize(\n    const platform::PlatformHandle& platform_handle) {\n  const platform::WinPlatformHandle& win_handle =\n      reinterpret_cast<const platform::WinPlatformHandle&>(platform_handle);\n  gMainWindowHandle = win_handle.mHwnd;\n}\n\nvoid Assert::Terminate() {\n}\n\nvoid Assert::Assert(const char* file, uint32_t line, const char* message) {\n  char buffer[512];\n  buffer[sizeof(buffer)-1] = '\\0';\n  snprintf(buffer, sizeof(buffer)-1, \"[%s:%u] %s\", file, line, message);\n  MessageBoxA(gMainWindowHandle, buffer, \"Assertion\", MB_OK );\n  __debugbreak();\n}\n\nvoid Assert::Warn(const char* file, uint32_t line, const char* message) {\n  static_cast<void>(file);\n  static_cast<void>(line);\n  static_cast<void>(message);\n}\n\n}} // namespace ycommon { namespace utils {\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "y", "common", "/", "utils", "/", "assert", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "Windows", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "y", "common", "/", "platform", "/", "platform", "_", "handle", "_", "win", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ġ", "ĠHW", "ND", "Ġg", "Main", "Window", "Handle", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "Ġy", "common", "Ġ{", "Ġnamespace", "Ġut", "ils", "Ġ{", "Ċ", "Ċ", "void", "ĠAss", "ert", "::", "Initial", "ize", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġplatform", "::", "Platform", "Handle", "&", "Ġplatform", "_", "handle", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġplatform", "::", "Win", "Platform", "Handle", "&", "Ġwin", "_", "handle", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġre", "interpret", "_", "cast", "<", "const", "Ġplatform", "::", "Win", "Platform", "Handle", "&", ">(", "platform", "_", "handle", ");", "Ċ", "Ġ", "Ġg", "Main", "Window", "Handle", "Ġ=", "Ġwin", "_", "handle", ".", "m", "H", "w", "nd", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAss", "ert", "::", "Termin", "ate", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAss", "ert", "::", "Ass", "ert", "(", "const", "Ġchar", "*", "Ġfile", ",", "Ġuint", "32", "_", "t", "Ġline", ",", "Ġconst", "Ġchar", "*", "Ġmessage", ")", "Ġ{", "Ċ", "Ġ", "Ġchar", "Ġbuffer", "[", "512", "];", "Ċ", "Ġ", "Ġbuffer", "[", "size", "of", "(", "buffer", ")-", "1", "]", "Ġ=", "Ġ'", "\\", "0", "';", "Ċ", "Ġ", "Ġsn", "printf", "(", "buffer", ",", "Ġsizeof", "(", "buffer", ")-", "1", ",", "Ġ\"[", "%", "s", ":", "%", "u", "]", "Ġ%", "s", "\",", "Ġfile", ",", "Ġline", ",", "Ġmessage", ");", "Ċ", "Ġ", "ĠMessage", "Box", "A", "(", "g", "Main", "Window", "Handle", ",", "Ġbuffer", ",", "Ġ\"", "Ass", "ert", "ion", "\",", "ĠMB", "_", "OK", "Ġ);", "Ċ", "Ġ", "Ġ__", "debug", "break", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAss", "ert", "::", "W", "arn", "(", "const", "Ġchar", "*", "Ġfile", ",", "Ġuint", "32", "_", "t", "Ġline", ",", "Ġconst", "Ġchar", "*", "Ġmessage", ")", "Ġ{", "Ċ", "Ġ", "Ġstatic", "_", "cast", "<", "void", ">(", "file", ");", "Ċ", "Ġ", "Ġstatic", "_", "cast", "<", "void", ">(", "line", ");", "Ċ", "Ġ", "Ġstatic", "_", "cast", "<", "void", ">(", "message", ");", "Ċ", "}", "Ċ", "Ċ", "}}", "Ġ//", "Ġnamespace", "Ġy", "common", "Ġ{", "Ġnamespace", "Ġut", "ils", "Ġ{", "Ċ"], "dataflow_graph": [["line", 21, "comesFrom", ["line"], [12]], ["line", 35, "comesFrom", ["line"], [30]], ["gMainWindowHandle", 24, "comesFrom", ["gMainWindowHandle"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::240", "code": "#include \"error.h\"\n#include <stdlib.h>\n\nvoid fatal(const char* msg, ...)\n{\n    va_list v;\n    printf(P_COLOR_RED \">> Fatal : \" P_COLOR_RESET);\n    printf(msg, v);\n    printf(\"\\n\");\n    exit(EXIT_FAILURE);\n}\n\nvoid soft(const char* msg, ...)\n{\n    va_list v;\n    printf(P_COLOR_RED \">> : \" P_COLOR_RESET);\n    printf(msg, v);\n    printf(\"\\n\");\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "error", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "void", "Ġfatal", "(", "const", "Ġchar", "*", "Ġmsg", ",", "Ġ...", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġva", "_", "list", "Ġv", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(", "P", "_", "COLOR", "_", "RED", "Ġ\"", ">>", "ĠFatal", "Ġ:", "Ġ\"", "ĠP", "_", "COLOR", "_", "RES", "ET", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(", "msg", ",", "Ġv", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġexit", "(", "EX", "IT", "_", "FA", "IL", "URE", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsoft", "(", "const", "Ġchar", "*", "Ġmsg", ",", "Ġ...", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġva", "_", "list", "Ġv", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(", "P", "_", "COLOR", "_", "RED", "Ġ\"", ">>", "Ġ:", "Ġ\"", "ĠP", "_", "COLOR", "_", "RES", "ET", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(", "msg", ",", "Ġv", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "\\", "n", "\");", "Ċ", "}"], "dataflow_graph": [["v", 8, "comesFrom", ["v"], [2]], ["v", 20, "comesFrom", ["v"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::241", "code": "#include <stdio.h>\n\nint main(void)\n{\n    int n, i;\n    double a0, an1, a1;\n    double c[3000];\n\n    while (scanf(\"%d\", &n) != EOF)\n    {\n        scanf(\"%lf%lf\", &a0, &an1);\n        for (i = 0; i < n; i++)\n            scanf(\"%lf\", c + i);\n        a1 = n * a0 + an1;\n        for (i = 1; i <= n; i++)\n            a1 -= 2 * i * c[n - i];\n        printf(\"%.2f\\n\", a1 / (n + 1));\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ",", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġa", "0", ",", "Ġan", "1", ",", "Ġa", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġc", "[", "3000", "];", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ")", "Ġ!=", "ĠE", "OF", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "lf", "%", "lf", "\",", "Ġ&", "a", "0", ",", "Ġ&", "an", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "lf", "\",", "Ġc", "Ġ+", "Ġi", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġa", "1", "Ġ=", "Ġn", "Ġ*", "Ġa", "0", "Ġ+", "Ġan", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġa", "1", "Ġ-=", "Ġ2", "Ġ*", "Ġi", "Ġ*", "Ġc", "[", "n", "Ġ-", "Ġi", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%.", "2", "f", "\\", "n", "\",", "Ġa", "1", "Ġ/", "Ġ(", "n", "Ġ+", "Ġ1", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 8, "comesFrom", ["n"], [1]], ["n", 15, "comesFrom", ["n"], [1]], ["n", 21, "comesFrom", ["n"], [1]], ["n", 26, "comesFrom", ["n"], [1]], ["n", 31, "comesFrom", ["n"], [1]], ["n", 35, "comesFrom", ["n"], [1]], ["a0", 11, "comesFrom", ["a0"], [3]], ["a0", 22, "comesFrom", ["a0"], [3]], ["an1", 12, "comesFrom", ["an1"], [4]], ["an1", 23, "comesFrom", ["an1"], [4]], ["i", 14, "comesFrom", ["i"], [13]], ["i", 16, "comesFrom", ["i"], [13]], ["i", 19, "comesFrom", ["i"], [13]], ["i", 25, "comesFrom", ["i"], [24]], ["i", 27, "comesFrom", ["i"], [24]], ["i", 29, "comesFrom", ["i"], [24]], ["i", 32, "comesFrom", ["i"], [24]], ["a1", 34, "comesFrom", ["a1"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::242", "code": "class Solution {\n    unordered_map<int, int> angles = {\n        {1, 30},  {2, 60},  {3, 90},  {4, 120},\n        {5, 150}, {6, 180}, {7, 210}, {8, 240},\n        {9, 270}, {10, 300}, {11, 330}, {12, 0}\n    };\npublic:\n    double angleClock(int hour, int minutes) {\n        double min_angle = 1.0/60.0 * minutes * 360;\n        double displacement = 0.5 * minutes;  // the hour hand moves this much forward from its normal position at hours\n        double hour_angle = angles[hour] + displacement;\n        double angle = std::abs(hour_angle - min_angle);\n        return std::min(angle, 360 - angle);\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġun", "ordered", "_", "map", "<", "int", ",", "Ġint", ">", "Ġangles", "Ġ=", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "1", ",", "Ġ30", "},", "Ġ", "Ġ{", "2", ",", "Ġ60", "},", "Ġ", "Ġ{", "3", ",", "Ġ90", "},", "Ġ", "Ġ{", "4", ",", "Ġ120", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "5", ",", "Ġ150", "},", "Ġ{", "6", ",", "Ġ180", "},", "Ġ{", "7", ",", "Ġ210", "},", "Ġ{", "8", ",", "Ġ240", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "9", ",", "Ġ270", "},", "Ġ{", "10", ",", "Ġ300", "},", "Ġ{", "11", ",", "Ġ330", "},", "Ġ{", "12", ",", "Ġ0", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġangle", "Clock", "(", "int", "Ġhour", ",", "Ġint", "Ġminutes", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġmin", "_", "angle", "Ġ=", "Ġ1", ".", "0", "/", "60", ".", "0", "Ġ*", "Ġminutes", "Ġ*", "Ġ360", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġdisplacement", "Ġ=", "Ġ0", ".", "5", "Ġ*", "Ġminutes", ";", "Ġ", "Ġ//", "Ġthe", "Ġhour", "Ġhand", "Ġmoves", "Ġthis", "Ġmuch", "Ġforward", "Ġfrom", "Ġits", "Ġnormal", "Ġposition", "Ġat", "Ġhours", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġhour", "_", "angle", "Ġ=", "Ġangles", "[", "hour", "]", "Ġ+", "Ġdisplacement", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġangle", "Ġ=", "Ġstd", "::", "abs", "(", "hour", "_", "angle", "Ġ-", "Ġmin", "_", "angle", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstd", "::", "min", "(", "angle", ",", "Ġ360", "Ġ-", "Ġangle", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["minutes", 5, "comesFrom", ["minutes"], [3]], ["minutes", 7, "comesFrom", ["minutes"], [3]], ["hour", 10, "comesFrom", ["hour"], [2]], ["displacement", 11, "comesFrom", ["displacement"], [6]], ["hour_angle", 14, "comesFrom", ["hour_angle"], [8]], ["min_angle", 15, "comesFrom", ["min_angle"], [4]], ["angle", 17, "comesFrom", ["angle"], [12]], ["angle", 18, "comesFrom", ["angle"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::243", "code": "#include \"Followers.h\"\n#include \"../../../Bundle.h\"\n\nnamespace EasyCpp\n{\n\tnamespace Net\n\t{\n\t\tnamespace Services\n\t\t{\n\t\t\tnamespace Spotify\n\t\t\t{\n\t\t\t\tFollowers::~Followers()\n\t\t\t\t{\n\t\t\t\t}\n\n\t\t\t\tconst std::string& Followers::getHref() const\n\t\t\t\t{\n\t\t\t\t\treturn _href;\n\t\t\t\t}\n\n\t\t\t\tuint64_t Followers::getTotal() const\n\t\t\t\t{\n\t\t\t\t\treturn _total;\n\t\t\t\t}\n\n\t\t\t\tFollowers::Followers()\n\t\t\t\t{\n\t\t\t\t}\n\n\t\t\t\tAnyValue Followers::toAnyValue() const\n\t\t\t\t{\n\t\t\t\t\treturn Bundle({\n\t\t\t\t\t\t{ \"href\", _href },\n\t\t\t\t\t\t{ \"total\", _total }\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvoid Followers::fromAnyValue(const AnyValue & state)\n\t\t\t\t{\n\t\t\t\t\tBundle followers = state.as<Bundle>();\n\t\t\t\t\t_href = followers.get(\"href\").isType<std::string>() ? followers.get<std::string>(\"href\") : \"\";\n\t\t\t\t\t_total = followers.get<uint64_t>(\"total\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Follow", "ers", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "../", "../", "B", "undle", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠEasy", "C", "pp", "Ċ", "{", "Ċ", "ĉ", "names", "pace", "ĠNet", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "names", "pace", "ĠServices", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "names", "pace", "ĠSpotify", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "Follow", "ers", "::", "~", "Follow", "ers", "()", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "const", "Ġstd", "::", "string", "&", "ĠFollow", "ers", "::", "get", "H", "ref", "()", "Ġconst", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "return", "Ġ_", "href", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "uint", "64", "_", "t", "ĠFollow", "ers", "::", "get", "Total", "()", "Ġconst", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "return", "Ġ_", "total", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "Follow", "ers", "::", "Follow", "ers", "()", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "Any", "Value", "ĠFollow", "ers", "::", "to", "Any", "Value", "()", "Ġconst", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "return", "ĠBundle", "({", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ġ\"", "href", "\",", "Ġ_", "href", "Ġ},", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ġ\"", "total", "\",", "Ġ_", "total", "Ġ}", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "});", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "void", "ĠFollow", "ers", "::", "from", "Any", "Value", "(", "const", "ĠAny", "Value", "Ġ&", "Ġstate", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "B", "undle", "Ġfollowers", "Ġ=", "Ġstate", ".", "as", "<", "B", "undle", ">", "();", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "_", "href", "Ġ=", "Ġfollowers", ".", "get", "(\"", "href", "\").", "is", "Type", "<", "std", "::", "string", ">", "()", "Ġ?", "Ġfollowers", ".", "get", "<", "std", "::", "string", ">", "(\"", "href", "\")", "Ġ:", "Ġ\"", "\";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "_", "total", "Ġ=", "Ġfollowers", ".", "get", "<", "uint", "64", "_", "t", ">", "(\"", "total", "\");", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["followers", 16, "comesFrom", ["followers"], [12]], ["followers", 19, "comesFrom", ["followers"], [12]], ["followers", 22, "comesFrom", ["followers"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::244", "code": "#include \"Damper.hpp\"\r\n\r\nnamespace Phiz\r\n{\r\n\r\nDamper::Damper(Body* a, Body* b, float z)\r\n    : Link(a, b), _z(z)\r\n{\r\n}\r\n\r\nDamper::~Damper()\r\n{\r\n}\r\n\r\nvoid Damper::step(float dt)\r\n{\r\n    glm::vec3 force = -_z * (_a->cspeed() - _b->cspeed());\r\n    _a->force() += force;\r\n    _b->force() -= force;\r\n}\r\n\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Dam", "per", ".", "h", "pp", "\"", "č", "Ċ", "č", "Ċ", "names", "pace", "ĠPh", "iz", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "Dam", "per", "::", "Dam", "per", "(", "Body", "*", "Ġa", ",", "ĠBody", "*", "Ġb", ",", "Ġfloat", "Ġz", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠLink", "(", "a", ",", "Ġb", "),", "Ġ_", "z", "(", "z", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Dam", "per", "::", "~", "Dam", "per", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDam", "per", "::", "step", "(", "float", "Ġd", "t", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgl", "m", "::", "vec", "3", "Ġforce", "Ġ=", "Ġ-", "_", "z", "Ġ*", "Ġ(_", "a", "->", "c", "speed", "()", "Ġ-", "Ġ_", "b", "->", "c", "speed", "());", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "a", "->", "force", "()", "Ġ+=", "Ġforce", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "b", "->", "force", "()", "Ġ-=", "Ġforce", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}"], "dataflow_graph": [["z", 8, "comesFrom", ["z"], [3]], ["force", 19, "comesFrom", ["force"], [12]], ["force", 20, "comesFrom", ["force"], [12]], ["force", 22, "comesFrom", ["force"], [12]], ["force", 23, "comesFrom", ["force"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::245", "code": "#include \"train_test_workflow.h\"\n\n#include <iostream>\n\n#include \"util/data_constants.h\"\n#include \"util/data_loader.h\"\n#include \"util/timer.h\"\n\ntrain_test_workflow::train_test_workflow(base_model* model_instance) : \n  base_workflow{model_instance}, rmse{0.0} {}\n\nvoid train_test_workflow::execute() {\n  timer timer;\n  std::cout << \"Loading training data: \" << timer.return_elapsed();\n  std::string base_path = \"data/um/base.bin\";\n  auto base_data = new int[BASE_SIZE * COL_SIZE];\n  data_loader::load_data(base_path, base_data, BASE_SIZE * COL_SIZE);\n\n  std::cout << \"Loading testing data: \" << timer.return_elapsed();\n  std::string probe_path = \"data/um/probe.bin\";\n  auto probe_data = new int[PROBE_SIZE * COL_SIZE];\n  data_loader::load_data(probe_path, probe_data, PROBE_SIZE * COL_SIZE);\n\n  std::cout << \"Training model: \" << timer.return_elapsed();\n  model->train(base_data, BASE_SIZE);\n  std::cout << \"Testing model: \" << timer.return_elapsed();\n  rmse = model->test(probe_data, new int[PROBE_SIZE], PROBE_SIZE);\n\n  std::cout << \"Completed Workflow: \" << timer.return_elapsed();\n  std::cout << \"RMSE: \" << rmse << std::endl;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "train", "_", "test", "_", "work", "flow", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", "/", "data", "_", "const", "ants", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "data", "_", "loader", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "timer", ".", "h", "\"", "Ċ", "Ċ", "train", "_", "test", "_", "work", "flow", "::", "train", "_", "test", "_", "work", "flow", "(", "base", "_", "model", "*", "Ġmodel", "_", "instance", ")", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġbase", "_", "work", "flow", "{", "model", "_", "instance", "},", "Ġrm", "se", "{", "0", ".", "0", "}", "Ġ{}", "Ċ", "Ċ", "void", "Ġtrain", "_", "test", "_", "work", "flow", "::", "execute", "()", "Ġ{", "Ċ", "Ġ", "Ġtimer", "Ġtimer", ";", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Loading", "Ġtraining", "Ġdata", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "el", "apsed", "();", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġbase", "_", "path", "Ġ=", "Ġ\"", "data", "/", "um", "/", "base", ".", "bin", "\";", "Ċ", "Ġ", "Ġauto", "Ġbase", "_", "data", "Ġ=", "Ġnew", "Ġint", "[", "B", "ASE", "_", "SIZE", "Ġ*", "ĠCOL", "_", "SIZE", "];", "Ċ", "Ġ", "Ġdata", "_", "loader", "::", "load", "_", "data", "(", "base", "_", "path", ",", "Ġbase", "_", "data", ",", "ĠBASE", "_", "SIZE", "Ġ*", "ĠCOL", "_", "SIZE", ");", "ĊĊ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Loading", "Ġtesting", "Ġdata", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "el", "apsed", "();", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġprobe", "_", "path", "Ġ=", "Ġ\"", "data", "/", "um", "/", "pro", "be", ".", "bin", "\";", "Ċ", "Ġ", "Ġauto", "Ġprobe", "_", "data", "Ġ=", "Ġnew", "Ġint", "[", "PR", "OB", "E", "_", "SIZE", "Ġ*", "ĠCOL", "_", "SIZE", "];", "Ċ", "Ġ", "Ġdata", "_", "loader", "::", "load", "_", "data", "(", "pro", "be", "_", "path", ",", "Ġprobe", "_", "data", ",", "ĠPR", "OB", "E", "_", "SIZE", "Ġ*", "ĠCOL", "_", "SIZE", ");", "ĊĊ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Training", "Ġmodel", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "el", "apsed", "();", "Ċ", "Ġ", "Ġmodel", "->", "train", "(", "base", "_", "data", ",", "ĠBASE", "_", "SIZE", ");", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Testing", "Ġmodel", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "el", "apsed", "();", "Ċ", "Ġ", "Ġrm", "se", "Ġ=", "Ġmodel", "->", "test", "(", "pro", "be", "_", "data", ",", "Ġnew", "Ġint", "[", "PR", "OB", "E", "_", "SIZE", "],", "ĠPR", "OB", "E", "_", "SIZE", ");", "ĊĊ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Completed", "ĠWork", "flow", ":", "Ġ\"", "Ġ<<", "Ġtimer", ".", "return", "_", "el", "apsed", "();", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "RM", "SE", ":", "Ġ\"", "Ġ<<", "Ġrm", "se", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}"], "dataflow_graph": [["rmse", 51, "comesFrom", ["rmse"], [41]], ["timer", 8, "comesFrom", ["timer"], [6]], ["timer", 20, "comesFrom", ["timer"], [6]], ["timer", 32, "comesFrom", ["timer"], [6]], ["timer", 39, "comesFrom", ["timer"], [6]], ["timer", 48, "comesFrom", ["timer"], [6]], ["base_path", 15, "comesFrom", ["base_path"], [10]], ["base_data", 16, "comesFrom", ["base_data"], [11]], ["base_data", 36, "comesFrom", ["base_data"], [11]], ["probe_path", 27, "comesFrom", ["probe_path"], [22]], ["probe_data", 28, "comesFrom", ["probe_data"], [23]], ["probe_data", 44, "comesFrom", ["probe_data"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::246", "code": "#include <iostream>\n#include <cstdio>\n#include \"dataset.h\"\n#include \"knn.h\"\n#include <cassert>\n#include <cmath>\n#include \"testUtils.h\"\n\n\nint main() \n{\n\tdouble rawData[] = {5.0/11, 4.0/11, 2.0 / 11, //top 1: 0 ; expected: 0 - Acertar\n\t\t\t\t\t\t5.0/11, 4.0/11, 2.0 / 11, //top 1: 0 ; expected: 0 - Acertar\n\t\t\t\t\t\t 5.0/11, 4.0/11, 2.0 / 11, //top 1: 0 ; expected: 1 - Errar\n\t\t\t\t\t \t 5.0/11, 5.0/11, 1.0 / 11}; //Empatados em 2o - rejeitar\n\n\tint labels[] = {0,0,1,1};\n\tDatasetPointer sampleData = makeDataset(4, 3, 2, rawData, labels);\n\n\tKNNResults target(sampleData);\n\n\tSingleExecutionResults actual = target.top1Result();\n\n\tassertEquals(2, actual.nSuccess);\n\tassertEquals(1, actual.nRejected);\n\n\n\tdouble MAX_ERROR = 1e-4;\n\n\tprintf(\"%s OK!\\n\", __FILE__);\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ\"", "dat", "as", "et", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "kn", "n", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ\"", "test", "Ut", "ils", ".", "h", "\"", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ġ", "Ċ", "{", "Ċ", "ĉ", "double", "Ġraw", "Data", "[]", "Ġ=", "Ġ{", "5", ".", "0", "/", "11", ",", "Ġ4", ".", "0", "/", "11", ",", "Ġ2", ".", "0", "Ġ/", "Ġ11", ",", "Ġ//", "top", "Ġ1", ":", "Ġ0", "Ġ;", "Ġexpected", ":", "Ġ0", "Ġ-", "ĠAc", "ert", "ar", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "5", ".", "0", "/", "11", ",", "Ġ4", ".", "0", "/", "11", ",", "Ġ2", ".", "0", "Ġ/", "Ġ11", ",", "Ġ//", "top", "Ġ1", ":", "Ġ0", "Ġ;", "Ġexpected", ":", "Ġ0", "Ġ-", "ĠAc", "ert", "ar", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Ġ5", ".", "0", "/", "11", ",", "Ġ4", ".", "0", "/", "11", ",", "Ġ2", ".", "0", "Ġ/", "Ġ11", ",", "Ġ//", "top", "Ġ1", ":", "Ġ0", "Ġ;", "Ġexpected", ":", "Ġ1", "Ġ-", "ĠEr", "rar", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Ġ", "ĉ", "Ġ5", ".", "0", "/", "11", ",", "Ġ5", ".", "0", "/", "11", ",", "Ġ1", ".", "0", "Ġ/", "Ġ11", "};", "Ġ//", "E", "mp", "at", "ados", "Ġem", "Ġ2", "o", "Ġ-", "Ġre", "je", "itar", "ĊĊ", "ĉ", "int", "Ġlabels", "[]", "Ġ=", "Ġ{", "0", ",", "0", ",", "1", ",", "1", "};", "Ċ", "ĉ", "Dat", "as", "et", "Po", "inter", "Ġsample", "Data", "Ġ=", "Ġmake", "Dat", "as", "et", "(", "4", ",", "Ġ3", ",", "Ġ2", ",", "Ġraw", "Data", ",", "Ġlabels", ");", "ĊĊ", "ĉ", "K", "NN", "Results", "Ġtarget", "(", "sample", "Data", ");", "ĊĊ", "ĉ", "Single", "Exec", "ution", "Results", "Ġactual", "Ġ=", "Ġtarget", ".", "top", "1", "Result", "();", "ĊĊ", "ĉ", "assert", "Equ", "als", "(", "2", ",", "Ġactual", ".", "n", "Success", ");", "Ċ", "ĉ", "assert", "Equ", "als", "(", "1", ",", "Ġactual", ".", "n", "Re", "jected", ");", "ĊĊ", "Ċ", "ĉ", "double", "ĠMAX", "_", "ERROR", "Ġ=", "Ġ1", "e", "-", "4", ";", "ĊĊ", "ĉ", "printf", "(\"", "%", "s", "ĠOK", "!", "\\", "n", "\",", "Ġ__", "FILE", "__", ");", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["actual", 12, "comesFrom", ["actual"], [8]], ["actual", 15, "comesFrom", ["actual"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::247", "code": "#include \"PagePool.h\"\n\nPagePool* PagePool::ins = nullptr;\n\nPage* PagePool::create(int itemSize) {\n\tauto p = Page::create(itemSize);\n\tmp.insert(make_pair(p->getId(), p));\n\treturn p;\n}\n\nPage* PagePool::createFromFile(const string &path, int pid) {\n\tauto buffer = new char[50];\n\tsprintf(buffer, \"%s/%d.page\", path.c_str(), pid);\n\tauto p = Page::createFromFile(buffer);\n\tmp.insert(make_pair(p->getId(), p));\n\treturn p;\t\n}\n\nPage* PagePool::get(int pid) {\n\tauto res = mp.find(pid);\n\tif (res == mp.end()) return nullptr;\n\telse return res->second;\n}\n\nvoid PagePool::writeBack() {\n\tfor (auto &pair : mp) {\n\t\tpair.second->writeBack();\n\t}\n}\n\nvoid PagePool::remove(int pid) {\n\tauto res = mp.find(pid);\n\tif (res != mp.end()) {\n\t\tdelete res->second;\n\t\tmp.erase(res);\n\t}\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Page", "Pool", ".", "h", "\"", "Ċ", "Ċ", "Page", "Pool", "*", "ĠPage", "Pool", "::", "ins", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "Ċ", "Page", "*", "ĠPage", "Pool", "::", "create", "(", "int", "Ġitem", "Size", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġp", "Ġ=", "ĠPage", "::", "create", "(", "item", "Size", ");", "Ċ", "ĉ", "mp", ".", "insert", "(", "make", "_", "pair", "(", "p", "->", "get", "Id", "(),", "Ġp", "));", "Ċ", "ĉ", "return", "Ġp", ";", "Ċ", "}", "Ċ", "Ċ", "Page", "*", "ĠPage", "Pool", "::", "create", "From", "File", "(", "const", "Ġstring", "Ġ&", "path", ",", "Ġint", "Ġpid", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġbuffer", "Ġ=", "Ġnew", "Ġchar", "[", "50", "];", "Ċ", "ĉ", "s", "printf", "(", "buffer", ",", "Ġ\"%", "s", "/", "%", "d", ".", "page", "\",", "Ġpath", ".", "c", "_", "str", "(),", "Ġpid", ");", "Ċ", "ĉ", "auto", "Ġp", "Ġ=", "ĠPage", "::", "create", "From", "File", "(", "buffer", ");", "Ċ", "ĉ", "mp", ".", "insert", "(", "make", "_", "pair", "(", "p", "->", "get", "Id", "(),", "Ġp", "));", "Ċ", "ĉ", "return", "Ġp", ";", "ĉ", "Ċ", "}", "Ċ", "Ċ", "Page", "*", "ĠPage", "Pool", "::", "get", "(", "int", "Ġpid", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġres", "Ġ=", "Ġmp", ".", "find", "(", "pid", ");", "Ċ", "ĉ", "if", "Ġ(", "res", "Ġ==", "Ġmp", ".", "end", "())", "Ġreturn", "Ġnull", "ptr", ";", "Ċ", "ĉ", "else", "Ġreturn", "Ġres", "->", "second", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPage", "Pool", "::", "write", "Back", "()", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġ&", "pair", "Ġ:", "Ġmp", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "pair", ".", "second", "->", "write", "Back", "();", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPage", "Pool", "::", "remove", "(", "int", "Ġpid", ")", "Ġ{", "Ċ", "ĉ", "auto", "Ġres", "Ġ=", "Ġmp", ".", "find", "(", "pid", ");", "Ċ", "ĉ", "if", "Ġ(", "res", "Ġ!=", "Ġmp", ".", "end", "())", "Ġ{", "Ċ", "ĉ", "ĉ", "delete", "Ġres", "->", "second", ";", "Ċ", "ĉ", "ĉ", "mp", ".", "er", "ase", "(", "res", ");", "Ċ", "ĉ", "}", "Ċ", "}"], "dataflow_graph": [["itemSize", 5, "comesFrom", ["itemSize"], [2]], ["p", 9, "comesFrom", ["p"], [3]], ["p", 11, "comesFrom", ["p"], [3]], ["p", 12, "comesFrom", ["p"], [3]], ["p", 28, "comesFrom", ["p"], [22]], ["p", 30, "comesFrom", ["p"], [22]], ["p", 31, "comesFrom", ["p"], [22]], ["buffer", 18, "comesFrom", ["buffer"], [16]], ["buffer", 24, "comesFrom", ["buffer"], [16]], ["pid", 21, "comesFrom", ["pid"], [15]], ["pid", 37, "comesFrom", ["pid"], [33]], ["pid", 54, "comesFrom", ["pid"], [50]], ["res", 38, "comesFrom", ["res"], [34]], ["res", 41, "comesFrom", ["res"], [34]], ["res", 55, "comesFrom", ["res"], [51]], ["res", 58, "comesFrom", ["res"], [51]], ["res", 62, "comesFrom", ["res"], [51]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::248", "code": "#include \"multiple_light.h\"\n\n\n\nMultipleLight::MultipleLight(unsigned int size)\n{\n}\n\n\n\nMultipleLight::~MultipleLight()\n{\n}\n\nvoid MultipleLight::clear()\n{\n\tlights.clear();\n}\n\nvoid MultipleLight::addLight(Light* light)\n{\n\tif (lights.size() < size)\n\t\tlights.push_back(light);\n}\n\nvoid MultipleLight::bind(Program * program)\n{\n\tprogram->setInt(lights.size(), LIGHTS_SIZE);\n\tfor each (Light* light in lights)\n\t\tlight->bind(program);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "multiple", "_", "light", ".", "h", "\"", "ĊĊ", "Ċ", "Ċ", "Multiple", "Light", "::", "Multiple", "Light", "(", "unsigned", "Ġint", "Ġsize", ")", "Ċ", "{", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "Multiple", "Light", "::", "~", "Multiple", "Light", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMultiple", "Light", "::", "clear", "()", "Ċ", "{", "Ċ", "ĉ", "lights", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMultiple", "Light", "::", "add", "Light", "(", "Light", "*", "Ġlight", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "lights", ".", "size", "()", "Ġ<", "Ġsize", ")", "Ċ", "ĉ", "ĉ", "lights", ".", "push", "_", "back", "(", "light", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMultiple", "Light", "::", "bind", "(", "Program", "Ġ*", "Ġprogram", ")", "Ċ", "{", "Ċ", "ĉ", "program", "->", "set", "Int", "(", "lights", ".", "size", "(),", "ĠL", "IGHTS", "_", "SIZE", ");", "Ċ", "ĉ", "for", "Ġeach", "Ġ(", "Light", "*", "Ġlight", "Ġin", "Ġlights", ")", "Ċ", "ĉ", "ĉ", "light", "->", "bind", "(", "program", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["size", 9, "comesFrom", ["size"], [1]], ["size", 10, "comesFrom", ["size"], [1]], ["size", 19, "comesFrom", ["size"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::249", "code": "#include \"rune/gameloopthread.h\"\n\nrune::GameLoopThread::GameLoopThread(Engine *parent) :\n    QThread(NULL)\n{\n    _engine = parent;\n    _engineValid = true;\n}\n\nvoid rune::GameLoopThread::invalidateEngine()\n{\n    qDebug() << \"invalidateEngine\";\n    _engineValid = false;\n}\n\nvoid rune::GameLoopThread::run()\n{\n    if(_engine == NULL)\n        return;\n\n    qDebug() << \"gameloop started running\";\n\n    while(_engineValid)\n    {\n        QQueue<rune_action_queue_item> queue = _engine->getReadyActions();\n        //qDebug() << \"ready actions: \" << queue.size();\n        bool stateChange = false;\n        while(!queue.isEmpty() && _engineValid)\n        {\n            rune_action_queue_item actItem = queue.dequeue();\n            Entity* e = _engine->getClone(actItem.uid);\n            // TODO create script interpreter and bind it here to reduce used memory by entity\n            e->call(actItem.action);\n            stateChange = true;\n        }\n        if(stateChange) _engine->fireGameStateChanged(); // send signal to engine\n    }\n    qDebug() << \"gameloop end\";\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "r", "une", "/", "g", "amel", "oop", "thread", ".", "h", "\"", "Ċ", "Ċ", "r", "une", "::", "Game", "Loop", "Thread", "::", "Game", "Loop", "Thread", "(", "Engine", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Thread", "(", "NULL", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "engine", "Ġ=", "Ġparent", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "engine", "Valid", "Ġ=", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġrune", "::", "Game", "Loop", "Thread", "::", "in", "valid", "ate", "Engine", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġ\"", "in", "valid", "ate", "Engine", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "engine", "Valid", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġrune", "::", "Game", "Loop", "Thread", "::", "run", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(_", "engine", "Ġ==", "ĠNULL", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġ\"", "g", "amel", "oop", "Ġstarted", "Ġrunning", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(_", "engine", "Valid", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "Queue", "<", "r", "une", "_", "action", "_", "queue", "_", "item", ">", "Ġqueue", "Ġ=", "Ġ_", "engine", "->", "get", "Ready", "A", "ctions", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "q", "Debug", "()", "Ġ<<", "Ġ\"", "ready", "Ġactions", ":", "Ġ\"", "Ġ<<", "Ġqueue", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġstate", "Change", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "!", "queue", ".", "is", "Empty", "()", "Ġ&&", "Ġ_", "engine", "Valid", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrune", "_", "action", "_", "queue", "_", "item", "Ġact", "Item", "Ġ=", "Ġqueue", ".", "de", "queue", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠEntity", "*", "Ġe", "Ġ=", "Ġ_", "engine", "->", "get", "Cl", "one", "(", "act", "Item", ".", "uid", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠTOD", "O", "Ġcreate", "Ġscript", "Ġinterpreter", "Ġand", "Ġbind", "Ġit", "Ġhere", "Ġto", "Ġreduce", "Ġused", "Ġmemory", "Ġby", "Ġentity", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġe", "->", "call", "(", "act", "Item", ".", "action", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstate", "Change", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "state", "Change", ")", "Ġ_", "engine", "->", "fire", "Game", "State", "Changed", "();", "Ġ//", "Ġsend", "Ġsignal", "Ġto", "Ġengine", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġ\"", "g", "amel", "oop", "Ġend", "\";", "Ċ", "}", "Ċ"], "dataflow_graph": [["_engine", 10, "comesFrom", ["_engine"], [3]], ["_engine", 14, "comesFrom", ["_engine"], [3]], ["_engine", 24, "comesFrom", ["_engine"], [3]], ["_engine", 34, "comesFrom", ["_engine"], [3]], ["_engineValid", 12, "comesFrom", ["_engineValid"], [8]], ["_engineValid", 19, "comesFrom", ["_engineValid"], [8]], ["queue", 17, "comesFrom", ["queue"], [13]], ["queue", 21, "comesFrom", ["queue"], [13]], ["actItem", 26, "comesFrom", ["actItem"], [20]], ["actItem", 30, "comesFrom", ["actItem"], [20]], ["stateChange", 33, "comesFrom", ["stateChange"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::250", "code": "/* \n * OSG Model\n *\n * Copyright (c) 2009 Jérémie Decock\n */\n\n#include <osgDB/ReadFile>\n#include <osgViewer/Viewer>\n\nint main(int, char **) {\n    osg::ref_ptr<osg::Node> model = osgDB::readNodeFile(\"cessna.osg\"); // could be also .obj files, ...\n\n    osgViewer::Viewer viewer;\n    viewer.setSceneData(model);\n    viewer.run();\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ġ", "Ċ", "Ġ*", "ĠOS", "G", "ĠModel", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "ĠJ", "Ã©", "rÃ©", "mie", "ĠDec", "ock", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "os", "g", "DB", "/", "Read", "File", ">", "Ċ", "#", "include", "Ġ<", "os", "g", "View", "er", "/", "View", "er", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "Ġ**", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġos", "g", "::", "ref", "_", "ptr", "<", "os", "g", "::", "Node", ">", "Ġmodel", "Ġ=", "Ġos", "g", "DB", "::", "read", "Node", "File", "(\"", "cess", "na", ".", "os", "g", "\");", "Ġ//", "Ġcould", "Ġbe", "Ġalso", "Ġ.", "obj", "Ġfiles", ",", "Ġ...", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġos", "g", "View", "er", "::", "View", "er", "Ġviewer", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġviewer", ".", "set", "Scene", "Data", "(", "model", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġviewer", ".", "run", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["viewer", 4, "comesFrom", ["viewer"], [3]], ["viewer", 7, "comesFrom", ["viewer"], [3]], ["model", 6, "comesFrom", ["model"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::251", "code": "#ifdef INTEST\n#include \"preprocessor.hpp\"\n#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream stre(\"preprocessor.test\");\nSchemeUnit s(stre);\nint main()\n{\n    for (int i=0; i<s.lines.size(); ++i)\n      cout<<s.lines[i]<<endl;\n    return 0;\n}\n#endif\n", "code_tokens": ["Ġ#", "if", "def", "ĠINT", "EST", "Ċ", "#", "include", "Ġ\"", "pre", "processor", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "if", "stream", "Ġstre", "(\"", "pre", "processor", ".", "test", "\");", "Ċ", "Sche", "me", "Unit", "Ġs", "(", "stre", ");", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "s", ".", "lines", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "s", ".", "lines", "[", "i", "]", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 10, "comesFrom", ["i"], [5]], ["i", 14, "comesFrom", ["i"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::252", "code": "/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\nclass Solution {\npublic:\n    /**\n     * @aaram a, b, the root of binary trees.\n     * @return true if they are identical, or false.\n     */\n    bool isIdentical(TreeNode* a, TreeNode* b) {\n        // Write your code here\n        bool rt_identical_flag=false;\n        \n        if (a==NULL and b==NULL) return true;\n        if ((a==NULL and b!=NULL) or (a!=NULL and b==NULL)) return false;\n        if ((a->val == b-> val)) rt_identical_flag=true;\n            else return false;\n\n        rt_identical_flag = rt_identical_flag and isIdentical(a->left,b->left) and isIdentical(a->right,b->right);\n        return rt_identical_flag;\n    }\n};\n\n// Total Runtime: 28 ms", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠDefinition", "Ġof", "ĠTree", "Node", ":", "Ċ", "Ġ*", "Ġclass", "ĠTree", "Node", "Ġ{", "Ċ", "Ġ*", "Ġpublic", ":", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġ*", "left", ",", "Ġ*", "right", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "(", "int", "Ġval", ")", "Ġ{", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "val", "Ġ=", "Ġval", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "left", "Ġ=", "Ġthis", "->", "right", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ*", "Ġ}", "Ċ", "Ġ*/", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ/**", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "Ġ@", "a", "aram", "Ġa", ",", "Ġb", ",", "Ġthe", "Ġroot", "Ġof", "Ġbinary", "Ġtrees", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "Ġ@", "return", "Ġtrue", "Ġif", "Ġthey", "Ġare", "Ġidentical", ",", "Ġor", "Ġfalse", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*/", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġis", "Ident", "ical", "(", "Tree", "Node", "*", "Ġa", ",", "ĠTree", "Node", "*", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠWrite", "Ġyour", "Ġcode", "Ġhere", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġr", "t", "_", "ident", "ical", "_", "flag", "=", "false", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "==", "NULL", "Ġand", "Ġb", "==", "NULL", ")", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "a", "==", "NULL", "Ġand", "Ġb", "!", "=", "NULL", ")", "Ġor", "Ġ(", "a", "!", "=", "NULL", "Ġand", "Ġb", "==", "NULL", "))", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "a", "->", "val", "Ġ==", "Ġb", "->", "Ġval", "))", "Ġr", "t", "_", "ident", "ical", "_", "flag", "=", "true", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġreturn", "Ġfalse", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġr", "t", "_", "ident", "ical", "_", "flag", "Ġ=", "Ġr", "t", "_", "ident", "ical", "_", "flag", "Ġand", "Ġis", "Ident", "ical", "(", "a", "->", "left", ",", "b", "->", "left", ")", "Ġand", "Ġis", "Ident", "ical", "(", "a", "->", "right", ",", "b", "->", "right", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġr", "t", "_", "ident", "ical", "_", "flag", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "//", "ĠTotal", "ĠRuntime", ":", "Ġ28", "Ġms"], "dataflow_graph": [["rt_identical_flag", 16, "comesFrom", ["rt_identical_flag"], [15]], ["rt_identical_flag", 27, "comesFrom", ["rt_identical_flag"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::253", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint tab[100000][17];\n\t\n\tfor(int i=0; i<n; i++)\n\t\tfor(int j=0; 1<<j < n; j++)\n\t\t\ttab[i][j]=-1;\n\n\tfor(int i=0; i<n; i++)\n\t\ttab[i][0] = t[i];\n\n\tfor(int j=1; i<<j < n; j++)\n\t\tfor(i=0; i < n; i++)\n\t\t\tif(tab[i][j-1] != -1)\n\t\t\t\ttab[i][j] = tab[tab[i][j-1]][j-1];\n}\n\nint query(int n, int tab[100000][17], int t[100000], int l[100000], int p, int q){\n\tint temp;\n\tif(l[p] < l[q])\n\t\tswap(p,q);\n\tfor(int lg = 1; 1<<lg <= l[p]; lg++);\n\tlg--;\n\n\tfor(int i=lg; i>=0; i--)\n\t\tif(l[p] - (1<<i) >= l[q])\n\t\t\tp = tab[p][i];\n\n\tif(p==q)\treturn p;\n\n\tfor(int i=lg; i>=0; i--){\n\t\tif(tab[p][i]!=-1 && tab[p][i] != tab[q][i]){\n\t\t\tp = tab[p][i];\n\t\t\tq = tab[q][i];\n\t\t}\n\t}\n\n\treturn t[p];\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "int", "Ġn", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", ";", "Ċ", "ĉ", "int", "Ġtab", "[", "100", "000", "][", "17", "];", "Ċ", "ĉ", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġj", "=", "0", ";", "Ġ1", "<<", "j", "Ġ<", "Ġn", ";", "Ġj", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "tab", "[", "i", "][", "j", "]", "=-", "1", ";", "ĊĊ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "tab", "[", "i", "][", "0", "]", "Ġ=", "Ġt", "[", "i", "];", "ĊĊ", "ĉ", "for", "(", "int", "Ġj", "=", "1", ";", "Ġi", "<<", "j", "Ġ<", "Ġn", ";", "Ġj", "++)", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "tab", "[", "i", "][", "j", "-", "1", "]", "Ġ!=", "Ġ-", "1", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "tab", "[", "i", "][", "j", "]", "Ġ=", "Ġtab", "[", "tab", "[", "i", "][", "j", "-", "1", "]", "][", "j", "-", "1", "];", "Ċ", "}", "Ċ", "Ċ", "int", "Ġquery", "(", "int", "Ġn", ",", "Ġint", "Ġtab", "[", "100", "000", "][", "17", "],", "Ġint", "Ġt", "[", "100", "000", "],", "Ġint", "Ġl", "[", "100", "000", "],", "Ġint", "Ġp", ",", "Ġint", "Ġq", "){", "Ċ", "ĉ", "int", "Ġtemp", ";", "Ċ", "ĉ", "if", "(", "l", "[", "p", "]", "Ġ<", "Ġl", "[", "q", "])", "Ċ", "ĉ", "ĉ", "sw", "ap", "(", "p", ",", "q", ");", "Ċ", "ĉ", "for", "(", "int", "Ġl", "g", "Ġ=", "Ġ1", ";", "Ġ1", "<<", "l", "g", "Ġ<=", "Ġl", "[", "p", "];", "Ġl", "g", "++", ");", "Ċ", "ĉ", "l", "g", "--", ";", "ĊĊ", "ĉ", "for", "(", "int", "Ġi", "=", "l", "g", ";", "Ġi", ">", "=", "0", ";", "Ġi", "--", ")", "Ċ", "ĉ", "ĉ", "if", "(", "l", "[", "p", "]", "Ġ-", "Ġ(", "1", "<<", "i", ")", "Ġ>=", "Ġl", "[", "q", "])", "Ċ", "ĉ", "ĉ", "ĉ", "p", "Ġ=", "Ġtab", "[", "p", "][", "i", "];", "ĊĊ", "ĉ", "if", "(", "p", "==", "q", ")", "ĉ", "return", "Ġp", ";", "ĊĊ", "ĉ", "for", "(", "int", "Ġi", "=", "l", "g", ";", "Ġi", ">", "=", "0", ";", "Ġi", "--", "){", "Ċ", "ĉ", "ĉ", "if", "(", "tab", "[", "p", "][", "i", "]", "!", "=-", "1", "Ġ&&", "Ġtab", "[", "p", "][", "i", "]", "Ġ!=", "Ġtab", "[", "q", "][", "i", "])", "{", "Ċ", "ĉ", "ĉ", "ĉ", "p", "Ġ=", "Ġtab", "[", "p", "][", "i", "];", "Ċ", "ĉ", "ĉ", "ĉ", "q", "Ġ=", "Ġtab", "[", "q", "][", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġt", "[", "p", "];", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [2]], ["n", 8, "comesFrom", ["n"], [2]], ["n", 12, "comesFrom", ["n"], [2]], ["n", 19, "comesFrom", ["n"], [2]], ["n", 28, "comesFrom", ["n"], [2]], ["n", 32, "comesFrom", ["n"], [2]], ["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 15, "comesFrom", ["i"], [6]], ["i", 18, "comesFrom", ["i"], [17]], ["i", 20, "comesFrom", ["i"], [17]], ["i", 22, "comesFrom", ["i"], [17]], ["i", 24, "comesFrom", ["i"], [17]], ["i", 26, "comesFrom", ["i"], [17]], ["i", 31, "comesFrom", ["i"], [30]], ["i", 33, "comesFrom", ["i"], [30]], ["i", 35, "comesFrom", ["i"], [30]], ["i", 38, "comesFrom", ["i"], [30]], ["i", 42, "comesFrom", ["i"], [30]], ["i", 68, "comesFrom", ["i"], [66]], ["i", 69, "comesFrom", ["i"], [66]], ["i", 72, "comesFrom", ["i"], [66]], ["i", 78, "comesFrom", ["i"], [66]], ["i", 84, "comesFrom", ["i"], [82]], ["i", 85, "comesFrom", ["i"], [82]], ["i", 88, "comesFrom", ["i"], [82]], ["i", 91, "comesFrom", ["i"], [82]], ["i", 94, "comesFrom", ["i"], [82]], ["i", 98, "comesFrom", ["i"], [82]], ["i", 102, "comesFrom", ["i"], [82]], ["j", 11, "comesFrom", ["j"], [10]], ["j", 13, "comesFrom", ["j"], [10]], ["j", 16, "comesFrom", ["j"], [10]], ["j", 27, "comesFrom", ["j"], [25]], ["j", 29, "comesFrom", ["j"], [25]], ["j", 36, "comesFrom", ["j"], [25]], ["j", 39, "comesFrom", ["j"], [25]], ["j", 43, "comesFrom", ["j"], [25]], ["j", 44, "comesFrom", ["j"], [25]], ["p", 54, "comesFrom", ["p"], [50]], ["p", 58, "comesFrom", ["p"], [50]], ["p", 63, "comesFrom", ["p"], [50]], ["p", 71, "comesFrom", ["p"], [50]], ["p", 77, "comesFrom", ["p"], [75]], ["p", 79, "comesFrom", ["p"], [75]], ["p", 81, "comesFrom", ["p"], [75]], ["p", 87, "comesFrom", ["p"], [75]], ["p", 90, "comesFrom", ["p"], [75]], ["p", 97, "comesFrom", ["p"], [95]], ["p", 104, "comesFrom", ["p"], [95]], ["q", 56, "comesFrom", ["q"], [51]], ["q", 59, "comesFrom", ["q"], [51]], ["q", 74, "comesFrom", ["q"], [51]], ["q", 80, "comesFrom", ["q"], [51]], ["q", 93, "comesFrom", ["q"], [51]], ["q", 101, "comesFrom", ["q"], [99]], ["lg", 61, "comesFrom", ["lg"], [60]], ["lg", 64, "comesFrom", ["lg"], [60]], ["lg", 65, "comesFrom", ["lg"], [60]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::254", "code": "#include \"../../StdAfx.h\"\n#include \"PlaylistView_MfcProxy.h\"\n#include \"PlaylistView_Win.h\"\n\nBEGIN_MESSAGE_MAP(PlaylistViewMfcProxy, CWnd)\n  ON_WM_CREATE()\n  ON_WM_SIZE()\nEND_MESSAGE_MAP()\n\nPlaylistView* PlaylistViewMfcProxy::GetView()\n{\n  return m_view.get();\n}\n\nBOOL PlaylistViewMfcProxy::Create(CWnd* pParentWnd)\n{\n  if(!CSizingControlBarG::Create(_T(\"Playlist\"), pParentWnd, 0))\n    return FALSE;\n\n  return TRUE;\n}\n\nint PlaylistViewMfcProxy::OnCreate(LPCREATESTRUCT lpcs)\n{\n  m_view.reset(new PlaylistView());\n  m_view->Create(m_hWnd);\n  return 0;\n}\n\nvoid PlaylistViewMfcProxy::OnSize(UINT nType, int cx, int cy)\n{\n  CSizingControlBarG::OnSize(nType, cx, cy);\n  // some kind of weird CSizingControlBarG mechanism that needs\n  // 2x2 offset deflate\n  m_view->SetWindowPos(NULL, 2, 2, cx-4, cy-4, SWP_NOZORDER);\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "../", "../", "St", "d", "Af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Play", "list", "View", "_", "M", "fc", "Proxy", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Play", "list", "View", "_", "Win", ".", "h", "\"", "Ċ", "Ċ", "B", "EGIN", "_", "M", "ES", "SA", "GE", "_", "MAP", "(", "Play", "list", "View", "M", "fc", "Proxy", ",", "ĠCW", "nd", ")", "Ċ", "Ġ", "ĠON", "_", "WM", "_", "CRE", "ATE", "()", "Ċ", "Ġ", "ĠON", "_", "WM", "_", "SIZE", "()", "Ċ", "END", "_", "M", "ES", "SA", "GE", "_", "MAP", "()", "Ċ", "Ċ", "Play", "list", "View", "*", "ĠPlay", "list", "View", "M", "fc", "Proxy", "::", "Get", "View", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġm", "_", "view", ".", "get", "();", "Ċ", "}", "Ċ", "Ċ", "BO", "OL", "ĠPlay", "list", "View", "M", "fc", "Proxy", "::", "Create", "(", "CW", "nd", "*", "Ġp", "Parent", "W", "nd", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "(", "!", "CS", "izing", "Control", "Bar", "G", "::", "Create", "(_", "T", "(\"", "Play", "list", "\"),", "Ġp", "Parent", "W", "nd", ",", "Ġ0", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠFALSE", ";", "ĊĊ", "Ġ", "Ġreturn", "ĠTRUE", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠPlay", "list", "View", "M", "fc", "Proxy", "::", "On", "Create", "(", "L", "PC", "RE", "ATES", "TR", "UCT", "Ġl", "p", "cs", ")", "Ċ", "{", "Ċ", "Ġ", "Ġm", "_", "view", ".", "reset", "(", "new", "ĠPlay", "list", "View", "());", "Ċ", "Ġ", "Ġm", "_", "view", "->", "Create", "(", "m", "_", "h", "W", "nd", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPlay", "list", "View", "M", "fc", "Proxy", "::", "On", "Size", "(", "U", "INT", "Ġn", "Type", ",", "Ġint", "Ġcx", ",", "Ġint", "Ġcy", ")", "Ċ", "{", "Ċ", "Ġ", "ĠCS", "izing", "Control", "Bar", "G", "::", "On", "Size", "(", "n", "Type", ",", "Ġcx", ",", "Ġcy", ");", "Ċ", "Ġ", "Ġ//", "Ġsome", "Ġkind", "Ġof", "Ġweird", "ĠCS", "izing", "Control", "Bar", "G", "Ġmechanism", "Ġthat", "Ġneeds", "Ċ", "Ġ", "Ġ//", "Ġ2", "x", "2", "Ġoffset", "Ġdef", "late", "Ċ", "Ġ", "Ġm", "_", "view", "->", "Set", "Window", "Pos", "(", "NULL", ",", "Ġ2", ",", "Ġ2", ",", "Ġcx", "-", "4", ",", "Ġcy", "-", "4", ",", "ĠSW", "P", "_", "NO", "Z", "ORD", "ER", ");", "Ċ", "}"], "dataflow_graph": [["nType", 26, "comesFrom", ["nType"], [22]], ["cx", 27, "comesFrom", ["cx"], [23]], ["cx", 31, "comesFrom", ["cx"], [23]], ["cy", 28, "comesFrom", ["cy"], [24]], ["cy", 32, "comesFrom", ["cy"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::255", "code": "#include \"Explosion.hpp\"\n\nExplosion::Explosion(){\n    ticks = 20 ;\n    team = EXPLOSION ;\n}\n\nExplosion::Explosion(std::string texturePath, const Point &origine, const sf::IntRect &box, const bool &solid, const bool &visible, const int _tick):\n    Object(texturePath, origine, box, solid, visible), ticks(_tick){\n        team = EXPLOSION ;\n}\n\nvoid Explosion::inCollide(Object* obj){\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Expl", "osion", ".", "h", "pp", "\"", "Ċ", "Ċ", "Expl", "osion", "::", "Expl", "osion", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġticks", "Ġ=", "Ġ20", "Ġ;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġteam", "Ġ=", "ĠEX", "PL", "OS", "ION", "Ġ;", "Ċ", "}", "Ċ", "Ċ", "Expl", "osion", "::", "Expl", "osion", "(", "std", "::", "string", "Ġtexture", "Path", ",", "Ġconst", "ĠPoint", "Ġ&", "orig", "ine", ",", "Ġconst", "Ġs", "f", "::", "Int", "Rect", "Ġ&", "box", ",", "Ġconst", "Ġbool", "Ġ&", "solid", ",", "Ġconst", "Ġbool", "Ġ&", "visible", ",", "Ġconst", "Ġint", "Ġ_", "tick", "):", "Ċ", "Ġ", "Ġ", "Ġ", "ĠObject", "(", "texture", "Path", ",", "Ġorig", "ine", ",", "Ġbox", ",", "Ġsolid", ",", "Ġvisible", "),", "Ġticks", "(_", "tick", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġteam", "Ġ=", "ĠEX", "PL", "OS", "ION", "Ġ;", "Ċ", "}", "Ċ", "Ċ", "void", "ĠExplosion", "::", "in", "Coll", "ide", "(", "Object", "*", "Ġobj", "){", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["texturePath", 12, "comesFrom", ["texturePath"], [5]], ["ticks", 17, "comesFrom", ["ticks"], [1]], ["_tick", 18, "comesFrom", ["_tick"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::256", "code": "#include <QPainter>\n\n#include \"icon.h\"\n#include \"config.h\"\n\nFloatingIcon::FloatingIcon( const QString &icon, QMenu *popup, QWidget *parent, const char *name)\n        : QDialog( parent ), icon(icon) {\n    this->setObjectName(name);\n    setAttribute(Qt::WA_QuitOnClose);\n    setAttribute(Qt::WA_TranslucentBackground);\n    setWindowFlags(Qt::FramelessWindowHint);\n    setWindowTitle(tr(\"%1 Floating Icon\").arg(QJOYPAD_NAME));\n    pop = popup;\n\n    setFixedSize(this->icon.width(),this->icon.height());\n}\n\nvoid FloatingIcon::mousePressEvent( QMouseEvent* event ) {\n    //if it was the right mouse button,\n    if (event->button() == Qt::RightButton) {\n        //bring up the popup menu.\n        pop->popup( event->globalPos() );\n        event->accept();\n    }\n    else {\n        //otherwise, treat it as a regular click.\n        emit clicked();\n    }\n}\n\nvoid FloatingIcon::paintEvent( QPaintEvent* ) {\n    QPainter painter(this);\n    painter.drawPixmap(0, 0, icon);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Q", "Pain", "ter", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "icon", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "config", ".", "h", "\"", "Ċ", "Ċ", "Flo", "ating", "Icon", "::", "Flo", "ating", "Icon", "(", "Ġconst", "ĠQ", "String", "Ġ&", "icon", ",", "ĠQ", "Menu", "Ġ*", "pop", "up", ",", "ĠQ", "Widget", "Ġ*", "parent", ",", "Ġconst", "Ġchar", "Ġ*", "name", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠQ", "Dialog", "(", "Ġparent", "Ġ),", "Ġicon", "(", "icon", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "set", "Object", "Name", "(", "name", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Attribute", "(", "Q", "t", "::", "WA", "_", "Qu", "it", "On", "Close", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Attribute", "(", "Q", "t", "::", "WA", "_", "Trans", "lucent", "Background", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Window", "Flags", "(", "Q", "t", "::", "Fram", "eless", "Window", "H", "int", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Window", "Title", "(", "tr", "(\"", "%", "1", "ĠFloating", "ĠIcon", "\").", "arg", "(", "Q", "J", "OY", "P", "AD", "_", "NAME", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpop", "Ġ=", "Ġpopup", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġset", "Fixed", "Size", "(", "this", "->", "icon", ".", "width", "(),", "this", "->", "icon", ".", "height", "());", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFloating", "Icon", "::", "mouse", "Press", "Event", "(", "ĠQ", "Mouse", "Event", "*", "Ġevent", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "if", "Ġit", "Ġwas", "Ġthe", "Ġright", "Ġmouse", "Ġbutton", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "event", "->", "button", "()", "Ġ==", "ĠQt", "::", "Right", "Button", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "bring", "Ġup", "Ġthe", "Ġpopup", "Ġmenu", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpop", "->", "pop", "up", "(", "Ġevent", "->", "global", "Pos", "()", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġevent", "->", "accept", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "other", "wise", ",", "Ġtreat", "Ġit", "Ġas", "Ġa", "Ġregular", "Ġclick", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġemit", "Ġclicked", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFloating", "Icon", "::", "p", "aint", "Event", "(", "ĠQ", "P", "aint", "Event", "*", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Pain", "ter", "Ġpainter", "(", "this", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpainter", ".", "draw", "P", "ix", "map", "(", "0", ",", "Ġ0", ",", "Ġicon", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["pop", 33, "comesFrom", ["pop"], [21]], ["painter", 42, "comesFrom", ["painter"], [41]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::257", "code": "/**\n * This file is part of scleaner project.\n\n * Copyright (C) 2007 FROUIN Jean-Michel\n\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n#include <iostream>\n#include <list>\n#include <string>\n#include \"tar_archive.h\"\n\nint main()\n{\n  int Ret;\n  CTarArchive l_tar;\n  std::string l_1(\"test.txt\");\n  std::string l_2(\"test2.txt\");\n  std::list<std::string> l_list;\n  l_list.push_back(l_1);\n  l_list.push_back(l_2);\n  bool res = l_tar.Create(l_list, \"test.tar\");\n  if(res)\n  {\n    Ret = EXIT_SUCCESS;\n  }\n  else\n  {\n    Ret = EXIT_FAILURE;\n  }\n  return Ret;\n}\n\n\n/* vi:set ts=4: */\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġsc", "lean", "er", "Ġproject", ".", "ĊĊ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "ĠFR", "OU", "IN", "ĠJean", "-", "Mic", "hel", "ĊĊ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "tar", "_", "archive", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "ĠRet", ";", "Ċ", "Ġ", "ĠCT", "ar", "Arch", "ive", "Ġl", "_", "tar", ";", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġl", "_", "1", "(\"", "test", ".", "txt", "\");", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġl", "_", "2", "(\"", "test", "2", ".", "txt", "\");", "Ċ", "Ġ", "Ġstd", "::", "list", "<", "std", "::", "string", ">", "Ġl", "_", "list", ";", "Ċ", "Ġ", "Ġl", "_", "list", ".", "push", "_", "back", "(", "l", "_", "1", ");", "Ċ", "Ġ", "Ġl", "_", "list", ".", "push", "_", "back", "(", "l", "_", "2", ");", "Ċ", "Ġ", "Ġbool", "Ġres", "Ġ=", "Ġl", "_", "tar", ".", "Create", "(", "l", "_", "list", ",", "Ġ\"", "test", ".", "tar", "\");", "Ċ", "Ġ", "Ġif", "(", "res", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠRet", "Ġ=", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠRet", "Ġ=", "ĠEX", "IT", "_", "FA", "IL", "URE", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "ĠRet", ";", "Ċ", "}", "ĊĊ", "Ċ", "/*", "Ġvi", ":", "set", "Ġts", "=", "4", ":", "Ġ*/", "Ċ"], "dataflow_graph": [["l_list", 6, "comesFrom", ["l_list"], [5]], ["l_list", 9, "comesFrom", ["l_list"], [5]], ["l_list", 15, "comesFrom", ["l_list"], [5]], ["l_1", 8, "comesFrom", ["l_1"], [3]], ["l_2", 11, "comesFrom", ["l_2"], [4]], ["l_tar", 13, "comesFrom", ["l_tar"], [2]], ["res", 16, "comesFrom", ["res"], [12]], ["Ret", 21, "comesFrom", ["Ret"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::258", "code": "#include <stdio.h>\n#include <iostream>\n\nusing namespace std;\nint f(int a, int b)\n{\n    return 0;\n}\n\nint main()\n{\n    int m = printf(\"a\");\n    int n = printf(\"b\");\n    cout<<m<<n<<endl;\n    return f(printf(\"a\"), printf(\"b\"));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġf", "(", "int", "Ġa", ",", "Ġint", "Ġb", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", "Ġ=", "Ġprintf", "(\"", "a", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġprintf", "(\"", "b", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "m", "<<", "n", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġf", "(", "printf", "(\"", "a", "\"),", "Ġprintf", "(\"", "b", "\")", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["m", 10, "comesFrom", ["m"], [5]], ["n", 11, "comesFrom", ["n"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::259", "code": "/*\n * Copyright 2011 Exavideo LLC.\n * \n * This file is part of openreplay.\n * \n * openreplay is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * openreplay is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with openreplay.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include <stdlib.h>\n#include <new>\n\nvoid *operator new(std::size_t sz) throw(std::bad_alloc) {\n    if (sz == 0) {\n        sz = 1;\n    }\n\n    void *ret = malloc(sz);\n\n    if (ret == NULL) {\n        throw std::bad_alloc( );\n    } else {\n        return ret;\n    }\n}\n\nvoid operator delete(void *ptr) throw() {\n    free(ptr);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2011", "ĠEx", "av", "ideo", "ĠLLC", ".", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġopen", "re", "play", ".", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "Ġopen", "re", "play", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "Ġopen", "re", "play", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġopen", "re", "play", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "new", ">", "Ċ", "Ċ", "void", "Ġ*", "operator", "Ġnew", "(", "std", "::", "size", "_", "t", "Ġs", "z", ")", "Ġthrow", "(", "std", "::", "bad", "_", "alloc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "z", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "z", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġ*", "ret", "Ġ=", "Ġmall", "oc", "(", "s", "z", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "ret", "Ġ==", "ĠNULL", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "bad", "_", "alloc", "(", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġoperator", "Ġdelete", "(", "void", "Ġ*", "ptr", ")", "Ġthrow", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfree", "(", "ptr", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["sz", 1, "comesFrom", ["sz"], [0]], ["sz", 5, "comesFrom", ["sz"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::260", "code": "#include \"VROntologyUtils.h\"\n\nint guid() {\n    static int id = 0;\n    id++;\n    return id;\n}\n\nVRNamedID::VRNamedID() {\n    ID = guid();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "VR", "Ont", "ology", "Ut", "ils", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġguid", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġint", "Ġid", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġid", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġid", ";", "Ċ", "}", "Ċ", "Ċ", "VR", "N", "amed", "ID", "::", "VR", "N", "amed", "ID", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠID", "Ġ=", "Ġguid", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["id", 2, "comesFrom", ["id"], [1]], ["id", 3, "comesFrom", ["id"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::261", "code": "#include <gtest/gtest.h>\n#include <gmock/gmock.h>\n\n#include <reporting_mocks.h>\n#include <eventstoreprocessor.h>\n\n#include <thread>\n\nusing namespace reporting;\nusing namespace testing;\n\nclass eventstoreprocessor_tests : public ::testing::Test\n{\n    protected:\n        eventstoreprocessor_tests() {}\n};\n\nTEST_F(eventstoreprocessor_tests, breathing)\n{\n    MockEventStore* store_p = new MockEventStore();\n    IEventStorePtr store_sp(store_p);\n\n    MockEventSubject* subject_p = new MockEventSubject();\n    IEventSubjectPtr subject_sp(subject_p);\n\n    EventStoreProcessor proc(store_sp, subject_sp, 1);\n\n    Event evt(\"test\", \"http://test.com\", 0);\n    std::vector<Event> events;\n    events.push_back(evt);\n\n    EXPECT_CALL(*store_p, removeAllEvents()).WillOnce(Return(events));\n    EXPECT_CALL(*subject_p, notify(evt));\n\n    std::thread t1(&EventStoreProcessor::start, &proc);\n    t1.detach();\n\n    std::this_thread::sleep_for(std::chrono::milliseconds(500));\n    proc.shutdown();\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "gm", "ock", "/", "gm", "ock", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "reporting", "_", "m", "ocks", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "event", "store", "processor", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġreporting", ";", "Ċ", "using", "Ġnamespace", "Ġtesting", ";", "Ċ", "Ċ", "class", "Ġevent", "store", "processor", "_", "tests", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprotected", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġevent", "store", "processor", "_", "tests", "()", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "event", "store", "processor", "_", "tests", ",", "Ġbreathing", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMock", "Event", "Store", "*", "Ġstore", "_", "p", "Ġ=", "Ġnew", "ĠMock", "Event", "Store", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠI", "Event", "Store", "Ptr", "Ġstore", "_", "sp", "(", "store", "_", "p", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠMock", "Event", "Subject", "*", "Ġsubject", "_", "p", "Ġ=", "Ġnew", "ĠMock", "Event", "Subject", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠI", "Event", "Subject", "Ptr", "Ġsubject", "_", "sp", "(", "subject", "_", "p", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠEvent", "Store", "Process", "or", "Ġproc", "(", "store", "_", "sp", ",", "Ġsubject", "_", "sp", ",", "Ġ1", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠEvent", "Ġev", "t", "(\"", "test", "\",", "Ġ\"", "http", "://", "test", ".", "com", "\",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "Event", ">", "Ġevents", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġevents", ".", "push", "_", "back", "(", "ev", "t", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "C", "ALL", "(*", "store", "_", "p", ",", "Ġremove", "All", "Events", "()", ").", "Will", "Once", "(", "Return", "(", "events", "));", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "C", "ALL", "(*", "subject", "_", "p", ",", "Ġnotify", "(", "ev", "t", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "thread", "Ġt", "1", "(&", "Event", "Store", "Process", "or", "::", "start", ",", "Ġ&", "proc", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", "1", ".", "det", "ach", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "this", "_", "thread", "::", "sleep", "_", "for", "(", "std", "::", "chron", "o", "::", "mill", "isec", "onds", "(", "500", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġproc", ".", "shut", "down", "();", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["events", 13, "comesFrom", ["events"], [12]], ["events", 21, "comesFrom", ["events"], [12]], ["evt", 15, "comesFrom", ["evt"], [11]], ["evt", 25, "comesFrom", ["evt"], [11]], ["proc", 28, "comesFrom", ["proc"], [8]], ["proc", 33, "comesFrom", ["proc"], [8]], ["t1", 29, "comesFrom", ["t1"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::262", "code": "//\n// Created by stephen on 16-6-9.\n//\n\n#include \"client.h\"\n\nint main(int argc, char* argv[]){\n    int port;\n    sscanf(argv[1], \"%d\", &port);\n    printf(\"port: %d\\n\", port);\n    client(port);\n    return 0;\n}\n\n\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "Ġstep", "hen", "Ġon", "Ġ16", "-", "6", "-", "9", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "client", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġport", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", "scan", "f", "(", "arg", "v", "[", "1", "],", "Ġ\"%", "d", "\",", "Ġ&", "port", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "port", ":", "Ġ%", "d", "\\", "n", "\",", "Ġport", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġclient", "(", "port", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["port", 6, "comesFrom", ["port"], [3]], ["port", 8, "comesFrom", ["port"], [3]], ["port", 10, "comesFrom", ["port"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::263", "code": "#ifndef SEGMENTIZE_H\n#define SEGMENTIZE_H\n\n#include <vector>\n#include <map>\n\n#include \"geometry.hpp\"\n#include <boost/polygon/isotropy.hpp>\n#include <boost/polygon/segment_concept.hpp>\n#include <boost/polygon/segment_utils.hpp>\n\n/* Given a multi_linestring, return a new multiline_string where there\n * are no segments that cross any other segments.  Nor are there any T\n * shapes where the end of a linestring butts up against the center of\n * another.\n *\n * Repeats are removed, as are segments that are identical but\n * pointing in opposite directions.\n */\nstd::vector<segment_type_p> segmentize(const std::vector<segment_type_p>& all_segments) {\n  std::vector<segment_type_p> intersected_segments;\n  boost::polygon::intersect_segments(intersected_segments, all_segments.cbegin(), all_segments.cend());\n  // Sort the segments themselves.\n  std::sort(intersected_segments.begin(), intersected_segments.end());\n  auto last = std::unique(intersected_segments.begin(), intersected_segments.end());\n  intersected_segments.erase(last, intersected_segments.end());\n\n  return intersected_segments;\n}\n\n#endif //SEGMENTIZE_H\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠS", "EG", "MENT", "IZE", "_", "H", "Ċ", "#", "define", "ĠS", "EG", "MENT", "IZE", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "ge", "ometry", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "boost", "/", "poly", "gon", "/", "is", "ot", "ropy", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "poly", "gon", "/", "se", "gment", "_", "concept", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "poly", "gon", "/", "se", "gment", "_", "utils", ".", "h", "pp", ">", "Ċ", "Ċ", "/*", "ĠGiven", "Ġa", "Ġmulti", "_", "lin", "est", "ring", ",", "Ġreturn", "Ġa", "Ġnew", "Ġmult", "il", "ine", "_", "string", "Ġwhere", "Ġthere", "Ċ", "Ġ*", "Ġare", "Ġno", "Ġsegments", "Ġthat", "Ġcross", "Ġany", "Ġother", "Ġsegments", ".", "Ġ", "ĠNor", "Ġare", "Ġthere", "Ġany", "ĠT", "Ċ", "Ġ*", "Ġshapes", "Ġwhere", "Ġthe", "Ġend", "Ġof", "Ġa", "Ġlin", "est", "ring", "Ġbut", "ts", "Ġup", "Ġagainst", "Ġthe", "Ġcenter", "Ġof", "Ċ", "Ġ*", "Ġanother", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠRepe", "ats", "Ġare", "Ġremoved", ",", "Ġas", "Ġare", "Ġsegments", "Ġthat", "Ġare", "Ġidentical", "Ġbut", "Ċ", "Ġ*", "Ġpointing", "Ġin", "Ġopposite", "Ġdirections", ".", "Ċ", "Ġ*/", "Ċ", "std", "::", "vector", "<", "se", "gment", "_", "type", "_", "p", ">", "Ġsegment", "ize", "(", "const", "Ġstd", "::", "vector", "<", "se", "gment", "_", "type", "_", "p", ">", "&", "Ġall", "_", "se", "gments", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "se", "gment", "_", "type", "_", "p", ">", "Ġintersect", "ed", "_", "se", "gments", ";", "Ċ", "Ġ", "Ġboost", "::", "poly", "gon", "::", "inter", "sect", "_", "se", "gments", "(", "inter", "sect", "ed", "_", "se", "gments", ",", "Ġall", "_", "se", "gments", ".", "c", "begin", "(),", "Ġall", "_", "se", "gments", ".", "cend", "());", "Ċ", "Ġ", "Ġ//", "ĠSort", "Ġthe", "Ġsegments", "Ġthemselves", ".", "Ċ", "Ġ", "Ġstd", "::", "sort", "(", "inter", "sect", "ed", "_", "se", "gments", ".", "begin", "(),", "Ġintersect", "ed", "_", "se", "gments", ".", "end", "());", "Ċ", "Ġ", "Ġauto", "Ġlast", "Ġ=", "Ġstd", "::", "unique", "(", "inter", "sect", "ed", "_", "se", "gments", ".", "begin", "(),", "Ġintersect", "ed", "_", "se", "gments", ".", "end", "());", "Ċ", "Ġ", "Ġintersect", "ed", "_", "se", "gments", ".", "er", "ase", "(", "last", ",", "Ġintersect", "ed", "_", "se", "gments", ".", "end", "());", "ĊĊ", "Ġ", "Ġreturn", "Ġintersect", "ed", "_", "se", "gments", ";", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ġ//", "SE", "G", "MENT", "IZE", "_", "H", "Ċ"], "dataflow_graph": [["intersected_segments", 6, "comesFrom", ["intersected_segments"], [4]], ["intersected_segments", 12, "comesFrom", ["intersected_segments"], [4]], ["intersected_segments", 14, "comesFrom", ["intersected_segments"], [4]], ["intersected_segments", 18, "comesFrom", ["intersected_segments"], [4]], ["intersected_segments", 20, "comesFrom", ["intersected_segments"], [4]], ["intersected_segments", 22, "comesFrom", ["intersected_segments"], [4]], ["intersected_segments", 25, "comesFrom", ["intersected_segments"], [4]], ["intersected_segments", 27, "comesFrom", ["intersected_segments"], [4]], ["last", 24, "comesFrom", ["last"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::264", "code": "#include <iostream>\n\n#include \"core/tuple.hpp\"\n#include \"core/alarm.h\"\n\n\n\n\n\nint main(void)\n{\n    auto t1 = std::tuple<int, std::string>{1, \"one\"};\n    auto t2 = jle::tuple<int, std::string>{2, \"two\"};\n\n    if(t1 == t2)\n        std::cout << \"yes\" << std::endl;\n    if(t1 < t2)\n        std::cout << \"yes\" << std::endl;\n\n\n    JLE_COUT_TRACE(t1);\n    JLE_COUT_TRACE(t2);\n\n    std::cout << t1 << std::endl;\n\n    return 0;\n}\n\n\n\nnamespace jle {\n\n    void alarm_msg(const jle::alarm& al)\n    {\n        std::cout << al << std::endl;\n    }\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "core", "/", "t", "uple", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "al", "arm", ".", "h", "\"", "ĊĊ", "ĊĊ", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġt", "1", "Ġ=", "Ġstd", "::", "t", "uple", "<", "int", ",", "Ġstd", "::", "string", ">", "{", "1", ",", "Ġ\"", "one", "\"", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġt", "2", "Ġ=", "Ġj", "le", "::", "t", "uple", "<", "int", ",", "Ġstd", "::", "string", ">", "{", "2", ",", "Ġ\"", "two", "\"", "};", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "t", "1", "Ġ==", "Ġt", "2", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "yes", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "t", "1", "Ġ<", "Ġt", "2", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "yes", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠJ", "LE", "_", "C", "OUT", "_", "TR", "ACE", "(", "t", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠJ", "LE", "_", "C", "OUT", "_", "TR", "ACE", "(", "t", "2", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġt", "1", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "names", "pace", "Ġj", "le", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġalarm", "_", "msg", "(", "const", "Ġj", "le", "::", "al", "arm", "&", "Ġal", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġal", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["t1", 3, "comesFrom", ["t1"], [1]], ["t1", 7, "comesFrom", ["t1"], [1]], ["t1", 12, "comesFrom", ["t1"], [1]], ["t1", 16, "comesFrom", ["t1"], [1]], ["t2", 4, "comesFrom", ["t2"], [2]], ["t2", 8, "comesFrom", ["t2"], [2]], ["t2", 14, "comesFrom", ["t2"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::265", "code": "/*------------------------------------------------------------------------------\n    Copyright 2014, HexWorld Authors.\n\n    This file is part of HexWorld.\n\n    HexWorld is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    HexWorld is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with HexWorld.  If not, see <http://www.gnu.org/licenses/>.\n------------------------------------------------------------------------------*/\n/** @file staticmodel.cpp\n    @brief StaticModel definitions.\n    @author Luis Cabellos\n    @date 2014-01-03\n*/\n//------------------------------------------------------------------------------\n#include \"staticmodel.hpp\"\n\n//------------------------------------------------------------------------------\nvoid StaticModel::insertNullMaterial(){\n    Material mat;\n    mat.setDiffuse( glm::vec3( 0.8, 0, 0.8 ) );\n    insertMaterial( std::move(mat) );\n}\n\n//------------------------------------------------------------------------------\nvoid StaticModel::draw( Renderer & renderer ){\n    for( auto & mesh: m_meshes ){\n        const auto & mat = m_materials[ mesh->getMaterialIdx() ];\n        mesh->draw( mat, renderer );\n    }\n}\n\n//------------------------------------------------------------------------------\n", "code_tokens": ["Ġ/*", "----------------------------------------------------------------", "--------------", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCopyright", "Ġ2014", ",", "ĠHex", "World", "ĠAuthors", ".", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠHex", "World", ".", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠHex", "World", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ", "Ġ", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠHex", "World", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "Ġ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġ", "Ġ", "Ġalong", "Ġwith", "ĠHex", "World", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "----------------------------------------------------------------", "--------------", "*/", "Ċ", "/**", "Ġ@", "file", "Ġstatic", "model", ".", "cpp", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ@", "b", "rief", "ĠStatic", "Model", "Ġdefinitions", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ@", "author", "ĠLuis", "ĠCab", "ell", "os", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ@", "date", "Ġ2014", "-", "01", "-", "03", "Ċ", "*/", "Ċ", "//", "----------------------------------------------------------------", "--------------", "Ċ", "#", "include", "Ġ\"", "static", "model", ".", "h", "pp", "\"", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------", "Ċ", "void", "ĠStatic", "Model", "::", "insert", "Null", "Material", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMaterial", "Ġmat", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmat", ".", "set", "Diff", "use", "(", "Ġgl", "m", "::", "vec", "3", "(", "Ġ0", ".", "8", ",", "Ġ0", ",", "Ġ0", ".", "8", "Ġ)", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinsert", "Material", "(", "Ġstd", "::", "move", "(", "mat", ")", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------", "Ċ", "void", "ĠStatic", "Model", "::", "draw", "(", "ĠRend", "erer", "Ġ&", "Ġrend", "erer", "Ġ)", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "Ġauto", "Ġ&", "Ġmesh", ":", "Ġm", "_", "mes", "hes", "Ġ)", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġauto", "Ġ&", "Ġmat", "Ġ=", "Ġm", "_", "material", "s", "[", "Ġmesh", "->", "get", "Material", "Id", "x", "()", "Ġ];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmesh", "->", "draw", "(", "Ġmat", ",", "Ġrend", "erer", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------", "Ċ"], "dataflow_graph": [["mat", 2, "comesFrom", ["mat"], [1]], ["mat", 7, "comesFrom", ["mat"], [1]], ["mat", 12, "comesFrom", ["mat"], [1]], ["mat", 18, "comesFrom", ["mat"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::266", "code": "#include <Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\nLogicalVector fastMove(const NumericVector& time,\n                       const NumericVector& value,\n                       double nsec = 60,\n                       double nval = 5) {\n  \n  int n = time.size();\n  LogicalVector fast_move(n);\n  \n  int i, j;\n  double tmin, vmin, vmax;\n  \n  for (i = n - 1; i > 0; i--) {\n    tmin = time[i] - nsec;\n    vmin = value[i] - nval;\n    vmax = value[i] + nval;\n    for (j = i - 1; j > 0; j--) {\n      if (time[j] < tmin) break;\n      if (value[j] < vmin || value[j] > vmax) {\n        fast_move[i] = true;\n        break;\n      }\n    }\n  }\n  \n  return fast_move;\n}\n\n\n/*** R\n\n*/\n", "code_tokens": ["Ġ#", "include", "Ġ<", "R", "cpp", ".", "h", ">", "Ċ", "using", "Ġnamespace", "ĠR", "cpp", ";", "Ċ", "Ċ", "//", "Ġ[[", "R", "cpp", "::", "export", "]]", "Ċ", "Log", "ical", "Vector", "Ġfast", "Move", "(", "const", "ĠN", "umeric", "Vector", "&", "Ġtime", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠN", "umeric", "Vector", "&", "Ġvalue", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġn", "sec", "Ġ=", "Ġ60", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġn", "val", "Ġ=", "Ġ5", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġtime", ".", "size", "();", "Ċ", "Ġ", "ĠLog", "ical", "Vector", "Ġfast", "_", "move", "(", "n", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġint", "Ġi", ",", "Ġj", ";", "Ċ", "Ġ", "Ġdouble", "Ġt", "min", ",", "Ġv", "min", ",", "Ġv", "max", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġn", "Ġ-", "Ġ1", ";", "Ġi", "Ġ>", "Ġ0", ";", "Ġi", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", "min", "Ġ=", "Ġtime", "[", "i", "]", "Ġ-", "Ġn", "sec", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġv", "min", "Ġ=", "Ġvalue", "[", "i", "]", "Ġ-", "Ġn", "val", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġv", "max", "Ġ=", "Ġvalue", "[", "i", "]", "Ġ+", "Ġn", "val", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "j", "Ġ=", "Ġi", "Ġ-", "Ġ1", ";", "Ġj", "Ġ>", "Ġ0", ";", "Ġj", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "time", "[", "j", "]", "Ġ<", "Ġt", "min", ")", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "value", "[", "j", "]", "Ġ<", "Ġv", "min", "Ġ||", "Ġvalue", "[", "j", "]", "Ġ>", "Ġv", "max", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfast", "_", "move", "[", "i", "]", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġfast", "_", "move", ";", "Ċ", "}", "ĊĊ", "Ċ", "/", "***", "ĠR", "Ċ", "Ċ", "*/", "Ċ"], "dataflow_graph": [["n", 16, "comesFrom", ["n"], [6]], ["i", 17, "comesFrom", ["i"], [15]], ["i", 18, "comesFrom", ["i"], [15]], ["i", 21, "comesFrom", ["i"], [15]], ["i", 25, "comesFrom", ["i"], [15]], ["i", 29, "comesFrom", ["i"], [15]], ["i", 32, "comesFrom", ["i"], [15]], ["i", 45, "comesFrom", ["i"], [15]], ["j", 33, "comesFrom", ["j"], [31]], ["j", 34, "comesFrom", ["j"], [31]], ["j", 36, "comesFrom", ["j"], [31]], ["j", 39, "comesFrom", ["j"], [31]], ["j", 42, "comesFrom", ["j"], [31]], ["tmin", 37, "comesFrom", ["tmin"], [19]], ["vmin", 40, "comesFrom", ["vmin"], [23]], ["vmax", 43, "comesFrom", ["vmax"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::267", "code": "/*\n * C++ Primer\n * Chap. 9 Ex. 9.18\n * Hao Zhang\n * 2016.09.17\n * main.cpp\n */\n\n#include <deque>\nusing std::deque;\n\n#include <string>\nusing std::string;\n\n#include <iostream>\nusing std::cout;\nusing std::endl;\nusing std::cin;\n\nint main()\n{\n    deque<string> deq;\n    string val;\n    while (cin >> val) {\n        deq.push_back(val);\n    }\n\n    for (auto iter = deq.cbegin(); iter != deq.cend(); ++iter) {\n        cout << *iter << \" \";\n    }\n    cout << endl;\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠC", "++", "ĠPrim", "er", "Ċ", "Ġ*", "ĠChap", ".", "Ġ9", "ĠEx", ".", "Ġ9", ".", "18", "Ċ", "Ġ*", "ĠH", "ao", "ĠZhang", "Ċ", "Ġ*", "Ġ2016", ".", "09", ".", "17", "Ċ", "Ġ*", "Ġmain", ".", "cpp", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "de", "que", ">", "Ċ", "using", "Ġstd", "::", "de", "que", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "using", "Ġstd", "::", "cin", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġde", "que", "<", "string", ">", "Ġde", "q", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġval", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġval", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġde", "q", ".", "push", "_", "back", "(", "val", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "Ġiter", "Ġ=", "Ġde", "q", ".", "c", "begin", "();", "Ġiter", "Ġ!=", "Ġde", "q", ".", "cend", "();", "Ġ++", "iter", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ*", "iter", "Ġ<<", "Ġ\"", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["val", 9, "comesFrom", ["val"], [7]], ["val", 12, "comesFrom", ["val"], [7]], ["deq", 10, "comesFrom", ["deq"], [6]], ["deq", 14, "comesFrom", ["deq"], [6]], ["deq", 17, "comesFrom", ["deq"], [6]], ["iter", 16, "comesFrom", ["iter"], [13]], ["iter", 19, "comesFrom", ["iter"], [13]], ["iter", 21, "comesFrom", ["iter"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::268", "code": "#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint a[10001];\nint dp[10001];\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; i++) scanf(\"%d\",a+i);\n    dp[1] = a[1];\n    dp[2] = a[1] + a[2];\n    for(int i=3; i<=n; i++) \n        dp[i] = max(dp[i-1],max(dp[i-2]+a[i],dp[i-3]+a[i-1]+a[i]));\n    printf(\"%d\\n\",dp[n]);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġa", "[", "100", "01", "];", "Ċ", "int", "Ġd", "p", "[", "100", "01", "];", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "n", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "1", ";", "Ġi", "<", "=", "n", ";", "Ġi", "++)", "Ġscan", "f", "(\"", "%", "d", "\",", "a", "+", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "1", "]", "Ġ=", "Ġa", "[", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "2", "]", "Ġ=", "Ġa", "[", "1", "]", "Ġ+", "Ġa", "[", "2", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "3", ";", "Ġi", "<", "=", "n", ";", "Ġi", "++)", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "i", "]", "Ġ=", "Ġmax", "(", "dp", "[", "i", "-", "1", "],", "max", "(", "dp", "[", "i", "-", "2", "]+", "a", "[", "i", "],", "dp", "[", "i", "-", "3", "]+", "a", "[", "i", "-", "1", "]+", "a", "[", "i", "])", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "dp", "[", "n", "]);", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [4]], ["n", 9, "comesFrom", ["n"], [4]], ["n", 21, "comesFrom", ["n"], [4]], ["n", 41, "comesFrom", ["n"], [4]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["i", 13, "comesFrom", ["i"], [7]], ["i", 20, "comesFrom", ["i"], [19]], ["i", 22, "comesFrom", ["i"], [19]], ["i", 24, "comesFrom", ["i"], [19]], ["i", 27, "comesFrom", ["i"], [19]], ["i", 30, "comesFrom", ["i"], [19]], ["i", 32, "comesFrom", ["i"], [19]], ["i", 34, "comesFrom", ["i"], [19]], ["i", 36, "comesFrom", ["i"], [19]], ["i", 38, "comesFrom", ["i"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::269", "code": "#include <iostream>\n#include <cstdio>\nusing namespace std;\nint main(){\n    int n;\n    cin>>n;\n    if(n<9)printf(\"0\");\n    else if(n==9)printf(\"8\");\n    else{\n        printf(\"72\");\n        for(int i=10;i<n;i++){\n            printf(\"0\");\n        }\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ">>", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "n", "<", "9", ")", "printf", "(\"", "0", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "(", "n", "==", "9", ")", "printf", "(\"", "8", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "72", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "10", ";", "i", "<", "n", ";", "i", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "0", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [2]], ["n", 5, "comesFrom", ["n"], [2]], ["n", 7, "comesFrom", ["n"], [2]], ["n", 12, "comesFrom", ["n"], [2]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 13, "comesFrom", ["i"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::270", "code": "#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<cctype>\r\n#include<cstring>\r\n#include<cstdlib>\r\n#include<string>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<map>\r\n#include<iomanip>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,i,N[1000],temp,cnt;\r\n\tbool flag;\r\n\r\n\twhile(cin >> n)\r\n\t{\r\n\t\tcnt=0;\r\n\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tcin >> N[i]; \r\n\t\t}\r\n\r\n\t\twhile(1)\r\n\t\t{\r\n\t\t\tflag=true;\r\n\r\n\t\t\tfor(i=1;i<n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(N[i]<N[i-1])\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp=N[i];\r\n\t\t\t\t\tN[i]=N[i-1];\r\n\t\t\t\t\tN[i-1]=temp;\r\n\t\t\t\t\tcnt++;\r\n\t\t\t\t\tflag=false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(flag)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcout << \"Minimum exchange operations : \" << cnt <<endl;\r\n\t}\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "<", "c", "math", ">", "č", "Ċ", "#", "include", "<", "c", "ct", "ype", ">", "č", "Ċ", "#", "include", "<", "c", "string", ">", "č", "Ċ", "#", "include", "<", "c", "std", "lib", ">", "č", "Ċ", "#", "include", "<", "string", ">", "č", "Ċ", "#", "include", "<", "vector", ">", "č", "Ċ", "#", "include", "<", "al", "gorithm", ">", "č", "Ċ", "#", "include", "<", "map", ">", "č", "Ċ", "#", "include", "<", "i", "oman", "ip", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġn", ",", "i", ",", "N", "[", "1000", "],", "temp", ",", "c", "nt", ";", "č", "Ċ", "ĉ", "bool", "Ġflag", ";", "č", "Ċ", "č", "Ċ", "ĉ", "while", "(", "cin", "Ġ>>", "Ġn", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "c", "nt", "=", "0", ";", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "n", ";", "i", "++)", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "cin", "Ġ>>", "ĠN", "[", "i", "];", "Ġ", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "while", "(", "1", ")", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "flag", "=", "true", ";", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "ĉ", "for", "(", "i", "=", "1", ";", "i", "<", "n", ";", "i", "++)", "č", "Ċ", "ĉ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "N", "[", "i", "]", "<", "N", "[", "i", "-", "1", "])", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "temp", "=", "N", "[", "i", "];", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "N", "[", "i", "]=", "N", "[", "i", "-", "1", "];", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "N", "[", "i", "-", "1", "]=", "temp", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "c", "nt", "++;", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "flag", "=", "false", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "flag", ")", "č", "Ċ", "ĉ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Minimum", "Ġexchange", "Ġoperations", "Ġ:", "Ġ\"", "Ġ<<", "Ġc", "nt", "Ġ<<", "end", "l", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["n", 9, "comesFrom", ["n"], [2]], ["n", 13, "comesFrom", ["n"], [2]], ["n", 21, "comesFrom", ["n"], [2]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["i", 17, "comesFrom", ["i"], [11]], ["i", 20, "comesFrom", ["i"], [19]], ["i", 22, "comesFrom", ["i"], [19]], ["i", 24, "comesFrom", ["i"], [19]], ["i", 26, "comesFrom", ["i"], [19]], ["i", 29, "comesFrom", ["i"], [19]], ["i", 31, "comesFrom", ["i"], [19]], ["i", 33, "comesFrom", ["i"], [19]], ["i", 35, "comesFrom", ["i"], [19]], ["temp", 36, "comesFrom", ["temp"], [27]], ["cnt", 37, "comesFrom", ["cnt"], [10]], ["cnt", 41, "comesFrom", ["cnt"], [10]], ["flag", 39, "comesFrom", ["flag"], [38]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::271", "code": "#include <iostream>\nusing namespace std;\nint main(){\n\tint cv, ce, cs, cp;\n\tint fv, fe, fs, fp;\n\n\tcin >> cv >> ce >> cs;\n\tcin >> fv >> fe >> fs;\n\n\tcp = (cv*3)+ce;\n\tfp = (fv*3)+fe;\n\n\tif( cp > fp){\n\t\tcout << \"C\" << endl;\n\t}else if( fp > cp){\n\t\tcout << \"F\" << endl;\n\t}else{\n\t\tif(cs>fs){\n\t\t\tcout << \"C\" << endl;\n\t\t}else if(fs>cs){\n\t\t\tcout << \"F\" << endl;\n\t\t}else{\n\t\t\tcout << \"=\" << endl;\n\t\t}\n\t}\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "int", "Ġc", "v", ",", "Ġce", ",", "Ġcs", ",", "Ġcp", ";", "Ċ", "ĉ", "int", "Ġf", "v", ",", "Ġfe", ",", "Ġfs", ",", "Ġf", "p", ";", "ĊĊ", "ĉ", "cin", "Ġ>>", "Ġc", "v", "Ġ>>", "Ġce", "Ġ>>", "Ġcs", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġf", "v", "Ġ>>", "Ġfe", "Ġ>>", "Ġfs", ";", "ĊĊ", "ĉ", "cp", "Ġ=", "Ġ(", "cv", "*", "3", ")+", "ce", ";", "Ċ", "ĉ", "fp", "Ġ=", "Ġ(", "f", "v", "*", "3", ")+", "fe", ";", "ĊĊ", "ĉ", "if", "(", "Ġcp", "Ġ>", "Ġf", "p", "){", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "C", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "else", "Ġif", "(", "Ġf", "p", "Ġ>", "Ġcp", "){", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "F", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "if", "(", "cs", ">", "fs", "){", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "C", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "}", "else", "Ġif", "(", "fs", ">", "cs", "){", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "F", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "=\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["cv", 11, "comesFrom", ["cv"], [2]], ["cv", 19, "comesFrom", ["cv"], [2]], ["ce", 12, "comesFrom", ["ce"], [3]], ["ce", 20, "comesFrom", ["ce"], [3]], ["cs", 13, "comesFrom", ["cs"], [4]], ["cs", 32, "comesFrom", ["cs"], [4]], ["cs", 37, "comesFrom", ["cs"], [4]], ["fv", 15, "comesFrom", ["fv"], [6]], ["fv", 22, "comesFrom", ["fv"], [6]], ["fe", 16, "comesFrom", ["fe"], [7]], ["fe", 23, "comesFrom", ["fe"], [7]], ["fs", 17, "comesFrom", ["fs"], [8]], ["fs", 33, "comesFrom", ["fs"], [8]], ["fs", 36, "comesFrom", ["fs"], [8]], ["cp", 24, "comesFrom", ["cp"], [18]], ["cp", 29, "comesFrom", ["cp"], [18]], ["fp", 25, "comesFrom", ["fp"], [21]], ["fp", 28, "comesFrom", ["fp"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::272", "code": "/*\n * SimpleTask plugin implementation called SimpleImple1\n */\n\n#include <Toolbox/Plugin.hpp>\n\n#include \"../SimpleTask_interface.h\"\n\n\nTOOLBOX_DEFINE_PLUGIN( SimpleTask, SimpleImple1 )\n\n\tvirtual const std::string &Operation()\n\t{\n\t\tstatic std::string Op( \"* 5\" );\n\t\treturn Op;\n\t}\n\n\tvirtual int Task( int input )\n\t{\n\t\treturn input * 5;\n\t}\n\nTOOLBOX_END_PLUGIN_DEF\n\n\nextern \"C\"\n{\n\tTOOLBOX_DEFINE_PLUGIN_INFO( \"Simple1\",\n\t\t\t\t\t\t\t\t\"1.0\",\n\t\t\t\t\t\t\t\t\"SimpleTask\" )\n\n\tTOOLBOX_DEFINE_PLUGIN_FACTORY( SimpleTask, SimpleImple1 )\n\n\t// Optional plugin event functions\n\t// void onLoad();\n\t// void onUnload();\n}\n\n\n// vim: tabstop=4 shiftwidth=4\n// astyle: --indent=tab=4 --style=ansi --indent-switches --indent-namespaces --pad-oper\n\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠSimple", "Task", "Ġplugin", "Ġimplementation", "Ġcalled", "ĠSimple", "Im", "ple", "1", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "Tool", "box", "/", "Plugin", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "Simple", "Task", "_", "interface", ".", "h", "\"", "ĊĊ", "Ċ", "TO", "OL", "BOX", "_", "DE", "FINE", "_", "PL", "UG", "IN", "(", "ĠSimple", "Task", ",", "ĠSimple", "Im", "ple", "1", "Ġ)", "ĊĊ", "ĉ", "virtual", "Ġconst", "Ġstd", "::", "string", "Ġ&", "Operation", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "static", "Ġstd", "::", "string", "ĠOp", "(", "Ġ\"", "*", "Ġ5", "\"", "Ġ);", "Ċ", "ĉ", "ĉ", "return", "ĠOp", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "virtual", "Ġint", "ĠTask", "(", "Ġint", "Ġinput", "Ġ)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġinput", "Ġ*", "Ġ5", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "TO", "OL", "BOX", "_", "END", "_", "PL", "UG", "IN", "_", "DEF", "ĊĊ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ċ", "{", "Ċ", "ĉ", "TO", "OL", "BOX", "_", "DE", "FINE", "_", "PL", "UG", "IN", "_", "INFO", "(", "Ġ\"", "Simple", "1", "\",", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "\"", "1", ".", "0", "\",", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "\"", "Simple", "Task", "\"", "Ġ)", "ĊĊ", "ĉ", "TO", "OL", "BOX", "_", "DE", "FINE", "_", "PL", "UG", "IN", "_", "F", "ACT", "ORY", "(", "ĠSimple", "Task", ",", "ĠSimple", "Im", "ple", "1", "Ġ)", "ĊĊ", "ĉ", "//", "ĠOptional", "Ġplugin", "Ġevent", "Ġfunctions", "Ċ", "ĉ", "//", "Ġvoid", "Ġon", "Load", "();", "Ċ", "ĉ", "//", "Ġvoid", "Ġon", "Un", "load", "();", "Ċ", "}", "ĊĊ", "Ċ", "//", "Ġvim", ":", "Ġtab", "stop", "=", "4", "Ġshift", "width", "=", "4", "Ċ", "//", "Ġast", "yle", ":", "Ġ--", "ind", "ent", "=", "tab", "=", "4", "Ġ--", "style", "=", "ans", "i", "Ġ--", "ind", "ent", "-", "sw", "itches", "Ġ--", "ind", "ent", "-", "names", "paces", "Ġ--", "pad", "-", "oper", "ĊĊ", "Ċ"], "dataflow_graph": [["Op", 5, "comesFrom", ["Op"], [4]], ["input", 8, "comesFrom", ["input"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::273", "code": "#include <iostream>\r\n#include <iomanip>\r\n\r\n#include \"color/color.hpp\"\r\n\r\n\r\nint main( int argc, char *argv[] )\r\n {\r\n  ::color::argb< ::color::type::split8888_t > r;\r\n\r\n  r = ::color::constant::orange_t{}; //!< Fill with some useful information\r\n  ::color::set::alpha( r, 255 );\r\n\r\n  std::cout<< (unsigned)r[0] << \",\" << (unsigned)r[1] << \",\" << (unsigned)r[2] << \",\" << (unsigned)r[3];\r\n\r\n  std::cout<< std::endl;\r\n\r\n  return EXIT_SUCCESS;\r\n } ", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "Ġ<", "i", "oman", "ip", ">", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "color", "/", "color", ".", "h", "pp", "\"", "č", "Ċ", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[]", "Ġ)", "č", "Ċ", "Ġ{", "č", "Ċ", "Ġ", "Ġ::", "color", "::", "arg", "b", "<", "Ġ::", "color", "::", "type", "::", "split", "88", "88", "_", "t", "Ġ>", "Ġr", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġr", "Ġ=", "Ġ::", "color", "::", "const", "ant", "::", "orange", "_", "t", "{", "};", "Ġ//", "!", "<", "ĠFill", "Ġwith", "Ġsome", "Ġuseful", "Ġinformation", "č", "Ċ", "Ġ", "Ġ::", "color", "::", "set", "::", "alpha", "(", "Ġr", ",", "Ġ255", "Ġ);", "č", "Ċ", "č", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "<<", "Ġ(", "unsigned", ")", "r", "[", "0", "]", "Ġ<<", "Ġ\"", ",\"", "Ġ<<", "Ġ(", "unsigned", ")", "r", "[", "1", "]", "Ġ<<", "Ġ\"", ",\"", "Ġ<<", "Ġ(", "unsigned", ")", "r", "[", "2", "]", "Ġ<<", "Ġ\"", ",\"", "Ġ<<", "Ġ(", "unsigned", ")", "r", "[", "3", "];", "č", "Ċ", "č", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "<<", "Ġstd", "::", "end", "l", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "č", "Ċ", "Ġ}", "Ġ"], "dataflow_graph": [["r", 6, "comesFrom", ["r"], [4]], ["r", 8, "comesFrom", ["r"], [4]], ["r", 9, "comesFrom", ["r"], [4]], ["r", 10, "comesFrom", ["r"], [4]], ["r", 11, "comesFrom", ["r"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::274", "code": "#include \"system_timer.h\"\n\nSystemTimer* SystemTimer::instance = 0;\n\nSystemTimer* SystemTimer::GetInstance(){\n\tif ( instance == 0 ){\n\t\tinstance = new SystemTimer;\n\t}\n\treturn instance;\n}\n\nbool SystemTimer::DeleteInstance(){\n\tif ( instance != 0 ){\n\t\tdelete instance;\n\t\tinstance = 0;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nSystemTimer::SystemTimer(){\n\t\n}\n\nSystemTimer::~SystemTimer(){\n\n}\n\nvoid SystemTimer::BeginTimer(){\n\tbegin_time_ = QTime::currentTime();\n}\n\nvoid SystemTimer::EndTimer(){\n\tQTime end_time = QTime::currentTime();\n\tinterval_ = begin_time_.msecsTo(end_time);\n}\n\nvoid SystemTimer::PrintTime(){\n\tqDebug() << \"Time: \" << interval_;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "system", "_", "timer", ".", "h", "\"", "Ċ", "Ċ", "System", "Timer", "*", "ĠSystem", "Timer", "::", "instance", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "System", "Timer", "*", "ĠSystem", "Timer", "::", "Get", "Instance", "(){", "Ċ", "ĉ", "if", "Ġ(", "Ġinstance", "Ġ==", "Ġ0", "Ġ)", "{", "Ċ", "ĉ", "ĉ", "instance", "Ġ=", "Ġnew", "ĠSystem", "Timer", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġinstance", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠSystem", "Timer", "::", "Delete", "Instance", "(){", "Ċ", "ĉ", "if", "Ġ(", "Ġinstance", "Ġ!=", "Ġ0", "Ġ)", "{", "Ċ", "ĉ", "ĉ", "delete", "Ġinstance", ";", "Ċ", "ĉ", "ĉ", "instance", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "System", "Timer", "::", "System", "Timer", "(){", "Ċ", "ĉ", "Ċ", "}", "Ċ", "Ċ", "System", "Timer", "::", "~", "System", "Timer", "(){", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSystem", "Timer", "::", "Begin", "Timer", "(){", "Ċ", "ĉ", "begin", "_", "time", "_", "Ġ=", "ĠQ", "Time", "::", "current", "Time", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSystem", "Timer", "::", "End", "Timer", "(){", "Ċ", "ĉ", "Q", "Time", "Ġend", "_", "time", "Ġ=", "ĠQ", "Time", "::", "current", "Time", "();", "Ċ", "ĉ", "inter", "val", "_", "Ġ=", "Ġbegin", "_", "time", "_.", "m", "sec", "s", "To", "(", "end", "_", "time", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSystem", "Timer", "::", "Print", "Time", "(){", "Ċ", "ĉ", "q", "Debug", "()", "Ġ<<", "Ġ\"", "Time", ":", "Ġ\"", "Ġ<<", "Ġinterval", "_", ";", "Ċ", "}"], "dataflow_graph": [["instance", 4, "comesFrom", ["instance"], [3]], ["instance", 6, "comesFrom", ["instance"], [3]], ["instance", 7, "comesFrom", ["instance"], [3]], ["begin_time_", 18, "comesFrom", ["begin_time_"], [12]], ["end_time", 20, "comesFrom", ["end_time"], [15]], ["interval_", 23, "comesFrom", ["interval_"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::275", "code": "/******************************************************************************  \n  Copyright 2015 Matthew The <matthew.the@scilifelab.se>\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  \n ******************************************************************************/\n \n#include \"PvalueTriplet.h\"\n\nnamespace maracluster {\n\nvoid PvalueTriplet::readFromString(const char* f, char** next) {\n  scannr1.readFromString(f, next); f = *next;\n  scannr2.readFromString(f, next); f = *next;\n  pval = strtod(f, next);\n}\n\nstd::ostream& operator<<(std::ostream& stream, const PvalueTriplet& t) {\n  stream << t.scannr1 << \" \" << t.scannr2 << \" \" << t.pval;\n  return stream;\n}\n\n\n} /* namespace maracluster */\n", "code_tokens": ["Ġ/", "********************************", "********************************", "************", "**", "Ġ", "Ġ", "Ċ", "Ġ", "ĠCopyright", "Ġ2015", "ĠMatthew", "ĠThe", "Ġ<", "m", "att", "hew", ".", "the", "@", "sc", "il", "if", "el", "ab", ".", "se", ">", "Ċ", "Ġ", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "ĊĊ", "Ġ", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "Ġ", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "Ġ", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ********************************", "********************************", "************", "**", "/", "Ċ", "Ġ", "Ċ", "#", "include", "Ġ\"", "P", "value", "Tri", "plet", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġmar", "acl", "uster", "Ġ{", "Ċ", "Ċ", "void", "ĠP", "value", "Tri", "plet", "::", "read", "From", "String", "(", "const", "Ġchar", "*", "Ġf", ",", "Ġchar", "**", "Ġnext", ")", "Ġ{", "Ċ", "Ġ", "Ġsc", "ann", "r", "1", ".", "read", "From", "String", "(", "f", ",", "Ġnext", ");", "Ġf", "Ġ=", "Ġ*", "next", ";", "Ċ", "Ġ", "Ġsc", "ann", "r", "2", ".", "read", "From", "String", "(", "f", ",", "Ġnext", ");", "Ġf", "Ġ=", "Ġ*", "next", ";", "Ċ", "Ġ", "Ġp", "val", "Ġ=", "Ġstr", "t", "od", "(", "f", ",", "Ġnext", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "ost", "ream", "&", "Ġoperator", "<<", "(", "std", "::", "ost", "ream", "&", "Ġstream", ",", "Ġconst", "ĠP", "value", "Tri", "plet", "&", "Ġt", ")", "Ġ{", "Ċ", "Ġ", "Ġstream", "Ġ<<", "Ġt", ".", "sc", "ann", "r", "1", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġt", ".", "sc", "ann", "r", "2", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġt", ".", "p", "val", ";", "Ċ", "Ġ", "Ġreturn", "Ġstream", ";", "Ċ", "}", "ĊĊ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġmar", "acl", "uster", "Ġ*/", "Ċ"], "dataflow_graph": [["f", 11, "comesFrom", ["f"], [7]], ["f", 17, "comesFrom", ["f"], [13]], ["pval", 27, "comesFrom", ["pval"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::276", "code": "/*\r\n * Scratchpad.cpp\r\n *\r\n *  Created on: 29 Dec 2014\r\n *      Author: Dean Harris\r\n */\r\n\r\n#include <list>\r\n#include <string>\r\n#include \"INote.h\"\r\n#include \"ScratchPad.h\"\r\n\r\nScratchPad::ScratchPad()\r\n{\r\n\r\n}\r\n\r\nScratchPad::~ScratchPad()\r\n{\r\n\r\n}\r\n\r\nvoid ScratchPad::setNote(const std::string& noteId, INote* pNote)\r\n{\r\n  if (this->noteMap_.find(noteId) != this->noteMap_.end())\r\n  {\r\n    INote* pPreviousNote = this->noteMap_[noteId];\r\n    if (pPreviousNote != nullptr)\r\n    {\r\n      delete pPreviousNote;\r\n    }\r\n  }\r\n\r\n  this->noteMap_[noteId] = pNote;\r\n}\r\n\r\nINote* ScratchPad::getNote(const std::string& noteId)\r\n{\r\n  INote* pNote = nullptr;\r\n\r\n  std::map<std::string, INote*>::iterator it = this->noteMap_.find(noteId);\r\n  if (it != this->noteMap_.end())\r\n  {\r\n    pNote = (*it).second;\r\n  }\r\n\r\n  return pNote;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "ĠSc", "ratch", "pad", ".", "cpp", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ29", "ĠDec", "Ġ2014", "č", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "ĠDean", "ĠHarris", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "list", ">", "č", "Ċ", "#", "include", "Ġ<", "string", ">", "č", "Ċ", "#", "include", "Ġ\"", "IN", "ote", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Sc", "ratch", "Pad", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "Sc", "ratch", "Pad", "::", "Sc", "ratch", "Pad", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Sc", "ratch", "Pad", "::", "~", "Sc", "ratch", "Pad", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠSc", "ratch", "Pad", "::", "set", "Note", "(", "const", "Ġstd", "::", "string", "&", "Ġnote", "Id", ",", "ĠIN", "ote", "*", "Ġp", "Note", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġif", "Ġ(", "this", "->", "note", "Map", "_.", "find", "(", "note", "Id", ")", "Ġ!=", "Ġthis", "->", "note", "Map", "_.", "end", "())", "č", "Ċ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠIN", "ote", "*", "Ġp", "Previous", "Note", "Ġ=", "Ġthis", "->", "note", "Map", "_", "[", "note", "Id", "];", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "p", "Previous", "Note", "Ġ!=", "Ġnull", "ptr", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġp", "Previous", "Note", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "Ġ", "Ġthis", "->", "note", "Map", "_", "[", "note", "Id", "]", "Ġ=", "Ġp", "Note", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "IN", "ote", "*", "ĠSc", "ratch", "Pad", "::", "get", "Note", "(", "const", "Ġstd", "::", "string", "&", "Ġnote", "Id", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "ĠIN", "ote", "*", "Ġp", "Note", "Ġ=", "Ġnull", "ptr", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠIN", "ote", "*", ">", "::", "iterator", "Ġit", "Ġ=", "Ġthis", "->", "note", "Map", "_.", "find", "(", "note", "Id", ");", "č", "Ċ", "Ġ", "Ġif", "Ġ(", "it", "Ġ!=", "Ġthis", "->", "note", "Map", "_.", "end", "())", "č", "Ċ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "Note", "Ġ=", "Ġ(*", "it", ").", "second", ";", "č", "Ċ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "Ġ", "Ġreturn", "Ġp", "Note", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["pNote", 31, "comesFrom", ["pNote"], [28]], ["it", 25, "comesFrom", ["it"], [21]], ["it", 29, "comesFrom", ["it"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::277", "code": "/**\n * Copyright (c) 2015 - Andrew C. Pacifico - All Rights Reserved.\n * @author Andrew C. Pacifico <andrewcpacifico@gmail.com>\n */\n#include <iostream>\n#include <stdlib.h>\n\nusing namespace std;\n\nint main(int argc, char *argv[])\n{\n    int a, b, c;\n\n    cin >> a >> b >> c;\n\n    a = (a + b + abs(a-b))/2;\n\n    cout << (a + c + abs(a-c))/2 << \" eh o maior\" << endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "Ġ-", "ĠAndrew", "ĠC", ".", "ĠPacific", "o", "Ġ-", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "Ġ@", "author", "ĠAndrew", "ĠC", ".", "ĠPacific", "o", "Ġ<", "and", "rew", "cp", "ac", "ific", "o", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ",", "Ġc", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġa", "Ġ>>", "Ġb", "Ġ>>", "Ġc", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġa", "Ġ=", "Ġ(", "a", "Ġ+", "Ġb", "Ġ+", "Ġabs", "(", "a", "-", "b", "))", "/", "2", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ(", "a", "Ġ+", "Ġc", "Ġ+", "Ġabs", "(", "a", "-", "c", "))", "/", "2", "Ġ<<", "Ġ\"", "Ġeh", "Ġo", "Ġma", "ior", "\"", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 8, "comesFrom", ["a"], [4]], ["a", 12, "comesFrom", ["a"], [11]], ["a", 15, "comesFrom", ["a"], [11]], ["a", 18, "comesFrom", ["a"], [11]], ["a", 21, "comesFrom", ["a"], [11]], ["b", 9, "comesFrom", ["b"], [5]], ["b", 13, "comesFrom", ["b"], [5]], ["b", 16, "comesFrom", ["b"], [5]], ["c", 10, "comesFrom", ["c"], [6]], ["c", 19, "comesFrom", ["c"], [6]], ["c", 22, "comesFrom", ["c"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::278", "code": "#pragma once\n\n#include <stdexcept>\n#include <string>\n#include <SDL2/SDL_error.h>\n\n\nclass SDL2_exception : public std::exception {\npublic:\n    explicit SDL2_exception(const char *context = nullptr) : msg(SDL_GetError())\n    {\n        using namespace std::string_literals;\n        if (context) msg += \" \"s + context;\n    }\n    const char *what() const override { return msg.c_str(); }\nprivate:\n    std::string msg;\n};\n", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "SD", "L", "2", "/", "SD", "L", "_", "error", ".", "h", ">", "ĊĊ", "Ċ", "class", "ĠSDL", "2", "_", "ex", "ception", "Ġ:", "Ġpublic", "Ġstd", "::", "ex", "ception", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġexplicit", "ĠSDL", "2", "_", "ex", "ception", "(", "const", "Ġchar", "Ġ*", "context", "Ġ=", "Ġnull", "ptr", ")", "Ġ:", "Ġmsg", "(", "SD", "L", "_", "Get", "Error", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġusing", "Ġnamespace", "Ġstd", "::", "string", "_", "liter", "als", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "context", ")", "Ġmsg", "Ġ+=", "Ġ\"", "Ġ\"", "s", "Ġ+", "Ġcontext", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġchar", "Ġ*", "what", "()", "Ġconst", "Ġoverride", "Ġ{", "Ġreturn", "Ġmsg", ".", "c", "_", "str", "();", "Ġ}", "Ċ", "private", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġmsg", ";", "Ċ", "};", "Ċ"], "dataflow_graph": [["msg", 9, "comesFrom", ["msg"], [6]], ["msg", 11, "comesFrom", ["msg"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::279", "code": "//\n// ICounter.cpp\n//\n// Library: IoT/Devices\n// Package: Generated\n// Module:  ICounter\n//\n// This file has been generated.\n// Warning: All changes to this will be lost when the file is re-generated.\n//\n// Copyright (c) 2014-2020, Applied Informatics Software Engineering GmbH.\n// All rights reserved.\n// \n// SPDX-License-Identifier: GPL-3.0-only\n//\n\n\n#include \"IoT/Devices/ICounter.h\"\n\n\nnamespace IoT {\nnamespace Devices {\n\n\nICounter::ICounter():\n\tIoT::Devices::IDevice(),\n\tcountChanged()\n{\n}\n\n\nICounter::~ICounter()\n{\n}\n\n\nbool ICounter::isA(const std::type_info& otherType) const\n{\n\tstd::string name(type().name());\n\treturn name == otherType.name();\n}\n\n\nconst Poco::RemotingNG::Identifiable::TypeId& ICounter::remoting__typeId()\n{\n\tstatic const std::string REMOTING__TYPE_ID(\"IoT.Devices.Counter\");\n\treturn REMOTING__TYPE_ID;\n}\n\n\nconst std::type_info& ICounter::type() const\n{\n\treturn typeid(ICounter);\n}\n\n\n} // namespace Devices\n} // namespace IoT\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠIC", "ounter", ".", "cpp", "Ċ", "//", "Ċ", "//", "ĠLibrary", ":", "ĠIoT", "/", "Dev", "ices", "Ċ", "//", "ĠPackage", ":", "ĠGener", "ated", "Ċ", "//", "ĠModule", ":", "Ġ", "ĠIC", "ounter", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġhas", "Ġbeen", "Ġgenerated", ".", "Ċ", "//", "ĠWarning", ":", "ĠAll", "Ġchanges", "Ġto", "Ġthis", "Ġwill", "Ġbe", "Ġlost", "Ġwhen", "Ġthe", "Ġfile", "Ġis", "Ġre", "-", "generated", ".", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", "-", "2020", ",", "ĠApplied", "ĠIn", "format", "ics", "ĠSoftware", "ĠEngineering", "ĠG", "mb", "H", ".", "Ċ", "//", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠGPL", "-", "3", ".", "0", "-", "only", "Ċ", "//", "ĊĊ", "Ċ", "#", "include", "Ġ\"", "I", "o", "T", "/", "Dev", "ices", "/", "IC", "ounter", ".", "h", "\"", "ĊĊ", "Ċ", "names", "pace", "ĠIoT", "Ġ{", "Ċ", "names", "pace", "ĠDevices", "Ġ{", "ĊĊ", "Ċ", "IC", "ounter", "::", "IC", "ounter", "():", "Ċ", "ĉ", "I", "o", "T", "::", "Dev", "ices", "::", "ID", "ev", "ice", "(),", "Ċ", "ĉ", "count", "Changed", "()", "Ċ", "{", "Ċ", "}", "ĊĊ", "Ċ", "IC", "ounter", "::", "~", "IC", "ounter", "()", "Ċ", "{", "Ċ", "}", "ĊĊ", "Ċ", "bool", "ĠIC", "ounter", "::", "is", "A", "(", "const", "Ġstd", "::", "type", "_", "info", "&", "Ġother", "Type", ")", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "std", "::", "string", "Ġname", "(", "type", "().", "name", "());", "Ċ", "ĉ", "return", "Ġname", "Ġ==", "Ġother", "Type", ".", "name", "();", "Ċ", "}", "ĊĊ", "Ċ", "const", "ĠP", "oco", "::", "Rem", "oting", "NG", "::", "Ident", "ifiable", "::", "Type", "Id", "&", "ĠIC", "ounter", "::", "rem", "oting", "__", "type", "Id", "()", "Ċ", "{", "Ċ", "ĉ", "static", "Ġconst", "Ġstd", "::", "string", "ĠREM", "OT", "ING", "__", "TYPE", "_", "ID", "(\"", "I", "o", "T", ".", "Dev", "ices", ".", "Counter", "\");", "Ċ", "ĉ", "return", "ĠREM", "OT", "ING", "__", "TYPE", "_", "ID", ";", "Ċ", "}", "ĊĊ", "Ċ", "const", "Ġstd", "::", "type", "_", "info", "&", "ĠIC", "ounter", "::", "type", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġtype", "id", "(", "IC", "ounter", ");", "Ċ", "}", "ĊĊ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠDevices", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠIoT", "ĊĊ"], "dataflow_graph": [["name", 8, "comesFrom", ["name"], [6]], ["name", 9, "comesFrom", ["name"], [6]], ["name", 11, "comesFrom", ["name"], [6]], ["REMOTING__TYPE_ID", 14, "comesFrom", ["REMOTING__TYPE_ID"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::280", "code": "// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// cpl_port.h must be first.\n#include \"port/cpl_port.h\"\n\n#include <stddef.h>\n#include <stdint.h>\n#include <memory>\n#include <string>\n\n#include \"logging.h\"\n#include \"autotest2/cpp/util/vsimem.h\"\n#include \"gcore/gdal.h\"\n#include \"gcore/gdal_priv.h\"\n#include \"ogr/ogrsf_frmts/csv/ogr_csv.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n  const char kFilename[] = \"/vsimem/a\";\n  const string data2(reinterpret_cast<const char *>(data), size);\n  autotest2::VsiMemTempWrapper wrapper(kFilename, data2);\n  std::unique_ptr<OGRCSVDataSource> dataset(new OGRCSVDataSource);\n  const int result = dataset->Open(kFilename, FALSE, FALSE, nullptr);\n  CHECK(result == FALSE || result == TRUE);\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2017", "ĠGoogle", "ĠInc", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "//", "Ċ", "//", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "//", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "//", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "//", "Ċ", "//", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "//", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "//", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "//", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "//", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ċ", "//", "Ġc", "pl", "_", "port", ".", "h", "Ġmust", "Ġbe", "Ġfirst", ".", "Ċ", "#", "include", "Ġ\"", "port", "/", "c", "pl", "_", "port", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "st", "dd", "ef", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "log", "ging", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "aut", "ot", "est", "2", "/", "cpp", "/", "util", "/", "vs", "im", "em", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "g", "core", "/", "gd", "al", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "g", "core", "/", "gd", "al", "_", "priv", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "og", "r", "/", "og", "rs", "f", "_", "fr", "m", "ts", "/", "csv", "/", "og", "r", "_", "csv", ".", "h", "\"", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġint", "ĠLL", "VM", "F", "uzz", "er", "Test", "One", "Input", "(", "const", "Ġuint", "8", "_", "t", "Ġ*", "data", ",", "Ġsize", "_", "t", "Ġsize", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġchar", "Ġk", "Filename", "[]", "Ġ=", "Ġ\"/", "vs", "im", "em", "/", "a", "\";", "Ċ", "Ġ", "Ġconst", "Ġstring", "Ġdata", "2", "(", "re", "interpret", "_", "cast", "<", "const", "Ġchar", "Ġ*", ">(", "data", "),", "Ġsize", ");", "Ċ", "Ġ", "Ġaut", "ot", "est", "2", "::", "V", "si", "Mem", "Temp", "Wra", "pper", "Ġwrapper", "(", "k", "Filename", ",", "Ġdata", "2", ");", "Ċ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "OG", "RC", "S", "V", "Data", "Source", ">", "Ġdataset", "(", "new", "ĠOG", "RC", "S", "V", "Data", "Source", ");", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġresult", "Ġ=", "Ġdataset", "->", "Open", "(", "k", "Filename", ",", "ĠFALSE", ",", "ĠFALSE", ",", "Ġnull", "ptr", ");", "Ċ", "Ġ", "ĠCH", "ECK", "(", "result", "Ġ==", "ĠFALSE", "Ġ||", "Ġresult", "Ġ==", "ĠTRUE", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["dataset", 8, "comesFrom", ["dataset"], [6]], ["result", 12, "comesFrom", ["result"], [7]], ["result", 13, "comesFrom", ["result"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::281", "code": "public int[] twoSum(int[] nums, int target) {\n     HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n        int[] defaultResult = {0, 0};\n        for (int i = 0; i < nums.length; i++) {\n            if (map.get(target-nums[i]) != null ) {\n                int[] result = {map.get(target-nums[i]) + 1, i + 1 };\n                return result;\n            }\n            map.put(nums[i], i);\n        }\n        return defaultResult;\n    }\n", "code_tokens": ["Ġpublic", "Ġint", "[]", "Ġtwo", "Sum", "(", "int", "[]", "Ġnum", "s", ",", "Ġint", "Ġtarget", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠHash", "Map", "<", "Integer", ",", "ĠInteger", ">", "Ġmap", "Ġ=", "Ġnew", "ĠHash", "Map", "<", "Integer", ",", "ĠInteger", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "[]", "Ġdefault", "Result", "Ġ=", "Ġ{", "0", ",", "Ġ0", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnum", "s", ".", "length", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "map", ".", "get", "(", "target", "-", "n", "ums", "[", "i", "])", "Ġ!=", "Ġnull", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "[]", "Ġresult", "Ġ=", "Ġ{", "map", ".", "get", "(", "target", "-", "n", "ums", "[", "i", "])", "Ġ+", "Ġ1", ",", "Ġi", "Ġ+", "Ġ1", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmap", ".", "put", "(", "n", "ums", "[", "i", "],", "Ġi", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġdefault", "Result", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 10, "comesFrom", ["i"], [6]], ["i", 15, "comesFrom", ["i"], [6]], ["i", 22, "comesFrom", ["i"], [6]], ["i", 23, "comesFrom", ["i"], [6]], ["i", 28, "comesFrom", ["i"], [6]], ["i", 29, "comesFrom", ["i"], [6]], ["nums", 8, "comesFrom", ["nums"], [2]], ["nums", 14, "comesFrom", ["nums"], [2]], ["nums", 21, "comesFrom", ["nums"], [2]], ["nums", 27, "comesFrom", ["nums"], [2]], ["map", 11, "comesFrom", ["map"], [4]], ["map", 18, "comesFrom", ["map"], [4]], ["map", 25, "comesFrom", ["map"], [4]], ["target", 13, "comesFrom", ["target"], [3]], ["target", 20, "comesFrom", ["target"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::282", "code": "\n#include <cstdio>\n#include <cstdlib>\n\n#ifdef HAVE_CONFIG_H\n#include <config.h>\n#endif\n\n#ifdef USE_PREFIX_TRIE\n#include <cedarpp.h>\n#else\n#include <cedar.h>\n#endif\n\n//typedef cedar::da<int> cedar_t;\n\ntemplate<typename T>\ninline void insert_key(cedar::da<T> &t, const char* key, T new_value)\n{\n  t.update(key) = new_value;\n}\ntemplate<typename T>\ninline bool lookup_key(cedar::da<T> &t, const char* key)\n{\n  return t.exactMatchSearch<int>(key) >= 0;\n}\n\n// --------------------------------------------------------------------------------------------------------------------\nint main (int argc, char **argv)\n{\n  cedar::da<int> trie;\n\n  insert_key(trie,\"test\",-1);\n\n  if(lookup_key(trie,\"test\")) {\n    printf(\"lookup_key %i \\n\",trie.exactMatchSearch<int>(\"test\"));\n  }\n  if (lookup_key(trie, \"none\")) {\n    printf(\"lookup_key none %i \\n\", trie.exactMatchSearch<int>(\"none\"));\n  } else {\n    printf(\"lookup_key none %i \\n\", trie.exactMatchSearch<int>(\"none\"));\n  }\n  getchar();\n  return 0;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "Ċ", "#", "if", "def", "ĠHAVE", "_", "CON", "FIG", "_", "H", "Ċ", "#", "include", "Ġ<", "config", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "if", "def", "ĠUSE", "_", "P", "REF", "IX", "_", "TR", "IE", "Ċ", "#", "include", "Ġ<", "ced", "ar", "pp", ".", "h", ">", "Ċ", "#", "else", "Ċ", "#", "include", "Ġ<", "ced", "ar", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "//", "ty", "ped", "ef", "Ġc", "edar", "::", "da", "<", "int", ">", "Ġc", "edar", "_", "t", ";", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "inline", "Ġvoid", "Ġinsert", "_", "key", "(", "ced", "ar", "::", "da", "<", "T", ">", "Ġ&", "t", ",", "Ġconst", "Ġchar", "*", "Ġkey", ",", "ĠT", "Ġnew", "_", "value", ")", "Ċ", "{", "Ċ", "Ġ", "Ġt", ".", "update", "(", "key", ")", "Ġ=", "Ġnew", "_", "value", ";", "Ċ", "}", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "inline", "Ġbool", "Ġlookup", "_", "key", "(", "ced", "ar", "::", "da", "<", "T", ">", "Ġ&", "t", ",", "Ġconst", "Ġchar", "*", "Ġkey", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġt", ".", "ex", "act", "Match", "Search", "<", "int", ">(", "key", ")", "Ġ>=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "//", "Ġ----------------------------------------------------------------", "--------------------------------", "--------------------", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġc", "edar", "::", "da", "<", "int", ">", "Ġtri", "e", ";", "ĊĊ", "Ġ", "Ġinsert", "_", "key", "(", "t", "rie", ",\"", "test", "\",", "-", "1", ");", "ĊĊ", "Ġ", "Ġif", "(", "look", "up", "_", "key", "(", "t", "rie", ",\"", "test", "\"))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "look", "up", "_", "key", "Ġ%", "i", "Ġ\\", "n", "\",", "t", "rie", ".", "ex", "act", "Match", "Search", "<", "int", ">", "(\"", "test", "\")", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ(", "look", "up", "_", "key", "(", "t", "rie", ",", "Ġ\"", "none", "\"))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "look", "up", "_", "key", "Ġnone", "Ġ%", "i", "Ġ\\", "n", "\",", "Ġtri", "e", ".", "ex", "act", "Match", "Search", "<", "int", ">", "(\"", "none", "\")", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "look", "up", "_", "key", "Ġnone", "Ġ%", "i", "Ġ\\", "n", "\",", "Ġtri", "e", ".", "ex", "act", "Match", "Search", "<", "int", ">", "(\"", "none", "\")", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġget", "char", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["new_value", 9, "comesFrom", ["new_value"], [5]], ["trie", 21, "comesFrom", ["trie"], [19]], ["trie", 23, "comesFrom", ["trie"], [19]], ["trie", 25, "comesFrom", ["trie"], [19]], ["trie", 28, "comesFrom", ["trie"], [19]], ["trie", 30, "comesFrom", ["trie"], [19]], ["trie", 33, "comesFrom", ["trie"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::283", "code": "//===-- lib/Parser/debug-parser.cpp ---------------------------------------===//\n//\n// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n//\n//===----------------------------------------------------------------------===//\n\n#include \"debug-parser.h\"\n#include \"flang/Parser/user-state.h\"\n#include <string>\n\nnamespace Fortran::parser {\n\nstd::optional<Success> DebugParser::Parse(ParseState &state) const {\n  if (auto ustate{state.userState()}) {\n    if (auto out{ustate->debugOutput()}) {\n      std::string note{str_, length_};\n      Message message{state.GetLocation(), \"parser debug: %s\"_en_US, note};\n      message.SetContext(state.context().get());\n      message.Emit(*out, ustate->cooked(), true);\n    }\n  }\n  return {Success{}};\n}\n} // namespace Fortran::parser\n", "code_tokens": ["Ġ//", "===", "--", "Ġlib", "/", "Parser", "/", "debug", "-", "parser", ".", "cpp", "Ġ--------------------------------", "-------", "===", "//", "Ċ", "//", "Ċ", "//", "ĠPart", "Ġof", "Ġthe", "ĠLL", "VM", "ĠProject", ",", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", "Ġv", "2", ".", "0", "Ġwith", "ĠLL", "VM", "ĠEx", "ceptions", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "ll", "vm", ".", "org", "/", "L", "IC", "ENSE", ".", "txt", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "//", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", "ĠWITH", "ĠLL", "VM", "-", "ex", "ception", "Ċ", "//", "Ċ", "//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "debug", "-", "parser", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "fl", "ang", "/", "Parser", "/", "user", "-", "state", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "names", "pace", "ĠFort", "ran", "::", "parser", "Ġ{", "Ċ", "Ċ", "std", "::", "optional", "<", "Success", ">", "ĠDebug", "Parser", "::", "Par", "se", "(", "Par", "se", "State", "Ġ&", "state", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "auto", "Ġu", "state", "{", "state", ".", "user", "State", "()", "})", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "auto", "Ġout", "{", "ust", "ate", "->", "debug", "Output", "()", "})", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġnote", "{", "str", "_", ",", "Ġlength", "_", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠMessage", "Ġmessage", "{", "state", ".", "Get", "Location", "(),", "Ġ\"", "parser", "Ġdebug", ":", "Ġ%", "s", "\"", "_", "en", "_", "US", ",", "Ġnote", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmessage", ".", "Set", "Context", "(", "state", ".", "context", "().", "get", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmessage", ".", "E", "mit", "(*", "out", ",", "Ġu", "state", "->", "cooked", "(),", "Ġtrue", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ{", "Success", "{", "}}", ";", "Ċ", "}", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠFort", "ran", "::", "parser", "Ċ"], "dataflow_graph": [["ustate", 6, "comesFrom", ["ustate"], [2]], ["ustate", 23, "comesFrom", ["ustate"], [2]], ["note", 14, "comesFrom", ["note"], [8]], ["message", 15, "comesFrom", ["message"], [11]], ["message", 20, "comesFrom", ["message"], [11]], ["out", 22, "comesFrom", ["out"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::284", "code": "﻿/**\n* @file\t\t\thmi_button\n* @brief\t\t画面按钮事件响应通道，处理SDL发送的Buttons相关的RPC请求等\n* @author\t\tfanqiang\n* @date\t\t\t2017-6-21\n* @version\t\tA001\n* @copyright\tford\n*/\n\n#include \"hmi_button.h\"\n#include <iostream>\n#include <string>\n#include \"json/json.h\"\n#include \"global_first.h\"\n\nButtons::Buttons() : Channel(200, \"Buttons\") {\n\n}\n\nButtons::~Buttons() {\n\n}\n\nvoid Buttons::onRequest(Json::Value &request) {\n  std::string method = request[\"method\"].asString();\n  int  id = request[\"id\"].asInt();\n  if (method == \"Buttons.GetCapabilities\") {\n    sendResult(id, \"GetCapabilities\");\n  } else if (method == \"Buttons.IsReady\") {\n    sendResult(id, \"IsReady\");\n  } else {\n    Channel::onRequest(request);\n  }\n}\n\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "*", "Ġ@", "file", "ĉ", "ĉ", "ĉ", "h", "mi", "_", "button", "Ċ", "*", "Ġ@", "b", "rief", "ĉ", "ĉ", "çĶ", "»", "é", "Ŀ", "¢", "æ", "Į", "ī", "é", "Ĵ", "®", "äº", "ĭ", "ä»", "¶", "å", "ĵ", "į", "åº", "Ķ", "éĢ", "ļé", "ģ", "ĵ", "ï", "¼", "Į", "å¤", "Ħ", "çĲ", "Ĩ", "SD", "L", "åı", "ĳ", "éĢ", "ģ", "çļĦ", "But", "tons", "çĽ", "¸", "åħ", "³", "çļĦ", "R", "PC", "è¯", "·", "æ", "±", "Ĥ", "ç", "Ń", "ī", "Ċ", "*", "Ġ@", "author", "ĉ", "ĉ", "fan", "q", "iang", "Ċ", "*", "Ġ@", "date", "ĉ", "ĉ", "ĉ", "2017", "-", "6", "-", "21", "Ċ", "*", "Ġ@", "version", "ĉ", "ĉ", "A", "001", "Ċ", "*", "Ġ@", "cop", "yright", "ĉ", "ford", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "h", "mi", "_", "button", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "json", "/", "json", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "global", "_", "first", ".", "h", "\"", "Ċ", "Ċ", "But", "tons", "::", "But", "tons", "()", "Ġ:", "ĠChannel", "(", "200", ",", "Ġ\"", "But", "tons", "\")", "Ġ{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "But", "tons", "::", "~", "But", "tons", "()", "Ġ{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBut", "tons", "::", "on", "Request", "(", "J", "son", "::", "Value", "Ġ&", "request", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġmethod", "Ġ=", "Ġrequest", "[\"", "method", "\"", "].", "as", "String", "();", "Ċ", "Ġ", "Ġint", "Ġ", "Ġid", "Ġ=", "Ġrequest", "[\"", "id", "\"", "].", "as", "Int", "();", "Ċ", "Ġ", "Ġif", "Ġ(", "method", "Ġ==", "Ġ\"", "But", "tons", ".", "Get", "Cap", "abilities", "\")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsend", "Result", "(", "id", ",", "Ġ\"", "Get", "Cap", "abilities", "\");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "method", "Ġ==", "Ġ\"", "But", "tons", ".", "Is", "Ready", "\")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsend", "Result", "(", "id", ",", "Ġ\"", "Is", "Ready", "\");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠChannel", "::", "on", "Request", "(", "request", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["method", 11, "comesFrom", ["method"], [5]], ["method", 14, "comesFrom", ["method"], [5]], ["id", 13, "comesFrom", ["id"], [8]], ["id", 16, "comesFrom", ["id"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::285", "code": "#include \"actor-zeta/standard_handlers/add_channel.hpp\"\n\n#include <iostream>\n\n#include \"actor-zeta/behavior/request.hpp\"\n#include \"actor-zeta/behavior/response.hpp\"\n#include \"actor-zeta/channel/channel.hpp\"\n\nnamespace actor_zeta {\n\n    void error(const std::string &name) {\n        std::cerr << \"WARNING\" << std::endl;\n        std::cerr << \"Not initialization channel type:\" << name << std::endl;\n        std::cerr << \"WARNING\" << std::endl;\n    }\n\n    add_channel::add_channel() : abstract_action(\"add_channel\") {}\n\n    behavior::response add_channel::operator()(behavior::request &&request) {\n        auto channel_ = request.message().get<channel::channel>();\n        if (channel_) {\n            request.contacts().channel(channel_);\n        } else {\n            error(channel_->type());\n        }\n\n        return behavior::response();\n\n    }\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "actor", "-", "z", "eta", "/", "standard", "_", "hand", "lers", "/", "add", "_", "channel", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "actor", "-", "z", "eta", "/", "behavior", "/", "request", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "actor", "-", "z", "eta", "/", "behavior", "/", "response", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "actor", "-", "z", "eta", "/", "channel", "/", "channel", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġactor", "_", "z", "eta", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġerror", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "WARNING", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Not", "Ġinitialization", "Ġchannel", "Ġtype", ":\"", "Ġ<<", "Ġname", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "WARNING", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġadd", "_", "channel", "::", "add", "_", "channel", "()", "Ġ:", "Ġabstract", "_", "action", "(\"", "add", "_", "channel", "\")", "Ġ{}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbehavior", "::", "response", "Ġadd", "_", "channel", "::", "operator", "()", "(", "behavior", "::", "request", "Ġ&&", "request", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġchannel", "_", "Ġ=", "Ġrequest", ".", "message", "().", "get", "<", "channel", "::", "channel", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "channel", "_", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrequest", ".", "cont", "acts", "().", "channel", "(", "channel", "_", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġerror", "(", "channel", "_", "->", "type", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġbehavior", "::", "response", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}"], "dataflow_graph": [["channel_", 16, "comesFrom", ["channel_"], [12]], ["channel_", 20, "comesFrom", ["channel_"], [12]], ["channel_", 22, "comesFrom", ["channel_"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::286", "code": "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"cc/paint/skottie_wrapper.h\"\n\nnamespace cc {\n\nvoid SkottieWrapper::Seek(float t) {\n  Seek(t, FrameDataCallback());\n}\n\nvoid SkottieWrapper::Draw(SkCanvas* canvas, float t, const SkRect& rect) {\n  Draw(canvas, t, rect, FrameDataCallback());\n}\n\n}  // namespace cc\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2021", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "cc", "/", "p", "aint", "/", "sk", "ott", "ie", "_", "wrapper", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġcc", "Ġ{", "Ċ", "Ċ", "void", "ĠSk", "ott", "ie", "Wra", "pper", "::", "Se", "ek", "(", "float", "Ġt", ")", "Ġ{", "Ċ", "Ġ", "ĠSeek", "(", "t", ",", "ĠFrame", "Data", "Callback", "());", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSk", "ott", "ie", "Wra", "pper", "::", "Draw", "(", "Sk", "Can", "vas", "*", "Ġcanvas", ",", "Ġfloat", "Ġt", ",", "Ġconst", "ĠSk", "Rect", "&", "Ġrect", ")", "Ġ{", "Ċ", "Ġ", "ĠDraw", "(", "can", "vas", ",", "Ġt", ",", "Ġrect", ",", "ĠFrame", "Data", "Callback", "());", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġcc", "Ċ"], "dataflow_graph": [["t", 3, "comesFrom", ["t"], [1]], ["t", 11, "comesFrom", ["t"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::287", "code": "class Solution {\n public:\n  bool transformArrayInternal(vector<int>& arr) {\n    bool changed(false);\n    int lastDigit(arr[0]);\n    for (int i = 1; i < arr.size() - 1; i++) {\n      int lastDigitNew = arr[i];\n      if (arr[i] < lastDigit && arr[i] < arr[i + 1]) {\n        changed = true;\n        arr[i]++;\n      } else if (arr[i] > lastDigit && arr[i] > arr[i + 1]) {\n        changed = true;\n        arr[i]--;\n      }\n      lastDigit = lastDigitNew;\n    }\n    //cout<<changed<<endl;\n    return changed;\n  }\n  vector<int> transformArray(vector<int>& arr) {\n    if (arr.size() <= 2) {\n      return arr;\n    }\n    while (transformArrayInternal(arr)) {\n    }\n    return arr;\n  }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "Ġpublic", ":", "Ċ", "Ġ", "Ġbool", "Ġtransform", "Array", "Internal", "(", "vector", "<", "int", ">", "&", "Ġarr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġchanged", "(", "false", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlast", "Dig", "it", "(", "arr", "[", "0", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġarr", ".", "size", "()", "Ġ-", "Ġ1", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlast", "Dig", "it", "New", "Ġ=", "Ġarr", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arr", "[", "i", "]", "Ġ<", "Ġlast", "Dig", "it", "Ġ&&", "Ġarr", "[", "i", "]", "Ġ<", "Ġarr", "[", "i", "Ġ+", "Ġ1", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchanged", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġarr", "[", "i", "]", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "arr", "[", "i", "]", "Ġ>", "Ġlast", "Dig", "it", "Ġ&&", "Ġarr", "[", "i", "]", "Ġ>", "Ġarr", "[", "i", "Ġ+", "Ġ1", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchanged", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġarr", "[", "i", "]", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlast", "Dig", "it", "Ġ=", "Ġlast", "Dig", "it", "New", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "c", "out", "<<", "changed", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġchanged", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġvector", "<", "int", ">", "Ġtransform", "Array", "(", "vector", "<", "int", ">", "&", "Ġarr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arr", ".", "size", "()", "Ġ<=", "Ġ2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġarr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "transform", "Array", "Internal", "(", "arr", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġarr", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 8, "comesFrom", ["i"], [4]], ["i", 11, "comesFrom", ["i"], [4]], ["i", 13, "comesFrom", ["i"], [4]], ["i", 16, "comesFrom", ["i"], [4]], ["i", 18, "comesFrom", ["i"], [4]], ["i", 21, "comesFrom", ["i"], [4]], ["i", 23, "comesFrom", ["i"], [4]], ["i", 26, "comesFrom", ["i"], [4]], ["i", 28, "comesFrom", ["i"], [4]], ["i", 31, "comesFrom", ["i"], [4]], ["lastDigitNew", 33, "comesFrom", ["lastDigitNew"], [9]], ["changed", 34, "comesFrom", ["changed"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::288", "code": "#include <iostream>\nusing namespace std;\nbool touched[103];\nint printSearch(int *arr,int j,int n,int ele){\n    int i;\n    for(i=j+1;(i<=n && arr[i]!=ele);i++);\n    touched[i]=1;\n    return i;\n}\nint main(int argc, char const *argv[]) {\n    int n,arr[103],sum=0;\n    cin>>n;\n    for(int i=1;i<=n;i++) {cin>>arr[i];sum+=arr[i];}\n    sum/=(n>>1);\n    for(int i=1;i<=(n);i++){\n        if(touched[i]) continue;\n        cout<<i<<\" \"<<printSearch(arr,i,n,sum-arr[i])<<endl;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "bool", "Ġtouched", "[", "103", "];", "Ċ", "int", "Ġprint", "Search", "(", "int", "Ġ*", "arr", ",", "int", "Ġj", ",", "int", "Ġn", ",", "int", "Ġele", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "i", "=", "j", "+", "1", ";", "(", "i", "<", "=", "n", "Ġ&&", "Ġarr", "[", "i", "]", "!", "=", "ele", ");", "i", "++", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtouched", "[", "i", "]=", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġi", ";", "Ċ", "}", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġconst", "Ġ*", "arg", "v", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ",", "arr", "[", "103", "],", "sum", "=", "0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ">>", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "1", ";", "i", "<", "=", "n", ";", "i", "++)", "Ġ{", "cin", ">>", "arr", "[", "i", "];", "sum", "+=", "arr", "[", "i", "];", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsum", "/", "=(", "n", ">>", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "1", ";", "i", "<", "=(", "n", ");", "i", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "t", "ouched", "[", "i", "])", "Ġcontinue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "i", "<<", "\"", "Ġ\"", "<<", "print", "Search", "(", "arr", ",", "i", ",", "n", ",", "sum", "-", "arr", "[", "i", "])", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["j", 9, "comesFrom", ["j"], [4]], ["i", 10, "comesFrom", ["i"], [8]], ["i", 13, "comesFrom", ["i"], [8]], ["i", 15, "comesFrom", ["i"], [8]], ["i", 17, "comesFrom", ["i"], [8]], ["i", 18, "comesFrom", ["i"], [8]], ["i", 28, "comesFrom", ["i"], [27]], ["i", 30, "comesFrom", ["i"], [27]], ["i", 33, "comesFrom", ["i"], [27]], ["i", 36, "comesFrom", ["i"], [27]], ["i", 40, "comesFrom", ["i"], [39]], ["i", 42, "comesFrom", ["i"], [39]], ["i", 44, "comesFrom", ["i"], [39]], ["i", 46, "comesFrom", ["i"], [39]], ["i", 49, "comesFrom", ["i"], [39]], ["i", 53, "comesFrom", ["i"], [39]], ["n", 11, "comesFrom", ["n"], [5]], ["n", 26, "comesFrom", ["n"], [22]], ["n", 29, "comesFrom", ["n"], [22]], ["n", 38, "comesFrom", ["n"], [22]], ["n", 41, "comesFrom", ["n"], [22]], ["n", 50, "comesFrom", ["n"], [22]], ["ele", 14, "comesFrom", ["ele"], [6]], ["sum", 51, "comesFrom", ["sum"], [37]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::289", "code": "#include <Eigen/Dense>\n#include <iostream>\n\nusing namespace Eigen;\nusing namespace std;\n\nint main(int, char**)\n{\n  cout.precision(3);\n  MatrixXd m(2,3);\nm << 1,2,3,4,5,6;\ncout << \"here's the 2x3 matrix m:\" << endl << m << endl;\ncout << \"let's resize m to 3x2. This is a conservative resizing because 2*3==3*2.\" << endl;\nm.resize(3,2);\ncout << \"here's the 3x2 matrix m:\" << endl << m << endl;\ncout << \"now let's resize m to size 2x2. This is NOT a conservative resizing, so it becomes uninitialized:\" << endl;\nm.resize(2,2);\ncout << m << endl;\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "E", "igen", "/", "D", "ense", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠE", "igen", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**", ")", "Ċ", "{", "Ċ", "Ġ", "Ġcout", ".", "pre", "cision", "(", "3", ");", "Ċ", "Ġ", "ĠMatrix", "X", "d", "Ġm", "(", "2", ",", "3", ");", "Ċ", "m", "Ġ<<", "Ġ1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ";", "Ċ", "c", "out", "Ġ<<", "Ġ\"", "here", "'s", "Ġthe", "Ġ2", "x", "3", "Ġmatrix", "Ġm", ":\"", "Ġ<<", "Ġend", "l", "Ġ<<", "Ġm", "Ġ<<", "Ġend", "l", ";", "Ċ", "c", "out", "Ġ<<", "Ġ\"", "let", "'s", "Ġresize", "Ġm", "Ġto", "Ġ3", "x", "2", ".", "ĠThis", "Ġis", "Ġa", "Ġconservative", "Ġres", "izing", "Ġbecause", "Ġ2", "*", "3", "==", "3", "*", "2", ".\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "m", ".", "res", "ize", "(", "3", ",", "2", ");", "Ċ", "c", "out", "Ġ<<", "Ġ\"", "here", "'s", "Ġthe", "Ġ3", "x", "2", "Ġmatrix", "Ġm", ":\"", "Ġ<<", "Ġend", "l", "Ġ<<", "Ġm", "Ġ<<", "Ġend", "l", ";", "Ċ", "c", "out", "Ġ<<", "Ġ\"", "now", "Ġlet", "'s", "Ġresize", "Ġm", "Ġto", "Ġsize", "Ġ2", "x", "2", ".", "ĠThis", "Ġis", "ĠNOT", "Ġa", "Ġconservative", "Ġres", "izing", ",", "Ġso", "Ġit", "Ġbecomes", "Ġun", "initialized", ":\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "m", ".", "res", "ize", "(", "2", ",", "2", ");", "Ċ", "c", "out", "Ġ<<", "Ġm", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["m", 6, "comesFrom", ["m"], [5]], ["m", 9, "comesFrom", ["m"], [5]], ["m", 13, "comesFrom", ["m"], [5]], ["m", 17, "comesFrom", ["m"], [5]], ["m", 21, "comesFrom", ["m"], [5]], ["m", 24, "comesFrom", ["m"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::290", "code": "#ifndef LEPP2_FILTER_SENSOR_TRUNCATE_FILTER_H__\n#define LEPP2_FILTER_SENSOR_TRUNCATE_FILTER_H__\n\n#include \"lepp2/filter/PointFilter.hpp\"\n\nnamespace {\n  int genFactor(int decimals) {\n    int factor = 1;\n    for (int i = 0; i < decimals; ++i) factor *= 10;\n\n    return factor;\n  }\n}\n\n/**\n * Truncates the x, y, z coordinates of the given point to the given number of\n * decimal points.\n */\ntemplate<class PointT>\nclass TruncateFilter : public PointFilter<PointT> {\npublic:\n  /**\n   * Creates a new `TruncateFilter` that will truncate all coordinates to the\n   * given number of decimal places.\n   */\n  TruncateFilter(int decimals) : factor_(genFactor(decimals)) {}\n  /**\n   * Implementation of the `PointFilter` interface.\n   */\n  bool apply(PointT& pt) {\n    pt.x = static_cast<int>(pt.x * factor_) / static_cast<double>(factor_);\n    pt.y = static_cast<int>(pt.y * factor_) / static_cast<double>(factor_);\n    pt.z = static_cast<int>(pt.z * factor_) / static_cast<double>(factor_);\n    return true;\n  }\n\n  void prepareNext() {}\nprivate:\n  int const factor_;\n};\n\n#endif\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠL", "EP", "P", "2", "_", "FIL", "TER", "_", "S", "ENS", "OR", "_", "TR", "UN", "C", "ATE", "_", "FIL", "TER", "_", "H", "__", "Ċ", "#", "define", "ĠL", "EP", "P", "2", "_", "FIL", "TER", "_", "S", "ENS", "OR", "_", "TR", "UN", "C", "ATE", "_", "FIL", "TER", "_", "H", "__", "Ċ", "Ċ", "#", "include", "Ġ\"", "le", "pp", "2", "/", "filter", "/", "Point", "Filter", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġgen", "Factor", "(", "int", "Ġdec", "im", "als", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġfactor", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġdec", "im", "als", ";", "Ġ++", "i", ")", "Ġfactor", "Ġ*", "=", "Ġ10", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfactor", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠTr", "unc", "ates", "Ġthe", "Ġx", ",", "Ġy", ",", "Ġz", "Ġcoordinates", "Ġof", "Ġthe", "Ġgiven", "Ġpoint", "Ġto", "Ġthe", "Ġgiven", "Ġnumber", "Ġof", "Ċ", "Ġ*", "Ġdecimal", "Ġpoints", ".", "Ċ", "Ġ*/", "Ċ", "template", "<", "class", "ĠPoint", "T", ">", "Ċ", "class", "ĠTr", "unc", "ate", "Filter", "Ġ:", "Ġpublic", "ĠPoint", "Filter", "<", "Point", "T", ">", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ/**", "Ċ", "Ġ", "Ġ", "Ġ*", "ĠCreat", "es", "Ġa", "Ġnew", "Ġ`", "Tr", "unc", "ate", "Filter", "`", "Ġthat", "Ġwill", "Ġtrunc", "ate", "Ġall", "Ġcoordinates", "Ġto", "Ġthe", "Ċ", "Ġ", "Ġ", "Ġ*", "Ġgiven", "Ġnumber", "Ġof", "Ġdecimal", "Ġplaces", ".", "Ċ", "Ġ", "Ġ", "Ġ*/", "Ċ", "Ġ", "ĠTr", "unc", "ate", "Filter", "(", "int", "Ġdec", "im", "als", ")", "Ġ:", "Ġfactor", "_(", "gen", "Factor", "(", "dec", "im", "als", "))", "Ġ{}", "Ċ", "Ġ", "Ġ/**", "Ċ", "Ġ", "Ġ", "Ġ*", "ĠImplementation", "Ġof", "Ġthe", "Ġ`", "Point", "Filter", "`", "Ġinterface", ".", "Ċ", "Ġ", "Ġ", "Ġ*/", "Ċ", "Ġ", "Ġbool", "Ġapply", "(", "Point", "T", "&", "Ġpt", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpt", ".", "x", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "pt", ".", "x", "Ġ*", "Ġfactor", "_", ")", "Ġ/", "Ġstatic", "_", "cast", "<", "double", ">(", "factor", "_", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpt", ".", "y", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "pt", ".", "y", "Ġ*", "Ġfactor", "_", ")", "Ġ/", "Ġstatic", "_", "cast", "<", "double", ">(", "factor", "_", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpt", ".", "z", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "pt", ".", "z", "Ġ*", "Ġfactor", "_", ")", "Ġ/", "Ġstatic", "_", "cast", "<", "double", ">(", "factor", "_", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġvoid", "Ġprepare", "Next", "()", "Ġ{}", "Ċ", "private", ":", "Ċ", "Ġ", "Ġint", "Ġconst", "Ġfactor", "_", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 8, "comesFrom", ["i"], [5]], ["decimals", 7, "comesFrom", ["decimals"], [3]], ["decimals", 15, "comesFrom", ["decimals"], [12]], ["factor", 10, "comesFrom", ["factor"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::291", "code": "// RUN: %clang_cc1 -fsyntax-only -verify -std=c++0x %s\nnamespace Constructor {\nstruct A {\n  A(int);\n};\n\nstruct B {\n  explicit B(int);\n};\n\nB::B(int) { }\n\nstruct C {\n  void f(const A&);\n  void f(const B&);\n};\n\nvoid f(C c) {\n  c.f(10);\n}\n}\n\nnamespace Conversion {\n  struct A {\n    operator int();\n    explicit operator bool();\n  };\n\n  A::operator bool() { return false; } \n\n  struct B {\n    void f(int);\n    void f(bool);\n  };\n\n  void f(A a, B b) {\n    b.f(a);\n  }\n}\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "cl", "ang", "_", "cc", "1", "Ġ-", "f", "sy", "ntax", "-", "only", "Ġ-", "ver", "ify", "Ġ-", "std", "=", "c", "++", "0", "x", "Ġ%", "s", "Ċ", "names", "pace", "ĠConstruct", "or", "Ġ{", "Ċ", "struct", "ĠA", "Ġ{", "Ċ", "Ġ", "ĠA", "(", "int", ");", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠB", "Ġ{", "Ċ", "Ġ", "Ġexplicit", "ĠB", "(", "int", ");", "Ċ", "};", "Ċ", "Ċ", "B", "::", "B", "(", "int", ")", "Ġ{", "Ġ}", "Ċ", "Ċ", "struct", "ĠC", "Ġ{", "Ċ", "Ġ", "Ġvoid", "Ġf", "(", "const", "ĠA", "&", ");", "Ċ", "Ġ", "Ġvoid", "Ġf", "(", "const", "ĠB", "&", ");", "Ċ", "};", "Ċ", "Ċ", "void", "Ġf", "(", "C", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġc", ".", "f", "(", "10", ");", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "ĠConversion", "Ġ{", "Ċ", "Ġ", "Ġstruct", "ĠA", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġoperator", "Ġint", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġexplicit", "Ġoperator", "Ġbool", "();", "Ċ", "Ġ", "Ġ};", "ĊĊ", "Ġ", "ĠA", "::", "operator", "Ġbool", "()", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "Ġ", "ĊĊ", "Ġ", "Ġstruct", "ĠB", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġf", "(", "int", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġf", "(", "bool", ");", "Ċ", "Ġ", "Ġ};", "ĊĊ", "Ġ", "Ġvoid", "Ġf", "(", "A", "Ġa", ",", "ĠB", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", ".", "f", "(", "a", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["c", 7, "comesFrom", ["c"], [6]], ["b", 14, "comesFrom", ["b"], [13]], ["a", 16, "comesFrom", ["a"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::292", "code": "#include \"dattod/flock.h\"\n\n#include <fstream>\n\n#include <sys/types.h>\n#include <unistd.h>\n\n#include <gtest/gtest.h>\n#include <glog/logging.h>\n\n#include <stdexcept>\n\nnamespace {\n\nusing ::datto_linux_client::Flock;\n\nTEST(FlockTest, Constructor) {\n  Flock lock(\"/tmp/test_lock\");\n}\n\nTEST(FlockTest, FailsOnBadPath) {\n  try {\n    Flock lock(\"/dir_doesnt_exist/test_lock\");\n    FAIL() << \"Locking on bad file didn't fail\";\n  } catch (const std::runtime_error &e) {\n    // good\n  }\n}\n\nTEST(FlockTest, FailsOnAlreadyLocked) {\n  Flock lock1(\"/tmp/test_lock\");\n  try {\n    Flock lock2(\"/tmp/test_lock\");\n    FAIL() << \"Locking on locked file didn't fail\";\n  } catch (const std::runtime_error &e) {\n    // good\n  }\n}\n\nTEST(FlockTest, ReleasesInDestructor) {\n  {\n    Flock lock1(\"/tmp/test_lock\");\n  }\n  Flock lock2(\"/tmp/test_lock\");\n}\n\nTEST(FlockTest, WritePID) {\n  Flock lock(\"/tmp/test_lock\");\n  lock.WritePid();\n  std::ifstream lock_ifs(\"/tmp/test_lock\");\n  pid_t file_pid;\n\n  lock_ifs >> file_pid;\n\n  EXPECT_EQ(file_pid, getpid());\n}\n\n} // namespace\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "d", "att", "od", "/", "fl", "ock", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "sys", "/", "types", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "gl", "og", "/", "log", "ging", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "using", "Ġ::", "d", "atto", "_", "linux", "_", "client", "::", "F", "lock", ";", "Ċ", "Ċ", "T", "EST", "(", "F", "lock", "Test", ",", "ĠConstruct", "or", ")", "Ġ{", "Ċ", "Ġ", "ĠFl", "ock", "Ġlock", "(\"", "/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "(", "F", "lock", "Test", ",", "ĠF", "ails", "On", "Bad", "Path", ")", "Ġ{", "Ċ", "Ġ", "Ġtry", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFl", "ock", "Ġlock", "(\"", "/", "dir", "_", "does", "nt", "_", "exist", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFA", "IL", "()", "Ġ<<", "Ġ\"", "L", "ocking", "Ġon", "Ġbad", "Ġfile", "Ġdidn", "'t", "Ġfail", "\";", "Ċ", "Ġ", "Ġ}", "Ġcatch", "Ġ(", "const", "Ġstd", "::", "runtime", "_", "error", "Ġ&", "e", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġgood", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "(", "F", "lock", "Test", ",", "ĠF", "ails", "On", "Already", "L", "ocked", ")", "Ġ{", "Ċ", "Ġ", "ĠFl", "ock", "Ġlock", "1", "(\"", "/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġtry", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFl", "ock", "Ġlock", "2", "(\"", "/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFA", "IL", "()", "Ġ<<", "Ġ\"", "L", "ocking", "Ġon", "Ġlocked", "Ġfile", "Ġdidn", "'t", "Ġfail", "\";", "Ċ", "Ġ", "Ġ}", "Ġcatch", "Ġ(", "const", "Ġstd", "::", "runtime", "_", "error", "Ġ&", "e", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġgood", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "(", "F", "lock", "Test", ",", "ĠReleases", "In", "Dest", "ruct", "or", ")", "Ġ{", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFl", "ock", "Ġlock", "1", "(\"", "/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "ĠFl", "ock", "Ġlock", "2", "(\"", "/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "(", "F", "lock", "Test", ",", "ĠWrite", "P", "ID", ")", "Ġ{", "Ċ", "Ġ", "ĠFl", "ock", "Ġlock", "(\"", "/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġlock", ".", "Write", "P", "id", "();", "Ċ", "Ġ", "Ġstd", "::", "if", "stream", "Ġlock", "_", "if", "s", "(\"", "/", "tmp", "/", "test", "_", "lock", "\");", "Ċ", "Ġ", "Ġpid", "_", "t", "Ġfile", "_", "pid", ";", "ĊĊ", "Ġ", "Ġlock", "_", "if", "s", "Ġ>>", "Ġfile", "_", "pid", ";", "ĊĊ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "file", "_", "pid", ",", "Ġget", "pid", "());", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ċ"], "dataflow_graph": [["lock", 17, "comesFrom", ["lock"], [16]], ["lock_ifs", 21, "comesFrom", ["lock_ifs"], [19]], ["file_pid", 22, "comesFrom", ["file_pid"], [20]], ["file_pid", 24, "comesFrom", ["file_pid"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::293", "code": "// out_packet.cpp\n#include \"network/out_packet.h\"\n\nnamespace nan2 {\n\n  int OutPacket::BROADCAST = 1;\n  int OutPacket::UNICAST = 2;\n\n  OutPacket::OutPacket(int seq, const std::vector<int8_t>& data, int type, uint64_t receiver) :\n    seq_(seq),\n    type_(type),\n    receiver_(receiver) {\n    data_.resize(data.size());\n    std::copy(data.begin(), data.end(), data_.begin());\n  }\n\n  int OutPacket::seq() const {\n    return seq_;\n  }\n\n  const std::vector<char>& OutPacket::data() const {\n    return data_;\n  }\n\n  int OutPacket::type() const {\n    return type_;\n  }\n\n  uint64_t OutPacket::receiver() const {\n    return receiver_;\n  }\n}", "code_tokens": ["Ġ//", "Ġout", "_", "pack", "et", ".", "cpp", "Ċ", "#", "include", "Ġ\"", "network", "/", "out", "_", "pack", "et", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġnan", "2", "Ġ{", "ĊĊ", "Ġ", "Ġint", "ĠOut", "P", "acket", "::", "BR", "OAD", "CAST", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġint", "ĠOut", "P", "acket", "::", "UN", "IC", "AST", "Ġ=", "Ġ2", ";", "ĊĊ", "Ġ", "ĠOut", "P", "acket", "::", "Out", "P", "acket", "(", "int", "Ġseq", ",", "Ġconst", "Ġstd", "::", "vector", "<", "int", "8", "_", "t", ">", "&", "Ġdata", ",", "Ġint", "Ġtype", ",", "Ġuint", "64", "_", "t", "Ġreceiver", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġseq", "_(", "seq", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtype", "_(", "type", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreceiver", "_(", "re", "ceiver", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdata", "_.", "res", "ize", "(", "data", ".", "size", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "copy", "(", "data", ".", "begin", "(),", "Ġdata", ".", "end", "(),", "Ġdata", "_.", "begin", "());", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġint", "ĠOut", "P", "acket", "::", "seq", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġseq", "_", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġconst", "Ġstd", "::", "vector", "<", "char", ">", "&", "ĠOut", "P", "acket", "::", "data", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġdata", "_", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġint", "ĠOut", "P", "acket", "::", "type", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtype", "_", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġuint", "64", "_", "t", "ĠOut", "P", "acket", "::", "re", "ceiver", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġreceiver", "_", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}"], "dataflow_graph": [["seq", 8, "comesFrom", ["seq"], [3]], ["seq", 24, "comesFrom", ["seq"], [3]], ["type", 10, "comesFrom", ["type"], [5]], ["type", 28, "comesFrom", ["type"], [5]], ["receiver", 12, "comesFrom", ["receiver"], [6]], ["receiver", 30, "comesFrom", ["receiver"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::294", "code": "/*==============================================================================\n * FILE:\t   testExp.cpp\n * OVERVIEW:   Command line test of the Exp class\n *============================================================================*/\n/*\n * $Revision$\n * 15 Jul 02 - Mike: Created from testDbase\n * 29 Jul 03 - Mike: Created from testAll\n*/\n\n\n#include \"cppunit/TextTestResult.h\"\n#include \"cppunit/TestSuite.h\"\n\n#include \"ExpTest.h\"\n\n#include <sstream>\n#include <iostream>\n\nint main(int argc, char** argv)\n{\n    CppUnit::TestSuite suite;\n\n    ExpTest\t expt(\"ExpTest\");\n\n    expt.registerTests(&suite);\n\n    CppUnit::TextTestResult res;\n\n    suite.run( &res );\n    std::cout << res << std::endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "================================================================", "============", "==", "Ċ", "Ġ*", "ĠFILE", ":", "ĉ", "Ġ", "Ġ", "Ġtest", "Exp", ".", "cpp", "Ċ", "Ġ*", "ĠOVER", "VIEW", ":", "Ġ", "Ġ", "ĠCommand", "Ġline", "Ġtest", "Ġof", "Ġthe", "ĠExp", "Ġclass", "Ċ", "Ġ*", "================================================================", "============", "*/", "Ċ", "/*", "Ċ", "Ġ*", "Ġ$", "Rev", "ision", "$", "Ċ", "Ġ*", "Ġ15", "ĠJul", "Ġ02", "Ġ-", "ĠMike", ":", "ĠCreated", "Ġfrom", "Ġtest", "D", "base", "Ċ", "Ġ*", "Ġ29", "ĠJul", "Ġ03", "Ġ-", "ĠMike", ":", "ĠCreated", "Ġfrom", "Ġtest", "All", "Ċ", "*/", "ĊĊ", "Ċ", "#", "include", "Ġ\"", "cpp", "unit", "/", "Text", "Test", "Result", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "cpp", "unit", "/", "Test", "Su", "ite", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Exp", "Test", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠC", "pp", "Unit", "::", "Test", "Su", "ite", "Ġsuite", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠExp", "Test", "ĉ", "Ġex", "pt", "(\"", "Exp", "Test", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġex", "pt", ".", "register", "T", "ests", "(&", "su", "ite", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠC", "pp", "Unit", "::", "Text", "Test", "Result", "Ġres", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġsuite", ".", "run", "(", "Ġ&", "res", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġres", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["expt", 5, "comesFrom", ["expt"], [4]], ["suite", 7, "comesFrom", ["suite"], [3]], ["suite", 9, "comesFrom", ["suite"], [3]], ["res", 11, "comesFrom", ["res"], [8]], ["res", 13, "comesFrom", ["res"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::295", "code": "// This file is part of CAF, the C++ Actor Framework. See the file LICENSE in\n// the main distribution directory for license terms and copyright or visit\n// https://github.com/actor-framework/actor-framework/blob/master/LICENSE.\n\n#include \"caf/config_option_adder.hpp\"\n\n#include \"caf/config.hpp\"\n#include \"caf/config_option_set.hpp\"\n\nCAF_PUSH_DEPRECATED_WARNING\n\nnamespace caf {\n\nconfig_option_adder::config_option_adder(config_option_set& target,\n                                         string_view category)\n    : xs_(target),\n      category_(category) {\n  // nop\n}\n\nconfig_option_adder& config_option_adder::add_neg(bool& ref, string_view name,\n                                                  string_view description) {\n  return add_impl(make_negated_config_option(ref, category_,\n                                             name, description));\n}\n\nconfig_option_adder& config_option_adder::add_impl(config_option&& opt) {\n  xs_.add(std::move(opt));\n  return *this;\n}\n\n} // namespace caf\n\nCAF_POP_WARNINGS\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠCA", "F", ",", "Ġthe", "ĠC", "++", "ĠActor", "ĠFramework", ".", "ĠSee", "Ġthe", "Ġfile", "ĠLIC", "ENSE", "Ġin", "Ċ", "//", "Ġthe", "Ġmain", "Ġdistribution", "Ġdirectory", "Ġfor", "Ġlicense", "Ġterms", "Ġand", "Ġcopyright", "Ġor", "Ġvisit", "Ċ", "//", "Ġhttps", "://", "github", ".", "com", "/", "actor", "-", "framework", "/", "actor", "-", "framework", "/", "bl", "ob", "/", "master", "/", "L", "IC", "ENSE", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "c", "af", "/", "config", "_", "option", "_", "adder", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "c", "af", "/", "config", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "c", "af", "/", "config", "_", "option", "_", "set", ".", "h", "pp", "\"", "Ċ", "Ċ", "CA", "F", "_", "P", "USH", "_", "DEP", "REC", "ATED", "_", "WARNING", "Ċ", "Ċ", "names", "pace", "Ġcaf", "Ġ{", "Ċ", "Ċ", "config", "_", "option", "_", "adder", "::", "config", "_", "option", "_", "adder", "(", "config", "_", "option", "_", "set", "&", "Ġtarget", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstring", "_", "view", "Ġcategory", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġx", "s", "_(", "target", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcategory", "_(", "category", ")", "Ġ{", "Ċ", "Ġ", "Ġ//", "Ġn", "op", "Ċ", "}", "Ċ", "Ċ", "config", "_", "option", "_", "adder", "&", "Ġconfig", "_", "option", "_", "adder", "::", "add", "_", "neg", "(", "bool", "&", "Ġref", ",", "Ġstring", "_", "view", "Ġname", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstring", "_", "view", "Ġdescription", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġadd", "_", "impl", "(", "make", "_", "neg", "ated", "_", "config", "_", "option", "(", "ref", ",", "Ġcategory", "_", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġname", ",", "Ġdescription", "));", "Ċ", "}", "Ċ", "Ċ", "config", "_", "option", "_", "adder", "&", "Ġconfig", "_", "option", "_", "adder", "::", "add", "_", "impl", "(", "config", "_", "option", "&&", "Ġopt", ")", "Ġ{", "Ċ", "Ġ", "Ġx", "s", "_.", "add", "(", "std", "::", "move", "(", "opt", "));", "Ċ", "Ġ", "Ġreturn", "Ġ*", "this", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġcaf", "Ċ", "Ċ", "CA", "F", "_", "P", "OP", "_", "WARNING", "S", "Ċ"], "dataflow_graph": [["category", 8, "comesFrom", ["category"], [4]], ["name", 17, "comesFrom", ["name"], [11]], ["description", 18, "comesFrom", ["description"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::296", "code": "#include \"StdAfx.h\"\r\n\r\n#include \"MultiSphereShape.h\"\r\n\r\n#define Native static_cast<btMultiSphereShape*>(_native)\r\n\r\nMultiSphereShape::MultiSphereShape(array<Vector3>^ positions, array<btScalar>^ radi)\r\n\t: ConvexInternalAabbCachingShape(0)\r\n{\r\n\tint numSpheres = (positions->Length < radi->Length) ? positions->Length : radi->Length;\r\n\r\n\tbtVector3* positionsTemp = Math::Vector3ArrayToUnmanaged(positions);\r\n\tbtScalar* radiTemp = Math::BtScalarArrayToUnmanaged(radi, numSpheres);\r\n\r\n\tUnmanagedPointer = new btMultiSphereShape(positionsTemp, radiTemp, numSpheres);\r\n\r\n\tdelete[] positionsTemp;\r\n\tdelete[] radiTemp;\r\n}\r\n\r\nVector3 MultiSphereShape::GetSpherePosition(int index)\r\n{\r\n\treturn Math::BtVector3ToVector3(&Native->getSpherePosition(index));\r\n}\r\n\r\nbtScalar MultiSphereShape::GetSphereRadius(int index)\r\n{\r\n\treturn Native->getSphereRadius(index);\r\n}\r\n\r\nint MultiSphereShape::SphereCount::get()\r\n{\r\n\treturn Native->getSphereCount();\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "St", "d", "Af", "x", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Multi", "Sphere", "Shape", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "define", "ĠNative", "Ġstatic", "_", "cast", "<", "bt", "Multi", "Sphere", "Shape", "*", ">", "(_", "native", ")", "č", "Ċ", "č", "Ċ", "Multi", "Sphere", "Shape", "::", "Multi", "Sphere", "Shape", "(", "array", "<", "Vector", "3", ">", "^", "Ġpositions", ",", "Ġarray", "<", "bt", "Sc", "al", "ar", ">", "^", "Ġradi", ")", "č", "Ċ", "ĉ", ":", "ĠCon", "ve", "x", "Internal", "A", "abb", "C", "aching", "Shape", "(", "0", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġnum", "Sp", "heres", "Ġ=", "Ġ(", "pos", "itions", "->", "Length", "Ġ<", "Ġradi", "->", "Length", ")", "Ġ?", "Ġpositions", "->", "Length", "Ġ:", "Ġradi", "->", "Length", ";", "č", "Ċ", "č", "Ċ", "ĉ", "bt", "Vector", "3", "*", "Ġpositions", "Temp", "Ġ=", "ĠMath", "::", "Vector", "3", "Array", "To", "Un", "managed", "(", "pos", "itions", ");", "č", "Ċ", "ĉ", "bt", "Sc", "al", "ar", "*", "Ġradi", "Temp", "Ġ=", "ĠMath", "::", "B", "t", "Sc", "al", "ar", "Array", "To", "Un", "managed", "(", "rad", "i", ",", "Ġnum", "Sp", "heres", ");", "č", "Ċ", "č", "Ċ", "ĉ", "Un", "managed", "Po", "inter", "Ġ=", "Ġnew", "Ġb", "t", "Multi", "Sphere", "Shape", "(", "pos", "itions", "Temp", ",", "Ġradi", "Temp", ",", "Ġnum", "Sp", "heres", ");", "č", "Ċ", "č", "Ċ", "ĉ", "delete", "[]", "Ġpositions", "Temp", ";", "č", "Ċ", "ĉ", "delete", "[]", "Ġradi", "Temp", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Vector", "3", "ĠMulti", "Sphere", "Shape", "::", "Get", "Sphere", "Position", "(", "int", "Ġindex", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "ĠMath", "::", "B", "t", "Vector", "3", "To", "Vector", "3", "(&", "Native", "->", "get", "Sphere", "Position", "(", "index", "));", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "bt", "Sc", "al", "ar", "ĠMulti", "Sphere", "Shape", "::", "Get", "Sphere", "Rad", "ius", "(", "int", "Ġindex", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "ĠNative", "->", "get", "Sphere", "Rad", "ius", "(", "index", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠMulti", "Sphere", "Shape", "::", "Sphere", "Count", "::", "get", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "ĠNative", "->", "get", "Sphere", "Count", "();", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["numSpheres", 22, "comesFrom", ["numSpheres"], [7]], ["numSpheres", 26, "comesFrom", ["numSpheres"], [7]], ["index", 34, "comesFrom", ["index"], [30]], ["index", 39, "comesFrom", ["index"], [36]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::297", "code": "#include \"testlib.h\"\n#include <stdio.h>\n#include <math.h>\n\nconst double EPS = 1E-6;\n\nint main(int argc, char * argv[])\n{\n    setName(\"compare two doubles, maximal absolute or relative error = %.10lf\", EPS);\n    registerTestlibCmd(argc, argv);\n    \n    double ja = ans.readDouble();\n    double pa = ouf.readDouble();\n    \n    if (!doubleCompare(ja, pa, EPS))\n        quitf(_wa, \"expected %.10lf, found %.10lf\", ja, pa);\n    \n    quitf(_ok, \"answer is %.10lf\", ja);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "test", "lib", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "Ċ", "const", "Ġdouble", "ĠEPS", "Ġ=", "Ġ1", "E", "-", "6", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Name", "(\"", "comp", "are", "Ġtwo", "Ġdoubles", ",", "Ġmaximal", "Ġabsolute", "Ġor", "Ġrelative", "Ġerror", "Ġ=", "Ġ%", ".", "10", "lf", "\",", "ĠEPS", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġregister", "Test", "lib", "Cmd", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġja", "Ġ=", "Ġans", ".", "read", "Double", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġpa", "Ġ=", "Ġo", "uf", ".", "read", "Double", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "double", "Compare", "(", "ja", ",", "Ġpa", ",", "ĠEPS", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġquit", "f", "(_", "wa", ",", "Ġ\"", "expected", "Ġ%", ".", "10", "lf", ",", "Ġfound", "Ġ%", ".", "10", "lf", "\",", "Ġja", ",", "Ġpa", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġquit", "f", "(_", "ok", ",", "Ġ\"", "answer", "Ġis", "Ġ%", ".", "10", "lf", "\",", "Ġja", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["EPS", 5, "comesFrom", ["EPS"], [0]], ["EPS", 18, "comesFrom", ["EPS"], [0]], ["argc", 7, "comesFrom", ["argc"], [2]], ["ja", 16, "comesFrom", ["ja"], [9]], ["ja", 21, "comesFrom", ["ja"], [9]], ["ja", 25, "comesFrom", ["ja"], [9]], ["pa", 17, "comesFrom", ["pa"], [12]], ["pa", 22, "comesFrom", ["pa"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::298", "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint n,m;\r\nint r;\r\n\r\nint main()\r\n{\r\n    scanf(\"%d %d\",&n,&m);\r\n\r\n    while(n>0)\r\n    {\r\n        n--;\r\n        r++;\r\n\r\n        if(r%m==0)\r\n            n++;\r\n    }\r\n\r\n    printf(\"%d\",r);\r\n    return 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġn", ",", "m", ";", "č", "Ċ", "int", "Ġr", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "Ġ%", "d", "\",", "&", "n", ",", "&", "m", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "n", ">", "0", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "--", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġr", "++;", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "r", "%", "m", "==", "0", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "++;", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\",", "r", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 9, "comesFrom", ["n"], [1]], ["n", 13, "comesFrom", ["n"], [1]], ["m", 7, "comesFrom", ["m"], [2]], ["m", 12, "comesFrom", ["m"], [2]], ["r", 10, "comesFrom", ["r"], [3]], ["r", 11, "comesFrom", ["r"], [3]], ["r", 15, "comesFrom", ["r"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::299", "code": "// { dg-options \"-std=gnu++11\" }\n\n// Copyright (C) 2007-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// Tuple\n\n#include <tuple>\n#include <testsuite_hooks.h>\n\nusing namespace std;\n\nint\nmain()\n{\n  bool test __attribute__((unused)) = true;\n\n  tuple<> ta;\n  tuple<> tb;\n  ta = tb;\n\n  tuple<int> tc(1);\n  tuple<int> td(0);\n  td = tc;\n  VERIFY(get<0>(td) == 1);\n\n  int i=0;\n  tuple<int&> te(i);\n  te = tc;\n  VERIFY(i == 1);\n\n  tuple<const int&> tf(tc);\n\n  get<0>(tc) = 2;\n  VERIFY(get<0>(tf) == 2);\n  tuple<double> tg;\n  tg = tc;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "-", "2014", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "ĠT", "uple", "Ċ", "Ċ", "#", "include", "Ġ<", "t", "uple", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġtuple", "<", ">", "Ġta", ";", "Ċ", "Ġ", "Ġtuple", "<", ">", "Ġt", "b", ";", "Ċ", "Ġ", "Ġta", "Ġ=", "Ġt", "b", ";", "ĊĊ", "Ġ", "Ġtuple", "<", "int", ">", "Ġtc", "(", "1", ");", "Ċ", "Ġ", "Ġtuple", "<", "int", ">", "Ġtd", "(", "0", ");", "Ċ", "Ġ", "Ġtd", "Ġ=", "Ġtc", ";", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "get", "<", "0", ">(", "td", ")", "Ġ==", "Ġ1", ");", "ĊĊ", "Ġ", "Ġint", "Ġi", "=", "0", ";", "Ċ", "Ġ", "Ġtuple", "<", "int", "&", ">", "Ġte", "(", "i", ");", "Ċ", "Ġ", "Ġte", "Ġ=", "Ġtc", ";", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "i", "Ġ==", "Ġ1", ");", "ĊĊ", "Ġ", "Ġtuple", "<", "const", "Ġint", "&", ">", "Ġtf", "(", "tc", ");", "ĊĊ", "Ġ", "Ġget", "<", "0", ">(", "tc", ")", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "get", "<", "0", ">(", "tf", ")", "Ġ==", "Ġ2", ");", "Ċ", "Ġ", "Ġtuple", "<", "double", ">", "Ġt", "g", ";", "Ċ", "Ġ", "Ġt", "g", "Ġ=", "Ġtc", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["tb", 7, "comesFrom", ["tb"], [5]], ["tc", 11, "comesFrom", ["tc"], [8]], ["tc", 18, "comesFrom", ["tc"], [8]], ["tc", 23, "comesFrom", ["tc"], [8]], ["tc", 29, "comesFrom", ["tc"], [8]], ["td", 14, "comesFrom", ["td"], [10]], ["i", 20, "comesFrom", ["i"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::300", "code": "/**\n *\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include <memory>\n\n#include \"core/Core.h\"\n#include \"core/RepositoryFactory.h\"\n#include \"../TestBase.h\"\n\nTEST_CASE(\"NoRocksDBTest1\", \"[NoRocksDBTest]\") {\n  std::shared_ptr<core::Repository> prov_repo = core::createRepository(\"provenancerepository\", true);\n  REQUIRE(nullptr != prov_repo);\n}\n\nTEST_CASE(\"NoRocksDBTest2\", \"[NoRocksDBTest]\") {\n  std::shared_ptr<core::Repository> prov_repo = core::createRepository(\"flowfilerepository\", true);\n  REQUIRE(nullptr != prov_repo);\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLicensed", "Ġto", "Ġthe", "ĠApache", "ĠSoftware", "ĠFoundation", "Ġ(", "AS", "F", ")", "Ġunder", "Ġone", "Ġor", "Ġmore", "Ċ", "Ġ*", "Ġcontributor", "Ġlicense", "Ġagreements", ".", "Ġ", "ĠSee", "Ġthe", "ĠNOTICE", "Ġfile", "Ġdistributed", "Ġwith", "Ċ", "Ġ*", "Ġthis", "Ġwork", "Ġfor", "Ġadditional", "Ġinformation", "Ġregarding", "Ġcopyright", "Ġownership", ".", "Ċ", "Ġ*", "ĠThe", "ĠAS", "F", "Ġlicenses", "Ġthis", "Ġfile", "Ġto", "ĠYou", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ċ", "Ġ*", "Ġ(", "the", "Ġ\"", "License", "\");", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ċ", "Ġ*", "Ġthe", "ĠLicense", ".", "Ġ", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "core", "/", "Core", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "Rep", "ository", "Factory", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "Test", "Base", ".", "h", "\"", "Ċ", "Ċ", "T", "EST", "_", "C", "ASE", "(\"", "No", "R", "ocks", "DB", "Test", "1", "\",", "Ġ\"[", "No", "R", "ocks", "DB", "Test", "]", "\")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "core", "::", "Rep", "ository", ">", "Ġprov", "_", "re", "po", "Ġ=", "Ġcore", "::", "create", "Rep", "ository", "(\"", "proven", "ance", "re", "pos", "itory", "\",", "Ġtrue", ");", "Ċ", "Ġ", "ĠRE", "QUIRE", "(", "null", "ptr", "Ġ!=", "Ġprov", "_", "re", "po", ");", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "_", "C", "ASE", "(\"", "No", "R", "ocks", "DB", "Test", "2", "\",", "Ġ\"[", "No", "R", "ocks", "DB", "Test", "]", "\")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "core", "::", "Rep", "ository", ">", "Ġprov", "_", "re", "po", "Ġ=", "Ġcore", "::", "create", "Rep", "ository", "(\"", "flow", "file", "re", "pos", "itory", "\",", "Ġtrue", ");", "Ċ", "Ġ", "ĠRE", "QUIRE", "(", "null", "ptr", "Ġ!=", "Ġprov", "_", "re", "po", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["prov_repo", 4, "comesFrom", ["prov_repo"], [1]], ["prov_repo", 9, "comesFrom", ["prov_repo"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::301", "code": "//  directory_symlink_parent_resolution.cpp  -------------------------------------------//\n\n//  Copyright Beman Dawes 2015\n\n//  Distributed under the Boost Software License, Version 1.0.\n//  See http://www.boost.org/LICENSE_1_0.txt\n\n//  Library home page: http://www.boost.org/libs/filesystem\n\n#include <boost/filesystem.hpp>\n#include <boost/filesystem/string_file.hpp>\n#include <boost/detail/lightweight_main.hpp>\n#include <iostream>\n#include <string>\n\nusing std::cout;\nusing std::endl;\nusing namespace boost::filesystem;\n\nint cpp_main(int argc, char* argv[])\n{\n#ifdef BOOST_WINDOWS_API\n    cout << \"BOOST_WINDOWS_API\" << endl;\n#else\n    cout << \"BOOST_POSIX_API\" << endl;\n#endif\n\n    path test_dir(current_path() / \"dspr_demo\");\n\n    remove_all(test_dir);\n    create_directories(test_dir / \"a/c/d\");\n    current_path(test_dir / \"a\");\n    create_directory_symlink(\"c/d\", \"b\");\n    save_string_file(\"name.txt\", \"Windows\");\n    save_string_file(\"c/name.txt\", \"POSIX\");\n    current_path(test_dir);\n    std::string s;\n    load_string_file(\"a/b/../name.txt\", s);\n    cout << s << endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ", "Ġdirectory", "_", "sy", "ml", "ink", "_", "parent", "_", "resolution", ".", "cpp", "Ġ", "Ġ--------------------------------", "-----------", "//", "Ċ", "Ċ", "//", "Ġ", "ĠCopyright", "ĠB", "eman", "ĠDaw", "es", "Ġ2015", "Ċ", "Ċ", "//", "Ġ", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "Ġ", "ĠSee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ċ", "Ċ", "//", "Ġ", "ĠLibrary", "Ġhome", "Ġpage", ":", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "lib", "s", "/", "files", "ystem", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "files", "ystem", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "files", "ystem", "/", "string", "_", "file", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "detail", "/", "light", "weight", "_", "main", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "using", "Ġnamespace", "Ġboost", "::", "files", "ystem", ";", "Ċ", "Ċ", "int", "Ġc", "pp", "_", "main", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "#", "if", "def", "ĠB", "OO", "ST", "_", "WINDOWS", "_", "API", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "B", "OO", "ST", "_", "WINDOWS", "_", "API", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "#", "else", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "B", "OO", "ST", "_", "POS", "IX", "_", "API", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "#", "endif", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġpath", "Ġtest", "_", "dir", "(", "current", "_", "path", "()", "Ġ/", "Ġ\"", "ds", "pr", "_", "dem", "o", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġremove", "_", "all", "(", "test", "_", "dir", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcreate", "_", "direct", "ories", "(", "test", "_", "dir", "Ġ/", "Ġ\"", "a", "/", "c", "/", "d", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcurrent", "_", "path", "(", "test", "_", "dir", "Ġ/", "Ġ\"", "a", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcreate", "_", "directory", "_", "sy", "ml", "ink", "(\"", "c", "/", "d", "\",", "Ġ\"", "b", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsave", "_", "string", "_", "file", "(\"", "name", ".", "txt", "\",", "Ġ\"", "Windows", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsave", "_", "string", "_", "file", "(\"", "c", "/", "name", ".", "txt", "\",", "Ġ\"", "POS", "IX", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcurrent", "_", "path", "(", "test", "_", "dir", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġload", "_", "string", "_", "file", "(\"", "a", "/", "b", "/", "../", "name", ".", "txt", "\",", "Ġs", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġs", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["test_dir", 14, "comesFrom", ["test_dir"], [11]], ["test_dir", 16, "comesFrom", ["test_dir"], [11]], ["test_dir", 18, "comesFrom", ["test_dir"], [11]], ["test_dir", 23, "comesFrom", ["test_dir"], [11]], ["s", 26, "comesFrom", ["s"], [24]], ["s", 28, "comesFrom", ["s"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::302", "code": "// Copyright 2019-2020 CERN and copyright holders of ALICE O2.\n// See https://alice-o2.web.cern.ch/copyright for details of the copyright holders.\n// All rights not expressly granted are reserved.\n//\n// This software is distributed under the terms of the GNU General Public\n// License v3 (GPL Version 3), copied verbatim in the file \"COPYING\".\n//\n// In applying this license CERN does not waive the privileges and immunities\n// granted to it by virtue of its status as an Intergovernmental Organization\n// or submit itself to any jurisdiction.\n\n#if !defined(__CLING__) || defined(__ROOTCLING__)\n#include <iostream>\n#include \"FairBoxGenerator.h\"\n#endif\n\nFairGenerator* fixedEnergyPionGun(double energy)\n{\n  std::cout << \"Single electron generator shooting at EMCAL with Energy \" << energy << \"GeV/c\" << std::endl;\n  auto elecgen = new FairBoxGenerator(211, 1);\n  elecgen->SetEtaRange(-0.67, 0.67);\n  elecgen->SetPhiRange(90, 340);\n  elecgen->SetPRange(energy, energy);\n  return elecgen;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2019", "-", "2020", "ĠC", "ERN", "Ġand", "Ġcopyright", "Ġholders", "Ġof", "ĠAL", "ICE", "ĠO", "2", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "al", "ice", "-", "o", "2", ".", "web", ".", "cern", ".", "ch", "/", "cop", "yright", "Ġfor", "Ġdetails", "Ġof", "Ġthe", "Ġcopyright", "Ġholders", ".", "Ċ", "//", "ĠAll", "Ġrights", "Ġnot", "Ġexpressly", "Ġgranted", "Ġare", "Ġreserved", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġsoftware", "Ġis", "Ġdistributed", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "Ċ", "//", "ĠLicense", "Ġv", "3", "Ġ(", "G", "PL", "ĠVersion", "Ġ3", "),", "Ġcopied", "Ġver", "bat", "im", "Ġin", "Ġthe", "Ġfile", "Ġ\"", "C", "OP", "YING", "\".", "Ċ", "//", "Ċ", "//", "ĠIn", "Ġapplying", "Ġthis", "Ġlicense", "ĠC", "ERN", "Ġdoes", "Ġnot", "Ġwaive", "Ġthe", "Ġprivileges", "Ġand", "Ġimmun", "ities", "Ċ", "//", "Ġgranted", "Ġto", "Ġit", "Ġby", "Ġvirtue", "Ġof", "Ġits", "Ġstatus", "Ġas", "Ġan", "ĠInter", "governmental", "ĠOrganization", "Ċ", "//", "Ġor", "Ġsubmit", "Ġitself", "Ġto", "Ġany", "Ġjurisdiction", ".", "Ċ", "Ċ", "#", "if", "Ġ!", "defined", "(", "__", "CL", "ING", "__", ")", "Ġ||", "Ġdefined", "(", "__", "RO", "OT", "CL", "ING", "__", ")", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ\"", "Fair", "Box", "Gener", "ator", ".", "h", "\"", "Ċ", "#", "endif", "Ċ", "Ċ", "Fair", "Gener", "ator", "*", "Ġfixed", "Energy", "P", "ion", "Gun", "(", "double", "Ġenergy", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Single", "Ġelectron", "Ġgenerator", "Ġshooting", "Ġat", "ĠE", "MC", "AL", "Ġwith", "ĠEnergy", "Ġ\"", "Ġ<<", "Ġenergy", "Ġ<<", "Ġ\"", "Ge", "V", "/", "c", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġauto", "Ġele", "c", "gen", "Ġ=", "Ġnew", "ĠFair", "Box", "Gener", "ator", "(", "211", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġele", "c", "gen", "->", "Set", "E", "ta", "Range", "(-", "0", ".", "67", ",", "Ġ0", ".", "67", ");", "Ċ", "Ġ", "Ġele", "c", "gen", "->", "Set", "Ph", "i", "Range", "(", "90", ",", "Ġ340", ");", "Ċ", "Ġ", "Ġele", "c", "gen", "->", "Set", "PR", "ange", "(", "energy", ",", "Ġenergy", ");", "Ċ", "Ġ", "Ġreturn", "Ġele", "c", "gen", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["energy", 5, "comesFrom", ["energy"], [3]], ["energy", 14, "comesFrom", ["energy"], [3]], ["energy", 15, "comesFrom", ["energy"], [3]], ["elecgen", 8, "comesFrom", ["elecgen"], [7]], ["elecgen", 10, "comesFrom", ["elecgen"], [7]], ["elecgen", 12, "comesFrom", ["elecgen"], [7]], ["elecgen", 16, "comesFrom", ["elecgen"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::303", "code": "// 'mutable' keyword\n// BZ_MUTABLE\n\nclass num {\n\npublic:\n   num(int z)\n   { \n       x_ = z; \n       numReads_ = 0;\n   }\n\n   void set(int z)\n   { x_ = z; }\n\n   int get() const\n   { \n       ++numReads_;\n       return x_;\n   }\n\nprivate:\n   int x_;\n   mutable int numReads_;\n};\n\nint main()\n{\n   num q(4);\n   q.set(5);\n   int k = q.get();\n   q.get();\n   return 0;\n}\n\n", "code_tokens": ["Ġ//", "Ġ'", "m", "utable", "'", "Ġkeyword", "Ċ", "//", "ĠB", "Z", "_", "M", "UT", "ABLE", "Ċ", "Ċ", "class", "Ġnum", "Ġ{", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġnum", "(", "int", "Ġz", ")", "Ċ", "Ġ", "Ġ", "Ġ{", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "_", "Ġ=", "Ġz", ";", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnum", "Read", "s", "_", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġvoid", "Ġset", "(", "int", "Ġz", ")", "Ċ", "Ġ", "Ġ", "Ġ{", "Ġx", "_", "Ġ=", "Ġz", ";", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġint", "Ġget", "()", "Ġconst", "Ċ", "Ġ", "Ġ", "Ġ{", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "num", "Read", "s", "_", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġx", "_", ";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġ", "Ġint", "Ġx", "_", ";", "Ċ", "Ġ", "Ġ", "Ġmut", "able", "Ġint", "Ġnum", "Read", "s", "_", ";", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġnum", "Ġq", "(", "4", ");", "Ċ", "Ġ", "Ġ", "Ġq", ".", "set", "(", "5", ");", "Ċ", "Ġ", "Ġ", "Ġint", "Ġk", "Ġ=", "Ġq", ".", "get", "();", "Ċ", "Ġ", "Ġ", "Ġq", ".", "get", "();", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["z", 3, "comesFrom", ["z"], [1]], ["z", 8, "comesFrom", ["z"], [6]], ["numReads_", 10, "comesFrom", ["numReads_"], [4]], ["numReads_", 13, "comesFrom", ["numReads_"], [4]], ["x_", 11, "comesFrom", ["x_"], [7]], ["x_", 12, "comesFrom", ["x_"], [7]], ["q", 16, "comesFrom", ["q"], [15]], ["q", 19, "comesFrom", ["q"], [15]], ["q", 21, "comesFrom", ["q"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::304", "code": "//  (C) Copyright Gennadiy Rozental 2001-2008.\r\n//  Distributed under the Boost Software License, Version 1.0.\r\n//  (See accompanying file LICENSE_1_0.txt or copy at \r\n//  http://www.boost.org/LICENSE_1_0.txt)\r\n\r\n//  See http://www.boost.org/libs/test for the library home page.\r\n\r\n// Boost.Runtime.Param\r\n#include <boost/test/utils/runtime/env/variable.hpp>\r\n#include <boost/test/utils/basic_cstring/io.hpp>\r\n\r\nnamespace rt  = boost::runtime;\r\nnamespace env = boost::runtime::env;\r\n\r\n// STL\r\n#include <iostream>\r\n\r\nint main() {\r\n    std::cout << env::get<int>(\"NUMBER_OF_PROCESSORS\") << '\\n' << env::get<rt::cstring>(\"TEMP\") << std::endl;\r\n\r\n    boost::optional<int> n;\r\n\r\n    env::get( \"NUMBER_OF_PROCESSORS\", n );\r\n\r\n    if( n )\r\n        std::cout << n << std::endl;\r\n\r\n    return 0;\r\n}\r\n\r\n// EOF\r\n\r\n", "code_tokens": ["Ġ//", "Ġ", "Ġ(", "C", ")", "ĠCopyright", "ĠG", "enn", "ad", "iy", "ĠRoz", "ental", "Ġ2001", "-", "2008", ".", "č", "Ċ", "//", "Ġ", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "č", "Ċ", "//", "Ġ", "Ġ(", "See", "Ġaccompanying", "Ġfile", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġ", "č", "Ċ", "//", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "č", "Ċ", "č", "Ċ", "//", "Ġ", "ĠSee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "lib", "s", "/", "test", "Ġfor", "Ġthe", "Ġlibrary", "Ġhome", "Ġpage", ".", "č", "Ċ", "č", "Ċ", "//", "ĠBoost", ".", "Runtime", ".", "Param", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "utils", "/", "runtime", "/", "env", "/", "variable", ".", "h", "pp", ">", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "utils", "/", "basic", "_", "c", "string", "/", "io", ".", "h", "pp", ">", "č", "Ċ", "č", "Ċ", "names", "pace", "Ġr", "t", "Ġ", "Ġ=", "Ġboost", "::", "runtime", ";", "č", "Ċ", "names", "pace", "Ġenv", "Ġ=", "Ġboost", "::", "runtime", "::", "env", ";", "č", "Ċ", "č", "Ċ", "//", "ĠSTL", "č", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġenv", "::", "get", "<", "int", ">", "(\"", "NUM", "BER", "_", "OF", "_", "PR", "OC", "ESS", "ORS", "\")", "Ġ<<", "Ġ'", "\\", "n", "'", "Ġ<<", "Ġenv", "::", "get", "<", "rt", "::", "c", "string", ">", "(\"", "T", "EMP", "\")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġboost", "::", "optional", "<", "int", ">", "Ġn", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġenv", "::", "get", "(", "Ġ\"", "NUM", "BER", "_", "OF", "_", "PR", "OC", "ESS", "ORS", "\",", "Ġn", "Ġ);", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "Ġn", "Ġ)", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġn", "Ġ<<", "Ġstd", "::", "end", "l", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//", "ĠE", "OF", "č", "Ċ", "č", "Ċ"], "dataflow_graph": [["n", 7, "comesFrom", ["n"], [5]], ["n", 8, "comesFrom", ["n"], [5]], ["n", 10, "comesFrom", ["n"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::305", "code": "//===----------------------------------------------------------------------===//\n//\n// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n//\n//===----------------------------------------------------------------------===//\n\n// <iomanip>\n\n// quoted\n\n#include <iomanip>\n#include <sstream>\n#include <string>\n#include <cassert>\n\n#include \"test_macros.h\"\n\n#if TEST_STD_VER > 11\n\n//  Test that mismatches in the traits between the quoted object and the dest string are diagnosed.\n\ntemplate <class charT>\nstruct test_traits\n{\n    typedef charT     char_type;\n};\n\nvoid round_trip ( const char *p ) {\n    std::stringstream ss;\n    ss << std::quoted(p);\n    std::basic_string<char, test_traits<char>> s;\n    ss >> std::quoted(s);\n    }\n\n\n\nint main(int, char**)\n{\n    round_trip ( \"Hi Mom\" );\n}\n#else\n#error\n#endif\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "//", "Ċ", "//", "ĠPart", "Ġof", "Ġthe", "ĠLL", "VM", "ĠProject", ",", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", "Ġv", "2", ".", "0", "Ġwith", "ĠLL", "VM", "ĠEx", "ceptions", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "ll", "vm", ".", "org", "/", "L", "IC", "ENSE", ".", "txt", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "//", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", "ĠWITH", "ĠLL", "VM", "-", "ex", "ception", "Ċ", "//", "Ċ", "//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "Ċ", "//", "Ġ<", "i", "oman", "ip", ">", "Ċ", "Ċ", "//", "Ġquoted", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "oman", "ip", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "_", "mac", "ros", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "ĠTEST", "_", "STD", "_", "VER", "Ġ>", "Ġ11", "Ċ", "Ċ", "//", "Ġ", "ĠTest", "Ġthat", "Ġmism", "atches", "Ġin", "Ġthe", "Ġtraits", "Ġbetween", "Ġthe", "Ġquoted", "Ġobject", "Ġand", "Ġthe", "Ġdest", "Ġstring", "Ġare", "Ġdiagnosed", ".", "Ċ", "Ċ", "template", "Ġ<", "class", "Ġchar", "T", ">", "Ċ", "struct", "Ġtest", "_", "tra", "its", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtyped", "ef", "Ġchar", "T", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "_", "type", ";", "Ċ", "};", "Ċ", "Ċ", "void", "Ġround", "_", "trip", "Ġ(", "Ġconst", "Ġchar", "Ġ*", "p", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "stream", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġstd", "::", "qu", "oted", "(", "p", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "basic", "_", "string", "<", "char", ",", "Ġtest", "_", "tra", "its", "<", "char", ">>", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ>>", "Ġstd", "::", "qu", "oted", "(", "s", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġround", "_", "trip", "Ġ(", "Ġ\"", "Hi", "ĠMom", "\"", "Ġ);", "Ċ", "}", "Ċ", "#", "else", "Ċ", "#", "error", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["ss", 4, "comesFrom", ["ss"], [3]], ["ss", 8, "comesFrom", ["ss"], [3]], ["s", 10, "comesFrom", ["s"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::306", "code": "// PR c++/78645\n// { dg-do compile { target c++11 } }\n\ntypedef bool (*Function)(int);\nconstexpr bool check(int x, Function p) { return p(x); }  // { dg-message \"in .constexpr. expansion of\" }\n\nstatic_assert(check(2, check), \"\");  // { dg-error \"conversion|constant|in .constexpr. expansion of\" }\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "786", "45", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "Ċ", "ty", "ped", "ef", "Ġbool", "Ġ(*", "Function", ")(", "int", ");", "Ċ", "const", "expr", "Ġbool", "Ġcheck", "(", "int", "Ġx", ",", "ĠFunction", "Ġp", ")", "Ġ{", "Ġreturn", "Ġp", "(", "x", ");", "Ġ}", "Ġ", "Ġ//", "Ġ{", "Ġd", "g", "-", "message", "Ġ\"", "in", "Ġ.", "const", "expr", ".", "Ġexpansion", "Ġof", "\"", "Ġ}", "Ċ", "Ċ", "static", "_", "assert", "(", "check", "(", "2", ",", "Ġcheck", "),", "Ġ\"\"", ");", "Ġ", "Ġ//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "con", "version", "|", "const", "ant", "|", "in", "Ġ.", "const", "expr", ".", "Ġexpansion", "Ġof", "\"", "Ġ}", "Ċ"], "dataflow_graph": [["p", 3, "comesFrom", ["p"], [2]], ["x", 4, "comesFrom", ["x"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::307", "code": "//============== IV: Multiplayer - http://code.iv-multiplayer.com ==============\r\n//\r\n// File: Main.cpp\r\n// Project: Server.Core\r\n// Author(s): jenksta\r\n// License: See LICENSE in root directory\r\n//\r\n//==============================================================================\r\n\r\n#include <Common.h>\r\n#include \"CServer.h\"\r\n\r\nCServer * g_pServer = NULL;\r\n\r\nEXPORT CServerInterface * GetServerInterface()\r\n{\r\n\tSAFE_DELETE(g_pServer);\r\n\tg_pServer = new CServer();\r\n\treturn g_pServer;\r\n}\r\n\r\nEXPORT void DestroyServerInterface(CServerInterface * pServer)\r\n{\r\n\tSAFE_DELETE(g_pServer);\r\n}\r\n\r\n#ifdef WIN32\r\nBOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, void *)\r\n{\r\n\tswitch(dwReason)\r\n\t{\r\n\tcase DLL_PROCESS_ATTACH:\r\n\t\t{\r\n\t\t\t// Disable thread calls\r\n\t\t\tDisableThreadLibraryCalls(hModule);\r\n\t\t}\r\n\t\tbreak;\r\n\t}\r\n\r\n\treturn TRUE;\r\n}\r\n#endif\r\n", "code_tokens": ["Ġ//", "============", "==", "ĠIV", ":", "ĠMultiplayer", "Ġ-", "Ġhttp", "://", "code", ".", "iv", "-", "multi", "player", ".", "com", "Ġ=", "============", "=", "č", "Ċ", "//", "č", "Ċ", "//", "ĠFile", ":", "ĠMain", ".", "cpp", "č", "Ċ", "//", "ĠProject", ":", "ĠServer", ".", "Core", "č", "Ċ", "//", "ĠAuthor", "(", "s", "):", "Ġj", "en", "k", "sta", "č", "Ċ", "//", "ĠLicense", ":", "ĠSee", "ĠLIC", "ENSE", "Ġin", "Ġroot", "Ġdirectory", "č", "Ċ", "//", "č", "Ċ", "//", "================================================================", "============", "==", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "Common", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ\"", "C", "Server", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "C", "Server", "Ġ*", "Ġg", "_", "p", "Server", "Ġ=", "ĠNULL", ";", "č", "Ċ", "č", "Ċ", "EX", "PORT", "ĠC", "Server", "Interface", "Ġ*", "ĠGet", "Server", "Interface", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "SA", "FE", "_", "DE", "LE", "TE", "(", "g", "_", "p", "Server", ");", "č", "Ċ", "ĉ", "g", "_", "p", "Server", "Ġ=", "Ġnew", "ĠC", "Server", "();", "č", "Ċ", "ĉ", "return", "Ġg", "_", "p", "Server", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "EX", "PORT", "Ġvoid", "ĠDestroy", "Server", "Interface", "(", "C", "Server", "Interface", "Ġ*", "Ġp", "Server", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "SA", "FE", "_", "DE", "LE", "TE", "(", "g", "_", "p", "Server", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "#", "if", "def", "ĠWIN", "32", "č", "Ċ", "BO", "OL", "ĠWIN", "API", "ĠD", "ll", "Main", "(", "H", "MOD", "ULE", "Ġh", "Module", ",", "ĠDW", "ORD", "Ġdw", "Reason", ",", "Ġvoid", "Ġ*)", "č", "Ċ", "{", "č", "Ċ", "ĉ", "switch", "(", "d", "w", "Reason", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "case", "ĠD", "LL", "_", "PR", "OC", "ESS", "_", "ATT", "ACH", ":", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "//", "ĠDisable", "Ġthread", "Ġcalls", "č", "Ċ", "ĉ", "ĉ", "ĉ", "Disable", "Thread", "Library", "C", "alls", "(", "h", "Module", ");", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "break", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "return", "ĠTRUE", ";", "č", "Ċ", "}", "č", "Ċ", "#", "endif", "č", "Ċ"], "dataflow_graph": [["g_pServer", 4, "comesFrom", ["g_pServer"], [3]], ["g_pServer", 9, "comesFrom", ["g_pServer"], [3]], ["dwReason", 15, "comesFrom", ["dwReason"], [14]], ["hModule", 18, "comesFrom", ["hModule"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::308", "code": "// { dg-options \"-std=gnu++0x\" }\n// { dg-do compile }\n\n// Copyright (C) 2011-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <utility>\n\nstd::pair<int, int> pi;\nconst std::pair<int, int> cpi;\n\nconstexpr const int& cri = std::get<0>(cpi);\nconstexpr int&  ri = std::get<0>(pi);\nconstexpr int&& rri = std::get<0>(std::move(pi));\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "0", "x", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "std", "::", "pair", "<", "int", ",", "Ġint", ">", "Ġpi", ";", "Ċ", "const", "Ġstd", "::", "pair", "<", "int", ",", "Ġint", ">", "Ġc", "pi", ";", "Ċ", "Ċ", "const", "expr", "Ġconst", "Ġint", "&", "Ġc", "ri", "Ġ=", "Ġstd", "::", "get", "<", "0", ">(", "cp", "i", ");", "Ċ", "const", "expr", "Ġint", "&", "Ġ", "Ġr", "i", "Ġ=", "Ġstd", "::", "get", "<", "0", ">(", "pi", ");", "Ċ", "const", "expr", "Ġint", "&&", "Ġr", "ri", "Ġ=", "Ġstd", "::", "get", "<", "0", ">(", "std", "::", "move", "(", "pi", "));", "Ċ"], "dataflow_graph": [["cpi", 4, "comesFrom", ["cpi"], [1]], ["pi", 7, "comesFrom", ["pi"], [0]], ["pi", 11, "comesFrom", ["pi"], [0]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::309", "code": "\n#include \"GPIO.h\"\n\nusing namespace Empty;\n\nGPIO::GPIO()\n{}\n\nvoid GPIO::init()\n{}\n\nvoid GPIO::pinMode(uint8_t pin, uint8_t output)\n{}\n\nuint8_t GPIO::read(uint8_t pin) {\n    return 0;\n}\n\nvoid GPIO::write(uint8_t pin, uint8_t value)\n{}\n\nvoid GPIO::toggle(uint8_t pin)\n{}\n\n/* Alternative interface: */\nAP_HAL::DigitalSource* GPIO::channel(uint16_t n) {\n    return new DigitalSource(0);\n}\n\nbool GPIO::usb_connected(void)\n{\n    return false;\n}\n\nDigitalSource::DigitalSource(uint8_t v) :\n    _v(v)\n{}\n\nvoid DigitalSource::mode(uint8_t output)\n{}\n\nuint8_t DigitalSource::read() {\n    return _v;\n}\n\nvoid DigitalSource::write(uint8_t value) {\n    _v = value;\n}\n\nvoid DigitalSource::toggle() {\n    _v = !_v;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "GP", "IO", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠEmpty", ";", "Ċ", "Ċ", "GP", "IO", "::", "GP", "IO", "()", "Ċ", "{", "}", "Ċ", "Ċ", "void", "ĠGPIO", "::", "init", "()", "Ċ", "{", "}", "Ċ", "Ċ", "void", "ĠGPIO", "::", "pin", "Mode", "(", "uint", "8", "_", "t", "Ġpin", ",", "Ġuint", "8", "_", "t", "Ġoutput", ")", "Ċ", "{", "}", "Ċ", "Ċ", "uint", "8", "_", "t", "ĠGPIO", "::", "read", "(", "uint", "8", "_", "t", "Ġpin", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGPIO", "::", "write", "(", "uint", "8", "_", "t", "Ġpin", ",", "Ġuint", "8", "_", "t", "Ġvalue", ")", "Ċ", "{", "}", "Ċ", "Ċ", "void", "ĠGPIO", "::", "toggle", "(", "uint", "8", "_", "t", "Ġpin", ")", "Ċ", "{", "}", "Ċ", "Ċ", "/*", "ĠAlternative", "Ġinterface", ":", "Ġ*/", "Ċ", "AP", "_", "H", "AL", "::", "Digital", "Source", "*", "ĠGPIO", "::", "channel", "(", "uint", "16", "_", "t", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġnew", "ĠDigital", "Source", "(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠGPIO", "::", "usb", "_", "connected", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "Digital", "Source", "::", "Digital", "Source", "(", "uint", "8", "_", "t", "Ġv", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "v", "(", "v", ")", "Ċ", "{", "}", "Ċ", "Ċ", "void", "ĠDigital", "Source", "::", "mode", "(", "uint", "8", "_", "t", "Ġoutput", ")", "Ċ", "{", "}", "Ċ", "Ċ", "uint", "8", "_", "t", "ĠDigital", "Source", "::", "read", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ_", "v", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDigital", "Source", "::", "write", "(", "uint", "8", "_", "t", "Ġvalue", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "v", "Ġ=", "Ġvalue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDigital", "Source", "::", "toggle", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "v", "Ġ=", "Ġ!", "_", "v", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["_v", 30, "comesFrom", ["_v"], [29]], ["v", 19, "comesFrom", ["v"], [17]], ["value", 27, "comesFrom", ["value"], [25]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::310", "code": "// { dg-do compile }\n\n// 2006-02-04  Edward Smith-Rowland <3dw4rd@verizon.net>\n//\n// Copyright (C) 2006-2007, 2009 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 5.2.1.12 ellint_1\n\n#include <tr1/math.h>\n\nvoid\ntest01()\n{\n  float kf = 0.5F, phif = std::atan2(1.0F, 1.0F);\n  double kd = 0.5, phid = std::atan2(1.0, 1.0);\n  long double kl = 0.5L, phil = std::atan2(1.0L, 1.0L);\n\n  ellint_1(kf, phif);\n  ellint_1f(kf, phif);\n  ellint_1(kd, phid);\n  ellint_1(kl, phil);\n  ellint_1l(kl, phil);\n\n  return;\n}\n\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "//", "Ġ2006", "-", "02", "-", "04", "Ġ", "ĠEdward", "ĠSmith", "-", "Row", "land", "Ġ<", "3", "d", "w", "4", "rd", "@", "ver", "izon", ".", "net", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "-", "2007", ",", "Ġ2009", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ5", ".", "2", ".", "1", ".", "12", "Ġell", "int", "_", "1", "Ċ", "Ċ", "#", "include", "Ġ<", "tr", "1", "/", "math", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġfloat", "Ġk", "f", "Ġ=", "Ġ0", ".", "5", "F", ",", "Ġph", "if", "Ġ=", "Ġstd", "::", "atan", "2", "(", "1", ".", "0", "F", ",", "Ġ1", ".", "0", "F", ");", "Ċ", "Ġ", "Ġdouble", "Ġk", "d", "Ġ=", "Ġ0", ".", "5", ",", "Ġph", "id", "Ġ=", "Ġstd", "::", "atan", "2", "(", "1", ".", "0", ",", "Ġ1", ".", "0", ");", "Ċ", "Ġ", "Ġlong", "Ġdouble", "Ġk", "l", "Ġ=", "Ġ0", ".", "5", "L", ",", "Ġphil", "Ġ=", "Ġstd", "::", "atan", "2", "(", "1", ".", "0", "L", ",", "Ġ1", ".", "0", "L", ");", "ĊĊ", "Ġ", "Ġell", "int", "_", "1", "(", "k", "f", ",", "Ġph", "if", ");", "Ċ", "Ġ", "Ġell", "int", "_", "1", "f", "(", "k", "f", ",", "Ġph", "if", ");", "Ċ", "Ġ", "Ġell", "int", "_", "1", "(", "k", "d", ",", "Ġph", "id", ");", "Ċ", "Ġ", "Ġell", "int", "_", "1", "(", "kl", ",", "Ġphil", ");", "Ċ", "Ġ", "Ġell", "int", "_", "1", "l", "(", "kl", ",", "Ġphil", ");", "ĊĊ", "Ġ", "Ġreturn", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["kf", 11, "comesFrom", ["kf"], [1]], ["kf", 14, "comesFrom", ["kf"], [1]], ["phif", 12, "comesFrom", ["phif"], [2]], ["phif", 15, "comesFrom", ["phif"], [2]], ["kd", 17, "comesFrom", ["kd"], [4]], ["phid", 18, "comesFrom", ["phid"], [5]], ["kl", 20, "comesFrom", ["kl"], [7]], ["kl", 23, "comesFrom", ["kl"], [7]], ["phil", 21, "comesFrom", ["phil"], [8]], ["phil", 24, "comesFrom", ["phil"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::311", "code": "// Deque iterator invalidation tests\n\n// Copyright (C) 2003-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <debug/deque>\n#include <testsuite_hooks.h>\n\nusing __gnu_debug::deque;\n\nbool test = true;\n\n// Resize\nvoid test02()\n{\n  deque<int> v(10, 17);\n\n  deque<int>::iterator before = v.begin() + 6;\n  deque<int>::iterator at = before + 1;\n  deque<int>::iterator after = at + 1;\n\n  // Shrink\n  v.resize(7);\n  VERIFY(before._M_dereferenceable());\n  VERIFY(at._M_singular());\n  VERIFY(after._M_singular());\n\n  // Grow\n  before = v.begin() + 6;\n  v.resize(17);\n  VERIFY(before._M_singular());\n}\n\nint main()\n{\n  test02();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠDe", "que", "Ġiterator", "Ġinvalid", "ation", "Ġtests", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "debug", "/", "de", "que", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "using", "Ġ__", "gnu", "_", "debug", "::", "de", "que", ";", "Ċ", "Ċ", "bool", "Ġtest", "Ġ=", "Ġtrue", ";", "Ċ", "Ċ", "//", "ĠRes", "ize", "Ċ", "void", "Ġtest", "02", "()", "Ċ", "{", "Ċ", "Ġ", "Ġde", "que", "<", "int", ">", "Ġv", "(", "10", ",", "Ġ17", ");", "ĊĊ", "Ġ", "Ġde", "que", "<", "int", ">", "::", "iterator", "Ġbefore", "Ġ=", "Ġv", ".", "begin", "()", "Ġ+", "Ġ6", ";", "Ċ", "Ġ", "Ġde", "que", "<", "int", ">", "::", "iterator", "Ġat", "Ġ=", "Ġbefore", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġde", "que", "<", "int", ">", "::", "iterator", "Ġafter", "Ġ=", "Ġat", "Ġ+", "Ġ1", ";", "ĊĊ", "Ġ", "Ġ//", "ĠSh", "r", "ink", "Ċ", "Ġ", "Ġv", ".", "res", "ize", "(", "7", ");", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "before", "._", "M", "_", "d", "ere", "ference", "able", "());", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "at", "._", "M", "_", "sing", "ular", "());", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "after", "._", "M", "_", "sing", "ular", "());", "ĊĊ", "Ġ", "Ġ//", "ĠGrow", "Ċ", "Ġ", "Ġbefore", "Ġ=", "Ġv", ".", "begin", "()", "Ġ+", "Ġ6", ";", "Ċ", "Ġ", "Ġv", ".", "res", "ize", "(", "17", ");", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "before", "._", "M", "_", "sing", "ular", "());", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "02", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["v", 5, "comesFrom", ["v"], [3]], ["v", 11, "comesFrom", ["v"], [3]], ["v", 23, "comesFrom", ["v"], [3]], ["v", 25, "comesFrom", ["v"], [3]], ["before", 8, "comesFrom", ["before"], [4]], ["before", 14, "comesFrom", ["before"], [4]], ["before", 28, "comesFrom", ["before"], [22]], ["at", 10, "comesFrom", ["at"], [7]], ["at", 17, "comesFrom", ["at"], [7]], ["after", 20, "comesFrom", ["after"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::312", "code": "// Copyright (C) 2014-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <regex>\n#include <testsuite_performance.h>\n\nusing namespace __gnu_test;\n\nint main()\n{\n  time_counter time;\n  resource_counter resource;\n\n  start_counters(time, resource);\n\n  // this should get compiled to just L\"[abcd]\"\n  auto re = std::wregex(L'[' + std::wstring(300, L'a') + L\"bc\"\n                        + std::wstring(1000, 'a') + L\"d]\");\n  bool ok = true;\n  for (int i = 0; i < 100000; ++i)\n    ok = ok && (std::regex_match(L\"b\", re) && std::regex_match(L\"d\", re));\n\n  stop_counters(time, resource);\n  report_performance(__FILE__, \"\", time, resource);\n\n  return ok ? 0 : 1;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2014", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "re", "gex", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "performance", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġ__", "gnu", "_", "test", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtime", "_", "counter", "Ġtime", ";", "Ċ", "Ġ", "Ġresource", "_", "counter", "Ġresource", ";", "ĊĊ", "Ġ", "Ġstart", "_", "c", "ounters", "(", "time", ",", "Ġresource", ");", "ĊĊ", "Ġ", "Ġ//", "Ġthis", "Ġshould", "Ġget", "Ġcompiled", "Ġto", "Ġjust", "ĠL", "\"[", "ab", "cd", "]\"", "Ċ", "Ġ", "Ġauto", "Ġre", "Ġ=", "Ġstd", "::", "w", "re", "gex", "(", "L", "'", "['", "Ġ+", "Ġstd", "::", "w", "string", "(", "300", ",", "ĠL", "'", "a", "')", "Ġ+", "ĠL", "\"", "bc", "\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ+", "Ġstd", "::", "w", "string", "(", "1000", ",", "Ġ'", "a", "')", "Ġ+", "ĠL", "\"", "d", "]", "\");", "Ċ", "Ġ", "Ġbool", "Ġok", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100", "000", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġok", "Ġ=", "Ġok", "Ġ&&", "Ġ(", "std", "::", "re", "gex", "_", "match", "(", "L", "\"", "b", "\",", "Ġre", ")", "Ġ&&", "Ġstd", "::", "re", "gex", "_", "match", "(", "L", "\"", "d", "\",", "Ġre", "));", "ĊĊ", "Ġ", "Ġstop", "_", "c", "ounters", "(", "time", ",", "Ġresource", ");", "Ċ", "Ġ", "Ġreport", "_", "performance", "(", "__", "FILE", "__", ",", "Ġ\"", "\",", "Ġtime", ",", "Ġresource", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġok", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["time", 5, "comesFrom", ["time"], [2]], ["time", 22, "comesFrom", ["time"], [2]], ["time", 26, "comesFrom", ["time"], [2]], ["resource", 6, "comesFrom", ["resource"], [3]], ["resource", 23, "comesFrom", ["resource"], [3]], ["resource", 27, "comesFrom", ["resource"], [3]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 14, "comesFrom", ["i"], [12]], ["ok", 16, "comesFrom", ["ok"], [15]], ["ok", 28, "comesFrom", ["ok"], [15]], ["re", 18, "comesFrom", ["re"], [7]], ["re", 20, "comesFrom", ["re"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::313", "code": "//\n//  Copyright (c) 2000-2002\n//  Joerg Walter, Mathias Koch\n//\n//  Distributed under the Boost Software License, Version 1.0. (See\n//  accompanying file LICENSE_1_0.txt or copy at\n//  http://www.boost.org/LICENSE_1_0.txt)\n//\n//  The authors gratefully acknowledge the support of\n//  GeNeSys mbH & Co. KG in producing this work.\n//\n\n#include <boost/numeric/ublas/vector_sparse.hpp>\n#include <boost/numeric/ublas/io.hpp>\n\nint main () {\n    using namespace boost::numeric::ublas;\n    coordinate_vector<double> v (3, 3);\n    for (unsigned i = 0; i < v.size (); ++ i)\n        v (i) = i;\n    std::cout << v << std::endl;\n}\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2000", "-", "2002", "Ċ", "//", "Ġ", "ĠJo", "erg", "ĠWalter", ",", "ĠMath", "ias", "ĠKoch", "Ċ", "//", "Ċ", "//", "Ġ", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ċ", "//", "Ġ", "Ġaccompanying", "Ġfile", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "//", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//", "Ċ", "//", "Ġ", "ĠThe", "Ġauthors", "Ġgrate", "fully", "Ġacknowledge", "Ġthe", "Ġsupport", "Ġof", "Ċ", "//", "Ġ", "ĠGe", "Ne", "Sys", "Ġm", "b", "H", "Ġ&", "ĠCo", ".", "ĠK", "G", "Ġin", "Ġproducing", "Ġthis", "Ġwork", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "n", "umeric", "/", "ub", "las", "/", "vector", "_", "s", "parse", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "n", "umeric", "/", "ub", "las", "/", "io", ".", "h", "pp", ">", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġusing", "Ġnamespace", "Ġboost", "::", "n", "umeric", "::", "ub", "las", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcoordinate", "_", "vector", "<", "double", ">", "Ġv", "Ġ(", "3", ",", "Ġ3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġv", ".", "size", "Ġ();", "Ġ++", "Ġi", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġv", "Ġ(", "i", ")", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġv", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 7, "comesFrom", ["i"], [3]], ["i", 9, "comesFrom", ["i"], [3]], ["i", 10, "comesFrom", ["i"], [3]], ["v", 5, "comesFrom", ["v"], [2]], ["v", 8, "comesFrom", ["v"], [2]], ["v", 12, "comesFrom", ["v"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::314", "code": "#include \"barnacoin-config.h\"\n#include <cstddef>\n#include <sys/select.h>\n\n// Prior to GLIBC_2.14, memcpy was aliased to memmove.\nextern \"C\" void* memmove(void* a, const void* b, size_t c);\nextern \"C\" void* memcpy(void* a, const void* b, size_t c)\n{\n  return memmove(a, b, c);\n}\n\nextern \"C\" void __chk_fail (void) __attribute__((__noreturn__));\nextern \"C\" FDELT_TYPE __fdelt_warn(FDELT_TYPE a)\n{\n  if (a >= FD_SETSIZE)\n    __chk_fail ();\n  return a / __NFDBITS;\n}\nextern \"C\" FDELT_TYPE __fdelt_chk(FDELT_TYPE) __attribute__((weak, alias(\"__fdelt_warn\")));\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "b", "arn", "aco", "in", "-", "config", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "c", "st", "dd", "ef", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "select", ".", "h", ">", "Ċ", "Ċ", "//", "ĠPrior", "Ġto", "ĠGL", "I", "BC", "_", "2", ".", "14", ",", "Ġmem", "c", "py", "Ġwas", "Ġali", "ased", "Ġto", "Ġmem", "move", ".", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġvoid", "*", "Ġmem", "move", "(", "void", "*", "Ġa", ",", "Ġconst", "Ġvoid", "*", "Ġb", ",", "Ġsize", "_", "t", "Ġc", ");", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġvoid", "*", "Ġmem", "c", "py", "(", "void", "*", "Ġa", ",", "Ġconst", "Ġvoid", "*", "Ġb", ",", "Ġsize", "_", "t", "Ġc", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmem", "move", "(", "a", ",", "Ġb", ",", "Ġc", ");", "Ċ", "}", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġvoid", "Ġ__", "ch", "k", "_", "fail", "Ġ(", "void", ")", "Ġ__", "attribute", "__", "((", "__", "n", "oret", "urn", "__", "));", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "ĠFD", "EL", "T", "_", "TYPE", "Ġ__", "fd", "elt", "_", "warn", "(", "FD", "EL", "T", "_", "TYPE", "Ġa", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "a", "Ġ>=", "ĠFD", "_", "SET", "SIZE", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ__", "ch", "k", "_", "fail", "Ġ();", "Ċ", "Ġ", "Ġreturn", "Ġa", "Ġ/", "Ġ__", "NF", "DB", "ITS", ";", "Ċ", "}", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "ĠFD", "EL", "T", "_", "TYPE", "Ġ__", "fd", "elt", "_", "ch", "k", "(", "FD", "EL", "T", "_", "TYPE", ")", "Ġ__", "attribute", "__", "((", "weak", ",", "Ġalias", "(\"", "__", "fd", "elt", "_", "warn", "\"))", ");", "Ċ"], "dataflow_graph": [["a", 16, "comesFrom", ["a"], [15]], ["a", 19, "comesFrom", ["a"], [15]], ["c", 11, "comesFrom", ["c"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::315", "code": "#include \"engine/os.h\"\n#include \"engine/win/simple_win.h\"\n#include \"editor/studio_app.h\"\n\nint main(int argc, char* argv[])\n{\n\tSetProcessDPIAware();\n\tvoid* shcore = Lumix::os::loadLibrary(\"shcore.dll\");\n\tif (shcore) {\n\t\tauto setter = (decltype(&SetProcessDpiAwareness))Lumix::os::getLibrarySymbol(shcore, \"SetProcessDpiAwareness\");\n\t\tif (setter) setter(PROCESS_PER_MONITOR_DPI_AWARE);\n\t}\n\n\tauto* app = Lumix::StudioApp::create();\n\tapp->run();\n\tconst int exit_code = app->getExitCode();\n\tLumix::StudioApp::destroy(*app);\n\tif(shcore) Lumix::os::unloadLibrary(shcore);\n\treturn exit_code;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "engine", "/", "os", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "engine", "/", "win", "/", "simple", "_", "win", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "editor", "/", "stud", "io", "_", "app", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "Set", "Process", "DP", "IA", "ware", "();", "Ċ", "ĉ", "void", "*", "Ġsh", "core", "Ġ=", "ĠLum", "ix", "::", "os", "::", "load", "Library", "(\"", "sh", "core", ".", "dll", "\");", "Ċ", "ĉ", "if", "Ġ(", "sh", "core", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "auto", "Ġset", "ter", "Ġ=", "Ġ(", "decl", "type", "(&", "Set", "Process", "D", "pi", "A", "ware", "ness", "))", "L", "um", "ix", "::", "os", "::", "get", "Library", "Sy", "mbol", "(", "sh", "core", ",", "Ġ\"", "Set", "Process", "D", "pi", "A", "ware", "ness", "\");", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "set", "ter", ")", "Ġset", "ter", "(", "PR", "OC", "ESS", "_", "PER", "_", "MON", "IT", "OR", "_", "DP", "I", "_", "AW", "ARE", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "auto", "*", "Ġapp", "Ġ=", "ĠLum", "ix", "::", "Studio", "App", "::", "create", "();", "Ċ", "ĉ", "app", "->", "run", "();", "Ċ", "ĉ", "const", "Ġint", "Ġexit", "_", "code", "Ġ=", "Ġapp", "->", "get", "Exit", "Code", "();", "Ċ", "ĉ", "L", "um", "ix", "::", "Studio", "App", "::", "destroy", "(*", "app", ");", "Ċ", "ĉ", "if", "(", "sh", "core", ")", "ĠLum", "ix", "::", "os", "::", "un", "load", "Library", "(", "sh", "core", ");", "Ċ", "ĉ", "return", "Ġexit", "_", "code", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["setter", 11, "comesFrom", ["setter"], [7]], ["setter", 12, "comesFrom", ["setter"], [7]], ["exit_code", 26, "comesFrom", ["exit_code"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::316", "code": "#include <cstdio>\r\n#include \"MyDebugger.h\"\r\n\r\nint main()\r\n{\r\n#ifdef _WIN64\r\n\twchar_t szFilePath[256] = L\"c:\\\\test64.exe\";\r\n#else //x86\r\n\twchar_t szFilePath[256] = L\"c:\\\\test32.exe\";\r\n#endif //_WIN64\r\n\twchar_t szCommandLine[256] = L\"\";\r\n\twchar_t szCurrentDir[256] = L\"c:\\\\\";\r\n\tMyDebugger dbg;\r\n\tif (dbg.Init(szFilePath, szCommandLine, szCurrentDir))\r\n\t{\r\n\t\tputs(\"Debugger::Init success!\");\r\n\t\tdbg.Start();\r\n\t\tputs(\"Debugger::Start finished!\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tputs(\"Debugger::Init failed!\");\r\n\t}\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "Ġ\"", "My", "Debug", "ger", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "#", "if", "def", "Ġ_", "WIN", "64", "č", "Ċ", "ĉ", "w", "char", "_", "t", "Ġs", "z", "File", "Path", "[", "256", "]", "Ġ=", "ĠL", "\"", "c", ":", "\\\\", "test", "64", ".", "exe", "\";", "č", "Ċ", "#", "else", "Ġ//", "x", "86", "č", "Ċ", "ĉ", "w", "char", "_", "t", "Ġs", "z", "File", "Path", "[", "256", "]", "Ġ=", "ĠL", "\"", "c", ":", "\\\\", "test", "32", ".", "exe", "\";", "č", "Ċ", "#", "endif", "Ġ//", "_", "WIN", "64", "č", "Ċ", "ĉ", "w", "char", "_", "t", "Ġs", "z", "Command", "Line", "[", "256", "]", "Ġ=", "ĠL", "\"", "\";", "č", "Ċ", "ĉ", "w", "char", "_", "t", "Ġs", "z", "Current", "Dir", "[", "256", "]", "Ġ=", "ĠL", "\"", "c", ":", "\\\\", "\";", "č", "Ċ", "ĉ", "My", "Debug", "ger", "Ġdb", "g", ";", "č", "Ċ", "ĉ", "if", "Ġ(", "db", "g", ".", "Init", "(", "s", "z", "File", "Path", ",", "Ġs", "z", "Command", "Line", ",", "Ġs", "z", "Current", "Dir", "))", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "put", "s", "(\"", "Debug", "ger", "::", "Init", "Ġsuccess", "!\"", ");", "č", "Ċ", "ĉ", "ĉ", "db", "g", ".", "Start", "();", "č", "Ċ", "ĉ", "ĉ", "put", "s", "(\"", "Debug", "ger", "::", "Start", "Ġfinished", "!\"", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "else", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "put", "s", "(\"", "Debug", "ger", "::", "Init", "Ġfailed", "!\"", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "system", "(\"", "pause", "\");", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["dbg", 7, "comesFrom", ["dbg"], [6]], ["dbg", 13, "comesFrom", ["dbg"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::317", "code": "﻿#include <QCoreApplication>\n#include \"qcomputerinfo.h\"\n\n#pragma comment(lib,\"./../../daodaoliang/bin/QComputerInfo.lib\")\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication a(argc, argv);\n    QComputerInfo temp_computer_info;\n    bool flag = false;\n    qDebug()<<\"MAC:\"<<temp_computer_info.getMAC(flag);\n    qDebug()<<\"MAC get result:\"<<flag;\n    qDebug()<<\"VolumeSerialNumber:\"<<temp_computer_info.getVolumeSerialNumber(flag);\n    qDebug()<<\"VolumeSerialNumber get result:\"<<flag;\n    qDebug()<<\"HardDiskSerialNumber:\"<<temp_computer_info.getHardDiskSerialNumber(flag);\n    qDebug()<<\"HardDiskSerialNumber get result:\"<<flag;\n    qDebug()<<\"NumberOfProcessors:\"<<temp_computer_info.getCPUCount(flag);\n    qDebug()<<\"NumberOfProcessors get result:\"<<flag;\n    qDebug()<<\"SysVersion :\"<<temp_computer_info.getSysVersion(flag);\n    qDebug()<<\"SysVersion get result:\"<<flag;\n    int m_total_size , m_available = 0;\n    qDebug()<<\"Disksize get result:\"<<temp_computer_info.getDiskSize(m_total_size,m_available);\n    qDebug()<<\"Disksize  :\"<<\"m_total_size:\"<<m_total_size<<\" m_available:\"<<m_available;\n    return a.exec();\n}\n", "code_tokens": ["Ġï", "»", "¿", "#", "include", "Ġ<", "Q", "Core", "Application", ">", "Ċ", "#", "include", "Ġ\"", "q", "computer", "info", ".", "h", "\"", "Ċ", "Ċ", "#", "pr", "ag", "ma", "Ġcomment", "(", "lib", ",\"", "./", "../", "../", "da", "oda", "oli", "ang", "/", "bin", "/", "Q", "Computer", "Info", ".", "lib", "\")", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Core", "Application", "Ġa", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Computer", "Info", "Ġtemp", "_", "computer", "_", "info", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġflag", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "MAC", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "MAC", "(", "flag", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "MAC", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Volume", "Serial", "Number", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "Volume", "Serial", "Number", "(", "flag", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Volume", "Serial", "Number", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Hard", "Disk", "Serial", "Number", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "Hard", "Disk", "Serial", "Number", "(", "flag", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Hard", "Disk", "Serial", "Number", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Number", "Of", "Process", "ors", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "CPU", "Count", "(", "flag", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Number", "Of", "Process", "ors", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Sys", "Version", "Ġ:", "\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "Sys", "Version", "(", "flag", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Sys", "Version", "Ġget", "Ġresult", ":\"", "<<", "flag", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", "_", "total", "_", "size", "Ġ,", "Ġm", "_", "available", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Dis", "ks", "ize", "Ġget", "Ġresult", ":\"", "<<", "temp", "_", "computer", "_", "info", ".", "get", "Disk", "Size", "(", "m", "_", "total", "_", "size", ",", "m", "_", "available", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "<<", "\"", "Dis", "ks", "ize", "Ġ", "Ġ:", "\"", "<<", "\"", "m", "_", "total", "_", "size", ":\"", "<<", "m", "_", "total", "_", "size", "<<", "\"", "Ġm", "_", "available", ":\"", "<<", "m", "_", "available", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["temp_computer_info", 7, "comesFrom", ["temp_computer_info"], [4]], ["temp_computer_info", 13, "comesFrom", ["temp_computer_info"], [4]], ["temp_computer_info", 19, "comesFrom", ["temp_computer_info"], [4]], ["temp_computer_info", 25, "comesFrom", ["temp_computer_info"], [4]], ["temp_computer_info", 31, "comesFrom", ["temp_computer_info"], [4]], ["temp_computer_info", 39, "comesFrom", ["temp_computer_info"], [4]], ["flag", 9, "comesFrom", ["flag"], [5]], ["flag", 11, "comesFrom", ["flag"], [5]], ["flag", 15, "comesFrom", ["flag"], [5]], ["flag", 17, "comesFrom", ["flag"], [5]], ["flag", 21, "comesFrom", ["flag"], [5]], ["flag", 23, "comesFrom", ["flag"], [5]], ["flag", 27, "comesFrom", ["flag"], [5]], ["flag", 29, "comesFrom", ["flag"], [5]], ["flag", 33, "comesFrom", ["flag"], [5]], ["flag", 35, "comesFrom", ["flag"], [5]], ["m_total_size", 41, "comesFrom", ["m_total_size"], [36]], ["m_total_size", 44, "comesFrom", ["m_total_size"], [36]], ["m_available", 42, "comesFrom", ["m_available"], [37]], ["m_available", 45, "comesFrom", ["m_available"], [37]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::318", "code": "/*\n * Copyright (c) Simon Brunel, https://github.com/simonbrunel\n *\n * This source code is licensed under the MIT license found in\n * the LICENSE file in the root directory of this source tree.\n */\n\n#include <QtPromise>\n#include <QtTest>\n\nusing namespace QtPromisePrivate;\n\nclass tst_cpp14_argsof_lambda_auto : public QObject\n{\n    Q_OBJECT\n\nprivate Q_SLOTS:\n    void lambdaAutoArgs();\n};\n\nQTEST_MAIN(tst_cpp14_argsof_lambda_auto)\n#include \"tst_argsof_lambda_auto.moc\"\n\nvoid tst_cpp14_argsof_lambda_auto::lambdaAutoArgs()\n{\n    auto lOneArg = [](auto) {};\n    auto lManyArgs = [](const auto&, auto, auto) {};\n    auto lMutable = [](const auto&, auto) mutable {};\n\n    Q_STATIC_ASSERT((ArgsOf<decltype(lOneArg)>::count == 0));\n    Q_STATIC_ASSERT((ArgsOf<decltype(lManyArgs)>::count == 0));\n    Q_STATIC_ASSERT((ArgsOf<decltype(lMutable)>::count == 0));\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "ĠSimon", "ĠBrun", "el", ",", "Ġhttps", "://", "github", ".", "com", "/", "sim", "on", "br", "un", "el", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġsource", "Ġcode", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġlicense", "Ġfound", "Ġin", "Ċ", "Ġ*", "Ġthe", "ĠLIC", "ENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġdirectory", "Ġof", "Ġthis", "Ġsource", "Ġtree", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "t", "Prom", "ise", ">", "Ċ", "#", "include", "Ġ<", "Q", "t", "Test", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠQt", "Prom", "ise", "Private", ";", "Ċ", "Ċ", "class", "Ġt", "st", "_", "cpp", "14", "_", "arg", "so", "f", "_", "lambda", "_", "auto", "Ġ:", "Ġpublic", "ĠQ", "Object", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "OB", "JECT", "Ċ", "Ċ", "private", "ĠQ", "_", "SL", "OTS", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġlambda", "Auto", "Args", "();", "Ċ", "};", "Ċ", "Ċ", "Q", "T", "EST", "_", "MA", "IN", "(", "t", "st", "_", "cpp", "14", "_", "arg", "so", "f", "_", "lambda", "_", "auto", ")", "Ċ", "#", "include", "Ġ\"", "t", "st", "_", "arg", "so", "f", "_", "lambda", "_", "auto", ".", "m", "oc", "\"", "Ċ", "Ċ", "void", "Ġt", "st", "_", "cpp", "14", "_", "arg", "so", "f", "_", "lambda", "_", "auto", "::", "lambda", "Auto", "Args", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġl", "One", "Arg", "Ġ=", "Ġ[", "](", "auto", ")", "Ġ{", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġl", "Many", "Args", "Ġ=", "Ġ[", "](", "const", "Ġauto", "&", ",", "Ġauto", ",", "Ġauto", ")", "Ġ{", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġl", "M", "utable", "Ġ=", "Ġ[", "](", "const", "Ġauto", "&", ",", "Ġauto", ")", "Ġmut", "able", "Ġ{", "};", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "STAT", "IC", "_", "ASS", "ERT", "((", "Args", "Of", "<", "decl", "type", "(", "l", "One", "Arg", ")", ">", "::", "count", "Ġ==", "Ġ0", "));", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "STAT", "IC", "_", "ASS", "ERT", "((", "Args", "Of", "<", "decl", "type", "(", "l", "Many", "Args", ")", ">", "::", "count", "Ġ==", "Ġ0", "));", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "STAT", "IC", "_", "ASS", "ERT", "((", "Args", "Of", "<", "decl", "type", "(", "l", "M", "utable", ")", ">", "::", "count", "Ġ==", "Ġ0", "));", "Ċ", "}", "Ċ"], "dataflow_graph": [["lOneArg", 11, "comesFrom", ["lOneArg"], [7]], ["lManyArgs", 14, "comesFrom", ["lManyArgs"], [8]], ["lMutable", 17, "comesFrom", ["lMutable"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::319", "code": "#pragma once\n\n#include \"../../../../common.hpp\"\n\n#include \"../../MSExcel.common.hpp\"\n#include \"../../IParsable.hpp\"\n#include \"Ptg.hpp\"\n\nnamespace oless {\n\tnamespace excel {\n\t\tnamespace structures {\n\t\t\tnamespace formulas {\n\n            // see: https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/cdb2c99e-3784-416d-b7b3-eeb19bc66445\n\t\t\tclass ListParsedArrayFormula : public IParseable {\n\t\t\tpublic:\n\t\t\t\tvirtual void Parse(unsigned char* buffer, std::size_t max, unsigned int offset) override {\n\t\t\t\t\tunsigned int index = offset;\n\n                    this->bytesRead = index - offset;\n                }\n            };\n        }\n    }\n}\n", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "../", "../", "../", "common", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "../", "MS", "Ex", "cel", ".", "common", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "../", "../", "IP", "ars", "able", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "P", "tg", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġo", "less", "Ġ{", "Ċ", "ĉ", "names", "pace", "Ġexcel", "Ġ{", "Ċ", "ĉ", "ĉ", "names", "pace", "Ġstructures", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "names", "pace", "Ġformulas", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġsee", ":", "Ġhttps", "://", "docs", ".", "microsoft", ".", "com", "/", "en", "-", "us", "/", "opens", "pe", "cs", "/", "office", "_", "file", "_", "form", "ats", "/", "ms", "-", "x", "ls", "/", "c", "db", "2", "c", "99", "e", "-", "37", "84", "-", "416", "d", "-", "b", "7", "b", "3", "-", "ee", "b", "19", "bc", "6", "64", "45", "Ċ", "ĉ", "ĉ", "ĉ", "class", "ĠList", "P", "ars", "ed", "Array", "Form", "ula", "Ġ:", "Ġpublic", "ĠIP", "arse", "able", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "virtual", "Ġvoid", "ĠPar", "se", "(", "unsigned", "Ġchar", "*", "Ġbuffer", ",", "Ġstd", "::", "size", "_", "t", "Ġmax", ",", "Ġunsigned", "Ġint", "Ġoffset", ")", "Ġoverride", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "unsigned", "Ġint", "Ġindex", "Ġ=", "Ġoffset", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "bytes", "Read", "Ġ=", "Ġindex", "Ġ-", "Ġoffset", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["index", 7, "comesFrom", ["index"], [4]], ["offset", 8, "comesFrom", ["offset"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::320", "code": "/*\r\n\tProblem: Ural1465\r\n\tAlgorithm: Seek patterns\r\n\tTime: O()\r\n\tMemory: O()\r\n\tDetail: \r\n\tCoded by [BUPT]AkemiHomura\r\n*/\r\n\r\n#include <cstdio>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nint N;\r\n\r\nint main()\r\n{\r\n\tscanf(\"%d\", &N);\r\n\tif (N <= 34)\r\n\t{\r\n\t\tif (N==4 || N==8 || N==14 || N==20 || N==24 || N==28 || N==34) printf(\"Black\\n\");\r\n\t\telse printf(\"White\\n\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (N%34==20 || N%34==24 || N%34==28 || N%34==4 || N%34==8) printf(\"Black\\n\");\r\n\t\telse printf(\"White\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "ĉ", "Problem", ":", "ĠU", "ral", "14", "65", "č", "Ċ", "ĉ", "Al", "gorithm", ":", "ĠSeek", "Ġpatterns", "č", "Ċ", "ĉ", "Time", ":", "ĠO", "()", "č", "Ċ", "ĉ", "Memory", ":", "ĠO", "()", "č", "Ċ", "ĉ", "Det", "ail", ":", "Ġ", "č", "Ċ", "ĉ", "C", "oded", "Ġby", "Ġ[", "B", "UP", "T", "]", "A", "ke", "mi", "Hom", "ura", "č", "Ċ", "*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "ĠN", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "N", ");", "č", "Ċ", "ĉ", "if", "Ġ(", "N", "Ġ<=", "Ġ34", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "N", "==", "4", "Ġ||", "ĠN", "==", "8", "Ġ||", "ĠN", "==", "14", "Ġ||", "ĠN", "==", "20", "Ġ||", "ĠN", "==", "24", "Ġ||", "ĠN", "==", "28", "Ġ||", "ĠN", "==", "34", ")", "Ġprintf", "(\"", "Black", "\\", "n", "\");", "č", "Ċ", "ĉ", "ĉ", "else", "Ġprintf", "(\"", "White", "\\", "n", "\");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "else", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "N", "%", "34", "==", "20", "Ġ||", "ĠN", "%", "34", "==", "24", "Ġ||", "ĠN", "%", "34", "==", "28", "Ġ||", "ĠN", "%", "34", "==", "4", "Ġ||", "ĠN", "%", "34", "==", "8", ")", "Ġprintf", "(\"", "Black", "\\", "n", "\");", "č", "Ċ", "ĉ", "ĉ", "else", "Ġprintf", "(\"", "White", "\\", "n", "\");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["N", 4, "comesFrom", ["N"], [1]], ["N", 5, "comesFrom", ["N"], [1]], ["N", 6, "comesFrom", ["N"], [1]], ["N", 7, "comesFrom", ["N"], [1]], ["N", 8, "comesFrom", ["N"], [1]], ["N", 9, "comesFrom", ["N"], [1]], ["N", 10, "comesFrom", ["N"], [1]], ["N", 11, "comesFrom", ["N"], [1]], ["N", 12, "comesFrom", ["N"], [1]], ["N", 15, "comesFrom", ["N"], [1]], ["N", 16, "comesFrom", ["N"], [1]], ["N", 17, "comesFrom", ["N"], [1]], ["N", 18, "comesFrom", ["N"], [1]], ["N", 19, "comesFrom", ["N"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::321", "code": "#include <iostream>\n#include <cstdlib>\n\nvoid get_grade(int g)\n{\n   std::cout << g << std::endl;\n \n   if (g >= 90 && g <= 100) {\n       std::cout << \"A\";\n   } else if (g >= 80 && g <= 89) {\n       std::cout << \"B\";\n   } else if (g >= 70 && g <= 79) {\n       std::cout << \"C\";\n   } else if (g >= 60 && g <= 69) {\n       std::cout << \"D\";\n   } else if (g >= 0  && g <= 59) {\n       std::cout << \"F\";\n   } else {\n       std::cout << \"Please put a number.\";\n   }\n   std::cout << std::endl;\n}\n\nint main(int argc, char** argv)\n{\n    std::cout << \"what is your score?\" << std::endl;\n    get_grade(rand() % 100);\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "Ċ", "void", "Ġget", "_", "grade", "(", "int", "Ġg", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġg", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ90", "Ġ&&", "Ġg", "Ġ<=", "Ġ100", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "A", "\";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ80", "Ġ&&", "Ġg", "Ġ<=", "Ġ89", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "B", "\";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ70", "Ġ&&", "Ġg", "Ġ<=", "Ġ79", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "C", "\";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ60", "Ġ&&", "Ġg", "Ġ<=", "Ġ69", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "D", "\";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "g", "Ġ>=", "Ġ0", "Ġ", "Ġ&&", "Ġg", "Ġ<=", "Ġ59", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "F", "\";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Please", "Ġput", "Ġa", "Ġnumber", ".\"", ";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "what", "Ġis", "Ġyour", "Ġscore", "?\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġget", "_", "grade", "(", "rand", "()", "Ġ%", "Ġ100", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["g", 3, "comesFrom", ["g"], [1]], ["g", 5, "comesFrom", ["g"], [1]], ["g", 6, "comesFrom", ["g"], [1]], ["g", 8, "comesFrom", ["g"], [1]], ["g", 9, "comesFrom", ["g"], [1]], ["g", 11, "comesFrom", ["g"], [1]], ["g", 12, "comesFrom", ["g"], [1]], ["g", 14, "comesFrom", ["g"], [1]], ["g", 15, "comesFrom", ["g"], [1]], ["g", 17, "comesFrom", ["g"], [1]], ["g", 18, "comesFrom", ["g"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::322", "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<sstream>\n#include<cstdlib>\n#include\"CHEBYSHEV/Chebyshev.hpp\"\n#include\"LAGRANGE/Lagrange.hpp\"\n#include\"CPLOT/cplot.hpp\"\n\nint main(int argc, char* argv[]) {\n\tstd::vector<int> Nall;\n\tNall.push_back(5);\n\tfor (int j=0; j<7; ++j) {\n\t\tNall.push_back(2*Nall[j]);\n\t}\n\tsrand(time(NULL));\n\tdouble RMAX\t=\tRAND_MAX;\n\tfor (int j=0; j<Nall.size(); ++j) {\n\t\tint N\t=\tNall[j];\n\t\tstd::vector<double> fNodes;\n\t\tstd::vector<double> xNodes\t=\tget_Standard_Chebyshev_Nodes(N);\n\t\tfor (int k=0; k<N; ++k) {\n\t\t\tfNodes.push_back(rand()/RMAX);\n\t\t}\n\t\tLagrange L(xNodes, fNodes);\n\t\tstd::ostringstream fileName;\n\t\tfileName << \"Interp_\" << N << \".tex\";\n\t\tL.drawplot(-1,1,fileName.str());\n\t}\n}", "code_tokens": ["Ġ#", "include", "<", "i", "ost", "ream", ">", "Ċ", "#", "include", "<", "vector", ">", "Ċ", "#", "include", "<", "c", "math", ">", "Ċ", "#", "include", "<", "s", "stream", ">", "Ċ", "#", "include", "<", "c", "std", "lib", ">", "Ċ", "#", "include", "\"", "CH", "E", "BY", "SH", "EV", "/", "Che", "bys", "he", "v", ".", "h", "pp", "\"", "Ċ", "#", "include", "\"", "L", "AG", "R", "ANGE", "/", "L", "ag", "range", ".", "h", "pp", "\"", "Ċ", "#", "include", "\"", "C", "PL", "OT", "/", "c", "plot", ".", "h", "pp", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ġ{", "Ċ", "ĉ", "std", "::", "vector", "<", "int", ">", "ĠN", "all", ";", "Ċ", "ĉ", "N", "all", ".", "push", "_", "back", "(", "5", ");", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġj", "=", "0", ";", "Ġj", "<", "7", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "N", "all", ".", "push", "_", "back", "(", "2", "*", "N", "all", "[", "j", "]);", "Ċ", "ĉ", "}", "Ċ", "ĉ", "s", "rand", "(", "time", "(", "NULL", "));", "Ċ", "ĉ", "double", "ĠR", "MAX", "ĉ", "=", "ĉ", "R", "AND", "_", "MAX", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġj", "=", "0", ";", "Ġj", "<", "N", "all", ".", "size", "();", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "ĠN", "ĉ", "=", "ĉ", "N", "all", "[", "j", "];", "Ċ", "ĉ", "ĉ", "std", "::", "vector", "<", "double", ">", "Ġf", "N", "odes", ";", "Ċ", "ĉ", "ĉ", "std", "::", "vector", "<", "double", ">", "Ġx", "N", "odes", "ĉ", "=", "ĉ", "get", "_", "Standard", "_", "Che", "bys", "he", "v", "_", "N", "odes", "(", "N", ");", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġk", "=", "0", ";", "Ġk", "<", "N", ";", "Ġ++", "k", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "f", "N", "odes", ".", "push", "_", "back", "(", "rand", "()", "/", "R", "MAX", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "L", "ag", "range", "ĠL", "(", "x", "N", "odes", ",", "Ġf", "N", "odes", ");", "Ċ", "ĉ", "ĉ", "std", "::", "ost", "ring", "stream", "Ġfile", "Name", ";", "Ċ", "ĉ", "ĉ", "file", "Name", "Ġ<<", "Ġ\"", "Inter", "p", "_", "\"", "Ġ<<", "ĠN", "Ġ<<", "Ġ\".", "tex", "\";", "Ċ", "ĉ", "ĉ", "L", ".", "draw", "plot", "(-", "1", ",", "1", ",", "file", "Name", ".", "str", "());", "Ċ", "ĉ", "}", "Ċ", "}"], "dataflow_graph": [["Nall", 4, "comesFrom", ["Nall"], [3]], ["Nall", 9, "comesFrom", ["Nall"], [3]], ["Nall", 11, "comesFrom", ["Nall"], [3]], ["Nall", 19, "comesFrom", ["Nall"], [3]], ["Nall", 23, "comesFrom", ["Nall"], [3]], ["j", 7, "comesFrom", ["j"], [6]], ["j", 8, "comesFrom", ["j"], [6]], ["j", 12, "comesFrom", ["j"], [6]], ["j", 18, "comesFrom", ["j"], [17]], ["j", 21, "comesFrom", ["j"], [17]], ["j", 24, "comesFrom", ["j"], [17]], ["N", 28, "comesFrom", ["N"], [22]], ["N", 31, "comesFrom", ["N"], [22]], ["N", 40, "comesFrom", ["N"], [22]], ["k", 30, "comesFrom", ["k"], [29]], ["k", 32, "comesFrom", ["k"], [29]], ["fNodes", 33, "comesFrom", ["fNodes"], [25]], ["RMAX", 36, "comesFrom", ["RMAX"], [15]], ["fileName", 39, "comesFrom", ["fileName"], [38]], ["fileName", 43, "comesFrom", ["fileName"], [38]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::323", "code": "#include <RomanceEngine/GUI/value_bar.h>\n#include <RomanceEngine/Render/primitive_renderer.h>\n\nnamespace RomanceEngine {\nnamespace GUI {\n\nvoid ValueBar::click(const Math::Float2& p)\n{\n  GUIObject::click(p);\n  float w = getRegion().width();\n  float pos = p.x_ - getRegion().left();\n  value_ = pos / w;\n}\n\nvoid ValueBar::render(const Render::RenderContextPtr& context)\n{\n  Render::PrimitiveRenderer pr(context);\n  pr.drawRect(region_, Math::Float4(0.5f, 0.5f, 0.5f, 1.0f));\n  \n  Math::Rect valueRect = region_;\n  valueRect.size_.x_ *= value_;\n  pr.drawRect(valueRect, Math::Float4(0.3f, 0.3f, 0.8f, 1.0f));\n}\n  \n\n} // GUI\n} // RomanceEngine", "code_tokens": ["Ġ#", "include", "Ġ<", "Rom", "ance", "Engine", "/", "GUI", "/", "value", "_", "bar", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Rom", "ance", "Engine", "/", "Render", "/", "prim", "itive", "_", "rend", "erer", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "ĠRomance", "Engine", "Ġ{", "Ċ", "names", "pace", "ĠGUI", "Ġ{", "Ċ", "Ċ", "void", "ĠValue", "Bar", "::", "click", "(", "const", "ĠMath", "::", "Float", "2", "&", "Ġp", ")", "Ċ", "{", "Ċ", "Ġ", "ĠGUI", "Object", "::", "click", "(", "p", ");", "Ċ", "Ġ", "Ġfloat", "Ġw", "Ġ=", "Ġget", "Region", "().", "width", "();", "Ċ", "Ġ", "Ġfloat", "Ġpos", "Ġ=", "Ġp", ".", "x", "_", "Ġ-", "Ġget", "Region", "().", "left", "();", "Ċ", "Ġ", "Ġvalue", "_", "Ġ=", "Ġpos", "Ġ/", "Ġw", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠValue", "Bar", "::", "render", "(", "const", "ĠRender", "::", "Render", "Context", "Ptr", "&", "Ġcontext", ")", "Ċ", "{", "Ċ", "Ġ", "ĠRender", "::", "Prim", "itive", "R", "end", "erer", "Ġpr", "(", "context", ");", "Ċ", "Ġ", "Ġpr", ".", "draw", "Rect", "(", "region", "_", ",", "ĠMath", "::", "Float", "4", "(", "0", ".", "5", "f", ",", "Ġ0", ".", "5", "f", ",", "Ġ0", ".", "5", "f", ",", "Ġ1", ".", "0", "f", "));", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "ĠMath", "::", "Rect", "Ġvalue", "Rect", "Ġ=", "Ġregion", "_", ";", "Ċ", "Ġ", "Ġvalue", "Rect", ".", "size", "_.", "x", "_", "Ġ*", "=", "Ġvalue", "_", ";", "Ċ", "Ġ", "Ġpr", ".", "draw", "Rect", "(", "value", "Rect", ",", "ĠMath", "::", "Float", "4", "(", "0", ".", "3", "f", ",", "Ġ0", ".", "3", "f", ",", "Ġ0", ".", "8", "f", ",", "Ġ1", ".", "0", "f", "));", "Ċ", "}", "Ċ", "Ġ", "Ġ", "Ċ", "Ċ", "}", "Ġ//", "ĠGUI", "Ċ", "}", "Ġ//", "ĠRomance", "Engine"], "dataflow_graph": [["pos", 13, "comesFrom", ["pos"], [7]], ["w", 14, "comesFrom", ["w"], [4]], ["valueRect", 24, "comesFrom", ["valueRect"], [22]], ["valueRect", 30, "comesFrom", ["valueRect"], [22]], ["value_", 27, "comesFrom", ["value_"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::324", "code": "#include \"nau/event/eventFloat.h\"\n\nusing namespace nau::event_;\n\nEventFloat::EventFloat(float flt)\n{\n\tthis->flt=flt;\n}\n\nEventFloat::EventFloat(const EventFloat &s)\n{\n\tflt=s.flt;\n}\n\nEventFloat::EventFloat(void)\n{\n\tflt=0;\n}\n\nEventFloat::~EventFloat(void)\n{\n}\n\nvoid EventFloat::setData(void *data)\n{\n\tfloat *d=(float*)data;\n\tthis->flt=*d;\n}\n\n\nvoid *EventFloat::getData(void)\n{\n\treturn &flt;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "n", "au", "/", "event", "/", "event", "Float", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġn", "au", "::", "event", "_", ";", "Ċ", "Ċ", "Event", "Float", "::", "Event", "Float", "(", "float", "Ġfl", "t", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "f", "lt", "=", "f", "lt", ";", "Ċ", "}", "Ċ", "Ċ", "Event", "Float", "::", "Event", "Float", "(", "const", "ĠEvent", "Float", "Ġ&", "s", ")", "Ċ", "{", "Ċ", "ĉ", "f", "lt", "=", "s", ".", "f", "lt", ";", "Ċ", "}", "Ċ", "Ċ", "Event", "Float", "::", "Event", "Float", "(", "void", ")", "Ċ", "{", "Ċ", "ĉ", "f", "lt", "=", "0", ";", "Ċ", "}", "Ċ", "Ċ", "Event", "Float", "::", "~", "Event", "Float", "(", "void", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠEvent", "Float", "::", "set", "Data", "(", "void", "Ġ*", "data", ")", "Ċ", "{", "Ċ", "ĉ", "float", "Ġ*", "d", "=(", "float", "*)", "data", ";", "Ċ", "ĉ", "this", "->", "f", "lt", "=", "*", "d", ";", "Ċ", "}", "ĊĊ", "Ċ", "void", "Ġ*", "Event", "Float", "::", "get", "Data", "(", "void", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ&", "f", "lt", ";", "Ċ", "}"], "dataflow_graph": [["flt", 3, "comesFrom", ["flt"], [2]], ["flt", 4, "comesFrom", ["flt"], [2]], ["flt", 9, "comesFrom", ["flt"], [7]], ["flt", 17, "comesFrom", ["flt"], [11]], ["flt", 20, "comesFrom", ["flt"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::325", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define sd(x) scanf(\"%d\",&x)\n#define su(x) scanf(\"%u\",&x)\n#define slld(x) scanf(\"%lld\",&x)\n#define sc(x) scanf(\"%c\",&x)\n#define ss(x) scanf(\"%s\",x)\n#define sf(x) scanf(\"%f\",&x)\n#define slf(x) scanf(\"%lf\",&x)\n#define ll long long int\n#define mod(x,n) (x+n)%n\n\nint ceil(int n,int x) // x/n\n{\n\tif(n%x==0)\n\t\treturn n/x;\n\treturn n/x+1;\n}\n\nint main()\n{\n\t// freopen(\"input_file_name.in\",\"r\",stdin);\n\t// freopen(\"output_file_name.out\",\"w\",stdout);\n\n\tint i,j,k,l=0,m,n;\n\n\tsd(n);\tsd(k);\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tsd(m);\n\t\tl+=ceil(m,k);\n\t}\n\n\tprintf(\"%d\\n\", ceil(l,2) );\n\t\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "define", "Ġsd", "(", "x", ")", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "x", ")", "Ċ", "#", "define", "Ġsu", "(", "x", ")", "Ġscan", "f", "(\"", "%", "u", "\",", "&", "x", ")", "Ċ", "#", "define", "Ġs", "ll", "d", "(", "x", ")", "Ġscan", "f", "(\"", "%", "ll", "d", "\",", "&", "x", ")", "Ċ", "#", "define", "Ġsc", "(", "x", ")", "Ġscan", "f", "(\"", "%", "c", "\",", "&", "x", ")", "Ċ", "#", "define", "Ġss", "(", "x", ")", "Ġscan", "f", "(\"", "%", "s", "\",", "x", ")", "Ċ", "#", "define", "Ġs", "f", "(", "x", ")", "Ġscan", "f", "(\"", "%", "f", "\",", "&", "x", ")", "Ċ", "#", "define", "Ġsl", "f", "(", "x", ")", "Ġscan", "f", "(\"", "%", "lf", "\",", "&", "x", ")", "Ċ", "#", "define", "Ġll", "Ġlong", "Ġlong", "Ġint", "Ċ", "#", "define", "Ġmod", "(", "x", ",", "n", ")", "Ġ(", "x", "+", "n", ")", "%", "n", "Ċ", "Ċ", "int", "Ġce", "il", "(", "int", "Ġn", ",", "int", "Ġx", ")", "Ġ//", "Ġx", "/", "n", "Ċ", "{", "Ċ", "ĉ", "if", "(", "n", "%", "x", "==", "0", ")", "Ċ", "ĉ", "ĉ", "return", "Ġn", "/", "x", ";", "Ċ", "ĉ", "return", "Ġn", "/", "x", "+", "1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "//", "Ġfre", "open", "(\"", "input", "_", "file", "_", "name", ".", "in", "\",\"", "r", "\",", "std", "in", ");", "Ċ", "ĉ", "//", "Ġfre", "open", "(\"", "output", "_", "file", "_", "name", ".", "out", "\",\"", "w", "\",", "std", "out", ");", "ĊĊ", "ĉ", "int", "Ġi", ",", "j", ",", "k", ",", "l", "=", "0", ",", "m", ",", "n", ";", "ĊĊ", "ĉ", "sd", "(", "n", ");", "ĉ", "sd", "(", "k", ");", "ĊĊ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "n", ";", "i", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "sd", "(", "m", ");", "Ċ", "ĉ", "ĉ", "l", "+=", "ce", "il", "(", "m", ",", "k", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "Ġce", "il", "(", "l", ",", "2", ")", "Ġ);", "Ċ", "ĉ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["x", 23, "comesFrom", ["x"], [21]], ["x", 25, "comesFrom", ["x"], [21]], ["x", 27, "comesFrom", ["x"], [21]], ["n", 22, "comesFrom", ["n"], [20]], ["n", 24, "comesFrom", ["n"], [20]], ["n", 26, "comesFrom", ["n"], [20]], ["n", 36, "comesFrom", ["n"], [34]], ["n", 41, "comesFrom", ["n"], [34]], ["k", 38, "comesFrom", ["k"], [31]], ["k", 48, "comesFrom", ["k"], [31]], ["i", 40, "comesFrom", ["i"], [39]], ["i", 42, "comesFrom", ["i"], [39]], ["m", 44, "comesFrom", ["m"], [33]], ["m", 47, "comesFrom", ["m"], [33]], ["l", 51, "comesFrom", ["l"], [45]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::326", "code": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int test,n,p;\n    cin>>test;\n    while(test--)\n    {\n        cin>>n>>p;\n        if(p==0)\n            cout<<\"Airborne wins.\"<<endl;\n        else\n            cout<<\"Pagfloyd wins.\"<<endl;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtest", ",", "n", ",", "p", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ">>", "test", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "test", "--", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ">>", "n", ">>", "p", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "p", "==", "0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "\"", "Air", "borne", "Ġwins", ".\"", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "\"", "P", "ag", "fl", "oyd", "Ġwins", ".\"", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["test", 6, "comesFrom", ["test"], [2]], ["test", 7, "comesFrom", ["test"], [2]], ["n", 9, "comesFrom", ["n"], [3]], ["p", 10, "comesFrom", ["p"], [4]], ["p", 11, "comesFrom", ["p"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::327", "code": "#include \"osgLuaBinding.h\"\n#include \"NodeScriptResultHandler.h\"\n\n\nNodeScriptResultHandler::NodeScriptResultHandler() :\n    LuaResultHandler(LuaResultHandler::UNLIMITED_RESULTS)\n{\n\n}\n\nNodeScriptResultHandler::~NodeScriptResultHandler()\n{\n\n}\n\nvoid NodeScriptResultHandler::handle(LuaState &luaState, unsigned int nbResults)\n{\n    if (nbResults == 0)\n    {\n        _node = 0;\n    }\n    else if (nbResults == 1)\n    {\n        _node = lua_toOsgNode(luaState, -1);\n    }\n    else\n    {\n        osg::ref_ptr<osg::Group> group = new osg::Group;\n        for (unsigned int i = nbResults; i > 0; --i)\n        {\n            osg::Node *node = lua_toOsgNode(luaState, -i);\n            group->addChild(node);\n        }\n\n        if (group->getNumChildren() == 1)\n        {\n            _node = group->getChild(0);\n        }\n        else if (group->getNumChildren() > 0)\n        {\n            _node = group;\n        }\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "os", "g", "Lua", "B", "inding", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Node", "Script", "Result", "Handler", ".", "h", "\"", "ĊĊ", "Ċ", "Node", "Script", "Result", "Handler", "::", "Node", "Script", "Result", "Handler", "()", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "ĠLua", "Result", "Handler", "(", "Lua", "Result", "Handler", "::", "UN", "L", "IM", "ITED", "_", "RESULTS", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Node", "Script", "Result", "Handler", "::", "~", "Node", "Script", "Result", "Handler", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNode", "Script", "Result", "Handler", "::", "handle", "(", "Lua", "State", "Ġ&", "lua", "State", ",", "Ġunsigned", "Ġint", "Ġn", "b", "Results", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "nb", "Results", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "node", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "nb", "Results", "Ġ==", "Ġ1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "node", "Ġ=", "Ġl", "ua", "_", "to", "Os", "g", "Node", "(", "lua", "State", ",", "Ġ-", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġos", "g", "::", "ref", "_", "ptr", "<", "os", "g", "::", "Group", ">", "Ġgroup", "Ġ=", "Ġnew", "Ġos", "g", "::", "Group", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġint", "Ġi", "Ġ=", "Ġn", "b", "Results", ";", "Ġi", "Ġ>", "Ġ0", ";", "Ġ--", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġos", "g", "::", "Node", "Ġ*", "node", "Ġ=", "Ġl", "ua", "_", "to", "Os", "g", "Node", "(", "lua", "State", ",", "Ġ-", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġgroup", "->", "add", "Child", "(", "node", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "group", "->", "get", "Num", "Children", "()", "Ġ==", "Ġ1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "node", "Ġ=", "Ġgroup", "->", "get", "Child", "(", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "group", "->", "get", "Num", "Children", "()", "Ġ>", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "node", "Ġ=", "Ġgroup", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["nbResults", 7, "comesFrom", ["nbResults"], [6]], ["nbResults", 9, "comesFrom", ["nbResults"], [6]], ["i", 16, "comesFrom", ["i"], [14]], ["i", 17, "comesFrom", ["i"], [14]], ["i", 21, "comesFrom", ["i"], [14]], ["group", 22, "comesFrom", ["group"], [13]], ["group", 25, "comesFrom", ["group"], [13]], ["group", 28, "comesFrom", ["group"], [13]], ["group", 30, "comesFrom", ["group"], [13]], ["group", 33, "comesFrom", ["group"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::328", "code": "#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  string s;\n  while (cin >> s && s != \"#\") {\n    if (next_permutation(s.begin(), s.end())) {\n      cout << s << endl;\n    } else {\n      cout << \"No Successor\" << endl;\n    }\n  }\n  return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġi", "os", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "Ċ", "Ġ", "Ġstring", "Ġs", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġs", "Ġ&&", "Ġs", "Ġ!=", "Ġ\"#", "\")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "next", "_", "perm", "utation", "(", "s", ".", "begin", "(),", "Ġs", ".", "end", "()", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġs", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "No", "ĠSuccess", "or", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["s", 5, "comesFrom", ["s"], [3]], ["s", 6, "comesFrom", ["s"], [3]], ["s", 8, "comesFrom", ["s"], [3]], ["s", 10, "comesFrom", ["s"], [3]], ["s", 13, "comesFrom", ["s"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::329", "code": "#include \"CircleJoint.h\"\n\nnamespace ofx {\nnamespace piMapper {\n\nCircleJoint::CircleJoint() { setDefaultProperties(); }\n\nvoid CircleJoint::update() {\n  if (!enabled) return;\n}\n\nvoid CircleJoint::draw() {\n  if (!visible) return;\n  if (!enabled) return;\n\n  ofPushStyle();\n  ofFill();\n\n  if (selected) {\n    ofSetColor(fillColorSelected);\n  } else {\n    ofSetColor(fillColor);\n  }\n\n  ofCircle(position.x, position.y, radius);\n  ofNoFill();\n\n  if (selected) {\n    ofSetColor(strokeColorSelected);\n  } else {\n    ofSetColor(strokeColor);\n  }\n\n  ofSetLineWidth(strokeWidth);\n  ofCircle(position.x, position.y, radius);\n  ofPopStyle();\n}\n\nvoid CircleJoint::setDefaultProperties() { radius = 10.0f; }\n\nbool CircleJoint::hitTest(ofVec2f pos) {\n  float distance = position.distance(pos);\n  if (distance < radius)\n    return true;\n  else\n    return false;\n}\n}\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Circ", "le", "J", "oint", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġof", "x", "Ġ{", "Ċ", "names", "pace", "Ġpi", "M", "apper", "Ġ{", "Ċ", "Ċ", "Circ", "le", "J", "oint", "::", "Circ", "le", "J", "oint", "()", "Ġ{", "Ġset", "Default", "Pro", "perties", "();", "Ġ}", "Ċ", "Ċ", "void", "ĠCircle", "J", "oint", "::", "update", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "enabled", ")", "Ġreturn", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCircle", "J", "oint", "::", "draw", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "visible", ")", "Ġreturn", ";", "Ċ", "Ġ", "Ġif", "Ġ(!", "enabled", ")", "Ġreturn", ";", "ĊĊ", "Ġ", "Ġof", "Push", "Style", "();", "Ċ", "Ġ", "Ġof", "Fill", "();", "ĊĊ", "Ġ", "Ġif", "Ġ(", "selected", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġof", "Set", "Color", "(", "fill", "Color", "Se", "lected", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġof", "Set", "Color", "(", "fill", "Color", ");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġof", "Circ", "le", "(", "position", ".", "x", ",", "Ġposition", ".", "y", ",", "Ġradius", ");", "Ċ", "Ġ", "Ġof", "No", "Fill", "();", "ĊĊ", "Ġ", "Ġif", "Ġ(", "selected", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġof", "Set", "Color", "(", "stroke", "Color", "Se", "lected", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġof", "Set", "Color", "(", "stroke", "Color", ");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġof", "Set", "Line", "Width", "(", "stroke", "Width", ");", "Ċ", "Ġ", "Ġof", "Circ", "le", "(", "position", ".", "x", ",", "Ġposition", ".", "y", ",", "Ġradius", ");", "Ċ", "Ġ", "Ġof", "Pop", "Style", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCircle", "J", "oint", "::", "set", "Default", "Pro", "perties", "()", "Ġ{", "Ġradius", "Ġ=", "Ġ10", ".", "0", "f", ";", "Ġ}", "Ċ", "Ċ", "bool", "ĠCircle", "J", "oint", "::", "hit", "Test", "(", "of", "V", "ec", "2", "f", "Ġpos", ")", "Ġ{", "Ċ", "Ġ", "Ġfloat", "Ġdistance", "Ġ=", "Ġposition", ".", "distance", "(", "pos", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "distance", "Ġ<", "Ġradius", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "}", "Ċ", "}"], "dataflow_graph": [["radius", 44, "comesFrom", ["radius"], [36]], ["distance", 41, "comesFrom", ["distance"], [39]], ["distance", 43, "comesFrom", ["distance"], [39]], ["pos", 42, "comesFrom", ["pos"], [38]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::330", "code": "//\n//  main.cpp\n//  rdt\n//\n//  Created by Chris Orcutt on 11/22/15.\n//  Copyright © 2015 Chris Orcutt. All rights reserved.\n//\n\n#include <stdio.h>\n#include \"Timer.hpp\"\n#include <unistd.h>\n#include <iostream>\n\nusing namespace std;\n\nint main(){\n  Timer timer;\n  timer.start();\n  sleep(1);\n  cout << \"Expected 1 second elapsed, actual: \";\n  cout << timer.elapsedTime() << endl;\n  timer.stop();\n  \n  timer.start();\n  sleep(2);\n  cout << \"Expected 2 second elapsed, actual: \";\n  cout << timer.elapsedTime() << endl;\n  timer.stop();\n  \n  cout << \"Expected 0 second elapsed, actual: \";\n  cout << timer.elapsedTime() << endl;\n  \n\n  \n}", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġmain", ".", "cpp", "Ċ", "//", "Ġ", "Ġr", "dt", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠChris", "ĠOr", "cut", "t", "Ġon", "Ġ11", "/", "22", "/", "15", ".", "Ċ", "//", "Ġ", "ĠCopyright", "ĠÂ©", "Ġ2015", "ĠChris", "ĠOr", "cut", "t", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "Timer", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "ĠTim", "er", "Ġtimer", ";", "Ċ", "Ġ", "Ġtimer", ".", "start", "();", "Ċ", "Ġ", "Ġsleep", "(", "1", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Ex", "pected", "Ġ1", "Ġsecond", "Ġelapsed", ",", "Ġactual", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġtimer", ".", "el", "apsed", "Time", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġtimer", ".", "stop", "();", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġtimer", ".", "start", "();", "Ċ", "Ġ", "Ġsleep", "(", "2", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Ex", "pected", "Ġ2", "Ġsecond", "Ġelapsed", ",", "Ġactual", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġtimer", ".", "el", "apsed", "Time", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġtimer", ".", "stop", "();", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Ex", "pected", "Ġ0", "Ġsecond", "Ġelapsed", ",", "Ġactual", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġtimer", ".", "el", "apsed", "Time", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "ĊĊ", "Ġ", "Ġ", "Ċ", "}"], "dataflow_graph": [["timer", 3, "comesFrom", ["timer"], [2]], ["timer", 8, "comesFrom", ["timer"], [2]], ["timer", 11, "comesFrom", ["timer"], [2]], ["timer", 13, "comesFrom", ["timer"], [2]], ["timer", 18, "comesFrom", ["timer"], [2]], ["timer", 21, "comesFrom", ["timer"], [2]], ["timer", 25, "comesFrom", ["timer"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::331", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nvoid solve() {\n    int n,d,e;\n    cin >> n >> d >> e;\n    e*=5;\n    int res = n;\n    for (int i = 0; i <= 500; i++) {\n        if (n >= i*d) {\n            int tmp = (n-i*d)%(d+e);\n            res = min(res, tmp);\n        }\n        if (n >= i*e) {\n            int tmp = (n-i*e)%(d+e);\n            res = min(res, tmp);\n        }\n    }\n    cout << res;\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    solve();\n    cout << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "void", "Ġsolve", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ",", "d", ",", "e", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", "Ġ>>", "Ġd", "Ġ>>", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġe", "*", "=", "5", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġres", "Ġ=", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġ500", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ>=", "Ġi", "*", "d", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtmp", "Ġ=", "Ġ(", "n", "-", "i", "*", "d", ")", "%", "(", "d", "+", "e", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġres", "Ġ=", "Ġmin", "(", "res", ",", "Ġtmp", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ>=", "Ġi", "*", "e", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtmp", "Ġ=", "Ġ(", "n", "-", "i", "*", "e", ")", "%", "(", "d", "+", "e", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġres", "Ġ=", "Ġmin", "(", "res", ",", "Ġtmp", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġres", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġi", "os", "_", "base", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ".", "tie", "(", "NULL", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsolve", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [2]], ["n", 15, "comesFrom", ["n"], [11]], ["n", 19, "comesFrom", ["n"], [11]], ["n", 28, "comesFrom", ["n"], [11]], ["n", 32, "comesFrom", ["n"], [11]], ["d", 7, "comesFrom", ["d"], [3]], ["d", 17, "comesFrom", ["d"], [3]], ["d", 21, "comesFrom", ["d"], [3]], ["d", 22, "comesFrom", ["d"], [3]], ["d", 35, "comesFrom", ["d"], [3]], ["e", 8, "comesFrom", ["e"], [4]], ["e", 23, "comesFrom", ["e"], [9]], ["e", 30, "comesFrom", ["e"], [9]], ["e", 34, "comesFrom", ["e"], [9]], ["e", 36, "comesFrom", ["e"], [9]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 14, "comesFrom", ["i"], [12]], ["i", 16, "comesFrom", ["i"], [12]], ["i", 20, "comesFrom", ["i"], [12]], ["i", 29, "comesFrom", ["i"], [12]], ["i", 33, "comesFrom", ["i"], [12]], ["res", 26, "comesFrom", ["res"], [24]], ["res", 39, "comesFrom", ["res"], [37]], ["res", 42, "comesFrom", ["res"], [37]], ["tmp", 27, "comesFrom", ["tmp"], [18]], ["tmp", 40, "comesFrom", ["tmp"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::332", "code": "class Solution \n{\npublic:\n    vector<int> twoSum(vector<int>& numbers, int target) \n    {\n        int left=0,right=numbers.size()-1;\n        while(numbers[left]+numbers[right] != target)\n        {\n            if(numbers[left]+numbers[right] < target)\n                left++;\n            else\n                right--;\n        }\n        vector<int> result;\n        result.push_back(left+1);\n        result.push_back(right+1);\n        return result;\n    }\n};\n\n\n\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġtwo", "Sum", "(", "vector", "<", "int", ">", "&", "Ġnumbers", ",", "Ġint", "Ġtarget", ")", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġleft", "=", "0", ",", "right", "=", "n", "umbers", ".", "size", "()", "-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "n", "umbers", "[", "left", "]+", "n", "umbers", "[", "right", "]", "Ġ!=", "Ġtarget", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "n", "umbers", "[", "left", "]+", "n", "umbers", "[", "right", "]", "Ġ<", "Ġtarget", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġleft", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġright", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", ".", "push", "_", "back", "(", "left", "+", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", ".", "push", "_", "back", "(", "right", "+", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "ĊĊ", "ĊĊ"], "dataflow_graph": [["left", 8, "comesFrom", ["left"], [3]], ["left", 13, "comesFrom", ["left"], [3]], ["left", 17, "comesFrom", ["left"], [3]], ["left", 22, "comesFrom", ["left"], [3]], ["right", 10, "comesFrom", ["right"], [4]], ["right", 15, "comesFrom", ["right"], [4]], ["right", 18, "comesFrom", ["right"], [4]], ["right", 25, "comesFrom", ["right"], [4]], ["target", 11, "comesFrom", ["target"], [2]], ["target", 16, "comesFrom", ["target"], [2]], ["result", 20, "comesFrom", ["result"], [19]], ["result", 23, "comesFrom", ["result"], [19]], ["result", 26, "comesFrom", ["result"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::333", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ii = pair<int, int>;\nusing vi = vector<int>;\nusing vii = vector<ii>;\n\nint n, q;\nvi vec;\nvii pairs;\nbool cnt[5005];\n\nint max_length_covered() {\n\tmemset(cnt, 0, sizeof cnt);\n\tint c = 0;\n\tfor (int i : vec) {\n\t\tfor (int p = pairs[i].first; p <= pairs[i].second; ++p) {\n\t\t\tif (!cnt[p]) ++c;\n\t\t\tcnt[p] = 1;\n\t\t}\n\t}\n\treturn c;\n}\n\nint f(int i, int taken) {\n\tif (i > q) return 0;\n\tif (taken == q-2) return max_length_covered();\n\n\tvec.emplace_back(i);\n\tint p = f(i+1, taken+1);\n\tvec.pop_back();\n\n\tint q = f(i+1, taken);\n\treturn max(p, q);\n}\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\n\tcin >> n >> q;\n\tint l, r;\n\tfor (int i = 0; i < q; ++i) {\n\t\tcin >> l >> r;\n\t\tpairs.emplace_back(l, r);\n\t}\n\n\tcout << f(0, 0) << endl;\n\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "using", "Ġii", "Ġ=", "Ġpair", "<", "int", ",", "Ġint", ">", ";", "Ċ", "using", "Ġvi", "Ġ=", "Ġvector", "<", "int", ">", ";", "Ċ", "using", "Ġv", "ii", "Ġ=", "Ġvector", "<", "ii", ">", ";", "Ċ", "Ċ", "int", "Ġn", ",", "Ġq", ";", "Ċ", "vi", "Ġvec", ";", "Ċ", "v", "ii", "Ġpairs", ";", "Ċ", "bool", "Ġc", "nt", "[", "500", "5", "];", "Ċ", "Ċ", "int", "Ġmax", "_", "length", "_", "covered", "()", "Ġ{", "Ċ", "ĉ", "mem", "set", "(", "c", "nt", ",", "Ġ0", ",", "Ġsizeof", "Ġc", "nt", ");", "Ċ", "ĉ", "int", "Ġc", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ:", "Ġvec", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġp", "Ġ=", "Ġpairs", "[", "i", "].", "first", ";", "Ġp", "Ġ<=", "Ġpairs", "[", "i", "].", "second", ";", "Ġ++", "p", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(!", "c", "nt", "[", "p", "])", "Ġ++", "c", ";", "Ċ", "ĉ", "ĉ", "ĉ", "c", "nt", "[", "p", "]", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġc", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġf", "(", "int", "Ġi", ",", "Ġint", "Ġtaken", ")", "Ġ{", "Ċ", "ĉ", "if", "Ġ(", "i", "Ġ>", "Ġq", ")", "Ġreturn", "Ġ0", ";", "Ċ", "ĉ", "if", "Ġ(", "t", "aken", "Ġ==", "Ġq", "-", "2", ")", "Ġreturn", "Ġmax", "_", "length", "_", "covered", "();", "ĊĊ", "ĉ", "vec", ".", "em", "place", "_", "back", "(", "i", ");", "Ċ", "ĉ", "int", "Ġp", "Ġ=", "Ġf", "(", "i", "+", "1", ",", "Ġtaken", "+", "1", ");", "Ċ", "ĉ", "vec", ".", "pop", "_", "back", "();", "ĊĊ", "ĉ", "int", "Ġq", "Ġ=", "Ġf", "(", "i", "+", "1", ",", "Ġtaken", ");", "Ċ", "ĉ", "return", "Ġmax", "(", "p", ",", "Ġq", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "ios", "::", "sync", "_", "with", "_", "std", "io", "(", "0", ");", "Ċ", "ĉ", "cin", ".", "tie", "(", "0", ");", "ĊĊ", "ĉ", "cin", "Ġ>>", "Ġn", "Ġ>>", "Ġq", ";", "Ċ", "ĉ", "int", "Ġl", ",", "Ġr", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġq", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġl", "Ġ>>", "Ġr", ";", "Ċ", "ĉ", "ĉ", "p", "airs", ".", "em", "place", "_", "back", "(", "l", ",", "Ġr", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "c", "out", "Ġ<<", "Ġf", "(", "0", ",", "Ġ0", ")", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 31, "comesFrom", ["i"], [29]], ["i", 38, "comesFrom", ["i"], [29]], ["i", 41, "comesFrom", ["i"], [29]], ["i", 47, "comesFrom", ["i"], [29]], ["i", 62, "comesFrom", ["i"], [61]], ["i", 64, "comesFrom", ["i"], [61]], ["vec", 12, "comesFrom", ["vec"], [3]], ["vec", 36, "comesFrom", ["vec"], [3]], ["vec", 43, "comesFrom", ["vec"], [3]], ["pairs", 14, "comesFrom", ["pairs"], [4]], ["pairs", 18, "comesFrom", ["pairs"], [4]], ["pairs", 68, "comesFrom", ["pairs"], [4]], ["p", 17, "comesFrom", ["p"], [13]], ["p", 21, "comesFrom", ["p"], [13]], ["p", 23, "comesFrom", ["p"], [13]], ["p", 26, "comesFrom", ["p"], [13]], ["p", 50, "comesFrom", ["p"], [39]], ["c", 24, "comesFrom", ["c"], [10]], ["c", 27, "comesFrom", ["c"], [10]], ["q", 32, "comesFrom", ["q"], [2]], ["q", 34, "comesFrom", ["q"], [2]], ["q", 51, "comesFrom", ["q"], [45]], ["q", 58, "comesFrom", ["q"], [45]], ["q", 63, "comesFrom", ["q"], [45]], ["taken", 33, "comesFrom", ["taken"], [30]], ["taken", 42, "comesFrom", ["taken"], [30]], ["taken", 48, "comesFrom", ["taken"], [30]], ["n", 57, "comesFrom", ["n"], [1]], ["l", 66, "comesFrom", ["l"], [59]], ["l", 70, "comesFrom", ["l"], [59]], ["r", 67, "comesFrom", ["r"], [60]], ["r", 71, "comesFrom", ["r"], [60]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::334", "code": "#pragma once\n\n#include <cassert>\n#include <cstdint> // uint32_t\n#include <utility> // std::pair\n\nnamespace gyper\n{\nstd::pair<uint16_t, uint16_t> inline to_pair(long const index)\n{\n  // index = x + (y+1)*y/2 = x + (y^2 + y)/2\n  long y = 1;\n\n  while ((y * y + y) / 2 <= index)\n    ++y;\n\n  --y;\n  return std::make_pair<uint16_t, uint16_t>(static_cast<uint16_t>(index - (y * y + y) / 2u), static_cast<uint16_t>(y));\n}\n\nlong inline to_index(long const x, long const y)\n{\n  assert(x <= y);\n  return x + (y + 1) * y / 2;\n}\n\nlong inline to_index_safe(long const x, long const y)\n{\n  if (x <= y)\n    return x + (y + 1) * y / 2;\n  else\n    return y + (x + 1) * x / 2;\n}\n\n} // namespace gyper\n", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "int", ">", "Ġ//", "Ġuint", "32", "_", "t", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ġ//", "Ġstd", "::", "pair", "Ċ", "Ċ", "names", "pace", "Ġgy", "per", "Ċ", "{", "Ċ", "std", "::", "pair", "<", "uint", "16", "_", "t", ",", "Ġuint", "16", "_", "t", ">", "Ġinline", "Ġto", "_", "pair", "(", "long", "Ġconst", "Ġindex", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "Ġindex", "Ġ=", "Ġx", "Ġ+", "Ġ(", "y", "+", "1", ")*", "y", "/", "2", "Ġ=", "Ġx", "Ġ+", "Ġ(", "y", "^", "2", "Ġ+", "Ġy", ")/", "2", "Ċ", "Ġ", "Ġlong", "Ġy", "Ġ=", "Ġ1", ";", "ĊĊ", "Ġ", "Ġwhile", "Ġ((", "y", "Ġ*", "Ġy", "Ġ+", "Ġy", ")", "Ġ/", "Ġ2", "Ġ<=", "Ġindex", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ++", "y", ";", "ĊĊ", "Ġ", "Ġ--", "y", ";", "Ċ", "Ġ", "Ġreturn", "Ġstd", "::", "make", "_", "pair", "<", "uint", "16", "_", "t", ",", "Ġuint", "16", "_", "t", ">(", "static", "_", "cast", "<", "uint", "16", "_", "t", ">(", "index", "Ġ-", "Ġ(", "y", "Ġ*", "Ġy", "Ġ+", "Ġy", ")", "Ġ/", "Ġ2", "u", "),", "Ġstatic", "_", "cast", "<", "uint", "16", "_", "t", ">(", "y", "));", "Ċ", "}", "Ċ", "Ċ", "long", "Ġinline", "Ġto", "_", "index", "(", "long", "Ġconst", "Ġx", ",", "Ġlong", "Ġconst", "Ġy", ")", "Ċ", "{", "Ċ", "Ġ", "Ġassert", "(", "x", "Ġ<=", "Ġy", ");", "Ċ", "Ġ", "Ġreturn", "Ġx", "Ġ+", "Ġ(", "y", "Ġ+", "Ġ1", ")", "Ġ*", "Ġy", "Ġ/", "Ġ2", ";", "Ċ", "}", "Ċ", "Ċ", "long", "Ġinline", "Ġto", "_", "index", "_", "safe", "(", "long", "Ġconst", "Ġx", ",", "Ġlong", "Ġconst", "Ġy", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "x", "Ġ<=", "Ġy", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġx", "Ġ+", "Ġ(", "y", "Ġ+", "Ġ1", ")", "Ġ*", "Ġy", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġy", "Ġ+", "Ġ(", "x", "Ġ+", "Ġ1", ")", "Ġ*", "Ġx", "Ġ/", "Ġ2", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġgy", "per", "Ċ"], "dataflow_graph": [["y", 3, "comesFrom", ["y"], [2]], ["y", 4, "comesFrom", ["y"], [2]], ["y", 5, "comesFrom", ["y"], [2]], ["y", 7, "comesFrom", ["y"], [2]], ["y", 8, "comesFrom", ["y"], [2]], ["y", 12, "comesFrom", ["y"], [2]], ["y", 13, "comesFrom", ["y"], [2]], ["y", 14, "comesFrom", ["y"], [2]], ["y", 16, "comesFrom", ["y"], [2]], ["y", 22, "comesFrom", ["y"], [19]], ["y", 24, "comesFrom", ["y"], [19]], ["y", 25, "comesFrom", ["y"], [19]], ["y", 30, "comesFrom", ["y"], [28]], ["y", 32, "comesFrom", ["y"], [28]], ["y", 33, "comesFrom", ["y"], [28]], ["y", 34, "comesFrom", ["y"], [28]], ["index", 6, "comesFrom", ["index"], [1]], ["index", 11, "comesFrom", ["index"], [1]], ["x", 21, "comesFrom", ["x"], [18]], ["x", 23, "comesFrom", ["x"], [18]], ["x", 29, "comesFrom", ["x"], [27]], ["x", 31, "comesFrom", ["x"], [27]], ["x", 35, "comesFrom", ["x"], [27]], ["x", 36, "comesFrom", ["x"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::335", "code": "//\n//  268.cpp\n//  LeetCode\n//\n//  Created by Narikbi on 25.02.17.\n//  Copyright © 2017 app.leetcode.kz. All rights reserved.\n//\n\n#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <queue>\n#include <set>\n#include <map>\n#include <stack>\n#include <cmath>\n#include <numeric>\n\nusing namespace std;\n\n\nint missingNumber(vector<int>& nums) {\n    \n    int res = nums.size();\n    for (int i = 0; i < nums.size(); i++) {\n        res ^= i;\n        res ^= nums[i];\n    }\n    \n    return res;\n}\n\n\n//int main(int argc, const char * argv[]) {\n//    \n//    vector<int> v = {0, 1, 2, 3, 4, 5, 7};\n//    cout << missingNumber(v);\n//    \n//    return 0;\n//}\n\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġ268", ".", "cpp", "Ċ", "//", "Ġ", "ĠLe", "et", "Code", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠNar", "ik", "bi", "Ġon", "Ġ25", ".", "02", ".", "17", ".", "Ċ", "//", "Ġ", "ĠCopyright", "ĠÂ©", "Ġ2017", "Ġapp", ".", "le", "et", "code", ".", "k", "z", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "de", "que", ">", "Ċ", "#", "include", "Ġ<", "queue", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "stack", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "n", "umeric", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "int", "Ġmissing", "Number", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġres", "Ġ=", "Ġnum", "s", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnum", "s", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġres", "Ġ^", "=", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġres", "Ġ^", "=", "Ġnum", "s", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġres", ";", "Ċ", "}", "ĊĊ", "Ċ", "//", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġconst", "Ġchar", "Ġ*", "Ġarg", "v", "[", "])", "Ġ{", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġv", "Ġ=", "Ġ{", "0", ",", "Ġ1", ",", "Ġ2", ",", "Ġ3", ",", "Ġ4", ",", "Ġ5", ",", "Ġ7", "};", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġmissing", "Number", "(", "v", ");", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "//", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 10, "comesFrom", ["i"], [6]], ["i", 12, "comesFrom", ["i"], [6]], ["i", 15, "comesFrom", ["i"], [6]], ["res", 16, "comesFrom", ["res"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::336", "code": "#include <iostream>\n#include <cmath>\n#include <iomanip>\n\nusing namespace std;\n\ndouble p;\n\ndouble f(double x) {\n  return x * x - p;\n}\n\ndouble fd(double x) {\n  return 2.0L * x;\n}\n  \nint main() {\n  ios::sync_with_stdio(false);\n  cout << setiosflags(ios::fixed) << setprecision(4);\n  while (cin >> p) {\n    double x = p / 2.0L;\n    while (fabs(f(x)) > 0.00000001L) {\n      x = x - f(x) / fd(x);\n    }\n    cout << x << endl;\n  }\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "i", "oman", "ip", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "double", "Ġp", ";", "Ċ", "Ċ", "double", "Ġf", "(", "double", "Ġx", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġx", "Ġ*", "Ġx", "Ġ-", "Ġp", ";", "Ċ", "}", "Ċ", "Ċ", "double", "Ġf", "d", "(", "double", "Ġx", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġ2", ".", "0", "L", "Ġ*", "Ġx", ";", "Ċ", "}", "Ċ", "Ġ", "Ġ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġi", "os", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġset", "ios", "flags", "(", "ios", "::", "fixed", ")", "Ġ<<", "Ġset", "pre", "cision", "(", "4", ");", "Ċ", "Ġ", "Ġwhile", "Ġ(", "cin", "Ġ>>", "Ġp", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġx", "Ġ=", "Ġp", "Ġ/", "Ġ2", ".", "0", "L", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "f", "abs", "(", "f", "(", "x", "))", "Ġ>", "Ġ0", ".", "000000", "01", "L", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġx", "Ġ-", "Ġf", "(", "x", ")", "Ġ/", "Ġf", "d", "(", "x", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġx", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 4, "comesFrom", ["x"], [3]], ["x", 5, "comesFrom", ["x"], [3]], ["x", 9, "comesFrom", ["x"], [8]], ["x", 22, "comesFrom", ["x"], [18]], ["x", 24, "comesFrom", ["x"], [23]], ["x", 26, "comesFrom", ["x"], [23]], ["x", 28, "comesFrom", ["x"], [23]], ["x", 30, "comesFrom", ["x"], [23]], ["p", 6, "comesFrom", ["p"], [1]], ["p", 17, "comesFrom", ["p"], [1]], ["p", 19, "comesFrom", ["p"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::337", "code": "#include <iostream>\n#include <seqan/sequence.h>\n#include <seqan/file.h>\n\nusing namespace seqan;\n\nint main()\n{\n    StringSet<String<Dna5> > nucleotideSets;\n    String<Dna5> seq1 =\"ATATANGCGT\";\n    String<Dna5> seq2 =\"AAGCATGANT\";\n    String<Dna5> seq3 =\"TGAAANTGAC\";\n    appendValue(nucleotideSets,seq1);\n    appendValue(nucleotideSets,seq2);\n    appendValue(nucleotideSets,seq3);\n    String<Dna5> refSeq=\"GATGCATGAT\";\n    StringSet<String<Dna5> > lesser;\n    StringSet<String<Dna5> > greater;\n    \n    for (unsigned i = 0; i < length(nucleotideSets); ++i){\n\tLexical<> comp(nucleotideSets[i],refSeq);\n\tif (isLess(comp))\n\t    appendValue(lesser, nucleotideSets[i]);\n\tif (isGreater(comp))\n\t    appendValue(greater, nucleotideSets[i]);\n    }\n    //std::cout << \"lesser: \" << lesser << std::endl;\n    //std::cout << \"greater: \" << greater << std::endl;\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "Set", "<", "String", "<", "D", "na", "5", ">", "Ġ>", "Ġnucle", "otide", "S", "ets", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "<", "D", "na", "5", ">", "Ġseq", "1", "Ġ=", "\"", "AT", "AT", "ANG", "C", "GT", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "<", "D", "na", "5", ">", "Ġseq", "2", "Ġ=", "\"", "AA", "GC", "AT", "G", "ANT", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "<", "D", "na", "5", ">", "Ġseq", "3", "Ġ=", "\"", "TG", "AA", "ANT", "G", "AC", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġappend", "Value", "(", "n", "ucle", "otide", "S", "ets", ",", "seq", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġappend", "Value", "(", "n", "ucle", "otide", "S", "ets", ",", "seq", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġappend", "Value", "(", "n", "ucle", "otide", "S", "ets", ",", "seq", "3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "<", "D", "na", "5", ">", "Ġref", "Se", "q", "=\"", "G", "AT", "GC", "AT", "G", "AT", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "Set", "<", "String", "<", "D", "na", "5", ">", "Ġ>", "Ġlesser", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠString", "Set", "<", "String", "<", "D", "na", "5", ">", "Ġ>", "Ġgreater", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", "(", "n", "ucle", "otide", "S", "ets", ");", "Ġ++", "i", "){", "Ċ", "ĉ", "Lex", "ical", "<", ">", "Ġcomp", "(", "n", "ucle", "otide", "S", "ets", "[", "i", "],", "ref", "Se", "q", ");", "Ċ", "ĉ", "if", "Ġ(", "is", "Less", "(", "comp", "))", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġappend", "Value", "(", "less", "er", ",", "Ġnucle", "otide", "S", "ets", "[", "i", "]);", "Ċ", "ĉ", "if", "Ġ(", "is", "Great", "er", "(", "comp", "))", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġappend", "Value", "(", "great", "er", ",", "Ġnucle", "otide", "S", "ets", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "less", "er", ":", "Ġ\"", "Ġ<<", "Ġlesser", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "great", "er", ":", "Ġ\"", "Ġ<<", "Ġgreater", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["nucleotideSets", 7, "comesFrom", ["nucleotideSets"], [2]], ["nucleotideSets", 10, "comesFrom", ["nucleotideSets"], [2]], ["nucleotideSets", 13, "comesFrom", ["nucleotideSets"], [2]], ["nucleotideSets", 21, "comesFrom", ["nucleotideSets"], [2]], ["nucleotideSets", 29, "comesFrom", ["nucleotideSets"], [2]], ["nucleotideSets", 35, "comesFrom", ["nucleotideSets"], [2]], ["seq1", 8, "comesFrom", ["seq1"], [3]], ["seq2", 11, "comesFrom", ["seq2"], [4]], ["seq3", 14, "comesFrom", ["seq3"], [5]], ["i", 19, "comesFrom", ["i"], [18]], ["i", 22, "comesFrom", ["i"], [18]], ["i", 24, "comesFrom", ["i"], [18]], ["i", 30, "comesFrom", ["i"], [18]], ["i", 36, "comesFrom", ["i"], [18]], ["lesser", 28, "comesFrom", ["lesser"], [16]], ["greater", 34, "comesFrom", ["greater"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::338", "code": "// Copyright (c) 2011-2015 The Gtacoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"qvaluecombobox.h\"\n\nQValueComboBox::QValueComboBox(QWidget *parent) :\n        QComboBox(parent), role(Qt::UserRole)\n{\n    connect(this, SIGNAL(currentIndexChanged(int)), this, SLOT(handleSelectionChanged(int)));\n}\n\nQVariant QValueComboBox::value() const\n{\n    return itemData(currentIndex(), role);\n}\n\nvoid QValueComboBox::setValue(const QVariant &value)\n{\n    setCurrentIndex(findData(value, role));\n}\n\nvoid QValueComboBox::setRole(int role)\n{\n    this->role = role;\n}\n\nvoid QValueComboBox::handleSelectionChanged(int idx)\n{\n    Q_EMIT valueChanged();\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "-", "2015", "ĠThe", "ĠG", "t", "aco", "in", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġaccompanying", "Ċ", "//", "Ġfile", "ĠCOP", "YING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "q", "value", "comb", "ob", "ox", ".", "h", "\"", "Ċ", "Ċ", "Q", "Value", "Com", "bo", "Box", "::", "Q", "Value", "Com", "bo", "Box", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "Com", "bo", "Box", "(", "parent", "),", "Ġrole", "(", "Q", "t", "::", "User", "Role", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconnect", "(", "this", ",", "ĠSIGN", "AL", "(", "current", "Index", "Changed", "(", "int", ")),", "Ġthis", ",", "ĠSL", "OT", "(", "handle", "Se", "lection", "Changed", "(", "int", "))", ");", "Ċ", "}", "Ċ", "Ċ", "Q", "Vari", "ant", "ĠQ", "Value", "Com", "bo", "Box", "::", "value", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġitem", "Data", "(", "current", "Index", "(),", "Ġrole", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "Com", "bo", "Box", "::", "set", "Value", "(", "const", "ĠQ", "Vari", "ant", "Ġ&", "value", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Current", "Index", "(", "find", "Data", "(", "value", ",", "Ġrole", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "Com", "bo", "Box", "::", "set", "Role", "(", "int", "Ġrole", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "role", "Ġ=", "Ġrole", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "Com", "bo", "Box", "::", "handle", "Se", "lection", "Changed", "(", "int", "Ġid", "x", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "EM", "IT", "Ġvalue", "Changed", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["role", 19, "comesFrom", ["role"], [18]], ["role", 20, "comesFrom", ["role"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::339", "code": "//\n//  CompareTwoLinkedLists.cpp\n//  HackerRank\n//\n//  Created by Fabrizio Duroni on 25/10/2016.\n//\n//  https://www.hackerrank.com/challenges/compare-two-linked-lists\n\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\n/*!\n C alike struct definition.\n The attribute Node is be declared with struct\n because in C, Node is not yet defined at this point.\n */\nstruct Node {\n    \n    int data;\n    struct Node* next;\n};\n\nint CompareLists(Node* headA, Node* headB) {\n\n    Node* currentNodeA = headA;\n    Node* currentNodeB = headB;\n    \n    //Loop on lists.\n    while (currentNodeA != nullptr || currentNodeB != nullptr) {\n        \n        //If one of the head node is null or\n        //data of the nodes doesn't match.\n        if ((currentNodeA != nullptr && currentNodeB == nullptr) ||\n            (currentNodeB != nullptr && currentNodeA == nullptr) ||\n            (currentNodeA->data != currentNodeB->data)) {\n            \n            return 0;\n        }\n        \n        currentNodeA = currentNodeA->next;\n        currentNodeB = currentNodeB->next;\n    }\n    \n    return 1;\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠCompare", "Two", "Link", "ed", "L", "ists", ".", "cpp", "Ċ", "//", "Ġ", "ĠHacker", "Rank", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠFab", "riz", "io", "ĠDur", "oni", "Ġon", "Ġ25", "/", "10", "/", "2016", ".", "Ċ", "//", "Ċ", "//", "Ġ", "Ġhttps", "://", "www", ".", "hack", "err", "ank", ".", "com", "/", "chall", "enges", "/", "comp", "are", "-", "two", "-", "linked", "-", "lists", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "/*", "!", "Ċ", "ĠC", "Ġalike", "Ġstruct", "Ġdefinition", ".", "Ċ", "ĠThe", "Ġattribute", "ĠNode", "Ġis", "Ġbe", "Ġdeclared", "Ġwith", "Ġstruct", "Ċ", "Ġbecause", "Ġin", "ĠC", ",", "ĠNode", "Ġis", "Ġnot", "Ġyet", "Ġdefined", "Ġat", "Ġthis", "Ġpoint", ".", "Ċ", "Ġ*/", "Ċ", "struct", "ĠNode", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġdata", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstruct", "ĠNode", "*", "Ġnext", ";", "Ċ", "};", "Ċ", "Ċ", "int", "ĠCompare", "L", "ists", "(", "Node", "*", "Ġhead", "A", ",", "ĠNode", "*", "Ġhead", "B", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠNode", "*", "Ġcurrent", "Node", "A", "Ġ=", "Ġhead", "A", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNode", "*", "Ġcurrent", "Node", "B", "Ġ=", "Ġhead", "B", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Loop", "Ġon", "Ġlists", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "current", "Node", "A", "Ġ!=", "Ġnull", "ptr", "Ġ||", "Ġcurrent", "Node", "B", "Ġ!=", "Ġnull", "ptr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "If", "Ġone", "Ġof", "Ġthe", "Ġhead", "Ġnode", "Ġis", "Ġnull", "Ġor", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "data", "Ġof", "Ġthe", "Ġnodes", "Ġdoesn", "'t", "Ġmatch", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "current", "Node", "A", "Ġ!=", "Ġnull", "ptr", "Ġ&&", "Ġcurrent", "Node", "B", "Ġ==", "Ġnull", "ptr", ")", "Ġ||", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "current", "Node", "B", "Ġ!=", "Ġnull", "ptr", "Ġ&&", "Ġcurrent", "Node", "A", "Ġ==", "Ġnull", "ptr", ")", "Ġ||", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "current", "Node", "A", "->", "data", "Ġ!=", "Ġcurrent", "Node", "B", "->", "data", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcurrent", "Node", "A", "Ġ=", "Ġcurrent", "Node", "A", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcurrent", "Node", "B", "Ġ=", "Ġcurrent", "Node", "B", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["currentNodeA", 21, "comesFrom", ["currentNodeA"], [20]], ["currentNodeB", 24, "comesFrom", ["currentNodeB"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::340", "code": "// DFS\n// recursive\n#include <iostream>\nusing namespace std;\n\nstruct TreeNode {\n    int val;\n    TreeNode *left;\n    TreeNode *right;\n    TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n};\n\nint minDepth(TreeNode *root)\n{ \n    if(NULL == root)\n        return 0;\n    if(NULL == root->left && NULL == root->right)\n        return 1;\n    int left = minDepth(root->left);\n    int right = minDepth(root->right);\n    \n    if(0 == left)\n        return right + 1;\n    if(0 == right)\n        return left + 1;\n    return left < right ? left + 1 : right + 1;\n}\n\nint main()\n{\n\n    return 0;\n}\n", "code_tokens": ["Ġ//", "ĠD", "FS", "Ċ", "//", "Ġrecursive", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "struct", "ĠTree", "Node", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġ*", "left", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġ*", "right", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġleft", "(", "NULL", "),", "Ġright", "(", "NULL", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmin", "Depth", "(", "Tree", "Node", "Ġ*", "root", ")", "Ċ", "{", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "NULL", "Ġ==", "Ġroot", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "NULL", "Ġ==", "Ġroot", "->", "left", "Ġ&&", "ĠNULL", "Ġ==", "Ġroot", "->", "right", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġleft", "Ġ=", "Ġmin", "Depth", "(", "root", "->", "left", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġright", "Ġ=", "Ġmin", "Depth", "(", "root", "->", "right", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "0", "Ġ==", "Ġleft", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġright", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "0", "Ġ==", "Ġright", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġleft", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġleft", "Ġ<", "Ġright", "Ġ?", "Ġleft", "Ġ+", "Ġ1", "Ġ:", "Ġright", "Ġ+", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["left", 20, "comesFrom", ["left"], [17]], ["left", 25, "comesFrom", ["left"], [17]], ["left", 28, "comesFrom", ["left"], [17]], ["left", 29, "comesFrom", ["left"], [17]], ["left", 31, "comesFrom", ["left"], [17]], ["right", 24, "comesFrom", ["right"], [21]], ["right", 26, "comesFrom", ["right"], [21]], ["right", 27, "comesFrom", ["right"], [21]], ["right", 30, "comesFrom", ["right"], [21]], ["right", 32, "comesFrom", ["right"], [21]], ["x", 7, "comesFrom", ["x"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::341", "code": "#include\"stdlib.h\"\n#include\"stdio.h\"\n//////you can use stack to storage different type of data/////\n#define  ElemType int\n\nstruct stackNode{\n\tElemType data;\n\tstackNode* next;\n};\n\nstruct stack{\n\tstackNode* top;\n};\n\n\n/////do the initialization//////\nvoid initStack(stack &s){\n\ts.top = NULL;\n}\n\nbool empty(stack s){\n\tif(s.top)\n\t\treturn false;\n\treturn true;\n}\n\nElemType top(stack s){\n\treturn s.top->data;\n}\n\nvoid push(stack &s, ElemType data_){\n\tstackNode* newNode = (stackNode*)malloc(sizeof(stackNode));\n\tnewNode->data = data_;\n\tnewNode->next = s.top;\n\ts.top = newNode;\n}\n\nvoid pop(stack &s){\n\tstackNode* temp = s.top;\n\ts.top = s.top->next;\n\tfree(temp);\n}\n\nvoid destroy(stack &s){\n\tstackNode* temp;\n\twhile(s.top){\n\t\ttemp = s.top;\n\t\ts.top = s.top->next;\n\t\tfree(temp);\n\t}\n}\n\n/////now this is the test/////\nint main(){\n//\t#undef ElemType\n//\t#define ElemType char\n\tstack s;\n\tinitStack(s);\n\tpush(s,3);\n\tprintf(\"%d \\n\",top(s));\n//\tpop(s);\n\tif(empty(s))\n\t\tprintf(\"The stack is empty! \\n\");\n\telse\n\t\tprintf(\"The stack is not empty! \\n\");\n\treturn 1;\n}", "code_tokens": ["Ġ#", "include", "\"", "std", "lib", ".", "h", "\"", "Ċ", "#", "include", "\"", "std", "io", ".", "h", "\"", "Ċ", "////", "//", "you", "Ġcan", "Ġuse", "Ġstack", "Ġto", "Ġstorage", "Ġdifferent", "Ġtype", "Ġof", "Ġdata", "////", "/", "Ċ", "#", "define", "Ġ", "ĠE", "lem", "Type", "Ġint", "Ċ", "Ċ", "struct", "Ġstack", "Node", "{", "Ċ", "ĉ", "E", "lem", "Type", "Ġdata", ";", "Ċ", "ĉ", "stack", "Node", "*", "Ġnext", ";", "Ċ", "};", "Ċ", "Ċ", "struct", "Ġstack", "{", "Ċ", "ĉ", "stack", "Node", "*", "Ġtop", ";", "Ċ", "};", "ĊĊ", "Ċ", "////", "/", "do", "Ġthe", "Ġinitialization", "////", "//", "Ċ", "void", "Ġinit", "Stack", "(", "stack", "Ġ&", "s", "){", "Ċ", "ĉ", "s", ".", "top", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "Ġempty", "(", "stack", "Ġs", "){", "Ċ", "ĉ", "if", "(", "s", ".", "top", ")", "Ċ", "ĉ", "ĉ", "return", "Ġfalse", ";", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "E", "lem", "Type", "Ġtop", "(", "stack", "Ġs", "){", "Ċ", "ĉ", "return", "Ġs", ".", "top", "->", "data", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpush", "(", "stack", "Ġ&", "s", ",", "ĠE", "lem", "Type", "Ġdata", "_", "){", "Ċ", "ĉ", "stack", "Node", "*", "Ġnew", "Node", "Ġ=", "Ġ(", "stack", "Node", "*)", "m", "alloc", "(", "size", "of", "(", "stack", "Node", "));", "Ċ", "ĉ", "new", "Node", "->", "data", "Ġ=", "Ġdata", "_", ";", "Ċ", "ĉ", "new", "Node", "->", "next", "Ġ=", "Ġs", ".", "top", ";", "Ċ", "ĉ", "s", ".", "top", "Ġ=", "Ġnew", "Node", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpop", "(", "stack", "Ġ&", "s", "){", "Ċ", "ĉ", "stack", "Node", "*", "Ġtemp", "Ġ=", "Ġs", ".", "top", ";", "Ċ", "ĉ", "s", ".", "top", "Ġ=", "Ġs", ".", "top", "->", "next", ";", "Ċ", "ĉ", "free", "(", "temp", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdestroy", "(", "stack", "Ġ&", "s", "){", "Ċ", "ĉ", "stack", "Node", "*", "Ġtemp", ";", "Ċ", "ĉ", "while", "(", "s", ".", "top", "){", "Ċ", "ĉ", "ĉ", "temp", "Ġ=", "Ġs", ".", "top", ";", "Ċ", "ĉ", "ĉ", "s", ".", "top", "Ġ=", "Ġs", ".", "top", "->", "next", ";", "Ċ", "ĉ", "ĉ", "free", "(", "temp", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "////", "/", "now", "Ġthis", "Ġis", "Ġthe", "Ġtest", "////", "/", "Ċ", "int", "Ġmain", "(){", "Ċ", "//", "ĉ", "#", "und", "ef", "ĠE", "lem", "Type", "Ċ", "//", "ĉ", "#", "define", "ĠE", "lem", "Type", "Ġchar", "Ċ", "ĉ", "stack", "Ġs", ";", "Ċ", "ĉ", "init", "Stack", "(", "s", ");", "Ċ", "ĉ", "push", "(", "s", ",", "3", ");", "Ċ", "ĉ", "printf", "(\"", "%", "d", "Ġ\\", "n", "\",", "top", "(", "s", "));", "Ċ", "//", "ĉ", "pop", "(", "s", ");", "Ċ", "ĉ", "if", "(", "empty", "(", "s", "))", "Ċ", "ĉ", "ĉ", "printf", "(\"", "The", "Ġstack", "Ġis", "Ġempty", "!", "Ġ\\", "n", "\");", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "printf", "(\"", "The", "Ġstack", "Ġis", "Ġnot", "Ġempty", "!", "Ġ\\", "n", "\");", "Ċ", "ĉ", "return", "Ġ1", ";", "Ċ", "}"], "dataflow_graph": [["s", 10, "comesFrom", ["s"], [9]], ["s", 14, "comesFrom", ["s"], [13]], ["s", 18, "comesFrom", ["s"], [13]], ["s", 28, "comesFrom", ["s"], [13]], ["s", 30, "comesFrom", ["s"], [13]], ["s", 34, "comesFrom", ["s"], [13]], ["s", 36, "comesFrom", ["s"], [13]], ["s", 38, "comesFrom", ["s"], [13]], ["s", 40, "comesFrom", ["s"], [13]], ["s", 46, "comesFrom", ["s"], [13]], ["s", 48, "comesFrom", ["s"], [13]], ["s", 51, "comesFrom", ["s"], [13]], ["s", 53, "comesFrom", ["s"], [13]], ["s", 55, "comesFrom", ["s"], [13]], ["s", 63, "comesFrom", ["s"], [61]], ["s", 65, "comesFrom", ["s"], [61]], ["s", 68, "comesFrom", ["s"], [61]], ["s", 70, "comesFrom", ["s"], [61]], ["data_", 25, "comesFrom", ["data_"], [19]], ["temp", 59, "comesFrom", ["temp"], [50]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::342", "code": "# include <bits/stdc++.h>\ntypedef long long int lli;\nusing namespace std;\n\nint a, b, c;\n\nint rm(int x) {\n    int ret = 0;\n    int p = 1;\n    while (x > 0) {\n        if (x%10!=0) ret = ret + x%10 * p, p*=10;\n        x /= 10;\n    }\n    return ret;\n}\n\nint main()\n{\n    cin >> a >> b; c = a + b;\n\n    if (rm(a) + rm(b) == rm(c)) cout << \"YES\" << endl;\n    else cout << \"NO\" << endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "Ġinclude", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "Ġint", "Ġ", "lli", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġa", ",", "Ġb", ",", "Ġc", ";", "Ċ", "Ċ", "int", "Ġrm", "(", "int", "Ġx", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġret", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġp", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "x", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "x", "%", "10", "!", "=", "0", ")", "Ġret", "Ġ=", "Ġret", "Ġ+", "Ġx", "%", "10", "Ġ*", "Ġp", ",", "Ġp", "*", "=", "10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ/", "=", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "Ġc", "Ġ=", "Ġa", "Ġ+", "Ġb", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "rm", "(", "a", ")", "Ġ+", "Ġrm", "(", "b", ")", "Ġ==", "Ġrm", "(", "c", "))", "Ġcout", "Ġ<<", "Ġ\"", "YES", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġcout", "Ġ<<", "Ġ\"", "NO", "\"", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 8, "comesFrom", ["x"], [5]], ["x", 9, "comesFrom", ["x"], [5]], ["x", 12, "comesFrom", ["x"], [5]], ["ret", 11, "comesFrom", ["ret"], [10]], ["ret", 16, "comesFrom", ["ret"], [10]], ["p", 13, "comesFrom", ["p"], [7]], ["a", 19, "comesFrom", ["a"], [1]], ["a", 22, "comesFrom", ["a"], [1]], ["a", 25, "comesFrom", ["a"], [1]], ["b", 20, "comesFrom", ["b"], [2]], ["b", 23, "comesFrom", ["b"], [2]], ["b", 27, "comesFrom", ["b"], [2]], ["c", 29, "comesFrom", ["c"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::343", "code": "#include \"datepicker.h\"\r\n\r\nDatePicker::DatePicker(QQuickItem *parent):\r\n    QQuickItem(parent)\r\n{\r\n#if defined(Q_OS_ANDROID)\r\n    nativeControls = AndroidNativeControls::getInstance();\r\n#endif\r\n    connect(nativeControls,SIGNAL(dateSelected(int,int,int)),SLOT(setDate(int,int,int)));\r\n}\r\n\r\nDatePicker::~DatePicker()\r\n{\r\n}\r\n\r\n\r\nQDate DatePicker::date() const\r\n{\r\n    return m_date;\r\n}\r\n\r\nvoid DatePicker::showDatepicker() const\r\n{\r\n    nativeControls->showDatepicker(m_date.year(), m_date.month(), m_date.day());\r\n}\r\n\r\nvoid DatePicker::setDate(QDate newDate)\r\n{\r\n    if (m_date == newDate)\r\n        return;\r\n\r\n    m_date = newDate;\r\n    emit dateChanged(newDate);\r\n}\r\n\r\nvoid DatePicker::setDate(int year, int month, int day)\r\n{\r\n    QDate newDate(year, month, day);\r\n\r\n    if (m_date == newDate)\r\n        return;\r\n\r\n    m_date = newDate;\r\n    emit dateChanged(newDate);\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "date", "p", "icker", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "Date", "P", "icker", "::", "Date", "P", "icker", "(", "Q", "Quick", "Item", "Ġ*", "parent", "):", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Quick", "Item", "(", "parent", ")", "č", "Ċ", "{", "č", "Ċ", "#", "if", "Ġdefined", "(", "Q", "_", "OS", "_", "AND", "RO", "ID", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnative", "Control", "s", "Ġ=", "ĠAndroid", "Native", "Control", "s", "::", "get", "Instance", "();", "č", "Ċ", "#", "endif", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconnect", "(", "native", "Control", "s", ",", "SIGN", "AL", "(", "date", "Se", "lected", "(", "int", ",", "int", ",", "int", ")),", "SL", "OT", "(", "set", "Date", "(", "int", ",", "int", ",", "int", "))", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Date", "P", "icker", "::", "~", "Date", "P", "icker", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "Q", "Date", "ĠDate", "P", "icker", "::", "date", "()", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġm", "_", "date", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDate", "P", "icker", "::", "show", "Date", "p", "icker", "()", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnative", "Control", "s", "->", "show", "Date", "p", "icker", "(", "m", "_", "date", ".", "year", "(),", "Ġm", "_", "date", ".", "month", "(),", "Ġm", "_", "date", ".", "day", "());", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDate", "P", "icker", "::", "set", "Date", "(", "Q", "Date", "Ġnew", "Date", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "m", "_", "date", "Ġ==", "Ġnew", "Date", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "date", "Ġ=", "Ġnew", "Date", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġemit", "Ġdate", "Changed", "(", "new", "Date", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDate", "P", "icker", "::", "set", "Date", "(", "int", "Ġyear", ",", "Ġint", "Ġmonth", ",", "Ġint", "Ġday", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Date", "Ġnew", "Date", "(", "year", ",", "Ġmonth", ",", "Ġday", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "m", "_", "date", "Ġ==", "Ġnew", "Date", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "date", "Ġ=", "Ġnew", "Date", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġemit", "Ġdate", "Changed", "(", "new", "Date", ");", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["m_date", 32, "comesFrom", ["m_date"], [24]], ["nativeControls", 12, "comesFrom", ["nativeControls"], [5]], ["newDate", 23, "comesFrom", ["newDate"], [21]], ["newDate", 25, "comesFrom", ["newDate"], [21]], ["newDate", 31, "comesFrom", ["newDate"], [21]], ["newDate", 33, "comesFrom", ["newDate"], [21]], ["newDate", 35, "comesFrom", ["newDate"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::344", "code": "/*COMMENTS\nJonathan Buch\nSection 3\nLab 14\nDecember 11th, 2014\nMade a recurrence relation that counts the number of 1's in binary form\n*/\n\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n\nint recur(int);\n\nint main(int argc, char *argv[]){\n\tcout << \"  # of Element\" << \"\\t\\t\" << \"# of 1's in the #'s binary form\" << endl;\n\tif(argc > 1){\n\t\tfor(int i = 1; i < argc; i++){\n\t\t\tcout << \"\\t\";\n\t\t\tcout << i << \"\\t\\t\\t\\t\"; \n\t\t\tcout << recur(atoi(argv[i])) << endl;\n\t\t}\n\t}\n\telse{\n\t\tcout << \"No input detected\" << endl;\n\t}\n\treturn 0;\n}\n\nint recur(int x){\n\tif(0 >= x){\n\t\treturn 0;\n\t}\n\tif(0 < x){\n\t\tif(x&1){\n\t\t\treturn (1+recur(x-1));\n\t\t}\n\t\telse{\n\t\t\treturn recur(x/2);\n\t\t}\n\t}\n}\n", "code_tokens": ["Ġ/*", "COM", "MENTS", "Ċ", "Jonathan", "ĠBuch", "Ċ", "Section", "Ġ3", "Ċ", "Lab", "Ġ14", "Ċ", "December", "Ġ11", "th", ",", "Ġ2014", "Ċ", "Made", "Ġa", "Ġrec", "urrence", "Ġrelation", "Ġthat", "Ġcounts", "Ġthe", "Ġnumber", "Ġof", "Ġ1", "'s", "Ġin", "Ġbinary", "Ġform", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "<", "i", "ost", "ream", ">", "Ċ", "#", "include", "<", "c", "std", "lib", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġrec", "ur", "(", "int", ");", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "{", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Ġ", "Ġ#", "Ġof", "ĠElement", "\"", "Ġ<<", "Ġ\"\\", "t", "\\", "t", "\"", "Ġ<<", "Ġ\"#", "Ġof", "Ġ1", "'s", "Ġin", "Ġthe", "Ġ#", "'", "s", "Ġbinary", "Ġform", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "if", "(", "arg", "c", "Ġ>", "Ġ1", "){", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġarg", "c", ";", "Ġi", "++", "){", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"\\", "t", "\";", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"\\", "t", "\\", "t", "\\", "t", "\\", "t", "\";", "Ġ", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġrec", "ur", "(", "ato", "i", "(", "arg", "v", "[", "i", "]", "))", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "No", "Ġinput", "Ġdetected", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġrec", "ur", "(", "int", "Ġx", "){", "Ċ", "ĉ", "if", "(", "0", "Ġ>=", "Ġx", "){", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "if", "(", "0", "Ġ<", "Ġx", "){", "Ċ", "ĉ", "ĉ", "if", "(", "x", "&", "1", "){", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġ(", "1", "+", "rec", "ur", "(", "x", "-", "1", "));", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "{", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġrec", "ur", "(", "x", "/", "2", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 7, "comesFrom", ["argc"], [3]], ["argc", 10, "comesFrom", ["argc"], [3]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 11, "comesFrom", ["i"], [8]], ["i", 14, "comesFrom", ["i"], [8]], ["i", 19, "comesFrom", ["i"], [8]], ["x", 25, "comesFrom", ["x"], [24]], ["x", 26, "comesFrom", ["x"], [24]], ["x", 27, "comesFrom", ["x"], [24]], ["x", 29, "comesFrom", ["x"], [24]], ["x", 31, "comesFrom", ["x"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::345", "code": "# include <string>\n# include <iostream>\nusing namespace std;\nclass Solution {\npublic:\n\tstring replaceSpace(string str) {\n\t    string ret;\n\t    for (int i = 0; i < str.length(); ++i) {\n\t        if (str[i] != ' ') ret += str[i];\n\t        else ret += \"\\%20\";\n\t    }\n\t    return ret;\n\t}\n};\n\nint main()\n{\n    Solution s;\n    std::cout << s.replaceSpace(\"we are w!\");\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "Ġinclude", "Ġ<", "string", ">", "Ċ", "#", "Ġinclude", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "string", "Ġreplace", "Space", "(", "string", "Ġstr", ")", "Ġ{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġret", ";", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġstr", ".", "length", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "str", "[", "i", "]", "Ġ!=", "Ġ'", "Ġ'", ")", "Ġret", "Ġ+=", "Ġstr", "[", "i", "];", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġret", "Ġ+=", "Ġ\"\\", "%", "20", "\";", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSolution", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġs", ".", "replace", "Space", "(\"", "we", "Ġare", "Ġw", "!\"", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 8, "comesFrom", ["i"], [4]], ["i", 10, "comesFrom", ["i"], [4]], ["i", 13, "comesFrom", ["i"], [4]], ["str", 6, "comesFrom", ["str"], [2]], ["str", 9, "comesFrom", ["str"], [2]], ["str", 12, "comesFrom", ["str"], [2]], ["ret", 15, "comesFrom", ["ret"], [14]], ["s", 19, "comesFrom", ["s"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::346", "code": "#include <TaoApiCpp/response/SimbaInsightCatsforecastGetResponse.h>\n\nQList<INCategoryTop> SimbaInsightCatsforecastGetResponse::getInCategoryTops() const {\n  return inCategoryTops;\n}\nvoid SimbaInsightCatsforecastGetResponse::setInCategoryTops (QList<INCategoryTop> inCategoryTops) {\n  this->inCategoryTops = inCategoryTops;\n}\n\nvoid SimbaInsightCatsforecastGetResponse::parseNormalResponse() {\n  parseError();\n  if (responseParser->hasName(\"in_category_tops\")) {\n  QList<Parser *> listParser = responseParser->getListObjectParser(\"in_category_tops\");\n  Parser *parser;\n  foreach (parser, listParser) {\n    INCategoryTop tmp;\n    tmp.setParser(parser);\n    tmp.parseResponse();\n    inCategoryTops.append(tmp);\n  }\n  }\n\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "T", "ao", "A", "pi", "C", "pp", "/", "response", "/", "Sim", "ba", "In", "sight", "C", "ats", "fore", "cast", "Get", "Response", ".", "h", ">", "Ċ", "Ċ", "Q", "List", "<", "IN", "Category", "Top", ">", "ĠSim", "ba", "In", "sight", "C", "ats", "fore", "cast", "Get", "Response", "::", "get", "In", "Category", "T", "ops", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġin", "Category", "T", "ops", ";", "Ċ", "}", "Ċ", "void", "ĠSim", "ba", "In", "sight", "C", "ats", "fore", "cast", "Get", "Response", "::", "set", "In", "Category", "T", "ops", "Ġ(", "Q", "List", "<", "IN", "Category", "Top", ">", "Ġin", "Category", "T", "ops", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "in", "Category", "T", "ops", "Ġ=", "Ġin", "Category", "T", "ops", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSim", "ba", "In", "sight", "C", "ats", "fore", "cast", "Get", "Response", "::", "parse", "Normal", "Response", "()", "Ġ{", "Ċ", "Ġ", "Ġparse", "Error", "();", "Ċ", "Ġ", "Ġif", "Ġ(", "response", "Parser", "->", "has", "Name", "(\"", "in", "_", "category", "_", "tops", "\"))", "Ġ{", "Ċ", "Ġ", "ĠQ", "List", "<", "Parser", "Ġ*", ">", "Ġlist", "Parser", "Ġ=", "Ġresponse", "Parser", "->", "get", "List", "Object", "Parser", "(\"", "in", "_", "category", "_", "tops", "\");", "Ċ", "Ġ", "ĠPars", "er", "Ġ*", "parser", ";", "Ċ", "Ġ", "Ġfore", "ach", "Ġ(", "parser", ",", "Ġlist", "Parser", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠINC", "ategory", "Top", "Ġtmp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtmp", ".", "set", "Parser", "(", "parser", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtmp", ".", "parse", "Response", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġin", "Category", "T", "ops", ".", "append", "(", "tmp", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["inCategoryTops", 4, "comesFrom", ["inCategoryTops"], [3]], ["inCategoryTops", 5, "comesFrom", ["inCategoryTops"], [3]], ["inCategoryTops", 21, "comesFrom", ["inCategoryTops"], [3]], ["tmp", 16, "comesFrom", ["tmp"], [15]], ["tmp", 19, "comesFrom", ["tmp"], [15]], ["tmp", 23, "comesFrom", ["tmp"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::347", "code": "#include \"symbolset.h\"\n#include \"error.h\"\n#include <vector>\n\nSymbolSet::SymbolSet() {\n\tlevel = 0;\n}\n\nint SymbolSet::enter(SymbolItem& item) {\n\tint offset = table.end()->getOffset();\n\tint itemsize = item.getSize();\n\t//[FIXME] will we be 4 incedent?\n\titem.setOffset(offset+itemsize);\n\ttable.push_back(item);\n\treturn (table.size()-1);\n}\n\nint SymbolSet::locIdent(string name) {\n\tint i = level;\n\tint j = 0;\n\tdo {\n\t\tj = display[i]->getLast();\n\t\twhile (table[j].getName() != name)\n\t\t\tj = table[j].getLink();\n\t\ti--;\n\t} while (i >= 0 && j == -1);\n\treturn j;\n}\n\nTokenType SymbolSet::getType(string name) {\n\tint index = locIdent(name);\n\tif (index == -1)\n\t\treturn TokenType::notyp;\n\n}\n\nvoid SymbolSet::enterproc(SymbolItem& _item, SymbolPro& _pro) {\n\tlevel++;\n\ttable.push_back(_item);\n\tprotable.push_back(_pro);\n\tdisplay[level] = &_pro;\n}\n\nvoid SymbolSet::exitproc() {\n\tlevel--;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "sy", "mbol", "set", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "error", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "Sy", "mbol", "Set", "::", "Sy", "mbol", "Set", "()", "Ġ{", "Ċ", "ĉ", "level", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠSymbol", "Set", "::", "enter", "(", "Sy", "mbol", "Item", "&", "Ġitem", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġoffset", "Ġ=", "Ġtable", ".", "end", "()", "->", "get", "Offset", "();", "Ċ", "ĉ", "int", "Ġitems", "ize", "Ġ=", "Ġitem", ".", "get", "Size", "();", "Ċ", "ĉ", "//", "[", "FIX", "ME", "]", "Ġwill", "Ġwe", "Ġbe", "Ġ4", "Ġinc", "ed", "ent", "?", "Ċ", "ĉ", "item", ".", "set", "Offset", "(", "offset", "+", "items", "ize", ");", "Ċ", "ĉ", "table", ".", "push", "_", "back", "(", "item", ");", "Ċ", "ĉ", "return", "Ġ(", "table", ".", "size", "()", "-", "1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "ĠSymbol", "Set", "::", "loc", "Ident", "(", "string", "Ġname", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġi", "Ġ=", "Ġlevel", ";", "Ċ", "ĉ", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "do", "Ġ{", "Ċ", "ĉ", "ĉ", "j", "Ġ=", "Ġdisplay", "[", "i", "]", "->", "get", "Last", "();", "Ċ", "ĉ", "ĉ", "while", "Ġ(", "table", "[", "j", "].", "get", "Name", "()", "Ġ!=", "Ġname", ")", "Ċ", "ĉ", "ĉ", "ĉ", "j", "Ġ=", "Ġtable", "[", "j", "].", "get", "Link", "();", "Ċ", "ĉ", "ĉ", "i", "--", ";", "Ċ", "ĉ", "}", "Ġwhile", "Ġ(", "i", "Ġ>=", "Ġ0", "Ġ&&", "Ġj", "Ġ==", "Ġ-", "1", ");", "Ċ", "ĉ", "return", "Ġj", ";", "Ċ", "}", "Ċ", "Ċ", "Token", "Type", "ĠSymbol", "Set", "::", "get", "Type", "(", "string", "Ġname", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġindex", "Ġ=", "Ġloc", "Ident", "(", "name", ");", "Ċ", "ĉ", "if", "Ġ(", "index", "Ġ==", "Ġ-", "1", ")", "Ċ", "ĉ", "ĉ", "return", "ĠToken", "Type", "::", "not", "yp", ";", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSymbol", "Set", "::", "enter", "proc", "(", "Sy", "mbol", "Item", "&", "Ġ_", "item", ",", "ĠSymbol", "Pro", "&", "Ġ_", "pro", ")", "Ġ{", "Ċ", "ĉ", "level", "++;", "Ċ", "ĉ", "table", ".", "push", "_", "back", "(_", "item", ");", "Ċ", "ĉ", "prot", "able", ".", "push", "_", "back", "(_", "pro", ");", "Ċ", "ĉ", "display", "[", "level", "]", "Ġ=", "Ġ&", "_", "pro", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSymbol", "Set", "::", "exit", "proc", "()", "Ġ{", "Ċ", "ĉ", "level", "--", ";", "Ċ", "}"], "dataflow_graph": [["offset", 13, "comesFrom", ["offset"], [4]], ["itemsize", 14, "comesFrom", ["itemsize"], [8]], ["i", 27, "comesFrom", ["i"], [22]], ["i", 37, "comesFrom", ["i"], [22]], ["i", 38, "comesFrom", ["i"], [22]], ["j", 30, "comesFrom", ["j"], [25]], ["j", 35, "comesFrom", ["j"], [33]], ["j", 39, "comesFrom", ["j"], [33]], ["j", 40, "comesFrom", ["j"], [33]], ["name", 32, "comesFrom", ["name"], [21]], ["name", 45, "comesFrom", ["name"], [42]], ["index", 46, "comesFrom", ["index"], [43]], ["level", 51, "comesFrom", ["level"], [23]], ["level", 59, "comesFrom", ["level"], [23]], ["level", 62, "comesFrom", ["level"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::348", "code": "//  生成P-code子程序\n//  pcode.cpp\n//  Compiler-PL0\n//\n//  Created by TimmyXu on 15/1/5.\n//  Copyright (c) 2015年 TimmyXu. All rights reserved.\n//\n\n#include \"pcode.h\"\n\nvoid gen(fct x, int y, int z) {\n    if (cx > cxmax) {\n        cout << \"Program too long!\" << endl;\n        //TODO 关闭文件\n        return;\n    }\n    code[cx].f = x;\n    code[cx].l = y;\n    code[cx].a = z;\n    cx++;\n}\n\nvoid listcode(int cx0) {\n    for (int i = cx0; i < cx; i++) {\n        cout << i << \" \" << mnemonic[code[i].f] << \" \" << code[i].l << \" \" << code[i].a << endl;\n    }\n}", "code_tokens": ["Ġ//", "Ġ", "Ġç", "Ķ", "Ł", "æĪ", "Ĳ", "P", "-", "code", "åŃĲ", "ç", "¨", "ĭ", "åº", "ı", "Ċ", "//", "Ġ", "Ġp", "code", ".", "cpp", "Ċ", "//", "Ġ", "ĠComp", "iler", "-", "PL", "0", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠTim", "my", "X", "u", "Ġon", "Ġ15", "/", "1", "/", "5", ".", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "å¹", "´", "ĠTim", "my", "X", "u", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "p", "code", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġgen", "(", "f", "ct", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġz", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "c", "x", "Ġ>", "Ġcx", "max", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Program", "Ġtoo", "Ġlong", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "T", "OD", "O", "Ġå", "ħ", "³", "éĹ", "Ń", "æĸ", "ĩ", "ä»", "¶", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcode", "[", "c", "x", "].", "f", "Ġ=", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcode", "[", "c", "x", "].", "l", "Ġ=", "Ġy", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcode", "[", "c", "x", "].", "a", "Ġ=", "Ġz", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcx", "++;", "Ċ", "}", "Ċ", "Ċ", "void", "Ġlist", "code", "(", "int", "Ġcx", "0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġcx", "0", ";", "Ġi", "Ġ<", "Ġcx", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġm", "n", "emonic", "[", "code", "[", "i", "].", "f", "]", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġcode", "[", "i", "].", "l", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġcode", "[", "i", "].", "a", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}"], "dataflow_graph": [["x", 11, "comesFrom", ["x"], [1]], ["y", 15, "comesFrom", ["y"], [2]], ["z", 19, "comesFrom", ["z"], [3]], ["i", 25, "comesFrom", ["i"], [23]], ["i", 27, "comesFrom", ["i"], [23]], ["i", 29, "comesFrom", ["i"], [23]], ["i", 32, "comesFrom", ["i"], [23]], ["i", 35, "comesFrom", ["i"], [23]], ["i", 38, "comesFrom", ["i"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::349", "code": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main(){\r\n\tint *a;\r\n\tint b;\r\n\tb = 5;\r\n\r\n\ta = &b;\r\n\tprintf(\"%d\\n\",a);\r\n\t(*a)++;\r\n\tprintf(\"%d %d\\n\",a,b);\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(){", "č", "Ċ", "ĉ", "int", "Ġ*", "a", ";", "č", "Ċ", "ĉ", "int", "Ġb", ";", "č", "Ċ", "ĉ", "b", "Ġ=", "Ġ5", ";", "č", "Ċ", "č", "Ċ", "ĉ", "a", "Ġ=", "Ġ&", "b", ";", "č", "Ċ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "a", ");", "č", "Ċ", "ĉ", "(*", "a", ")", "++;", "č", "Ċ", "ĉ", "printf", "(\"", "%", "d", "Ġ%", "d", "\\", "n", "\",", "a", ",", "b", ");", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["a", 7, "comesFrom", ["a"], [4]], ["a", 8, "comesFrom", ["a"], [4]], ["a", 10, "comesFrom", ["a"], [4]], ["b", 5, "comesFrom", ["b"], [3]], ["b", 11, "comesFrom", ["b"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::350", "code": "#include \"MaterialNode.hpp\"\n#include \"NodeVisitor.hpp\"\n\nbool MaterialNode::accept(NodeVisitor& visitor)\n{\n  if(visitor.visit(*this)) {\n    for(std::list<SceneNode*>::iterator i = lstChildren.begin();\n\ti != lstChildren.end();\n\ti++)\n      {\n\tif(!(*i)->accept(visitor)) {\n\t  std::cerr << \"Error in traversel of: \" << *this << std::endl;\n\t  break;\n\t}\n      }\n  }\n  return true;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Material", "Node", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Node", "Vis", "itor", ".", "h", "pp", "\"", "Ċ", "Ċ", "bool", "ĠMaterial", "Node", "::", "accept", "(", "Node", "Vis", "itor", "&", "Ġvisitor", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "(", "vis", "itor", ".", "vis", "it", "(*", "this", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "std", "::", "list", "<", "Scene", "Node", "*", ">", "::", "iterator", "Ġi", "Ġ=", "Ġl", "st", "Children", ".", "begin", "();", "Ċ", "ĉ", "i", "Ġ!=", "Ġl", "st", "Children", ".", "end", "();", "Ċ", "ĉ", "i", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "ĉ", "if", "(", "!", "(*", "i", ")", "->", "accept", "(", "vis", "itor", "))", "Ġ{", "Ċ", "ĉ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Error", "Ġin", "Ġtra", "ver", "sel", "Ġof", ":", "Ġ\"", "Ġ<<", "Ġ*", "this", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "Ġ", "Ġbreak", ";", "Ċ", "ĉ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [4]], ["i", 10, "comesFrom", ["i"], [4]], ["i", 11, "comesFrom", ["i"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::351", "code": "/**\n * (c) 2014-2016 Alexandro Sanchez Bach. All rights reserved.\n * Released under GPL v2 license. Read LICENSE for more details.\n */\n\n#include \"opengl_fence.h\"\n\nnamespace gfx {\nnamespace opengl {\n\nvoid OpenGLFence::clear() {\n    signaled = false;\n}\n\nvoid OpenGLFence::signal() {\n    signaled = true;\n    cv.notify_all();\n}\n\nvoid OpenGLFence::wait() {\n    std::unique_lock<std::mutex> lock(mutex);\n    cv.wait(lock, [&]{ return signaled; });\n}\n\nvoid OpenGLFence::wait(Clock::duration timeout) {\n    std::unique_lock<std::mutex> lock(mutex);\n    cv.wait_for(lock, timeout, [&]{ return signaled; });\n}\n\n}  // namespace opengl\n}  // namespace gfx\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ(", "c", ")", "Ġ2014", "-", "2016", "ĠAlexand", "ro", "ĠSanchez", "ĠBach", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "ĠReleased", "Ġunder", "ĠGPL", "Ġv", "2", "Ġlicense", ".", "ĠRead", "ĠLIC", "ENSE", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "op", "eng", "l", "_", "f", "ence", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġg", "fx", "Ġ{", "Ċ", "names", "pace", "Ġopen", "gl", "Ġ{", "Ċ", "Ċ", "void", "ĠOpenGL", "F", "ence", "::", "clear", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsignaled", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOpenGL", "F", "ence", "::", "sign", "al", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsignaled", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "v", ".", "not", "ify", "_", "all", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOpenGL", "F", "ence", "::", "wait", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mut", "ex", ">", "Ġlock", "(", "mut", "ex", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "v", ".", "wait", "(", "lock", ",", "Ġ[&", "]", "{", "Ġreturn", "Ġsignaled", ";", "Ġ});", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOpenGL", "F", "ence", "::", "wait", "(", "Clock", "::", "duration", "Ġtimeout", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mut", "ex", ">", "Ġlock", "(", "mut", "ex", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "v", ".", "wait", "_", "for", "(", "lock", ",", "Ġtimeout", ",", "Ġ[&", "]", "{", "Ġreturn", "Ġsignaled", ";", "Ġ});", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġopen", "gl", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġg", "fx", "Ċ"], "dataflow_graph": [["signaled", 11, "comesFrom", ["signaled"], [3]], ["signaled", 19, "comesFrom", ["signaled"], [3]], ["timeout", 18, "comesFrom", ["timeout"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::352", "code": "//Factorial Trailing Zeroes\nclass Solution {\npublic:\n    int trailingZeroes(int n) {\n        if(n == 0)\n            return 0;\n        int n2 = log2(n);\n        int n5 = log(n)/log(5);\n        int x2 = 0;\n        int x5 = 0;\n        for(int i = 1;i <= n2;i++)\n            x2 += n/pow(2, i);\n        for(int i = 1;i <= n5;i++)\n            x5 += n/pow(5, i);\n        return min(x2, x5);\n    }\n};\n", "code_tokens": ["Ġ//", "Fact", "orial", "ĠTra", "iling", "ĠZer", "oes", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtrailing", "Z", "er", "oes", "(", "int", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "n", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", "2", "Ġ=", "Ġlog", "2", "(", "n", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", "5", "Ġ=", "Ġlog", "(", "n", ")/", "log", "(", "5", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġx", "2", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġx", "5", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "i", "Ġ<=", "Ġn", "2", ";", "i", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "2", "Ġ+=", "Ġn", "/", "p", "ow", "(", "2", ",", "Ġi", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "i", "Ġ<=", "Ġn", "5", ";", "i", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "5", "Ġ+=", "Ġn", "/", "p", "ow", "(", "5", ",", "Ġi", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmin", "(", "x", "2", ",", "Ġx", "5", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["n", 2, "comesFrom", ["n"], [1]], ["n", 5, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 17, "comesFrom", ["n"], [1]], ["n", 25, "comesFrom", ["n"], [1]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 15, "comesFrom", ["i"], [12]], ["i", 19, "comesFrom", ["i"], [12]], ["i", 21, "comesFrom", ["i"], [20]], ["i", 23, "comesFrom", ["i"], [20]], ["i", 27, "comesFrom", ["i"], [20]], ["n2", 14, "comesFrom", ["n2"], [3]], ["n5", 22, "comesFrom", ["n5"], [6]], ["x2", 29, "comesFrom", ["x2"], [16]], ["x5", 30, "comesFrom", ["x5"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::353", "code": "﻿#include <stdio.h>\n\ndouble f(int n)\n{\n    int i = 0;\n    int k = 1;\n    double r = 0.000;\n    double fi = 0.000;\n\n    for (i = 1; i < n+ 1; ++i)\n    {\n        fi = i;\n        r += k*1.000/fi;\n        k = -k;\n    }\n\n    return r;\n}\n\nint main()\n{\n    int n;\n    int m;\n\n    scanf(\"%d\",&n);\n\n    while(n-- >0 )\n    {\n        scanf(\"%d\",&m);\n        printf(\"%.2lf\\n\",f(m));\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġï", "»", "¿", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "double", "Ġf", "(", "int", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġk", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġr", "Ġ=", "Ġ0", ".", "000", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġfi", "Ġ=", "Ġ0", ".", "000", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġn", "+", "Ġ1", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfi", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġr", "Ġ+=", "Ġk", "*", "1", ".", "000", "/", "fi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġk", "Ġ=", "Ġ-", "k", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġr", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "n", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "n", "--", "Ġ>", "0", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "m", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%.", "2", "lf", "\\", "n", "\",", "f", "(", "m", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 11, "comesFrom", ["i"], [6]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 22, "comesFrom", ["n"], [19]], ["n", 23, "comesFrom", ["n"], [19]], ["k", 13, "comesFrom", ["k"], [3]], ["k", 16, "comesFrom", ["k"], [15]], ["fi", 14, "comesFrom", ["fi"], [10]], ["r", 17, "comesFrom", ["r"], [12]], ["m", 25, "comesFrom", ["m"], [20]], ["m", 28, "comesFrom", ["m"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::354", "code": "// Metashell - Interactive C++ template metaprogramming shell\n// Copyright (C) 2016, Abel Sinkovics (abel@sinkovics.hu)\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#include <metashell/data/process_output.hpp>\n\n#include <boost/algorithm/string/replace.hpp>\n\nnamespace\n{\n  std::string dos2unix(std::string s_)\n  {\n    boost::algorithm::replace_all(s_, \"\\r\\n\", \"\\n\");\n    return s_;\n  }\n}\n\nnamespace metashell\n{\n  namespace data\n  {\n    process_output dos2unix(process_output o_)\n    {\n      return {o_.status, ::dos2unix(move(o_.standard_output)),\n              ::dos2unix(move(o_.standard_error))};\n    }\n\n    bool exit_success(const process_output& o_)\n    {\n      return exit_success(o_.status);\n    }\n  }\n}\n", "code_tokens": ["Ġ//", "ĠMet", "as", "hell", "Ġ-", "ĠInteractive", "ĠC", "++", "Ġtemplate", "Ġmet", "ap", "rogram", "ming", "Ġshell", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2016", ",", "ĠAbel", "ĠS", "ink", "ov", "ics", "Ġ(", "abel", "@", "s", "ink", "ov", "ics", ".", "hu", ")", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "//", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "//", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "//", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "//", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "met", "as", "hell", "/", "data", "/", "process", "_", "output", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "al", "gorithm", "/", "string", "/", "replace", ".", "h", "pp", ">", "Ċ", "Ċ", "names", "pace", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġdos", "2", "un", "ix", "(", "std", "::", "string", "Ġs", "_", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġboost", "::", "al", "gorithm", "::", "replace", "_", "all", "(", "s", "_", ",", "Ġ\"\\", "r", "\\", "n", "\",", "Ġ\"\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġs", "_", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "Ġmet", "as", "hell", "Ċ", "{", "Ċ", "Ġ", "Ġnamespace", "Ġdata", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprocess", "_", "output", "Ġdos", "2", "un", "ix", "(", "process", "_", "output", "Ġo", "_", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ{", "o", "_.", "status", ",", "Ġ::", "dos", "2", "un", "ix", "(", "move", "(", "o", "_.", "standard", "_", "output", ")),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ::", "dos", "2", "un", "ix", "(", "move", "(", "o", "_.", "standard", "_", "error", "))", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġexit", "_", "success", "(", "const", "Ġprocess", "_", "output", "&", "Ġo", "_", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġexit", "_", "success", "(", "o", "_.", "status", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["s_", 3, "comesFrom", ["s_"], [1]], ["s_", 4, "comesFrom", ["s_"], [1]], ["o_", 7, "comesFrom", ["o_"], [6]], ["o_", 11, "comesFrom", ["o_"], [6]], ["o_", 15, "comesFrom", ["o_"], [6]], ["o_", 18, "comesFrom", ["o_"], [6]], ["o_", 20, "comesFrom", ["o_"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::355", "code": "#include \"Barycentric.h\"\r\n#include <iostream>     // std::cout\r\n#include <sstream>      // std::stringstream\r\nusing namespace std;\r\n\r\nBarycentric::Barycentric(double u, double v, double w)\r\n{\r\n\tthis->u = u;\r\n\tthis->v = v;\r\n\tthis->w = w;\r\n}\r\n\r\n\r\nstring Barycentric::ToString()\r\n{\r\n    stringstream sstream;\r\n\tsstream << \"(\" << u << \", \" << v << \", \" << w << \")\";\r\n\treturn sstream.str();\r\n}\r\n\r\nbool Barycentric::IsValid()\r\n{\r\n\tif (u < 0.0 || v < 0.0 || w < 0.0) { return false; }\r\n\tif (abs( 1.0 - u - v - w) > 0.000001) { return false; }\r\n\treturn true;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "B", "ary", "centric", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġstd", "::", "c", "out", "č", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġstd", "::", "string", "stream", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "B", "ary", "centric", "::", "B", "ary", "centric", "(", "double", "Ġu", ",", "Ġdouble", "Ġv", ",", "Ġdouble", "Ġw", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "this", "->", "u", "Ġ=", "Ġu", ";", "č", "Ċ", "ĉ", "this", "->", "v", "Ġ=", "Ġv", ";", "č", "Ċ", "ĉ", "this", "->", "w", "Ġ=", "Ġw", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "string", "ĠB", "ary", "centric", "::", "To", "String", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "stream", "Ġs", "stream", ";", "č", "Ċ", "ĉ", "s", "stream", "Ġ<<", "Ġ\"", "(\"", "Ġ<<", "Ġu", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġv", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġw", "Ġ<<", "Ġ\"", ")", "\";", "č", "Ċ", "ĉ", "return", "Ġs", "stream", ".", "str", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "bool", "ĠB", "ary", "centric", "::", "Is", "Valid", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "if", "Ġ(", "u", "Ġ<", "Ġ0", ".", "0", "Ġ||", "Ġv", "Ġ<", "Ġ0", ".", "0", "Ġ||", "Ġw", "Ġ<", "Ġ0", ".", "0", ")", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "č", "Ċ", "ĉ", "if", "Ġ(", "abs", "(", "Ġ1", ".", "0", "Ġ-", "Ġu", "Ġ-", "Ġv", "Ġ-", "Ġw", ")", "Ġ>", "Ġ0", ".", "0000", "01", ")", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "č", "Ċ", "ĉ", "return", "Ġtrue", ";", "č", "Ċ", "}"], "dataflow_graph": [["u", 5, "comesFrom", ["u"], [2]], ["u", 6, "comesFrom", ["u"], [2]], ["u", 14, "comesFrom", ["u"], [2]], ["u", 20, "comesFrom", ["u"], [2]], ["u", 24, "comesFrom", ["u"], [2]], ["v", 7, "comesFrom", ["v"], [3]], ["v", 8, "comesFrom", ["v"], [3]], ["v", 15, "comesFrom", ["v"], [3]], ["v", 21, "comesFrom", ["v"], [3]], ["v", 25, "comesFrom", ["v"], [3]], ["w", 9, "comesFrom", ["w"], [4]], ["w", 10, "comesFrom", ["w"], [4]], ["w", 16, "comesFrom", ["w"], [4]], ["w", 22, "comesFrom", ["w"], [4]], ["w", 26, "comesFrom", ["w"], [4]], ["sstream", 13, "comesFrom", ["sstream"], [12]], ["sstream", 17, "comesFrom", ["sstream"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::356", "code": "#include <iostream>\n#include <linux/joystick.h>\n#include <GameProgram.hpp>\n\nint main( int p_Argc, char **p_ppArgv )\n{\n\tHit::GameProgram TheGame;\n\n\tif( TheGame.Initialise( ) != Hit::GameProgram::OK )\n\t{\n\t\tstd::cout << \"Failed to start the game\" << std::endl;\n\n\t\treturn 1;\n\t}\n\n\treturn TheGame.Execute( );\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "linux", "/", "joy", "stick", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Game", "Program", ".", "h", "pp", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġp", "_", "Arg", "c", ",", "Ġchar", "Ġ**", "p", "_", "pp", "Arg", "v", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "Hit", "::", "Game", "Program", "ĠThe", "Game", ";", "ĊĊ", "ĉ", "if", "(", "ĠThe", "Game", ".", "Initial", "ise", "(", "Ġ)", "Ġ!=", "ĠHit", "::", "Game", "Program", "::", "OK", "Ġ)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "F", "ailed", "Ġto", "Ġstart", "Ġthe", "Ġgame", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "ĠThe", "Game", ".", "Exec", "ute", "(", "Ġ);", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["TheGame", 4, "comesFrom", ["TheGame"], [3]], ["TheGame", 9, "comesFrom", ["TheGame"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::357", "code": "#include<iostream>\nusing namespace std;\nint main(){\n    int t, a, b;\n    cin >> t;\n    while(t--){\n        cin >> a >> b;\n        cout << ((a%b == 0)? \"YES\\n\" : \"NO\\n\");\n    }\n}\n", "code_tokens": ["Ġ#", "include", "<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġt", ",", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġt", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "t", "--", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ((", "a", "%", "b", "Ġ==", "Ġ0", ")?", "Ġ\"", "YES", "\\", "n", "\"", "Ġ:", "Ġ\"", "NO", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["t", 6, "comesFrom", ["t"], [2]], ["t", 7, "comesFrom", ["t"], [2]], ["a", 9, "comesFrom", ["a"], [3]], ["a", 12, "comesFrom", ["a"], [3]], ["b", 10, "comesFrom", ["b"], [4]], ["b", 13, "comesFrom", ["b"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::358", "code": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint count(FILE *f){\r\n\tint prew, cur, inseq=0, c=0;\r\n\tfscanf(f, \"%d\", &prew);\r\n\twhile(fscanf(f, \"%d\", &cur)==1){\r\n\t\tif(cur>prew){\r\n\t\t\tif(!inseq){\r\n\t\t\t\tc++;\r\n\t\t\t\tinseq=1;\r\n\t\t\t\t}\r\n\t\t}else{\r\n\t\t\tinseq=0;\t\r\n\t\t\t}\r\n\t\tprew=cur;\r\n\t}\r\n\treturn c;\t\r\n}\r\n\r\n\r\nint main(void){\r\n\tchar name[80];\r\n\tprintf(\"enter filename:\\n\");\r\n\tscanf(\"%s\",name);\r\n\tFILE *f = fopen(name, \"r\");\r\n\tprintf(\"%d\\n\", count(f));\r\n\tfclose(f);\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "č", "Ċ", "č", "Ċ", "int", "Ġcount", "(", "FILE", "Ġ*", "f", "){", "č", "Ċ", "ĉ", "int", "Ġpre", "w", ",", "Ġcur", ",", "Ġin", "seq", "=", "0", ",", "Ġc", "=", "0", ";", "č", "Ċ", "ĉ", "f", "scan", "f", "(", "f", ",", "Ġ\"%", "d", "\",", "Ġ&", "p", "rew", ");", "č", "Ċ", "ĉ", "while", "(", "f", "scan", "f", "(", "f", ",", "Ġ\"%", "d", "\",", "Ġ&", "cur", ")", "==", "1", "){", "č", "Ċ", "ĉ", "ĉ", "if", "(", "cur", ">", "p", "rew", "){", "č", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "!", "inse", "q", "){", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "c", "++;", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "inse", "q", "=", "1", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "}", "else", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "inse", "q", "=", "0", ";", "ĉ", "č", "Ċ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "p", "rew", "=", "cur", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "return", "Ġc", ";", "ĉ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "void", "){", "č", "Ċ", "ĉ", "char", "Ġname", "[", "80", "];", "č", "Ċ", "ĉ", "printf", "(\"", "enter", "Ġfilename", ":\\", "n", "\");", "č", "Ċ", "ĉ", "scan", "f", "(\"", "%", "s", "\",", "name", ");", "č", "Ċ", "ĉ", "FILE", "Ġ*", "f", "Ġ=", "Ġf", "open", "(", "name", ",", "Ġ\"", "r", "\");", "č", "Ċ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "Ġcount", "(", "f", "));", "č", "Ċ", "ĉ", "f", "close", "(", "f", ");", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["prew", 8, "comesFrom", ["prew"], [2]], ["prew", 13, "comesFrom", ["prew"], [2]], ["cur", 11, "comesFrom", ["cur"], [3]], ["cur", 12, "comesFrom", ["cur"], [3]], ["cur", 19, "comesFrom", ["cur"], [3]], ["inseq", 14, "comesFrom", ["inseq"], [4]], ["c", 15, "comesFrom", ["c"], [5]], ["c", 20, "comesFrom", ["c"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::359", "code": "/*\n * C++ Primer\n * Chap. 6 Ex. 6.25\n * Hao Zhang\n * 2016.09.02\n * main.cpp\n */\n\n#include <iostream>\nusing std::cout;\nusing std::cerr;\nusing std::endl;\n\n#include <string>\nusing std::string;\n\nint main(int argc, char *argv[])\n{\n    if (argc != 3) {\n        cerr << \"Wrong # of arguments\" << endl;\n        return -1;\n    }\n\n    string s1 = argv[1];\n    string s2 = argv[2];\n    string cat = s1 + \" \" + s2;\n    cout << cat << endl;\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠC", "++", "ĠPrim", "er", "Ċ", "Ġ*", "ĠChap", ".", "Ġ6", "ĠEx", ".", "Ġ6", ".", "25", "Ċ", "Ġ*", "ĠH", "ao", "ĠZhang", "Ċ", "Ġ*", "Ġ2016", ".", "09", ".", "02", "Ċ", "Ġ*", "Ġmain", ".", "cpp", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "using", "Ġstd", "::", "cer", "r", ";", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ!=", "Ġ3", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "Wr", "ong", "Ġ#", "Ġof", "Ġarguments", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġs", "1", "Ġ=", "Ġarg", "v", "[", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġs", "2", "Ġ=", "Ġarg", "v", "[", "2", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġcat", "Ġ=", "Ġs", "1", "Ġ+", "Ġ\"", "Ġ\"", "Ġ+", "Ġs", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġcat", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 7, "comesFrom", ["argc"], [5]], ["s1", 15, "comesFrom", ["s1"], [10]], ["s2", 16, "comesFrom", ["s2"], [12]], ["cat", 18, "comesFrom", ["cat"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::360", "code": "#include <iostream>\n\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Weffc++\"\n#pragma GCC diagnostic ignored \"-Wunused-local-typedefs\"\n#include <boost/function.hpp>\n#pragma GCC diagnostic pop\n\nstruct Speaker\n{\n  Speaker(const std::string hello_message, const std::string bye_message)\n    : m_hello_message(hello_message),\n      m_bye_message(bye_message)\n  {\n\n  }\n\n  void SayHello() const { std::cout << m_hello_message << '\\n'; }\n  void SayBye() const { std::cout << m_bye_message << '\\n'; }\n\n  const std::string m_hello_message;\n  const std::string m_bye_message;\n};\n\nint main()\n{\n  const Speaker s1(\"Hello!\",\"Bye!\");\n  const Speaker s2(\"HELLO!\",\"BYE!\");\n\n  const boost::function<void (const Speaker*)> say_hello_function = &Speaker::SayHello;\n  const boost::function<void (const Speaker*)> say_bye_function = &Speaker::SayBye;\n\n  say_hello_function(&s1);\n  say_bye_function(&s1);\n\n  say_hello_function(&s2);\n  say_bye_function(&s2);\n}\n\n/* Screen output:\n\nHello!\nBye!\nHELLO!\nBYE!\nPress <RETURN> to close this window...\n\n*/\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "pr", "ag", "ma", "ĠGCC", "Ġdiagnostic", "Ġpush", "Ċ", "#", "pr", "ag", "ma", "ĠGCC", "Ġdiagnostic", "Ġignored", "Ġ\"-", "We", "ff", "c", "++", "\"", "Ċ", "#", "pr", "ag", "ma", "ĠGCC", "Ġdiagnostic", "Ġignored", "Ġ\"-", "W", "un", "used", "-", "local", "-", "ty", "ped", "ef", "s", "\"", "Ċ", "#", "include", "Ġ<", "boost", "/", "function", ".", "h", "pp", ">", "Ċ", "#", "pr", "ag", "ma", "ĠGCC", "Ġdiagnostic", "Ġpop", "Ċ", "Ċ", "struct", "ĠSpeaker", "Ċ", "{", "Ċ", "Ġ", "ĠSpeaker", "(", "const", "Ġstd", "::", "string", "Ġhello", "_", "message", ",", "Ġconst", "Ġstd", "::", "string", "Ġbye", "_", "message", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġm", "_", "hello", "_", "message", "(", "hello", "_", "message", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "bye", "_", "message", "(", "bye", "_", "message", ")", "Ċ", "Ġ", "Ġ{", "ĊĊ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġvoid", "ĠSay", "Hello", "()", "Ġconst", "Ġ{", "Ġstd", "::", "c", "out", "Ġ<<", "Ġm", "_", "hello", "_", "message", "Ġ<<", "Ġ'", "\\", "n", "';", "Ġ}", "Ċ", "Ġ", "Ġvoid", "ĠSay", "By", "e", "()", "Ġconst", "Ġ{", "Ġstd", "::", "c", "out", "Ġ<<", "Ġm", "_", "bye", "_", "message", "Ġ<<", "Ġ'", "\\", "n", "';", "Ġ}", "ĊĊ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġm", "_", "hello", "_", "message", ";", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġm", "_", "bye", "_", "message", ";", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġconst", "ĠSpeaker", "Ġs", "1", "(\"", "Hello", "!", "\",\"", "By", "e", "!\"", ");", "Ċ", "Ġ", "Ġconst", "ĠSpeaker", "Ġs", "2", "(\"", "HE", "LL", "O", "!", "\",\"", "BY", "E", "!\"", ");", "ĊĊ", "Ġ", "Ġconst", "Ġboost", "::", "function", "<", "void", "Ġ(", "const", "ĠSpeaker", "*)", ">", "Ġsay", "_", "hello", "_", "function", "Ġ=", "Ġ&", "Spe", "aker", "::", "Say", "Hello", ";", "Ċ", "Ġ", "Ġconst", "Ġboost", "::", "function", "<", "void", "Ġ(", "const", "ĠSpeaker", "*)", ">", "Ġsay", "_", "bye", "_", "function", "Ġ=", "Ġ&", "Spe", "aker", "::", "Say", "By", "e", ";", "ĊĊ", "Ġ", "Ġsay", "_", "hello", "_", "function", "(&", "s", "1", ");", "Ċ", "Ġ", "Ġsay", "_", "bye", "_", "function", "(&", "s", "1", ");", "ĊĊ", "Ġ", "Ġsay", "_", "hello", "_", "function", "(&", "s", "2", ");", "Ċ", "Ġ", "Ġsay", "_", "bye", "_", "function", "(&", "s", "2", ");", "Ċ", "}", "Ċ", "Ċ", "/*", "ĠScreen", "Ġoutput", ":", "Ċ", "Ċ", "Hello", "!", "Ċ", "By", "e", "!", "Ċ", "HE", "LL", "O", "!", "Ċ", "BY", "E", "!", "Ċ", "Press", "Ġ<", "RET", "URN", ">", "Ġto", "Ġclose", "Ġthis", "Ġwindow", "...", "Ċ", "Ċ", "*/", "Ċ"], "dataflow_graph": [["hello_message", 4, "comesFrom", ["hello_message"], [1]], ["bye_message", 6, "comesFrom", ["bye_message"], [2]], ["say_hello_function", 22, "comesFrom", ["say_hello_function"], [18]], ["say_hello_function", 26, "comesFrom", ["say_hello_function"], [18]], ["s1", 23, "comesFrom", ["s1"], [16]], ["s1", 25, "comesFrom", ["s1"], [16]], ["say_bye_function", 24, "comesFrom", ["say_bye_function"], [20]], ["say_bye_function", 28, "comesFrom", ["say_bye_function"], [20]], ["s2", 27, "comesFrom", ["s2"], [17]], ["s2", 29, "comesFrom", ["s2"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::361", "code": "/**\n * Copyright (C) 2015-2016 Jan Hajer\n */\n\n#include \"boca/generic/Types.hh\"\n#include \"boca/plotting/Orientation.hh\"\n#include \"boca/generic/DEBUG_MACROS.hh\"\n\nnamespace boca\n{\n\nusing namespace std::string_literals;\n\nstd::string Name(Orientation orientation)\n{\n    auto name = \"\"s;\n    FlagSwitch(orientation, [&](Orientation orientation_1) {\n        switch (orientation_1) {\n        case Orientation::none : name += \" None\"; break;\n        case Orientation::center : name += \" Center\"; break;\n        case Orientation::left : name += \" Left\"; break;\n        case Orientation::right : name += \" Right\"; break;\n        case Orientation::top : name += \" Top\"; break;\n        case Orientation::bottom : name += \" Bottom\"; break;\n        case Orientation::outside : name += \" Outside\"; break;\n        default : name += std::to_string(to_int(orientation_1)); break;\n        }\n    });\n    INFO(to_int(orientation), name);\n    return name;\n}\n\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "-", "2016", "ĠJan", "ĠHaj", "er", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "b", "oca", "/", "generic", "/", "Types", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "b", "oca", "/", "plot", "ting", "/", "O", "rient", "ation", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "b", "oca", "/", "generic", "/", "DEBUG", "_", "MAC", "R", "OS", ".", "hh", "\"", "Ċ", "Ċ", "names", "pace", "Ġb", "oca", "Ċ", "{", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", "::", "string", "_", "liter", "als", ";", "Ċ", "Ċ", "std", "::", "string", "ĠName", "(", "O", "rient", "ation", "Ġorientation", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġname", "Ġ=", "Ġ\"\"", "s", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFlag", "Switch", "(", "orient", "ation", ",", "Ġ[&", "](", "O", "rient", "ation", "Ġorientation", "_", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġswitch", "Ġ(", "orient", "ation", "_", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠOrient", "ation", "::", "none", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠNone", "\";", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠOrient", "ation", "::", "center", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠCenter", "\";", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠOrient", "ation", "::", "left", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠLeft", "\";", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠOrient", "ation", "::", "right", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠRight", "\";", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠOrient", "ation", "::", "top", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠTop", "\";", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠOrient", "ation", "::", "bottom", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠBottom", "\";", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠOrient", "ation", "::", "outside", "Ġ:", "Ġname", "Ġ+=", "Ġ\"", "ĠOutside", "\";", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdefault", "Ġ:", "Ġname", "Ġ+=", "Ġstd", "::", "to", "_", "string", "(", "to", "_", "int", "(", "orient", "ation", "_", "1", "));", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ});", "Ċ", "Ġ", "Ġ", "Ġ", "ĠINFO", "(", "to", "_", "int", "(", "orient", "ation", "),", "Ġname", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġname", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["orientation", 5, "comesFrom", ["orientation"], [2]], ["orientation", 28, "comesFrom", ["orientation"], [2]], ["orientation_1", 7, "comesFrom", ["orientation_1"], [6]], ["orientation_1", 25, "comesFrom", ["orientation_1"], [6]], ["name", 29, "comesFrom", ["name"], [22]], ["name", 30, "comesFrom", ["name"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::362", "code": "/* \n * File:   StateMapper.cpp\n * Author: ntanaka\n * \n * Created on 2014/11/29, 22:43\n */\n\n#include \"StateMapper.h\"\n#include \"PicoJsonIF.h\"\nnamespace jsonMapper {\n\n    StateMapper::StateMapper() {\n    }\n\n    //StateMapper::StateMapper(const StateMapper& orig) {\n    //}\n\n    StateMapper::~StateMapper() {\n    }\n\n    utah::State* StateMapper::create(const picojson::value& obj, std::map<const utah::Symbol*, utah::State*>& stateMap) {\n        picojson::array arrayObj = PicoJsonIF::toArray(obj);\n        picojson::value& name = arrayObj[0];\n        utah::State* thisState = new utah::State(name.get<std::string>());\n\n        picojson::value& childrenArray = arrayObj[1];\n        for (picojson::value obj2 : PicoJsonIF::toArray(childrenArray)) {\n            utah::State* childState = StateMapper::create(obj2, stateMap);\n            thisState->addChild(childState);\n            childState->setParent(thisState);\n            stateMap[childState->getName()] = childState;\n        }\n        return thisState;\n    }\n}", "code_tokens": ["Ġ/*", "Ġ", "Ċ", "Ġ*", "ĠFile", ":", "Ġ", "Ġ", "ĠState", "M", "apper", ".", "cpp", "Ċ", "Ġ*", "ĠAuthor", ":", "Ġn", "tan", "aka", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠCreated", "Ġon", "Ġ2014", "/", "11", "/", "29", ",", "Ġ22", ":", "43", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "State", "M", "apper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "P", "ico", "J", "son", "IF", ".", "h", "\"", "Ċ", "names", "pace", "Ġjson", "M", "apper", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠState", "M", "apper", "::", "State", "M", "apper", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "State", "M", "apper", "::", "State", "M", "apper", "(", "const", "ĠState", "M", "apper", "&", "Ġorig", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "}", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠState", "M", "apper", "::", "~", "State", "M", "apper", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġut", "ah", "::", "State", "*", "ĠState", "M", "apper", "::", "create", "(", "const", "Ġp", "ico", "json", "::", "value", "&", "Ġobj", ",", "Ġstd", "::", "map", "<", "const", "Ġut", "ah", "::", "Sy", "mbol", "*,", "Ġut", "ah", "::", "State", "*", ">", "&", "Ġstate", "Map", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "ico", "json", "::", "array", "Ġarray", "Obj", "Ġ=", "ĠP", "ico", "J", "son", "IF", "::", "to", "Array", "(", "obj", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "ico", "json", "::", "value", "&", "Ġname", "Ġ=", "Ġarray", "Obj", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġut", "ah", "::", "State", "*", "Ġthis", "State", "Ġ=", "Ġnew", "Ġut", "ah", "::", "State", "(", "name", ".", "get", "<", "std", "::", "string", ">", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "ico", "json", "::", "value", "&", "Ġchildren", "Array", "Ġ=", "Ġarray", "Obj", "[", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "p", "ico", "json", "::", "value", "Ġobj", "2", "Ġ:", "ĠP", "ico", "J", "son", "IF", "::", "to", "Array", "(", "children", "Array", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġut", "ah", "::", "State", "*", "Ġchild", "State", "Ġ=", "ĠState", "M", "apper", "::", "create", "(", "obj", "2", ",", "Ġstate", "Map", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "State", "->", "add", "Child", "(", "child", "State", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchild", "State", "->", "set", "Parent", "(", "this", "State", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstate", "Map", "[", "child", "State", "->", "get", "Name", "()", "]", "Ġ=", "Ġchild", "State", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġthis", "State", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}"], "dataflow_graph": [["arrayObj", 9, "comesFrom", ["arrayObj"], [5]], ["arrayObj", 14, "comesFrom", ["arrayObj"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::363", "code": "#include <iostream>\n#include <fstream>\n#include <cstring>\n#include <math.h>\nusing namespace std;\n\n#include \"glob.cpp\"\n#include \"schnibbler.cpp\"\n\nvoid help()\n    {\n      printf(\"Syntax: time ./mesyread  FILE.mdat 100\");\n    }\n\n\nint main(int argc, char** argv) {\n    char outputfile_trunc[512];\n    unsigned char byte;\n    TSchnibbler* schnibbler;\n\n    if (argc < 1) {\n      printf(\"usage: mesycut PathToListModeFile.mdat\\n\");\n    }\n    else {\n        strcpy(outputfile_trunc, argv[1]);\n\n        schnibbler = new TSchnibbler();\n\n        schnibbler->set_outputfile_trunc(outputfile_trunc);\n\n        schnibbler->open_outputfile();\n        \n        while (!schnibbler->end_of_file()) {\n            byte = std::getchar();\n            schnibbler->add_byte(byte);\n        }\n\n        schnibbler->close_outputfile();\n\n        fprintf(stderr, \"EOF \\n\");\n\n        delete(schnibbler);\n    }\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "include", "Ġ\"", "gl", "ob", ".", "cpp", "\"", "Ċ", "#", "include", "Ġ\"", "s", "chn", "ib", "bler", ".", "cpp", "\"", "Ċ", "Ċ", "void", "Ġhelp", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Sy", "ntax", ":", "Ġtime", "Ġ./", "mes", "y", "read", "Ġ", "ĠFILE", ".", "md", "at", "Ġ100", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġoutput", "file", "_", "tr", "unc", "[", "512", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġchar", "Ġbyte", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTS", "chn", "ib", "bler", "*", "Ġs", "chn", "ib", "bler", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ<", "Ġ1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "usage", ":", "Ġm", "esy", "cut", "ĠPath", "To", "List", "Mode", "File", ".", "md", "at", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstr", "c", "py", "(", "output", "file", "_", "tr", "unc", ",", "Ġarg", "v", "[", "1", "]);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "chn", "ib", "bler", "Ġ=", "Ġnew", "ĠTS", "chn", "ib", "bler", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "chn", "ib", "bler", "->", "set", "_", "output", "file", "_", "tr", "unc", "(", "output", "file", "_", "tr", "unc", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "chn", "ib", "bler", "->", "open", "_", "output", "file", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(!", "s", "chn", "ib", "bler", "->", "end", "_", "of", "_", "file", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbyte", "Ġ=", "Ġstd", "::", "get", "char", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "chn", "ib", "bler", "->", "add", "_", "byte", "(", "byte", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "chn", "ib", "bler", "->", "close", "_", "output", "file", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġf", "printf", "(", "st", "der", "r", ",", "Ġ\"", "EO", "F", "Ġ\\", "n", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "(", "s", "chn", "ib", "bler", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["schnibbler", 15, "comesFrom", ["schnibbler"], [14]], ["schnibbler", 18, "comesFrom", ["schnibbler"], [14]], ["schnibbler", 20, "comesFrom", ["schnibbler"], [14]], ["schnibbler", 24, "comesFrom", ["schnibbler"], [14]], ["schnibbler", 27, "comesFrom", ["schnibbler"], [14]], ["schnibbler", 31, "comesFrom", ["schnibbler"], [14]], ["argc", 9, "comesFrom", ["argc"], [4]], ["byte", 26, "comesFrom", ["byte"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::364", "code": "/*\n * Copyright 2007-2014 Katholieke Universiteit Leuven\n *\n * Use of this software is governed by the GNU LGPLv3.0 license\n *\n * Written by Broes De Cat and Maarten Marien, K.U.Leuven, Departement\n * Computerwetenschappen, Celestijnenlaan 200A, B-3001 Leuven, Belgium\n */\n#include \"external/ConstraintVisitor.hpp\"\n#include \"utils/Print.hpp\"\n\nusing namespace std;\nusing namespace MinisatID;\n\ntemplate<typename S>\nvoid MinisatID::printList(const litlist& list, const std::string& concat, S& stream, LiteralPrinter* solver) {\n\tbool begin = true;\n\tfor (auto i = list.cbegin(); i < list.cend(); ++i) {\n\t\tif (not begin) {\n\t\t\tstream << concat;\n\t\t}\n\t\tbegin = false;\n\t\tstream << toString(*i, solver);\n\t}\n}\n\ntemplate void MinisatID::printList(const litlist&, const std::string&, std::ostream&, LiteralPrinter*);\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2007", "-", "2014", "ĠKath", "ol", "ie", "ke", "ĠUnivers", "ite", "it", "ĠLe", "u", "ven", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUse", "Ġof", "Ġthis", "Ġsoftware", "Ġis", "Ġgoverned", "Ġby", "Ġthe", "ĠGNU", "ĠLG", "PL", "v", "3", ".", "0", "Ġlicense", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠWritten", "Ġby", "ĠBro", "es", "ĠDe", "ĠCat", "Ġand", "ĠMa", "arten", "ĠMar", "ien", ",", "ĠK", ".", "U", ".", "Le", "u", "ven", ",", "ĠDep", "art", "ement", "Ċ", "Ġ*", "ĠComputer", "w", "et", "ens", "ch", "app", "en", ",", "ĠCelest", "ij", "nen", "la", "an", "Ġ200", "A", ",", "ĠB", "-", "300", "1", "ĠLe", "u", "ven", ",", "ĠBelgium", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "external", "/", "Con", "str", "aint", "Vis", "itor", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "utils", "/", "Print", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "using", "Ġnamespace", "ĠMin", "is", "at", "ID", ";", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠS", ">", "Ċ", "void", "ĠMin", "is", "at", "ID", "::", "print", "List", "(", "const", "Ġlit", "list", "&", "Ġlist", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġconc", "at", ",", "ĠS", "&", "Ġstream", ",", "ĠLit", "eral", "Pr", "inter", "*", "Ġsol", "ver", ")", "Ġ{", "Ċ", "ĉ", "bool", "Ġbegin", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "for", "Ġ(", "auto", "Ġi", "Ġ=", "Ġlist", ".", "c", "begin", "();", "Ġi", "Ġ<", "Ġlist", ".", "cend", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "not", "Ġbegin", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "stream", "Ġ<<", "Ġconc", "at", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "begin", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "stream", "Ġ<<", "Ġto", "String", "(*", "i", ",", "Ġsol", "ver", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "template", "Ġvoid", "ĠMin", "is", "at", "ID", "::", "print", "List", "(", "const", "Ġlit", "list", "&", ",", "Ġconst", "Ġstd", "::", "string", "&", ",", "Ġstd", "::", "ost", "ream", "&", ",", "ĠLit", "eral", "Pr", "inter", "*", ");", "Ċ"], "dataflow_graph": [["i", 11, "comesFrom", ["i"], [8]], ["i", 14, "comesFrom", ["i"], [8]], ["i", 21, "comesFrom", ["i"], [8]], ["begin", 15, "comesFrom", ["begin"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::365", "code": "#include <iostream>\n#include <sys/stat.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/ioctl.h>\nusing namespace std;\n#include \"barra.cpp\"\n#include \"copia.cpp\"\nint main(int argc, char* argv[]){\n\tif(argc < 3){\n\t\tcerr<<\"Sono necessari almeno 2 argomenti\"<<endl;\n\t\treturn 1;\n\t}\n\tfor(int i = 1; i < argc; i++){\n\t\t//cout<<argv[i]<<endl;\n\t}\n\tCopia c(argv[1],argv[2]);\n\tc.superCopia();\n\tcout << endl;\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "stat", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "io", "ctl", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "include", "Ġ\"", "bar", "ra", ".", "cpp", "\"", "Ċ", "#", "include", "Ġ\"", "cop", "ia", ".", "cpp", "\"", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "{", "Ċ", "ĉ", "if", "(", "arg", "c", "Ġ<", "Ġ3", "){", "Ċ", "ĉ", "ĉ", "cer", "r", "<<", "\"", "S", "ono", "Ġnecess", "ari", "Ġal", "men", "o", "Ġ2", "Ġarg", "om", "ent", "i", "\"", "<<", "end", "l", ";", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġarg", "c", ";", "Ġi", "++", "){", "Ċ", "ĉ", "ĉ", "//", "c", "out", "<<", "arg", "v", "[", "i", "]", "<<", "end", "l", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Cop", "ia", "Ġc", "(", "arg", "v", "[", "1", "],", "arg", "v", "[", "2", "]);", "Ċ", "ĉ", "c", ".", "super", "Cop", "ia", "();", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 4, "comesFrom", ["argc"], [2]], ["argc", 9, "comesFrom", ["argc"], [2]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::366", "code": "/*\nCopyright (C) 2010-2018 The ESPResSo project\n\nThis file is part of ESPResSo.\n\nESPResSo is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nESPResSo is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n#define BOOST_TEST_MODULE d3q19 test\n#define BOOST_TEST_DYN_LINK\n#include <boost/test/unit_test.hpp>\n\n#include \"grid_based_algorithms/lb-d3q19.hpp\"\n\nBOOST_AUTO_TEST_CASE(d3q19) {\n  for (int i = 0; i < 19; ++i) {\n    for (int j = 0; j < 19; ++j) {\n      BOOST_CHECK(D3Q19::e_ki[i][j] == D3Q19::e_ki_transposed[j][i]);\n    }\n  }\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "Ġ(", "C", ")", "Ġ2010", "-", "2018", "ĠThe", "ĠESP", "Res", "So", "Ġproject", "Ċ", "Ċ", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠESP", "Res", "So", ".", "Ċ", "Ċ", "ES", "PR", "es", "So", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "ES", "PR", "es", "So", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "but", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "MER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "GN", "U", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "along", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "*/", "Ċ", "#", "define", "ĠB", "OO", "ST", "_", "T", "EST", "_", "MOD", "ULE", "Ġd", "3", "q", "19", "Ġtest", "Ċ", "#", "define", "ĠB", "OO", "ST", "_", "T", "EST", "_", "D", "YN", "_", "L", "INK", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "unit", "_", "test", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "grid", "_", "based", "_", "al", "gorith", "ms", "/", "lb", "-", "d", "3", "q", "19", ".", "h", "pp", "\"", "Ċ", "Ċ", "B", "OO", "ST", "_", "AUT", "O", "_", "T", "EST", "_", "C", "ASE", "(", "d", "3", "q", "19", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ19", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġ19", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "CHECK", "(", "D", "3", "Q", "19", "::", "e", "_", "ki", "[", "i", "][", "j", "]", "Ġ==", "ĠD", "3", "Q", "19", "::", "e", "_", "ki", "_", "trans", "posed", "[", "j", "][", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 5, "comesFrom", ["i"], [3]], ["i", 11, "comesFrom", ["i"], [3]], ["i", 15, "comesFrom", ["i"], [3]], ["j", 7, "comesFrom", ["j"], [6]], ["j", 8, "comesFrom", ["j"], [6]], ["j", 12, "comesFrom", ["j"], [6]], ["j", 14, "comesFrom", ["j"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::367", "code": "/*\n  UnOp.cc An unary  operator in the expression calculator.\n  Copyright (C) 2008-14 Sakis Kasampalis <s.kasampalis@zoho.com>\n  (this file is part of the expression calculator).\n\n  The expression calculator is free software: you can redistribute it \n  and/or modify it under the terms of the GNU General Public License \n  as published by the Free Software Foundation, either version 3 of the \n  License, or (at your option) any later version.\n\n  The expression calculator is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with the expression calculator.  If not, see \n  <http://www.gnu.org/licenses/>.\n*/\n\n#include <string>\n#include <sstream>\n#include \"UnOp.h\"\n\nusing std::string;\nusing std::stringstream;\n\n/**\n * Initialisation of an unary operator.\n * \n * @param e a pointer to the expression\n * of the operator\n */\nUnOp::UnOp(Expr* e): u_exp(e) {}\n\n\n/**\n * A string representation\n * of the unary operator. \n * \n * @return a <i>string</i>\n * instance of the unary\n * operator.\n */\nstring UnOp::toString() const\n{\n  stringstream str;\n\n  str << strOperator() << \"(\" << u_exp->toString() << \")\";\n\n  return str.str();\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "ĠUn", "Op", ".", "cc", "ĠAn", "Ġun", "ary", "Ġ", "Ġoperator", "Ġin", "Ġthe", "Ġexpression", "Ġcalculator", ".", "Ċ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "-", "14", "ĠSak", "is", "ĠKas", "amp", "alis", "Ġ<", "s", ".", "kas", "amp", "alis", "@", "z", "oho", ".", "com", ">", "Ċ", "Ġ", "Ġ(", "this", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġexpression", "Ġcalculator", ").", "ĊĊ", "Ġ", "ĠThe", "Ġexpression", "Ġcalculator", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġ", "Ċ", "Ġ", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġ", "Ċ", "Ġ", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "Ġ", "Ċ", "Ġ", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "Ġ", "ĠThe", "Ġexpression", "Ġcalculator", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġalong", "Ġwith", "Ġthe", "Ġexpression", "Ġcalculator", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ", "Ċ", "Ġ", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ\"", "Un", "Op", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "using", "Ġstd", "::", "string", "stream", ";", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠInitial", "isation", "Ġof", "Ġan", "Ġun", "ary", "Ġoperator", ".", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "Ġ@", "param", "Ġe", "Ġa", "Ġpointer", "Ġto", "Ġthe", "Ġexpression", "Ċ", "Ġ*", "Ġof", "Ġthe", "Ġoperator", "Ċ", "Ġ*/", "Ċ", "Un", "Op", "::", "Un", "Op", "(", "Ex", "pr", "*", "Ġe", "):", "Ġu", "_", "exp", "(", "e", ")", "Ġ{}", "ĊĊ", "Ċ", "/**", "Ċ", "Ġ*", "ĠA", "Ġstring", "Ġrepresentation", "Ċ", "Ġ*", "Ġof", "Ġthe", "Ġun", "ary", "Ġoperator", ".", "Ġ", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "Ġ@", "return", "Ġa", "Ġ<", "i", ">", "string", "</", "i", ">", "Ċ", "Ġ*", "Ġinstance", "Ġof", "Ġthe", "Ġun", "ary", "Ċ", "Ġ*", "Ġoperator", ".", "Ċ", "Ġ*/", "Ċ", "string", "ĠUn", "Op", "::", "to", "String", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġstring", "stream", "Ġstr", ";", "ĊĊ", "Ġ", "Ġstr", "Ġ<<", "Ġstr", "Oper", "ator", "()", "Ġ<<", "Ġ\"", "(\"", "Ġ<<", "Ġu", "_", "exp", "->", "to", "String", "()", "Ġ<<", "Ġ\"", ")", "\";", "ĊĊ", "Ġ", "Ġreturn", "Ġstr", ".", "str", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["str", 8, "comesFrom", ["str"], [7]], ["str", 12, "comesFrom", ["str"], [7]], ["str", 13, "comesFrom", ["str"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::368", "code": "#include <iostream>\n#include <string>\n#include <string.h>\n#include <stdlib.h>\n\nusing namespace std;\n\nint main()\n{\n\tint N, total, i;\n\tchar alpha['z' + 1];\n\tsize_t len;\n\tstring frase;\n\n\tcin >> N;\n\tgetline(cin, frase);\n\n\twhile(N--)\n\t{\n\t\tmemset(alpha, 0, 'z' + 1);\n\n\t\tgetline(cin, frase);\n\n\t\tlen = frase.size();\n\t\twhile(len--)\n\t\t{\n\t\t\tif(frase[len] < 'a' || 'z' < frase[len] )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talpha[frase[len]] = 1;\n\t\t}\n\n\t\tfor(total = 0, i = 'a'; i <= 'z'; i++)\n\t\t{\n\t\t\tif(alpha[i])\n\t\t\t{\n\t\t\t\ttotal++;\n\t\t\t}\n\t\t}\n\n\t\tcout << \"frase \";\n\n\t\tif(total == 26)\n\t\t{\n\t\t\tcout << \"completa\";\n\t\t}\n\t\telse if(total >= 13)\n\t\t{\n\t\t\tcout << \"quase completa\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << \"mal elaborada\";\n\t\t}\n\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "ĠN", ",", "Ġtotal", ",", "Ġi", ";", "Ċ", "ĉ", "char", "Ġalpha", "['", "z", "'", "Ġ+", "Ġ1", "];", "Ċ", "ĉ", "size", "_", "t", "Ġlen", ";", "Ċ", "ĉ", "string", "Ġfr", "ase", ";", "ĊĊ", "ĉ", "cin", "Ġ>>", "ĠN", ";", "Ċ", "ĉ", "get", "line", "(", "cin", ",", "Ġfr", "ase", ");", "ĊĊ", "ĉ", "while", "(", "N", "--", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "mem", "set", "(", "alpha", ",", "Ġ0", ",", "Ġ'", "z", "'", "Ġ+", "Ġ1", ");", "ĊĊ", "ĉ", "ĉ", "get", "line", "(", "cin", ",", "Ġfr", "ase", ");", "ĊĊ", "ĉ", "ĉ", "len", "Ġ=", "Ġfr", "ase", ".", "size", "();", "Ċ", "ĉ", "ĉ", "while", "(", "len", "--", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "fr", "ase", "[", "len", "]", "Ġ<", "Ġ'", "a", "'", "Ġ||", "Ġ'", "z", "'", "Ġ<", "Ġfr", "ase", "[", "len", "]", "Ġ)", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "continue", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "ĉ", "alpha", "[", "fr", "ase", "[", "len", "]]", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "for", "(", "total", "Ġ=", "Ġ0", ",", "Ġi", "Ġ=", "Ġ'", "a", "';", "Ġi", "Ġ<=", "Ġ'", "z", "';", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "alpha", "[", "i", "])", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "total", "++;", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "fr", "ase", "Ġ\"", ";", "ĊĊ", "ĉ", "ĉ", "if", "(", "total", "Ġ==", "Ġ26", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "com", "ple", "ta", "\";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ġif", "(", "total", "Ġ>=", "Ġ13", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "qu", "ase", "Ġcomple", "ta", "\";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "mal", "Ġelabor", "ada", "\";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["N", 9, "comesFrom", ["N"], [2]], ["N", 13, "comesFrom", ["N"], [2]], ["frase", 12, "comesFrom", ["frase"], [7]], ["frase", 18, "comesFrom", ["frase"], [7]], ["frase", 20, "comesFrom", ["frase"], [7]], ["frase", 23, "comesFrom", ["frase"], [7]], ["frase", 25, "comesFrom", ["frase"], [7]], ["frase", 28, "comesFrom", ["frase"], [7]], ["len", 22, "comesFrom", ["len"], [19]], ["len", 24, "comesFrom", ["len"], [19]], ["len", 26, "comesFrom", ["len"], [19]], ["len", 29, "comesFrom", ["len"], [19]], ["i", 32, "comesFrom", ["i"], [31]], ["i", 33, "comesFrom", ["i"], [31]], ["i", 35, "comesFrom", ["i"], [31]], ["total", 36, "comesFrom", ["total"], [30]], ["total", 38, "comesFrom", ["total"], [30]], ["total", 40, "comesFrom", ["total"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::369", "code": "#include \"MAP.h\"\n\n#include <iostream>\n#include <algorithm>\n#include <numeric>\n\nusing namespace std;\n\nvoid MAP::append( std::vector<std::string>& retrieved, std::vector<std::string>& relevant )\n{\n   float k = 1;\n   float tp = 0;\n   double avgPrecision = 0;\n   vector<string>::iterator ind;\n   vector<string>::iterator end = retrieved.end();\n   for( ind = retrieved.begin() ; ind != end ; ++ind )\n   {\n      if( find( relevant.begin(), relevant.end(), *ind ) != relevant.end() )\n      {\n         ++tp;\n         avgPrecision += tp / k;\n      }\n      ++k;\n   }\n   avgPrecision = tp > 0 ? avgPrecision / tp : 0;\n   m_avgPrecision.push_back( avgPrecision );\n}\n\nvoid MAP::clear()\n{\n   m_avgPrecision.clear();\n}\n\ndouble MAP::eval()\n{\n   return m_avgPrecision.size() > 0 ? std::accumulate( m_avgPrecision.begin(), m_avgPrecision.end(), 0.0 ) / m_avgPrecision.size() : 0;\n}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "MAP", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "n", "umeric", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "ĠMAP", "::", "append", "(", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "&", "Ġretrieved", ",", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "&", "Ġrelevant", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġfloat", "Ġk", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġfloat", "Ġt", "p", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġdouble", "Ġavg", "Pre", "cision", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġvector", "<", "string", ">", "::", "iterator", "Ġind", ";", "Ċ", "Ġ", "Ġ", "Ġvector", "<", "string", ">", "::", "iterator", "Ġend", "Ġ=", "Ġretrieved", ".", "end", "();", "Ċ", "Ġ", "Ġ", "Ġfor", "(", "Ġind", "Ġ=", "Ġretrieved", ".", "begin", "()", "Ġ;", "Ġind", "Ġ!=", "Ġend", "Ġ;", "Ġ++", "ind", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "Ġfind", "(", "Ġrelevant", ".", "begin", "(),", "Ġrelevant", ".", "end", "(),", "Ġ*", "ind", "Ġ)", "Ġ!=", "Ġrelevant", ".", "end", "()", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "tp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġavg", "Pre", "cision", "Ġ+=", "Ġt", "p", "Ġ/", "Ġk", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "k", ";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġavg", "Pre", "cision", "Ġ=", "Ġt", "p", "Ġ>", "Ġ0", "Ġ?", "Ġavg", "Pre", "cision", "Ġ/", "Ġt", "p", "Ġ:", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġm", "_", "av", "g", "Pre", "cision", ".", "push", "_", "back", "(", "Ġavg", "Pre", "cision", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMAP", "::", "clear", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġm", "_", "av", "g", "Pre", "cision", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ", "double", "ĠMAP", "::", "eval", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġm", "_", "av", "g", "Pre", "cision", ".", "size", "()", "Ġ>", "Ġ0", "Ġ?", "Ġstd", "::", "acc", "um", "ulate", "(", "Ġm", "_", "av", "g", "Pre", "cision", ".", "begin", "(),", "Ġm", "_", "av", "g", "Pre", "cision", ".", "end", "(),", "Ġ0", ".", "0", "Ġ)", "Ġ/", "Ġm", "_", "av", "g", "Pre", "cision", ".", "size", "()", "Ġ:", "Ġ0", ";", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["end", 10, "comesFrom", ["end"], [8]], ["end", 15, "comesFrom", ["end"], [8]], ["end", 21, "comesFrom", ["end"], [8]], ["end", 24, "comesFrom", ["end"], [8]], ["end", 47, "comesFrom", ["end"], [8]], ["ind", 14, "comesFrom", ["ind"], [11]], ["ind", 16, "comesFrom", ["ind"], [11]], ["ind", 22, "comesFrom", ["ind"], [11]], ["tp", 25, "comesFrom", ["tp"], [5]], ["tp", 27, "comesFrom", ["tp"], [5]], ["tp", 31, "comesFrom", ["tp"], [5]], ["tp", 33, "comesFrom", ["tp"], [5]], ["k", 28, "comesFrom", ["k"], [4]], ["k", 29, "comesFrom", ["k"], [4]], ["avgPrecision", 32, "comesFrom", ["avgPrecision"], [30]], ["avgPrecision", 36, "comesFrom", ["avgPrecision"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::370", "code": "#include<cstdio>\nint main(int argc, char **argv) {\n  unsigned int port = 65637, id = 257;\n  bool topo = false;\n  for (i = 1; i + 1 < argc; ++i) {\n    if (!strcmp(argv[i], \"-p\"))\n      sscanf(argv[++i], &port);\n    else if (!strcmp(argv[i], \"-t\"))\n      topo |= serv.Load(argv[++i]);\n    else if (!strcmp(argv[i], \"-d\"))\n      sscanf(argv[++i], \"%d\", &id);\n  }\n  if (!serv.SetPort(port))\n    return 0;\n  while (1) {\n    serv.Wait();\n    if (!strcmp(cmd, \"send\"))\n      serv.Send();\n    else if (!strcmp(cmd, \"update\")) {\n      scanf(\"%d %d\", &id, &cost);\n      serv.Update(id, cost);\n    }\n    else if (!strcmp(cmd, \"display\"))\n      serv.Display()\n  }\n}\n", "code_tokens": ["Ġ#", "include", "<", "c", "std", "io", ">", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġport", "Ġ=", "Ġ6", "56", "37", ",", "Ġid", "Ġ=", "Ġ257", ";", "Ċ", "Ġ", "Ġbool", "Ġtop", "o", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ1", ";", "Ġi", "Ġ+", "Ġ1", "Ġ<", "Ġarg", "c", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "str", "cmp", "(", "arg", "v", "[", "i", "],", "Ġ\"-", "p", "\"))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "scan", "f", "(", "arg", "v", "[", "++", "i", "],", "Ġ&", "port", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(!", "str", "cmp", "(", "arg", "v", "[", "i", "],", "Ġ\"-", "t", "\"))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtop", "o", "Ġ|", "=", "Ġserv", ".", "Load", "(", "arg", "v", "[", "++", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(!", "str", "cmp", "(", "arg", "v", "[", "i", "],", "Ġ\"-", "d", "\"))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "scan", "f", "(", "arg", "v", "[", "++", "i", "],", "Ġ\"%", "d", "\",", "Ġ&", "id", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ(!", "serv", ".", "Set", "Port", "(", "port", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġserv", ".", "Wait", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "str", "cmp", "(", "cmd", ",", "Ġ\"", "send", "\"))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġserv", ".", "Send", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(!", "str", "cmp", "(", "cmd", ",", "Ġ\"", "update", "\"))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "Ġ%", "d", "\",", "Ġ&", "id", ",", "Ġ&", "cost", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġserv", ".", "Update", "(", "id", ",", "Ġcost", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(!", "str", "cmp", "(", "cmd", ",", "Ġ\"", "display", "\"))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġserv", ".", "Display", "()", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 12, "comesFrom", ["i"], [6]], ["i", 15, "comesFrom", ["i"], [6]], ["i", 19, "comesFrom", ["i"], [6]], ["i", 24, "comesFrom", ["i"], [6]], ["i", 27, "comesFrom", ["i"], [6]], ["i", 30, "comesFrom", ["i"], [6]], ["argc", 8, "comesFrom", ["argc"], [1]], ["port", 16, "comesFrom", ["port"], [3]], ["port", 34, "comesFrom", ["port"], [3]], ["id", 31, "comesFrom", ["id"], [4]], ["id", 44, "comesFrom", ["id"], [4]], ["id", 48, "comesFrom", ["id"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::371", "code": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma comment(linker,\"/stack:1024000000,1024000000\")\n#define db(x) cout<<(x)<<endl\n#define pf(x) push_front(x)\n#define pb(x) push_back(x)\n#define mp(x,y) make_pair(x,y)\n#define ms(x,y) memset(x,y,sizeof x)\ntypedef long long LL;\nconst double pi=acos(-1),eps=1e-9;\nconst LL inf=0x3f3f3f3f,mod=1e9+7,maxn=1123456;\nLL n,k,t;\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>k>>t;\n\tif(t>=n+k)\n\t\tdb(0);\n\telse if(t<=k)\n\t\tdb(t);\n\telse if(t<=n)\n\t\tdb(k);\n\telse\n\t\tdb(n-t+k);\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "pr", "ag", "ma", "Ġcomment", "(", "link", "er", ",\"", "/", "stack", ":", "1024", "000000", ",", "1024", "000000", "\")", "Ċ", "#", "define", "Ġdb", "(", "x", ")", "Ġcout", "<<", "(", "x", ")", "<<", "end", "l", "Ċ", "#", "define", "Ġp", "f", "(", "x", ")", "Ġpush", "_", "front", "(", "x", ")", "Ċ", "#", "define", "Ġp", "b", "(", "x", ")", "Ġpush", "_", "back", "(", "x", ")", "Ċ", "#", "define", "Ġmp", "(", "x", ",", "y", ")", "Ġmake", "_", "pair", "(", "x", ",", "y", ")", "Ċ", "#", "define", "Ġms", "(", "x", ",", "y", ")", "Ġmem", "set", "(", "x", ",", "y", ",", "size", "of", "Ġx", ")", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "ĠLL", ";", "Ċ", "const", "Ġdouble", "Ġpi", "=", "ac", "os", "(-", "1", "),", "eps", "=", "1", "e", "-", "9", ";", "Ċ", "const", "ĠLL", "Ġinf", "=", "0", "x", "3", "f", "3", "f", "3", "f", "3", "f", ",", "mod", "=", "1", "e", "9", "+", "7", ",", "max", "n", "=", "1", "123", "456", ";", "Ċ", "LL", "Ġn", ",", "k", ",", "t", ";", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "ios", "::", "sync", "_", "with", "_", "std", "io", "(", "0", ");", "Ċ", "ĉ", "cin", ">>", "n", ">>", "k", ">>", "t", ";", "Ċ", "ĉ", "if", "(", "t", ">", "=", "n", "+", "k", ")", "Ċ", "ĉ", "ĉ", "db", "(", "0", ");", "Ċ", "ĉ", "else", "Ġif", "(", "t", "<", "=", "k", ")", "Ċ", "ĉ", "ĉ", "db", "(", "t", ");", "Ċ", "ĉ", "else", "Ġif", "(", "t", "<", "=", "n", ")", "Ċ", "ĉ", "ĉ", "db", "(", "k", ");", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "db", "(", "n", "-", "t", "+", "k", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["n", 25, "comesFrom", ["n"], [19]], ["n", 29, "comesFrom", ["n"], [19]], ["n", 37, "comesFrom", ["n"], [19]], ["n", 41, "comesFrom", ["n"], [19]], ["k", 26, "comesFrom", ["k"], [20]], ["k", 30, "comesFrom", ["k"], [20]], ["k", 33, "comesFrom", ["k"], [20]], ["k", 39, "comesFrom", ["k"], [20]], ["k", 43, "comesFrom", ["k"], [20]], ["t", 27, "comesFrom", ["t"], [21]], ["t", 28, "comesFrom", ["t"], [21]], ["t", 32, "comesFrom", ["t"], [21]], ["t", 35, "comesFrom", ["t"], [21]], ["t", 36, "comesFrom", ["t"], [21]], ["t", 42, "comesFrom", ["t"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::372", "code": "// Test incrementing the 8-bit memory byte pointed to by RSI. Increment RSI.\n// Note that the sum of the average use of ports 2, 3 and 7 is equal to two,\n// which tends to prove that there are two address generation instructions.\n\nint main() {\n  unsigned char memory[1000];\n  for (int i = 0; i < LOOP_ITERATIONS; ++i) {\n    asm volatile(\n        R\"(\n          movq %[address], %%rsi\n          .rept 1000\n          addb $1, (%%rsi)\n          inc %%rsi\n          .endr\n        )\"\n        :\n        : [address] \"r\"(memory)\n        : \"%rsi\");\n  }\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠTest", "Ġincrement", "ing", "Ġthe", "Ġ8", "-", "bit", "Ġmemory", "Ġbyte", "Ġpointed", "Ġto", "Ġby", "ĠR", "SI", ".", "ĠIncre", "ment", "ĠR", "SI", ".", "Ċ", "//", "ĠNote", "Ġthat", "Ġthe", "Ġsum", "Ġof", "Ġthe", "Ġaverage", "Ġuse", "Ġof", "Ġports", "Ġ2", ",", "Ġ3", "Ġand", "Ġ7", "Ġis", "Ġequal", "Ġto", "Ġtwo", ",", "Ċ", "//", "Ġwhich", "Ġtends", "Ġto", "Ġprove", "Ġthat", "Ġthere", "Ġare", "Ġtwo", "Ġaddress", "Ġgeneration", "Ġinstructions", ".", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġunsigned", "Ġchar", "Ġmemory", "[", "1000", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠLO", "OP", "_", "IT", "ER", "ATIONS", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġas", "m", "Ġvolatile", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠR", "\"(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmov", "q", "Ġ%", "[", "address", "],", "Ġ%%", "rs", "i", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ.", "re", "pt", "Ġ1000", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġadd", "b", "Ġ$", "1", ",", "Ġ(", "%%", "rs", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġinc", "Ġ%%", "rs", "i", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ.", "end", "r", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ)", "\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġ[", "address", "]", "Ġ\"", "r", "\"(", "memory", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġ\"%", "rs", "i", "\");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 3, "comesFrom", ["i"], [2]], ["i", 5, "comesFrom", ["i"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::373", "code": "/**\n * Copyright (c) 2015 - Andrew C. Pacifico - All Rights Reserved.\n * @author Andrew C. Pacifico <andrewcpacifico@gmail.com>\n */\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char *argv[])\n{\n    int n, i, j;\n\n    scanf(\"%d\", &n);\n\n    for (i = 0; i < n; ++i) {\n        for (j = 0; j < n - (i + 1); ++j) {\n            printf(\" \");\n        }\n\n        for (; j < n; ++j) {\n            printf(\"#\");\n        }\n\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "Ġ-", "ĠAndrew", "ĠC", ".", "ĠPacific", "o", "Ġ-", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "Ġ@", "author", "ĠAndrew", "ĠC", ".", "ĠPacific", "o", "Ġ<", "and", "rew", "cp", "ac", "ific", "o", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ",", "Ġi", ",", "Ġj", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "j", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġn", "Ġ-", "Ġ(", "i", "Ġ+", "Ġ1", ");", "Ġ++", "j", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Ġ\"", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "#", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 7, "comesFrom", ["n"], [3]], ["n", 10, "comesFrom", ["n"], [3]], ["n", 14, "comesFrom", ["n"], [3]], ["n", 19, "comesFrom", ["n"], [3]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 11, "comesFrom", ["i"], [8]], ["i", 15, "comesFrom", ["i"], [8]], ["j", 13, "comesFrom", ["j"], [12]], ["j", 16, "comesFrom", ["j"], [12]], ["j", 18, "comesFrom", ["j"], [12]], ["j", 20, "comesFrom", ["j"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::374", "code": "/*\n * File: IAS-DataModelLib/src/dm/json/exception/JSONHelperException.cpp\n * \n * Copyright (C) 2015, Albert Krzymowski\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n#include \"../../../dm/json/exception/JSONHelperException.h\"\n#include <commonlib/commonlib.h>\n\nnamespace IAS{\nnamespace DM {\nnamespace JSON {\n\n/*************************************************************************/\nJSONHelperException::JSONHelperException(const String& strInfo){\n\tIAS_TRACER;\n\tthis->setInfo(strInfo);\n}\n/*************************************************************************/\nJSONHelperException::JSONHelperException(const String& strInfo, int iLine){\n\tIAS_TRACER;\n\tStringStream ssTmp;\n\tssTmp<<strInfo<<\", line:\"<<iLine;\n\tthis->setInfo(ssTmp.str());\n}\n/*************************************************************************/\nJSONHelperException::~JSONHelperException() throw(){\n\tIAS_TRACER;\n}\n/*************************************************************************/\nconst char* JSONHelperException::getName(){\n\tIAS_TRACER;\n\treturn \"JSONHelperException\";\n}\n\n\n/*************************************************************************/\n\n} /* namespace Impl */\n} /* namespace DM */\n} /* namespace IAS */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠFile", ":", "ĠI", "AS", "-", "Data", "Model", "Lib", "/", "src", "/", "dm", "/", "json", "/", "ex", "ception", "/", "JSON", "Helper", "Exception", ".", "cpp", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", ",", "ĠAlbert", "ĠKr", "z", "ym", "owski", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "../", "../", "../", "dm", "/", "json", "/", "ex", "ception", "/", "JSON", "Helper", "Exception", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "common", "lib", "/", "common", "lib", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "ĠI", "AS", "{", "Ċ", "names", "pace", "ĠDM", "Ġ{", "Ċ", "names", "pace", "ĠJSON", "Ġ{", "Ċ", "Ċ", "/", "********************************", "********************************", "********", "*/", "Ċ", "JSON", "Helper", "Exception", "::", "JSON", "Helper", "Exception", "(", "const", "ĠString", "&", "Ġstr", "Info", "){", "Ċ", "ĉ", "IAS", "_", "TR", "AC", "ER", ";", "Ċ", "ĉ", "this", "->", "set", "Info", "(", "str", "Info", ");", "Ċ", "}", "Ċ", "/", "********************************", "********************************", "********", "*/", "Ċ", "JSON", "Helper", "Exception", "::", "JSON", "Helper", "Exception", "(", "const", "ĠString", "&", "Ġstr", "Info", ",", "Ġint", "Ġi", "Line", "){", "Ċ", "ĉ", "IAS", "_", "TR", "AC", "ER", ";", "Ċ", "ĉ", "String", "Stream", "Ġss", "T", "mp", ";", "Ċ", "ĉ", "ss", "T", "mp", "<<", "str", "Info", "<<", "\",", "Ġline", ":\"", "<<", "i", "Line", ";", "Ċ", "ĉ", "this", "->", "set", "Info", "(", "ss", "T", "mp", ".", "str", "());", "Ċ", "}", "Ċ", "/", "********************************", "********************************", "********", "*/", "Ċ", "JSON", "Helper", "Exception", "::", "~", "JSON", "Helper", "Exception", "()", "Ġthrow", "(){", "Ċ", "ĉ", "IAS", "_", "TR", "AC", "ER", ";", "Ċ", "}", "Ċ", "/", "********************************", "********************************", "********", "*/", "Ċ", "const", "Ġchar", "*", "ĠJSON", "Helper", "Exception", "::", "get", "Name", "(){", "Ċ", "ĉ", "IAS", "_", "TR", "AC", "ER", ";", "Ċ", "ĉ", "return", "Ġ\"", "JSON", "Helper", "Exception", "\";", "Ċ", "}", "ĊĊ", "Ċ", "/", "********************************", "********************************", "********", "*/", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠImpl", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠDM", "Ġ*/", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠI", "AS", "Ġ*/", "Ċ"], "dataflow_graph": [["ssTmp", 10, "comesFrom", ["ssTmp"], [9]], ["ssTmp", 14, "comesFrom", ["ssTmp"], [9]], ["iLine", 12, "comesFrom", ["iLine"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::375", "code": "#include \"RelearnRegularization.h\"\n\nnamespace LinearCRF\n{\n\nRelearnRegularization::RelearnRegularization(\n    double regularizationFactor)\n    : regularizationFactor(regularizationFactor)\n{\n}\n\nvoid RelearnRegularization::Initialize(const vector<double>& _stableValues)\n{\n    stableValues = _stableValues;\n}\n\nvoid RelearnRegularization::UpdateValue(const vector<double>& point\n    , size_t numberOfPoints, double* value)\n{\n    // Calculate normFactor\n    double normFactor = 0;\n    for (size_t it = 0; it < point.size(); ++it)\n    {\n        double difference = point[it] - stableValues[it];\n        normFactor += difference * difference;\n    }\n    *value += numberOfPoints * normFactor / regularizationFactor;\n}\n\nvoid RelearnRegularization::UpdateGradient(\n    const vector<double>&point, size_t numberOfPoints\n    , vector<double>* gradient)\n{\n    // Add norm factor\n    for (size_t it = 0; it < point.size(); ++it)\n    {\n        (*gradient)[it] +=\n            2.0 * numberOfPoints * (point[it] - stableValues[it])\n            / regularizationFactor;\n    }\n}\n\nvoid RelearnRegularization::SetRegularizationFactor(double factor)\n{\n    regularizationFactor = factor;\n}\n\ndouble RelearnRegularization::GetRegularizationFactor()\n{\n    return regularizationFactor;\n}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Re", "learn", "Regular", "ization", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠLinear", "CR", "F", "Ċ", "{", "Ċ", "Ċ", "Re", "learn", "Regular", "ization", "::", "Re", "learn", "Regular", "ization", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġregular", "ization", "Factor", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġregular", "ization", "Factor", "(", "regular", "ization", "Factor", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRe", "learn", "Regular", "ization", "::", "Initial", "ize", "(", "const", "Ġvector", "<", "double", ">", "&", "Ġ_", "stable", "Values", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstable", "Values", "Ġ=", "Ġ_", "stable", "Values", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRe", "learn", "Regular", "ization", "::", "Update", "Value", "(", "const", "Ġvector", "<", "double", ">", "&", "Ġpoint", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ,", "Ġsize", "_", "t", "Ġnumber", "Of", "Points", ",", "Ġdouble", "*", "Ġvalue", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠCalcul", "ate", "Ġnorm", "Factor", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġnorm", "Factor", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "size", "_", "t", "Ġit", "Ġ=", "Ġ0", ";", "Ġit", "Ġ<", "Ġpoint", ".", "size", "();", "Ġ++", "it", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġdifference", "Ġ=", "Ġpoint", "[", "it", "]", "Ġ-", "Ġstable", "Values", "[", "it", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnorm", "Factor", "Ġ+=", "Ġdifference", "Ġ*", "Ġdifference", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ*", "value", "Ġ+=", "Ġnumber", "Of", "Points", "Ġ*", "Ġnorm", "Factor", "Ġ/", "Ġregular", "ization", "Factor", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRe", "learn", "Regular", "ization", "::", "Update", "Grad", "ient", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġvector", "<", "double", ">", "&", "point", ",", "Ġsize", "_", "t", "Ġnumber", "Of", "Points", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ,", "Ġvector", "<", "double", ">", "*", "Ġgradient", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠAdd", "Ġnorm", "Ġfactor", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "size", "_", "t", "Ġit", "Ġ=", "Ġ0", ";", "Ġit", "Ġ<", "Ġpoint", ".", "size", "();", "Ġ++", "it", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(*", "gradient", ")[", "it", "]", "Ġ+=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ2", ".", "0", "Ġ*", "Ġnumber", "Of", "Points", "Ġ*", "Ġ(", "point", "[", "it", "]", "Ġ-", "Ġstable", "Values", "[", "it", "])", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ/", "Ġregular", "ization", "Factor", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRe", "learn", "Regular", "ization", "::", "Set", "Regular", "ization", "Factor", "(", "double", "Ġfactor", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġregular", "ization", "Factor", "Ġ=", "Ġfactor", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠRe", "learn", "Regular", "ization", "::", "Get", "Regular", "ization", "Factor", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġregular", "ization", "Factor", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["regularizationFactor", 2, "comesFrom", ["regularizationFactor"], [1]], ["regularizationFactor", 3, "comesFrom", ["regularizationFactor"], [1]], ["regularizationFactor", 29, "comesFrom", ["regularizationFactor"], [1]], ["regularizationFactor", 46, "comesFrom", ["regularizationFactor"], [1]], ["regularizationFactor", 52, "comesFrom", ["regularizationFactor"], [49]], ["it", 14, "comesFrom", ["it"], [13]], ["it", 17, "comesFrom", ["it"], [13]], ["it", 20, "comesFrom", ["it"], [13]], ["it", 22, "comesFrom", ["it"], [13]], ["it", 35, "comesFrom", ["it"], [34]], ["it", 38, "comesFrom", ["it"], [34]], ["it", 40, "comesFrom", ["it"], [34]], ["it", 43, "comesFrom", ["it"], [34]], ["it", 45, "comesFrom", ["it"], [34]], ["stableValues", 21, "comesFrom", ["stableValues"], [6]], ["stableValues", 44, "comesFrom", ["stableValues"], [6]], ["difference", 24, "comesFrom", ["difference"], [18]], ["difference", 25, "comesFrom", ["difference"], [18]], ["numberOfPoints", 27, "comesFrom", ["numberOfPoints"], [10]], ["numberOfPoints", 41, "comesFrom", ["numberOfPoints"], [32]], ["normFactor", 28, "comesFrom", ["normFactor"], [23]], ["factor", 50, "comesFrom", ["factor"], [48]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::376", "code": "#include <boost/algorithm/string/split.hpp>\n\n#include \"chess_protocol_helper.h\"\n\nusing namespace std;\n\nnamespace Bee\n{\n\nnamespace\n{\n\nbool isDelimiter(const char c)\n{\n\treturn (c == ' ' || c == '\\t');\n}\n\n}\n\nvoid ChessProtocolHelper::split(const string& command, vector<string>& output)\n{\n\tboost::algorithm::split(output, command, isDelimiter,\n\t\tboost::algorithm::token_compress_on);\n}\n\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "boost", "/", "al", "gorithm", "/", "string", "/", "split", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "che", "ss", "_", "prot", "ocol", "_", "hel", "per", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "names", "pace", "ĠBee", "Ċ", "{", "Ċ", "Ċ", "names", "pace", "Ċ", "{", "Ċ", "Ċ", "bool", "Ġis", "Del", "im", "iter", "(", "const", "Ġchar", "Ġc", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ(", "c", "Ġ==", "Ġ'", "Ġ'", "Ġ||", "Ġc", "Ġ==", "Ġ'", "\\", "t", "');", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠChess", "Prot", "ocol", "Helper", "::", "split", "(", "const", "Ġstring", "&", "Ġcommand", ",", "Ġvector", "<", "string", ">", "&", "Ġoutput", ")", "Ċ", "{", "Ċ", "ĉ", "boost", "::", "al", "gorithm", "::", "split", "(", "output", ",", "Ġcommand", ",", "Ġis", "Del", "im", "iter", ",", "Ċ", "ĉ", "ĉ", "boost", "::", "al", "gorithm", "::", "token", "_", "comp", "ress", "_", "on", ");", "Ċ", "}", "Ċ", "Ċ", "}"], "dataflow_graph": [["c", 3, "comesFrom", ["c"], [2]], ["c", 4, "comesFrom", ["c"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::377", "code": "#include <cstdio>\r\n#include <cstring>\r\nusing namespace std;\r\nint main(void)\r\n{\r\n\tint t, n;\r\n\tint a[105];\r\n\tchar s[10];\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--) {\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor(int i = 1; i <= n; i++) {\r\n\t\t\tscanf(\"%s\", &s);\r\n\t\t\t\r\n\t\t\tif(!strcmp(s, \"LEFT\"))\r\n\t\t\t\ta[i] = -1;\r\n\t\t\telse if(!strcmp(s, \"RIGHT\"))\r\n\t\t\t\ta[i] = 1;\r\n\t\t\telse {\r\n\t\t\t\tchar aa[10];\r\n\t\t\t\tint pos;\r\n\t\t\t\tscanf(\"%s %d\", aa, &pos);\r\n\t\t\t\ta[i] = a[pos];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tint ans = 0;\r\n\t\tfor(int i = 1; i <= n; i++)\r\n\t\t\t\tans += a[i];\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "int", "Ġmain", "(", "void", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġt", ",", "Ġn", ";", "č", "Ċ", "ĉ", "int", "Ġa", "[", "105", "];", "č", "Ċ", "ĉ", "char", "Ġs", "[", "10", "];", "č", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "t", ");", "č", "Ċ", "ĉ", "while", "(", "t", "--", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "č", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "s", "\",", "Ġ&", "s", ");", "č", "Ċ", "ĉ", "ĉ", "ĉ", "č", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "!", "str", "cmp", "(", "s", ",", "Ġ\"", "LE", "FT", "\"))", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "a", "[", "i", "]", "Ġ=", "Ġ-", "1", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "else", "Ġif", "(", "!", "str", "cmp", "(", "s", ",", "Ġ\"", "R", "IGHT", "\"))", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "a", "[", "i", "]", "Ġ=", "Ġ1", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "else", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "char", "Ġa", "a", "[", "10", "];", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "int", "Ġpos", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "s", "Ġ%", "d", "\",", "Ġa", "a", ",", "Ġ&", "pos", ");", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "a", "[", "i", "]", "Ġ=", "Ġa", "[", "pos", "];", "č", "Ċ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "č", "Ċ", "ĉ", "ĉ", "int", "Ġans", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ans", "Ġ+=", "Ġa", "[", "i", "];", "č", "Ċ", "ĉ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "Ġans", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["t", 7, "comesFrom", ["t"], [2]], ["t", 8, "comesFrom", ["t"], [2]], ["n", 10, "comesFrom", ["n"], [3]], ["n", 13, "comesFrom", ["n"], [3]], ["n", 37, "comesFrom", ["n"], [3]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["i", 20, "comesFrom", ["i"], [11]], ["i", 24, "comesFrom", ["i"], [11]], ["i", 31, "comesFrom", ["i"], [11]], ["i", 36, "comesFrom", ["i"], [35]], ["i", 38, "comesFrom", ["i"], [35]], ["i", 41, "comesFrom", ["i"], [35]], ["pos", 29, "comesFrom", ["pos"], [26]], ["pos", 33, "comesFrom", ["pos"], [26]], ["ans", 43, "comesFrom", ["ans"], [39]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::378", "code": "/*\n\tBy: facug91\n\tFrom: http://coj.uci.cu/24h/problem.xhtml?abb=1188\n\tName: Cow Multiplication\n\tNumber: 1188\n\tDate: 11/11/2013\n*/\n\n#include <iostream>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <list>\n#include <iterator>\n#include <cstdlib>\n#include <set>\n\nusing namespace std;\n\nint main () {\n\tstring a, b;\n\tint i, j, total = 0;\n\tcin>>a>>b;\n\t\n\tfor (i=0; i<a.size(); i++) {\n\t\tfor (j=0; j<b.size(); j++) {\n\t\t\ttotal += ((a[i]-'0') * (b[j]-'0'));\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\",total);\n\t\n\treturn 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "ĉ", "By", ":", "Ġfac", "ug", "91", "Ċ", "ĉ", "From", ":", "Ġhttp", "://", "co", "j", ".", "uci", ".", "cu", "/", "24", "h", "/", "problem", ".", "x", "html", "?", "abb", "=", "11", "88", "Ċ", "ĉ", "Name", ":", "ĠCow", "ĠMulti", "pl", "ication", "Ċ", "ĉ", "Number", ":", "Ġ11", "88", "Ċ", "ĉ", "Date", ":", "Ġ11", "/", "11", "/", "2013", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "#", "include", "Ġ<", "list", ">", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "#", "include", "Ġ<", "set", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "ĉ", "string", "Ġa", ",", "Ġb", ";", "Ċ", "ĉ", "int", "Ġi", ",", "Ġj", ",", "Ġtotal", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "cin", ">>", "a", ">>", "b", ";", "Ċ", "ĉ", "Ċ", "ĉ", "for", "Ġ(", "i", "=", "0", ";", "Ġi", "<", "a", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "j", "=", "0", ";", "Ġj", "<", "b", ".", "size", "();", "Ġj", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "total", "Ġ+=", "Ġ((", "a", "[", "i", "]", "-'", "0", "')", "Ġ*", "Ġ(", "b", "[", "j", "]", "-'", "0", "')", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "total", ");", "Ċ", "ĉ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 8, "comesFrom", ["a"], [2]], ["a", 12, "comesFrom", ["a"], [2]], ["a", 21, "comesFrom", ["a"], [2]], ["b", 9, "comesFrom", ["b"], [3]], ["b", 17, "comesFrom", ["b"], [3]], ["b", 23, "comesFrom", ["b"], [3]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 14, "comesFrom", ["i"], [10]], ["i", 22, "comesFrom", ["i"], [10]], ["j", 16, "comesFrom", ["j"], [15]], ["j", 19, "comesFrom", ["j"], [15]], ["j", 24, "comesFrom", ["j"], [15]], ["total", 26, "comesFrom", ["total"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::379", "code": "#include <stdio.h>\nint main()\n{\n\tint n;\n\tint i=0;\n\tscanf(\"%d\", &n);\n\twhile(n != 1){\n\t\tif(n % 2 == 0){\n\t\t\tn /= 2;\n\t\t} else {\n\t\t\tn = (3*n+1)/2;\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\\n\", i);\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġn", ";", "Ċ", "ĉ", "int", "Ġi", "=", "0", ";", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "Ċ", "ĉ", "while", "(", "n", "Ġ!=", "Ġ1", "){", "Ċ", "ĉ", "ĉ", "if", "(", "n", "Ġ%", "Ġ2", "Ġ==", "Ġ0", "){", "Ċ", "ĉ", "ĉ", "ĉ", "n", "Ġ/", "=", "Ġ2", ";", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "n", "Ġ=", "Ġ(", "3", "*", "n", "+", "1", ")/", "2", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "i", "++;", "Ċ", "ĉ", "}", "Ċ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "Ġi", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [1]], ["n", 5, "comesFrom", ["n"], [1]], ["n", 6, "comesFrom", ["n"], [1]], ["n", 9, "comesFrom", ["n"], [8]], ["i", 10, "comesFrom", ["i"], [2]], ["i", 12, "comesFrom", ["i"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::380", "code": "//TEST FAILS\n#include <string>\n#include <cassert>\nusing namespace std;\n\nint main(){\n  string str1, str2;\n  str1 = string(\"Test\");\n  str2 = string(str1, 2);\n  assert(str2 < str1);\n}\n", "code_tokens": ["Ġ//", "T", "EST", "ĠFA", "ILS", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġstring", "Ġstr", "1", ",", "Ġstr", "2", ";", "Ċ", "Ġ", "Ġstr", "1", "Ġ=", "Ġstring", "(\"", "Test", "\");", "Ċ", "Ġ", "Ġstr", "2", "Ġ=", "Ġstring", "(", "str", "1", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġassert", "(", "str", "2", "Ġ<", "Ġstr", "1", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["str1", 8, "comesFrom", ["str1"], [4]], ["str1", 11, "comesFrom", ["str1"], [4]], ["str2", 10, "comesFrom", ["str2"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::381", "code": "# include<cstdio>\n# include<cmath>\n# include<algorithm>\nusing namespace std;\nint main()\n{\n\tint t,n,m;\n\tdouble ans;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tans=0;\n\t\tscanf(\"%d\",&n);\n\t\tm=n;\n\t\twhile(n)\n\t\t{\n\t\t\tans += (1.0/n);\n\t\t\tn--;\n\t\t}\n\t\tans*=m;\n\t\tprintf(\"%.2lf\\n\",ans);\n\t}\n\treturn 0;\n}", "code_tokens": ["Ġ#", "Ġinclude", "<", "c", "std", "io", ">", "Ċ", "#", "Ġinclude", "<", "c", "math", ">", "Ċ", "#", "Ġinclude", "<", "al", "gorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġt", ",", "n", ",", "m", ";", "Ċ", "ĉ", "double", "Ġans", ";", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "&", "t", ");", "Ċ", "ĉ", "while", "(", "t", "--", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ans", "=", "0", ";", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "&", "n", ");", "Ċ", "ĉ", "ĉ", "m", "=", "n", ";", "Ċ", "ĉ", "ĉ", "while", "(", "n", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ans", "Ġ+=", "Ġ(", "1", ".", "0", "/", "n", ");", "Ċ", "ĉ", "ĉ", "ĉ", "n", "--", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ans", "*", "=", "m", ";", "Ċ", "ĉ", "ĉ", "printf", "(\"", "%.", "2", "lf", "\\", "n", "\",", "ans", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["t", 7, "comesFrom", ["t"], [2]], ["t", 8, "comesFrom", ["t"], [2]], ["n", 11, "comesFrom", ["n"], [3]], ["n", 13, "comesFrom", ["n"], [3]], ["n", 14, "comesFrom", ["n"], [3]], ["n", 16, "comesFrom", ["n"], [3]], ["n", 17, "comesFrom", ["n"], [3]], ["m", 19, "comesFrom", ["m"], [12]], ["ans", 21, "comesFrom", ["ans"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::382", "code": "#ifndef _MAKESHIFT_CAMERA_HPP_\n#define _MAKESHIFT_CAMERA_HPP_\n\n#include <glm/glm.hpp>\n#include <glm/gtc/matrix_transform.hpp>\n\nclass Camera {\n\npublic:\n    Camera(glm::vec3 pos); \n\n    // Camera Positioning \n    inline void setPosition(glm::vec3 pos) { _pos = pos; }\n    inline void move(glm::vec3 offset) { _pos += offset; }\n    inline const glm::vec3 position() const { return _pos; }\n\n    void changeLook(float pitch, float yaw);\n\tvoid reset();\n    const glm::mat4 rotation() const;\n\n    // Projection Setting Modifications\n    void setFov(float fov);\n    void setAspectRatio(float ratio);\n    void setFar(float far);\n    void setNear(float near);\n    inline const glm::mat4 projection() const { return _proj; }\n\n    glm::vec3 right() const;\n    glm::vec3 up() const;\n    glm::vec3 forward() const;\n\n    const glm::mat4 matrix() const;\n\nprivate:\n    void recalcProjection();\n    void fixAngles();\n\n    glm::vec3 _pos;\n\n    float _pitch;\n    float _yaw;\n\n    float _fov;\n    float _aspRatio;\n    float _far;\n    float _near;\n    glm::mat4 _proj;\n};\n\n#endif\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "Ġ_", "MA", "K", "ESH", "IFT", "_", "C", "AM", "ERA", "_", "H", "PP", "_", "Ċ", "#", "define", "Ġ_", "MA", "K", "ESH", "IFT", "_", "C", "AM", "ERA", "_", "H", "PP", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "gl", "m", "/", "gl", "m", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "gl", "m", "/", "gt", "c", "/", "mat", "rix", "_", "transform", ".", "h", "pp", ">", "Ċ", "Ċ", "class", "ĠCamera", "Ġ{", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCamera", "(", "gl", "m", "::", "vec", "3", "Ġpos", ");", "Ġ", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠCamera", "ĠPosition", "ing", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġvoid", "Ġset", "Position", "(", "gl", "m", "::", "vec", "3", "Ġpos", ")", "Ġ{", "Ġ_", "pos", "Ġ=", "Ġpos", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġvoid", "Ġmove", "(", "gl", "m", "::", "vec", "3", "Ġoffset", ")", "Ġ{", "Ġ_", "pos", "Ġ+=", "Ġoffset", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġconst", "Ġgl", "m", "::", "vec", "3", "Ġposition", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġ_", "pos", ";", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġchange", "Look", "(", "float", "Ġpitch", ",", "Ġfloat", "Ġy", "aw", ");", "Ċ", "ĉ", "void", "Ġreset", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġgl", "m", "::", "mat", "4", "Ġrotation", "()", "Ġconst", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠProject", "ion", "ĠSetting", "ĠMod", "ifications", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "F", "ov", "(", "float", "Ġf", "ov", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "As", "pect", "Rat", "io", "(", "float", "Ġratio", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "Far", "(", "float", "Ġfar", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "Near", "(", "float", "Ġnear", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġconst", "Ġgl", "m", "::", "mat", "4", "Ġprojection", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġ_", "pro", "j", ";", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġgl", "m", "::", "vec", "3", "Ġright", "()", "Ġconst", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgl", "m", "::", "vec", "3", "Ġup", "()", "Ġconst", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgl", "m", "::", "vec", "3", "Ġforward", "()", "Ġconst", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġgl", "m", "::", "mat", "4", "Ġmatrix", "()", "Ġconst", ";", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġrecal", "c", "Project", "ion", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġfix", "Ang", "les", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġgl", "m", "::", "vec", "3", "Ġ_", "pos", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġ_", "p", "itch", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġ_", "y", "aw", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġ_", "f", "ov", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġ_", "asp", "Rat", "io", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġ_", "far", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġ_", "near", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgl", "m", "::", "mat", "4", "Ġ_", "pro", "j", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["pos", 7, "comesFrom", ["pos"], [5]], ["offset", 11, "comesFrom", ["offset"], [9]], ["_pos", 13, "comesFrom", ["_pos"], [10]], ["_pos", 35, "comesFrom", ["_pos"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::383", "code": "class Solution {\npublic:\n    bool hasAlternatingBits(int n) {\n        int m = -1;\n        while (n > 0) {\n            if (n % 2 == m)\n                return false;\n            m = n % 2;\n            n = n / 2;\n        }\n        return true;\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġhas", "Altern", "ating", "B", "its", "(", "int", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", "Ġ=", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "n", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ%", "Ġ2", "Ġ==", "Ġm", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "Ġ=", "Ġn", "Ġ%", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Ġ=", "Ġn", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["n", 3, "comesFrom", ["n"], [1]], ["n", 4, "comesFrom", ["n"], [1]], ["n", 7, "comesFrom", ["n"], [1]], ["n", 9, "comesFrom", ["n"], [8]], ["m", 5, "comesFrom", ["m"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::384", "code": "/*\n * discursive_debug.cpp\n *\n *  Created on: Aug 19, 2010\n *      Author: Hunter Davis\n */\n\n#include \"./discursive_print.h\"\n#include \"../main/configuration_agent.h\"\nextern ConfigurationAgent configAgent;\n\n// -------------------------------------------------------------------------\n// API :: DiscursivePrint\n// PURPOSE :: it's printf that can be updated to work with guis etc\n//         ::\n// PARAMETERS :: std::string printMessage - printf first argument\n//            :: ... - any formatting arguments or parameters to printf\n// RETURN :: void - this is a 100% replacement for printf\n// -------------------------------------------------------------------------\nvoid DiscursivePrint(std::string printMessage,...)\n{\n\tint printMode = configAgent.returnOptionByName(\"printMode\");\n\n\tif(printMode == 0)\n\t{\n\t\tva_list args;\n\t\tva_start( args, printMessage );\n\t\tvprintf(printMessage.c_str(), args );\n\t\tva_end( args );\n\t}\n\telse if(printMode == 1)\n\t{\n\t\tFILE * outFile;\n\t\tstd::string outputFileName = configAgent.returnPrintModeFileName();\n\t\toutFile = fopen (outputFileName.c_str(),\"a\");\n\t\tva_list args;\n\t\tva_start( args, printMessage );\n\t\tvfprintf(outFile,printMessage.c_str(), args );\n\t\tva_end( args );\n\t\tfclose (outFile);\n\t}\n\telse if(printMode == 2)\n\t{\n\t\t// ignore 2 - it's the ignore flag\n\t}\n\telse\n\t{\n\t\tDiscursiveError(\"Incorrect Print Mode Set %d\\n\",printMode);\n\t}\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġdisc", "ursive", "_", "debug", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠAug", "Ġ19", ",", "Ġ2010", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "ĠHunter", "ĠDavis", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "./", "disc", "ursive", "_", "print", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "main", "/", "config", "uration", "_", "agent", ".", "h", "\"", "Ċ", "ex", "tern", "ĠConfiguration", "Agent", "Ġconfig", "Agent", ";", "Ċ", "Ċ", "//", "Ġ----------------------------------------------------------------", "---------", "Ċ", "//", "ĠAPI", "Ġ::", "ĠDisc", "ursive", "Print", "Ċ", "//", "ĠPUR", "POSE", "Ġ::", "Ġit", "'s", "Ġprintf", "Ġthat", "Ġcan", "Ġbe", "Ġupdated", "Ġto", "Ġwork", "Ġwith", "Ġgu", "is", "Ġetc", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ::", "Ċ", "//", "ĠPAR", "AM", "ET", "ERS", "Ġ::", "Ġstd", "::", "string", "Ġprint", "Message", "Ġ-", "Ġprintf", "Ġfirst", "Ġargument", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ::", "Ġ...", "Ġ-", "Ġany", "Ġformatting", "Ġarguments", "Ġor", "Ġparameters", "Ġto", "Ġprintf", "Ċ", "//", "ĠRET", "URN", "Ġ::", "Ġvoid", "Ġ-", "Ġthis", "Ġis", "Ġa", "Ġ100", "%", "Ġreplacement", "Ġfor", "Ġprintf", "Ċ", "//", "Ġ----------------------------------------------------------------", "---------", "Ċ", "void", "ĠDisc", "ursive", "Print", "(", "std", "::", "string", "Ġprint", "Message", ",", "...)", "Ċ", "{", "Ċ", "ĉ", "int", "Ġprint", "Mode", "Ġ=", "Ġconfig", "Agent", ".", "return", "Option", "By", "Name", "(\"", "print", "Mode", "\");", "ĊĊ", "ĉ", "if", "(", "print", "Mode", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "va", "_", "list", "Ġargs", ";", "Ċ", "ĉ", "ĉ", "va", "_", "start", "(", "Ġargs", ",", "Ġprint", "Message", "Ġ);", "Ċ", "ĉ", "ĉ", "v", "printf", "(", "print", "Message", ".", "c", "_", "str", "(),", "Ġargs", "Ġ);", "Ċ", "ĉ", "ĉ", "va", "_", "end", "(", "Ġargs", "Ġ);", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġif", "(", "print", "Mode", "Ġ==", "Ġ1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "FILE", "Ġ*", "Ġout", "File", ";", "Ċ", "ĉ", "ĉ", "std", "::", "string", "Ġoutput", "File", "Name", "Ġ=", "Ġconfig", "Agent", ".", "return", "Print", "Mode", "File", "Name", "();", "Ċ", "ĉ", "ĉ", "out", "File", "Ġ=", "Ġf", "open", "Ġ(", "output", "File", "Name", ".", "c", "_", "str", "()", ",\"", "a", "\");", "Ċ", "ĉ", "ĉ", "va", "_", "list", "Ġargs", ";", "Ċ", "ĉ", "ĉ", "va", "_", "start", "(", "Ġargs", ",", "Ġprint", "Message", "Ġ);", "Ċ", "ĉ", "ĉ", "v", "f", "printf", "(", "out", "File", ",", "print", "Message", ".", "c", "_", "str", "(),", "Ġargs", "Ġ);", "Ċ", "ĉ", "ĉ", "va", "_", "end", "(", "Ġargs", "Ġ);", "Ċ", "ĉ", "ĉ", "f", "close", "Ġ(", "out", "File", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ġif", "(", "print", "Mode", "Ġ==", "Ġ2", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġignore", "Ġ2", "Ġ-", "Ġit", "'s", "Ġthe", "Ġignore", "Ġflag", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Disc", "ursive", "Error", "(\"", "In", "correct", "ĠPrint", "ĠMode", "ĠSet", "Ġ%", "d", "\\", "n", "\",", "print", "Mode", ");", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["configAgent", 4, "comesFrom", ["configAgent"], [0]], ["configAgent", 20, "comesFrom", ["configAgent"], [0]], ["printMode", 6, "comesFrom", ["printMode"], [3]], ["printMode", 17, "comesFrom", ["printMode"], [3]], ["printMode", 39, "comesFrom", ["printMode"], [3]], ["printMode", 41, "comesFrom", ["printMode"], [3]], ["args", 9, "comesFrom", ["args"], [7]], ["args", 14, "comesFrom", ["args"], [7]], ["args", 16, "comesFrom", ["args"], [7]], ["args", 28, "comesFrom", ["args"], [26]], ["args", 34, "comesFrom", ["args"], [26]], ["args", 36, "comesFrom", ["args"], [26]], ["printMessage", 10, "comesFrom", ["printMessage"], [2]], ["printMessage", 12, "comesFrom", ["printMessage"], [2]], ["printMessage", 29, "comesFrom", ["printMessage"], [2]], ["printMessage", 32, "comesFrom", ["printMessage"], [2]], ["outFile", 31, "comesFrom", ["outFile"], [22]], ["outFile", 38, "comesFrom", ["outFile"], [22]], ["outputFileName", 24, "comesFrom", ["outputFileName"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::385", "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> plusOne(vector<int>& digits) {\n        vector<int> ret(digits);\n        int carry = 1;\n        for (vector<int>::reverse_iterator i = ret.rbegin(), iend = ret.rend(); i != iend; ++i) {\n            *i += carry;\n            carry = *i / 10;\n            *i %= 10;\n        }\n        if (carry)\n            ret.insert(ret.begin(), carry);\n        return ret;\n    }\n};\n\nint main(void)\n{\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġplus", "One", "(", "vector", "<", "int", ">", "&", "Ġdigits", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġret", "(", "dig", "its", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġcarry", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "vector", "<", "int", ">", "::", "reverse", "_", "iterator", "Ġi", "Ġ=", "Ġret", ".", "r", "begin", "(),", "Ġi", "end", "Ġ=", "Ġret", ".", "rend", "();", "Ġi", "Ġ!=", "Ġi", "end", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "i", "Ġ+=", "Ġcarry", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcarry", "Ġ=", "Ġ*", "i", "Ġ/", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "i", "Ġ%", "=", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "carry", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġret", ".", "insert", "(", "ret", ".", "begin", "(),", "Ġcarry", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 11, "comesFrom", ["i"], [5]], ["i", 13, "comesFrom", ["i"], [5]], ["i", 14, "comesFrom", ["i"], [5]], ["i", 17, "comesFrom", ["i"], [5]], ["i", 18, "comesFrom", ["i"], [5]], ["iend", 12, "comesFrom", ["iend"], [8]], ["carry", 15, "comesFrom", ["carry"], [4]], ["carry", 19, "comesFrom", ["carry"], [16]], ["carry", 24, "comesFrom", ["carry"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::386", "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\nint main(int argc, char *argv[]) {\n\tstring d, s;\n\twhile (cin >> d >> s)\n\t\t(d.find(s) != string::npos) ? puts(\"Resistente\"): puts(\"Nao resistente\");\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ġ{", "Ċ", "ĉ", "string", "Ġd", ",", "Ġs", ";", "Ċ", "ĉ", "while", "Ġ(", "cin", "Ġ>>", "Ġd", "Ġ>>", "Ġs", ")", "Ċ", "ĉ", "ĉ", "(", "d", ".", "find", "(", "s", ")", "Ġ!=", "Ġstring", "::", "n", "pos", ")", "Ġ?", "Ġputs", "(\"", "Res", "istent", "e", "\"", "):", "Ġputs", "(\"", "N", "ao", "Ġresist", "ente", "\");", "Ċ", "}"], "dataflow_graph": [["d", 7, "comesFrom", ["d"], [4]], ["d", 9, "comesFrom", ["d"], [4]], ["s", 8, "comesFrom", ["s"], [5]], ["s", 11, "comesFrom", ["s"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::387", "code": "/**\n * Tests the OutOfDomainException\n */\n#include <cppunit/CompilerOutputter.h>\n#include <cppunit/extensions/TestFactoryRegistry.h>\n#include <cppunit/ui/text/TestRunner.h>\n#include \"OutOfDomainException.h\"\n\nint \nmain(int argc, char* argv[])\n{\n  // Get the top level suite from the registry\n  CppUnit::Test *suite = CppUnit::TestFactoryRegistry::getRegistry().makeTest();\n\n  // Adds the test to the list of test to run\n  CppUnit::TextUi::TestRunner runner;\n  runner.addTest( suite );\n\n  // Change the default outputter to a compiler error format outputter\n  runner.setOutputter( new CppUnit::CompilerOutputter( &runner.result(),\n                                                       std::cerr ) );\n  // Run the tests.\n  bool wasSucessful = runner.run();\n\n  // Return error code 1 if the one of test failed.\n  return wasSucessful ? 0 : 1;\n}\n\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠTests", "Ġthe", "ĠOut", "Of", "Domain", "Exception", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "Comp", "iler", "Output", "ter", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "ext", "ensions", "/", "Test", "Factory", "Reg", "istry", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "ui", "/", "text", "/", "Test", "Runner", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "Out", "Of", "Domain", "Exception", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġ", "Ċ", "main", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠGet", "Ġthe", "Ġtop", "Ġlevel", "Ġsuite", "Ġfrom", "Ġthe", "Ġregistry", "Ċ", "Ġ", "ĠC", "pp", "Unit", "::", "Test", "Ġ*", "su", "ite", "Ġ=", "ĠC", "pp", "Unit", "::", "Test", "Factory", "Reg", "istry", "::", "get", "Reg", "istry", "().", "make", "Test", "();", "ĊĊ", "Ġ", "Ġ//", "ĠAdds", "Ġthe", "Ġtest", "Ġto", "Ġthe", "Ġlist", "Ġof", "Ġtest", "Ġto", "Ġrun", "Ċ", "Ġ", "ĠC", "pp", "Unit", "::", "Text", "U", "i", "::", "Test", "Runner", "Ġrunner", ";", "Ċ", "Ġ", "Ġrunner", ".", "add", "Test", "(", "Ġsuite", "Ġ);", "ĊĊ", "Ġ", "Ġ//", "ĠChange", "Ġthe", "Ġdefault", "Ġoutput", "ter", "Ġto", "Ġa", "Ġcompiler", "Ġerror", "Ġformat", "Ġoutput", "ter", "Ċ", "Ġ", "Ġrunner", ".", "set", "Output", "ter", "(", "Ġnew", "ĠC", "pp", "Unit", "::", "Comp", "iler", "Output", "ter", "(", "Ġ&", "runner", ".", "result", "(),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ)", "Ġ);", "Ċ", "Ġ", "Ġ//", "ĠRun", "Ġthe", "Ġtests", ".", "Ċ", "Ġ", "Ġbool", "Ġwas", "Su", "cess", "ful", "Ġ=", "Ġrunner", ".", "run", "();", "ĊĊ", "Ġ", "Ġ//", "ĠReturn", "Ġerror", "Ġcode", "Ġ1", "Ġif", "Ġthe", "Ġone", "Ġof", "Ġtest", "Ġfailed", ".", "Ċ", "Ġ", "Ġreturn", "Ġwas", "Su", "cess", "ful", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["runner", 7, "comesFrom", ["runner"], [6]], ["runner", 10, "comesFrom", ["runner"], [6]], ["runner", 12, "comesFrom", ["runner"], [6]], ["runner", 16, "comesFrom", ["runner"], [6]], ["wasSucessful", 18, "comesFrom", ["wasSucessful"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::388", "code": "//Copyright (c) 2008-2009 Emil Dotchevski and Reverge Studios, Inc.\n\n//Distributed under the Boost Software License, Version 1.0. (See accompanying\n//file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#include <boost/la/diag_matrix.hpp>\n#include <boost/la/diag.hpp>\n#include <boost/la/vector_mul_eq_scalar.hpp>\n#include <boost/la/array_matrix_traits.hpp>\n#include <boost/la/matrix_assign.hpp>\n#include \"test_la_vector.hpp\"\n#include \"gold.hpp\"\n\nnamespace\n\t{\n\ttemplate <int Dim>\n\tvoid\n\ttest()\n\t\t{\n\t\tusing namespace boost::la;\n\t\ttest_la::vector<V1,Dim> x(42,1);\n\t\tfloat y[Dim][Dim]; assign(y,x|diag_matrix);\n\t\tfor( int i=0; i!=Dim; ++i )\n\t\t\tx.b[i]=y[i][i];\n\t\tBOOST_TEST_LA_EQ(x.a,x.b);\n\t\ttest_la::scalar_multiply_v(x.b,x.a,2.0f);\n\t\tx|diag_matrix|diag *= 2;\n\t\tBOOST_TEST_LA_EQ(x.a,x.b);\n\t\t}\n\t}\n\nint\nmain()\n\t{\n\ttest<2>();\n\ttest<3>();\n\ttest<4>();\n\ttest<5>();\n\treturn boost::report_errors();\n\t}\n", "code_tokens": ["Ġ//", "Copyright", "Ġ(", "c", ")", "Ġ2008", "-", "2009", "ĠEmil", "ĠDot", "che", "vs", "ki", "Ġand", "ĠRe", "ver", "ge", "ĠStudios", ",", "ĠInc", ".", "Ċ", "Ċ", "//", "Dist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġaccompanying", "Ċ", "//", "file", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "di", "ag", "_", "mat", "rix", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "di", "ag", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "vector", "_", "m", "ul", "_", "eq", "_", "sc", "al", "ar", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "array", "_", "mat", "rix", "_", "tra", "its", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "la", "/", "mat", "rix", "_", "ass", "ign", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ\"", "test", "_", "la", "_", "vector", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "gold", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ċ", "ĉ", "{", "Ċ", "ĉ", "template", "Ġ<", "int", "ĠDim", ">", "Ċ", "ĉ", "void", "Ċ", "ĉ", "test", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "using", "Ġnamespace", "Ġboost", "::", "la", ";", "Ċ", "ĉ", "ĉ", "test", "_", "la", "::", "vector", "<", "V", "1", ",", "Dim", ">", "Ġx", "(", "42", ",", "1", ");", "Ċ", "ĉ", "ĉ", "float", "Ġy", "[", "Dim", "][", "Dim", "];", "Ġassign", "(", "y", ",", "x", "|", "di", "ag", "_", "mat", "rix", ");", "Ċ", "ĉ", "ĉ", "for", "(", "Ġint", "Ġi", "=", "0", ";", "Ġi", "!", "=", "Dim", ";", "Ġ++", "i", "Ġ)", "Ċ", "ĉ", "ĉ", "ĉ", "x", ".", "b", "[", "i", "]=", "y", "[", "i", "][", "i", "];", "Ċ", "ĉ", "ĉ", "B", "OO", "ST", "_", "T", "EST", "_", "LA", "_", "E", "Q", "(", "x", ".", "a", ",", "x", ".", "b", ");", "Ċ", "ĉ", "ĉ", "test", "_", "la", "::", "sc", "al", "ar", "_", "mult", "ip", "ly", "_", "v", "(", "x", ".", "b", ",", "x", ".", "a", ",", "2", ".", "0", "f", ");", "Ċ", "ĉ", "ĉ", "x", "|", "di", "ag", "_", "mat", "rix", "|", "di", "ag", "Ġ*", "=", "Ġ2", ";", "Ċ", "ĉ", "ĉ", "B", "OO", "ST", "_", "T", "EST", "_", "LA", "_", "E", "Q", "(", "x", ".", "a", ",", "x", ".", "b", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "test", "<", "2", ">", "();", "Ċ", "ĉ", "test", "<", "3", ">", "();", "Ċ", "ĉ", "test", "<", "4", ">", "();", "Ċ", "ĉ", "test", "<", "5", ">", "();", "Ċ", "ĉ", "return", "Ġboost", "::", "report", "_", "errors", "();", "Ċ", "ĉ", "}", "Ċ"], "dataflow_graph": [["Dim", 5, "comesFrom", ["Dim"], [0]], ["Dim", 6, "comesFrom", ["Dim"], [0]], ["Dim", 13, "comesFrom", ["Dim"], [0]], ["x", 9, "comesFrom", ["x"], [3]], ["x", 15, "comesFrom", ["x"], [3]], ["x", 22, "comesFrom", ["x"], [3]], ["x", 24, "comesFrom", ["x"], [3]], ["x", 27, "comesFrom", ["x"], [3]], ["x", 29, "comesFrom", ["x"], [3]], ["x", 31, "comesFrom", ["x"], [3]], ["x", 35, "comesFrom", ["x"], [3]], ["x", 37, "comesFrom", ["x"], [3]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["i", 17, "comesFrom", ["i"], [11]], ["i", 19, "comesFrom", ["i"], [11]], ["i", 20, "comesFrom", ["i"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::389", "code": "#include \"aikido/statespace/dart/JointStateSpaceHelpers.hpp\"\n\nnamespace aikido {\nnamespace statespace {\nnamespace dart {\n\n//==============================================================================\nstd::unique_ptr<JointStateSpace> createJointStateSpace(\n    const ::dart::dynamics::Joint* joint)\n{\n  auto space = common::DynamicCastFactory<\n      detail::createJointStateSpaceFor_impl,\n      common::DynamicCastFactory_raw_ptr,\n      const ::dart::dynamics::Joint,\n      detail::ConstSupportedJoints>::create(joint);\n\n  if (!space)\n  {\n    std::stringstream msg;\n    msg << \"Joint '\" << joint->getName() << \"' has unsupported type '\"\n        << joint->getType() << \"'.\";\n    throw std::runtime_error(msg.str());\n  }\n\n  return space;\n}\n\n} // namespace dart\n} // namespace statespace\n} // namespace aikido\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "a", "ik", "ido", "/", "states", "pace", "/", "d", "art", "/", "J", "oint", "State", "Space", "Hel", "pers", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġa", "ik", "ido", "Ġ{", "Ċ", "names", "pace", "Ġstates", "pace", "Ġ{", "Ċ", "names", "pace", "Ġdart", "Ġ{", "Ċ", "Ċ", "//", "================================================================", "============", "==", "Ċ", "std", "::", "unique", "_", "ptr", "<", "J", "oint", "State", "Space", ">", "Ġcreate", "J", "oint", "State", "Space", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġ::", "d", "art", "::", "d", "ynam", "ics", "::", "J", "oint", "*", "Ġjoint", ")", "Ċ", "{", "Ċ", "Ġ", "Ġauto", "Ġspace", "Ġ=", "Ġcommon", "::", "Dynamic", "Cast", "Factory", "<", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdetail", "::", "create", "J", "oint", "State", "Space", "For", "_", "impl", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcommon", "::", "Dynamic", "Cast", "Factory", "_", "raw", "_", "ptr", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġ::", "d", "art", "::", "d", "ynam", "ics", "::", "J", "oint", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdetail", "::", "Const", "Supported", "J", "oint", "s", ">", "::", "create", "(", "j", "oint", ");", "ĊĊ", "Ġ", "Ġif", "Ġ(!", "space", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "stream", "Ġmsg", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmsg", "Ġ<<", "Ġ\"", "J", "oint", "Ġ'", "\"", "Ġ<<", "Ġjoint", "->", "get", "Name", "()", "Ġ<<", "Ġ\"'", "Ġhas", "Ġunsupported", "Ġtype", "Ġ'", "\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġjoint", "->", "get", "Type", "()", "Ġ<<", "Ġ\"'", ".\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(", "msg", ".", "str", "());", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġspace", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġdart", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġstates", "pace", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġa", "ik", "ido", "Ċ"], "dataflow_graph": [["space", 5, "comesFrom", ["space"], [2]], ["space", 15, "comesFrom", ["space"], [2]], ["msg", 7, "comesFrom", ["msg"], [6]], ["msg", 13, "comesFrom", ["msg"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::390", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"components/mus/public/cpp/view_tracker.h\"\n\nnamespace mus {\n\nViewTracker::ViewTracker() {}\n\nViewTracker::~ViewTracker() {\n  for (Views::iterator i = views_.begin(); i != views_.end(); ++i)\n    (*i)->RemoveObserver(this);\n}\n\nvoid ViewTracker::Add(View* view) {\n  if (views_.count(view))\n    return;\n\n  view->AddObserver(this);\n  views_.insert(view);\n}\n\nvoid ViewTracker::Remove(View* view) {\n  if (views_.count(view)) {\n    views_.erase(view);\n    view->RemoveObserver(this);\n  }\n}\n\nbool ViewTracker::Contains(View* view) {\n  return views_.count(view) > 0;\n}\n\nvoid ViewTracker::OnViewDestroying(View* view) {\n  DCHECK_GT(views_.count(view), 0u);\n  Remove(view);\n}\n\n}  // namespace mus\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "comp", "onents", "/", "mus", "/", "public", "/", "cpp", "/", "view", "_", "tr", "acker", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġmus", "Ġ{", "Ċ", "Ċ", "View", "Tracker", "::", "View", "Tracker", "()", "Ġ{}", "Ċ", "Ċ", "View", "Tracker", "::", "~", "View", "Tracker", "()", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "View", "s", "::", "iterator", "Ġi", "Ġ=", "Ġviews", "_.", "begin", "();", "Ġi", "Ġ!=", "Ġviews", "_.", "end", "();", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(*", "i", ")", "->", "Remove", "Obs", "erver", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "Tracker", "::", "Add", "(", "View", "*", "Ġview", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "views", "_.", "count", "(", "view", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "ĊĊ", "Ġ", "Ġview", "->", "Add", "Obs", "erver", "(", "this", ");", "Ċ", "Ġ", "Ġviews", "_.", "insert", "(", "view", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "Tracker", "::", "Remove", "(", "View", "*", "Ġview", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "views", "_.", "count", "(", "view", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġviews", "_.", "er", "ase", "(", "view", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "->", "Remove", "Obs", "erver", "(", "this", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠView", "Tracker", "::", "Cont", "ains", "(", "View", "*", "Ġview", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġviews", "_.", "count", "(", "view", ")", "Ġ>", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠView", "Tracker", "::", "On", "View", "Dest", "roying", "(", "View", "*", "Ġview", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "_", "GT", "(", "views", "_.", "count", "(", "view", "),", "Ġ0", "u", ");", "Ċ", "Ġ", "ĠRemove", "(", "view", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġmus", "Ċ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [2]], ["i", 8, "comesFrom", ["i"], [2]], ["i", 9, "comesFrom", ["i"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::391", "code": "/*\n    Nord Modular patch file format 3.03 parser\n    Copyright (C) 2002 Marcus Andersson\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\n#include \"nmpatch/ctrlmap.h\"\n\nCtrlMap::CtrlMap(ModuleSection::Type section, Module* module,\n\t\t ModuleType::Parameter parameter)\n{\n  this->section = section;\n  this->module = module;\n  this->parameter = parameter;\n}\n\nModuleSection::Type CtrlMap::getModuleSectionType()\n{\n  return section;\n}\n\nModule* CtrlMap::getModule()\n{\n  return module;\n}\n\nModuleType::Parameter CtrlMap::getParameter()\n{\n  return parameter;\n}\n\nvoid CtrlMap::setCC(int CC)\n{\n  this->CC = CC;\n}\n\nint CtrlMap::getCC()\n{\n  return CC;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNord", "ĠMod", "ular", "Ġpatch", "Ġfile", "Ġformat", "Ġ3", ".", "03", "Ġparser", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2002", "ĠMarcus", "ĠAnders", "son", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ", "Ġ", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ", "Ġ", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTemple", "ĠPlace", ",", "ĠSuite", "Ġ330", ",", "ĠBoston", ",", "ĠMA", "Ġ", "Ġ02", "111", "-", "130", "7", "Ġ", "ĠUSA", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "n", "mp", "atch", "/", "ctrl", "map", ".", "h", "\"", "Ċ", "Ċ", "Ctrl", "Map", "::", "Ctrl", "Map", "(", "Module", "Section", "::", "Type", "Ġsection", ",", "ĠModule", "*", "Ġmodule", ",", "Ċ", "ĉ", "ĉ", "ĠModule", "Type", "::", "Parameter", "Ġparameter", ")", "Ċ", "{", "Ċ", "Ġ", "Ġthis", "->", "section", "Ġ=", "Ġsection", ";", "Ċ", "Ġ", "Ġthis", "->", "module", "Ġ=", "Ġmodule", ";", "Ċ", "Ġ", "Ġthis", "->", "param", "eter", "Ġ=", "Ġparameter", ";", "Ċ", "}", "Ċ", "Ċ", "Module", "Section", "::", "Type", "ĠCtrl", "Map", "::", "get", "Module", "Section", "Type", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġsection", ";", "Ċ", "}", "Ċ", "Ċ", "Module", "*", "ĠCtrl", "Map", "::", "get", "Module", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmodule", ";", "Ċ", "}", "Ċ", "Ċ", "Module", "Type", "::", "Parameter", "ĠCtrl", "Map", "::", "get", "Parameter", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġparameter", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCtrl", "Map", "::", "set", "CC", "(", "int", "ĠCC", ")", "Ċ", "{", "Ċ", "Ġ", "Ġthis", "->", "CC", "Ġ=", "ĠCC", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠCtrl", "Map", "::", "get", "CC", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "ĠCC", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["section", 4, "comesFrom", ["section"], [1]], ["section", 5, "comesFrom", ["section"], [1]], ["section", 11, "comesFrom", ["section"], [1]], ["parameter", 8, "comesFrom", ["parameter"], [3]], ["parameter", 9, "comesFrom", ["parameter"], [3]], ["parameter", 15, "comesFrom", ["parameter"], [3]], ["CC", 18, "comesFrom", ["CC"], [17]], ["CC", 19, "comesFrom", ["CC"], [17]], ["CC", 21, "comesFrom", ["CC"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::392", "code": "\n#include <stdlib.h>\n#include <string.h>\n#include <vrpn_Connection.h>\n#include <vrpn_Mutex.h>\n\n\nint main (int argc, char ** argv) {\n\n  vrpn_Connection * c;\n  vrpn_Mutex_Server * me;\n  int portno = vrpn_DEFAULT_LISTEN_PORT_NO;\n\n  if (argc > 2) {\n    portno = atoi(argv[2]);\n  }\n\n  char con_name[512];\n  sprintf(con_name, \"localhost:%d\", portno);\n  c = vrpn_create_server_connection(con_name);\n  me = new vrpn_Mutex_Server (argv[1], c);\n\n  while (1) {\n    me->mainloop();\n  }\n\n}\n\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "vr", "pn", "_", "Connection", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "vr", "pn", "_", "Mut", "ex", ".", "h", ">", "ĊĊ", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "Ġarg", "v", ")", "Ġ{", "ĊĊ", "Ġ", "Ġv", "r", "pn", "_", "Connection", "Ġ*", "Ġc", ";", "Ċ", "Ġ", "Ġv", "r", "pn", "_", "Mut", "ex", "_", "Server", "Ġ*", "Ġme", ";", "Ċ", "Ġ", "Ġint", "Ġport", "no", "Ġ=", "Ġv", "r", "pn", "_", "DE", "FAULT", "_", "LIST", "EN", "_", "PORT", "_", "NO", ";", "ĊĊ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ>", "Ġ2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġport", "no", "Ġ=", "Ġat", "oi", "(", "arg", "v", "[", "2", "]);", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġchar", "Ġcon", "_", "name", "[", "512", "];", "Ċ", "Ġ", "Ġsprint", "f", "(", "con", "_", "name", ",", "Ġ\"", "localhost", ":", "%", "d", "\",", "Ġport", "no", ");", "Ċ", "Ġ", "Ġc", "Ġ=", "Ġv", "r", "pn", "_", "create", "_", "server", "_", "connection", "(", "con", "_", "name", ");", "Ċ", "Ġ", "Ġme", "Ġ=", "Ġnew", "Ġv", "r", "pn", "_", "Mut", "ex", "_", "Server", "Ġ(", "arg", "v", "[", "1", "],", "Ġc", ");", "ĊĊ", "Ġ", "Ġwhile", "Ġ(", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġme", "->", "main", "loop", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["c", 20, "comesFrom", ["c"], [15]], ["me", 21, "comesFrom", ["me"], [18]], ["argc", 7, "comesFrom", ["argc"], [1]], ["portno", 14, "comesFrom", ["portno"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::393", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/email/model/CreateReceiptRuleSetRequest.h>\n#include <aws/core/utils/StringUtils.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\nusing namespace Aws::SES::Model;\nusing namespace Aws::Utils;\n\nCreateReceiptRuleSetRequest::CreateReceiptRuleSetRequest() : \n    m_ruleSetNameHasBeenSet(false)\n{\n}\n\nAws::String CreateReceiptRuleSetRequest::SerializePayload() const\n{\n  Aws::StringStream ss;\n  ss << \"Action=CreateReceiptRuleSet&\";\n  if(m_ruleSetNameHasBeenSet)\n  {\n    ss << \"RuleSetName=\" << StringUtils::URLEncode(m_ruleSetName.c_str()) << \"&\";\n  }\n\n  ss << \"Version=2010-12-01\";\n  return ss.str();\n}\n\n\nvoid  CreateReceiptRuleSetRequest::DumpBodyToUrl(Aws::Http::URI& uri ) const\n{\n  uri.SetQueryString(SerializePayload());\n}\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "email", "/", "model", "/", "Create", "Re", "ce", "ipt", "Rule", "Set", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "String", "Ut", "ils", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "st", "l", "/", "AW", "S", "String", "Stream", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "S", "ES", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "Ċ", "Create", "Re", "ce", "ipt", "Rule", "Set", "Request", "::", "Create", "Re", "ce", "ipt", "Rule", "Set", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "rule", "Set", "Name", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠCreate", "Re", "ce", "ipt", "Rule", "Set", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠAw", "s", "::", "String", "Stream", "Ġss", ";", "Ċ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Action", "=", "Create", "Re", "ce", "ipt", "Rule", "Set", "&", "\";", "Ċ", "Ġ", "Ġif", "(", "m", "_", "rule", "Set", "Name", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Rule", "Set", "Name", "=\"", "Ġ<<", "ĠString", "Ut", "ils", "::", "UR", "LE", "n", "code", "(", "m", "_", "rule", "Set", "Name", ".", "c", "_", "str", "())", "Ġ<<", "Ġ\"", "&", "\";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Version", "=", "2010", "-", "12", "-", "01", "\";", "Ċ", "Ġ", "Ġreturn", "Ġss", ".", "str", "();", "Ċ", "}", "ĊĊ", "Ċ", "void", "Ġ", "ĠCreate", "Re", "ce", "ipt", "Rule", "Set", "Request", "::", "D", "ump", "Body", "To", "Url", "(", "A", "ws", "::", "Http", "::", "URI", "&", "Ġur", "i", "Ġ)", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġur", "i", ".", "Set", "Query", "String", "(", "Serial", "ize", "Pay", "load", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["ss", 6, "comesFrom", ["ss"], [5]], ["ss", 8, "comesFrom", ["ss"], [5]], ["ss", 12, "comesFrom", ["ss"], [5]], ["ss", 13, "comesFrom", ["ss"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::394", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/quicksight/model/ListDashboardsRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n#include <aws/core/http/URI.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\n#include <utility>\n\nusing namespace Aws::QuickSight::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\nusing namespace Aws::Http;\n\nListDashboardsRequest::ListDashboardsRequest() : \n    m_awsAccountIdHasBeenSet(false),\n    m_nextTokenHasBeenSet(false),\n    m_maxResults(0),\n    m_maxResultsHasBeenSet(false)\n{\n}\n\nAws::String ListDashboardsRequest::SerializePayload() const\n{\n  return {};\n}\n\nvoid ListDashboardsRequest::AddQueryStringParameters(URI& uri) const\n{\n    Aws::StringStream ss;\n    if(m_nextTokenHasBeenSet)\n    {\n      ss << m_nextToken;\n      uri.AddQueryStringParameter(\"next-token\", ss.str());\n      ss.str(\"\");\n    }\n\n    if(m_maxResultsHasBeenSet)\n    {\n      ss << m_maxResults;\n      uri.AddQueryStringParameter(\"max-results\", ss.str());\n      ss.str(\"\");\n    }\n\n}\n\n\n\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "qu", "icks", "ight", "/", "model", "/", "List", "Dash", "boards", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "J", "son", "Serial", "izer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "http", "/", "URI", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "st", "l", "/", "AW", "S", "String", "Stream", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Quick", "S", "ight", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", "::", "J", "son", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Http", ";", "Ċ", "Ċ", "List", "Dash", "boards", "Request", "::", "List", "Dash", "boards", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "aws", "Account", "Id", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "next", "Token", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "max", "Results", "(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "max", "Results", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠList", "Dash", "boards", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ{", "};", "Ċ", "}", "Ċ", "Ċ", "void", "ĠList", "Dash", "boards", "Request", "::", "Add", "Query", "String", "Parameters", "(", "URI", "&", "Ġur", "i", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAw", "s", "::", "String", "Stream", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "_", "next", "Token", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġm", "_", "next", "Token", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġur", "i", ".", "Add", "Query", "String", "Parameter", "(\"", "next", "-", "token", "\",", "Ġss", ".", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", ".", "str", "(\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "_", "max", "Results", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġm", "_", "max", "Results", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġur", "i", ".", "Add", "Query", "String", "Parameter", "(\"", "max", "-", "results", "\",", "Ġss", ".", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", ".", "str", "(\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["ss", 14, "comesFrom", ["ss"], [12]], ["ss", 18, "comesFrom", ["ss"], [12]], ["ss", 20, "comesFrom", ["ss"], [12]], ["ss", 23, "comesFrom", ["ss"], [12]], ["ss", 27, "comesFrom", ["ss"], [12]], ["ss", 29, "comesFrom", ["ss"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::395", "code": "#include <Eigen/Eigen>\n#include <iostream>\n\n#ifndef M_PI\n#define M_PI 3.1415926535897932384626433832795\n#endif\n\n\nusing namespace Eigen;\nusing namespace std;\n\nint main(int, char**)\n{\n  cout.precision(3);\n  Matrix4i m = Matrix4i::Random();\nm.row(1).setOnes();\ncout << m << endl;\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "E", "igen", "/", "E", "igen", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠM", "_", "PI", "Ċ", "#", "define", "ĠM", "_", "PI", "Ġ3", ".", "14", "159", "265", "35", "89", "793", "238", "46", "264", "33", "83", "27", "95", "Ċ", "#", "endif", "ĊĊ", "Ċ", "using", "Ġnamespace", "ĠE", "igen", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**", ")", "Ċ", "{", "Ċ", "Ġ", "Ġcout", ".", "pre", "cision", "(", "3", ");", "Ċ", "Ġ", "ĠMatrix", "4", "i", "Ġm", "Ġ=", "ĠMatrix", "4", "i", "::", "Random", "();", "Ċ", "m", ".", "row", "(", "1", ").", "set", "On", "es", "();", "Ċ", "c", "out", "Ġ<<", "Ġm", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["m", 9, "comesFrom", ["m"], [7]], ["m", 13, "comesFrom", ["m"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::396", "code": "// Copyright (c) 2020 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include <policy/fees.h>\n#include <test/fuzz/FuzzedDataProvider.h>\n#include <test/fuzz/fuzz.h>\n#include <test/fuzz/util.h>\n\n#include <cstdint>\n#include <vector>\n\nvoid initialize()\n{\n    InitializeFuzzingContext();\n}\n\nvoid test_one_input(const std::vector<uint8_t>& buffer)\n{\n    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n    CAutoFile fuzzed_auto_file = fuzzed_auto_file_provider.open();\n    // Re-using block_policy_estimator across runs to avoid costly creation of CBlockPolicyEstimator object.\n    static CBlockPolicyEstimator block_policy_estimator;\n    if (block_policy_estimator.Read(fuzzed_auto_file)) {\n        block_policy_estimator.Write(fuzzed_auto_file);\n    }\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2020", "ĠThe", "ĠBitcoin", "ĠCore", "Ġdevelopers", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġaccompanying", "Ċ", "//", "Ġfile", "ĠCOP", "YING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "policy", "/", "f", "ees", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "test", "/", "f", "uzz", "/", "F", "uzz", "ed", "Data", "Provider", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "test", "/", "f", "uzz", "/", "f", "uzz", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "test", "/", "f", "uzz", "/", "util", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "std", "int", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "void", "Ġinitialize", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠInitial", "ize", "F", "uzz", "ing", "Context", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ġtest", "_", "one", "_", "input", "(", "const", "Ġstd", "::", "vector", "<", "uint", "8", "_", "t", ">", "&", "Ġbuffer", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠF", "uzz", "ed", "Data", "Provider", "Ġfuzz", "ed", "_", "data", "_", "prov", "ider", "(", "buffer", ".", "data", "(),", "Ġbuffer", ".", "size", "());", "Ċ", "Ġ", "Ġ", "Ġ", "ĠF", "uzz", "ed", "Auto", "File", "Provider", "Ġfuzz", "ed", "_", "auto", "_", "file", "_", "prov", "ider", "Ġ=", "ĠCons", "ume", "Auto", "File", "(", "f", "uzz", "ed", "_", "data", "_", "prov", "ider", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCA", "uto", "File", "Ġfuzz", "ed", "_", "auto", "_", "file", "Ġ=", "Ġfuzz", "ed", "_", "auto", "_", "file", "_", "prov", "ider", ".", "open", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠRe", "-", "using", "Ġblock", "_", "policy", "_", "est", "im", "ator", "Ġacross", "Ġruns", "Ġto", "Ġavoid", "Ġcostly", "Ġcreation", "Ġof", "ĠC", "Block", "Policy", "Est", "im", "ator", "Ġobject", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "ĠC", "Block", "Policy", "Est", "im", "ator", "Ġblock", "_", "policy", "_", "est", "im", "ator", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "block", "_", "policy", "_", "est", "im", "ator", ".", "Read", "(", "f", "uzz", "ed", "_", "auto", "_", "file", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġblock", "_", "policy", "_", "est", "im", "ator", ".", "Write", "(", "f", "uzz", "ed", "_", "auto", "_", "file", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["fuzzed_data_provider", 11, "comesFrom", ["fuzzed_data_provider"], [4]], ["fuzzed_auto_file_provider", 13, "comesFrom", ["fuzzed_auto_file_provider"], [9]], ["block_policy_estimator", 16, "comesFrom", ["block_policy_estimator"], [15]], ["block_policy_estimator", 19, "comesFrom", ["block_policy_estimator"], [15]], ["fuzzed_auto_file", 18, "comesFrom", ["fuzzed_auto_file"], [12]], ["fuzzed_auto_file", 21, "comesFrom", ["fuzzed_auto_file"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::397", "code": "/**\n * This file is part of the CernVM File System.\n */\n\n#include <gtest/gtest.h>\n\n#include \"util/pointer.h\"\n#include \"util/raii_temp_dir.h\"\n\n#include \"platform.h\"\n#include \"util/posix.h\"\n\nstatic bool DirExists(const std::string& dir) {\n  platform_stat64 dir_stat;\n  int ret = platform_stat(dir.c_str(), &dir_stat);\n  return ret == 0;\n}\n\nclass T_RaiiTempDir : public ::testing::Test {};\n\nTEST_F(T_RaiiTempDir, Basic) {\n  UniquePtr<RaiiTempDir> temp_dir(\n      RaiiTempDir::Create(GetCurrentWorkingDirectory() + \"/test_dir\"));\n  ASSERT_TRUE(temp_dir.IsValid());\n\n  const std::string temp_path = temp_dir->dir();\n\n  temp_dir.Destroy();\n\n  ASSERT_FALSE(DirExists(temp_path));\n}\n\nTEST_F(T_RaiiTempDir, DeletedExternally) {\n  UniquePtr<RaiiTempDir> temp_dir(\n      RaiiTempDir::Create(GetCurrentWorkingDirectory() + \"/test_dir\"));\n  ASSERT_TRUE(temp_dir.IsValid());\n\n  const std::string temp_path = temp_dir->dir();\n\n  RemoveTree(temp_path);\n\n  ASSERT_FALSE(DirExists(temp_path));\n}\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠC", "ern", "VM", "ĠFile", "ĠSystem", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", "/", "pointer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "ra", "ii", "_", "temp", "_", "dir", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "platform", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "pos", "ix", ".", "h", "\"", "Ċ", "Ċ", "static", "Ġbool", "ĠDir", "Ex", "ists", "(", "const", "Ġstd", "::", "string", "&", "Ġdir", ")", "Ġ{", "Ċ", "Ġ", "Ġplatform", "_", "stat", "64", "Ġdir", "_", "stat", ";", "Ċ", "Ġ", "Ġint", "Ġret", "Ġ=", "Ġplatform", "_", "stat", "(", "dir", ".", "c", "_", "str", "(),", "Ġ&", "dir", "_", "stat", ");", "Ċ", "Ġ", "Ġreturn", "Ġret", "Ġ==", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "class", "ĠT", "_", "R", "aii", "Temp", "Dir", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ġ{", "};", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "T", "_", "R", "aii", "Temp", "Dir", ",", "ĠBasic", ")", "Ġ{", "Ċ", "Ġ", "ĠUnique", "Ptr", "<", "R", "aii", "Temp", "Dir", ">", "Ġtemp", "_", "dir", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠR", "aii", "Temp", "Dir", "::", "Create", "(", "Get", "Current", "Working", "Directory", "()", "Ġ+", "Ġ\"/", "test", "_", "dir", "\")", ");", "Ċ", "Ġ", "ĠASS", "ERT", "_", "TR", "UE", "(", "temp", "_", "dir", ".", "Is", "Valid", "());", "ĊĊ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġtemp", "_", "path", "Ġ=", "Ġtemp", "_", "dir", "->", "dir", "();", "ĊĊ", "Ġ", "Ġtemp", "_", "dir", ".", "Destroy", "();", "ĊĊ", "Ġ", "ĠASS", "ERT", "_", "F", "ALSE", "(", "Dir", "Ex", "ists", "(", "temp", "_", "path", "));", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "T", "_", "R", "aii", "Temp", "Dir", ",", "ĠDe", "leted", "Ex", "ternally", ")", "Ġ{", "Ċ", "Ġ", "ĠUnique", "Ptr", "<", "R", "aii", "Temp", "Dir", ">", "Ġtemp", "_", "dir", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠR", "aii", "Temp", "Dir", "::", "Create", "(", "Get", "Current", "Working", "Directory", "()", "Ġ+", "Ġ\"/", "test", "_", "dir", "\")", ");", "Ċ", "Ġ", "ĠASS", "ERT", "_", "TR", "UE", "(", "temp", "_", "dir", ".", "Is", "Valid", "());", "ĊĊ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġtemp", "_", "path", "Ġ=", "Ġtemp", "_", "dir", "->", "dir", "();", "ĊĊ", "Ġ", "ĠRemove", "Tree", "(", "temp", "_", "path", ");", "ĊĊ", "Ġ", "ĠASS", "ERT", "_", "F", "ALSE", "(", "Dir", "Ex", "ists", "(", "temp", "_", "path", "));", "Ċ", "}", "Ċ"], "dataflow_graph": [["dir_stat", 7, "comesFrom", ["dir_stat"], [2]], ["ret", 8, "comesFrom", ["ret"], [3]], ["temp_dir", 14, "comesFrom", ["temp_dir"], [10]], ["temp_dir", 17, "comesFrom", ["temp_dir"], [10]], ["temp_dir", 19, "comesFrom", ["temp_dir"], [10]], ["temp_dir", 29, "comesFrom", ["temp_dir"], [25]], ["temp_dir", 32, "comesFrom", ["temp_dir"], [25]], ["temp_path", 23, "comesFrom", ["temp_path"], [16]], ["temp_path", 35, "comesFrom", ["temp_path"], [31]], ["temp_path", 38, "comesFrom", ["temp_path"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::398", "code": "#include \"Halide.h\"\n\nusing namespace Halide;\n\n// Compile a simple pipeline to an object and to C code.\nHalideExtern_2(int, an_extern_func, int, int);\n\nint main(int argc, char **argv) {\n    Func f, g, h;\n    ImageParam input(UInt(16), 2);\n    Var x, y;\n\n    f(x, y) = (input(clamp(x+2, 0, input.width()-1), clamp(y-2, 0, input.height()-1)) * 17)/13;\n\n    h.define_extern(\"an_extern_stage\", {f}, Int(16), 0);\n\n    g(x, y) = f(y, x) + f(x, y) + cast<uint16_t>(an_extern_func(x, y)) + h();\n\n    h.compute_root();\n    f.compute_root();\n    f.debug_to_file(\"f.tiff\");\n\n    std::vector<Argument> args;\n    args.push_back(input);\n\n    g.compile_to_header(\"pipeline_native.h\", args, \"pipeline_native\");\n    g.compile_to_header(\"pipeline_c.h\", args, \"pipeline_c\");\n    g.compile_to_object(\"pipeline_native.o\", args, \"pipeline_native\");\n    g.compile_to_c(\"pipeline_c.c\", args, \"pipeline_c\");\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Hal", "ide", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠHal", "ide", ";", "Ċ", "Ċ", "//", "ĠComp", "ile", "Ġa", "Ġsimple", "Ġpipeline", "Ġto", "Ġan", "Ġobject", "Ġand", "Ġto", "ĠC", "Ġcode", ".", "Ċ", "Hal", "ide", "Ex", "tern", "_", "2", "(", "int", ",", "Ġan", "_", "ex", "tern", "_", "func", ",", "Ġint", ",", "Ġint", ");", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFun", "c", "Ġf", ",", "Ġg", ",", "Ġh", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠImage", "Param", "Ġinput", "(", "U", "Int", "(", "16", "),", "Ġ2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVar", "Ġx", ",", "Ġy", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġf", "(", "x", ",", "Ġy", ")", "Ġ=", "Ġ(", "input", "(", "cl", "amp", "(", "x", "+", "2", ",", "Ġ0", ",", "Ġinput", ".", "width", "()", "-", "1", "),", "Ġclamp", "(", "y", "-", "2", ",", "Ġ0", ",", "Ġinput", ".", "height", "()", "-", "1", "))", "Ġ*", "Ġ17", ")/", "13", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġh", ".", "define", "_", "ex", "tern", "(\"", "an", "_", "ex", "tern", "_", "stage", "\",", "Ġ{", "f", "},", "ĠInt", "(", "16", "),", "Ġ0", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġg", "(", "x", ",", "Ġy", ")", "Ġ=", "Ġf", "(", "y", ",", "Ġx", ")", "Ġ+", "Ġf", "(", "x", ",", "Ġy", ")", "Ġ+", "Ġcast", "<", "uint", "16", "_", "t", ">(", "an", "_", "ex", "tern", "_", "func", "(", "x", ",", "Ġy", "))", "Ġ+", "Ġh", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġh", ".", "comp", "ute", "_", "root", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġf", ".", "comp", "ute", "_", "root", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġf", ".", "debug", "_", "to", "_", "file", "(\"", "f", ".", "t", "iff", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "Arg", "ument", ">", "Ġargs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġargs", ".", "push", "_", "back", "(", "input", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġg", ".", "comp", "ile", "_", "to", "_", "header", "(\"", "p", "ip", "eline", "_", "native", ".", "h", "\",", "Ġargs", ",", "Ġ\"", "p", "ip", "eline", "_", "native", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġg", ".", "comp", "ile", "_", "to", "_", "header", "(\"", "p", "ip", "eline", "_", "c", ".", "h", "\",", "Ġargs", ",", "Ġ\"", "p", "ip", "eline", "_", "c", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġg", ".", "comp", "ile", "_", "to", "_", "object", "(\"", "p", "ip", "eline", "_", "native", ".", "o", "\",", "Ġargs", ",", "Ġ\"", "p", "ip", "eline", "_", "native", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġg", ".", "comp", "ile", "_", "to", "_", "c", "(\"", "p", "ip", "eline", "_", "c", ".", "c", "\",", "Ġargs", ",", "Ġ\"", "p", "ip", "eline", "_", "c", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["f", 12, "comesFrom", ["f"], [5]], ["f", 26, "comesFrom", ["f"], [5]], ["f", 31, "comesFrom", ["f"], [5]], ["f", 34, "comesFrom", ["f"], [5]], ["f", 44, "comesFrom", ["f"], [5]], ["f", 46, "comesFrom", ["f"], [5]], ["x", 13, "comesFrom", ["x"], [10]], ["x", 17, "comesFrom", ["x"], [10]], ["x", 29, "comesFrom", ["x"], [10]], ["x", 33, "comesFrom", ["x"], [10]], ["x", 35, "comesFrom", ["x"], [10]], ["x", 39, "comesFrom", ["x"], [10]], ["y", 14, "comesFrom", ["y"], [11]], ["y", 21, "comesFrom", ["y"], [11]], ["y", 30, "comesFrom", ["y"], [11]], ["y", 32, "comesFrom", ["y"], [11]], ["y", 36, "comesFrom", ["y"], [11]], ["y", 40, "comesFrom", ["y"], [11]], ["input", 15, "comesFrom", ["input"], [8]], ["input", 18, "comesFrom", ["input"], [8]], ["input", 22, "comesFrom", ["input"], [8]], ["input", 51, "comesFrom", ["input"], [8]], ["h", 24, "comesFrom", ["h"], [7]], ["h", 41, "comesFrom", ["h"], [7]], ["h", 42, "comesFrom", ["h"], [7]], ["g", 28, "comesFrom", ["g"], [6]], ["g", 52, "comesFrom", ["g"], [6]], ["g", 55, "comesFrom", ["g"], [6]], ["g", 58, "comesFrom", ["g"], [6]], ["g", 61, "comesFrom", ["g"], [6]], ["args", 49, "comesFrom", ["args"], [48]], ["args", 54, "comesFrom", ["args"], [48]], ["args", 57, "comesFrom", ["args"], [48]], ["args", 60, "comesFrom", ["args"], [48]], ["args", 63, "comesFrom", ["args"], [48]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::399", "code": "// Copyright 2019 Google LLC.\n// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n#include \"tools/fiddle/examples.h\"\n// HASH=72d41f890203109a41f589a7403acae9\nREG_FIDDLE(Paint_getColor, 256, 256, true, 0) {\nvoid draw(SkCanvas* canvas) {\n    SkPaint paint;\n    paint.setColor(SK_ColorYELLOW);\n    SkColor y = paint.getColor();\n    SkDebugf(\"Yellow is %d%% red, %d%% green, and %d%% blue.\\n\", (int) (SkColorGetR(y) / 2.55f),\n            (int) (SkColorGetG(y) / 2.55f), (int) (SkColorGetB(y) / 2.55f));\n}\n}  // END FIDDLE\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2019", "ĠGoogle", "ĠLLC", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "#", "include", "Ġ\"", "tools", "/", "f", "iddle", "/", "ex", "amples", ".", "h", "\"", "Ċ", "//", "ĠH", "ASH", "=", "72", "d", "41", "f", "8", "90", "203", "109", "a", "41", "f", "589", "a", "7", "403", "ac", "ae", "9", "Ċ", "REG", "_", "F", "ID", "D", "LE", "(", "P", "aint", "_", "get", "Color", ",", "Ġ256", ",", "Ġ256", ",", "Ġtrue", ",", "Ġ0", ")", "Ġ{", "Ċ", "void", "Ġdraw", "(", "Sk", "Can", "vas", "*", "Ġcanvas", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "P", "aint", "Ġpaint", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpaint", ".", "set", "Color", "(", "SK", "_", "Color", "Y", "ELL", "OW", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "Color", "Ġy", "Ġ=", "Ġpaint", ".", "get", "Color", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "Debug", "f", "(\"", "Yellow", "Ġis", "Ġ%", "d", "%%", "Ġred", ",", "Ġ%", "d", "%%", "Ġgreen", ",", "Ġand", "Ġ%", "d", "%%", "Ġblue", ".", "\\", "n", "\",", "Ġ(", "int", ")", "Ġ(", "Sk", "Color", "Get", "R", "(", "y", ")", "Ġ/", "Ġ2", ".", "55", "f", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "int", ")", "Ġ(", "Sk", "Color", "Get", "G", "(", "y", ")", "Ġ/", "Ġ2", ".", "55", "f", "),", "Ġ(", "int", ")", "Ġ(", "Sk", "Color", "Get", "B", "(", "y", ")", "Ġ/", "Ġ2", ".", "55", "f", "));", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "ĠEND", "ĠF", "ID", "D", "LE", "Ċ"], "dataflow_graph": [["paint", 5, "comesFrom", ["paint"], [4]], ["paint", 9, "comesFrom", ["paint"], [4]], ["y", 13, "comesFrom", ["y"], [8]], ["y", 15, "comesFrom", ["y"], [8]], ["y", 17, "comesFrom", ["y"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::400", "code": "//========= Copyright © 1996-2005, Valve Corporation, All rights reserved. ============//\n//\n// Purpose: \n//\n//=============================================================================//\n#include \"cbase.h\"\n#include \"model_types.h\"\n#include \"vcollide.h\"\n#include \"vcollide_parse.h\"\n#include \"solidsetdefaults.h\"\n#include \"bone_setup.h\"\n#include \"engine/ivmodelinfo.h\"\n#include \"physics.h\"\n#include \"c_breakableprop.h\"\n#include \"view.h\"\n\n// memdbgon must be the last include file in a .cpp file!!!\n#include \"tier0/memdbgon.h\"\n\nIMPLEMENT_CLIENTCLASS_DT(C_BreakableProp, DT_BreakableProp, CBreakableProp)\nEND_RECV_TABLE()\n\n//-----------------------------------------------------------------------------\n// Purpose: \n//-----------------------------------------------------------------------------\nC_BreakableProp::C_BreakableProp( void )\n{\n\tm_takedamage = DAMAGE_YES;\n}\n\n//-----------------------------------------------------------------------------\n// Purpose: \n//-----------------------------------------------------------------------------\nvoid C_BreakableProp::SetFadeMinMax( float fademin, float fademax )\n{\n\tm_fadeMinDist = fademin;\n\tm_fadeMaxDist = fademax;\n}\n\n//-----------------------------------------------------------------------------\n// Copy fade from another breakable prop\n//-----------------------------------------------------------------------------\nvoid C_BreakableProp::CopyFadeFrom( C_BreakableProp *pSource )\n{\n\tm_flFadeScale = pSource->m_flFadeScale;\n}\n", "code_tokens": ["Ġ//", "========", "=", "ĠCopyright", "ĠÂ©", "Ġ1996", "-", "2005", ",", "ĠValve", "ĠCorporation", ",", "ĠAll", "Ġrights", "Ġreserved", ".", "Ġ=", "========", "===", "//", "Ċ", "//", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ċ", "//", "Ċ", "//", "================================================================", "============", "=", "//", "Ċ", "#", "include", "Ġ\"", "c", "base", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "model", "_", "types", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "v", "coll", "ide", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "v", "coll", "ide", "_", "parse", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sol", "ids", "et", "default", "s", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "bone", "_", "setup", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "engine", "/", "iv", "model", "info", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ph", "ysics", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "c", "_", "break", "able", "prop", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "view", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġmem", "db", "gon", "Ġmust", "Ġbe", "Ġthe", "Ġlast", "Ġinclude", "Ġfile", "Ġin", "Ġa", "Ġ.", "cpp", "Ġfile", "!!!", "Ċ", "#", "include", "Ġ\"", "tier", "0", "/", "mem", "db", "gon", ".", "h", "\"", "Ċ", "Ċ", "IM", "PLE", "MENT", "_", "CL", "IENT", "CLASS", "_", "DT", "(", "C", "_", "Bre", "akable", "Prop", ",", "ĠDT", "_", "Bre", "akable", "Prop", ",", "ĠCB", "re", "akable", "Prop", ")", "Ċ", "END", "_", "RE", "CV", "_", "TABLE", "()", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ", "C", "_", "Bre", "akable", "Prop", "::", "C", "_", "Bre", "akable", "Prop", "(", "Ġvoid", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "m", "_", "t", "aked", "am", "age", "Ġ=", "ĠDAM", "AGE", "_", "YES", ";", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ", "void", "ĠC", "_", "Bre", "akable", "Prop", "::", "Set", "F", "ade", "Min", "Max", "(", "Ġfloat", "Ġf", "ad", "emin", ",", "Ġfloat", "Ġf", "adem", "ax", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "m", "_", "f", "ade", "Min", "Dist", "Ġ=", "Ġf", "ad", "emin", ";", "Ċ", "ĉ", "m", "_", "f", "ade", "Max", "Dist", "Ġ=", "Ġf", "adem", "ax", ";", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ", "//", "ĠCopy", "Ġfade", "Ġfrom", "Ġanother", "Ġbreak", "able", "Ġprop", "Ċ", "//", "----------------------------------------------------------------", "-------------", "Ċ", "void", "ĠC", "_", "Bre", "akable", "Prop", "::", "Copy", "F", "ade", "From", "(", "ĠC", "_", "Bre", "akable", "Prop", "Ġ*", "p", "Source", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "m", "_", "fl", "F", "ade", "Scale", "Ġ=", "Ġp", "Source", "->", "m", "_", "fl", "F", "ade", "Scale", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["fademin", 12, "comesFrom", ["fademin"], [9]], ["fademax", 14, "comesFrom", ["fademax"], [10]], ["m_flFadeScale", 19, "comesFrom", ["m_flFadeScale"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::401", "code": "#include <StdAfxUnitTests.h>\r\n#include <CppUnitTests\\CppUnitTests.h>\r\n\r\nint main( int argc, char* argv[] )\r\n{\r\n\tAppSecInc::Com::CCoInitialize coinit;\r\n\tCppUnitTestRunner runner;\r\n\treturn runner.Run(argc, argv);\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "St", "d", "Af", "x", "Unit", "T", "ests", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "C", "pp", "Unit", "T", "ests", "\\", "C", "pp", "Unit", "T", "ests", ".", "h", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[]", "Ġ)", "č", "Ċ", "{", "č", "Ċ", "ĉ", "App", "Sec", "Inc", "::", "Com", "::", "CC", "o", "Initial", "ize", "Ġcoin", "it", ";", "č", "Ċ", "ĉ", "C", "pp", "Unit", "Test", "Runner", "Ġrunner", ";", "č", "Ċ", "ĉ", "return", "Ġrunner", ".", "Run", "(", "arg", "c", ",", "Ġarg", "v", ");", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["runner", 5, "comesFrom", ["runner"], [4]], ["argc", 7, "comesFrom", ["argc"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::402", "code": "// This file is part of libigl, a simple c++ geometry processing library.\n// \n// Copyright (C) 2013 Alec Jacobson <alecjacobson@gmail.com>\n// \n// This Source Code Form is subject to the terms of the Mozilla Public License \n// v. 2.0. If a copy of the MPL was not distributed with this file, You can \n// obtain one at http://mozilla.org/MPL/2.0/.\n#include \"file_exists.h\"\n\n#include <sys/stat.h>\n\nIGL_INLINE bool igl::file_exists(const std::string filename)\n{\n  struct stat status;\n  return (stat(filename.c_str(),&status)==0);\n}\n", "code_tokens": ["Ġ//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġlib", "igl", ",", "Ġa", "Ġsimple", "Ġc", "++", "Ġgeometry", "Ġprocessing", "Ġlibrary", ".", "Ċ", "//", "Ġ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2013", "ĠAlec", "ĠJacob", "son", "Ġ<", "al", "ec", "jac", "ob", "son", "@", "gmail", ".", "com", ">", "Ċ", "//", "Ġ", "Ċ", "//", "ĠThis", "ĠSource", "ĠCode", "ĠForm", "Ġis", "Ġsubject", "Ġto", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠMozilla", "ĠPublic", "ĠLicense", "Ġ", "Ċ", "//", "Ġv", ".", "Ġ2", ".", "0", ".", "ĠIf", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠMP", "L", "Ġwas", "Ġnot", "Ġdistributed", "Ġwith", "Ġthis", "Ġfile", ",", "ĠYou", "Ġcan", "Ġ", "Ċ", "//", "Ġobtain", "Ġone", "Ġat", "Ġhttp", "://", "mo", "zilla", ".", "org", "/", "M", "PL", "/", "2", ".", "0", "/.", "Ċ", "#", "include", "Ġ\"", "file", "_", "ex", "ists", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "sys", "/", "stat", ".", "h", ">", "Ċ", "Ċ", "IG", "L", "_", "IN", "LINE", "Ġbool", "Ġ", "igl", "::", "file", "_", "ex", "ists", "(", "const", "Ġstd", "::", "string", "Ġfilename", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstruct", "Ġstat", "Ġstatus", ";", "Ċ", "Ġ", "Ġreturn", "Ġ(", "stat", "(", "filename", ".", "c", "_", "str", "(),", "&", "status", ")", "==", "0", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["filename", 5, "comesFrom", ["filename"], [2]], ["status", 7, "comesFrom", ["status"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::403", "code": "// Copyright (c) 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"gtest_ppapi/gtest_instance.h\"\n#include \"gtest_ppapi/gtest_runner.h\"\n#include \"ppapi/cpp/var.h\"\n\n#if defined(WIN32)\n#undef PostMessage\n#endif\n\nGTestInstance::GTestInstance(PP_Instance instance)\n  : pp::Instance(instance) {\n}\n\nGTestInstance::~GTestInstance() {\n}\n\nbool GTestInstance::Init(uint32_t /* argc */, const char* /* argn */[],\n                         const char* /* argv */[]) {\n  // Create a GTestRunner thread/singleton.\n  int local_argc = 0;\n  GTestRunner::CreateGTestRunnerThread(this, local_argc, NULL);\n  return true;\n}\n\nvoid GTestInstance::HandleMessage(const pp::Var& var_message) {\n  if (!var_message.is_string()) {\n    PostMessage(\"Invalid message\");\n    return;\n  }\n\n  std::string message = var_message.AsString();\n  if (message == \"RunGTest\") {\n    // This is our signal to start running the tests. Results from the tests\n    // are posted through GTestEventListener.\n    GTestRunner::gtest_runner()->RunAllTests();\n  } else {\n    std::string return_var;\n    return_var = \"Unknown message \";\n    return_var += message;\n    PostMessage(return_var);\n  }\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2012", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "g", "test", "_", "pp", "api", "/", "g", "test", "_", "instance", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "g", "test", "_", "pp", "api", "/", "g", "test", "_", "runner", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "pp", "api", "/", "cpp", "/", "var", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "Ġdefined", "(", "WIN", "32", ")", "Ċ", "#", "und", "ef", "ĠPost", "Message", "Ċ", "#", "endif", "Ċ", "Ċ", "G", "Test", "Instance", "::", "G", "Test", "Instance", "(", "PP", "_", "Instance", "Ġinstance", ")", "Ċ", "Ġ", "Ġ:", "Ġpp", "::", "Instance", "(", "instance", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "G", "Test", "Instance", "::", "~", "G", "Test", "Instance", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠGT", "est", "Instance", "::", "Init", "(", "uint", "32", "_", "t", "Ġ/*", "Ġarg", "c", "Ġ*/", ",", "Ġconst", "Ġchar", "*", "Ġ/*", "Ġarg", "n", "Ġ*/", "[", "],", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġchar", "*", "Ġ/*", "Ġarg", "v", "Ġ*/", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠCreate", "Ġa", "ĠGT", "est", "Runner", "Ġthread", "/", "sing", "leton", ".", "Ċ", "Ġ", "Ġint", "Ġlocal", "_", "arg", "c", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "ĠGT", "est", "Runner", "::", "Create", "G", "Test", "Runner", "Thread", "(", "this", ",", "Ġlocal", "_", "arg", "c", ",", "ĠNULL", ");", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGT", "est", "Instance", "::", "Handle", "Message", "(", "const", "Ġpp", "::", "Var", "&", "Ġvar", "_", "message", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "var", "_", "message", ".", "is", "_", "string", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPost", "Message", "(\"", "Invalid", "Ġmessage", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġstd", "::", "string", "Ġmessage", "Ġ=", "Ġvar", "_", "message", ".", "As", "String", "();", "Ċ", "Ġ", "Ġif", "Ġ(", "message", "Ġ==", "Ġ\"", "Run", "G", "Test", "\")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠThis", "Ġis", "Ġour", "Ġsignal", "Ġto", "Ġstart", "Ġrunning", "Ġthe", "Ġtests", ".", "ĠResults", "Ġfrom", "Ġthe", "Ġtests", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġare", "Ġposted", "Ġthrough", "ĠGT", "est", "Event", "Listener", ".", "Ċ", "Ġ", "Ġ", "Ġ", "ĠGT", "est", "Runner", "::", "g", "test", "_", "runner", "()", "->", "Run", "All", "T", "ests", "();", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġreturn", "_", "var", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "_", "var", "Ġ=", "Ġ\"", "Unknown", "Ġmessage", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "_", "var", "Ġ+=", "Ġmessage", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPost", "Message", "(", "return", "_", "var", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["instance", 4, "comesFrom", ["instance"], [2]], ["local_argc", 9, "comesFrom", ["local_argc"], [7]], ["message", 18, "comesFrom", ["message"], [15]], ["message", 24, "comesFrom", ["message"], [15]], ["return_var", 26, "comesFrom", ["return_var"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::404", "code": "// Copyright (c) 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"remoting/codec/audio_encoder_verbatim.h\"\n\n#include \"base/logging.h\"\n#include \"remoting/proto/audio.pb.h\"\n\nnamespace remoting {\n\nAudioEncoderVerbatim::AudioEncoderVerbatim() {}\n\nAudioEncoderVerbatim::~AudioEncoderVerbatim() {}\n\nscoped_ptr<AudioPacket> AudioEncoderVerbatim::Encode(\n    scoped_ptr<AudioPacket> packet) {\n  DCHECK_EQ(AudioPacket::ENCODING_RAW, packet->encoding());\n  DCHECK_EQ(1, packet->data_size());\n  DCHECK_NE(AudioPacket::SAMPLING_RATE_INVALID, packet->sampling_rate());\n  DCHECK_NE(AudioPacket::BYTES_PER_SAMPLE_INVALID, packet->bytes_per_sample());\n  DCHECK_NE(AudioPacket::CHANNELS_INVALID, packet->channels());\n  return packet.Pass();\n}\n\nint AudioEncoderVerbatim::GetBitrate() {\n  return AudioPacket::SAMPLING_RATE_48000 * AudioPacket::BYTES_PER_SAMPLE_2 *\n         AudioPacket::CHANNELS_STEREO * 8;\n}\n\n}  // namespace remoting\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2012", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "rem", "oting", "/", "cod", "ec", "/", "audio", "_", "enc", "oder", "_", "ver", "bat", "im", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "log", "ging", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "rem", "oting", "/", "pro", "to", "/", "audio", ".", "pb", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġrem", "oting", "Ġ{", "Ċ", "Ċ", "Audio", "Enc", "oder", "Ver", "bat", "im", "::", "Audio", "Enc", "oder", "Ver", "bat", "im", "()", "Ġ{}", "Ċ", "Ċ", "Audio", "Enc", "oder", "Ver", "bat", "im", "::", "~", "Audio", "Enc", "oder", "Ver", "bat", "im", "()", "Ġ{}", "Ċ", "Ċ", "sc", "oped", "_", "ptr", "<", "Audio", "P", "acket", ">", "ĠAudio", "Enc", "oder", "Ver", "bat", "im", "::", "En", "code", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsc", "oped", "_", "ptr", "<", "Audio", "P", "acket", ">", "Ġpacket", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "_", "E", "Q", "(", "Audio", "P", "acket", "::", "ENC", "OD", "ING", "_", "RAW", ",", "Ġpacket", "->", "enc", "oding", "());", "Ċ", "Ġ", "ĠD", "CHECK", "_", "E", "Q", "(", "1", ",", "Ġpacket", "->", "data", "_", "size", "());", "Ċ", "Ġ", "ĠD", "CHECK", "_", "NE", "(", "Audio", "P", "acket", "::", "SAM", "PL", "ING", "_", "R", "ATE", "_", "IN", "VAL", "ID", ",", "Ġpacket", "->", "sam", "pling", "_", "rate", "());", "Ċ", "Ġ", "ĠD", "CHECK", "_", "NE", "(", "Audio", "P", "acket", "::", "BY", "T", "ES", "_", "PER", "_", "SAM", "PLE", "_", "IN", "VAL", "ID", ",", "Ġpacket", "->", "bytes", "_", "per", "_", "sample", "());", "Ċ", "Ġ", "ĠD", "CHECK", "_", "NE", "(", "Audio", "P", "acket", "::", "CH", "ANN", "ELS", "_", "IN", "VAL", "ID", ",", "Ġpacket", "->", "ch", "annels", "());", "Ċ", "Ġ", "Ġreturn", "Ġpacket", ".", "Pass", "();", "Ċ", "}", "Ċ", "Ċ", "int", "ĠAudio", "Enc", "oder", "Ver", "bat", "im", "::", "Get", "Bit", "rate", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "ĠAudio", "P", "acket", "::", "SAM", "PL", "ING", "_", "R", "ATE", "_", "48", "000", "Ġ*", "ĠAudio", "P", "acket", "::", "BY", "T", "ES", "_", "PER", "_", "SAM", "PLE", "_", "2", "Ġ*", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAudio", "P", "acket", "::", "CH", "ANN", "ELS", "_", "STER", "EO", "Ġ*", "Ġ8", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġrem", "oting", "Ċ"], "dataflow_graph": [["packet", 6, "comesFrom", ["packet"], [3]], ["packet", 9, "comesFrom", ["packet"], [3]], ["packet", 13, "comesFrom", ["packet"], [3]], ["packet", 17, "comesFrom", ["packet"], [3]], ["packet", 21, "comesFrom", ["packet"], [3]], ["packet", 23, "comesFrom", ["packet"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::405", "code": "// PR c++/69509\n// { dg-do compile { target c++14 } }\n\nconstexpr int\nfn_bad (int n)\n{\n  __extension__ int a [n] = { 0 };\n  int z = a [0] + (n ? fn_bad (n - 1) : 0);\n  return z;\n}\n\nconstexpr int\nfn_ok (int n)\n{\n  __extension__ int a [n] = { 0 };\n  int z = a [0] + (n > 1 ? fn_ok (n - 1) : 0);\n  return z;\n}\n\nconstexpr int i1 = fn_ok (3);\nconstexpr int i2 = fn_bad (3); // { dg-error \"array subscript\" }\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "69", "509", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "14", "Ġ}", "Ġ}", "Ċ", "Ċ", "const", "expr", "Ġint", "Ċ", "fn", "_", "bad", "Ġ(", "int", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ__", "ext", "ension", "__", "Ġint", "Ġa", "Ġ[", "n", "]", "Ġ=", "Ġ{", "Ġ0", "Ġ};", "Ċ", "Ġ", "Ġint", "Ġz", "Ġ=", "Ġa", "Ġ[", "0", "]", "Ġ+", "Ġ(", "n", "Ġ?", "Ġfn", "_", "bad", "Ġ(", "n", "Ġ-", "Ġ1", ")", "Ġ:", "Ġ0", ");", "Ċ", "Ġ", "Ġreturn", "Ġz", ";", "Ċ", "}", "Ċ", "Ċ", "const", "expr", "Ġint", "Ċ", "fn", "_", "ok", "Ġ(", "int", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ__", "ext", "ension", "__", "Ġint", "Ġa", "Ġ[", "n", "]", "Ġ=", "Ġ{", "Ġ0", "Ġ};", "Ċ", "Ġ", "Ġint", "Ġz", "Ġ=", "Ġa", "Ġ[", "0", "]", "Ġ+", "Ġ(", "n", "Ġ>", "Ġ1", "Ġ?", "Ġfn", "_", "ok", "Ġ(", "n", "Ġ-", "Ġ1", ")", "Ġ:", "Ġ0", ");", "Ċ", "Ġ", "Ġreturn", "Ġz", ";", "Ċ", "}", "Ċ", "Ċ", "const", "expr", "Ġint", "Ġi", "1", "Ġ=", "Ġfn", "_", "ok", "Ġ(", "3", ");", "Ċ", "const", "expr", "Ġint", "Ġi", "2", "Ġ=", "Ġfn", "_", "bad", "Ġ(", "3", ");", "Ġ//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "array", "Ġsubscript", "\"", "Ġ}", "Ċ"], "dataflow_graph": [["n", 3, "comesFrom", ["n"], [1]], ["n", 6, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 13, "comesFrom", ["n"], [11]], ["n", 16, "comesFrom", ["n"], [11]], ["n", 18, "comesFrom", ["n"], [11]], ["z", 9, "comesFrom", ["z"], [4]], ["z", 19, "comesFrom", ["z"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::406", "code": "#include \"opencv2/imgproc/imgproc.hpp\"\n#include \"opencv2/highgui/highgui.hpp\"\n#include \"opencv2/gpu/gpu.hpp\"\n#include <stdlib.h>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nint main( int argc, char** argv ) {\n\n  Mat h_src;\n  Mat h_sobel;\n  int ddepth = CV_32F;\n\n  if (argc < 2) {\n    cout << \"You must a image path\" << endl;\n    return -1;\n  }\n\n  h_src = imread(argv[1], CV_LOAD_IMAGE_GRAYSCALE);\n\n  if (!h_src.data) { \n    cout << \"Error reading the image. Ensure it exist\" << endl;\n    return -1; \n  }\n\n  namedWindow(\"Sobel with opencv and cuda\", CV_WINDOW_NORMAL);\n  \n  gpu::GpuMat d_src, d_grad_x, d_grad_y, d_sobel;\n  d_src.upload(h_src);\n\n  gpu::Sobel(d_src, d_grad_x, ddepth, 1, 0);\n  gpu::Sobel(d_src, d_grad_y, ddepth, 0, 1);\n\n  gpu::magnitude(d_grad_x, d_grad_y, d_sobel);\n  \n  d_sobel.download(h_sobel);\n  convertScaleAbs(h_sobel, h_sobel);\n    \n  imshow(\"Sobel with opencv and cuda\", h_sobel);\n\n  waitKey(0);\n\n  return 0;\n  }\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "open", "cv", "2", "/", "img", "proc", "/", "img", "proc", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "open", "cv", "2", "/", "high", "gui", "/", "high", "gui", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "open", "cv", "2", "/", "gpu", "/", "gpu", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġc", "v", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", "Ġ)", "Ġ{", "ĊĊ", "Ġ", "ĠMat", "Ġh", "_", "src", ";", "Ċ", "Ġ", "ĠMat", "Ġh", "_", "so", "bel", ";", "Ċ", "Ġ", "Ġint", "Ġd", "depth", "Ġ=", "ĠCV", "_", "32", "F", ";", "ĊĊ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ<", "Ġ2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "You", "Ġmust", "Ġa", "Ġimage", "Ġpath", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġh", "_", "src", "Ġ=", "Ġim", "read", "(", "arg", "v", "[", "1", "],", "ĠCV", "_", "LOAD", "_", "IM", "AGE", "_", "G", "RAY", "SC", "ALE", ");", "ĊĊ", "Ġ", "Ġif", "Ġ(!", "h", "_", "src", ".", "data", ")", "Ġ{", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Error", "Ġreading", "Ġthe", "Ġimage", ".", "ĠEnsure", "Ġit", "Ġexist", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ġ", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġnamed", "Window", "(\"", "S", "ob", "el", "Ġwith", "Ġopen", "cv", "Ġand", "Ġc", "uda", "\",", "ĠCV", "_", "WIND", "OW", "_", "NOR", "MAL", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġg", "pu", "::", "G", "pu", "Mat", "Ġd", "_", "src", ",", "Ġd", "_", "grad", "_", "x", ",", "Ġd", "_", "grad", "_", "y", ",", "Ġd", "_", "so", "bel", ";", "Ċ", "Ġ", "Ġd", "_", "src", ".", "upload", "(", "h", "_", "src", ");", "ĊĊ", "Ġ", "Ġg", "pu", "::", "S", "ob", "el", "(", "d", "_", "src", ",", "Ġd", "_", "grad", "_", "x", ",", "Ġd", "depth", ",", "Ġ1", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġg", "pu", "::", "S", "ob", "el", "(", "d", "_", "src", ",", "Ġd", "_", "grad", "_", "y", ",", "Ġd", "depth", ",", "Ġ0", ",", "Ġ1", ");", "ĊĊ", "Ġ", "Ġg", "pu", "::", "m", "agn", "itude", "(", "d", "_", "grad", "_", "x", ",", "Ġd", "_", "grad", "_", "y", ",", "Ġd", "_", "so", "bel", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġd", "_", "so", "bel", ".", "download", "(", "h", "_", "so", "bel", ");", "Ċ", "Ġ", "Ġconvert", "Scale", "Abs", "(", "h", "_", "so", "bel", ",", "Ġh", "_", "so", "bel", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġim", "show", "(\"", "S", "ob", "el", "Ġwith", "Ġopen", "cv", "Ġand", "Ġc", "uda", "\",", "Ġh", "_", "so", "bel", ");", "ĊĊ", "Ġ", "Ġwait", "Key", "(", "0", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ}", "Ċ"], "dataflow_graph": [["argc", 9, "comesFrom", ["argc"], [3]], ["h_src", 16, "comesFrom", ["h_src"], [12]], ["h_src", 28, "comesFrom", ["h_src"], [12]], ["d_src", 26, "comesFrom", ["d_src"], [22]], ["d_src", 30, "comesFrom", ["d_src"], [22]], ["d_src", 34, "comesFrom", ["d_src"], [22]], ["d_grad_x", 31, "comesFrom", ["d_grad_x"], [23]], ["d_grad_x", 38, "comesFrom", ["d_grad_x"], [23]], ["ddepth", 32, "comesFrom", ["ddepth"], [7]], ["ddepth", 36, "comesFrom", ["ddepth"], [7]], ["d_grad_y", 35, "comesFrom", ["d_grad_y"], [24]], ["d_grad_y", 39, "comesFrom", ["d_grad_y"], [24]], ["d_sobel", 40, "comesFrom", ["d_sobel"], [25]], ["d_sobel", 41, "comesFrom", ["d_sobel"], [25]], ["h_sobel", 43, "comesFrom", ["h_sobel"], [6]], ["h_sobel", 45, "comesFrom", ["h_sobel"], [6]], ["h_sobel", 46, "comesFrom", ["h_sobel"], [6]], ["h_sobel", 48, "comesFrom", ["h_sobel"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::407", "code": "// Copyright (c) 2011-2013 The Bitcoin developers\n// Distributed under the MIT/X11 software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"walletmodeltransaction.h\"\n\n#include \"wallet.h\"\n\nWalletModelTransaction::WalletModelTransaction(const QList<SendCoinsRecipient> &recipients) :\n    recipients(recipients),\n    walletTransaction(0),\n    keyChange(0),\n    fee(0)\n{\n    walletTransaction = new CWalletTx();\n}\n\nWalletModelTransaction::~WalletModelTransaction()\n{\n    delete keyChange;\n    delete walletTransaction;\n}\n\nQList<SendCoinsRecipient> WalletModelTransaction::getRecipients()\n{\n    return recipients;\n}\n\nCWalletTx *WalletModelTransaction::getTransaction()\n{\n    return walletTransaction;\n}\n\nqint64 WalletModelTransaction::getTotalTransactionAmount()\n{\n    qint64 totalTransactionAmount = 0;\n    foreach(const SendCoinsRecipient &rcp, recipients)\n    {\n        totalTransactionAmount += rcp.amount;\n    }\n    return totalTransactionAmount;\n}\n\nvoid WalletModelTransaction::newPossibleKeyChange(CWallet *wallet)\n{\n    keyChange = new CReserveKey(wallet);\n}\n\nCReserveKey *WalletModelTransaction::getPossibleKeyChange()\n{\n    return keyChange;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "-", "2013", "ĠThe", "ĠBitcoin", "Ġdevelopers", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠMIT", "/", "X", "11", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġaccompanying", "Ċ", "//", "Ġfile", "ĠCOP", "YING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "wallet", "mod", "elt", "rans", "action", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "wallet", ".", "h", "\"", "Ċ", "Ċ", "Wallet", "Model", "Transaction", "::", "Wallet", "Model", "Transaction", "(", "const", "ĠQ", "List", "<", "Send", "Co", "ins", "Rec", "ipient", ">", "Ġ&", "rec", "ip", "ients", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġrecipients", "(", "rec", "ip", "ients", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwallet", "Transaction", "(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġkey", "Change", "(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfee", "(", "0", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwallet", "Transaction", "Ġ=", "Ġnew", "ĠC", "Wallet", "Tx", "();", "Ċ", "}", "Ċ", "Ċ", "Wallet", "Model", "Transaction", "::", "~", "Wallet", "Model", "Transaction", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġkey", "Change", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġwallet", "Transaction", ";", "Ċ", "}", "Ċ", "Ċ", "Q", "List", "<", "Send", "Co", "ins", "Rec", "ipient", ">", "ĠWallet", "Model", "Transaction", "::", "get", "Rec", "ip", "ients", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġrecipients", ";", "Ċ", "}", "Ċ", "Ċ", "C", "Wallet", "Tx", "Ġ*", "Wallet", "Model", "Transaction", "::", "get", "Transaction", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġwallet", "Transaction", ";", "Ċ", "}", "Ċ", "Ċ", "q", "int", "64", "ĠWallet", "Model", "Transaction", "::", "get", "Total", "Transaction", "Amount", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "int", "64", "Ġtotal", "Transaction", "Amount", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfore", "ach", "(", "const", "ĠSend", "Co", "ins", "Rec", "ipient", "Ġ&", "rc", "p", ",", "Ġrecipients", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtotal", "Transaction", "Amount", "Ġ+=", "Ġr", "cp", ".", "amount", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtotal", "Transaction", "Amount", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWallet", "Model", "Transaction", "::", "new", "P", "ossible", "Key", "Change", "(", "C", "Wallet", "Ġ*", "wallet", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġkey", "Change", "Ġ=", "Ġnew", "ĠC", "Res", "erve", "Key", "(", "wallet", ");", "Ċ", "}", "Ċ", "Ċ", "C", "Res", "erve", "Key", "Ġ*", "Wallet", "Model", "Transaction", "::", "get", "P", "ossible", "Key", "Change", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġkey", "Change", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["walletTransaction", 10, "comesFrom", ["walletTransaction"], [7]], ["walletTransaction", 14, "comesFrom", ["walletTransaction"], [7]], ["keyChange", 28, "comesFrom", ["keyChange"], [25]], ["totalTransactionAmount", 22, "comesFrom", ["totalTransactionAmount"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::408", "code": "#ifndef MBLIB_RANGE_COUNT_HPP_\n#define MBLIB_RANGE_COUNT_HPP_\n\n#include <mblib/range/traits.hpp>\n\n#include <cstddef>\n\nclass counting_range\n{\npublic:\n    typedef std::size_t value_type;\n    typedef std::size_t size_type;\n    typedef range_tag range_tag;\nprivate:\n    std::size_t i;\npublic:\n    counting_range(size_t start)\n      : i(start)\n    {}\n\n    bool empty() const\n    {\n        return false;\n    }\n    \n    value_type front() const\n    {\n        return i;\n    }\n    void pop_front()\n    {\n        ++i;\n    }\n\n    void pop_front(std::size_t how_many)\n    {\n        i += how_many;\n    }\n};\n\ninline counting_range count(std::size_t start)\n{\n    return {start};\n}\n\n#endif\n\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠM", "BL", "IB", "_", "R", "ANGE", "_", "C", "OUNT", "_", "H", "PP", "_", "Ċ", "#", "define", "ĠM", "BL", "IB", "_", "R", "ANGE", "_", "C", "OUNT", "_", "H", "PP", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "mb", "lib", "/", "range", "/", "tra", "its", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "st", "dd", "ef", ">", "Ċ", "Ċ", "class", "Ġcounting", "_", "range", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtyped", "ef", "Ġstd", "::", "size", "_", "t", "Ġvalue", "_", "type", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtyped", "ef", "Ġstd", "::", "size", "_", "t", "Ġsize", "_", "type", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtyped", "ef", "Ġrange", "_", "tag", "Ġrange", "_", "tag", ";", "Ċ", "private", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "size", "_", "t", "Ġi", ";", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcounting", "_", "range", "(", "size", "_", "t", "Ġstart", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġi", "(", "start", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġempty", "()", "Ġconst", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvalue", "_", "type", "Ġfront", "()", "Ġconst", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġpop", "_", "front", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "i", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġpop", "_", "front", "(", "std", "::", "size", "_", "t", "Ġhow", "_", "many", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "Ġ+=", "Ġhow", "_", "many", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "inline", "Ġcounting", "_", "range", "Ġcount", "(", "std", "::", "size", "_", "t", "Ġstart", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ{", "start", "};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "ĊĊ"], "dataflow_graph": [["start", 6, "comesFrom", ["start"], [4]], ["start", 18, "comesFrom", ["start"], [17]], ["how_many", 15, "comesFrom", ["how_many"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::409", "code": "#include <iostream>\n#include <string>\n#include \"vehicle.h\"\n#include \"tourist.h\"\n int main() {\n     std::string cname;     // name of the city\n    double x, y;           // position of the city\n    double bsp, tsp, asp;  // speed of bicycle, train and airplane.\n     std::cin >> cname >> x >> y;\n    City src = {x, y, cname};\n    std::cin >> cname >> x >> y;\n    City dest = {x, y, cname};\n     std::cin >> bsp >> tsp >> asp;\n    BicycleStrategy bicycle(bsp);\n    TrainStrategy train(tsp);\n    AirplaneStrategy air(asp);\n     Tourist lsc(&bicycle);\n    lsc.travel(src, dest);\n     lsc.setStrategy(&train);\n    lsc.travel(src, dest);\n     lsc.setStrategy(&air);\n    lsc.travel(src, dest);\n     return 0;\n}\n  ", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "veh", "icle", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "t", "our", "ist", ".", "h", "\"", "Ċ", "Ġint", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġc", "name", ";", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġname", "Ġof", "Ġthe", "Ġcity", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġx", ",", "Ġy", ";", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġposition", "Ġof", "Ġthe", "Ġcity", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġb", "sp", ",", "Ġtsp", ",", "Ġas", "p", ";", "Ġ", "Ġ//", "Ġspeed", "Ġof", "Ġbicycle", ",", "Ġtrain", "Ġand", "Ġairplane", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cin", "Ġ>>", "Ġc", "name", "Ġ>>", "Ġx", "Ġ>>", "Ġy", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCity", "Ġsrc", "Ġ=", "Ġ{", "x", ",", "Ġy", ",", "Ġc", "name", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cin", "Ġ>>", "Ġc", "name", "Ġ>>", "Ġx", "Ġ>>", "Ġy", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCity", "Ġdest", "Ġ=", "Ġ{", "x", ",", "Ġy", ",", "Ġc", "name", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cin", "Ġ>>", "Ġb", "sp", "Ġ>>", "Ġtsp", "Ġ>>", "Ġas", "p", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠBicycle", "Str", "ategy", "Ġbicycle", "(", "bsp", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTrain", "Str", "ategy", "Ġtrain", "(", "ts", "p", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAir", "plane", "Str", "ategy", "Ġair", "(", "asp", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTour", "ist", "Ġl", "sc", "(&", "b", "icycle", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġl", "sc", ".", "travel", "(", "src", ",", "Ġdest", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġl", "sc", ".", "set", "Str", "ategy", "(&", "train", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġl", "sc", ".", "travel", "(", "src", ",", "Ġdest", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġl", "sc", ".", "set", "Str", "ategy", "(&", "air", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġl", "sc", ".", "travel", "(", "src", ",", "Ġdest", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ġ", "Ġ"], "dataflow_graph": [["cname", 8, "comesFrom", ["cname"], [1]], ["cname", 14, "comesFrom", ["cname"], [1]], ["cname", 16, "comesFrom", ["cname"], [1]], ["cname", 22, "comesFrom", ["cname"], [1]], ["x", 9, "comesFrom", ["x"], [2]], ["x", 12, "comesFrom", ["x"], [2]], ["x", 17, "comesFrom", ["x"], [2]], ["x", 20, "comesFrom", ["x"], [2]], ["y", 10, "comesFrom", ["y"], [3]], ["y", 13, "comesFrom", ["y"], [3]], ["y", 18, "comesFrom", ["y"], [3]], ["y", 21, "comesFrom", ["y"], [3]], ["bsp", 24, "comesFrom", ["bsp"], [4]], ["tsp", 25, "comesFrom", ["tsp"], [5]], ["asp", 26, "comesFrom", ["asp"], [6]], ["lsc", 32, "comesFrom", ["lsc"], [30]], ["lsc", 36, "comesFrom", ["lsc"], [30]], ["lsc", 39, "comesFrom", ["lsc"], [30]], ["lsc", 43, "comesFrom", ["lsc"], [30]], ["lsc", 46, "comesFrom", ["lsc"], [30]], ["src", 34, "comesFrom", ["src"], [11]], ["src", 41, "comesFrom", ["src"], [11]], ["src", 48, "comesFrom", ["src"], [11]], ["dest", 35, "comesFrom", ["dest"], [19]], ["dest", 42, "comesFrom", ["dest"], [19]], ["dest", 49, "comesFrom", ["dest"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::410", "code": "#include \"Base.h\"\n#include <iostream>\nusing namespace std;\n//start\nint main (int argc, char** argv) {\n\n    Base b;\n    Derived d;\n\n    cout << \"Objects Created\" << endl;\n    b.b();\n    cout << \"Calling derived methods\" << endl;\n    d.a();\n    d.b();\n    d.c();\n    cout << \".. via base class pointers...\" << endl;\n    Base* bp = &d;\n    bp->a();\n    bp->b();\n    bp->c();\n    //d.c(false);\n}\n//end\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Base", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "//", "start", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠBase", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDer", "ived", "Ġd", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Object", "s", "ĠCreated", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", ".", "b", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Calling", "Ġderived", "Ġmethods", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", ".", "a", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", ".", "b", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", ".", "c", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "..", "Ġvia", "Ġbase", "Ġclass", "Ġpointers", "...\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠBase", "*", "Ġb", "p", "Ġ=", "Ġ&", "d", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "p", "->", "a", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "p", "->", "b", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "p", "->", "c", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "d", ".", "c", "(", "false", ");", "Ċ", "}", "Ċ", "//", "end", "Ċ"], "dataflow_graph": [["b", 8, "comesFrom", ["b"], [4]], ["b", 9, "comesFrom", ["b"], [4]], ["b", 15, "comesFrom", ["b"], [4]], ["b", 25, "comesFrom", ["b"], [4]], ["d", 12, "comesFrom", ["d"], [5]], ["d", 14, "comesFrom", ["d"], [5]], ["d", 16, "comesFrom", ["d"], [5]], ["d", 21, "comesFrom", ["d"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::411", "code": "/**\n* Title:            Art\n* Author:           Victor Cueva Llanos\n* Email:            Ingvcueva@gmail.com\n**/\n\n#include <bits/stdc++.h>\n#define MOD 1000000007\n#define MAXN 100005\n\nusing namespace std;\n\nint N[MAXN];\n\nint main(int nargs, char **args) {\n    // clock_t _inicio = clock();\n\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        for (int i = 0; i < n; i++) {\n            cin >> N[i];\n        }\n\n        bool ok = false;\n        for (int i = 2; i < n && !ok; i++) {\n            ok = (N[i] == N[i-1] && N[i-1] == N[i-2]);\n        }\n\n        puts(ok?\"Yes\":\"No\");\n    }\n\n    // printf(\"Time elapsed: %ld ms\\n\", (clock() - _inicio)/1000);\n    return 0;\n}\n", "code_tokens": ["Ġ/**", "Ċ", "*", "ĠTitle", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠArt", "Ċ", "*", "ĠAuthor", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠVictor", "ĠCue", "va", "ĠL", "lan", "os", "Ċ", "*", "ĠEmail", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠIng", "v", "cue", "va", "@", "gmail", ".", "com", "Ċ", "**", "/", "Ċ", "Ċ", "#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "#", "define", "ĠMOD", "Ġ100", "000000", "7", "Ċ", "#", "define", "ĠMAX", "N", "Ġ100", "005", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "ĠN", "[", "MAX", "N", "];", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġn", "args", ",", "Ġchar", "Ġ**", "args", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġclock", "_", "t", "Ġ_", "in", "icio", "Ġ=", "Ġclock", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġt", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġt", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "t", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "ĠN", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġok", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<", "Ġn", "Ġ&&", "Ġ!", "ok", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġok", "Ġ=", "Ġ(", "N", "[", "i", "]", "Ġ==", "ĠN", "[", "i", "-", "1", "]", "Ġ&&", "ĠN", "[", "i", "-", "1", "]", "Ġ==", "ĠN", "[", "i", "-", "2", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġputs", "(", "ok", "?\"", "Yes", "\":\"", "No", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġprintf", "(\"", "Time", "Ġelapsed", ":", "Ġ%", "ld", "Ġms", "\\", "n", "\",", "Ġ(", "clock", "()", "Ġ-", "Ġ_", "in", "icio", ")/", "1000", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["t", 10, "comesFrom", ["t"], [8]], ["t", 11, "comesFrom", ["t"], [8]], ["n", 14, "comesFrom", ["n"], [12]], ["n", 17, "comesFrom", ["n"], [12]], ["n", 25, "comesFrom", ["n"], [12]], ["i", 16, "comesFrom", ["i"], [15]], ["i", 18, "comesFrom", ["i"], [15]], ["i", 21, "comesFrom", ["i"], [15]], ["i", 24, "comesFrom", ["i"], [23]], ["i", 27, "comesFrom", ["i"], [23]], ["i", 30, "comesFrom", ["i"], [23]], ["i", 32, "comesFrom", ["i"], [23]], ["i", 34, "comesFrom", ["i"], [23]], ["i", 36, "comesFrom", ["i"], [23]], ["ok", 26, "comesFrom", ["ok"], [22]], ["ok", 38, "comesFrom", ["ok"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::412", "code": "#include \"aviary.hh\"\n#include \"duck.hh\"\n#include \"bird.hh\"\n#include \"owl.hh\"\n\n#include <iostream>\n#include <string>\n\nusing aviary::Aviary;\nusing aviary::Duck;\nusing aviary::Owl;\n\nvoid constTest(Aviary const &a)\n{\n  a[1]->speak(std::cout);\n  \n}\n\nint main()\n{\n\n  // The output of the program should be this:\n\n  /*\n    Esko: QUACK\n    Orly: WHUU\n    Alfred: QUACK\n    Alfred flies!\n    Orly: WHUU\n  */\n  \n  Aviary a, b;\n  \n  a.addBird(new Duck(\"Esko\"));\n  a.addBird(new Owl(\"Orly\"));\n\n  a.addBird(new Duck(\"Alfred\"));\n  \n  \n  a.speakAll(std::cout);\n\n  a[2]->fly(std::cout);\n\n  constTest(a);\n  \n\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "av", "iary", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "du", "ck", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "bird", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "owl", ".", "hh", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġav", "iary", "::", "Av", "iary", ";", "Ċ", "using", "Ġav", "iary", "::", "D", "uck", ";", "Ċ", "using", "Ġav", "iary", "::", "O", "wl", ";", "Ċ", "Ċ", "void", "Ġconst", "Test", "(", "Av", "iary", "Ġconst", "Ġ&", "a", ")", "Ċ", "{", "Ċ", "Ġ", "Ġa", "[", "1", "]", "->", "speak", "(", "std", "::", "c", "out", ");", "Ċ", "Ġ", "Ġ", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "ĊĊ", "Ġ", "Ġ//", "ĠThe", "Ġoutput", "Ġof", "Ġthe", "Ġprogram", "Ġshould", "Ġbe", "Ġthis", ":", "ĊĊ", "Ġ", "Ġ/*", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEs", "ko", ":", "ĠQU", "ACK", "Ċ", "Ġ", "Ġ", "Ġ", "ĠOr", "ly", ":", "ĠWH", "UU", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAlfred", ":", "ĠQU", "ACK", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAlfred", "Ġflies", "!", "Ċ", "Ġ", "Ġ", "Ġ", "ĠOr", "ly", ":", "ĠWH", "UU", "Ċ", "Ġ", "Ġ*/", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "ĠAv", "iary", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġa", ".", "add", "Bird", "(", "new", "ĠDuck", "(\"", "Es", "ko", "\")", ");", "Ċ", "Ġ", "Ġa", ".", "add", "Bird", "(", "new", "ĠOwl", "(\"", "Or", "ly", "\")", ");", "ĊĊ", "Ġ", "Ġa", ".", "add", "Bird", "(", "new", "ĠDuck", "(\"", "A", "lf", "red", "\")", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġa", ".", "speak", "All", "(", "std", "::", "c", "out", ");", "ĊĊ", "Ġ", "Ġa", "[", "2", "]", "->", "fly", "(", "std", "::", "c", "out", ");", "ĊĊ", "Ġ", "Ġconst", "Test", "(", "a", ");", "Ċ", "Ġ", "Ġ", "ĊĊ", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 11, "comesFrom", ["a"], [9]], ["a", 13, "comesFrom", ["a"], [9]], ["a", 15, "comesFrom", ["a"], [9]], ["a", 17, "comesFrom", ["a"], [9]], ["a", 20, "comesFrom", ["a"], [9]], ["a", 24, "comesFrom", ["a"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::413", "code": "#include \"cnffilemodel.h\"\r\n\r\nusing namespace Model;\r\n\r\nCnfFileModel::CnfFileModel()\r\n{\r\n}\r\n\r\nunsigned long long CnfFileModel::getNumVariables()\r\n{\r\n    return numVariables;\r\n}\r\n\r\nvoid CnfFileModel::setNumVariables(unsigned long long numVariables)\r\n{\r\n    this->numVariables = numVariables;\r\n}\r\n\r\nunsigned long long CnfFileModel::getNumClauses()\r\n{\r\n    return numClauses;\r\n}\r\n\r\nvoid CnfFileModel::setNumClauses(unsigned long long numClauses)\r\n{\r\n    this->numClauses = numClauses;\r\n}\r\n\r\nvoid CnfFileModel::debugOutput()\r\n{\r\n\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "cn", "ff", "ile", "model", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "ĠModel", ";", "č", "Ċ", "č", "Ċ", "C", "n", "f", "File", "Model", "::", "C", "n", "f", "File", "Model", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "unsigned", "Ġlong", "Ġlong", "ĠC", "n", "f", "File", "Model", "::", "get", "Num", "Vari", "ables", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġnum", "Vari", "ables", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠC", "n", "f", "File", "Model", "::", "set", "Num", "Vari", "ables", "(", "unsigned", "Ġlong", "Ġlong", "Ġnum", "Vari", "ables", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "num", "Vari", "ables", "Ġ=", "Ġnum", "Vari", "ables", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "unsigned", "Ġlong", "Ġlong", "ĠC", "n", "f", "File", "Model", "::", "get", "Num", "Cla", "uses", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġnum", "Cla", "uses", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠC", "n", "f", "File", "Model", "::", "set", "Num", "Cla", "uses", "(", "unsigned", "Ġlong", "Ġlong", "Ġnum", "Cla", "uses", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "num", "Cla", "uses", "Ġ=", "Ġnum", "Cla", "uses", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠC", "n", "f", "File", "Model", "::", "debug", "Output", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["numVariables", 6, "comesFrom", ["numVariables"], [5]], ["numVariables", 7, "comesFrom", ["numVariables"], [5]], ["numClauses", 12, "comesFrom", ["numClauses"], [11]], ["numClauses", 13, "comesFrom", ["numClauses"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::414", "code": "#include <Point.h>\n\nPoint::Point(double x, double y) {\n  this->x = x;\n  this->y = y;\n}\n\nvoid Point::setX(double x) {\n  this->x = x;\n}\n\nvoid Point::setY(double y) {\n  this->y = y;\n}\n\ndouble Point::getX() {\n  return x;\n}\n\ndouble Point::getY() {\n  return y;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Point", ".", "h", ">", "Ċ", "Ċ", "Point", "::", "Point", "(", "double", "Ġx", ",", "Ġdouble", "Ġy", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "x", "Ġ=", "Ġx", ";", "Ċ", "Ġ", "Ġthis", "->", "y", "Ġ=", "Ġy", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPoint", "::", "set", "X", "(", "double", "Ġx", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "x", "Ġ=", "Ġx", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPoint", "::", "set", "Y", "(", "double", "Ġy", ")", "Ġ{", "Ċ", "Ġ", "Ġthis", "->", "y", "Ġ=", "Ġy", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠPoint", "::", "get", "X", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġx", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠPoint", "::", "get", "Y", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġy", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 3, "comesFrom", ["x"], [1]], ["x", 4, "comesFrom", ["x"], [1]], ["x", 9, "comesFrom", ["x"], [8]], ["x", 10, "comesFrom", ["x"], [8]], ["x", 16, "comesFrom", ["x"], [8]], ["y", 5, "comesFrom", ["y"], [2]], ["y", 6, "comesFrom", ["y"], [2]], ["y", 13, "comesFrom", ["y"], [12]], ["y", 14, "comesFrom", ["y"], [12]], ["y", 18, "comesFrom", ["y"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::415", "code": "/*\r\n * main.cpp\r\n *\r\n *  Created on: Nov 29, 2015\r\n *      Author: Gianluca Tiepolo <tiepolo.gian@gmail.com>\r\n */\r\n\r\n#include \"MQ.h\"\r\n#include <chrono>\r\n\r\nint main(int argc, char *argv[]) {\r\n\tif(argc < 2) {\r\n\t\tstd::cout << \"Usage: ./example client|server\" << std::endl;\r\n\t\treturn 1;\r\n\t}\r\n\r\n\tMQ *messageQ;\r\n\r\n\tif(std::string(argv[1]) == \"server\") {\r\n\t\tmessageQ = new MQ(\"example\", MQ::EndpointType::Server);\r\n\t\tmessageQ->listen([messageQ](std::string message){\r\n\t\t\tstd::cout << \"Received: \" << message << std::endl;\r\n\t\t\tmessageQ->sendMessage(\"Hello from the server!\");\r\n\t\t});\r\n\t\twhile(true) std::this_thread::sleep_for (std::chrono::seconds(1));\r\n\t} else if(std::string(argv[1]) == \"client\") {\r\n\t\tmessageQ = new MQ(\"example\", MQ::EndpointType::Client);\r\n\t\tstd::string data;\r\n\t\tstd::cout << \"Write message to send and press ENTER:\" << std::endl;\r\n\t\tgetline(std::cin, data);\r\n\t\tmessageQ->sendMessage(data);\r\n\t\tstd::cout << \"Received: \" << messageQ->readMessage() << std::endl;\r\n\t}\r\n\r\n\tdelete messageQ;\r\n\treturn 0;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ*", "Ġmain", ".", "cpp", "č", "Ċ", "Ġ*", "č", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠNov", "Ġ29", ",", "Ġ2015", "č", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "ĠGian", "l", "uca", "ĠTie", "p", "olo", "Ġ<", "tie", "p", "olo", ".", "gian", "@", "gmail", ".", "com", ">", "č", "Ċ", "Ġ*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "MQ", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "chron", "o", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ġ{", "č", "Ċ", "ĉ", "if", "(", "arg", "c", "Ġ<", "Ġ2", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Usage", ":", "Ġ./", "example", "Ġclient", "|", "server", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "č", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "MQ", "Ġ*", "message", "Q", ";", "č", "Ċ", "č", "Ċ", "ĉ", "if", "(", "std", "::", "string", "(", "arg", "v", "[", "1", "])", "Ġ==", "Ġ\"", "server", "\")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "message", "Q", "Ġ=", "Ġnew", "ĠM", "Q", "(\"", "example", "\",", "ĠM", "Q", "::", "End", "point", "Type", "::", "Server", ");", "č", "Ċ", "ĉ", "ĉ", "message", "Q", "->", "list", "en", "([", "message", "Q", "](", "std", "::", "string", "Ġmessage", "){", "č", "Ċ", "ĉ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Re", "ceived", ":", "Ġ\"", "Ġ<<", "Ġmessage", "Ġ<<", "Ġstd", "::", "end", "l", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "message", "Q", "->", "send", "Message", "(\"", "Hello", "Ġfrom", "Ġthe", "Ġserver", "!\"", ");", "č", "Ċ", "ĉ", "ĉ", "});", "č", "Ċ", "ĉ", "ĉ", "while", "(", "true", ")", "Ġstd", "::", "this", "_", "thread", "::", "sleep", "_", "for", "Ġ(", "std", "::", "chron", "o", "::", "seconds", "(", "1", "));", "č", "Ċ", "ĉ", "}", "Ġelse", "Ġif", "(", "std", "::", "string", "(", "arg", "v", "[", "1", "])", "Ġ==", "Ġ\"", "client", "\")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "message", "Q", "Ġ=", "Ġnew", "ĠM", "Q", "(\"", "example", "\",", "ĠM", "Q", "::", "End", "point", "Type", "::", "Client", ");", "č", "Ċ", "ĉ", "ĉ", "std", "::", "string", "Ġdata", ";", "č", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Write", "Ġmessage", "Ġto", "Ġsend", "Ġand", "Ġpress", "ĠENTER", ":\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "č", "Ċ", "ĉ", "ĉ", "get", "line", "(", "std", "::", "cin", ",", "Ġdata", ");", "č", "Ċ", "ĉ", "ĉ", "message", "Q", "->", "send", "Message", "(", "data", ");", "č", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Re", "ceived", ":", "Ġ\"", "Ġ<<", "Ġmessage", "Q", "->", "read", "Message", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "delete", "Ġmessage", "Q", ";", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["argc", 3, "comesFrom", ["argc"], [1]], ["messageQ", 11, "comesFrom", ["messageQ"], [9]], ["messageQ", 13, "comesFrom", ["messageQ"], [9]], ["messageQ", 18, "comesFrom", ["messageQ"], [9]], ["messageQ", 32, "comesFrom", ["messageQ"], [24]], ["messageQ", 36, "comesFrom", ["messageQ"], [24]], ["messageQ", 39, "comesFrom", ["messageQ"], [24]], ["message", 16, "comesFrom", ["message"], [14]], ["data", 31, "comesFrom", ["data"], [26]], ["data", 34, "comesFrom", ["data"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::416", "code": "#include <iostream>\n\nusing std::cout;\n\nconst int MAX = 20;\n\nvoid sum_matrices(int first_matrix[][MAX], int second_matrix[][MAX],\n                  int m, int n, int result_matrix[][MAX]) {\n  for (int i = 0; i < m; ++i) {\n    for (int j = 0; j < n; ++j) {\n      result_matrix[i][j] = first_matrix[i][j] + second_matrix[i][j];\n    }\n  }\n}\n\nvoid print_matrix(int matrix[][MAX], int m, int n) {\n  for (int i = 0; i < m; ++i) {\n    for (int j = 0; j < n; ++j) {\n      cout << matrix[i][j] << ' ';\n    }\n    cout << '\\n';\n  }\n}\n\nint main() {\n  int first_matrix[MAX][MAX] = {\n    {1, 2},\n    {3, 4},\n    {5, 6},\n    {7, 8}\n  };\n\n  int second_matrix[MAX][MAX] = {\n    {2, 3},\n    {4, 5},\n    {6, 7},\n    {8, 9}\n  };\n\n  int result_matrix[MAX][MAX];\n\n  sum_matrices(first_matrix, second_matrix, 4, 2, result_matrix);\n\n  print_matrix(result_matrix, 4, 2);\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "Ċ", "const", "Ġint", "ĠMAX", "Ġ=", "Ġ20", ";", "Ċ", "Ċ", "void", "Ġsum", "_", "mat", "rices", "(", "int", "Ġfirst", "_", "mat", "rix", "[", "][", "MAX", "],", "Ġint", "Ġsecond", "_", "mat", "rix", "[", "][", "MAX", "],", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", ",", "Ġint", "Ġn", ",", "Ġint", "Ġresult", "_", "mat", "rix", "[", "][", "MAX", "])", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġm", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "_", "mat", "rix", "[", "i", "][", "j", "]", "Ġ=", "Ġfirst", "_", "mat", "rix", "[", "i", "][", "j", "]", "Ġ+", "Ġsecond", "_", "mat", "rix", "[", "i", "][", "j", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġprint", "_", "mat", "rix", "(", "int", "Ġmatrix", "[", "][", "MAX", "],", "Ġint", "Ġm", ",", "Ġint", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġm", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġmatrix", "[", "i", "][", "j", "]", "Ġ<<", "Ġ'", "Ġ'", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġfirst", "_", "mat", "rix", "[", "MAX", "][", "MAX", "]", "Ġ=", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "1", ",", "Ġ2", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "3", ",", "Ġ4", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "5", ",", "Ġ6", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "7", ",", "Ġ8", "}", "Ċ", "Ġ", "Ġ};", "ĊĊ", "Ġ", "Ġint", "Ġsecond", "_", "mat", "rix", "[", "MAX", "][", "MAX", "]", "Ġ=", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "2", ",", "Ġ3", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "4", ",", "Ġ5", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "6", ",", "Ġ7", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "8", ",", "Ġ9", "}", "Ċ", "Ġ", "Ġ};", "ĊĊ", "Ġ", "Ġint", "Ġresult", "_", "mat", "rix", "[", "MAX", "][", "MAX", "];", "ĊĊ", "Ġ", "Ġsum", "_", "mat", "rices", "(", "first", "_", "mat", "rix", ",", "Ġsecond", "_", "mat", "rix", ",", "Ġ4", ",", "Ġ2", ",", "Ġresult", "_", "mat", "rix", ");", "ĊĊ", "Ġ", "Ġprint", "_", "mat", "rix", "(", "result", "_", "mat", "rix", ",", "Ġ4", ",", "Ġ2", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["MAX", 4, "comesFrom", ["MAX"], [1]], ["MAX", 6, "comesFrom", ["MAX"], [1]], ["MAX", 10, "comesFrom", ["MAX"], [1]], ["MAX", 30, "comesFrom", ["MAX"], [1]], ["MAX", 48, "comesFrom", ["MAX"], [1]], ["MAX", 49, "comesFrom", ["MAX"], [1]], ["MAX", 51, "comesFrom", ["MAX"], [1]], ["MAX", 52, "comesFrom", ["MAX"], [1]], ["MAX", 54, "comesFrom", ["MAX"], [1]], ["MAX", 55, "comesFrom", ["MAX"], [1]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["i", 20, "comesFrom", ["i"], [11]], ["i", 23, "comesFrom", ["i"], [11]], ["i", 26, "comesFrom", ["i"], [11]], ["i", 34, "comesFrom", ["i"], [33]], ["i", 36, "comesFrom", ["i"], [33]], ["i", 43, "comesFrom", ["i"], [33]], ["m", 13, "comesFrom", ["m"], [7]], ["m", 35, "comesFrom", ["m"], [31]], ["j", 16, "comesFrom", ["j"], [15]], ["j", 18, "comesFrom", ["j"], [15]], ["j", 21, "comesFrom", ["j"], [15]], ["j", 24, "comesFrom", ["j"], [15]], ["j", 27, "comesFrom", ["j"], [15]], ["j", 38, "comesFrom", ["j"], [37]], ["j", 40, "comesFrom", ["j"], [37]], ["j", 44, "comesFrom", ["j"], [37]], ["n", 17, "comesFrom", ["n"], [8]], ["n", 39, "comesFrom", ["n"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::417", "code": "#include <iostream>\n#include <unordered_map>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int countPrimes(int n) {\n        int *m = new int[n];\n        for(int i = 0; i < n; i++) m[i] = 0;\n        int res = 0;\n        int i = 2;\n        while(1) {\n            for(; m[i] == 1 && i < n; i++);\n            cout<<i<<endl;\n            if (i >= n) break;\n            res += 1;\n            for(int k = 1; i * k < n; k++) {\n                m[i * k] = 1;\n            }\n        }\n        delete [] m;\n        return res;\n    }\n};\n\nint main()\n{\n    Solution s;\n    cout<<s.countPrimes(4);\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "un", "ordered", "_", "map", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġcount", "Pr", "imes", "(", "int", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġ*", "m", "Ġ=", "Ġnew", "Ġint", "[", "n", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġm", "[", "i", "]", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġres", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", ";", "Ġm", "[", "i", "]", "Ġ==", "Ġ1", "Ġ&&", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "i", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "i", "Ġ>=", "Ġn", ")", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġres", "Ġ+=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġk", "Ġ=", "Ġ1", ";", "Ġi", "Ġ*", "Ġk", "Ġ<", "Ġn", ";", "Ġk", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "[", "i", "Ġ*", "Ġk", "]", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġ[]", "Ġm", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġres", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSolution", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "s", ".", "count", "Pr", "imes", "(", "4", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [2]], ["n", 7, "comesFrom", ["n"], [2]], ["n", 16, "comesFrom", ["n"], [2]], ["n", 22, "comesFrom", ["n"], [2]], ["n", 27, "comesFrom", ["n"], [2]], ["i", 6, "comesFrom", ["i"], [5]], ["i", 8, "comesFrom", ["i"], [5]], ["i", 10, "comesFrom", ["i"], [5]], ["i", 14, "comesFrom", ["i"], [12]], ["i", 15, "comesFrom", ["i"], [12]], ["i", 17, "comesFrom", ["i"], [12]], ["i", 19, "comesFrom", ["i"], [12]], ["i", 21, "comesFrom", ["i"], [12]], ["i", 25, "comesFrom", ["i"], [12]], ["i", 30, "comesFrom", ["i"], [12]], ["k", 26, "comesFrom", ["k"], [24]], ["k", 28, "comesFrom", ["k"], [24]], ["k", 31, "comesFrom", ["k"], [24]], ["res", 33, "comesFrom", ["res"], [23]], ["s", 37, "comesFrom", ["s"], [35]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::418", "code": "#include \"game.h\"\n#include \"config.h\"\n\n#include <iostream>\n\n#ifdef _WIN32\n#include <windows.h>\n\nint WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int) {\n#else\n\nint main(int argc, char **argv) {\n#endif\n\n\tConfig myConfig(\"config.ini\");\n\n\tGame::FlagsCollection initFlagsColleciton = {\n\t\tVingine::InitFlags::Input | Vingine::InitFlags::Graphics | Vingine::InitFlags::DebugLog,\n\t\tVingine::WindowFlags::Resizable | Vingine::WindowFlags::FileDrop,\n\t\tstatic_cast<Vingine::RenderFlags>(0x0),\n\t\tVingine::LogFlags::Console | Vingine::LogFlags::File | Vingine::LogFlags::FatalQuit\n\t};\n\n\n#ifdef _WIN32\n\tGame game(myConfig);\n\tgame.Init(initFlagsColleciton, hInstance);\n#else\n\tGame game(myConfig);\n\tgame.Init(initFlagsColleciton);\n#endif\n\n\tgame.Run();\n\t\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "game", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "config", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "if", "def", "Ġ_", "WIN", "32", "Ċ", "#", "include", "Ġ<", "windows", ".", "h", ">", "Ċ", "Ċ", "int", "ĠWin", "Main", "(", "H", "INST", "ANCE", "Ġh", "Instance", ",", "ĠH", "INST", "ANCE", ",", "ĠLP", "STR", ",", "Ġint", ")", "Ġ{", "Ċ", "#", "else", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ġ{", "Ċ", "#", "endif", "ĊĊ", "ĉ", "Config", "Ġmy", "Config", "(\"", "config", ".", "ini", "\");", "ĊĊ", "ĉ", "Game", "::", "Flags", "Collection", "Ġinit", "Flags", "Col", "le", "c", "iton", "Ġ=", "Ġ{", "Ċ", "ĉ", "ĉ", "V", "ing", "ine", "::", "Init", "Flags", "::", "Input", "Ġ|", "ĠV", "ing", "ine", "::", "Init", "Flags", "::", "Graphics", "Ġ|", "ĠV", "ing", "ine", "::", "Init", "Flags", "::", "Debug", "Log", ",", "Ċ", "ĉ", "ĉ", "V", "ing", "ine", "::", "Window", "Flags", "::", "Res", "izable", "Ġ|", "ĠV", "ing", "ine", "::", "Window", "Flags", "::", "File", "Drop", ",", "Ċ", "ĉ", "ĉ", "static", "_", "cast", "<", "V", "ing", "ine", "::", "Render", "Flags", ">(", "0", "x", "0", "),", "Ċ", "ĉ", "ĉ", "V", "ing", "ine", "::", "Log", "Flags", "::", "Console", "Ġ|", "ĠV", "ing", "ine", "::", "Log", "Flags", "::", "File", "Ġ|", "ĠV", "ing", "ine", "::", "Log", "Flags", "::", "F", "atal", "Qu", "it", "Ċ", "ĉ", "};", "ĊĊ", "Ċ", "#", "if", "def", "Ġ_", "WIN", "32", "Ċ", "ĉ", "Game", "Ġgame", "(", "my", "Config", ");", "Ċ", "ĉ", "game", ".", "Init", "(", "init", "Flags", "Col", "le", "c", "iton", ",", "Ġh", "Instance", ");", "Ċ", "#", "else", "Ċ", "ĉ", "Game", "Ġgame", "(", "my", "Config", ");", "Ċ", "ĉ", "game", ".", "Init", "(", "init", "Flags", "Col", "le", "c", "iton", ");", "Ċ", "#", "endif", "ĊĊ", "ĉ", "game", ".", "Run", "();", "Ċ", "ĉ", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["initFlagsColleciton", 21, "comesFrom", ["initFlagsColleciton"], [7]], ["initFlagsColleciton", 26, "comesFrom", ["initFlagsColleciton"], [7]], ["hInstance", 22, "comesFrom", ["hInstance"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::419", "code": "#pragma once\n\n#include <string>\n\nnamespace bim\n{\n\tenum class MessageType\n\t{\n\t\tINFO,\n\t\tWARNING,\n\t\tERROR\n\t};\n\t\n\ttypedef void (*MessageCallback)(MessageType _type, const std::string& _message);\n\n\t// Replace the internal message callback with a custom one.\n\t// The default callback will output to std::cerr.\n\tvoid setMessageCallback(MessageCallback _callback);\n\n\tnamespace details\n\t{\n\t\textern MessageCallback g_theCallback;\n\n\t\tinline void buildMessageString(std::string&) {}\n\t\ttemplate<typename T, typename... TArgs>\n\t\tvoid buildMessageString(std::string& _message, T _first, TArgs... _args)\n\t\t{\n\t\t\t_message += std::to_string(_first);\n\t\t\tbuildMessageString(_message, _args...);\n\t\t}\n\t\ttemplate<typename... TArgs>\n\t\tvoid buildMessageString(std::string& _message, const char* _first, TArgs... _args)\n\t\t{\n\t\t\t_message += _first;\n\t\t\tbuildMessageString(_message, _args...);\n\t\t}\n\t\ttemplate<typename... TArgs>\n\t\tvoid buildMessageString(std::string& _message, const std::string& _first, TArgs... _args)\n\t\t{\n\t\t\t_message += _first;\n\t\t\tbuildMessageString(_message, _args...);\n\t\t}\n\t}\n\n\ttemplate<typename... TArgs>\n\tvoid sendMessage(MessageType _type, TArgs... _args)\n\t{\n\t\tstd::string msg;\n\t\tdetails::buildMessageString(msg, _args...);\n\t\tdetails::g_theCallback(_type, msg);\n\t}\n}", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "names", "pace", "Ġb", "im", "Ċ", "{", "Ċ", "ĉ", "enum", "Ġclass", "ĠMessage", "Type", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "INFO", ",", "Ċ", "ĉ", "ĉ", "WARNING", ",", "Ċ", "ĉ", "ĉ", "ERROR", "Ċ", "ĉ", "};", "Ċ", "ĉ", "Ċ", "ĉ", "ty", "ped", "ef", "Ġvoid", "Ġ(*", "Message", "Callback", ")(", "Message", "Type", "Ġ_", "type", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġ_", "message", ");", "ĊĊ", "ĉ", "//", "ĠReplace", "Ġthe", "Ġinternal", "Ġmessage", "Ġcallback", "Ġwith", "Ġa", "Ġcustom", "Ġone", ".", "Ċ", "ĉ", "//", "ĠThe", "Ġdefault", "Ġcallback", "Ġwill", "Ġoutput", "Ġto", "Ġstd", "::", "cer", "r", ".", "Ċ", "ĉ", "void", "Ġset", "Message", "Callback", "(", "Message", "Callback", "Ġ_", "callback", ");", "ĊĊ", "ĉ", "names", "pace", "Ġdetails", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ex", "tern", "ĠMessage", "Callback", "Ġg", "_", "the", "Callback", ";", "ĊĊ", "ĉ", "ĉ", "inline", "Ġvoid", "Ġbuild", "Message", "String", "(", "std", "::", "string", "&", ")", "Ġ{}", "Ċ", "ĉ", "ĉ", "template", "<", "ty", "pen", "ame", "ĠT", ",", "Ġtyp", "ename", "...", "ĠT", "Args", ">", "Ċ", "ĉ", "ĉ", "void", "Ġbuild", "Message", "String", "(", "std", "::", "string", "&", "Ġ_", "message", ",", "ĠT", "Ġ_", "first", ",", "ĠT", "Args", "...", "Ġ_", "args", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "_", "message", "Ġ+=", "Ġstd", "::", "to", "_", "string", "(_", "first", ");", "Ċ", "ĉ", "ĉ", "ĉ", "build", "Message", "String", "(_", "message", ",", "Ġ_", "args", "...", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "template", "<", "ty", "pen", "ame", "...", "ĠT", "Args", ">", "Ċ", "ĉ", "ĉ", "void", "Ġbuild", "Message", "String", "(", "std", "::", "string", "&", "Ġ_", "message", ",", "Ġconst", "Ġchar", "*", "Ġ_", "first", ",", "ĠT", "Args", "...", "Ġ_", "args", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "_", "message", "Ġ+=", "Ġ_", "first", ";", "Ċ", "ĉ", "ĉ", "ĉ", "build", "Message", "String", "(_", "message", ",", "Ġ_", "args", "...", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "template", "<", "ty", "pen", "ame", "...", "ĠT", "Args", ">", "Ċ", "ĉ", "ĉ", "void", "Ġbuild", "Message", "String", "(", "std", "::", "string", "&", "Ġ_", "message", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġ_", "first", ",", "ĠT", "Args", "...", "Ġ_", "args", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "_", "message", "Ġ+=", "Ġ_", "first", ";", "Ċ", "ĉ", "ĉ", "ĉ", "build", "Message", "String", "(_", "message", ",", "Ġ_", "args", "...", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "template", "<", "ty", "pen", "ame", "...", "ĠT", "Args", ">", "Ċ", "ĉ", "void", "Ġsend", "Message", "(", "Message", "Type", "Ġ_", "type", ",", "ĠT", "Args", "...", "Ġ_", "args", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "string", "Ġmsg", ";", "Ċ", "ĉ", "ĉ", "details", "::", "build", "Message", "String", "(", "msg", ",", "Ġ_", "args", "...", ");", "Ċ", "ĉ", "ĉ", "details", "::", "g", "_", "the", "Callback", "(_", "type", ",", "Ġmsg", ");", "Ċ", "ĉ", "}", "Ċ", "}"], "dataflow_graph": [["_message", 17, "comesFrom", ["_message"], [13]], ["_message", 20, "comesFrom", ["_message"], [13]], ["_message", 26, "comesFrom", ["_message"], [23]], ["_message", 29, "comesFrom", ["_message"], [23]], ["_message", 35, "comesFrom", ["_message"], [32]], ["_first", 15, "comesFrom", ["_first"], [11]], ["_first", 21, "comesFrom", ["_first"], [11]], ["_first", 24, "comesFrom", ["_first"], [11]], ["_first", 30, "comesFrom", ["_first"], [11]], ["_first", 33, "comesFrom", ["_first"], [11]], ["msg", 42, "comesFrom", ["msg"], [40]], ["msg", 46, "comesFrom", ["msg"], [40]], ["g_theCallback", 44, "comesFrom", ["g_theCallback"], [7]], ["_type", 45, "comesFrom", ["_type"], [38]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::420", "code": "#include \"BoundarySimulator.h\"\n#include \"SPlisHSPlasH/TimeManager.h\"\n#include \"SPlisHSPlasH/Simulation.h\"\n#include \"SPlisHSPlasH/BoundaryModel.h\"\n\nusing namespace SPH;\n\nvoid BoundarySimulator::updateBoundaryForces()\n{\n\tReal h = TimeManager::getCurrent()->getTimeStepSize();\n\tSimulation *sim = Simulation::getCurrent();\n\tconst unsigned int nObjects = sim->numberOfBoundaryModels();\n\tfor (unsigned int i = 0; i < nObjects; i++)\n\t{\n\t\tBoundaryModel *bm = sim->getBoundaryModel(i);\n\t\tRigidBodyObject *rbo = bm->getRigidBodyObject();\n\t\tif (rbo->isDynamic())\n\t\t{\n\t\t\tVector3r force, torque;\n\t\t\tbm->getForceAndTorque(force, torque);\n\t\t\trbo->addForce(force);\n\t\t\trbo->addTorque(torque);\n\t\t\tbm->clearForceAndTorque();\n\t\t}\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Bound", "ary", "Sim", "ulator", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "S", "Pl", "is", "HS", "Pl", "as", "H", "/", "Time", "Manager", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "S", "Pl", "is", "HS", "Pl", "as", "H", "/", "Sim", "ulation", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "S", "Pl", "is", "HS", "Pl", "as", "H", "/", "Bound", "ary", "Model", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠSP", "H", ";", "Ċ", "Ċ", "void", "ĠBound", "ary", "Sim", "ulator", "::", "update", "Bound", "ary", "For", "ces", "()", "Ċ", "{", "Ċ", "ĉ", "Real", "Ġh", "Ġ=", "ĠTime", "Manager", "::", "get", "Current", "()", "->", "get", "Time", "Step", "Size", "();", "Ċ", "ĉ", "Sim", "ulation", "Ġ*", "sim", "Ġ=", "ĠSimulation", "::", "get", "Current", "();", "Ċ", "ĉ", "const", "Ġunsigned", "Ġint", "Ġn", "Object", "s", "Ġ=", "Ġsim", "->", "number", "Of", "Bound", "ary", "Mod", "els", "();", "Ċ", "ĉ", "for", "Ġ(", "unsigned", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", "Object", "s", ";", "Ġi", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Bound", "ary", "Model", "Ġ*", "bm", "Ġ=", "Ġsim", "->", "get", "Bound", "ary", "Model", "(", "i", ");", "Ċ", "ĉ", "ĉ", "R", "ig", "id", "Body", "Object", "Ġ*", "r", "bo", "Ġ=", "Ġb", "m", "->", "get", "R", "ig", "id", "Body", "Object", "();", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "r", "bo", "->", "is", "Dynamic", "())", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "Vector", "3", "r", "Ġforce", ",", "Ġtorque", ";", "Ċ", "ĉ", "ĉ", "ĉ", "bm", "->", "get", "Force", "And", "Tor", "que", "(", "force", ",", "Ġtorque", ");", "Ċ", "ĉ", "ĉ", "ĉ", "r", "bo", "->", "add", "Force", "(", "force", ");", "Ċ", "ĉ", "ĉ", "ĉ", "r", "bo", "->", "add", "Tor", "que", "(", "tor", "que", ");", "Ċ", "ĉ", "ĉ", "ĉ", "bm", "->", "clear", "Force", "And", "Tor", "que", "();", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 11, "comesFrom", ["i"], [10]], ["i", 13, "comesFrom", ["i"], [10]], ["i", 17, "comesFrom", ["i"], [10]], ["nObjects", 12, "comesFrom", ["nObjects"], [7]], ["force", 27, "comesFrom", ["force"], [23]], ["force", 31, "comesFrom", ["force"], [23]], ["torque", 28, "comesFrom", ["torque"], [24]], ["torque", 34, "comesFrom", ["torque"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::421", "code": "#include \"Shape.h\"\n\n\nShape::Shape()\n{\n\tdrawShape = GL_LINES;\n\tnumberOfDots = 0;\n\tmaxDots = 0;\n\tpDots = NULL;\n\tcolor = Color(1.0f, 0.0f, 0.0f);\n}\n\n\nShape::~Shape()\n{\n\tdelete[] pDots;\n\tmaxDots = numberOfDots = 0;\n\tpDots = NULL;\n}\n\n\nvoid Shape::draw()\n{\n\tglBegin(drawShape);\n\n\tcolor.use();\n\tfor(int i=0; i<numberOfDots; i++)\n\t\tpDots[i].vertex();\n\n\tglEnd();\n}\n\n\nvoid Shape::setColor(Color c)\n{\n\tcolor = c;\n}\n\n\nvoid Shape::addDot(float x, float y)\n{\n\tif(numberOfDots == maxDots)\n\t\treturn;\n\n\tpDots[numberOfDots].setCoordinat(x, y);\n\n\tnumberOfDots++;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Shape", ".", "h", "\"", "ĊĊ", "Ċ", "Shape", "::", "Shape", "()", "Ċ", "{", "Ċ", "ĉ", "draw", "Shape", "Ġ=", "ĠGL", "_", "LIN", "ES", ";", "Ċ", "ĉ", "number", "Of", "D", "ots", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "max", "D", "ots", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "p", "D", "ots", "Ġ=", "ĠNULL", ";", "Ċ", "ĉ", "color", "Ġ=", "ĠColor", "(", "1", ".", "0", "f", ",", "Ġ0", ".", "0", "f", ",", "Ġ0", ".", "0", "f", ");", "Ċ", "}", "ĊĊ", "Ċ", "Shape", "::", "~", "Shape", "()", "Ċ", "{", "Ċ", "ĉ", "delete", "[]", "Ġp", "D", "ots", ";", "Ċ", "ĉ", "max", "D", "ots", "Ġ=", "Ġnumber", "Of", "D", "ots", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "p", "D", "ots", "Ġ=", "ĠNULL", ";", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠShape", "::", "draw", "()", "Ċ", "{", "Ċ", "ĉ", "gl", "Begin", "(", "draw", "Shape", ");", "ĊĊ", "ĉ", "color", ".", "use", "();", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "number", "Of", "D", "ots", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "p", "D", "ots", "[", "i", "].", "ver", "tex", "();", "ĊĊ", "ĉ", "gl", "End", "();", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠShape", "::", "set", "Color", "(", "Color", "Ġc", ")", "Ċ", "{", "Ċ", "ĉ", "color", "Ġ=", "Ġc", ";", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠShape", "::", "add", "D", "ot", "(", "float", "Ġx", ",", "Ġfloat", "Ġy", ")", "Ċ", "{", "Ċ", "ĉ", "if", "(", "number", "Of", "D", "ots", "Ġ==", "Ġmax", "D", "ots", ")", "Ċ", "ĉ", "ĉ", "return", ";", "ĊĊ", "ĉ", "p", "D", "ots", "[", "number", "Of", "D", "ots", "].", "set", "Co", "ord", "in", "at", "(", "x", ",", "Ġy", ");", "ĊĊ", "ĉ", "number", "Of", "D", "ots", "++;", "Ċ", "}"], "dataflow_graph": [["pDots", 9, "comesFrom", ["pDots"], [5]], ["pDots", 22, "comesFrom", ["pDots"], [12]], ["pDots", 35, "comesFrom", ["pDots"], [12]], ["drawShape", 15, "comesFrom", ["drawShape"], [1]], ["color", 16, "comesFrom", ["color"], [6]], ["i", 19, "comesFrom", ["i"], [18]], ["i", 21, "comesFrom", ["i"], [18]], ["i", 23, "comesFrom", ["i"], [18]], ["numberOfDots", 20, "comesFrom", ["numberOfDots"], [11]], ["numberOfDots", 33, "comesFrom", ["numberOfDots"], [11]], ["numberOfDots", 36, "comesFrom", ["numberOfDots"], [11]], ["numberOfDots", 40, "comesFrom", ["numberOfDots"], [11]], ["c", 29, "comesFrom", ["c"], [27]], ["maxDots", 34, "comesFrom", ["maxDots"], [10]], ["x", 38, "comesFrom", ["x"], [31]], ["y", 39, "comesFrom", ["y"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::422", "code": "#ifndef WAVE_BIAS_PRIOR_HPP\n#define WAVE_BIAS_PRIOR_HPP\n\n#include <gtsam/nonlinear/NonlinearFactor.h>\n\nnamespace wave {\n\ntemplate <class T>\nclass BiasPrior : public gtsam::NoiseModelFactor1<T> {\n private:\n    Eigen::Matrix<double, 3, 1> prior;\n\n public:\n    BiasPrior(gtsam::Key key,\n              Eigen::Matrix<double, 3, 1> m,\n              const gtsam::SharedNoiseModel &model)\n        : gtsam::NoiseModelFactor1<T>::NoiseModelFactor1(model, key),\n          prior(m) {}\n\n    gtsam::Vector evaluateError(\n      const T &m, boost::optional<gtsam::Matrix &> H = boost::none) const;\n};\n}\n\n#include \"wave/gtsam/impl/bias_prior_impl.hpp\"\n\n#endif  // WAVE_BIAS_PRIOR_HPP\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠWA", "VE", "_", "BI", "AS", "_", "PR", "IOR", "_", "H", "PP", "Ċ", "#", "define", "ĠWA", "VE", "_", "BI", "AS", "_", "PR", "IOR", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "ts", "am", "/", "non", "linear", "/", "Non", "linear", "Factor", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "Ġwave", "Ġ{", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "class", "ĠB", "ias", "Prior", "Ġ:", "Ġpublic", "Ġg", "ts", "am", "::", "No", "ise", "Model", "Factor", "1", "<", "T", ">", "Ġ{", "Ċ", "Ġprivate", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠE", "igen", "::", "Matrix", "<", "double", ",", "Ġ3", ",", "Ġ1", ">", "Ġprior", ";", "ĊĊ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠB", "ias", "Prior", "(", "g", "ts", "am", "::", "Key", "Ġkey", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠE", "igen", "::", "Matrix", "<", "double", ",", "Ġ3", ",", "Ġ1", ">", "Ġm", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġg", "ts", "am", "::", "Sh", "ared", "No", "ise", "Model", "Ġ&", "model", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġg", "ts", "am", "::", "No", "ise", "Model", "Factor", "1", "<", "T", ">", "::", "No", "ise", "Model", "Factor", "1", "(", "model", ",", "Ġkey", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprior", "(", "m", ")", "Ġ{}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġg", "ts", "am", "::", "Vector", "Ġevaluate", "Error", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠT", "Ġ&", "m", ",", "Ġboost", "::", "optional", "<", "g", "ts", "am", "::", "Matrix", "Ġ&", ">", "ĠH", "Ġ=", "Ġboost", "::", "none", ")", "Ġconst", ";", "Ċ", "};", "Ċ", "}", "Ċ", "Ċ", "#", "include", "Ġ\"", "wave", "/", "g", "ts", "am", "/", "impl", "/", "b", "ias", "_", "pri", "or", "_", "impl", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠWA", "VE", "_", "BI", "AS", "_", "PR", "IOR", "_", "H", "PP", "Ċ"], "dataflow_graph": [["key", 9, "comesFrom", ["key"], [4]], ["m", 11, "comesFrom", ["m"], [5]], ["m", 13, "comesFrom", ["m"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::423", "code": "#include <Source/Headers.h>\n\n#include <Source/TextDoc.h>\n#include <Source/TokenizedFile.h>\n\nvoid parseTextDoc(const TextDoc& doc);\n\n// ============================================================================\nint main(int argc, char* argv[])\n{\n  if (argc != 2) {\n    return -1;\n  }\n  \n  TextDoc doc = loadTextDoc(argv[1]);\n\n  parseTextDoc(doc);\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Source", "/", "Head", "ers", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Source", "/", "Text", "Doc", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Source", "/", "Token", "ized", "File", ".", "h", ">", "Ċ", "Ċ", "void", "Ġparse", "Text", "Doc", "(", "const", "ĠText", "Doc", "&", "Ġdoc", ");", "Ċ", "Ċ", "//", "Ġ=================================================================", "========", "===", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ!=", "Ġ2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "ĠText", "Doc", "Ġdoc", "Ġ=", "Ġload", "Text", "Doc", "(", "arg", "v", "[", "1", "]);", "ĊĊ", "Ġ", "Ġparse", "Text", "Doc", "(", "doc", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["doc", 10, "comesFrom", ["doc"], [6]], ["argc", 5, "comesFrom", ["argc"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::424", "code": "/*\n  Detect loop in a linked list \n  List could be empty also\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/\nint HasCycle(Node* head)\n{\n    if (!head)\n        return 0;\n    \n    Node *p = head, *q = head->next;\n    while (p && q)\n        if (p == q)\n            return 1;\n        else {\n            p = p->next;\n            q = q->next ? q->next->next : q->next;\n        }\n    \n    return 0;\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "ĠDetect", "Ġloop", "Ġin", "Ġa", "Ġlinked", "Ġlist", "Ġ", "Ċ", "Ġ", "ĠList", "Ġcould", "Ġbe", "Ġempty", "Ġalso", "Ċ", "Ġ", "ĠNode", "Ġis", "Ġdefined", "Ġas", "Ġ", "Ċ", "Ġ", "Ġstruct", "ĠNode", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġdata", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstruct", "ĠNode", "Ġ*", "next", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "*/", "Ċ", "int", "ĠHas", "Cy", "cle", "(", "Node", "*", "Ġhead", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "head", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNode", "Ġ*", "p", "Ġ=", "Ġhead", ",", "Ġ*", "q", "Ġ=", "Ġhead", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "p", "Ġ&&", "Ġq", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "p", "Ġ==", "Ġq", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "Ġ=", "Ġp", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", "Ġ=", "Ġq", "->", "next", "Ġ?", "Ġq", "->", "next", "->", "next", "Ġ:", "Ġq", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["head", 6, "comesFrom", ["head"], [4]], ["p", 13, "comesFrom", ["p"], [12]], ["q", 16, "comesFrom", ["q"], [15]], ["q", 18, "comesFrom", ["q"], [15]], ["q", 21, "comesFrom", ["q"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::425", "code": "#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nint main(){\n\n\tifstream f(\"problema_vectori_pr1.in\");\n\tofstream g(\"problema_vectori_pr1.out\");\n\n\tint n;\n\tf >> n;\n\tint arr[n];\n\tfor(int i=0;i<n;i++){\n\t\tf >> arr[i];\n\t}\n\tint x=3,max=0,premii=0;\n\twhile(x){\n\t\tmax=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(arr[i]>max)\n\t\t\t\tmax=arr[i];\n\t\t}\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(arr[i]==max){\n\t\t\t\tpremii++;\n\t\t\t\tarr[i]=-11;\n\t\t\t}\n\t\t}\n\t\tx--;\n\t}\n\tg << premii;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "ĊĊ", "ĉ", "if", "stream", "Ġf", "(\"", "pro", "ble", "ma", "_", "vector", "i", "_", "pr", "1", ".", "in", "\");", "Ċ", "ĉ", "of", "stream", "Ġg", "(\"", "pro", "ble", "ma", "_", "vector", "i", "_", "pr", "1", ".", "out", "\");", "ĊĊ", "ĉ", "int", "Ġn", ";", "Ċ", "ĉ", "f", "Ġ>>", "Ġn", ";", "Ċ", "ĉ", "int", "Ġarr", "[", "n", "];", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "f", "Ġ>>", "Ġarr", "[", "i", "];", "Ċ", "ĉ", "}", "Ċ", "ĉ", "int", "Ġx", "=", "3", ",", "max", "=", "0", ",", "prem", "ii", "=", "0", ";", "Ċ", "ĉ", "while", "(", "x", "){", "Ċ", "ĉ", "ĉ", "max", "=", "0", ";", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "arr", "[", "i", "]", ">", "max", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "max", "=", "arr", "[", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "arr", "[", "i", "]", "==", "max", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "prem", "ii", "++;", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "arr", "[", "i", "]", "=-", "11", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "x", "--", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "g", "Ġ<<", "Ġprem", "ii", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["f", 5, "comesFrom", ["f"], [2]], ["f", 13, "comesFrom", ["f"], [2]], ["n", 6, "comesFrom", ["n"], [4]], ["n", 8, "comesFrom", ["n"], [4]], ["n", 11, "comesFrom", ["n"], [4]], ["n", 23, "comesFrom", ["n"], [4]], ["n", 33, "comesFrom", ["n"], [4]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]], ["i", 22, "comesFrom", ["i"], [21]], ["i", 24, "comesFrom", ["i"], [21]], ["i", 26, "comesFrom", ["i"], [21]], ["i", 30, "comesFrom", ["i"], [21]], ["i", 32, "comesFrom", ["i"], [31]], ["i", 34, "comesFrom", ["i"], [31]], ["i", 36, "comesFrom", ["i"], [31]], ["i", 40, "comesFrom", ["i"], [31]], ["x", 19, "comesFrom", ["x"], [16]], ["x", 41, "comesFrom", ["x"], [16]], ["max", 27, "comesFrom", ["max"], [20]], ["max", 37, "comesFrom", ["max"], [28]], ["premii", 38, "comesFrom", ["premii"], [18]], ["premii", 43, "comesFrom", ["premii"], [18]], ["g", 42, "comesFrom", ["g"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::426", "code": "#ifndef __FLYMATH_HPP\n#define __FLYMATH_HPP\n\n#include \"flydef.hpp\"\n#include <cmath>\n\n#ifndef M_PI\n#define M_PI    3.14159265358979323846264338327950288   /* pi */\n#endif\n\ntemplate<class type_a>\ninline type_a Frac(type_a a)\n{\n\treturn a - floor(a);\n}\n\n\ninline r_t Zoom(r_t x, r_t x0, r_t x1, r_t y0, r_t y1)\n{\n\treturn (x - x0)/(x1 - x0)*(y1 - y0) + y0;\n}\n\ninline r_t Zoom(r_t x, r_t y0, r_t y1) { return Zoom(x, 0, 1, y0, y1); }\n\ninline r_t Sin(r_t a)\n{\n\treturn sin(a/180.0*M_PI);\n}\n\ninline r_t Cos(r_t a)\n{\n\treturn cos(a/180.0*M_PI);\n}\n\ninline r_t Tan(r_t a)\n{\n\treturn tan(a/180.0*M_PI);\n}\n\ninline r_t Arcsin(r_t a)\n{\n\treturn asin(a)/M_PI*180;\n}\n\ninline r_t Arccos(r_t a)\n{\n\treturn acos(a)/M_PI*180;\n}\n\ninline r_t Arctan(r_t a)\n{\n\treturn atan(a)/M_PI*180;\n}\n\n\n#endif", "code_tokens": ["Ġ#", "if", "nd", "ef", "Ġ__", "FL", "Y", "M", "ATH", "_", "H", "PP", "Ċ", "#", "define", "Ġ__", "FL", "Y", "M", "ATH", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ\"", "fly", "def", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠM", "_", "PI", "Ċ", "#", "define", "ĠM", "_", "PI", "Ġ", "Ġ", "Ġ", "Ġ3", ".", "14", "159", "265", "35", "89", "793", "238", "46", "264", "33", "83", "279", "50", "288", "Ġ", "Ġ", "Ġ/*", "Ġpi", "Ġ*/", "Ċ", "#", "endif", "Ċ", "Ċ", "template", "<", "class", "Ġtype", "_", "a", ">", "Ċ", "inline", "Ġtype", "_", "a", "ĠFr", "ac", "(", "type", "_", "a", "Ġa", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġa", "Ġ-", "Ġfloor", "(", "a", ");", "Ċ", "}", "ĊĊ", "Ċ", "inline", "Ġr", "_", "t", "ĠZoom", "(", "r", "_", "t", "Ġx", ",", "Ġr", "_", "t", "Ġx", "0", ",", "Ġr", "_", "t", "Ġx", "1", ",", "Ġr", "_", "t", "Ġy", "0", ",", "Ġr", "_", "t", "Ġy", "1", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ(", "x", "Ġ-", "Ġx", "0", ")/", "(", "x", "1", "Ġ-", "Ġx", "0", ")*", "(", "y", "1", "Ġ-", "Ġy", "0", ")", "Ġ+", "Ġy", "0", ";", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġr", "_", "t", "ĠZoom", "(", "r", "_", "t", "Ġx", ",", "Ġr", "_", "t", "Ġy", "0", ",", "Ġr", "_", "t", "Ġy", "1", ")", "Ġ{", "Ġreturn", "ĠZoom", "(", "x", ",", "Ġ0", ",", "Ġ1", ",", "Ġy", "0", ",", "Ġy", "1", ");", "Ġ}", "Ċ", "Ċ", "inline", "Ġr", "_", "t", "ĠSin", "(", "r", "_", "t", "Ġa", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġsin", "(", "a", "/", "180", ".", "0", "*", "M", "_", "PI", ");", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġr", "_", "t", "ĠCos", "(", "r", "_", "t", "Ġa", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġcos", "(", "a", "/", "180", ".", "0", "*", "M", "_", "PI", ");", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġr", "_", "t", "ĠTan", "(", "r", "_", "t", "Ġa", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġtan", "(", "a", "/", "180", ".", "0", "*", "M", "_", "PI", ");", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġr", "_", "t", "ĠAr", "cs", "in", "(", "r", "_", "t", "Ġa", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġas", "in", "(", "a", ")/", "M", "_", "PI", "*", "180", ";", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġr", "_", "t", "ĠAr", "cc", "os", "(", "r", "_", "t", "Ġa", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġac", "os", "(", "a", ")/", "M", "_", "PI", "*", "180", ";", "Ċ", "}", "Ċ", "Ċ", "inline", "Ġr", "_", "t", "ĠAr", "ct", "an", "(", "r", "_", "t", "Ġa", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġat", "an", "(", "a", ")/", "M", "_", "PI", "*", "180", ";", "Ċ", "}", "ĊĊ", "Ċ", "#", "endif"], "dataflow_graph": [["a", 6, "comesFrom", ["a"], [5]], ["a", 8, "comesFrom", ["a"], [5]], ["a", 33, "comesFrom", ["a"], [31]], ["a", 38, "comesFrom", ["a"], [36]], ["a", 43, "comesFrom", ["a"], [41]], ["a", 48, "comesFrom", ["a"], [46]], ["a", 53, "comesFrom", ["a"], [51]], ["a", 58, "comesFrom", ["a"], [56]], ["x", 15, "comesFrom", ["x"], [10]], ["x", 27, "comesFrom", ["x"], [23]], ["x0", 16, "comesFrom", ["x0"], [11]], ["x0", 18, "comesFrom", ["x0"], [11]], ["x1", 17, "comesFrom", ["x1"], [12]], ["y1", 19, "comesFrom", ["y1"], [14]], ["y1", 29, "comesFrom", ["y1"], [25]], ["y0", 20, "comesFrom", ["y0"], [13]], ["y0", 21, "comesFrom", ["y0"], [13]], ["y0", 28, "comesFrom", ["y0"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::427", "code": "#include \"Runtime/MP1/CFrontEndUITouchBar.hpp\"\n\nnamespace metaforce {\n\nCFrontEndUITouchBar::~CFrontEndUITouchBar() = default;\nvoid CFrontEndUITouchBar::SetPhase(EPhase ph) { m_phase = ph; }\nCFrontEndUITouchBar::EPhase CFrontEndUITouchBar::GetPhase() { return m_phase; }\nvoid CFrontEndUITouchBar::SetFileSelectPhase(const SFileSelectDetail details[3], bool eraseGame, bool galleryActive) {\n  m_phase = EPhase::FileSelect;\n}\nvoid CFrontEndUITouchBar::SetNoCardSelectPhase(bool galleryActive) { m_phase = EPhase::NoCardSelect; }\nvoid CFrontEndUITouchBar::SetFusionBonusPhase(bool fusionSuitActive) { m_phase = EPhase::FusionBonus; }\nvoid CFrontEndUITouchBar::SetStartOptionsPhase(bool normalBeat) { m_phase = EPhase::StartOptions; }\nCFrontEndUITouchBar::EAction CFrontEndUITouchBar::PopAction() { return EAction::None; }\n\n#ifndef __APPLE__\nstd::unique_ptr<CFrontEndUITouchBar> NewFrontEndUITouchBar() { return std::make_unique<CFrontEndUITouchBar>(); }\n#endif\n\n} // namespace metaforce\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Runtime", "/", "MP", "1", "/", "CF", "ront", "End", "U", "IT", "ouch", "Bar", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġmeta", "force", "Ġ{", "Ċ", "Ċ", "CF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "~", "CF", "ront", "End", "U", "IT", "ouch", "Bar", "()", "Ġ=", "Ġdefault", ";", "Ċ", "void", "ĠCF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "Set", "Phase", "(", "E", "Phase", "Ġph", ")", "Ġ{", "Ġm", "_", "phase", "Ġ=", "Ġph", ";", "Ġ}", "Ċ", "CF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "E", "Phase", "ĠCF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "Get", "Phase", "()", "Ġ{", "Ġreturn", "Ġm", "_", "phase", ";", "Ġ}", "Ċ", "void", "ĠCF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "Set", "File", "Select", "Phase", "(", "const", "ĠS", "File", "Select", "Det", "ail", "Ġdetails", "[", "3", "],", "Ġbool", "Ġerase", "Game", ",", "Ġbool", "Ġgallery", "Active", ")", "Ġ{", "Ċ", "Ġ", "Ġm", "_", "phase", "Ġ=", "ĠE", "Phase", "::", "File", "Select", ";", "Ċ", "}", "Ċ", "void", "ĠCF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "Set", "No", "Card", "Select", "Phase", "(", "bool", "Ġgallery", "Active", ")", "Ġ{", "Ġm", "_", "phase", "Ġ=", "ĠE", "Phase", "::", "No", "Card", "Select", ";", "Ġ}", "Ċ", "void", "ĠCF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "Set", "F", "usion", "Bonus", "Phase", "(", "bool", "Ġfusion", "S", "uit", "Active", ")", "Ġ{", "Ġm", "_", "phase", "Ġ=", "ĠE", "Phase", "::", "F", "usion", "Bonus", ";", "Ġ}", "Ċ", "void", "ĠCF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "Set", "Start", "Options", "Phase", "(", "bool", "Ġnormal", "Beat", ")", "Ġ{", "Ġm", "_", "phase", "Ġ=", "ĠE", "Phase", "::", "Start", "Options", ";", "Ġ}", "Ċ", "CF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "E", "Action", "ĠCF", "ront", "End", "U", "IT", "ouch", "Bar", "::", "Pop", "Action", "()", "Ġ{", "Ġreturn", "ĠE", "Action", "::", "None", ";", "Ġ}", "Ċ", "Ċ", "#", "if", "nd", "ef", "Ġ__", "AP", "PLE", "__", "Ċ", "std", "::", "unique", "_", "ptr", "<", "CF", "ront", "End", "U", "IT", "ouch", "Bar", ">", "ĠNew", "Front", "End", "U", "IT", "ouch", "Bar", "()", "Ġ{", "Ġreturn", "Ġstd", "::", "make", "_", "unique", "<", "CF", "ront", "End", "U", "IT", "ouch", "Bar", ">", "();", "Ġ}", "Ċ", "#", "endif", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġmeta", "force", "Ċ"], "dataflow_graph": [["ph", 4, "comesFrom", ["ph"], [2]], ["m_phase", 6, "comesFrom", ["m_phase"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::428", "code": "#include \"precomp.h\"\n\n#include \"dte_model_decorator.h\"\n#include \"ml_model_impl.h\"\n#include \"models_interface.h\"\n\nnamespace lib_models {\nModelsInterface& ModelsInterface::GetInstance() {\n  static ModelsInterface instance;\n  return instance;\n}\n\nsp<MlModel> ModelsInterface::CreateModel(sp<MlModelDecorator> decorator) {\n  return std::make_shared<MlModelImpl>(decorator);\n}\n\ntemplate <typename T>\nsp<lib_models::MlModelDecorator> ModelsInterface::CreateDteModelDecorator() {\n  return std::make_shared<DteModelDecorator<T>>();\n}\n\ntemplate DLLExport sp<lib_models::MlModelDecorator>\nModelsInterface::CreateDteModelDecorator<float>();\ntemplate DLLExport sp<lib_models::MlModelDecorator>\nModelsInterface::CreateDteModelDecorator<double>();\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "pre", "comp", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "d", "te", "_", "model", "_", "dec", "or", "ator", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ml", "_", "model", "_", "impl", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "models", "_", "interface", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġlib", "_", "models", "Ġ{", "Ċ", "Mod", "els", "Interface", "&", "ĠModels", "Interface", "::", "Get", "Instance", "()", "Ġ{", "Ċ", "Ġ", "Ġstatic", "ĠModels", "Interface", "Ġinstance", ";", "Ċ", "Ġ", "Ġreturn", "Ġinstance", ";", "Ċ", "}", "Ċ", "Ċ", "sp", "<", "M", "l", "Model", ">", "ĠModels", "Interface", "::", "Create", "Model", "(", "sp", "<", "M", "l", "Model", "Dec", "or", "ator", ">", "Ġdecor", "ator", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġstd", "::", "make", "_", "shared", "<", "M", "l", "Model", "Impl", ">(", "dec", "or", "ator", ");", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "sp", "<", "lib", "_", "models", "::", "M", "l", "Model", "Dec", "or", "ator", ">", "ĠModels", "Interface", "::", "Create", "D", "te", "Model", "Dec", "or", "ator", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġstd", "::", "make", "_", "shared", "<", "D", "te", "Model", "Dec", "or", "ator", "<", "T", ">>", "();", "Ċ", "}", "Ċ", "Ċ", "template", "ĠDL", "LE", "x", "port", "Ġsp", "<", "lib", "_", "models", "::", "M", "l", "Model", "Dec", "or", "ator", ">", "Ċ", "Mod", "els", "Interface", "::", "Create", "D", "te", "Model", "Dec", "or", "ator", "<", "float", ">", "();", "Ċ", "template", "ĠDL", "LE", "x", "port", "Ġsp", "<", "lib", "_", "models", "::", "M", "l", "Model", "Dec", "or", "ator", ">", "Ċ", "Mod", "els", "Interface", "::", "Create", "D", "te", "Model", "Dec", "or", "ator", "<", "double", ">", "();", "Ċ", "}"], "dataflow_graph": [["instance", 2, "comesFrom", ["instance"], [1]], ["decorator", 6, "comesFrom", ["decorator"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::429", "code": "#include<vector>\n\nusing namespace std;\n\n\nclass Solution {\npublic:\n    void sortColors(vector<int>& nums) {\n        int left_ptr = 0;\n        int right_ptr = nums.size() - 1;\n\n        int next = 0;\n        while(next <= right_ptr) {\n            if (nums[next] == 0) {\n                int tmp = nums[next];\n                nums[next] = nums[left_ptr];\n                nums[left_ptr] = tmp;\n                left_ptr += 1;\n            } else if (nums[next] == 2) {\n                int tmp = nums[next];\n                nums[next] = nums[right_ptr];\n                nums[right_ptr] = tmp;\n                right_ptr--;\n                next--;\n            }\n            next += 1;\n\n        }\n\n\n    }\n};\n\n\nint main() {\n    Solution s;\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġsort", "Col", "ors", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġleft", "_", "ptr", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġright", "_", "ptr", "Ġ=", "Ġnum", "s", ".", "size", "()", "Ġ-", "Ġ1", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġnext", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "next", "Ġ<=", "Ġright", "_", "ptr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "ums", "[", "next", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtmp", "Ġ=", "Ġnum", "s", "[", "next", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnum", "s", "[", "next", "]", "Ġ=", "Ġnum", "s", "[", "left", "_", "ptr", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnum", "s", "[", "left", "_", "ptr", "]", "Ġ=", "Ġtmp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġleft", "_", "ptr", "Ġ+=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "n", "ums", "[", "next", "]", "Ġ==", "Ġ2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtmp", "Ġ=", "Ġnum", "s", "[", "next", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnum", "s", "[", "next", "]", "Ġ=", "Ġnum", "s", "[", "right", "_", "ptr", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnum", "s", "[", "right", "_", "ptr", "]", "Ġ=", "Ġtmp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġright", "_", "ptr", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnext", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnext", "Ġ+=", "Ġ1", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSolution", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["next", 8, "comesFrom", ["next"], [7]], ["next", 11, "comesFrom", ["next"], [7]], ["next", 14, "comesFrom", ["next"], [7]], ["next", 16, "comesFrom", ["next"], [7]], ["next", 24, "comesFrom", ["next"], [7]], ["next", 27, "comesFrom", ["next"], [7]], ["next", 29, "comesFrom", ["next"], [7]], ["next", 36, "comesFrom", ["next"], [7]], ["right_ptr", 9, "comesFrom", ["right_ptr"], [4]], ["right_ptr", 31, "comesFrom", ["right_ptr"], [4]], ["right_ptr", 33, "comesFrom", ["right_ptr"], [4]], ["right_ptr", 35, "comesFrom", ["right_ptr"], [4]], ["left_ptr", 18, "comesFrom", ["left_ptr"], [3]], ["left_ptr", 20, "comesFrom", ["left_ptr"], [3]], ["tmp", 21, "comesFrom", ["tmp"], [12]], ["tmp", 34, "comesFrom", ["tmp"], [25]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::430", "code": "\n#include <kcharsets.h>\n#include <kdebug.h>\n#include <QtCore/QString>\n\n#include <assert.h>\n\nint main()\n{\n    // Note: ctest sets LANG=C, while running the test directly uses your real $LANG.\n    // And since the static initializer runs before main, we cannot setenv(\"LANG\") here,\n    // it's too late.\n    //kDebug() << \"LANG=\" << getenv(\"LANG\");\n    //kDebug() << \"LC_ALL=\" << getenv(\"LC_ALL\");\n\n    // Test that toLocal8Bit works even without a QCoreApplication,\n    // thanks to the static initializer in KCatalog.\n    // Do NOT move this code to a QTestLib unit test ;-)\n    QString one = QString::fromUtf8(\"é\");\n    QByteArray one8bit = one.toLocal8Bit();\n    if (qgetenv(\"LANG\").endsWith(\"UTF-8\")) { // krazy:exclude=strings\n        kDebug() << one << one8bit;\n        Q_ASSERT(one8bit.length() == 2);\n    }\n\n    QString input( \"&lt;Hello &amp;World&gt;\" );\n    QString output = KCharsets::resolveEntities( input );\n    assert( output == \"<Hello &World>\" );\n    return 0;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "k", "ch", "ars", "ets", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "k", "debug", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Q", "t", "Core", "/", "Q", "String", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠNote", ":", "Ġc", "test", "Ġsets", "ĠL", "ANG", "=", "C", ",", "Ġwhile", "Ġrunning", "Ġthe", "Ġtest", "Ġdirectly", "Ġuses", "Ġyour", "Ġreal", "Ġ$", "L", "ANG", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠAnd", "Ġsince", "Ġthe", "Ġstatic", "Ġinitial", "izer", "Ġruns", "Ġbefore", "Ġmain", ",", "Ġwe", "Ġcannot", "Ġset", "env", "(\"", "L", "ANG", "\")", "Ġhere", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġit", "'s", "Ġtoo", "Ġlate", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "k", "Debug", "()", "Ġ<<", "Ġ\"", "L", "ANG", "=\"", "Ġ<<", "Ġget", "env", "(\"", "L", "ANG", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "k", "Debug", "()", "Ġ<<", "Ġ\"", "LC", "_", "ALL", "=\"", "Ġ<<", "Ġget", "env", "(\"", "LC", "_", "ALL", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠTest", "Ġthat", "Ġto", "Local", "8", "Bit", "Ġworks", "Ġeven", "Ġwithout", "Ġa", "ĠQ", "Core", "Application", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġthanks", "Ġto", "Ġthe", "Ġstatic", "Ġinitial", "izer", "Ġin", "ĠKC", "atal", "og", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠDo", "ĠNOT", "Ġmove", "Ġthis", "Ġcode", "Ġto", "Ġa", "ĠQ", "Test", "Lib", "Ġunit", "Ġtest", "Ġ;", "-)", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "String", "Ġone", "Ġ=", "ĠQ", "String", "::", "from", "Ut", "f", "8", "(\"", "Ã©", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Byte", "Array", "Ġone", "8", "bit", "Ġ=", "Ġone", ".", "to", "Local", "8", "Bit", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "q", "get", "env", "(\"", "L", "ANG", "\").", "ends", "With", "(\"", "UTF", "-", "8", "\"))", "Ġ{", "Ġ//", "Ġk", "razy", ":", "ex", "clude", "=", "strings", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġk", "Debug", "()", "Ġ<<", "Ġone", "Ġ<<", "Ġone", "8", "bit", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "ASS", "ERT", "(", "one", "8", "bit", ".", "length", "()", "Ġ==", "Ġ2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "String", "Ġinput", "(", "Ġ\"", "&", "lt", ";", "Hello", "Ġ&", "amp", ";", "World", "&", "gt", ";\"", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "String", "Ġoutput", "Ġ=", "ĠK", "Ch", "ars", "ets", "::", "res", "olve", "Ent", "ities", "(", "Ġinput", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "Ġoutput", "Ġ==", "Ġ\"<", "Hello", "Ġ&", "World", ">\"", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["one", 4, "comesFrom", ["one"], [1]], ["one", 9, "comesFrom", ["one"], [1]], ["one8bit", 10, "comesFrom", ["one8bit"], [3]], ["one8bit", 12, "comesFrom", ["one8bit"], [3]], ["input", 17, "comesFrom", ["input"], [14]], ["output", 19, "comesFrom", ["output"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::431", "code": "#include \"mainwindow.h\"\n#include <QApplication>\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    MainWindow w;\n    w.setWindowTitle(\"CLine Editor\");\n    w.show();\n    \n    return a.exec();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "main", "window", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Application", "Ġa", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMain", "Window", "Ġw", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġw", ".", "set", "Window", "Title", "(\"", "CL", "ine", "ĠEditor", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġw", ".", "show", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["w", 5, "comesFrom", ["w"], [4]], ["w", 7, "comesFrom", ["w"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::432", "code": "#include <iostream>\n#include <string>\n#include <cstdlib>\nusing namespace std;\n\nint main()\n{\n  string s1;\n  int x;\n  \n  cout << \"\\n Enter something:  \";\n  cin >> s1;\n  cout << atoi(s1.c_str());\n  cout << endl;\n  \n  return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstring", "Ġs", "1", ";", "Ċ", "Ġ", "Ġint", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"\\", "n", "ĠEnter", "Ġsomething", ":", "Ġ", "Ġ\"", ";", "Ċ", "Ġ", "Ġc", "in", "Ġ>>", "Ġs", "1", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġat", "oi", "(", "s", "1", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["s1", 6, "comesFrom", ["s1"], [2]], ["s1", 9, "comesFrom", ["s1"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::433", "code": "// Copyright 2017 Dolphin Emulator Project\n// Licensed under GPLv2+\n// Refer to the license.txt file included.\n\n#include \"InputCommon/ControllerEmu/Setting/BooleanSetting.h\"\n\nnamespace ControllerEmu\n{\nBooleanSetting::BooleanSetting(const std::string& setting_name, const std::string& ui_name,\n\tconst bool default_value, const SettingType setting_type)\n\t: m_type(setting_type), m_name(setting_name), m_ui_name(ui_name),\n\tm_default_value(default_value), m_value(default_value)\n{\n}\n\nBooleanSetting::BooleanSetting(const std::string& setting_name, const bool default_value,\n\tconst SettingType setting_type)\n\t: BooleanSetting(setting_name, setting_name, default_value, setting_type)\n{\n}\n\nbool BooleanSetting::GetValue() const\n{\n\treturn m_value;\n}\nvoid BooleanSetting::SetValue(bool value)\n{\n\tm_value = value;\n}\n\n}  // namespace ControllerEmu\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2017", "ĠDolphin", "ĠEm", "ulator", "ĠProject", "Ċ", "//", "ĠLicensed", "Ġunder", "ĠGPL", "v", "2", "+", "Ċ", "//", "ĠRefer", "Ġto", "Ġthe", "Ġlicense", ".", "txt", "Ġfile", "Ġincluded", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "Input", "Common", "/", "Controller", "Em", "u", "/", "Setting", "/", "Boo", "lean", "Setting", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠController", "Em", "u", "Ċ", "{", "Ċ", "Boo", "lean", "Setting", "::", "Boo", "lean", "Setting", "(", "const", "Ġstd", "::", "string", "&", "Ġsetting", "_", "name", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġu", "i", "_", "name", ",", "Ċ", "ĉ", "const", "Ġbool", "Ġdefault", "_", "value", ",", "Ġconst", "ĠSetting", "Type", "Ġsetting", "_", "type", ")", "Ċ", "ĉ", ":", "Ġm", "_", "type", "(", "setting", "_", "type", "),", "Ġm", "_", "name", "(", "setting", "_", "name", "),", "Ġm", "_", "ui", "_", "name", "(", "ui", "_", "name", "),", "Ċ", "ĉ", "m", "_", "default", "_", "value", "(", "default", "_", "value", "),", "Ġm", "_", "value", "(", "default", "_", "value", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Boo", "lean", "Setting", "::", "Boo", "lean", "Setting", "(", "const", "Ġstd", "::", "string", "&", "Ġsetting", "_", "name", ",", "Ġconst", "Ġbool", "Ġdefault", "_", "value", ",", "Ċ", "ĉ", "const", "ĠSetting", "Type", "Ġsetting", "_", "type", ")", "Ċ", "ĉ", ":", "ĠBoolean", "Setting", "(", "setting", "_", "name", ",", "Ġsetting", "_", "name", ",", "Ġdefault", "_", "value", ",", "Ġsetting", "_", "type", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠBoolean", "Setting", "::", "Get", "Value", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġm", "_", "value", ";", "Ċ", "}", "Ċ", "void", "ĠBoolean", "Setting", "::", "Set", "Value", "(", "bool", "Ġvalue", ")", "Ċ", "{", "Ċ", "ĉ", "m", "_", "value", "Ġ=", "Ġvalue", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "ĠController", "Em", "u", "Ċ"], "dataflow_graph": [["setting_type", 6, "comesFrom", ["setting_type"], [4]], ["setting_type", 23, "comesFrom", ["setting_type"], [18]], ["default_value", 12, "comesFrom", ["default_value"], [3]], ["default_value", 14, "comesFrom", ["default_value"], [3]], ["default_value", 22, "comesFrom", ["default_value"], [17]], ["value", 29, "comesFrom", ["value"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::434", "code": "#include <iostream>\n\n#include \"series.h\"\n\nint solve(int p);\n\n#ifndef TESTING\nint main () {\n  int p;\n  std::cin >> p;\n  std::cout << solve(p) << std::endl;\n}\n#endif\n\nint solve(int p) {\n  int su = sum_naturals(p);\n  int suosq = sum_squares(p);\n  return su * su - suosq;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "series", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġsolve", "(", "int", "Ġp", ");", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠTEST", "ING", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġp", ";", "Ċ", "Ġ", "Ġstd", "::", "cin", "Ġ>>", "Ġp", ";", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġsolve", "(", "p", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "#", "endif", "Ċ", "Ċ", "int", "Ġsolve", "(", "int", "Ġp", ")", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġsu", "Ġ=", "Ġsum", "_", "n", "atur", "als", "(", "p", ");", "Ċ", "Ġ", "Ġint", "Ġsu", "os", "q", "Ġ=", "Ġsum", "_", "squ", "ares", "(", "p", ");", "Ċ", "Ġ", "Ġreturn", "Ġsu", "Ġ*", "Ġsu", "Ġ-", "Ġsu", "os", "q", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["p", 6, "comesFrom", ["p"], [4]], ["p", 9, "comesFrom", ["p"], [4]], ["p", 15, "comesFrom", ["p"], [12]], ["p", 18, "comesFrom", ["p"], [12]], ["su", 19, "comesFrom", ["su"], [13]], ["su", 20, "comesFrom", ["su"], [13]], ["suosq", 21, "comesFrom", ["suosq"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::435", "code": "#include <iostream>\r\nusing namespace std;\r\nint v,n,m,w[31];\r\nvoid dfs(int c, int w1)\r\n{\r\n    if(w1>v) return;\r\n    if(v-w1<m) m=v-w1;\r\n    if(m==0) return;\r\n    for(w1+=w[c];c<n;c++)\r\n        dfs(c+1,w1);\r\n}\r\nint main()\r\n{\r\n\tcin>>v>>n;m=v;\r\n\tfor(int i = 0; i < n; i++) cin>>w[i];\r\n    dfs(0,0);\r\n    cout<<m<<endl;\r\n    return 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "int", "Ġv", ",", "n", ",", "m", ",", "w", "[", "31", "];", "č", "Ċ", "void", "Ġd", "fs", "(", "int", "Ġc", ",", "Ġint", "Ġw", "1", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "w", "1", ">", "v", ")", "Ġreturn", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "v", "-", "w", "1", "<", "m", ")", "Ġm", "=", "v", "-", "w", "1", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "==", "0", ")", "Ġreturn", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "w", "1", "+=", "w", "[", "c", "];", "c", "<", "n", ";", "c", "++)", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "fs", "(", "c", "+", "1", ",", "w", "1", ");", "č", "Ċ", "}", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "cin", ">>", "v", ">>", "n", ";", "m", "=", "v", ";", "č", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġc", "in", ">>", "w", "[", "i", "];", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "fs", "(", "0", ",", "0", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "m", "<<", "end", "l", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["w1", 8, "comesFrom", ["w1"], [7]], ["w1", 11, "comesFrom", ["w1"], [7]], ["w1", 15, "comesFrom", ["w1"], [7]], ["w1", 25, "comesFrom", ["w1"], [17]], ["v", 9, "comesFrom", ["v"], [1]], ["v", 10, "comesFrom", ["v"], [1]], ["v", 14, "comesFrom", ["v"], [1]], ["v", 28, "comesFrom", ["v"], [1]], ["v", 31, "comesFrom", ["v"], [1]], ["m", 12, "comesFrom", ["m"], [3]], ["m", 16, "comesFrom", ["m"], [13]], ["m", 41, "comesFrom", ["m"], [30]], ["c", 19, "comesFrom", ["c"], [6]], ["c", 20, "comesFrom", ["c"], [6]], ["c", 22, "comesFrom", ["c"], [6]], ["c", 24, "comesFrom", ["c"], [6]], ["n", 21, "comesFrom", ["n"], [2]], ["n", 29, "comesFrom", ["n"], [2]], ["n", 34, "comesFrom", ["n"], [2]], ["i", 33, "comesFrom", ["i"], [32]], ["i", 35, "comesFrom", ["i"], [32]], ["i", 38, "comesFrom", ["i"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::436", "code": "#include <iostream>\n#include <math.h>\nusing namespace std;\nint main()\n{\n    int temp,b,n,a;\n    float aa;\n    cin >> b >>n;\n    while(b!=0&&n!=0){\n        aa=pow(b,1.0/n);\n        a=floor(aa);\n        if((pow(a+1,n)-b)>(b-pow(a,n))){\n            cout << a <<endl;\n        }\n        else{\n            cout << a+1<<endl;\n        }\n        cin >> b >>n;\n    }\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "math", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtemp", ",", "b", ",", "n", ",", "a", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġa", "a", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġb", "Ġ>>", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "b", "!", "=", "0", "&&", "n", "!", "=", "0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġa", "a", "=", "p", "ow", "(", "b", ",", "1", ".", "0", "/", "n", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġa", "=", "floor", "(", "aa", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "((", "p", "ow", "(", "a", "+", "1", ",", "n", ")-", "b", ")", ">(", "b", "-", "p", "ow", "(", "a", ",", "n", "))", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġa", "Ġ<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġa", "+", "1", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġb", "Ġ>>", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["b", 8, "comesFrom", ["b"], [3]], ["b", 10, "comesFrom", ["b"], [3]], ["b", 14, "comesFrom", ["b"], [3]], ["b", 22, "comesFrom", ["b"], [3]], ["b", 23, "comesFrom", ["b"], [3]], ["b", 34, "comesFrom", ["b"], [3]], ["n", 9, "comesFrom", ["n"], [4]], ["n", 11, "comesFrom", ["n"], [4]], ["n", 15, "comesFrom", ["n"], [4]], ["n", 21, "comesFrom", ["n"], [4]], ["n", 26, "comesFrom", ["n"], [4]], ["n", 35, "comesFrom", ["n"], [4]], ["aa", 18, "comesFrom", ["aa"], [12]], ["a", 20, "comesFrom", ["a"], [16]], ["a", 25, "comesFrom", ["a"], [16]], ["a", 28, "comesFrom", ["a"], [16]], ["a", 31, "comesFrom", ["a"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::437", "code": "#include <cstdio>\nusing namespace std;\nint a[31];\nint main()\n{\n\tfor(int i=1; i<=30; i++) {\n\t\tint in;\n\t\tscanf(\"%d\",&in);\n\t\ta[in] = 1;\n\t}\n\tfor(int i=1; i<=30; i++) \n\t\tif(!a[i]) printf(\"%d\\n\",i);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġa", "[", "31", "];", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "Ġi", "<", "=", "30", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "Ġin", ";", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "&", "in", ");", "Ċ", "ĉ", "ĉ", "a", "[", "in", "]", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "Ġi", "<", "=", "30", ";", "Ġi", "++)", "Ġ", "Ċ", "ĉ", "ĉ", "if", "(", "!", "a", "[", "i", "])", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "i", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 5, "comesFrom", ["i"], [3]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 13, "comesFrom", ["i"], [11]], ["i", 15, "comesFrom", ["i"], [11]], ["i", 17, "comesFrom", ["i"], [11]], ["in", 8, "comesFrom", ["in"], [6]], ["in", 10, "comesFrom", ["in"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::438", "code": "\n#include \"config-bits.hh\"\n\n#include <iostream>\n#include <string>\n#include <memory>\n\nusing namespace std;\n\nvoid\nlookup_test(parse_trie<string>& d, string key) {\n    auto it   = key.begin();\n    auto init = it;\n\n    try {\n        d.lookup(it);\n    } catch (...) {\n        cerr << \"FAIL\" << endl;\n        cerr << (it == init ? \"true\" : \"false\") << endl;\n    }\n\n    cerr << \"true\" << endl;\n}\n\nint \nmain() {\n    unique_ptr<parse_trie<string>> k(new parse_trie<string>());\n\n    string d_0(\"words\");\n    string d_1(\"wordsees\");\n\n    string l_0(\"words\");\n    string l_1(\"wordsees\");\n    string l_2(\"wordsee\");\n    \n    k->defval(d_0) = \"TEST0\";\n    k->defval(d_1) = \"TEST1\";\n\n    lookup_test(*k, l_0);\n    lookup_test(*k, l_1);\n    lookup_test(*k, l_2);\n\n    return 0;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "config", "-", "bits", ".", "hh", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ċ", "look", "up", "_", "test", "(", "parse", "_", "t", "rie", "<", "string", ">", "&", "Ġd", ",", "Ġstring", "Ġkey", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġit", "Ġ", "Ġ", "Ġ=", "Ġkey", ".", "begin", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġinit", "Ġ=", "Ġit", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġtry", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", ".", "look", "up", "(", "it", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġcatch", "Ġ(", "...)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "FA", "IL", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ(", "it", "Ġ==", "Ġinit", "Ġ?", "Ġ\"", "true", "\"", "Ġ:", "Ġ\"", "false", "\")", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "true", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġ", "Ċ", "main", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunique", "_", "ptr", "<", "parse", "_", "t", "rie", "<", "string", ">>", "Ġk", "(", "new", "Ġparse", "_", "t", "rie", "<", "string", ">", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġd", "_", "0", "(\"", "words", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġd", "_", "1", "(\"", "word", "se", "es", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġl", "_", "0", "(\"", "words", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġl", "_", "1", "(\"", "word", "se", "es", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġl", "_", "2", "(\"", "word", "see", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġk", "->", "def", "val", "(", "d", "_", "0", ")", "Ġ=", "Ġ\"", "T", "EST", "0", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġk", "->", "def", "val", "(", "d", "_", "1", ")", "Ġ=", "Ġ\"", "T", "EST", "1", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġlookup", "_", "test", "(*", "k", ",", "Ġl", "_", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlookup", "_", "test", "(*", "k", ",", "Ġl", "_", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlookup", "_", "test", "(*", "k", ",", "Ġl", "_", "2", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["key", 5, "comesFrom", ["key"], [3]], ["it", 11, "comesFrom", ["it"], [8]], ["it", 15, "comesFrom", ["it"], [8]], ["init", 16, "comesFrom", ["init"], [7]], ["k", 27, "comesFrom", ["k"], [21]], ["k", 30, "comesFrom", ["k"], [21]], ["k", 34, "comesFrom", ["k"], [21]], ["k", 37, "comesFrom", ["k"], [21]], ["k", 40, "comesFrom", ["k"], [21]], ["d_0", 29, "comesFrom", ["d_0"], [22]], ["d_1", 32, "comesFrom", ["d_1"], [23]], ["l_0", 35, "comesFrom", ["l_0"], [24]], ["l_1", 38, "comesFrom", ["l_1"], [25]], ["l_2", 41, "comesFrom", ["l_2"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::439", "code": "#include \"geoutil.h\"\n\ndouble getAngle(Point & a, Point & b) {\n\treturn atan2(b.y - a.y, b.x - a.x);\n}\n\nPoint getCenterOfSegmentEnd(tTrackSeg *seg) {\n\treturn getWeightedPointAtSegmentEnd(seg, 1, 1);\n}\n\ndouble getDistanceToSegmentEnd(tCarElt *car) {\n\ttTrackSeg *seg = car->_trkPos.seg;\n\tif (seg->type == TR_STR)\n\t\treturn seg->length - car->_trkPos.toStart;\n\telse\n\t\treturn (seg->arc - car->_trkPos.toStart) * seg->radius;\n}\n\nPoint getWeightedPointAtSegmentEnd(tTrackSeg *seg, double wLeft, double wRight) {\n\tdouble x = (wLeft * seg->vertex[TR_EL].x + wRight * seg->vertex[TR_ER].x) / (wLeft + wRight);\n\tdouble y = (wLeft * seg->vertex[TR_EL].y + wRight * seg->vertex[TR_ER].y) / (wLeft + wRight);\n\treturn Point(x, y);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ge", "out", "il", ".", "h", "\"", "Ċ", "Ċ", "double", "Ġget", "Ang", "le", "(", "Point", "Ġ&", "Ġa", ",", "ĠPoint", "Ġ&", "Ġb", ")", "Ġ{", "Ċ", "ĉ", "return", "Ġat", "an", "2", "(", "b", ".", "y", "Ġ-", "Ġa", ".", "y", ",", "Ġb", ".", "x", "Ġ-", "Ġa", ".", "x", ");", "Ċ", "}", "Ċ", "Ċ", "Point", "Ġget", "Center", "Of", "Seg", "ment", "End", "(", "t", "Track", "Seg", "Ġ*", "se", "g", ")", "Ġ{", "Ċ", "ĉ", "return", "Ġget", "Weight", "ed", "Point", "At", "Seg", "ment", "End", "(", "se", "g", ",", "Ġ1", ",", "Ġ1", ");", "Ċ", "}", "Ċ", "Ċ", "double", "Ġget", "Distance", "To", "Seg", "ment", "End", "(", "t", "Car", "E", "lt", "Ġ*", "car", ")", "Ġ{", "Ċ", "ĉ", "t", "Track", "Seg", "Ġ*", "se", "g", "Ġ=", "Ġcar", "->", "_", "tr", "k", "Pos", ".", "se", "g", ";", "Ċ", "ĉ", "if", "Ġ(", "se", "g", "->", "type", "Ġ==", "ĠTR", "_", "STR", ")", "Ċ", "ĉ", "ĉ", "return", "Ġse", "g", "->", "length", "Ġ-", "Ġcar", "->", "_", "tr", "k", "Pos", ".", "to", "Start", ";", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "return", "Ġ(", "se", "g", "->", "arc", "Ġ-", "Ġcar", "->", "_", "tr", "k", "Pos", ".", "to", "Start", ")", "Ġ*", "Ġse", "g", "->", "radius", ";", "Ċ", "}", "Ċ", "Ċ", "Point", "Ġget", "Weight", "ed", "Point", "At", "Seg", "ment", "End", "(", "t", "Track", "Seg", "Ġ*", "se", "g", ",", "Ġdouble", "Ġw", "Left", ",", "Ġdouble", "Ġw", "Right", ")", "Ġ{", "Ċ", "ĉ", "double", "Ġx", "Ġ=", "Ġ(", "w", "Left", "Ġ*", "Ġse", "g", "->", "ver", "tex", "[", "TR", "_", "EL", "].", "x", "Ġ+", "Ġw", "Right", "Ġ*", "Ġse", "g", "->", "ver", "tex", "[", "TR", "_", "ER", "].", "x", ")", "Ġ/", "Ġ(", "w", "Left", "Ġ+", "Ġw", "Right", ");", "Ċ", "ĉ", "double", "Ġy", "Ġ=", "Ġ(", "w", "Left", "Ġ*", "Ġse", "g", "->", "ver", "tex", "[", "TR", "_", "EL", "].", "y", "Ġ+", "Ġw", "Right", "Ġ*", "Ġse", "g", "->", "ver", "tex", "[", "TR", "_", "ER", "].", "y", ")", "Ġ/", "Ġ(", "w", "Left", "Ġ+", "Ġw", "Right", ");", "Ċ", "ĉ", "return", "ĠPoint", "(", "x", ",", "Ġy", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["y", 59, "comesFrom", ["y"], [54]], ["y", 64, "comesFrom", ["y"], [54]], ["y", 69, "comesFrom", ["y"], [54]], ["x", 46, "comesFrom", ["x"], [41]], ["x", 51, "comesFrom", ["x"], [41]], ["x", 68, "comesFrom", ["x"], [41]], ["wLeft", 42, "comesFrom", ["wLeft"], [39]], ["wLeft", 52, "comesFrom", ["wLeft"], [39]], ["wLeft", 55, "comesFrom", ["wLeft"], [39]], ["wLeft", 65, "comesFrom", ["wLeft"], [39]], ["wRight", 47, "comesFrom", ["wRight"], [40]], ["wRight", 53, "comesFrom", ["wRight"], [40]], ["wRight", 60, "comesFrom", ["wRight"], [40]], ["wRight", 66, "comesFrom", ["wRight"], [40]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::440", "code": "#include \"ExampleClusterObj.h\"\n#include \"ExampleCluster.h\"\n\nExampleClusterObj::ExampleClusterObj()\n    : ObjBase{{podio::ObjectID::untracked, podio::ObjectID::untracked}, 0},\n      data(), m_Hits(new std::vector<ConstExampleHit>()),\n      m_Clusters(new std::vector<ConstExampleCluster>()) {}\n\nExampleClusterObj::ExampleClusterObj(const podio::ObjectID id,\n                                     ExampleClusterData data)\n    : ObjBase{id, 0}, data(data) {}\n\nExampleClusterObj::ExampleClusterObj(const ExampleClusterObj &other)\n    : ObjBase{{podio::ObjectID::untracked, podio::ObjectID::untracked}, 0},\n      data(other.data),\n      m_Hits(new std::vector<ConstExampleHit>(*(other.m_Hits))),\n      m_Clusters(new std::vector<ConstExampleCluster>(*(other.m_Clusters))) {}\n\nExampleClusterObj::~ExampleClusterObj() {\n  if (id.index == podio::ObjectID::untracked) {\n    delete m_Hits;\n    delete m_Clusters;\n  }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Example", "Cl", "uster", "Obj", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Example", "Cl", "uster", ".", "h", "\"", "Ċ", "Ċ", "Example", "Cl", "uster", "Obj", "::", "Example", "Cl", "uster", "Obj", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠObj", "Base", "{{", "pod", "io", "::", "Object", "ID", "::", "un", "tr", "acked", ",", "Ġpod", "io", "::", "Object", "ID", "::", "un", "tr", "acked", "},", "Ġ0", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdata", "(),", "Ġm", "_", "H", "its", "(", "new", "Ġstd", "::", "vector", "<", "Const", "Example", "Hit", ">", "()", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Cl", "usters", "(", "new", "Ġstd", "::", "vector", "<", "Const", "Example", "Cl", "uster", ">", "())", "Ġ{}", "Ċ", "Ċ", "Example", "Cl", "uster", "Obj", "::", "Example", "Cl", "uster", "Obj", "(", "const", "Ġpod", "io", "::", "Object", "ID", "Ġid", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠExample", "Cl", "uster", "Data", "Ġdata", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠObj", "Base", "{", "id", ",", "Ġ0", "},", "Ġdata", "(", "data", ")", "Ġ{}", "Ċ", "Ċ", "Example", "Cl", "uster", "Obj", "::", "Example", "Cl", "uster", "Obj", "(", "const", "ĠExample", "Cl", "uster", "Obj", "Ġ&", "other", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠObj", "Base", "{{", "pod", "io", "::", "Object", "ID", "::", "un", "tr", "acked", ",", "Ġpod", "io", "::", "Object", "ID", "::", "un", "tr", "acked", "},", "Ġ0", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdata", "(", "other", ".", "data", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "H", "its", "(", "new", "Ġstd", "::", "vector", "<", "Const", "Example", "Hit", ">(", "*", "(", "other", ".", "m", "_", "H", "its", "))", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Cl", "usters", "(", "new", "Ġstd", "::", "vector", "<", "Const", "Example", "Cl", "uster", ">(", "*", "(", "other", ".", "m", "_", "Cl", "usters", ")))", "Ġ{}", "Ċ", "Ċ", "Example", "Cl", "uster", "Obj", "::", "~", "Example", "Cl", "uster", "Obj", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "id", ".", "index", "Ġ==", "Ġpod", "io", "::", "Object", "ID", "::", "un", "tr", "acked", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġm", "_", "H", "its", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġm", "_", "Cl", "usters", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["data", 12, "comesFrom", ["data"], [9]], ["data", 13, "comesFrom", ["data"], [9]], ["data", 19, "comesFrom", ["data"], [9]], ["data", 21, "comesFrom", ["data"], [9]], ["id", 11, "comesFrom", ["id"], [8]], ["id", 29, "comesFrom", ["id"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::441", "code": "#include <iostream>\nusing namespace std;\nint main() {\n  int a[5], b;\n  bool p = false;\n  for (int i = 0; i < 5; ++i) {\n    cin >> a[i];\n    b += a[i];\n  }\n  if ((b % 5 == 0) && (b != 0)) {\n    cout << b / 5;\n  } else {\n    cout << -1;\n  }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", "[", "5", "],", "Ġb", ";", "Ċ", "Ġ", "Ġbool", "Ġp", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ5", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġa", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "Ġ+=", "Ġa", "[", "i", "];", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ((", "b", "Ġ%", "Ġ5", "Ġ==", "Ġ0", ")", "Ġ&&", "Ġ(", "b", "Ġ!=", "Ġ0", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġb", "Ġ/", "Ġ5", ";", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 7, "comesFrom", ["i"], [5]], ["i", 10, "comesFrom", ["i"], [5]], ["i", 13, "comesFrom", ["i"], [5]], ["b", 14, "comesFrom", ["b"], [11]], ["b", 15, "comesFrom", ["b"], [11]], ["b", 17, "comesFrom", ["b"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::442", "code": "#include<cstdio>\n\ninline int calc(int n, int m){\n    int upper = (m-n)/4, lower = 0;\n    if(m > 2*n){\n        lower = m - 2*n;\n        if(lower % 3 == 0)lower /= 3;\n        else lower = lower/3 + 1;\n    }\n    return upper - lower + 1;\n}\n\nint main(){\n    int t, n, m;\n    scanf(\"%d\", &t);\n    while(t--){\n        scanf(\"%d %d\", &n, &m);\n        printf(\"%d\\n\", calc(n, m));\n    }\n}\n", "code_tokens": ["Ġ#", "include", "<", "c", "std", "io", ">", "Ċ", "Ċ", "inline", "Ġint", "Ġcalc", "(", "int", "Ġn", ",", "Ġint", "Ġm", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġupper", "Ġ=", "Ġ(", "m", "-", "n", ")/", "4", ",", "Ġlower", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "Ġ>", "Ġ2", "*", "n", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlower", "Ġ=", "Ġm", "Ġ-", "Ġ2", "*", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "lower", "Ġ%", "Ġ3", "Ġ==", "Ġ0", ")", "lower", "Ġ/", "=", "Ġ3", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġlower", "Ġ=", "Ġlower", "/", "3", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġupper", "Ġ-", "Ġlower", "Ġ+", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġt", ",", "Ġn", ",", "Ġm", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "t", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "t", "--", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "Ġ%", "d", "\",", "Ġ&", "n", ",", "Ġ&", "m", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġcalc", "(", "n", ",", "Ġm", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["m", 4, "comesFrom", ["m"], [2]], ["m", 7, "comesFrom", ["m"], [2]], ["m", 10, "comesFrom", ["m"], [2]], ["m", 27, "comesFrom", ["m"], [21]], ["m", 31, "comesFrom", ["m"], [21]], ["n", 5, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 11, "comesFrom", ["n"], [1]], ["n", 26, "comesFrom", ["n"], [20]], ["n", 30, "comesFrom", ["n"], [20]], ["lower", 12, "comesFrom", ["lower"], [9]], ["lower", 15, "comesFrom", ["lower"], [14]], ["lower", 17, "comesFrom", ["lower"], [14]], ["upper", 16, "comesFrom", ["upper"], [3]], ["t", 23, "comesFrom", ["t"], [19]], ["t", 24, "comesFrom", ["t"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::443", "code": "#include <iostream>\n#include <string.h>\n\nusing namespace std;\n\nint p[10001];\n\nint cut_rod(int n)\n{\n    int q;\n    if (n == 0)\n        return 0;\n    q = 0;\n    for (int i=1; i<=n; i++)\n    {\n        q = max(q, p[i] + cut_rod(n-i));\n    }\n    return q;\n}\n\nint main()\n{\n    int n;\n    memset(p, 0, sizeof(p));\n\n    p[0] = 0;\n    p[1] = 1;\n    p[2] = 5;\n    p[3] = 8;\n    p[4] = 9;\n    p[5] = 10;\n    p[6] = 17;\n    p[7] = 17;\n    p[8] = 20;\n    p[9] = 24;\n    p[10] = 30;\n\n    cin >> n;\n    cout << cut_rod(n);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġp", "[", "100", "01", "];", "Ċ", "Ċ", "int", "Ġcut", "_", "rod", "(", "int", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġq", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "1", ";", "Ġi", "<", "=", "n", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", "Ġ=", "Ġmax", "(", "q", ",", "Ġp", "[", "i", "]", "Ġ+", "Ġcut", "_", "rod", "(", "n", "-", "i", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġq", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmem", "set", "(", "p", ",", "Ġ0", ",", "Ġsizeof", "(", "p", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "0", "]", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "1", "]", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "2", "]", "Ġ=", "Ġ5", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "3", "]", "Ġ=", "Ġ8", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "4", "]", "Ġ=", "Ġ9", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "5", "]", "Ġ=", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "6", "]", "Ġ=", "Ġ17", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "7", "]", "Ġ=", "Ġ17", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "8", "]", "Ġ=", "Ġ20", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "9", "]", "Ġ=", "Ġ24", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "10", "]", "Ġ=", "Ġ30", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġcut", "_", "rod", "(", "n", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [3]], ["n", 9, "comesFrom", ["n"], [3]], ["n", 17, "comesFrom", ["n"], [3]], ["n", 37, "comesFrom", ["n"], [21]], ["n", 40, "comesFrom", ["n"], [21]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["i", 15, "comesFrom", ["i"], [7]], ["i", 18, "comesFrom", ["i"], [7]], ["q", 13, "comesFrom", ["q"], [11]], ["q", 19, "comesFrom", ["q"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::444", "code": "/*\nNapraviti konkurentni program koji u funkciji visina pita korisnika koliko je visok.\nNakon toga korisnik unosi svoju visinu. Na kraju u funkciji se ispisuje uneta visina.\n\nKreirati 2 niti od date funkcije. Ispratiti ispis.\n*/\n\n#include <iostream>\n#include <thread>\n\nusing namespace std;\n\n// Funkcija koa učitava visinu, a zatim je ispisuje\nvoid visina() {\n    int h;\n    cout << \"Koliko ste visoki?\" << endl;\n    cin >> h;\n    cout << \"Vasa visina je: \" << h << endl;\n}\n\nint main() {\n    // Kreiranje niti\n    thread t1(visina);\n    thread t2(visina);\n\n    // Čekanje da se niti završe\n    t1.join();\n    t2.join();\n    // Dolazi do štetnog preplitanja, zbog toga\n    // što se ne može uticati na to kad će se desiti\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Nap", "rav", "iti", "Ġk", "on", "k", "ure", "nt", "ni", "Ġprogram", "Ġk", "oji", "Ġu", "Ġfunk", "ci", "ji", "Ġvis", "ina", "Ġp", "ita", "Ġk", "oris", "n", "ika", "Ġk", "ol", "iko", "Ġje", "Ġvis", "ok", ".", "Ċ", "N", "ak", "on", "Ġto", "ga", "Ġk", "oris", "nik", "Ġun", "osi", "Ġs", "vo", "ju", "Ġvis", "in", "u", ".", "ĠNa", "Ġk", "ra", "ju", "Ġu", "Ġfunk", "ci", "ji", "Ġse", "Ġis", "p", "isu", "je", "Ġun", "eta", "Ġvis", "ina", ".", "Ċ", "Ċ", "K", "re", "ir", "ati", "Ġ2", "Ġn", "iti", "Ġod", "Ġdate", "Ġfunk", "ci", "je", ".", "ĠIs", "pr", "at", "iti", "Ġis", "p", "is", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "//", "ĠFunk", "ci", "ja", "Ġk", "oa", "Ġu", "Äį", "it", "ava", "Ġvis", "in", "u", ",", "Ġa", "Ġz", "at", "im", "Ġje", "Ġis", "p", "isu", "je", "Ċ", "void", "Ġvis", "ina", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġh", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "K", "ol", "iko", "Ġste", "Ġvis", "oki", "?\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġh", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "V", "asa", "Ġvis", "ina", "Ġje", ":", "Ġ\"", "Ġ<<", "Ġh", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠKre", "ir", "an", "je", "Ġn", "iti", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthread", "Ġt", "1", "(", "vis", "ina", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthread", "Ġt", "2", "(", "vis", "ina", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠÄ", "Į", "ek", "an", "je", "Ġda", "Ġse", "Ġn", "iti", "Ġz", "av", "r", "Å¡", "e", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", "1", ".", "join", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", "2", ".", "join", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠDol", "azi", "Ġdo", "ĠÅ", "¡", "t", "et", "n", "og", "Ġpre", "pl", "itan", "ja", ",", "Ġz", "b", "og", "Ġto", "ga", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠÅ", "¡", "to", "Ġse", "Ġne", "Ġmo", "Å", "¾", "e", "Ġut", "ic", "ati", "Ġna", "Ġto", "Ġk", "ad", "ĠÄ", "ĩ", "e", "Ġse", "Ġdes", "iti", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["h", 6, "comesFrom", ["h"], [2]], ["h", 8, "comesFrom", ["h"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::445", "code": "#include \"imageinfooverlayproxy.h\"\n\nImageInfoOverlayProxy::ImageInfoOverlayProxy(FloatingWidgetContainer *parent)\n    : container(parent),\n      overlay(nullptr)\n{\n}\n\nImageInfoOverlayProxy::~ImageInfoOverlayProxy() {\n    if(overlay)\n        overlay->deleteLater();\n}\n\nvoid ImageInfoOverlayProxy::show() {\n    init();\n    overlay->show();\n}\n\nvoid ImageInfoOverlayProxy::hide() {\n    if(overlay)\n        overlay->hide();\n}\n\nvoid ImageInfoOverlayProxy::init() {\n    if(overlay)\n        return;\n    overlay = new ImageInfoOverlay(container);\n    overlay->setExifInfo(stateBuf.info);\n}\n\nbool ImageInfoOverlayProxy::isHidden() {\n    return overlay ? overlay->isHidden() : true;\n}\n\nvoid ImageInfoOverlayProxy::setExifInfo(QMap<QString, QString> _info) {\n    if(overlay)\n        overlay->setExifInfo(_info);\n    else\n        stateBuf.info = _info;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "image", "inf", "oo", "ver", "lay", "proxy", ".", "h", "\"", "Ċ", "Ċ", "Image", "Info", "Over", "lay", "Proxy", "::", "Image", "Info", "Over", "lay", "Proxy", "(", "Flo", "ating", "Widget", "Container", "Ġ*", "parent", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġcontainer", "(", "parent", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġoverlay", "(", "null", "ptr", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Image", "Info", "Over", "lay", "Proxy", "::", "~", "Image", "Info", "Over", "lay", "Proxy", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "over", "lay", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġoverlay", "->", "delete", "Later", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠImage", "Info", "Over", "lay", "Proxy", "::", "show", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġoverlay", "->", "show", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠImage", "Info", "Over", "lay", "Proxy", "::", "hide", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "over", "lay", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġoverlay", "->", "hide", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠImage", "Info", "Over", "lay", "Proxy", "::", "init", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "over", "lay", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġoverlay", "Ġ=", "Ġnew", "ĠImage", "Info", "Over", "lay", "(", "container", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġoverlay", "->", "set", "Ex", "if", "Info", "(", "state", "B", "uf", ".", "info", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠImage", "Info", "Over", "lay", "Proxy", "::", "is", "Hidden", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġoverlay", "Ġ?", "Ġoverlay", "->", "is", "Hidden", "()", "Ġ:", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠImage", "Info", "Over", "lay", "Proxy", "::", "set", "Ex", "if", "Info", "(", "Q", "Map", "<", "Q", "String", ",", "ĠQ", "String", ">", "Ġ_", "info", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "over", "lay", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġoverlay", "->", "set", "Ex", "if", "Info", "(_", "info", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstate", "B", "uf", ".", "info", "Ġ=", "Ġ_", "info", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["overlay", 21, "comesFrom", ["overlay"], [19]], ["overlay", 26, "comesFrom", ["overlay"], [19]], ["overlay", 27, "comesFrom", ["overlay"], [19]], ["overlay", 31, "comesFrom", ["overlay"], [19]], ["overlay", 32, "comesFrom", ["overlay"], [19]], ["_info", 34, "comesFrom", ["_info"], [30]], ["_info", 37, "comesFrom", ["_info"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::446", "code": "// Sniper.cpp : Defines the entry point for the console application.\n//\n\n#include \"stdafx.h\"\n\n\n#include<Windows.h>\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tDWORD procId;\n\tHWND handle = FindWindow(NULL, argv[1]);\n\tif (!handle)\n\t\treturn 0;\n\tDWORD threadId = GetWindowThreadProcessId(handle, &procId);\n\n\tHMODULE hMod2 = LoadLibrary(L\"Spy.dll\");\n\tif (hMod2)\n\t\tOutputDebugString(_T(\"HookProc loaded\"));\n\n\n\t//get method address to be given t setwindowhookex\n\tHOOKPROC method = (HOOKPROC)GetProcAddress(hMod2, \"LocalHook\");\n\n\tHHOOK hk = SetWindowsHookEx(WH_GETMESSAGE, method, hMod2, threadId);\n\tSleep(1000);\n\n\t//the dll will get loaded only when it recieves this message\n\tBOOL bFlag = PostThreadMessage(threadId, WM_PAINT, NULL, NULL);\n\tDWORD err = GetLastError();\n\tSleep(1000);\n\n\tBOOL d = UnhookWindowsHookEx(hk);\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ//", "ĠSniper", ".", "cpp", "Ġ:", "ĠDef", "ines", "Ġthe", "Ġentry", "Ġpoint", "Ġfor", "Ġthe", "Ġconsole", "Ġapplication", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "ĊĊ", "Ċ", "#", "include", "<", "Windows", ".", "h", ">", "Ċ", "Ċ", "int", "Ġ_", "t", "main", "(", "int", "Ġarg", "c", ",", "Ġ_", "T", "CHAR", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "DW", "ORD", "Ġproc", "Id", ";", "Ċ", "ĉ", "H", "W", "ND", "Ġhandle", "Ġ=", "ĠFind", "Window", "(", "NULL", ",", "Ġarg", "v", "[", "1", "]);", "Ċ", "ĉ", "if", "Ġ(!", "handle", ")", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "DW", "ORD", "Ġthread", "Id", "Ġ=", "ĠGet", "Window", "Thread", "Process", "Id", "(", "handle", ",", "Ġ&", "proc", "Id", ");", "ĊĊ", "ĉ", "H", "MOD", "ULE", "Ġh", "Mod", "2", "Ġ=", "ĠLoad", "Library", "(", "L", "\"", "Sp", "y", ".", "dll", "\");", "Ċ", "ĉ", "if", "Ġ(", "h", "Mod", "2", ")", "Ċ", "ĉ", "ĉ", "Output", "Debug", "String", "(_", "T", "(\"", "H", "ook", "Pro", "c", "Ġloaded", "\")", ");", "ĊĊ", "Ċ", "ĉ", "//", "get", "Ġmethod", "Ġaddress", "Ġto", "Ġbe", "Ġgiven", "Ġt", "Ġset", "window", "ho", "oke", "x", "Ċ", "ĉ", "H", "OOK", "PR", "OC", "Ġmethod", "Ġ=", "Ġ(", "H", "OOK", "PR", "OC", ")", "Get", "Pro", "c", "Address", "(", "h", "Mod", "2", ",", "Ġ\"", "Local", "H", "ook", "\");", "ĊĊ", "ĉ", "HH", "OOK", "Ġh", "k", "Ġ=", "ĠSet", "Windows", "H", "ook", "Ex", "(", "WH", "_", "GET", "M", "ES", "SA", "GE", ",", "Ġmethod", ",", "Ġh", "Mod", "2", ",", "Ġthread", "Id", ");", "Ċ", "ĉ", "Sleep", "(", "1000", ");", "ĊĊ", "ĉ", "//", "the", "Ġd", "ll", "Ġwill", "Ġget", "Ġloaded", "Ġonly", "Ġwhen", "Ġit", "Ġrec", "ieves", "Ġthis", "Ġmessage", "Ċ", "ĉ", "BO", "OL", "Ġb", "Flag", "Ġ=", "ĠPost", "Thread", "Message", "(", "thread", "Id", ",", "ĠWM", "_", "PA", "INT", ",", "ĠNULL", ",", "ĠNULL", ");", "Ċ", "ĉ", "DW", "ORD", "Ġerr", "Ġ=", "ĠGet", "Last", "Error", "();", "Ċ", "ĉ", "Sleep", "(", "1000", ");", "ĊĊ", "ĉ", "BO", "OL", "Ġd", "Ġ=", "ĠUn", "hook", "Windows", "H", "ook", "Ex", "(", "h", "k", ");", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["handle", 7, "comesFrom", ["handle"], [4]], ["handle", 10, "comesFrom", ["handle"], [4]], ["procId", 11, "comesFrom", ["procId"], [3]], ["hMod2", 14, "comesFrom", ["hMod2"], [12]], ["hMod2", 19, "comesFrom", ["hMod2"], [12]], ["hMod2", 24, "comesFrom", ["hMod2"], [12]], ["method", 23, "comesFrom", ["method"], [17]], ["threadId", 25, "comesFrom", ["threadId"], [8]], ["threadId", 29, "comesFrom", ["threadId"], [8]], ["hk", 36, "comesFrom", ["hk"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::447", "code": "#include \"crpropa/ParticleMass.h\"\n#include \"crpropa/ParticleID.h\"\n#include \"crpropa/Common.h\"\n\n#include <kiss/convert.h>\n\n#include <vector>\n#include <fstream>\n#include <stdexcept>\n#include <limits>\n\nnamespace crpropa {\n\nstruct NuclearMassTable {\n\tstd::vector<double> table;\n\n\tNuclearMassTable() {\n\t\tstd::string filename = getDataPath(\"nuclear_mass.txt\");\n\t\tstd::ifstream infile(filename.c_str());\n\n\t\tif (!infile.good())\n\t\t\tthrow std::runtime_error(\"crpropa: could not open file \" + filename);\n\n\t\tint Z, N;\n\t\tdouble mass;\n\t\twhile (infile.good()) {\n\t\t\tif (infile.peek() != '#') {\n\t\t\t\tinfile >> Z >> N >> mass;\n\t\t\t\ttable.push_back(mass);\n\t\t\t}\n\t\t\tinfile.ignore(std::numeric_limits<std::streamsize>::max(), '\\n');\n\t\t}\n\n\t\tinfile.close();\n\t}\n};\n\nstatic NuclearMassTable nuclearMassTable;\n\ndouble nuclearMass(int id) {\n\tint A = massNumber(id);\n\tint Z = chargeNumber(id);\n\treturn nuclearMass(A, Z);\n}\n\ndouble nuclearMass(int A, int Z) {\n\tint N = A - Z;\n\tdouble mass = nuclearMassTable.table[Z * 31 + N];\n\tif (mass == 0)\n\t\tthrow std::runtime_error(\"nuclearMass: nucleus not found \" + kiss::str(A) + \", \" + kiss::str(Z));\n\treturn mass;\n}\n\n} // namespace crpropa\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "cr", "pro", "pa", "/", "Part", "icle", "Mass", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "cr", "pro", "pa", "/", "Part", "icle", "ID", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "cr", "pro", "pa", "/", "Common", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "kiss", "/", "con", "vert", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "#", "include", "Ġ<", "limits", ">", "Ċ", "Ċ", "names", "pace", "Ġcr", "pro", "pa", "Ġ{", "Ċ", "Ċ", "struct", "ĠNuclear", "Mass", "Table", "Ġ{", "Ċ", "ĉ", "std", "::", "vector", "<", "double", ">", "Ġtable", ";", "ĊĊ", "ĉ", "N", "uclear", "Mass", "Table", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "string", "Ġfilename", "Ġ=", "Ġget", "Data", "Path", "(\"", "nuclear", "_", "mass", ".", "txt", "\");", "Ċ", "ĉ", "ĉ", "std", "::", "if", "stream", "Ġinf", "ile", "(", "filename", ".", "c", "_", "str", "());", "ĊĊ", "ĉ", "ĉ", "if", "Ġ(!", "in", "file", ".", "good", "())", "Ċ", "ĉ", "ĉ", "ĉ", "throw", "Ġstd", "::", "runtime", "_", "error", "(\"", "cr", "pro", "pa", ":", "Ġcould", "Ġnot", "Ġopen", "Ġfile", "Ġ\"", "Ġ+", "Ġfilename", ");", "ĊĊ", "ĉ", "ĉ", "int", "ĠZ", ",", "ĠN", ";", "Ċ", "ĉ", "ĉ", "double", "Ġmass", ";", "Ċ", "ĉ", "ĉ", "while", "Ġ(", "in", "file", ".", "good", "())", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "in", "file", ".", "pe", "ek", "()", "Ġ!=", "Ġ'", "#", "')", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "in", "file", "Ġ>>", "ĠZ", "Ġ>>", "ĠN", "Ġ>>", "Ġmass", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "table", ".", "push", "_", "back", "(", "mass", ");", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "in", "file", ".", "ignore", "(", "std", "::", "n", "umeric", "_", "limits", "<", "std", "::", "stream", "size", ">", "::", "max", "(),", "Ġ'", "\\", "n", "');", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "in", "file", ".", "close", "();", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "static", "ĠNuclear", "Mass", "Table", "Ġnuclear", "Mass", "Table", ";", "Ċ", "Ċ", "double", "Ġnuclear", "Mass", "(", "int", "Ġid", ")", "Ġ{", "Ċ", "ĉ", "int", "ĠA", "Ġ=", "Ġmass", "Number", "(", "id", ");", "Ċ", "ĉ", "int", "ĠZ", "Ġ=", "Ġcharge", "Number", "(", "id", ");", "Ċ", "ĉ", "return", "Ġnuclear", "Mass", "(", "A", ",", "ĠZ", ");", "Ċ", "}", "Ċ", "Ċ", "double", "Ġnuclear", "Mass", "(", "int", "ĠA", ",", "Ġint", "ĠZ", ")", "Ġ{", "Ċ", "ĉ", "int", "ĠN", "Ġ=", "ĠA", "Ġ-", "ĠZ", ";", "Ċ", "ĉ", "double", "Ġmass", "Ġ=", "Ġnuclear", "Mass", "Table", ".", "table", "[", "Z", "Ġ*", "Ġ31", "Ġ+", "ĠN", "];", "Ċ", "ĉ", "if", "Ġ(", "mass", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "ĉ", "throw", "Ġstd", "::", "runtime", "_", "error", "(\"", "nuclear", "Mass", ":", "Ġnucleus", "Ġnot", "Ġfound", "Ġ\"", "Ġ+", "Ġkiss", "::", "str", "(", "A", ")", "Ġ+", "Ġ\",", "Ġ\"", "Ġ+", "Ġkiss", "::", "str", "(", "Z", "));", "Ċ", "ĉ", "return", "Ġmass", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġcr", "pro", "pa", "Ċ"], "dataflow_graph": [["filename", 5, "comesFrom", ["filename"], [2]], ["filename", 10, "comesFrom", ["filename"], [2]], ["infile", 7, "comesFrom", ["infile"], [4]], ["infile", 14, "comesFrom", ["infile"], [4]], ["infile", 16, "comesFrom", ["infile"], [4]], ["infile", 18, "comesFrom", ["infile"], [4]], ["infile", 25, "comesFrom", ["infile"], [4]], ["infile", 28, "comesFrom", ["infile"], [4]], ["Z", 19, "comesFrom", ["Z"], [11]], ["Z", 41, "comesFrom", ["Z"], [36]], ["Z", 47, "comesFrom", ["Z"], [44]], ["Z", 51, "comesFrom", ["Z"], [44]], ["Z", 58, "comesFrom", ["Z"], [44]], ["N", 20, "comesFrom", ["N"], [12]], ["N", 52, "comesFrom", ["N"], [45]], ["mass", 21, "comesFrom", ["mass"], [13]], ["mass", 24, "comesFrom", ["mass"], [13]], ["mass", 53, "comesFrom", ["mass"], [48]], ["mass", 59, "comesFrom", ["mass"], [48]], ["id", 35, "comesFrom", ["id"], [32]], ["id", 38, "comesFrom", ["id"], [32]], ["A", 40, "comesFrom", ["A"], [33]], ["A", 46, "comesFrom", ["A"], [43]], ["A", 56, "comesFrom", ["A"], [43]], ["nuclearMassTable", 49, "comesFrom", ["nuclearMassTable"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::448", "code": "#include \"my_stack.h\"\nusing namespace std;\nint main()\n{\n\tMy_Stack stack1( 3 );\n\tstack1.push( 1 );\n\tstack1.push( 2 );\n\tstack1.push( 3 );\n\tstack1.push( 4 );\n\tcout << \"Stack capacity is: \" << stack1.capacity() << endl;\n\tcout << \"Trying push function:\" << endl;\n\tstack1.printStack();\n\tcout << \"Trying pop function:\" << endl;\n\tstack1.pop();\n\tstack1.printStack();\n\tcout << \"Top of stack is: \" << stack1.top() << endl;\n\tcout << \"Is stack empty?: \" << \" \" << ( (stack1.empty() == 1)? \"true\":\"false\") << endl;\n\tcout << \"Stack size is: \" << stack1.size() << endl;\n//\tcout << \"Stack capacity is: \" << stack1.capacity() << endl;\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "my", "_", "stack", ".", "h", "\"", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "My", "_", "Stack", "Ġstack", "1", "(", "Ġ3", "Ġ);", "Ċ", "ĉ", "stack", "1", ".", "push", "(", "Ġ1", "Ġ);", "Ċ", "ĉ", "stack", "1", ".", "push", "(", "Ġ2", "Ġ);", "Ċ", "ĉ", "stack", "1", ".", "push", "(", "Ġ3", "Ġ);", "Ċ", "ĉ", "stack", "1", ".", "push", "(", "Ġ4", "Ġ);", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Stack", "Ġcapacity", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġstack", "1", ".", "capacity", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "T", "rying", "Ġpush", "Ġfunction", ":\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "stack", "1", ".", "print", "Stack", "();", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "T", "rying", "Ġpop", "Ġfunction", ":\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "stack", "1", ".", "pop", "();", "Ċ", "ĉ", "stack", "1", ".", "print", "Stack", "();", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Top", "Ġof", "Ġstack", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġstack", "1", ".", "top", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Is", "Ġstack", "Ġempty", "?:", "Ġ\"", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġ(", "Ġ(", "stack", "1", ".", "empty", "()", "Ġ==", "Ġ1", ")?", "Ġ\"", "true", "\":\"", "false", "\")", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Stack", "Ġsize", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġstack", "1", ".", "size", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "//", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Stack", "Ġcapacity", "Ġis", ":", "Ġ\"", "Ġ<<", "Ġstack", "1", ".", "capacity", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["stack1", 3, "comesFrom", ["stack1"], [2]], ["stack1", 5, "comesFrom", ["stack1"], [2]], ["stack1", 7, "comesFrom", ["stack1"], [2]], ["stack1", 9, "comesFrom", ["stack1"], [2]], ["stack1", 12, "comesFrom", ["stack1"], [2]], ["stack1", 17, "comesFrom", ["stack1"], [2]], ["stack1", 21, "comesFrom", ["stack1"], [2]], ["stack1", 23, "comesFrom", ["stack1"], [2]], ["stack1", 26, "comesFrom", ["stack1"], [2]], ["stack1", 30, "comesFrom", ["stack1"], [2]], ["stack1", 34, "comesFrom", ["stack1"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::449", "code": "#include <cstdio>\n\nstruct {\n  int lower_limit, upper_limit;\n  char letter;\n  bool contain(int arg) {\n    return arg>=lower_limit && arg<=upper_limit;\n  }\n} grade[5] = {{0,0,'E'},\n              {1,35,'D'},\n              {36,60,'C'},\n              {61,85,'B'},\n              {86,100,'A'}};\n\nint main() {\n  int n;\n  scanf(\" %d\", &n);\n  for(int i=0; i<5; ++i)\n    if(grade[i].contain(n))\n      printf(\"%c\\n\", grade[i].letter);\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "Ċ", "struct", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġlower", "_", "limit", ",", "Ġupper", "_", "limit", ";", "Ċ", "Ġ", "Ġchar", "Ġletter", ";", "Ċ", "Ġ", "Ġbool", "Ġcontain", "(", "int", "Ġarg", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġarg", ">", "=", "lower", "_", "limit", "Ġ&&", "Ġarg", "<", "=", "upper", "_", "limit", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ġgrade", "[", "5", "]", "Ġ=", "Ġ{{", "0", ",", "0", ",'", "E", "'", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "1", ",", "35", ",'", "D", "'", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "36", ",", "60", ",'", "C", "'", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "61", ",", "85", ",'", "B", "'", "},", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "86", ",", "100", ",'", "A", "'", "}}", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġscan", "f", "(\"", "Ġ%", "d", "\",", "Ġ&", "n", ");", "Ċ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "5", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "grade", "[", "i", "].", "cont", "ain", "(", "n", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "c", "\\", "n", "\",", "Ġgrade", "[", "i", "].", "letter", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["arg", 5, "comesFrom", ["arg"], [4]], ["arg", 7, "comesFrom", ["arg"], [4]], ["n", 13, "comesFrom", ["n"], [11]], ["n", 20, "comesFrom", ["n"], [11]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 16, "comesFrom", ["i"], [14]], ["i", 18, "comesFrom", ["i"], [14]], ["i", 23, "comesFrom", ["i"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::450", "code": "#ifndef NALL_UTILITY_HPP\n#define NALL_UTILITY_HPP\n\n#include <type_traits>\n#include <utility>\n\nnamespace nall {\n\ntemplate<bool C, typename T = bool> struct enable_if { typedef T type; };\ntemplate<typename T> struct enable_if<false, T> {};\ntemplate<typename C, typename T = bool> struct mp_enable_if :\n    enable_if<C::value, T> {};\n\ntemplate<typename T> inline void swap(T &x, T &y)\n{\n    T temp(std::move(x));\n    x = std::move(y);\n    y = std::move(temp);\n}\n\ntemplate<typename T> struct base_from_member {\n    T value;\n    base_from_member(T value_) : value(value_) {}\n};\n\ntemplate<typename T> class optional {\n    bool valid;\n    T value;\npublic:\n    inline operator bool() const { return valid; }\n    inline const T& operator()() const { if(!valid) throw; return value; }\n    inline optional(bool valid, const T &value) : valid(valid), value(value) {}\n};\n\ntemplate<typename T> inline T* allocate(unsigned size, const T &value)\n{\n    T *array = new T[size];\n    for (unsigned i = 0; i < size; i++) {\n        array[i] = value;\n    }\n    return array;\n}\n\n}\n\n#endif\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠN", "ALL", "_", "UT", "IL", "ITY", "_", "H", "PP", "Ċ", "#", "define", "ĠN", "ALL", "_", "UT", "IL", "ITY", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ<", "type", "_", "tra", "its", ">", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "names", "pace", "Ġn", "all", "Ġ{", "Ċ", "Ċ", "template", "<", "bool", "ĠC", ",", "Ġtyp", "ename", "ĠT", "Ġ=", "Ġbool", ">", "Ġstruct", "Ġenable", "_", "if", "Ġ{", "Ġtyped", "ef", "ĠT", "Ġtype", ";", "Ġ};", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ġstruct", "Ġenable", "_", "if", "<", "false", ",", "ĠT", ">", "Ġ{", "};", "Ċ", "template", "<", "ty", "pen", "ame", "ĠC", ",", "Ġtyp", "ename", "ĠT", "Ġ=", "Ġbool", ">", "Ġstruct", "Ġmp", "_", "enable", "_", "if", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġenable", "_", "if", "<", "C", "::", "value", ",", "ĠT", ">", "Ġ{", "};", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ġinline", "Ġvoid", "Ġswap", "(", "T", "Ġ&", "x", ",", "ĠT", "Ġ&", "y", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠT", "Ġtemp", "(", "std", "::", "move", "(", "x", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġstd", "::", "move", "(", "y", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġy", "Ġ=", "Ġstd", "::", "move", "(", "temp", ");", "Ċ", "}", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ġstruct", "Ġbase", "_", "from", "_", "member", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠT", "Ġvalue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbase", "_", "from", "_", "member", "(", "T", "Ġvalue", "_", ")", "Ġ:", "Ġvalue", "(", "value", "_", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ġclass", "Ġoptional", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġvalid", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠT", "Ġvalue", ";", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġoperator", "Ġbool", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġvalid", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġconst", "ĠT", "&", "Ġoperator", "()", "()", "Ġconst", "Ġ{", "Ġif", "(", "!", "valid", ")", "Ġthrow", ";", "Ġreturn", "Ġvalue", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġoptional", "(", "bool", "Ġvalid", ",", "Ġconst", "ĠT", "Ġ&", "value", ")", "Ġ:", "Ġvalid", "(", "valid", "),", "Ġvalue", "(", "value", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ġinline", "ĠT", "*", "Ġallocate", "(", "unsigned", "Ġsize", ",", "Ġconst", "ĠT", "Ġ&", "value", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠT", "Ġ*", "array", "Ġ=", "Ġnew", "ĠT", "[", "size", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġsize", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġarray", "[", "i", "]", "Ġ=", "Ġvalue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġarray", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["value_", 17, "comesFrom", ["value_"], [15]], ["valid", 26, "comesFrom", ["valid"], [24]], ["valid", 27, "comesFrom", ["valid"], [24]], ["size", 34, "comesFrom", ["size"], [31]], ["size", 37, "comesFrom", ["size"], [31]], ["i", 36, "comesFrom", ["i"], [35]], ["i", 38, "comesFrom", ["i"], [35]], ["i", 40, "comesFrom", ["i"], [35]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::451", "code": "/* ---------------------------------------------------------------------------\n * Programa: muestra_vector_con_indices\n * Entradas: Una serie de números\n * Salidas:  Los elementos del vector con sus índices asociados\n * --------------------------------------------------------------------------- */\n\n#include <iostream>\n\nusing namespace std;\n\nint main ()\n{\n    const int TAM = 1000; // tamaño físico\n    double v[TAM];        // se reserva un vector de TAM posiciones\n    int tam;              // número de posiciones con las que se trabaja (tamaño lógico)\n    do {\n        cout << \"Introduce el tamaño del vector: \";\n        cin >> tam;\n    } while (tam < 0 || tam > TAM);\n    for (int i = 0; i < tam; i++) {\n        cout << \"Introduce el elemento en la posición \" << i << \": \";\n        cin >> v[i];\n    }\n    for (int i = 0; i < tam; i++)\n        cout << \"Posición (\" << i << \") = \" << v[i] << '\\n';\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ġ----------------------------------------------------------------", "-----------", "Ċ", "Ġ*", "ĠProgram", "a", ":", "Ġmu", "est", "ra", "_", "vector", "_", "con", "_", "ind", "ices", "Ċ", "Ġ*", "ĠEnt", "rad", "as", ":", "ĠUn", "a", "Ġser", "ie", "Ġde", "Ġn", "Ãº", "mer", "os", "Ċ", "Ġ*", "ĠSal", "idas", ":", "Ġ", "ĠLos", "Ġelement", "os", "Ġdel", "Ġvector", "Ġcon", "Ġsus", "ĠÃ", "Ń", "nd", "ices", "Ġas", "oci", "ados", "Ċ", "Ġ*", "Ġ----------------------------------------------------------------", "-----------", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġint", "ĠTAM", "Ġ=", "Ġ1000", ";", "Ġ//", "Ġt", "ama", "Ã±o", "Ġf", "ÃŃs", "ico", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġv", "[", "T", "AM", "];", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġse", "Ġreserv", "a", "Ġun", "Ġvector", "Ġde", "ĠTAM", "Ġpos", "icion", "es", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtam", ";", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġn", "Ãº", "mer", "o", "Ġde", "Ġpos", "icion", "es", "Ġcon", "Ġlas", "Ġque", "Ġse", "Ġtr", "ab", "aja", "Ġ(", "t", "ama", "Ã±o", "Ġl", "Ã³", "g", "ico", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdo", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Introdu", "ce", "Ġel", "Ġt", "ama", "Ã±o", "Ġdel", "Ġvector", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġtam", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġwhile", "Ġ(", "t", "am", "Ġ<", "Ġ0", "Ġ||", "Ġtam", "Ġ>", "ĠTAM", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġtam", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Introdu", "ce", "Ġel", "Ġelement", "o", "Ġen", "Ġla", "Ġpos", "ici", "Ã³n", "Ġ\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġv", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġtam", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Pos", "ici", "Ã³n", "Ġ(\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", ")", "Ġ=", "Ġ\"", "Ġ<<", "Ġv", "[", "i", "]", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["TAM", 4, "comesFrom", ["TAM"], [2]], ["TAM", 11, "comesFrom", ["TAM"], [2]], ["tam", 8, "comesFrom", ["tam"], [5]], ["tam", 9, "comesFrom", ["tam"], [5]], ["tam", 10, "comesFrom", ["tam"], [5]], ["tam", 14, "comesFrom", ["tam"], [5]], ["tam", 23, "comesFrom", ["tam"], [5]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 15, "comesFrom", ["i"], [12]], ["i", 17, "comesFrom", ["i"], [12]], ["i", 20, "comesFrom", ["i"], [12]], ["i", 22, "comesFrom", ["i"], [21]], ["i", 24, "comesFrom", ["i"], [21]], ["i", 26, "comesFrom", ["i"], [21]], ["i", 28, "comesFrom", ["i"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::452", "code": "#include \"insertion.h\"\n#include \"factory.h\"\n\n#include <chrono>\n#include <thread>\n\nstatic registrar<insertion> r;\n\ninsertion::insertion(int d) :\n\tsorter(d) \n{\n}\n\ninsertion::~insertion() \n{\n}\n\nvoid insertion::operator()(wrapper& v) {\n\tfor (int i = 1; i < v.size(); i++) {\n\t\tint j = i;\n\t\tconst unsigned int tmp = v[j];\n\t\twhile (j > 0 && v[j-1] > tmp) {\n\t\t\tv[j] = v[j - 1];\n\t\t\tj--;\n\t\t}\n\t\tv[j] = tmp;\n\t\tstd::this_thread::sleep_for(std::chrono::microseconds(_delay));\n\t}\n}\n\nvoid insertion::reg() {\n\tauto f = factory<sorter>::getInstance();\n\tf->reg(\"insertion\",\n\t\t\t[]() -> std::shared_ptr<sorter>  { return std::make_shared<insertion>(insertion(10)); } );\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "insert", "ion", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "f", "actory", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "chron", "o", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "Ċ", "static", "Ġregist", "rar", "<", "insert", "ion", ">", "Ġr", ";", "Ċ", "Ċ", "insert", "ion", "::", "insert", "ion", "(", "int", "Ġd", ")", "Ġ:", "Ċ", "ĉ", "s", "orter", "(", "d", ")", "Ġ", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "insert", "ion", "::", "~", "insert", "ion", "()", "Ġ", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "Ġinsertion", "::", "operator", "()", "(", "wrapper", "&", "Ġv", ")", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġv", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "Ġj", "Ġ=", "Ġi", ";", "Ċ", "ĉ", "ĉ", "const", "Ġunsigned", "Ġint", "Ġtmp", "Ġ=", "Ġv", "[", "j", "];", "Ċ", "ĉ", "ĉ", "while", "Ġ(", "j", "Ġ>", "Ġ0", "Ġ&&", "Ġv", "[", "j", "-", "1", "]", "Ġ>", "Ġtmp", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "v", "[", "j", "]", "Ġ=", "Ġv", "[", "j", "Ġ-", "Ġ1", "];", "Ċ", "ĉ", "ĉ", "ĉ", "j", "--", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "v", "[", "j", "]", "Ġ=", "Ġtmp", ";", "Ċ", "ĉ", "ĉ", "std", "::", "this", "_", "thread", "::", "sleep", "_", "for", "(", "std", "::", "chron", "o", "::", "micro", "seconds", "(_", "delay", "));", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġinsertion", "::", "reg", "()", "Ġ{", "Ċ", "ĉ", "auto", "Ġf", "Ġ=", "Ġfactory", "<", "s", "orter", ">", "::", "get", "Instance", "();", "Ċ", "ĉ", "f", "->", "reg", "(\"", "insert", "ion", "\",", "Ċ", "ĉ", "ĉ", "ĉ", "[]", "()", "Ġ->", "Ġstd", "::", "shared", "_", "ptr", "<", "s", "orter", ">", "Ġ", "Ġ{", "Ġreturn", "Ġstd", "::", "make", "_", "shared", "<", "insert", "ion", ">(", "insert", "ion", "(", "10", "));", "Ġ}", "Ġ);", "Ċ", "}", "Ċ"], "dataflow_graph": [["d", 4, "comesFrom", ["d"], [2]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 11, "comesFrom", ["i"], [7]], ["j", 16, "comesFrom", ["j"], [12]], ["j", 17, "comesFrom", ["j"], [12]], ["j", 19, "comesFrom", ["j"], [12]], ["j", 22, "comesFrom", ["j"], [12]], ["j", 24, "comesFrom", ["j"], [12]], ["j", 25, "comesFrom", ["j"], [12]], ["j", 27, "comesFrom", ["j"], [12]], ["tmp", 20, "comesFrom", ["tmp"], [14]], ["tmp", 28, "comesFrom", ["tmp"], [14]], ["f", 35, "comesFrom", ["f"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::453", "code": "#include \"audiencequestioncountresponse.h\"\n\nAudienceQuestionCountResponse::AudienceQuestionCountResponse ( int read, int unread, int total )\n    : _read ( read ),\n      _unread ( unread ),\n      _total ( total ) {}\n\nint AudienceQuestionCountResponse::read() {\n    return this->_read;\n}\n\nint AudienceQuestionCountResponse::unread() {\n    return this->_unread;\n}\n\nint AudienceQuestionCountResponse::total() {\n    return this->_total;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "aud", "ience", "question", "count", "response", ".", "h", "\"", "Ċ", "Ċ", "Aud", "ience", "Question", "Count", "Response", "::", "Aud", "ience", "Question", "Count", "Response", "Ġ(", "Ġint", "Ġread", ",", "Ġint", "Ġun", "read", ",", "Ġint", "Ġtotal", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġ_", "read", "Ġ(", "Ġread", "Ġ),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "un", "read", "Ġ(", "Ġun", "read", "Ġ),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "total", "Ġ(", "Ġtotal", "Ġ)", "Ġ{}", "Ċ", "Ċ", "int", "ĠAud", "ience", "Question", "Count", "Response", "::", "read", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġthis", "->", "_", "read", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠAud", "ience", "Question", "Count", "Response", "::", "un", "read", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġthis", "->", "_", "un", "read", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠAud", "ience", "Question", "Count", "Response", "::", "total", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġthis", "->", "_", "total", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["read", 5, "comesFrom", ["read"], [1]], ["read", 10, "comesFrom", ["read"], [1]], ["unread", 7, "comesFrom", ["unread"], [2]], ["unread", 12, "comesFrom", ["unread"], [2]], ["total", 9, "comesFrom", ["total"], [3]], ["total", 14, "comesFrom", ["total"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::454", "code": "#include <iostream>\n\nnamespace Exercise\n{\nint i = 0;\ndouble d = 0;\nconst int limit = 1000;\n}\n\nint i = 0;\n\nvoid fun()\n{\n\tusing namespace Exercise;\n\tdouble d = 3.1416;\n\tint i2 = limit + 1;\n\t//++i; //error: reference to ‘i’ is ambiguous\n\t++::i;\n\tstd::cout << \"Exercise:: i = \" << Exercise::i << \", d = \" << Exercise::d << \", limit = \"\n\t          << Exercise::limit << '\\n';\n\tstd::cout << \"Global:: i = \" << ::i << '\\n';\n\tstd::cout << \"Local:: d = \" << d << \", i2 = \" << i2 << '\\n';\n}\n\nint main()\n{\n\tfun();\n}\n/*\nExercise:: i = 0, d = 0, limit = 1000\nGlobal:: i = 1\nLocal:: d = 3.1416, i2 = 1001\n*/\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "names", "pace", "ĠExercise", "Ċ", "{", "Ċ", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "double", "Ġd", "Ġ=", "Ġ0", ";", "Ċ", "const", "Ġint", "Ġlimit", "Ġ=", "Ġ1000", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "void", "Ġfun", "()", "Ċ", "{", "Ċ", "ĉ", "using", "Ġnamespace", "ĠExercise", ";", "Ċ", "ĉ", "double", "Ġd", "Ġ=", "Ġ3", ".", "14", "16", ";", "Ċ", "ĉ", "int", "Ġi", "2", "Ġ=", "Ġlimit", "Ġ+", "Ġ1", ";", "Ċ", "ĉ", "//", "++", "i", ";", "Ġ//", "error", ":", "Ġreference", "Ġto", "ĠâĢ", "ĺ", "i", "âĢ", "Ļ", "Ġis", "Ġambiguous", "Ċ", "ĉ", "++", "::", "i", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Ex", "ercise", "::", "Ġi", "Ġ=", "Ġ\"", "Ġ<<", "ĠExercise", "::", "i", "Ġ<<", "Ġ\",", "Ġd", "Ġ=", "Ġ\"", "Ġ<<", "ĠExercise", "::", "d", "Ġ<<", "Ġ\",", "Ġlimit", "Ġ=", "Ġ\"", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "ĠExercise", "::", "limit", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Global", "::", "Ġi", "Ġ=", "Ġ\"", "Ġ<<", "Ġ::", "i", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Local", "::", "Ġd", "Ġ=", "Ġ\"", "Ġ<<", "Ġd", "Ġ<<", "Ġ\",", "Ġi", "2", "Ġ=", "Ġ\"", "Ġ<<", "Ġi", "2", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "fun", "();", "Ċ", "}", "Ċ", "/*", "Ċ", "Ex", "ercise", "::", "Ġi", "Ġ=", "Ġ0", ",", "Ġd", "Ġ=", "Ġ0", ",", "Ġlimit", "Ġ=", "Ġ1000", "Ċ", "Global", "::", "Ġi", "Ġ=", "Ġ1", "Ċ", "Local", "::", "Ġd", "Ġ=", "Ġ3", ".", "14", "16", ",", "Ġi", "2", "Ġ=", "Ġ100", "1", "Ċ", "*/", "Ċ"], "dataflow_graph": [["limit", 8, "comesFrom", ["limit"], [2]], ["limit", 13, "comesFrom", ["limit"], [2]], ["i", 9, "comesFrom", ["i"], [3]], ["i", 11, "comesFrom", ["i"], [3]], ["i", 15, "comesFrom", ["i"], [3]], ["d", 12, "comesFrom", ["d"], [6]], ["d", 17, "comesFrom", ["d"], [6]], ["i2", 18, "comesFrom", ["i2"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::455", "code": "#include \"MasterSessionAdapter.h\"\n\nnamespace Automatak { namespace DNP3 { namespace Adapter {\n\n\nMasterSessionAdapter::MasterSessionAdapter(std::shared_ptr<asiodnp3::IMasterSession> proxy) :\n\tMasterOperationsAdapter(proxy.get()),\n\tproxy(new std::shared_ptr<asiodnp3::IMasterSession>(proxy))\n{\n\n}\n\nvoid MasterSessionAdapter::BeginShutdown()\n{\n\t(*proxy)->BeginShutdown();\n}\n\nInterface::IStackStatistics^ MasterSessionAdapter::GetStackStatistics()\n{\n\treturn Conversions::ConvertStackStats((*proxy)->GetStackStatistics());\n}\n\n}}}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Master", "Session", "Adapter", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠAutom", "at", "ak", "Ġ{", "Ġnamespace", "ĠD", "NP", "3", "Ġ{", "Ġnamespace", "ĠAdapter", "Ġ{", "ĊĊ", "Ċ", "Master", "Session", "Adapter", "::", "Master", "Session", "Adapter", "(", "std", "::", "shared", "_", "ptr", "<", "as", "iod", "np", "3", "::", "IM", "aster", "Session", ">", "Ġproxy", ")", "Ġ:", "Ċ", "ĉ", "Master", "Oper", "ations", "Adapter", "(", "proxy", ".", "get", "()", "),", "Ċ", "ĉ", "proxy", "(", "new", "Ġstd", "::", "shared", "_", "ptr", "<", "as", "iod", "np", "3", "::", "IM", "aster", "Session", ">(", "proxy", "))", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMaster", "Session", "Adapter", "::", "Begin", "Shut", "down", "()", "Ċ", "{", "Ċ", "ĉ", "(*", "proxy", ")", "->", "Begin", "Shut", "down", "();", "Ċ", "}", "Ċ", "Ċ", "Interface", "::", "I", "Stack", "Statistics", "^", "ĠMaster", "Session", "Adapter", "::", "Get", "Stack", "Statistics", "()", "Ċ", "{", "Ċ", "ĉ", "return", "ĠConvers", "ions", "::", "Con", "vert", "Stack", "Stats", "((", "*", "proxy", ")", "->", "Get", "Stack", "Statistics", "());", "Ċ", "}", "Ċ", "Ċ", "}}}", "ĊĊ", "Ċ"], "dataflow_graph": [["proxy", 3, "comesFrom", ["proxy"], [1]], ["proxy", 5, "comesFrom", ["proxy"], [1]], ["proxy", 6, "comesFrom", ["proxy"], [1]], ["proxy", 8, "comesFrom", ["proxy"], [1]], ["proxy", 13, "comesFrom", ["proxy"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::456", "code": "/*\n*\tThis file is part of Magenta Engine\n*\n*\tCopyright (C) 2018 BlackPhrase\n*\n*\tMagenta Engine is free software: you can redistribute it and/or modify\n*\tit under the terms of the GNU General Public License as published by\n*\tthe Free Software Foundation, either version 3 of the License, or\n*\t(at your option) any later version.\n*\n*\tMagenta Engine is distributed in the hope that it will be useful,\n*\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n*\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n*\tGNU General Public License for more details.\n*\n*\tYou should have received a copy of the GNU General Public License\n*\talong with Magenta Engine. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/// @file\n\n#include \"WinApplication.hpp\"\n\nCWinApplication::CWinApplication(const char *cmdline)\n{\n\tmsCmdLine[0] = '\\0';\n\t\n\tfor(int i = 0; i < strlen(cmdline); ++i)\n\t\tstrcat(msCmdLine, cmdline);\n};\n\nCWinApplication::~CWinApplication() = default;\n\nbool CWinApplication::PostInit()\n{\n\treturn true;\n};", "code_tokens": ["Ġ/*", "Ċ", "*", "ĉ", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠMag", "enta", "ĠEngine", "Ċ", "*", "Ċ", "*", "ĉ", "Copyright", "Ġ(", "C", ")", "Ġ2018", "ĠBlack", "Ph", "rase", "Ċ", "*", "Ċ", "*", "ĉ", "Mag", "enta", "ĠEngine", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "*", "ĉ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "*", "ĉ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "*", "ĉ", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "*", "Ċ", "*", "ĉ", "Mag", "enta", "ĠEngine", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "*", "ĉ", "but", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "*", "ĉ", "MER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "ĠSee", "Ġthe", "Ċ", "*", "ĉ", "GN", "U", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "*", "Ċ", "*", "ĉ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "*", "ĉ", "along", "Ġwith", "ĠMag", "enta", "ĠEngine", ".", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "///", "Ġ@", "file", "Ċ", "Ċ", "#", "include", "Ġ\"", "Win", "Application", ".", "h", "pp", "\"", "Ċ", "Ċ", "C", "Win", "Application", "::", "C", "Win", "Application", "(", "const", "Ġchar", "Ġ*", "cmd", "line", ")", "Ċ", "{", "Ċ", "ĉ", "ms", "Cmd", "Line", "[", "0", "]", "Ġ=", "Ġ'", "\\", "0", "';", "Ċ", "ĉ", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġstr", "len", "(", "cmd", "line", ");", "Ġ++", "i", ")", "Ċ", "ĉ", "ĉ", "str", "cat", "(", "ms", "Cmd", "Line", ",", "Ġcmd", "line", ");", "Ċ", "};", "Ċ", "Ċ", "C", "Win", "Application", "::", "~", "C", "Win", "Application", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "bool", "ĠC", "Win", "Application", "::", "Post", "Init", "()", "Ċ", "{", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "};"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 7, "comesFrom", ["i"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::457", "code": "#include \"exception/ColorOutOfRangeException.h\"\n#include <string>\n\nnamespace Tales {\n\n\nColorOutOfRangeException::ColorOutOfRangeException(\n      const char* nameOfSourceFile__,\n      int lineNum__,\n      const std::string& source__,\n      int invalidIndex__)\n  : TalesException(nameOfSourceFile__,\n                   lineNum__,\n                   source__),\n    invalidIndex_(invalidIndex__) { };\n\nconst char* ColorOutOfRangeException::what() const throw() {\n  return \"Tried to access color at invalid index\";\n}\n\nint ColorOutOfRangeException::invalidIndex() const {\n  return invalidIndex_;\n}\n\n\n\n}; \n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ex", "ception", "/", "Color", "Out", "Of", "Range", "Exception", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "names", "pace", "ĠTales", "Ġ{", "ĊĊ", "Ċ", "Color", "Out", "Of", "Range", "Exception", "::", "Color", "Out", "Of", "Range", "Exception", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġchar", "*", "Ġname", "Of", "SourceFile", "__", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġline", "Num", "__", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "string", "&", "Ġsource", "__", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġinvalid", "Index", "__", ")", "Ċ", "Ġ", "Ġ:", "ĠTales", "Exception", "(", "name", "Of", "SourceFile", "__", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġline", "Num", "__", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsource", "__", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinvalid", "Index", "_(", "in", "valid", "Index", "__", ")", "Ġ{", "Ġ};", "Ċ", "Ċ", "const", "Ġchar", "*", "ĠColor", "Out", "Of", "Range", "Exception", "::", "what", "()", "Ġconst", "Ġthrow", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġ\"", "T", "ried", "Ġto", "Ġaccess", "Ġcolor", "Ġat", "Ġinvalid", "Ġindex", "\";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠColor", "Out", "Of", "Range", "Exception", "::", "in", "valid", "Index", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġinvalid", "Index", "_", ";", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "};", "Ġ", "Ċ"], "dataflow_graph": [["lineNum__", 7, "comesFrom", ["lineNum__"], [2]], ["invalidIndex__", 10, "comesFrom", ["invalidIndex__"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::458", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    int N;\n    cin >> N;\n    int sum = 0;\n    int arr[N];\n    for (int i = 0; i < N; i++) {\n\tcin >> arr[i];\n\tsum += arr[i];\n    }\n    int average = ((double) sum / N - (int) sum / N) >= 0.5 ? sum / N + 1 : sum / N;\n    sum = 0;\n    for (int i = 0; i < N; i++) sum += pow(arr[i] - average, 2);\n    cout << sum;\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġi", "os", "_", "base", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ".", "tie", "(", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "ĠN", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "ĠN", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsum", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġarr", "[", "N", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠN", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "cin", "Ġ>>", "Ġarr", "[", "i", "];", "Ċ", "ĉ", "sum", "Ġ+=", "Ġarr", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġaverage", "Ġ=", "Ġ((", "double", ")", "Ġsum", "Ġ/", "ĠN", "Ġ-", "Ġ(", "int", ")", "Ġsum", "Ġ/", "ĠN", ")", "Ġ>=", "Ġ0", ".", "5", "Ġ?", "Ġsum", "Ġ/", "ĠN", "Ġ+", "Ġ1", "Ġ:", "Ġsum", "Ġ/", "ĠN", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsum", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠN", ";", "Ġi", "++)", "Ġsum", "Ġ+=", "Ġpow", "(", "arr", "[", "i", "]", "Ġ-", "Ġaverage", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġsum", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["N", 7, "comesFrom", ["N"], [5]], ["N", 10, "comesFrom", ["N"], [5]], ["N", 13, "comesFrom", ["N"], [5]], ["N", 23, "comesFrom", ["N"], [5]], ["N", 25, "comesFrom", ["N"], [5]], ["N", 27, "comesFrom", ["N"], [5]], ["N", 29, "comesFrom", ["N"], [5]], ["N", 33, "comesFrom", ["N"], [5]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["i", 17, "comesFrom", ["i"], [11]], ["i", 20, "comesFrom", ["i"], [11]], ["i", 32, "comesFrom", ["i"], [31]], ["i", 34, "comesFrom", ["i"], [31]], ["i", 38, "comesFrom", ["i"], [31]], ["sum", 22, "comesFrom", ["sum"], [18]], ["sum", 24, "comesFrom", ["sum"], [18]], ["sum", 26, "comesFrom", ["sum"], [18]], ["sum", 28, "comesFrom", ["sum"], [18]], ["sum", 41, "comesFrom", ["sum"], [35]], ["average", 39, "comesFrom", ["average"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::459", "code": "#include \"mainwindow.h\"\r\n#include <QApplication>\r\n#include <QTranslator>\r\n#include <QLocale>\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n    QApplication a(argc, argv);\r\n    QTranslator translator;\r\n    translator.load(\":/\" + QLocale::system().name());\r\n    a.installTranslator(&translator);\r\n    QTranslator qtTranslator;\r\n    qtTranslator.load(\":/qt_\" + QLocale::system().name());\r\n    a.installTranslator(&qtTranslator);\r\n\r\n    MainWindow w;\r\n    w.show();\r\n    \r\n    return a.exec();\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "main", "window", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "č", "Ċ", "#", "include", "Ġ<", "Q", "Trans", "lator", ">", "č", "Ċ", "#", "include", "Ġ<", "QL", "oc", "ale", ">", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Application", "Ġa", "(", "arg", "c", ",", "Ġarg", "v", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Trans", "lator", "Ġtranslator", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtranslator", ".", "load", "(", "\":", "/\"", "Ġ+", "ĠQ", "Loc", "ale", "::", "system", "().", "name", "());", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġa", ".", "install", "Trans", "lator", "(&", "trans", "lator", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Trans", "lator", "Ġq", "t", "Trans", "lator", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "t", "Trans", "lator", ".", "load", "(", "\":", "/", "qt", "_", "\"", "Ġ+", "ĠQ", "Loc", "ale", "::", "system", "().", "name", "());", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġa", ".", "install", "Trans", "lator", "(&", "qt", "Trans", "lator", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMain", "Window", "Ġw", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġw", ".", "show", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ".", "exec", "();", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["translator", 5, "comesFrom", ["translator"], [4]], ["translator", 11, "comesFrom", ["translator"], [4]], ["qtTranslator", 13, "comesFrom", ["qtTranslator"], [12]], ["qtTranslator", 19, "comesFrom", ["qtTranslator"], [12]], ["w", 21, "comesFrom", ["w"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::460", "code": "\n#include \"MDLRoot.h\"\n\n\nusing namespace mdl;\n\n\nMDLRoot::MDLRoot()\n{}\n\n\nMDLRoot::~MDLRoot()\n{}\n\n\nvoid MDLRoot::addBodyPart(BodyPart *newPart)\n{\n    // Add the new part to our list\n    body_parts.push_back(newPart);\n}\n\n\nint MDLRoot::getNumBodyParts()\n{\n    return body_parts.size();\n}\n\n\nBodyPart* MDLRoot::getBodyPart(int partIndex)\n{\n    if ((partIndex < 0) || (partIndex >= static_cast<int>(body_parts.size())))\n        return NULL;\n    else\n        return body_parts[partIndex];\n}", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "MD", "L", "Root", ".", "h", "\"", "ĊĊ", "Ċ", "using", "Ġnamespace", "Ġm", "dl", ";", "ĊĊ", "Ċ", "MD", "L", "Root", "::", "MD", "L", "Root", "()", "Ċ", "{", "}", "ĊĊ", "Ċ", "MD", "L", "Root", "::", "~", "MD", "L", "Root", "()", "Ċ", "{", "}", "ĊĊ", "Ċ", "void", "ĠMD", "L", "Root", "::", "add", "Body", "Part", "(", "Body", "Part", "Ġ*", "new", "Part", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠAdd", "Ġthe", "Ġnew", "Ġpart", "Ġto", "Ġour", "Ġlist", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbody", "_", "parts", ".", "push", "_", "back", "(", "new", "Part", ");", "Ċ", "}", "ĊĊ", "Ċ", "int", "ĠMD", "L", "Root", "::", "get", "Num", "Body", "Parts", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġbody", "_", "parts", ".", "size", "();", "Ċ", "}", "ĊĊ", "Ċ", "Body", "Part", "*", "ĠMD", "L", "Root", "::", "get", "Body", "Part", "(", "int", "Ġpart", "Index", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "part", "Index", "Ġ<", "Ġ0", ")", "Ġ||", "Ġ(", "part", "Index", "Ġ>=", "Ġstatic", "_", "cast", "<", "int", ">(", "body", "_", "parts", ".", "size", "()", ")))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠNULL", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġbody", "_", "parts", "[", "part", "Index", "];", "Ċ", "}"], "dataflow_graph": [["partIndex", 13, "comesFrom", ["partIndex"], [12]], ["partIndex", 14, "comesFrom", ["partIndex"], [12]], ["partIndex", 19, "comesFrom", ["partIndex"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::461", "code": "#include <iostream>\n#include <string>\n#include <Graphics.h>\n#include <Components.h>\n\nusing namespace Component;\n\nint main()\n{\n    WindowManager wm = WindowManager();\n    std::string name = \"Blop\";\n    if(wm.initWindow(name))\n    {\n        std::cout << \"Orthogonals vectors of polygon (0,0) (1,0) (0,1) :\" << std::endl;\n        Polygon p = Polygon::Triangle(Point(0,0), Point(1,0), Point(0,1));\n        std::vector<Vector> v = p.getOrthogonalsVect();\n        for(int i=0; i<v.size(); i++)\n            std::cout<< v[i] << std::endl;\n    }\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "Graphics", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Comp", "onents", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠComponent", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWindow", "Manager", "Ġw", "m", "Ġ=", "ĠWindow", "Manager", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġname", "Ġ=", "Ġ\"", "Bl", "op", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "wm", ".", "init", "Window", "(", "name", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Or", "th", "og", "on", "als", "Ġvectors", "Ġof", "Ġpoly", "gon", "Ġ(", "0", ",", "0", ")", "Ġ(", "1", ",", "0", ")", "Ġ(", "0", ",", "1", ")", "Ġ:", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠPoly", "gon", "Ġp", "Ġ=", "ĠPoly", "gon", "::", "Tri", "angle", "(", "Point", "(", "0", ",", "0", "),", "ĠPoint", "(", "1", ",", "0", "),", "ĠPoint", "(", "0", ",", "1", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "Vector", ">", "Ġv", "Ġ=", "Ġp", ".", "get", "Or", "th", "og", "on", "als", "V", "ect", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "v", ".", "size", "();", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "<<", "Ġv", "[", "i", "]", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["wm", 5, "comesFrom", ["wm"], [2]], ["name", 7, "comesFrom", ["name"], [4]], ["p", 16, "comesFrom", ["p"], [10]], ["i", 19, "comesFrom", ["i"], [18]], ["i", 22, "comesFrom", ["i"], [18]], ["i", 25, "comesFrom", ["i"], [18]], ["v", 20, "comesFrom", ["v"], [15]], ["v", 24, "comesFrom", ["v"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::462", "code": "#include <iostream>\n#include \"../global/templates.hpp\"\n\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing algo4j_util::Pair;\n\nauto main(int argc, const char *argv[]) -> int {\n\tauto pair = *new Pair<int, int>(233, 666);\n\tcout << pair << endl;\n\tcin >> pair;\n\tcout << pair << endl;\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ\"", "../", "global", "/", "tem", "plates", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "using", "Ġstd", "::", "cin", ";", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "using", "Ġal", "go", "4", "j", "_", "util", "::", "P", "air", ";", "Ċ", "Ċ", "auto", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġconst", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ġ->", "Ġint", "Ġ{", "Ċ", "ĉ", "auto", "Ġpair", "Ġ=", "Ġ*", "new", "ĠPair", "<", "int", ",", "Ġint", ">(", "233", ",", "Ġ666", ");", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġpair", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġpair", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġpair", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["pair", 9, "comesFrom", ["pair"], [7]], ["pair", 12, "comesFrom", ["pair"], [7]], ["pair", 14, "comesFrom", ["pair"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::463", "code": "#include \"OutOfProcessClipboard.h\"\n\n#include <QtCore/QFile>\n\n#include <QtDebug>\n\nOutOfProcessClipboard::OutOfProcessClipboard(QObject* parent)\n: QObject(parent)\n{\n}\n\nvoid OutOfProcessClipboard::setText(const QString& text)\n{\n\tQFile tempFile(\"/tmp/qt-widget-inspector-clipboard\");\n\ttempFile.open(QIODevice::WriteOnly | QIODevice::Truncate);\n\ttempFile.write(text.toUtf8());\n\ttempFile.close();\n\n\t// start the xclip utility detached so that it is not an inferior\n\t// of the current process and hence will not be interrupted by gdb\n\t// if the user interrupts the current process\n\tif (!QProcess::startDetached(\"xclip\",QStringList() << tempFile.fileName() << \"-i\" << \"-selection\" << \"clipboard\"))\n\t{\n\t\temit error(\"There was a problem copying text with 'xclip', please check that it is installed.\");\n\t}\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Out", "Of", "Process", "Cl", "ip", "board", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "t", "Core", "/", "Q", "File", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "t", "Debug", ">", "Ċ", "Ċ", "Out", "Of", "Process", "Cl", "ip", "board", "::", "Out", "Of", "Process", "Cl", "ip", "board", "(", "Q", "Object", "*", "Ġparent", ")", "Ċ", ":", "ĠQ", "Object", "(", "parent", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOut", "Of", "Process", "Cl", "ip", "board", "::", "set", "Text", "(", "const", "ĠQ", "String", "&", "Ġtext", ")", "Ċ", "{", "Ċ", "ĉ", "Q", "File", "Ġtemp", "File", "(\"", "/", "tmp", "/", "qt", "-", "widget", "-", "ins", "pect", "or", "-", "clip", "board", "\");", "Ċ", "ĉ", "temp", "File", ".", "open", "(", "Q", "I", "OD", "ev", "ice", "::", "Write", "Only", "Ġ|", "ĠQ", "I", "OD", "ev", "ice", "::", "Tr", "unc", "ate", ");", "Ċ", "ĉ", "temp", "File", ".", "write", "(", "text", ".", "to", "Ut", "f", "8", "());", "Ċ", "ĉ", "temp", "File", ".", "close", "();", "ĊĊ", "ĉ", "//", "Ġstart", "Ġthe", "Ġx", "clip", "Ġutility", "Ġdetached", "Ġso", "Ġthat", "Ġit", "Ġis", "Ġnot", "Ġan", "Ġinferior", "Ċ", "ĉ", "//", "Ġof", "Ġthe", "Ġcurrent", "Ġprocess", "Ġand", "Ġhence", "Ġwill", "Ġnot", "Ġbe", "Ġinterrupted", "Ġby", "Ġg", "db", "Ċ", "ĉ", "//", "Ġif", "Ġthe", "Ġuser", "Ġinterrupts", "Ġthe", "Ġcurrent", "Ġprocess", "Ċ", "ĉ", "if", "Ġ(!", "Q", "Process", "::", "start", "Det", "ached", "(\"", "x", "clip", "\",", "Q", "String", "List", "()", "Ġ<<", "Ġtemp", "File", ".", "file", "Name", "()", "Ġ<<", "Ġ\"-", "i", "\"", "Ġ<<", "Ġ\"-", "selection", "\"", "Ġ<<", "Ġ\"", "clip", "board", "\"))", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "em", "it", "Ġerror", "(\"", "There", "Ġwas", "Ġa", "Ġproblem", "Ġcopying", "Ġtext", "Ġwith", "Ġ'", "x", "clip", "',", "Ġplease", "Ġcheck", "Ġthat", "Ġit", "Ġis", "Ġinstalled", ".\"", ");", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["tempFile", 7, "comesFrom", ["tempFile"], [6]], ["tempFile", 11, "comesFrom", ["tempFile"], [6]], ["tempFile", 15, "comesFrom", ["tempFile"], [6]], ["tempFile", 19, "comesFrom", ["tempFile"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::464", "code": "#include <iostream>\n#include <map>\n#include <utility>\n\nusing namespace std;\n\nmap<pair<int, int>, int> cache;\n\n// Pascal's triangle\nint combination(int n, int k) {\n   if (n == k || k == 0)\n      return 1;\n   \n   pair<int, int> entry(n, k);\n   if (cache.count(entry) > 0)\n      return cache[entry];\n\n   int result = combination(n - 1, k - 1) + combination(n - 1, k);\n   cache[entry] = result;\n   return result;\n}\n\nint main() {\n   int n, m;\n\n   while(cin >> n >> m && n > 0 && m > 0) {\n      cout << n << \" things taken \" << m << \" at a time is \" <<\n         combination(n, m) << \" exactly.\\n\";\n   }\n   return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "map", "<", "pair", "<", "int", ",", "Ġint", ">,", "Ġint", ">", "Ġcache", ";", "Ċ", "Ċ", "//", "ĠPascal", "'s", "Ġtriangle", "Ċ", "int", "Ġcombination", "(", "int", "Ġn", ",", "Ġint", "Ġk", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ==", "Ġk", "Ġ||", "Ġk", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġpair", "<", "int", ",", "Ġint", ">", "Ġentry", "(", "n", ",", "Ġk", ");", "Ċ", "Ġ", "Ġ", "Ġif", "Ġ(", "cache", ".", "count", "(", "entry", ")", "Ġ>", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcache", "[", "entry", "];", "ĊĊ", "Ġ", "Ġ", "Ġint", "Ġresult", "Ġ=", "Ġcombination", "(", "n", "Ġ-", "Ġ1", ",", "Ġk", "Ġ-", "Ġ1", ")", "Ġ+", "Ġcombination", "(", "n", "Ġ-", "Ġ1", ",", "Ġk", ");", "Ċ", "Ġ", "Ġ", "Ġcache", "[", "entry", "]", "Ġ=", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġint", "Ġn", ",", "Ġm", ";", "ĊĊ", "Ġ", "Ġ", "Ġwhile", "(", "cin", "Ġ>>", "Ġn", "Ġ>>", "Ġm", "Ġ&&", "Ġn", "Ġ>", "Ġ0", "Ġ&&", "Ġm", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġn", "Ġ<<", "Ġ\"", "Ġthings", "Ġtaken", "Ġ\"", "Ġ<<", "Ġm", "Ġ<<", "Ġ\"", "Ġat", "Ġa", "Ġtime", "Ġis", "Ġ\"", "Ġ<<", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcombination", "(", "n", ",", "Ġm", ")", "Ġ<<", "Ġ\"", "Ġexactly", ".", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [3]], ["n", 16, "comesFrom", ["n"], [3]], ["n", 19, "comesFrom", ["n"], [3]], ["n", 29, "comesFrom", ["n"], [26]], ["n", 31, "comesFrom", ["n"], [26]], ["n", 34, "comesFrom", ["n"], [26]], ["n", 37, "comesFrom", ["n"], [26]], ["k", 6, "comesFrom", ["k"], [4]], ["k", 7, "comesFrom", ["k"], [4]], ["k", 17, "comesFrom", ["k"], [4]], ["k", 20, "comesFrom", ["k"], [4]], ["cache", 9, "comesFrom", ["cache"], [1]], ["cache", 12, "comesFrom", ["cache"], [1]], ["cache", 21, "comesFrom", ["cache"], [1]], ["result", 23, "comesFrom", ["result"], [14]], ["result", 24, "comesFrom", ["result"], [14]], ["m", 30, "comesFrom", ["m"], [27]], ["m", 32, "comesFrom", ["m"], [27]], ["m", 35, "comesFrom", ["m"], [27]], ["m", 38, "comesFrom", ["m"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::465", "code": "#include \"stack.h\"\n#include <iostream>\n\nusing namespace std;\n\nstruct StackElement {\n\tchar value;\n\tStackElement *next;\n};\n\nstruct Stack {\n\tStackElement *head;\n};\n\nStack *createStack()\n{\n\tStack *newElement = new Stack;\n\tnewElement->head = nullptr;\n\treturn newElement;\n}\n\nvoid push(Stack *stack, char value)\n{\n\tStackElement* newElement = new StackElement;\n\tnewElement->value = value;\n\tnewElement->next = stack->head;\n\tstack->head = newElement;\n}\n\nchar pop(Stack *stack)\n{\n\tStackElement* newHead = stack->head->next;\n\tchar val = stack->head->value;\n\tdelete stack->head;\n\tstack->head = newHead;\n\treturn val;\n}\n\nbool isEmpty(Stack *stack)\n{\n\treturn !stack->head;\n}\n\nvoid deleteStack(Stack *stack)\n{\n\twhile (!isEmpty(stack))\n\t{\n\t\tStackElement *temp = stack->head;\n\t\tstack->head = stack->head->next;\n\t\tdelete temp;\n\t}\n\tdelete stack;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "stack", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "struct", "ĠStack", "Element", "Ġ{", "Ċ", "ĉ", "char", "Ġvalue", ";", "Ċ", "ĉ", "Stack", "Element", "Ġ*", "next", ";", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠStack", "Ġ{", "Ċ", "ĉ", "Stack", "Element", "Ġ*", "head", ";", "Ċ", "};", "Ċ", "Ċ", "Stack", "Ġ*", "create", "Stack", "()", "Ċ", "{", "Ċ", "ĉ", "Stack", "Ġ*", "new", "Element", "Ġ=", "Ġnew", "ĠStack", ";", "Ċ", "ĉ", "new", "Element", "->", "head", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "ĉ", "return", "Ġnew", "Element", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpush", "(", "Stack", "Ġ*", "stack", ",", "Ġchar", "Ġvalue", ")", "Ċ", "{", "Ċ", "ĉ", "Stack", "Element", "*", "Ġnew", "Element", "Ġ=", "Ġnew", "ĠStack", "Element", ";", "Ċ", "ĉ", "new", "Element", "->", "value", "Ġ=", "Ġvalue", ";", "Ċ", "ĉ", "new", "Element", "->", "next", "Ġ=", "Ġstack", "->", "head", ";", "Ċ", "ĉ", "stack", "->", "head", "Ġ=", "Ġnew", "Element", ";", "Ċ", "}", "Ċ", "Ċ", "char", "Ġpop", "(", "Stack", "Ġ*", "stack", ")", "Ċ", "{", "Ċ", "ĉ", "Stack", "Element", "*", "Ġnew", "Head", "Ġ=", "Ġstack", "->", "head", "->", "next", ";", "Ċ", "ĉ", "char", "Ġval", "Ġ=", "Ġstack", "->", "head", "->", "value", ";", "Ċ", "ĉ", "delete", "Ġstack", "->", "head", ";", "Ċ", "ĉ", "stack", "->", "head", "Ġ=", "Ġnew", "Head", ";", "Ċ", "ĉ", "return", "Ġval", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "Ġis", "Empty", "(", "Stack", "Ġ*", "stack", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ!", "stack", "->", "head", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdelete", "Stack", "(", "Stack", "Ġ*", "stack", ")", "Ċ", "{", "Ċ", "ĉ", "while", "Ġ(!", "is", "Empty", "(", "stack", "))", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Stack", "Element", "Ġ*", "temp", "Ġ=", "Ġstack", "->", "head", ";", "Ċ", "ĉ", "ĉ", "stack", "->", "head", "Ġ=", "Ġstack", "->", "head", "->", "next", ";", "Ċ", "ĉ", "ĉ", "delete", "Ġtemp", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "delete", "Ġstack", ";", "Ċ", "}"], "dataflow_graph": [["value", 14, "comesFrom", ["value"], [11]], ["value", 15, "comesFrom", ["value"], [11]], ["value", 32, "comesFrom", ["value"], [11]], ["val", 38, "comesFrom", ["val"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::466", "code": "#include <stdio.h>\n#include <cxxabi.h>\n\n#include \"kernel.hpp\"\n\nusing namespace raft;\n\nstd::size_t kernel::kernel_count( 0 );\n\n/** default **/\nkernel::kernel() : kernel_id( kernel::kernel_count )\n{\n   kernel::kernel_count++;\n};\n\n/** existing memory **/\nkernel::kernel( void * const ptr, \n                const std::size_t nbytes ) : \n   input(  this, ptr, nbytes ),\n   output( this, ptr, nbytes ),\n   kernel_id( kernel::kernel_count )\n{\n}\n\nkernel::~kernel()\n{\n\n}\n\n\nstd::size_t\nkernel::get_id()\n{\n   return( kernel_id );\n}\n\nstd::size_t\nkernel::addPort()\n{\n   return( 0 );\n}\n   \nvoid \nkernel::lock()\n{\n   /** does nothing, just need a base impl **/\n   return;\n}\n\nvoid \nkernel::unlock()\n{\n   /** does nothing, just need a base impl **/\n   return;\n}\n\n//std::string\n//kernel::getName()\n//{\n//   int status( 0 );\n//   const std::string name_a( \n//      abi::__cxa_demangle( typeid( *(this) ).name(), 0, 0, &status ) );\n//\n//}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "c", "xx", "abi", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "kernel", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġraft", ";", "Ċ", "Ċ", "std", "::", "size", "_", "t", "Ġkernel", "::", "kernel", "_", "count", "(", "Ġ0", "Ġ);", "Ċ", "Ċ", "/**", "Ġdefault", "Ġ**", "/", "Ċ", "kernel", "::", "kernel", "()", "Ġ:", "Ġkernel", "_", "id", "(", "Ġkernel", "::", "kernel", "_", "count", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġkernel", "::", "kernel", "_", "count", "++;", "Ċ", "};", "Ċ", "Ċ", "/**", "Ġexisting", "Ġmemory", "Ġ**", "/", "Ċ", "kernel", "::", "kernel", "(", "Ġvoid", "Ġ*", "Ġconst", "Ġptr", ",", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "size", "_", "t", "Ġn", "bytes", "Ġ)", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġinput", "(", "Ġ", "Ġthis", ",", "Ġptr", ",", "Ġn", "bytes", "Ġ),", "Ċ", "Ġ", "Ġ", "Ġoutput", "(", "Ġthis", ",", "Ġptr", ",", "Ġn", "bytes", "Ġ),", "Ċ", "Ġ", "Ġ", "Ġkernel", "_", "id", "(", "Ġkernel", "::", "kernel", "_", "count", "Ġ)", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "kernel", "::", "~", "kernel", "()", "Ċ", "{", "Ċ", "Ċ", "}", "ĊĊ", "Ċ", "std", "::", "size", "_", "t", "Ċ", "kernel", "::", "get", "_", "id", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġreturn", "(", "Ġkernel", "_", "id", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "std", "::", "size", "_", "t", "Ċ", "kernel", "::", "add", "Port", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġreturn", "(", "Ġ0", "Ġ);", "Ċ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ċ", "void", "Ġ", "Ċ", "kernel", "::", "lock", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ/**", "Ġdoes", "Ġnothing", ",", "Ġjust", "Ġneed", "Ġa", "Ġbase", "Ġimpl", "Ġ**", "/", "Ċ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġ", "Ċ", "kernel", "::", "un", "lock", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ/**", "Ġdoes", "Ġnothing", ",", "Ġjust", "Ġneed", "Ġa", "Ġbase", "Ġimpl", "Ġ**", "/", "Ċ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "}", "Ċ", "Ċ", "//", "std", "::", "string", "Ċ", "//", "kernel", "::", "get", "Name", "()", "Ċ", "//", "{", "Ċ", "//", "Ġ", "Ġ", "Ġint", "Ġstatus", "(", "Ġ0", "Ġ);", "Ċ", "//", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġname", "_", "a", "(", "Ġ", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġab", "i", "::", "__", "c", "xa", "_", "dem", "angle", "(", "Ġtype", "id", "(", "Ġ*", "(", "this", ")", "Ġ).", "name", "(),", "Ġ0", ",", "Ġ0", ",", "Ġ&", "status", "Ġ)", "Ġ);", "Ċ", "//", "Ċ", "//", "}", "Ċ"], "dataflow_graph": [["nbytes", 11, "comesFrom", ["nbytes"], [8]], ["nbytes", 14, "comesFrom", ["nbytes"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::467", "code": "/*******************************************************************************\n* Copyright 2017-2018 Intel Corporation\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*******************************************************************************/\n\n#include <stdio.h>\n#include <stdlib.h>\n\n#include \"self/self.hpp\"\n\nnamespace self {\n\nint bench(int argc, char **argv, bool main_bench) {\n    (void)argv; (void)main_bench;\n\n    SAFE(argc == 0 ? OK : FAIL, CRIT);\n    SAFE(bench_mode == CORR ? OK : FAIL, CRIT);\n\n    common();\n    conv();\n    bnorm();\n\n    auto &bs = benchdnn_stat;\n    return bs.tests == bs.passed ? OK : FAIL;\n}\n\n}\n", "code_tokens": ["Ġ/", "********************************", "********************************", "************", "***", "Ċ", "*", "ĠCopyright", "Ġ2017", "-", "2018", "ĠIntel", "ĠCorporation", "Ċ", "*", "Ċ", "*", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "*", "Ċ", "*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "*", "Ċ", "*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "*", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "********************************", "********************************", "************", "***", "/", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "self", "/", "self", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġself", "Ġ{", "Ċ", "Ċ", "int", "Ġbench", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ",", "Ġbool", "Ġmain", "_", "bench", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(", "void", ")", "arg", "v", ";", "Ġ(", "void", ")", "main", "_", "bench", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠSAF", "E", "(", "arg", "c", "Ġ==", "Ġ0", "Ġ?", "ĠOK", "Ġ:", "ĠFA", "IL", ",", "ĠCR", "IT", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSAF", "E", "(", "bench", "_", "mode", "Ġ==", "ĠCOR", "R", "Ġ?", "ĠOK", "Ġ:", "ĠFA", "IL", ",", "ĠCR", "IT", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcommon", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconv", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġb", "norm", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġ&", "bs", "Ġ=", "Ġbench", "d", "nn", "_", "stat", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġb", "s", ".", "tests", "Ġ==", "Ġb", "s", ".", "pass", "ed", "Ġ?", "ĠOK", "Ġ:", "ĠFA", "IL", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["main_bench", 5, "comesFrom", ["main_bench"], [3]], ["argc", 7, "comesFrom", ["argc"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::468", "code": "class Solution {\r\npublic:\r\n    int getSum(int a, int b) {\r\n        while(b) {\r\n            int x=a^b; // 位异或实现不进位的位加\r\n            int y=(a&b)<<1; // 位与  右移1 实现进位\r\n            a=x,b=y;\r\n        }\r\n        return a;\r\n    }\r\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "č", "Ċ", "public", ":", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġget", "Sum", "(", "int", "Ġa", ",", "Ġint", "Ġb", ")", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "b", ")", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġx", "=", "a", "^", "b", ";", "Ġ//", "Ġ", "ä½", "į", "å¼", "Ĥ", "æĪ", "ĸ", "å®", "ŀ", "ç", "İ", "°", "ä¸į", "è¿", "Ľ", "ä½", "į", "çļĦ", "ä½", "į", "åĬ", "ł", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġy", "=(", "a", "&", "b", ")", "<<", "1", ";", "Ġ//", "Ġ", "ä½", "į", "ä¸", "İ", "Ġ", "Ġå", "ı", "³", "ç", "§", "»", "1", "Ġå", "®", "ŀ", "ç", "İ", "°", "è¿", "Ľ", "ä½", "į", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġa", "=", "x", ",", "b", "=", "y", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "};"], "dataflow_graph": [["b", 3, "comesFrom", ["b"], [2]], ["b", 6, "comesFrom", ["b"], [2]], ["b", 9, "comesFrom", ["b"], [2]], ["a", 5, "comesFrom", ["a"], [1]], ["a", 8, "comesFrom", ["a"], [1]], ["a", 14, "comesFrom", ["a"], [10]], ["x", 11, "comesFrom", ["x"], [4]], ["y", 13, "comesFrom", ["y"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::469", "code": "void jpeg_zigzag_scalar(const uint16_t* in, uint16_t* out) {\n    for (int i=0; i < 64; i++) {\n        unsigned index = zigzag_shuffle[i];\n        out[i] = in[index];\n    }\n}\n\nvoid jpeg_zigzag_scalar_unrolled4(const uint16_t* in, uint16_t* out) {\n    for (int i=0; i < 64; i += 4) {\n        unsigned index0 = zigzag_shuffle[i + 0];\n        unsigned index1 = zigzag_shuffle[i + 1];\n        unsigned index2 = zigzag_shuffle[i + 2];\n        unsigned index3 = zigzag_shuffle[i + 3];\n        out[i + 0] = in[index0];\n        out[i + 1] = in[index1];\n        out[i + 2] = in[index2];\n        out[i + 3] = in[index3];\n    }\n}\n", "code_tokens": ["Ġvoid", "Ġj", "peg", "_", "zig", "zag", "_", "sc", "al", "ar", "(", "const", "Ġuint", "16", "_", "t", "*", "Ġin", ",", "Ġuint", "16", "_", "t", "*", "Ġout", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "Ġ64", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġindex", "Ġ=", "Ġz", "ig", "zag", "_", "sh", "uffle", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "[", "i", "]", "Ġ=", "Ġin", "[", "index", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġj", "peg", "_", "zig", "zag", "_", "sc", "al", "ar", "_", "un", "rolled", "4", "(", "const", "Ġuint", "16", "_", "t", "*", "Ġin", ",", "Ġuint", "16", "_", "t", "*", "Ġout", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "Ġ64", ";", "Ġi", "Ġ+=", "Ġ4", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġindex", "0", "Ġ=", "Ġz", "ig", "zag", "_", "sh", "uffle", "[", "i", "Ġ+", "Ġ0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġindex", "1", "Ġ=", "Ġz", "ig", "zag", "_", "sh", "uffle", "[", "i", "Ġ+", "Ġ1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġindex", "2", "Ġ=", "Ġz", "ig", "zag", "_", "sh", "uffle", "[", "i", "Ġ+", "Ġ2", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġindex", "3", "Ġ=", "Ġz", "ig", "zag", "_", "sh", "uffle", "[", "i", "Ġ+", "Ġ3", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "[", "i", "Ġ+", "Ġ0", "]", "Ġ=", "Ġin", "[", "index", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "[", "i", "Ġ+", "Ġ1", "]", "Ġ=", "Ġin", "[", "index", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "[", "i", "Ġ+", "Ġ2", "]", "Ġ=", "Ġin", "[", "index", "2", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġout", "[", "i", "Ġ+", "Ġ3", "]", "Ġ=", "Ġin", "[", "index", "3", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 5, "comesFrom", ["i"], [3]], ["i", 8, "comesFrom", ["i"], [3]], ["i", 10, "comesFrom", ["i"], [3]], ["i", 17, "comesFrom", ["i"], [16]], ["i", 21, "comesFrom", ["i"], [18]], ["i", 24, "comesFrom", ["i"], [18]], ["i", 27, "comesFrom", ["i"], [18]], ["i", 30, "comesFrom", ["i"], [18]], ["i", 32, "comesFrom", ["i"], [18]], ["i", 36, "comesFrom", ["i"], [18]], ["i", 40, "comesFrom", ["i"], [18]], ["i", 44, "comesFrom", ["i"], [18]], ["index", 12, "comesFrom", ["index"], [6]], ["index0", 34, "comesFrom", ["index0"], [19]], ["index1", 38, "comesFrom", ["index1"], [22]], ["index2", 42, "comesFrom", ["index2"], [25]], ["index3", 46, "comesFrom", ["index3"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::470", "code": "﻿#include <string>\r\n#include <iostream>\r\n#include <istream>\r\n#include <stdio.h>      /* printf */\r\n#include <cstring>\r\n\r\n#include \"Walls.h\"\r\n\r\nusing namespace std;\r\n\r\nint main (int argc, char* argv[]) {\r\n\t\r\n\tbool visualise = false;\r\n\tbool testMode = false;\r\n\tfor (int i = 1; i < argc; i++) {\r\n\t\tif (strcmp(argv[i], \"-v\") == 0) visualise = true;\r\n\t\tif (strcmp(argv[i], \"-t\") == 0) testMode = true;\r\n\t}\r\n\t\r\n\tstd::vector<unsigned int> walls;\r\n\tif (testMode == false) {\r\n\t\tunsigned int val;\r\n\t\twhile ((std::cin.peek() !='\\n') && (std::cin>>val)) {\r\n\t\t\twalls.push_back(val);\r\n\t\t}\r\n\t} else {\r\n\t\twalls = Walls::generateWalls();\r\n\t\tWalls::printInput(walls);\r\n\t}\r\n\tWalls w(walls, visualise);\r\n\tlong long totalFilling = w.getFilling();\r\n\tprintf(\"%lld\\n\", totalFilling);\r\n\r\n\tif (visualise) {\r\n\t\tlong long dashes = w.printWalls();\r\n\t\tif (totalFilling == dashes) {\r\n\t\t\tprintf(\"[OK]\\n\");\r\n\t\t} else printf(\"[FAIL]\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "code_tokens": ["Ġï", "»", "¿", "#", "include", "Ġ<", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "Ġ<", "ist", "ream", ">", "č", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ/*", "Ġprintf", "Ġ*/", "č", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "W", "alls", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ġ{", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "bool", "Ġvisual", "ise", "Ġ=", "Ġfalse", ";", "č", "Ċ", "ĉ", "bool", "Ġtest", "Mode", "Ġ=", "Ġfalse", ";", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġarg", "c", ";", "Ġi", "++)", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "str", "cmp", "(", "arg", "v", "[", "i", "],", "Ġ\"-", "v", "\")", "Ġ==", "Ġ0", ")", "Ġvisual", "ise", "Ġ=", "Ġtrue", ";", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "str", "cmp", "(", "arg", "v", "[", "i", "],", "Ġ\"-", "t", "\")", "Ġ==", "Ġ0", ")", "Ġtest", "Mode", "Ġ=", "Ġtrue", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "č", "Ċ", "ĉ", "std", "::", "vector", "<", "unsigned", "Ġint", ">", "Ġwalls", ";", "č", "Ċ", "ĉ", "if", "Ġ(", "test", "Mode", "Ġ==", "Ġfalse", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "unsigned", "Ġint", "Ġval", ";", "č", "Ċ", "ĉ", "ĉ", "while", "Ġ((", "std", "::", "cin", ".", "pe", "ek", "()", "Ġ!", "='", "\\", "n", "')", "Ġ&&", "Ġ(", "std", "::", "cin", ">>", "val", "))", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "w", "alls", ".", "push", "_", "back", "(", "val", ");", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "Ġelse", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "w", "alls", "Ġ=", "ĠWalls", "::", "gener", "ate", "W", "alls", "();", "č", "Ċ", "ĉ", "ĉ", "W", "alls", "::", "print", "Input", "(", "w", "alls", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "W", "alls", "Ġw", "(", "w", "alls", ",", "Ġvisual", "ise", ");", "č", "Ċ", "ĉ", "long", "Ġlong", "Ġtotal", "F", "illing", "Ġ=", "Ġw", ".", "get", "F", "illing", "();", "č", "Ċ", "ĉ", "printf", "(\"", "%", "ll", "d", "\\", "n", "\",", "Ġtotal", "F", "illing", ");", "č", "Ċ", "č", "Ċ", "ĉ", "if", "Ġ(", "visual", "ise", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "long", "Ġlong", "Ġd", "ashes", "Ġ=", "Ġw", ".", "print", "W", "alls", "();", "č", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "total", "F", "illing", "Ġ==", "Ġd", "ashes", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "[", "OK", "]", "\\", "n", "\");", "č", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġprintf", "(\"", "[", "FA", "IL", "]", "\\", "n", "\");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 12, "comesFrom", ["i"], [6]], ["i", 16, "comesFrom", ["i"], [6]], ["argc", 8, "comesFrom", ["argc"], [2]], ["testMode", 19, "comesFrom", ["testMode"], [17]], ["val", 24, "comesFrom", ["val"], [20]], ["val", 27, "comesFrom", ["val"], [20]], ["walls", 25, "comesFrom", ["walls"], [18]], ["walls", 31, "comesFrom", ["walls"], [28]], ["totalFilling", 37, "comesFrom", ["totalFilling"], [33]], ["totalFilling", 42, "comesFrom", ["totalFilling"], [33]], ["visualise", 38, "comesFrom", ["visualise"], [13]], ["dashes", 43, "comesFrom", ["dashes"], [39]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::471", "code": "#include <apps_sfdl_gen/bounded_loop_v_inp_gen.h>\n#include <apps_sfdl_hw/bounded_loop_v_inp_gen_hw.h>\n#include <apps_sfdl_gen/bounded_loop_cons.h>\n\n//This file will NOT be overwritten by the code generator, if it already\n//exists. make clean will also not remove this file.\n\nbounded_loopVerifierInpGenHw::bounded_loopVerifierInpGenHw(Venezia* v_)\n{\n  v = v_;\n  compiler_implementation.v = v_;\n}\n\n//Refer to apps_sfdl_gen/bounded_loop_cons.h for constants to use when generating input.\nvoid bounded_loopVerifierInpGenHw::create_input(mpq_t* input_q, int num_inputs)\n{\n  //Default implementation is provided by compiler\n  compiler_implementation.create_input(input_q, num_inputs);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "apps", "_", "s", "fd", "l", "_", "gen", "/", "b", "ounded", "_", "loop", "_", "v", "_", "in", "p", "_", "gen", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "apps", "_", "s", "fd", "l", "_", "hw", "/", "b", "ounded", "_", "loop", "_", "v", "_", "in", "p", "_", "gen", "_", "hw", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "apps", "_", "s", "fd", "l", "_", "gen", "/", "b", "ounded", "_", "loop", "_", "cons", ".", "h", ">", "Ċ", "Ċ", "//", "This", "Ġfile", "Ġwill", "ĠNOT", "Ġbe", "Ġoverw", "ritten", "Ġby", "Ġthe", "Ġcode", "Ġgenerator", ",", "Ġif", "Ġit", "Ġalready", "Ċ", "//", "ex", "ists", ".", "Ġmake", "Ġclean", "Ġwill", "Ġalso", "Ġnot", "Ġremove", "Ġthis", "Ġfile", ".", "Ċ", "Ċ", "b", "ounded", "_", "loop", "Ver", "ifier", "In", "p", "Gen", "H", "w", "::", "b", "ounded", "_", "loop", "Ver", "ifier", "In", "p", "Gen", "H", "w", "(", "V", "enez", "ia", "*", "Ġv", "_", ")", "Ċ", "{", "Ċ", "Ġ", "Ġv", "Ġ=", "Ġv", "_", ";", "Ċ", "Ġ", "Ġcompiler", "_", "im", "plementation", ".", "v", "Ġ=", "Ġv", "_", ";", "Ċ", "}", "Ċ", "Ċ", "//", "Refer", "Ġto", "Ġapps", "_", "s", "fd", "l", "_", "gen", "/", "b", "ounded", "_", "loop", "_", "cons", ".", "h", "Ġfor", "Ġconstants", "Ġto", "Ġuse", "Ġwhen", "Ġgenerating", "Ġinput", ".", "Ċ", "void", "Ġbounded", "_", "loop", "Ver", "ifier", "In", "p", "Gen", "H", "w", "::", "create", "_", "input", "(", "mp", "q", "_", "t", "*", "Ġinput", "_", "q", ",", "Ġint", "Ġnum", "_", "input", "s", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "Default", "Ġimplementation", "Ġis", "Ġprovided", "Ġby", "Ġcompiler", "Ċ", "Ġ", "Ġcompiler", "_", "im", "plementation", ".", "create", "_", "input", "(", "input", "_", "q", ",", "Ġnum", "_", "input", "s", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["v", 5, "comesFrom", ["v"], [2]], ["num_inputs", 13, "comesFrom", ["num_inputs"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::472", "code": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmp(const void *a,const void *b)\r\n{\r\n\treturn *(int *)a>*(int *)b;\r\n}\r\n\r\nint main()\r\n{\r\n\tint p,i=0;\r\n\tint a[20];\r\n\twhile(scanf(\"%d\",&p),p+1)\r\n\t{\r\n\t\tif(p)\r\n\t\t{\r\n\t\t\ta[i++]=p;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ti--;\r\n\t\t\tint cn=0;\r\n\t\t\tqsort(a,i,sizeof(a[0]),cmp);\r\n\t\t\tfor(int j=1;j<i;j++)\r\n\t\t\t{\r\n\t\t\t\tfor(int k=0;k<j;k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(2*a[k]==a[j])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcn++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\",cn);\r\n\t\t\ti=0;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "<", "std", "io", ".", "h", ">", "č", "Ċ", "#", "include", "<", "std", "lib", ".", "h", ">", "č", "Ċ", "int", "Ġc", "mp", "(", "const", "Ġvoid", "Ġ*", "a", ",", "const", "Ġvoid", "Ġ*", "b", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġ*", "(", "int", "Ġ*)", "a", ">", "*", "(", "int", "Ġ*)", "b", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġp", ",", "i", "=", "0", ";", "č", "Ċ", "ĉ", "int", "Ġa", "[", "20", "];", "č", "Ċ", "ĉ", "while", "(", "scan", "f", "(\"", "%", "d", "\",", "&", "p", "),", "p", "+", "1", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "if", "(", "p", ")", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "a", "[", "i", "++", "]=", "p", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "continue", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "else", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "i", "--", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "int", "Ġc", "n", "=", "0", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "q", "sort", "(", "a", ",", "i", ",", "size", "of", "(", "a", "[", "0", "]),", "cmp", ");", "č", "Ċ", "ĉ", "ĉ", "ĉ", "for", "(", "int", "Ġj", "=", "1", ";", "j", "<", "i", ";", "j", "++)", "č", "Ċ", "ĉ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "for", "(", "int", "Ġk", "=", "0", ";", "k", "<", "j", ";", "k", "++)", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "2", "*", "a", "[", "k", "]", "==", "a", "[", "j", "])", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "cn", "++;", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "cn", ");", "č", "Ċ", "ĉ", "ĉ", "ĉ", "i", "=", "0", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["p", 10, "comesFrom", ["p"], [6]], ["p", 11, "comesFrom", ["p"], [6]], ["p", 12, "comesFrom", ["p"], [6]], ["p", 15, "comesFrom", ["p"], [6]], ["i", 14, "comesFrom", ["i"], [7]], ["i", 16, "comesFrom", ["i"], [7]], ["i", 20, "comesFrom", ["i"], [7]], ["i", 25, "comesFrom", ["i"], [7]], ["j", 24, "comesFrom", ["j"], [23]], ["j", 26, "comesFrom", ["j"], [23]], ["j", 29, "comesFrom", ["j"], [23]], ["j", 34, "comesFrom", ["j"], [23]], ["k", 28, "comesFrom", ["k"], [27]], ["k", 30, "comesFrom", ["k"], [27]], ["k", 32, "comesFrom", ["k"], [27]], ["cn", 35, "comesFrom", ["cn"], [17]], ["cn", 37, "comesFrom", ["cn"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::473", "code": "/*\n   Copyright (C) 1997,1998,1999\n   Kenji Hiranabe, Eiwa System Management, Inc.\n\n   This program is free software.\n   Implemented by Kenji Hiranabe(hiranabe@esm.co.jp),\n   conforming to the Java(TM) 3D API specification by Sun Microsystems.\n\n   Permission to use, copy, modify, distribute and sell this software\n   and its documentation for any purpose is hereby granted without fee,\n   provided that the above copyright notice appear in all copies and\n   that both that copyright notice and this permission notice appear\n   in supporting documentation. Kenji Hiranabe and Eiwa System Management,Inc.\n   makes no representations about the suitability of this software for any\n   purpose.  It is provided \"AS IS\" with NO WARRANTY.\n*/\n#include \"Vector2.h\"\n#include \"Tuple2.h\"\n#include \"Point2.h\"\n\n#ifdef VM_INCLUDE_NAMESPACE\nusing namespace kh_vecmath;\n#endif\n\n/**\n * test-2 for Vector2\n */\n#ifdef TESTALL\nint test_2() {\n#else\nint main(int, char**) {\n#endif\n    Point2d p1(1,2);\n    Point2d p2(4,6);\n\n    // distance\n    Point2d::value_type d = p1.distance(p2);\n    assert(fabs(d - 5) < 1.0e-5);\n\n    // distance L1\n    d = p1.distanceL1(p2);\n    assert(d == 7);\n\n    // distance Linf\n    d = p1.distanceLinf(p2);\n    assert(d == 4);\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ1997", ",", "1998", ",", "1999", "Ċ", "Ġ", "Ġ", "ĠKen", "ji", "ĠHir", "an", "abe", ",", "ĠE", "i", "wa", "ĠSystem", "ĠManagement", ",", "ĠInc", ".", "ĊĊ", "Ġ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ".", "Ċ", "Ġ", "Ġ", "ĠIm", "ple", "mented", "Ġby", "ĠKen", "ji", "ĠHir", "an", "abe", "(", "h", "ir", "an", "abe", "@", "esm", ".", "co", ".", "jp", "),", "Ċ", "Ġ", "Ġ", "Ġcon", "forming", "Ġto", "Ġthe", "ĠJava", "(", "TM", ")", "Ġ3", "D", "ĠAPI", "Ġspecification", "Ġby", "ĠSun", "ĠMicro", "system", "s", ".", "ĊĊ", "Ġ", "Ġ", "ĠPer", "mission", "Ġto", "Ġuse", ",", "Ġcopy", ",", "Ġmodify", ",", "Ġdistribute", "Ġand", "Ġsell", "Ġthis", "Ġsoftware", "Ċ", "Ġ", "Ġ", "Ġand", "Ġits", "Ġdocumentation", "Ġfor", "Ġany", "Ġpurpose", "Ġis", "Ġhereby", "Ġgranted", "Ġwithout", "Ġfee", ",", "Ċ", "Ġ", "Ġ", "Ġprovided", "Ġthat", "Ġthe", "Ġabove", "Ġcopyright", "Ġnotice", "Ġappear", "Ġin", "Ġall", "Ġcopies", "Ġand", "Ċ", "Ġ", "Ġ", "Ġthat", "Ġboth", "Ġthat", "Ġcopyright", "Ġnotice", "Ġand", "Ġthis", "Ġpermission", "Ġnotice", "Ġappear", "Ċ", "Ġ", "Ġ", "Ġin", "Ġsupporting", "Ġdocumentation", ".", "ĠKen", "ji", "ĠHir", "an", "abe", "Ġand", "ĠE", "i", "wa", "ĠSystem", "ĠManagement", ",", "Inc", ".", "Ċ", "Ġ", "Ġ", "Ġmakes", "Ġno", "Ġrepresentations", "Ġabout", "Ġthe", "Ġsuit", "ability", "Ġof", "Ġthis", "Ġsoftware", "Ġfor", "Ġany", "Ċ", "Ġ", "Ġ", "Ġpurpose", ".", "Ġ", "ĠIt", "Ġis", "Ġprovided", "Ġ\"", "AS", "ĠIS", "\"", "Ġwith", "ĠNO", "ĠWARRANT", "Y", ".", "Ċ", "*/", "Ċ", "#", "include", "Ġ\"", "Vector", "2", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "T", "uple", "2", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Point", "2", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "def", "ĠVM", "_", "IN", "CL", "U", "DE", "_", "N", "AMES", "P", "ACE", "Ċ", "using", "Ġnamespace", "Ġkh", "_", "vec", "math", ";", "Ċ", "#", "endif", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġtest", "-", "2", "Ġfor", "ĠVector", "2", "Ċ", "Ġ*/", "Ċ", "#", "if", "def", "ĠTEST", "ALL", "Ċ", "int", "Ġtest", "_", "2", "()", "Ġ{", "Ċ", "#", "else", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**", ")", "Ġ{", "Ċ", "#", "endif", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPoint", "2", "d", "Ġp", "1", "(", "1", ",", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPoint", "2", "d", "Ġp", "2", "(", "4", ",", "6", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġdistance", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPoint", "2", "d", "::", "value", "_", "type", "Ġd", "Ġ=", "Ġp", "1", ".", "distance", "(", "p", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "f", "abs", "(", "d", "Ġ-", "Ġ5", ")", "Ġ<", "Ġ1", ".", "0", "e", "-", "5", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġdistance", "ĠL", "1", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "Ġ=", "Ġp", "1", ".", "distance", "L", "1", "(", "p", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "d", "Ġ==", "Ġ7", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġdistance", "ĠLin", "f", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "Ġ=", "Ġp", "1", ".", "distance", "L", "inf", "(", "p", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "d", "Ġ==", "Ġ4", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["p1", 8, "comesFrom", ["p1"], [5]], ["p1", 15, "comesFrom", ["p1"], [5]], ["p1", 21, "comesFrom", ["p1"], [5]], ["p2", 10, "comesFrom", ["p2"], [6]], ["p2", 17, "comesFrom", ["p2"], [6]], ["p2", 23, "comesFrom", ["p2"], [6]], ["d", 13, "comesFrom", ["d"], [7]], ["d", 19, "comesFrom", ["d"], [14]], ["d", 25, "comesFrom", ["d"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::474", "code": "//Copyright (c) 2008-2016 Emil Dotchevski and Reverge Studios, Inc.\n\n//Distributed under the Boost Software License, Version 1.0. (See accompanying\n//file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#ifdef BOOST_QVM_TEST_SINGLE_HEADER\n#   include BOOST_QVM_TEST_SINGLE_HEADER\n#else\n#   include <boost/qvm/vec_operations.hpp>\n#endif\n\n#include \"test_qvm_vector.hpp\"\n#include \"gold.hpp\"\n\nnamespace\n    {\n    template <int Dim>\n    void\n    test()\n        {\n        using namespace boost::qvm::sfinae;\n        test_qvm::vector<V1,Dim> x(42,1);\n        test_qvm::scalar_multiply_v(x.b,x.a,0.5f);\n        x/=2;\n        BOOST_QVM_TEST_EQ(x.a,x.b);\n        }\n    }\n\nint\nmain()\n    {\n    test<1>();\n    test<2>();\n    test<3>();\n    test<4>();\n    test<5>();\n    return boost::report_errors();\n    }\n", "code_tokens": ["Ġ//", "Copyright", "Ġ(", "c", ")", "Ġ2008", "-", "2016", "ĠEmil", "ĠDot", "che", "vs", "ki", "Ġand", "ĠRe", "ver", "ge", "ĠStudios", ",", "ĠInc", ".", "Ċ", "Ċ", "//", "Dist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġaccompanying", "Ċ", "//", "file", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "#", "if", "def", "ĠB", "OO", "ST", "_", "Q", "VM", "_", "T", "EST", "_", "S", "ING", "LE", "_", "HEAD", "ER", "Ċ", "#", "Ġ", "Ġ", "Ġinclude", "ĠB", "OO", "ST", "_", "Q", "VM", "_", "T", "EST", "_", "S", "ING", "LE", "_", "HEAD", "ER", "Ċ", "#", "else", "Ċ", "#", "Ġ", "Ġ", "Ġinclude", "Ġ<", "boost", "/", "q", "vm", "/", "vec", "_", "oper", "ations", ".", "h", "pp", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "_", "q", "vm", "_", "vector", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "gold", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtemplate", "Ġ<", "int", "ĠDim", ">", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġusing", "Ġnamespace", "Ġboost", "::", "q", "vm", "::", "sf", "ina", "e", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtest", "_", "q", "vm", "::", "vector", "<", "V", "1", ",", "Dim", ">", "Ġx", "(", "42", ",", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtest", "_", "q", "vm", "::", "sc", "al", "ar", "_", "mult", "ip", "ly", "_", "v", "(", "x", ".", "b", ",", "x", ".", "a", ",", "0", ".", "5", "f", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "/", "=", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "Q", "VM", "_", "T", "EST", "_", "E", "Q", "(", "x", ".", "a", ",", "x", ".", "b", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "<", "1", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "<", "2", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "<", "3", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "<", "4", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "<", "5", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġboost", "::", "report", "_", "errors", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ"], "dataflow_graph": [["x", 7, "comesFrom", ["x"], [5]], ["x", 9, "comesFrom", ["x"], [5]], ["x", 13, "comesFrom", ["x"], [11]], ["x", 15, "comesFrom", ["x"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::475", "code": "#include <SFML/Graphics.hpp>\n#include <cmath>\n#include \"Arrow.h\"\n\n#define PI 3.14159265\n\nint main()\n{\n\t//You can turn off antialiasing if your graphics card doesn't support it\n\tsf::ContextSettings context;\n\tcontext.antialiasingLevel = 4;\n\n\tsf::RenderWindow window(sf::VideoMode(400,400), \"Follow Mouse 1\", sf::Style::Titlebar | sf::Style::Close, context);\n\twindow.setFramerateLimit(60);\n\t\n\tArrow arrow = Arrow(50, 100);\n\n\tfloat angle = 45.0f;\n\tfloat speed = 3.0f;\n\tfloat dx = 0;\n\tfloat dy = 0;\n\tfloat vx = 0;\n\tfloat vy = 0;\n\n\twhile (window.isOpen())\n\t{\n\t\tsf::Event event;\n\t\twhile (window.pollEvent(event))\n\t\t{\n\t\t\tswitch (event.type)\n\t\t\t{\n\t\t\t\tcase sf::Event::Closed:\n\t\t\t\t\twindow.close();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tdx = event.mouseMove.x - arrow.GetX();\n\t\tdy = event.mouseMove.y - arrow.GetY();\n\t\tangle = std::atan2(dy, dx); //Radians\n\n\t\tvx = std::cos(angle) * speed;\n\t\tvy = std::sin(angle) * speed;\n\n\t\tarrow.SetRotation(angle * 180 / PI);\n\t\tarrow.Translate(vx, vy);\n\n\t\twindow.clear(sf::Color::White);\n\t\twindow.draw(arrow.shape);\n\t\twindow.display();\n\t}\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "SF", "ML", "/", "Graphics", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ\"", "Ar", "row", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠPI", "Ġ3", ".", "14", "159", "265", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "//", "You", "Ġcan", "Ġturn", "Ġoff", "Ġant", "ial", "i", "asing", "Ġif", "Ġyour", "Ġgraphics", "Ġcard", "Ġdoesn", "'t", "Ġsupport", "Ġit", "Ċ", "ĉ", "sf", "::", "Context", "Settings", "Ġcontext", ";", "Ċ", "ĉ", "context", ".", "ant", "ial", "i", "asing", "Level", "Ġ=", "Ġ4", ";", "ĊĊ", "ĉ", "sf", "::", "Render", "Window", "Ġwindow", "(", "sf", "::", "Video", "Mode", "(", "400", ",", "400", "),", "Ġ\"", "Follow", "ĠMouse", "Ġ1", "\",", "Ġs", "f", "::", "Style", "::", "Title", "bar", "Ġ|", "Ġs", "f", "::", "Style", "::", "Close", ",", "Ġcontext", ");", "Ċ", "ĉ", "window", ".", "set", "Fram", "erate", "Limit", "(", "60", ");", "Ċ", "ĉ", "Ċ", "ĉ", "Ar", "row", "Ġarrow", "Ġ=", "ĠArrow", "(", "50", ",", "Ġ100", ");", "ĊĊ", "ĉ", "float", "Ġangle", "Ġ=", "Ġ45", ".", "0", "f", ";", "Ċ", "ĉ", "float", "Ġspeed", "Ġ=", "Ġ3", ".", "0", "f", ";", "Ċ", "ĉ", "float", "Ġdx", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "float", "Ġdy", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "float", "Ġv", "x", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "float", "Ġv", "y", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "while", "Ġ(", "window", ".", "is", "Open", "())", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "sf", "::", "Event", "Ġevent", ";", "Ċ", "ĉ", "ĉ", "while", "Ġ(", "window", ".", "poll", "Event", "(", "event", "))", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "switch", "Ġ(", "event", ".", "type", ")", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "case", "Ġs", "f", "::", "Event", "::", "Cl", "osed", ":", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "window", ".", "close", "();", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "dx", "Ġ=", "Ġevent", ".", "mouse", "Move", ".", "x", "Ġ-", "Ġarrow", ".", "Get", "X", "();", "Ċ", "ĉ", "ĉ", "dy", "Ġ=", "Ġevent", ".", "mouse", "Move", ".", "y", "Ġ-", "Ġarrow", ".", "Get", "Y", "();", "Ċ", "ĉ", "ĉ", "angle", "Ġ=", "Ġstd", "::", "atan", "2", "(", "dy", ",", "Ġdx", ");", "Ġ//", "Rad", "ians", "ĊĊ", "ĉ", "ĉ", "v", "x", "Ġ=", "Ġstd", "::", "cos", "(", "angle", ")", "Ġ*", "Ġspeed", ";", "Ċ", "ĉ", "ĉ", "vy", "Ġ=", "Ġstd", "::", "sin", "(", "angle", ")", "Ġ*", "Ġspeed", ";", "ĊĊ", "ĉ", "ĉ", "arrow", ".", "Set", "R", "otation", "(", "angle", "Ġ*", "Ġ180", "Ġ/", "ĠPI", ");", "Ċ", "ĉ", "ĉ", "arrow", ".", "Trans", "late", "(", "v", "x", ",", "Ġv", "y", ");", "ĊĊ", "ĉ", "ĉ", "window", ".", "clear", "(", "sf", "::", "Color", "::", "White", ");", "Ċ", "ĉ", "ĉ", "window", ".", "draw", "(", "arrow", ".", "shape", ");", "Ċ", "ĉ", "ĉ", "window", ".", "display", "();", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["context", 3, "comesFrom", ["context"], [2]], ["context", 9, "comesFrom", ["context"], [2]], ["window", 10, "comesFrom", ["window"], [5]], ["window", 20, "comesFrom", ["window"], [5]], ["window", 23, "comesFrom", ["window"], [5]], ["window", 29, "comesFrom", ["window"], [5]], ["window", 63, "comesFrom", ["window"], [5]], ["window", 66, "comesFrom", ["window"], [5]], ["window", 70, "comesFrom", ["window"], [5]], ["event", 25, "comesFrom", ["event"], [22]], ["event", 26, "comesFrom", ["event"], [22]], ["event", 32, "comesFrom", ["event"], [22]], ["event", 38, "comesFrom", ["event"], [22]], ["arrow", 35, "comesFrom", ["arrow"], [12]], ["arrow", 41, "comesFrom", ["arrow"], [12]], ["arrow", 55, "comesFrom", ["arrow"], [12]], ["arrow", 59, "comesFrom", ["arrow"], [12]], ["arrow", 68, "comesFrom", ["arrow"], [12]], ["dy", 45, "comesFrom", ["dy"], [37]], ["dx", 46, "comesFrom", ["dx"], [31]], ["angle", 49, "comesFrom", ["angle"], [43]], ["angle", 53, "comesFrom", ["angle"], [43]], ["angle", 57, "comesFrom", ["angle"], [43]], ["speed", 50, "comesFrom", ["speed"], [15]], ["speed", 54, "comesFrom", ["speed"], [15]], ["vx", 61, "comesFrom", ["vx"], [47]], ["vy", 62, "comesFrom", ["vy"], [51]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::476", "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int n = 50000000;\n  vector<int> p(n + 1);\n  vector<int> prime;\n  for (int i = 2; i < n; ++i)\n    if (p[i] == 0) {\n      for (int j = 2 * i; j < n; j += i)\n        p[j] = 1;\n      prime.push_back(i);\n    }\n  int ans = 0;\n  for (int i = 0; i < prime.size(); ++i) {\n    if (prime[i] * 4 < n)\n      ++ans;\n    if (prime[i] * 16 < n)\n      ++ans;\n    if ((prime[i] - 3) % 4 == 0)\n      ++ans;\n  }\n  cout << ans << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġ5", "0000000", ";", "Ċ", "Ġ", "Ġvector", "<", "int", ">", "Ġp", "(", "n", "Ġ+", "Ġ1", ");", "Ċ", "Ġ", "Ġvector", "<", "int", ">", "Ġprime", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "p", "[", "i", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ2", "Ġ*", "Ġi", ";", "Ġj", "Ġ<", "Ġn", ";", "Ġj", "Ġ+=", "Ġi", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "[", "j", "]", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprime", ".", "push", "_", "back", "(", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġint", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġprime", ".", "size", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "prime", "[", "i", "]", "Ġ*", "Ġ4", "Ġ<", "Ġn", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "ans", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "prime", "[", "i", "]", "Ġ*", "Ġ16", "Ġ<", "Ġn", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "ans", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "prime", "[", "i", "]", "Ġ-", "Ġ3", ")", "Ġ%", "Ġ4", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "ans", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġans", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [2]], ["n", 8, "comesFrom", ["n"], [2]], ["n", 15, "comesFrom", ["n"], [2]], ["n", 31, "comesFrom", ["n"], [2]], ["n", 35, "comesFrom", ["n"], [2]], ["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 11, "comesFrom", ["i"], [6]], ["i", 13, "comesFrom", ["i"], [6]], ["i", 17, "comesFrom", ["i"], [6]], ["i", 22, "comesFrom", ["i"], [6]], ["i", 25, "comesFrom", ["i"], [24]], ["i", 28, "comesFrom", ["i"], [24]], ["i", 30, "comesFrom", ["i"], [24]], ["i", 34, "comesFrom", ["i"], [24]], ["i", 38, "comesFrom", ["i"], [24]], ["p", 10, "comesFrom", ["p"], [3]], ["p", 18, "comesFrom", ["p"], [3]], ["j", 14, "comesFrom", ["j"], [12]], ["j", 19, "comesFrom", ["j"], [16]], ["prime", 20, "comesFrom", ["prime"], [5]], ["prime", 26, "comesFrom", ["prime"], [5]], ["prime", 29, "comesFrom", ["prime"], [5]], ["prime", 33, "comesFrom", ["prime"], [5]], ["prime", 37, "comesFrom", ["prime"], [5]], ["ans", 32, "comesFrom", ["ans"], [23]], ["ans", 36, "comesFrom", ["ans"], [23]], ["ans", 39, "comesFrom", ["ans"], [23]], ["ans", 41, "comesFrom", ["ans"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::477", "code": "class Solution {\npublic:\n    int singleNonDuplicate(vector<int>& nums)\n    {\n\n        int len = nums.size();\n        int ret = 0;\n\n        for (int i = 0; i < len; i++) {\n            if (i + 1 < len && (nums[i] != nums[i + 1] && nums[i] != nums[i - 1])) {\n                return nums[i];\n            }\n            else if (i + 1 >= len && (nums[i] != nums[i - 1])) {\n                return nums[i];\n            }\n        }\n\n        return ret;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsingle", "Non", "Du", "pl", "icate", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "Ġ=", "Ġnum", "s", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġret", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlen", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "i", "Ġ+", "Ġ1", "Ġ<", "Ġlen", "Ġ&&", "Ġ(", "n", "ums", "[", "i", "]", "Ġ!=", "Ġnum", "s", "[", "i", "Ġ+", "Ġ1", "]", "Ġ&&", "Ġnum", "s", "[", "i", "]", "Ġ!=", "Ġnum", "s", "[", "i", "Ġ-", "Ġ1", "]", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġnum", "s", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "i", "Ġ+", "Ġ1", "Ġ>=", "Ġlen", "Ġ&&", "Ġ(", "n", "ums", "[", "i", "]", "Ġ!=", "Ġnum", "s", "[", "i", "Ġ-", "Ġ1", "]", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġnum", "s", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 10, "comesFrom", ["i"], [6]], ["i", 13, "comesFrom", ["i"], [6]], ["i", 15, "comesFrom", ["i"], [6]], ["i", 17, "comesFrom", ["i"], [6]], ["i", 19, "comesFrom", ["i"], [6]], ["i", 21, "comesFrom", ["i"], [6]], ["i", 22, "comesFrom", ["i"], [6]], ["i", 25, "comesFrom", ["i"], [6]], ["i", 27, "comesFrom", ["i"], [6]], ["i", 29, "comesFrom", ["i"], [6]], ["len", 8, "comesFrom", ["len"], [2]], ["len", 11, "comesFrom", ["len"], [2]], ["len", 23, "comesFrom", ["len"], [2]], ["ret", 30, "comesFrom", ["ret"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::478", "code": "// This example compiles using the new STL<ToolKit> from ObjectSpace, Inc.\n// STL<ToolKit> is the EASIEST to use STL that works on most platform/compiler \n// combinations, including cfront, Borland, Visual C++, C Set++, ObjectCenter, \n// and the latest Sun & HP compilers. Read the README.STL file in this \n// directory for more information, or send email to info@objectspace.com.\n// For an overview of STL, read the OVERVIEW.STL file in this directory.\n\n#include <iostream.h>\n#include <stl.h>\n\nint input1 [4] = { 6, 8, 10, 2 };\nint input2 [4] = { 4, 2, 11, 3 };\n\nint main ()\n{\n  int output [4];\n  transform (input1, input1 + 4, input2, output, modulus<int> ());\n  for (int i = 0; i < 4; i++)\n    cout << output[i] << endl;\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠThis", "Ġexample", "Ġcomp", "iles", "Ġusing", "Ġthe", "Ġnew", "ĠSTL", "<", "Tool", "Kit", ">", "Ġfrom", "ĠObject", "Space", ",", "ĠInc", ".", "Ċ", "//", "ĠSTL", "<", "Tool", "Kit", ">", "Ġis", "Ġthe", "ĠE", "AS", "I", "EST", "Ġto", "Ġuse", "ĠSTL", "Ġthat", "Ġworks", "Ġon", "Ġmost", "Ġplatform", "/", "comp", "iler", "Ġ", "Ċ", "//", "Ġcombinations", ",", "Ġincluding", "Ġc", "front", ",", "ĠBor", "land", ",", "ĠVisual", "ĠC", "++", ",", "ĠC", "ĠSet", "++", ",", "ĠObject", "Center", ",", "Ġ", "Ċ", "//", "Ġand", "Ġthe", "Ġlatest", "ĠSun", "Ġ&", "ĠHP", "Ġcomp", "ilers", ".", "ĠRead", "Ġthe", "ĠREAD", "ME", ".", "ST", "L", "Ġfile", "Ġin", "Ġthis", "Ġ", "Ċ", "//", "Ġdirectory", "Ġfor", "Ġmore", "Ġinformation", ",", "Ġor", "Ġsend", "Ġemail", "Ġto", "Ġinfo", "@", "object", "space", ".", "com", ".", "Ċ", "//", "ĠFor", "Ġan", "Ġoverview", "Ġof", "ĠSTL", ",", "Ġread", "Ġthe", "ĠOVER", "VIEW", ".", "ST", "L", "Ġfile", "Ġin", "Ġthis", "Ġdirectory", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "st", "l", ".", "h", ">", "Ċ", "Ċ", "int", "Ġinput", "1", "Ġ[", "4", "]", "Ġ=", "Ġ{", "Ġ6", ",", "Ġ8", ",", "Ġ10", ",", "Ġ2", "Ġ};", "Ċ", "int", "Ġinput", "2", "Ġ[", "4", "]", "Ġ=", "Ġ{", "Ġ4", ",", "Ġ2", ",", "Ġ11", ",", "Ġ3", "Ġ};", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġoutput", "Ġ[", "4", "];", "Ċ", "Ġ", "Ġtransform", "Ġ(", "input", "1", ",", "Ġinput", "1", "Ġ+", "Ġ4", ",", "Ġinput", "2", ",", "Ġoutput", ",", "Ġmod", "ulus", "<", "int", ">", "Ġ());", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ4", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġoutput", "[", "i", "]", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 11, "comesFrom", ["i"], [10]], ["i", 12, "comesFrom", ["i"], [10]], ["i", 15, "comesFrom", ["i"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::479", "code": "/*************************************************************\\\n * Triple.cpp                                                *\n * This file was created by Jeremy Greenburg                 *\n * As part of The God Core game for the University of        *\n * Tennessee at Martin's University Scholars Organization    *\n *                                                           *\n * This file contains the definition of the TwoD class       *\n * For more information, see Triple.h                        *\n\\*************************************************************/\n\n#include \"Triple.h\"\n\nTriple makeTrip(double _a, double _b, double _c)\n{\n\tTriple ret;\n\tret.a = _a;\n\tret.b = _b;\n\tret.c = _c;\n\n\treturn ret;\n}", "code_tokens": ["Ġ/", "********************************", "****************", "********", "*****", "\\", "Ċ", "Ġ*", "ĠTriple", ".", "cpp", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġwas", "Ġcreated", "Ġby", "ĠJeremy", "ĠGreen", "burg", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠAs", "Ġpart", "Ġof", "ĠThe", "ĠGod", "ĠCore", "Ġgame", "Ġfor", "Ġthe", "ĠUniversity", "Ġof", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠTennessee", "Ġat", "ĠMartin", "'s", "ĠUniversity", "ĠScholars", "ĠOrganization", "Ġ", "Ġ", "Ġ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġcontains", "Ġthe", "Ġdefinition", "Ġof", "Ġthe", "ĠTwo", "D", "Ġclass", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "Ċ", "Ġ*", "ĠFor", "Ġmore", "Ġinformation", ",", "Ġsee", "ĠTriple", ".", "h", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "Ċ", "\\", "********************************", "****************", "************", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Tri", "ple", ".", "h", "\"", "Ċ", "Ċ", "Tri", "ple", "Ġmake", "T", "rip", "(", "double", "Ġ_", "a", ",", "Ġdouble", "Ġ_", "b", ",", "Ġdouble", "Ġ_", "c", ")", "Ċ", "{", "Ċ", "ĉ", "Tri", "ple", "Ġret", ";", "Ċ", "ĉ", "ret", ".", "a", "Ġ=", "Ġ_", "a", ";", "Ċ", "ĉ", "ret", ".", "b", "Ġ=", "Ġ_", "b", ";", "Ċ", "ĉ", "ret", ".", "c", "Ġ=", "Ġ_", "c", ";", "ĊĊ", "ĉ", "return", "Ġret", ";", "Ċ", "}"], "dataflow_graph": [["ret", 5, "comesFrom", ["ret"], [4]], ["ret", 8, "comesFrom", ["ret"], [4]], ["ret", 11, "comesFrom", ["ret"], [4]], ["ret", 14, "comesFrom", ["ret"], [4]], ["_a", 7, "comesFrom", ["_a"], [1]], ["_b", 10, "comesFrom", ["_b"], [2]], ["_c", 13, "comesFrom", ["_c"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::480", "code": "/* This file is part of the KDE project\n   Copyright (C) 2010 KO GmbH <jos.van.den.oever@kogmbh.com>\n\n   This library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Library General Public\n   License as published by the Free Software Foundation; either\n   version 2 of the License, or (at your option) any later version.\n\n   This library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Library General Public License for more details.\n\n   You should have received a copy of the GNU Library General Public License\n   along with this library; see the file COPYING.LIB.  If not, write to\n   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n * Boston, MA 02110-1301, USA.\n*/\n#include \"combinedview.h\"\n#include <QtGui/QApplication>\n#include <QtGui/QPixmap>\n\nint\nmain(int argc, char** argv) {\n    //QApplication::setGraphicsSystem(\"opengl\");\n    QApplication app(argc, argv);\n//    QPixmapCache::setCacheLimit(100000);\n\n    CombinedView cv;\n    cv.resize(630, 410);\n    cv.show();\n    if (argc > 1) {\n        cv.openFile(argv[1]);\n    }\n    return app.exec();\n}\n", "code_tokens": ["Ġ/*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠKDE", "Ġproject", "Ċ", "Ġ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠKO", "ĠG", "mb", "H", "Ġ<", "j", "os", ".", "van", ".", "den", ".", "o", "ever", "@", "k", "og", "mb", "h", ".", "com", ">", "ĊĊ", "Ġ", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLibrary", "ĠGeneral", "ĠPublic", "Ċ", "Ġ", "Ġ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ", "Ġ", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "Ġ", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ", "Ġ", "ĠLibrary", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "Ġ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLibrary", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", ".", "LIB", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġwrite", "Ġto", "Ċ", "Ġ", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠFranklin", "ĠStreet", ",", "ĠFifth", "ĠFloor", ",", "Ċ", "Ġ*", "ĠBoston", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "*/", "Ċ", "#", "include", "Ġ\"", "comb", "ined", "view", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "t", "Gu", "i", "/", "Q", "Application", ">", "Ċ", "#", "include", "Ġ<", "Q", "t", "Gu", "i", "/", "Q", "P", "ix", "map", ">", "Ċ", "Ċ", "int", "Ċ", "main", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Q", "Application", "::", "set", "Graphics", "System", "(\"", "op", "eng", "l", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Application", "Ġapp", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "//", "Ġ", "Ġ", "Ġ", "ĠQ", "P", "ix", "map", "Cache", "::", "set", "Cache", "Limit", "(", "100", "000", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠCombined", "View", "Ġc", "v", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "v", ".", "res", "ize", "(", "630", ",", "Ġ410", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "v", ".", "show", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arg", "c", "Ġ>", "Ġ1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "v", ".", "open", "File", "(", "arg", "v", "[", "1", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġapp", ".", "exec", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["cv", 5, "comesFrom", ["cv"], [4]], ["cv", 7, "comesFrom", ["cv"], [4]], ["cv", 10, "comesFrom", ["cv"], [4]], ["argc", 9, "comesFrom", ["argc"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::481", "code": "#include \"muscle.h\"\n\n#if\t\t!defined(__linux__) && !defined(_MSC_VER) && !defined(__MACH__)\n\ndouble GetNAN()\n\t{\n\treturn 0.0;\n\t}\n\ndouble g_dNAN = GetNAN();\n\nvoid chkmem(const char szMsg[])\n\t{\n\t}\n\nvoid Break()\n\t{\n\t}\n\nchar szCmdLine[4096];\n\nconst char *GetCmdLine()\n\t{\n\treturn \"muscle\";\n\t}\n\ndouble GetMemUseMB()\n\t{\n\treturn 100.0;\n\t}\n\nvoid SaveCmdLine(int argc, char *argv[])\n\t{\n\tfor (int i = 0; i < argc; ++i)\n\t\t{\n\t\tif (i > 0)\n\t\t\tstrcat(szCmdLine, \" \");\n\t\tstrcat(szCmdLine, argv[i]);\n\t\t}\n\t}\n\ndouble GetPeakMemUseMB()\n\t{\n\treturn 100.0;\n\t}\n\ndouble GetCPUGHz()\n\t{\n\treturn 2.0;\n\t}\n\nvoid CheckMemUse()\n\t{\n\t}\n\ndouble GetRAMSizeMB()\n\t{\n\treturn 500.0;\n\t}\n\n#endif\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "mus", "cle", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "ĉ", "ĉ", "!", "defined", "(", "__", "linux", "__", ")", "Ġ&&", "Ġ!", "defined", "(_", "MS", "C", "_", "VER", ")", "Ġ&&", "Ġ!", "defined", "(", "__", "M", "ACH", "__", ")", "Ċ", "Ċ", "double", "ĠGet", "N", "AN", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġ0", ".", "0", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "double", "Ġg", "_", "d", "N", "AN", "Ġ=", "ĠGet", "N", "AN", "();", "Ċ", "Ċ", "void", "Ġch", "k", "mem", "(", "const", "Ġchar", "Ġs", "z", "Msg", "[", "])", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "void", "ĠBreak", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "char", "Ġs", "z", "Cmd", "Line", "[", "40", "96", "];", "Ċ", "Ċ", "const", "Ġchar", "Ġ*", "Get", "Cmd", "Line", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġ\"", "mus", "cle", "\";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "double", "ĠGet", "Mem", "Use", "MB", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġ100", ".", "0", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "void", "ĠSave", "Cmd", "Line", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "ĉ", "{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġarg", "c", ";", "Ġ++", "i", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "i", "Ġ>", "Ġ0", ")", "Ċ", "ĉ", "ĉ", "ĉ", "str", "cat", "(", "s", "z", "Cmd", "Line", ",", "Ġ\"", "Ġ\"", ");", "Ċ", "ĉ", "ĉ", "str", "cat", "(", "s", "z", "Cmd", "Line", ",", "Ġarg", "v", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "Ċ", "double", "ĠGet", "Pe", "ak", "Mem", "Use", "MB", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġ100", ".", "0", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "double", "ĠGet", "CPU", "GHz", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġ2", ".", "0", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "void", "ĠCheck", "Mem", "Use", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "Ċ", "double", "ĠGet", "RAM", "Size", "MB", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġ500", ".", "0", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "#", "endif", "ĊĊ"], "dataflow_graph": [["i", 16, "comesFrom", ["i"], [15]], ["i", 18, "comesFrom", ["i"], [15]], ["i", 19, "comesFrom", ["i"], [15]], ["i", 25, "comesFrom", ["i"], [15]], ["argc", 17, "comesFrom", ["argc"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::482", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/guardduty/model/ListDetectorsRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n#include <aws/core/http/URI.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\n#include <utility>\n\nusing namespace Aws::GuardDuty::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\nusing namespace Aws::Http;\n\nListDetectorsRequest::ListDetectorsRequest() : \n    m_maxResults(0),\n    m_maxResultsHasBeenSet(false),\n    m_nextTokenHasBeenSet(false)\n{\n}\n\nAws::String ListDetectorsRequest::SerializePayload() const\n{\n  return {};\n}\n\nvoid ListDetectorsRequest::AddQueryStringParameters(URI& uri) const\n{\n    Aws::StringStream ss;\n    if(m_maxResultsHasBeenSet)\n    {\n      ss << m_maxResults;\n      uri.AddQueryStringParameter(\"maxResults\", ss.str());\n      ss.str(\"\");\n    }\n\n    if(m_nextTokenHasBeenSet)\n    {\n      ss << m_nextToken;\n      uri.AddQueryStringParameter(\"nextToken\", ss.str());\n      ss.str(\"\");\n    }\n\n}\n\n\n\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "guard", "duty", "/", "model", "/", "List", "Detect", "ors", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "J", "son", "Serial", "izer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "http", "/", "URI", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "st", "l", "/", "AW", "S", "String", "Stream", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Guard", "D", "uty", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", "::", "J", "son", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Http", ";", "Ċ", "Ċ", "List", "Detect", "ors", "Request", "::", "List", "Detect", "ors", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "max", "Results", "(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "max", "Results", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "next", "Token", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠList", "Detect", "ors", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ{", "};", "Ċ", "}", "Ċ", "Ċ", "void", "ĠList", "Detect", "ors", "Request", "::", "Add", "Query", "String", "Parameters", "(", "URI", "&", "Ġur", "i", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAw", "s", "::", "String", "Stream", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "_", "max", "Results", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġm", "_", "max", "Results", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġur", "i", ".", "Add", "Query", "String", "Parameter", "(\"", "max", "Results", "\",", "Ġss", ".", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", ".", "str", "(\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "_", "next", "Token", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġm", "_", "next", "Token", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġur", "i", ".", "Add", "Query", "String", "Parameter", "(\"", "next", "Token", "\",", "Ġss", ".", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", ".", "str", "(\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["ss", 13, "comesFrom", ["ss"], [11]], ["ss", 17, "comesFrom", ["ss"], [11]], ["ss", 19, "comesFrom", ["ss"], [11]], ["ss", 22, "comesFrom", ["ss"], [11]], ["ss", 26, "comesFrom", ["ss"], [11]], ["ss", 28, "comesFrom", ["ss"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::483", "code": "// Copyright 2019 Google LLC.\n// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n#include \"tools/fiddle/examples.h\"\n// HASH=10172fca71b9dbdcade772513ffeb27e\nREG_FIDDLE(Image_makeShader_2, 256, 256, false, 5) {\nvoid draw(SkCanvas* canvas) {\n    SkMatrix matrix;\n    matrix.setRotate(45);\n    matrix.postTranslate(125, 30);\n    SkPaint paint;\n    paint.setShader(image->makeShader(&matrix));\n    canvas->drawPaint(paint);\n}\n}  // END FIDDLE\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2019", "ĠGoogle", "ĠLLC", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "#", "include", "Ġ\"", "tools", "/", "f", "iddle", "/", "ex", "amples", ".", "h", "\"", "Ċ", "//", "ĠH", "ASH", "=", "101", "72", "f", "ca", "71", "b", "9", "db", "dc", "ade", "77", "25", "13", "ff", "eb", "27", "e", "Ċ", "REG", "_", "F", "ID", "D", "LE", "(", "Image", "_", "make", "Sh", "ader", "_", "2", ",", "Ġ256", ",", "Ġ256", ",", "Ġfalse", ",", "Ġ5", ")", "Ġ{", "Ċ", "void", "Ġdraw", "(", "Sk", "Can", "vas", "*", "Ġcanvas", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "Matrix", "Ġmatrix", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmatrix", ".", "set", "Rot", "ate", "(", "45", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmatrix", ".", "post", "Trans", "late", "(", "125", ",", "Ġ30", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "P", "aint", "Ġpaint", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpaint", ".", "set", "Sh", "ader", "(", "image", "->", "make", "Sh", "ader", "(&", "mat", "rix", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcanvas", "->", "draw", "P", "aint", "(", "p", "aint", ");", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "ĠEND", "ĠF", "ID", "D", "LE", "Ċ"], "dataflow_graph": [["matrix", 5, "comesFrom", ["matrix"], [4]], ["matrix", 7, "comesFrom", ["matrix"], [4]], ["matrix", 14, "comesFrom", ["matrix"], [4]], ["paint", 10, "comesFrom", ["paint"], [9]], ["paint", 17, "comesFrom", ["paint"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::484", "code": "#include \"GCS_Plane.h\"\n#include \"Plane.h\"\n\nbool GCS_Plane::cli_enabled() const\n{\n#if CLI_ENABLED == ENABLED\n    return plane.g.cli_enabled;\n#else\n    return false;\n#endif\n}\n\nAP_HAL::BetterStream* GCS_Plane::cliSerial() {\n    return plane.cliSerial;\n}\n\nvoid GCS_Plane::send_airspeed_calibration(const Vector3f &vg)\n{\n    for (uint8_t i=0; i<num_gcs(); i++) {\n        if (_chan[i].initialised) {\n            if (HAVE_PAYLOAD_SPACE((mavlink_channel_t)i, AIRSPEED_AUTOCAL)) {\n                plane.airspeed.log_mavlink_send((mavlink_channel_t)i, vg);\n            }\n        }\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "G", "CS", "_", "Pl", "ane", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Pl", "ane", ".", "h", "\"", "Ċ", "Ċ", "bool", "ĠG", "CS", "_", "Pl", "ane", "::", "cli", "_", "enabled", "()", "Ġconst", "Ċ", "{", "Ċ", "#", "if", "ĠCLI", "_", "EN", "AB", "LED", "Ġ==", "ĠE", "NA", "BL", "ED", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġplane", ".", "g", ".", "cli", "_", "enabled", ";", "Ċ", "#", "else", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "#", "endif", "Ċ", "}", "Ċ", "Ċ", "AP", "_", "H", "AL", "::", "Better", "Stream", "*", "ĠG", "CS", "_", "Pl", "ane", "::", "cli", "Serial", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġplane", ".", "cli", "Serial", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠG", "CS", "_", "Pl", "ane", "::", "send", "_", "airs", "peed", "_", "cal", "ib", "ration", "(", "const", "ĠVector", "3", "f", "Ġ&", "vg", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "uint", "8", "_", "t", "Ġi", "=", "0", ";", "Ġi", "<", "num", "_", "g", "cs", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(_", "chan", "[", "i", "].", "initial", "ised", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "HA", "VE", "_", "PA", "Y", "LOAD", "_", "SP", "ACE", "((", "m", "av", "link", "_", "channel", "_", "t", ")", "i", ",", "ĠAIR", "SP", "EED", "_", "AUT", "OC", "AL", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġplane", ".", "airs", "peed", ".", "log", "_", "m", "av", "link", "_", "send", "((", "m", "av", "link", "_", "channel", "_", "t", ")", "i", ",", "Ġv", "g", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["i", 16, "comesFrom", ["i"], [11]], ["i", 19, "comesFrom", ["i"], [11]], ["i", 24, "comesFrom", ["i"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::485", "code": "/*\n *  Copyright 2016 The WebRTC Project Authors. All rights reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree. An additional intellectual property rights grant can be found\n *  in the file PATENTS.  All contributing project authors may\n *  be found in the AUTHORS file in the root of the source tree.\n */\n\n#include \"webrtc/base/task_queue_posix.h\"\n\n#include \"webrtc/base/checks.h\"\n#include \"webrtc/base/task_queue.h\"\n\nnamespace rtc {\nnamespace internal {\npthread_key_t g_queue_ptr_tls = 0;\n\nvoid InitializeTls() {\n  RTC_CHECK(pthread_key_create(&g_queue_ptr_tls, nullptr) == 0);\n}\n\npthread_key_t GetQueuePtrTls() {\n  static pthread_once_t init_once = PTHREAD_ONCE_INIT;\n  RTC_CHECK(pthread_once(&init_once, &InitializeTls) == 0);\n  return g_queue_ptr_tls;\n}\n\nAutoSetCurrentQueuePtr::AutoSetCurrentQueuePtr(TaskQueue* q)\n    : prev_(TaskQueue::Current()) {\n  pthread_setspecific(GetQueuePtrTls(), q);\n}\n\nAutoSetCurrentQueuePtr::~AutoSetCurrentQueuePtr() {\n  pthread_setspecific(GetQueuePtrTls(), prev_);\n}\n\n}  // namespace internal\n}  // namespace rtc\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ2016", "ĠThe", "ĠWeb", "R", "TC", "ĠProject", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ċ", "Ġ*", "Ġ", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġof", "Ġthe", "Ġsource", "Ċ", "Ġ*", "Ġ", "Ġtree", ".", "ĠAn", "Ġadditional", "Ġintellectual", "Ġproperty", "Ġrights", "Ġgrant", "Ġcan", "Ġbe", "Ġfound", "Ċ", "Ġ*", "Ġ", "Ġin", "Ġthe", "Ġfile", "ĠPAT", "ENTS", ".", "Ġ", "ĠAll", "Ġcontributing", "Ġproject", "Ġauthors", "Ġmay", "Ċ", "Ġ*", "Ġ", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠAUTH", "ORS", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġof", "Ġthe", "Ġsource", "Ġtree", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "we", "br", "tc", "/", "base", "/", "task", "_", "queue", "_", "pos", "ix", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "we", "br", "tc", "/", "base", "/", "checks", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "we", "br", "tc", "/", "base", "/", "task", "_", "queue", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġr", "tc", "Ġ{", "Ċ", "names", "pace", "Ġinternal", "Ġ{", "Ċ", "p", "thread", "_", "key", "_", "t", "Ġg", "_", "queue", "_", "ptr", "_", "t", "ls", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "void", "ĠInitial", "ize", "T", "ls", "()", "Ġ{", "Ċ", "Ġ", "ĠR", "TC", "_", "CHECK", "(", "p", "thread", "_", "key", "_", "create", "(&", "g", "_", "queue", "_", "ptr", "_", "t", "ls", ",", "Ġnull", "ptr", ")", "Ġ==", "Ġ0", ");", "Ċ", "}", "Ċ", "Ċ", "p", "thread", "_", "key", "_", "t", "ĠGet", "Queue", "Ptr", "T", "ls", "()", "Ġ{", "Ċ", "Ġ", "Ġstatic", "Ġp", "thread", "_", "once", "_", "t", "Ġinit", "_", "once", "Ġ=", "ĠP", "TH", "READ", "_", "ON", "CE", "_", "IN", "IT", ";", "Ċ", "Ġ", "ĠR", "TC", "_", "CHECK", "(", "p", "thread", "_", "once", "(&", "init", "_", "once", ",", "Ġ&", "Initial", "ize", "T", "ls", ")", "Ġ==", "Ġ0", ");", "Ċ", "Ġ", "Ġreturn", "Ġg", "_", "queue", "_", "ptr", "_", "t", "ls", ";", "Ċ", "}", "Ċ", "Ċ", "Auto", "Set", "Current", "Queue", "Ptr", "::", "Auto", "Set", "Current", "Queue", "Ptr", "(", "Task", "Queue", "*", "Ġq", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġprev", "_(", "Task", "Queue", "::", "Current", "())", "Ġ{", "Ċ", "Ġ", "Ġp", "thread", "_", "sets", "pe", "cific", "(", "Get", "Queue", "Ptr", "T", "ls", "(),", "Ġq", ");", "Ċ", "}", "Ċ", "Ċ", "Auto", "Set", "Current", "Queue", "Ptr", "::", "~", "Auto", "Set", "Current", "Queue", "Ptr", "()", "Ġ{", "Ċ", "Ġ", "Ġp", "thread", "_", "sets", "pe", "cific", "(", "Get", "Queue", "Ptr", "T", "ls", "(),", "Ġprev", "_", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġinternal", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġr", "tc", "Ċ"], "dataflow_graph": [["g_queue_ptr_tls", 4, "comesFrom", ["g_queue_ptr_tls"], [0]], ["g_queue_ptr_tls", 12, "comesFrom", ["g_queue_ptr_tls"], [0]], ["init_once", 10, "comesFrom", ["init_once"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::486", "code": "/*\n* Copyright 2010-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\").\n* You may not use this file except in compliance with the License.\n* A copy of the License is located at\n*\n*  http://aws.amazon.com/apache2.0\n*\n* or in the \"license\" file accompanying this file. This file is distributed\n* on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n* express or implied. See the License for the specific language governing\n* permissions and limitations under the License.\n*/\n#include <aws/cloudformation/model/Capability.h>\n#include <aws/core/utils/HashingUtils.h>\n\nusing namespace Aws::Utils;\n\nstatic const int CAPABILITY_IAM_HASH = HashingUtils::HashString(\"CAPABILITY_IAM\");\n\nnamespace Aws\n{\nnamespace CloudFormation\n{\nnamespace Model\n{\nnamespace CapabilityMapper\n{\nCapability GetCapabilityForName(const Aws::String& name)\n{\n  int hashCode = HashingUtils::HashString(name.c_str());\n\n  if (hashCode == CAPABILITY_IAM_HASH)\n  {\n    return Capability::CAPABILITY_IAM;\n  }\n\n  return Capability::NOT_SET;\n}\n\nAws::String GetNameForCapability(Capability value)\n{\n  switch(value)\n  {\n  case Capability::CAPABILITY_IAM:\n    return \"CAPABILITY_IAM\";\n  default:\n    return \"\";\n  }\n}\n\n} // namespace CapabilityMapper\n} // namespace Model\n} // namespace CloudFormation\n} // namespace Aws\n", "code_tokens": ["Ġ/*", "Ċ", "*", "ĠCopyright", "Ġ2010", "-", "2015", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "*", "Ċ", "*", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\").", "Ċ", "*", "ĠYou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "*", "ĠA", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġis", "Ġlocated", "Ġat", "Ċ", "*", "Ċ", "*", "Ġ", "Ġhttp", "://", "aws", ".", "amazon", ".", "com", "/", "apache", "2", ".", "0", "Ċ", "*", "Ċ", "*", "Ġor", "Ġin", "Ġthe", "Ġ\"", "license", "\"", "Ġfile", "Ġaccompanying", "Ġthis", "Ġfile", ".", "ĠThis", "Ġfile", "Ġis", "Ġdistributed", "Ċ", "*", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ċ", "*", "Ġexpress", "Ġor", "Ġimplied", ".", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ċ", "*", "Ġpermissions", "Ġand", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "*/", "Ċ", "#", "include", "Ġ<", "aws", "/", "cloud", "formation", "/", "model", "/", "Cap", "ability", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "H", "ashing", "Ut", "ils", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "Ċ", "static", "Ġconst", "Ġint", "ĠCAP", "A", "BILITY", "_", "I", "AM", "_", "H", "ASH", "Ġ=", "ĠH", "ashing", "Ut", "ils", "::", "Hash", "String", "(\"", "CAP", "A", "BILITY", "_", "I", "AM", "\");", "Ċ", "Ċ", "names", "pace", "ĠAw", "s", "Ċ", "{", "Ċ", "names", "pace", "ĠCloud", "Form", "ation", "Ċ", "{", "Ċ", "names", "pace", "ĠModel", "Ċ", "{", "Ċ", "names", "pace", "ĠCap", "ability", "M", "apper", "Ċ", "{", "Ċ", "Cap", "ability", "ĠGet", "Cap", "ability", "For", "Name", "(", "const", "ĠAw", "s", "::", "String", "&", "Ġname", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġhash", "Code", "Ġ=", "ĠH", "ashing", "Ut", "ils", "::", "Hash", "String", "(", "name", ".", "c", "_", "str", "());", "ĊĊ", "Ġ", "Ġif", "Ġ(", "hash", "Code", "Ġ==", "ĠCAP", "A", "BILITY", "_", "I", "AM", "_", "H", "ASH", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠCap", "ability", "::", "CAP", "A", "BILITY", "_", "I", "AM", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "ĠCap", "ability", "::", "NOT", "_", "SET", ";", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠGet", "Name", "For", "Cap", "ability", "(", "Cap", "ability", "Ġvalue", ")", "Ċ", "{", "Ċ", "Ġ", "Ġswitch", "(", "value", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġcase", "ĠCap", "ability", "::", "CAP", "A", "BILITY", "_", "I", "AM", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ\"", "CAP", "A", "BILITY", "_", "I", "AM", "\";", "Ċ", "Ġ", "Ġdefault", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ\"", "\";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠCap", "ability", "M", "apper", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠModel", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠCloud", "Form", "ation", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠAw", "s", "Ċ"], "dataflow_graph": [["hashCode", 9, "comesFrom", ["hashCode"], [5]], ["CAPABILITY_IAM_HASH", 10, "comesFrom", ["CAPABILITY_IAM_HASH"], [1]], ["value", 15, "comesFrom", ["value"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::487", "code": "// { dg-options -std=c++1z }\n\nauto addOne = [] (int n) {\n  return n + 1;\n};\nconstexpr int (*addOneFp)(int) = addOne;\nstatic_assert(addOneFp(3) == addOne(3), \"\");\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "options", "Ġ-", "std", "=", "c", "++", "1", "z", "Ġ}", "Ċ", "Ċ", "auto", "Ġadd", "One", "Ġ=", "Ġ[]", "Ġ(", "int", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġn", "Ġ+", "Ġ1", ";", "Ċ", "};", "Ċ", "const", "expr", "Ġint", "Ġ(*", "add", "One", "F", "p", ")(", "int", ")", "Ġ=", "Ġadd", "One", ";", "Ċ", "static", "_", "assert", "(", "add", "One", "F", "p", "(", "3", ")", "Ġ==", "Ġadd", "One", "(", "3", "),", "Ġ\"\"", ");", "Ċ"], "dataflow_graph": [["n", 2, "comesFrom", ["n"], [1]], ["addOne", 6, "comesFrom", ["addOne"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::488", "code": "// ---------------------------------------------------------------------\n//\n// Copyright (C) 2007 - 2017 by the deal.II authors\n//\n// This file is part of the deal.II library.\n//\n// The deal.II library is free software; you can use it, redistribute\n// it, and/or modify it under the terms of the GNU Lesser General\n// Public License as published by the Free Software Foundation; either\n// version 2.1 of the License, or (at your option) any later version.\n// The full text of the license can be found in the file LICENSE at\n// the top level of the deal.II distribution.\n//\n// ---------------------------------------------------------------------\n\n\n\n// check FullMatrix::add_row. like the full_matrix_* tests, but use\n// complex-valued matrices and vectors; this time we actually store complex values\n// in them\n\n\n#include \"../tests.h\"\n#include \"full_matrix_common.h\"\n\n\n\n\ntemplate <typename number>\nvoid\ncheck ()\n{\n  FullMatrix<std::complex<number> > m;\n  make_complex_matrix (m);\n  m.add_row (2, 3.141, 4, 2.7182, 3);\n  print_matrix (m);\n}\n\n", "code_tokens": ["Ġ//", "Ġ----------------------------------------------------------------", "-----", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "Ġ-", "Ġ2017", "Ġby", "Ġthe", "Ġdeal", ".", "II", "Ġauthors", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġlibrary", ".", "Ċ", "//", "Ċ", "//", "ĠThe", "Ġdeal", ".", "II", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġuse", "Ġit", ",", "Ġredist", "ribute", "Ċ", "//", "Ġit", ",", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "Ċ", "//", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "//", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "ĠThe", "Ġfull", "Ġtext", "Ġof", "Ġthe", "Ġlicense", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "ĠLIC", "ENSE", "Ġat", "Ċ", "//", "Ġthe", "Ġtop", "Ġlevel", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ----------------------------------------------------------------", "-----", "ĊĊ", "Ċ", "Ċ", "//", "Ġcheck", "ĠFull", "Matrix", "::", "add", "_", "row", ".", "Ġlike", "Ġthe", "Ġfull", "_", "mat", "rix", "_", "*", "Ġtests", ",", "Ġbut", "Ġuse", "Ċ", "//", "Ġcomplex", "-", "valued", "Ġmat", "rices", "Ġand", "Ġvectors", ";", "Ġthis", "Ġtime", "Ġwe", "Ġactually", "Ġstore", "Ġcomplex", "Ġvalues", "Ċ", "//", "Ġin", "Ġthem", "ĊĊ", "Ċ", "#", "include", "Ġ\"", "../", "tests", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "full", "_", "mat", "rix", "_", "common", ".", "h", "\"", "ĊĊ", "ĊĊ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "Ġnumber", ">", "Ċ", "void", "Ċ", "check", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "ĠFull", "Matrix", "<", "std", "::", "complex", "<", "number", ">", "Ġ>", "Ġm", ";", "Ċ", "Ġ", "Ġmake", "_", "complex", "_", "mat", "rix", "Ġ(", "m", ");", "Ċ", "Ġ", "Ġm", ".", "add", "_", "row", "Ġ(", "2", ",", "Ġ3", ".", "141", ",", "Ġ4", ",", "Ġ2", ".", "7", "182", ",", "Ġ3", ");", "Ċ", "Ġ", "Ġprint", "_", "mat", "rix", "Ġ(", "m", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["m", 3, "comesFrom", ["m"], [1]], ["m", 4, "comesFrom", ["m"], [1]], ["m", 7, "comesFrom", ["m"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::489", "code": "/*\n * fluorescence is a free, customizable Ultima Online client.\n * Copyright (C) 2011-2012, http://fluorescence-client.org\n\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n#include \"3a_skilllockchange.hpp\"\n\nnamespace fluo {\nnamespace net {\nnamespace packets {\n\nSkillLockChange::SkillLockChange(unsigned int skillId, unsigned int lockStatus) : Packet(0x3A, 6), skillId_(skillId_), lockStatus_(lockStatus) {\n}\n\nbool SkillLockChange::write(int8_t* buf, unsigned int len, unsigned int& index) const {\n    bool ret = true;\n\n    ret &= writePacketId(buf, len, index);\n    uint16_t lenHelper = 6;\n    ret &= PacketWriter::write(buf, len, index, lenHelper);\n    ret &= PacketWriter::write(buf, len, index, skillId_);\n    ret &= PacketWriter::write(buf, len, index, lockStatus_);\n\n    return ret;\n}\n\n}\n}\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġflu", "orescence", "Ġis", "Ġa", "Ġfree", ",", "Ġcustomizable", "ĠUlt", "ima", "ĠOnline", "Ġclient", ".", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "-", "2012", ",", "Ġhttp", "://", "flu", "orescence", "-", "client", ".", "org", "ĊĊ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "ĊĊ", "Ċ", "Ċ", "#", "include", "Ġ\"", "3", "a", "_", "skill", "lock", "change", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġflu", "o", "Ġ{", "Ċ", "names", "pace", "Ġnet", "Ġ{", "Ċ", "names", "pace", "Ġpackets", "Ġ{", "Ċ", "Ċ", "Skill", "Lock", "Change", "::", "Skill", "Lock", "Change", "(", "unsigned", "Ġint", "Ġskill", "Id", ",", "Ġunsigned", "Ġint", "Ġlock", "Status", ")", "Ġ:", "ĠPack", "et", "(", "0", "x", "3", "A", ",", "Ġ6", "),", "Ġskill", "Id", "_(", "skill", "Id", "_", "),", "Ġlock", "Status", "_(", "lock", "Status", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠSkill", "Lock", "Change", "::", "write", "(", "int", "8", "_", "t", "*", "Ġbuf", ",", "Ġunsigned", "Ġint", "Ġlen", ",", "Ġunsigned", "Ġint", "&", "Ġindex", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġret", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġret", "Ġ&", "=", "Ġwrite", "P", "acket", "Id", "(", "buf", ",", "Ġlen", ",", "Ġindex", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġuint", "16", "_", "t", "Ġlen", "Helper", "Ġ=", "Ġ6", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġret", "Ġ&", "=", "ĠPack", "et", "Writer", "::", "write", "(", "buf", ",", "Ġlen", ",", "Ġindex", ",", "Ġlen", "Helper", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġret", "Ġ&", "=", "ĠPack", "et", "Writer", "::", "write", "(", "buf", ",", "Ġlen", ",", "Ġindex", ",", "Ġskill", "Id", "_", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġret", "Ġ&", "=", "ĠPack", "et", "Writer", "::", "write", "(", "buf", ",", "Ġlen", ",", "Ġindex", ",", "Ġlock", "Status", "_", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["lockStatus", 7, "comesFrom", ["lockStatus"], [2]], ["len", 16, "comesFrom", ["len"], [10]], ["len", 22, "comesFrom", ["len"], [10]], ["len", 28, "comesFrom", ["len"], [10]], ["len", 34, "comesFrom", ["len"], [10]], ["lenHelper", 24, "comesFrom", ["lenHelper"], [18]], ["ret", 37, "comesFrom", ["ret"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::490", "code": "// { dg-options \"-std=gnu++11\" }\n\n// 2010-02-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n// Copyright (C) 2010-2016 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <forward_list>\n#include <testsuite_hooks.h>\n#include <testsuite_api.h>\n\nvoid test01()\n{\n  bool test __attribute__((unused)) = true;\n\n  std::forward_list<__gnu_test::NonCopyConstructible> fl(1000);\n  VERIFY( std::distance(fl.begin(), fl.end()) == 1000 );\n  for(auto it = fl.begin(); it != fl.end(); ++it)\n    VERIFY( *it == -1 );\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "11", "\"", "Ġ}", "Ċ", "Ċ", "//", "Ġ2010", "-", "02", "-", "01", "Ġ", "ĠPa", "olo", "ĠCar", "lin", "i", "Ġ", "Ġ<", "pa", "olo", ".", "car", "lin", "i", "@", "or", "acle", ".", "com", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "-", "2016", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "forward", "_", "list", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "api", ".", "h", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġstd", "::", "forward", "_", "list", "<", "__", "gnu", "_", "test", "::", "Non", "Copy", "Construct", "ible", ">", "Ġfl", "(", "1000", ");", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġstd", "::", "distance", "(", "fl", ".", "begin", "(),", "Ġfl", ".", "end", "())", "Ġ==", "Ġ1000", "Ġ);", "Ċ", "Ġ", "Ġfor", "(", "auto", "Ġit", "Ġ=", "Ġfl", ".", "begin", "();", "Ġit", "Ġ!=", "Ġfl", ".", "end", "();", "Ġ++", "it", ")", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġ*", "it", "Ġ==", "Ġ-", "1", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["fl", 6, "comesFrom", ["fl"], [3]], ["fl", 8, "comesFrom", ["fl"], [3]], ["fl", 11, "comesFrom", ["fl"], [3]], ["fl", 14, "comesFrom", ["fl"], [3]], ["it", 13, "comesFrom", ["it"], [10]], ["it", 16, "comesFrom", ["it"], [10]], ["it", 18, "comesFrom", ["it"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::491", "code": "// 2006-07-15  Paolo Carlini  <pcarlini@suse.de>\n\n// Copyright (C) 2006-2016 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 27.6.2.5.4 basic_ostream character inserters\n\n// { dg-options \"-DMAX_SIZE=50000\" { target simulator } }\n\n#ifndef MAX_SIZE\n#define MAX_SIZE 5000000\n#endif\n\n#include <ostream>\n#include <sstream>\n#include <testsuite_hooks.h>\n\n// libstdc++/28277\nvoid test01()\n{\n  using namespace std;\n  bool test __attribute__((unused)) = true;\n\n  wostringstream oss_01;\n  const string str_01(MAX_SIZE, 'a');\n\n  oss_01 << str_01.c_str();\n\n  VERIFY( oss_01.good() );\n  VERIFY( oss_01.str().size() == str_01.size() );\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ2006", "-", "07", "-", "15", "Ġ", "ĠPa", "olo", "ĠCar", "lin", "i", "Ġ", "Ġ<", "p", "car", "lin", "i", "@", "s", "use", ".", "de", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "-", "2016", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ27", ".", "6", ".", "2", ".", "5", ".", "4", "Ġbasic", "_", "ost", "ream", "Ġcharacter", "Ġins", "er", "ters", "Ċ", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "D", "MAX", "_", "SIZE", "=", "5", "0000", "\"", "Ġ{", "Ġtarget", "Ġsimulator", "Ġ}", "Ġ}", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠMAX", "_", "SIZE", "Ċ", "#", "define", "ĠMAX", "_", "SIZE", "Ġ5", "000000", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "include", "Ġ<", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "//", "Ġlib", "st", "dc", "++", "/", "28", "277", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġstd", ";", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġw", "ost", "ring", "stream", "Ġo", "ss", "_", "01", ";", "Ċ", "Ġ", "Ġconst", "Ġstring", "Ġstr", "_", "01", "(", "MAX", "_", "SIZE", ",", "Ġ'", "a", "');", "ĊĊ", "Ġ", "Ġo", "ss", "_", "01", "Ġ<<", "Ġstr", "_", "01", ".", "c", "_", "str", "();", "ĊĊ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġo", "ss", "_", "01", ".", "good", "()", "Ġ);", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġo", "ss", "_", "01", ".", "str", "().", "size", "()", "Ġ==", "Ġstr", "_", "01", ".", "size", "()", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["oss_01", 9, "comesFrom", ["oss_01"], [6]], ["oss_01", 13, "comesFrom", ["oss_01"], [6]], ["oss_01", 16, "comesFrom", ["oss_01"], [6]], ["str_01", 10, "comesFrom", ["str_01"], [7]], ["str_01", 19, "comesFrom", ["str_01"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::492", "code": "//===----------------------------------------------------------------------===//\n//\n// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n//\n//===----------------------------------------------------------------------===//\n\n// <ios>\n\n// template <class charT, class traits> class basic_ios\n\n// iostate exceptions() const;\n\n#include <ios>\n#include <streambuf>\n#include <cassert>\n\n#include \"test_macros.h\"\n\nstruct testbuf : public std::streambuf {};\n\nint main(int, char**)\n{\n    {\n        const std::ios ios(0);\n        assert(ios.exceptions() == std::ios::goodbit);\n    }\n    {\n        testbuf sb;\n        const std::ios ios(&sb);\n        assert(ios.exceptions() == std::ios::goodbit);\n    }\n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "//", "Ċ", "//", "ĠPart", "Ġof", "Ġthe", "ĠLL", "VM", "ĠProject", ",", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", "Ġv", "2", ".", "0", "Ġwith", "ĠLL", "VM", "ĠEx", "ceptions", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "ll", "vm", ".", "org", "/", "L", "IC", "ENSE", ".", "txt", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "//", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", "ĠWITH", "ĠLL", "VM", "-", "ex", "ception", "Ċ", "//", "Ċ", "//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "Ċ", "//", "Ġ<", "ios", ">", "Ċ", "Ċ", "//", "Ġtemplate", "Ġ<", "class", "Ġchar", "T", ",", "Ġclass", "Ġtraits", ">", "Ġclass", "Ġbasic", "_", "ios", "Ċ", "Ċ", "//", "Ġi", "ost", "ate", "Ġexceptions", "()", "Ġconst", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "ios", ">", "Ċ", "#", "include", "Ġ<", "stream", "buf", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "_", "mac", "ros", ".", "h", "\"", "Ċ", "Ċ", "struct", "Ġtest", "buf", "Ġ:", "Ġpublic", "Ġstd", "::", "stream", "buf", "Ġ{", "};", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "ios", "Ġi", "os", "(", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "ios", ".", "ex", "ceptions", "()", "Ġ==", "Ġstd", "::", "ios", "::", "good", "bit", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtest", "buf", "Ġs", "b", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "ios", "Ġi", "os", "(&", "sb", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "ios", ".", "ex", "ceptions", "()", "Ġ==", "Ġstd", "::", "ios", "::", "good", "bit", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["ios", 3, "comesFrom", ["ios"], [1]], ["ios", 10, "comesFrom", ["ios"], [7]], ["sb", 8, "comesFrom", ["sb"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::493", "code": "#include <cstdint>\n#include <assert.h>\n\n#pragma once\n\nnamespace ace {\n    template<typename T>\n    class singleton {\n    public:\n        static T & get() {\n            \n            if (_singletonInstance == nullptr) {\n                assert(_initialized == false);\n                _initialized = true;\n                _singletonInstance = new T();\n            }\n                \n            return *_singletonInstance;\n        }\n        static void release() {\n            delete _singletonInstance;\n        }\n    protected:\n        static T *_singletonInstance;\n        static bool _initialized;\n    };\n    template<typename T>\n    T* singleton<T>::_singletonInstance = nullptr;\n    template<typename T>\n    bool singleton<T>::_initialized = false;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "int", ">", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "Ċ", "#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "names", "pace", "Ġace", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtemplate", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "Ġ", "Ġ", "Ġ", "Ġclass", "Ġsingle", "ton", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstatic", "ĠT", "Ġ&", "Ġget", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(_", "sing", "leton", "Instance", "Ġ==", "Ġnull", "ptr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġassert", "(_", "initialized", "Ġ==", "Ġfalse", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "initialized", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "sing", "leton", "Instance", "Ġ=", "Ġnew", "ĠT", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ*", "_", "sing", "leton", "Instance", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġvoid", "Ġrelease", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġ_", "sing", "leton", "Instance", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprotected", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstatic", "ĠT", "Ġ*", "_", "sing", "leton", "Instance", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġbool", "Ġ_", "initialized", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtemplate", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "Ġ", "Ġ", "Ġ", "ĠT", "*", "Ġsingle", "ton", "<", "T", ">", "::", "_", "sing", "leton", "Instance", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtemplate", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġsingle", "ton", "<", "T", ">", "::", "_", "initialized", "Ġ=", "Ġfalse", ";", "Ċ", "}"], "dataflow_graph": [["_singletonInstance", 6, "comesFrom", ["_singletonInstance"], [5]], ["_singletonInstance", 8, "comesFrom", ["_singletonInstance"], [5]], ["_singletonInstance", 9, "comesFrom", ["_singletonInstance"], [5]], ["_singletonInstance", 11, "comesFrom", ["_singletonInstance"], [5]], ["_initialized", 10, "comesFrom", ["_initialized"], [4]], ["_initialized", 12, "comesFrom", ["_initialized"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::494", "code": "/************************************************************************\n**\n**  Copyright (C) 2010  Strahinja Markovic\n**\n**  This file is part of FlightCrew.\n**\n**  FlightCrew is free software: you can redistribute it and/or modify\n**  it under the terms of the GNU Lesser General Public License as published\n**  by the Free Software Foundation, either version 3 of the License, or\n**  (at your option) any later version.\n**\n**  FlightCrew is distributed in the hope that it will be useful,\n**  but WITHOUT ANY WARRANTY; without even the implied warranty of\n**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n**  GNU Lesser General Public License for more details.\n**\n**  You should have received a copy of the GNU Lesser General Public License\n**  along with FlightCrew.  If not, see <http://www.gnu.org/licenses/>.\n**\n*************************************************************************/\n\n#include <stdafx.h>\n#include \"ToursAllowedChildren.h\"\n\nnamespace FlightCrew\n{\n\nstd::vector< Result > ToursAllowedChildren::ValidateXml(\n    const xc::DOMDocument &document,\n    const fs::path& )\n{\n    std::vector< QName > allowed_children;\n\n    allowed_children.push_back( QName( \"tour\", OPF_XML_NAMESPACE ) );\n\n    return ValidateAllowedChildren( \n        QName( \"tours\", OPF_XML_NAMESPACE ), allowed_children, document );\n}\n\n} //namespace FlightCrew\n", "code_tokens": ["Ġ/", "********************************", "********************************", "********", "Ċ", "**", "Ċ", "**", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "Ġ", "ĠSt", "rah", "in", "ja", "ĠMark", "ovic", "Ċ", "**", "Ċ", "**", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠFlight", "Crew", ".", "Ċ", "**", "Ċ", "**", "Ġ", "ĠFlight", "Crew", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "**", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ċ", "**", "Ġ", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "**", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "**", "Ċ", "**", "Ġ", "ĠFlight", "Crew", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "**", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "**", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "**", "Ġ", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "**", "Ċ", "**", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "**", "Ġ", "Ġalong", "Ġwith", "ĠFlight", "Crew", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "**", "Ċ", "********************************", "********************************", "********", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "af", "x", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "T", "ours", "All", "owed", "Children", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠFlight", "Crew", "Ċ", "{", "Ċ", "Ċ", "std", "::", "vector", "<", "ĠResult", "Ġ>", "ĠTours", "All", "owed", "Children", "::", "Val", "idate", "X", "ml", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġx", "c", "::", "DOM", "Document", "Ġ&", "document", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġfs", "::", "path", "&", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "ĠQ", "Name", "Ġ>", "Ġallowed", "_", "children", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġallowed", "_", "children", ".", "push", "_", "back", "(", "ĠQ", "Name", "(", "Ġ\"", "t", "our", "\",", "ĠOP", "F", "_", "X", "ML", "_", "N", "AMES", "P", "ACE", "Ġ)", "Ġ);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠVal", "idate", "All", "owed", "Children", "(", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "Name", "(", "Ġ\"", "t", "ours", "\",", "ĠOP", "F", "_", "X", "ML", "_", "N", "AMES", "P", "ACE", "Ġ),", "Ġallowed", "_", "children", ",", "Ġdocument", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "names", "pace", "ĠFlight", "Crew", "Ċ"], "dataflow_graph": [["allowed_children", 3, "comesFrom", ["allowed_children"], [2]], ["allowed_children", 10, "comesFrom", ["allowed_children"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::495", "code": "#include <array>\n#include <string>\n\n#include \"merkletree/verifiable_map.h\"\n\n\nusing std::string;\nusing std::unique_ptr;\nusing std::vector;\nusing util::Status;\nusing util::StatusOr;\n\n\nnamespace cert_trans {\n\n\nVerifiableMap::VerifiableMap(SerialHasher* hasher)\n    : hasher_model_(CHECK_NOTNULL(hasher)->Create()), merkle_tree_(hasher) {\n}\n\n\nvoid VerifiableMap::Set(const string& key, const string& value) {\n  const SparseMerkleTree::Path path(PathFromKey(key));\n  merkle_tree_.SetLeaf(path, value);\n  values_[path] = value;\n}\n\n\nStatusOr<string> VerifiableMap::Get(const string& key) const {\n  const SparseMerkleTree::Path path(PathFromKey(key));\n  const auto it(values_.find(path));\n  if (it == values_.end()) {\n    return Status(util::error::NOT_FOUND, \"No such entry.\");\n  }\n  return it->second;\n}\n\n\nvector<string> VerifiableMap::InclusionProof(const string& key) {\n  return merkle_tree_.InclusionProof(PathFromKey(key));\n}\n\n\nSparseMerkleTree::Path VerifiableMap::PathFromKey(const string& key) const {\n  unique_ptr<SerialHasher> h(hasher_model_->Create());\n  h->Update(key);\n  return PathFromBytes(h->Final());\n}\n\n}  // namespace cert_trans\n", "code_tokens": ["Ġ#", "include", "Ġ<", "array", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "mer", "k", "let", "ree", "/", "ver", "ifiable", "_", "map", ".", "h", "\"", "ĊĊ", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "using", "Ġstd", "::", "unique", "_", "ptr", ";", "Ċ", "using", "Ġstd", "::", "vector", ";", "Ċ", "using", "Ġutil", "::", "Status", ";", "Ċ", "using", "Ġutil", "::", "Status", "Or", ";", "ĊĊ", "Ċ", "names", "pace", "Ġcert", "_", "trans", "Ġ{", "ĊĊ", "Ċ", "Ver", "ifiable", "Map", "::", "Ver", "ifiable", "Map", "(", "Serial", "Has", "her", "*", "Ġhas", "her", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġhas", "her", "_", "model", "_(", "CHECK", "_", "NOT", "NULL", "(", "has", "her", ")", "->", "Create", "()", "),", "Ġmer", "k", "le", "_", "tree", "_(", "has", "her", ")", "Ġ{", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠVer", "ifiable", "Map", "::", "Set", "(", "const", "Ġstring", "&", "Ġkey", ",", "Ġconst", "Ġstring", "&", "Ġvalue", ")", "Ġ{", "Ċ", "Ġ", "Ġconst", "ĠSp", "arse", "M", "erk", "le", "Tree", "::", "Path", "Ġpath", "(", "Path", "From", "Key", "(", "key", "));", "Ċ", "Ġ", "Ġmer", "k", "le", "_", "tree", "_.", "Set", "Le", "af", "(", "path", ",", "Ġvalue", ");", "Ċ", "Ġ", "Ġvalues", "_", "[", "path", "]", "Ġ=", "Ġvalue", ";", "Ċ", "}", "ĊĊ", "Ċ", "Status", "Or", "<", "string", ">", "ĠVer", "ifiable", "Map", "::", "Get", "(", "const", "Ġstring", "&", "Ġkey", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġconst", "ĠSp", "arse", "M", "erk", "le", "Tree", "::", "Path", "Ġpath", "(", "Path", "From", "Key", "(", "key", "));", "Ċ", "Ġ", "Ġconst", "Ġauto", "Ġit", "(", "values", "_.", "find", "(", "path", "));", "Ċ", "Ġ", "Ġif", "Ġ(", "it", "Ġ==", "Ġvalues", "_.", "end", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠStatus", "(", "util", "::", "error", "::", "NOT", "_", "F", "OUND", ",", "Ġ\"", "No", "Ġsuch", "Ġentry", ".\"", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġit", "->", "second", ";", "Ċ", "}", "ĊĊ", "Ċ", "vector", "<", "string", ">", "ĠVer", "ifiable", "Map", "::", "In", "clusion", "Proof", "(", "const", "Ġstring", "&", "Ġkey", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġmer", "k", "le", "_", "tree", "_.", "In", "clusion", "Proof", "(", "Path", "From", "Key", "(", "key", "));", "Ċ", "}", "ĊĊ", "Ċ", "S", "parse", "M", "erk", "le", "Tree", "::", "Path", "ĠVer", "ifiable", "Map", "::", "Path", "From", "Key", "(", "const", "Ġstring", "&", "Ġkey", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġunique", "_", "ptr", "<", "Serial", "Has", "her", ">", "Ġh", "(", "has", "her", "_", "model", "_", "->", "Create", "());", "Ċ", "Ġ", "Ġh", "->", "Update", "(", "key", ");", "Ċ", "Ġ", "Ġreturn", "ĠPath", "From", "Bytes", "(", "h", "->", "Final", "());", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġcert", "_", "trans", "Ċ"], "dataflow_graph": [["it", 31, "comesFrom", ["it"], [27]], ["it", 36, "comesFrom", ["it"], [27]], ["h", 49, "comesFrom", ["h"], [46]], ["h", 53, "comesFrom", ["h"], [46]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::496", "code": "// Copyright 2017 Dolphin Emulator Project\n// Licensed under GPLv2+\n// Refer to the license.txt file included.\n\n#include \"DolphinQt/Config/Mapping/HotkeyWii.h\"\n\n#include <QGroupBox>\n#include <QHBoxLayout>\n\n#include \"Core/HotkeyManager.h\"\n\nHotkeyWii::HotkeyWii(MappingWindow* window) : MappingWidget(window)\n{\n  CreateMainLayout();\n}\n\nvoid HotkeyWii::CreateMainLayout()\n{\n  m_main_layout = new QHBoxLayout();\n\n  m_main_layout->addWidget(CreateGroupBox(tr(\"Wii\"), HotkeyManagerEmu::GetHotkeyGroup(HKGP_WII)));\n\n  setLayout(m_main_layout);\n}\n\nInputConfig* HotkeyWii::GetConfig()\n{\n  return HotkeyManagerEmu::GetConfig();\n}\n\nvoid HotkeyWii::LoadSettings()\n{\n  HotkeyManagerEmu::LoadConfig();\n}\n\nvoid HotkeyWii::SaveSettings()\n{\n  HotkeyManagerEmu::GetConfig()->SaveConfig();\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2017", "ĠDolphin", "ĠEm", "ulator", "ĠProject", "Ċ", "//", "ĠLicensed", "Ġunder", "ĠGPL", "v", "2", "+", "Ċ", "//", "ĠRefer", "Ġto", "Ġthe", "Ġlicense", ".", "txt", "Ġfile", "Ġincluded", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "D", "olphin", "Q", "t", "/", "Config", "/", "M", "apping", "/", "Hot", "key", "W", "ii", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Group", "Box", ">", "Ċ", "#", "include", "Ġ<", "Q", "H", "Box", "Layout", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Core", "/", "Hot", "key", "Manager", ".", "h", "\"", "Ċ", "Ċ", "Hot", "key", "W", "ii", "::", "Hot", "key", "W", "ii", "(", "M", "apping", "Window", "*", "Ġwindow", ")", "Ġ:", "ĠM", "apping", "Widget", "(", "window", ")", "Ċ", "{", "Ċ", "Ġ", "ĠCreate", "Main", "Layout", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHot", "key", "W", "ii", "::", "Create", "Main", "Layout", "()", "Ċ", "{", "Ċ", "Ġ", "Ġm", "_", "main", "_", "layout", "Ġ=", "Ġnew", "ĠQ", "H", "Box", "Layout", "();", "ĊĊ", "Ġ", "Ġm", "_", "main", "_", "layout", "->", "add", "Widget", "(", "Create", "Group", "Box", "(", "tr", "(\"", "W", "ii", "\"),", "ĠHot", "key", "Manager", "Em", "u", "::", "Get", "Hot", "key", "Group", "(", "HK", "GP", "_", "W", "II", "))", ");", "ĊĊ", "Ġ", "Ġset", "Layout", "(", "m", "_", "main", "_", "layout", ");", "Ċ", "}", "Ċ", "Ċ", "Input", "Config", "*", "ĠHot", "key", "W", "ii", "::", "Get", "Config", "()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "ĠHot", "key", "Manager", "Em", "u", "::", "Get", "Config", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHot", "key", "W", "ii", "::", "Load", "Settings", "()", "Ċ", "{", "Ċ", "Ġ", "ĠHot", "key", "Manager", "Em", "u", "::", "Load", "Config", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHot", "key", "W", "ii", "::", "Save", "Settings", "()", "Ċ", "{", "Ċ", "Ġ", "ĠHot", "key", "Manager", "Em", "u", "::", "Get", "Config", "()", "->", "Save", "Config", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["m_main_layout", 7, "comesFrom", ["m_main_layout"], [6]], ["m_main_layout", 14, "comesFrom", ["m_main_layout"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::497", "code": "// Copyright (c) 2014, Facebook, Inc.  All rights reserved.\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n// This file implements the \"bridge\" between Java and C++ and enables\n// calling c++ rocksdb::Iterator methods from Java side.\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <jni.h>\n\n#include \"include/org_rocksdb_ColumnFamilyHandle.h\"\n#include \"rocksjni/portal.h\"\n\n/*\n * Class:     org_rocksdb_ColumnFamilyHandle\n * Method:    disposeInternal\n * Signature: (J)V\n */\nvoid Java_org_rocksdb_ColumnFamilyHandle_disposeInternal(\n    JNIEnv* env, jobject jobj, jlong handle) {\n  auto it = reinterpret_cast<rocksdb::ColumnFamilyHandle*>(handle);\n  delete it;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", ",", "ĠFacebook", ",", "ĠInc", ".", "Ġ", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠThis", "Ġsource", "Ġcode", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "ĠB", "SD", "-", "style", "Ġlicense", "Ġfound", "Ġin", "Ġthe", "Ċ", "//", "ĠLIC", "ENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġdirectory", "Ġof", "Ġthis", "Ġsource", "Ġtree", ".", "ĠAn", "Ġadditional", "Ġgrant", "Ċ", "//", "Ġof", "Ġpatent", "Ġrights", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠPAT", "ENTS", "Ġfile", "Ġin", "Ġthe", "Ġsame", "Ġdirectory", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġimplements", "Ġthe", "Ġ\"", "bridge", "\"", "Ġbetween", "ĠJava", "Ġand", "ĠC", "++", "Ġand", "Ġenables", "Ċ", "//", "Ġcalling", "Ġc", "++", "Ġrocks", "db", "::", "Iterator", "Ġmethods", "Ġfrom", "ĠJava", "Ġside", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "j", "ni", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "include", "/", "org", "_", "ro", "cks", "db", "_", "Column", "Family", "Handle", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ro", "cks", "j", "ni", "/", "port", "al", ".", "h", "\"", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠClass", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġorg", "_", "ro", "cks", "db", "_", "Column", "Family", "Handle", "Ċ", "Ġ*", "ĠMethod", ":", "Ġ", "Ġ", "Ġ", "Ġdispose", "Internal", "Ċ", "Ġ*", "ĠSignature", ":", "Ġ(", "J", ")", "V", "Ċ", "Ġ*/", "Ċ", "void", "ĠJava", "_", "org", "_", "ro", "cks", "db", "_", "Column", "Family", "Handle", "_", "dis", "pose", "Internal", "(", "Ċ", "Ġ", "Ġ", "Ġ", "ĠJ", "NI", "En", "v", "*", "Ġenv", ",", "Ġjob", "ject", "Ġjob", "j", ",", "Ġj", "long", "Ġhandle", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġit", "Ġ=", "Ġre", "interpret", "_", "cast", "<", "ro", "cks", "db", "::", "Column", "Family", "Handle", "*", ">(", "handle", ");", "Ċ", "Ġ", "Ġdelete", "Ġit", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["handle", 6, "comesFrom", ["handle"], [3]], ["it", 7, "comesFrom", ["it"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::498", "code": "// { dg-do run }\n// { dg-require-effective-target tls_runtime }\n\n#include <omp.h>\n\nextern \"C\" void abort (void);\n\nint thr = 32;\n#pragma omp threadprivate (thr)\n\nint\nmain (void)\n{\n  int l = 0;\n\n  omp_set_dynamic (0);\n  omp_set_num_threads (6);\n\n#pragma omp parallel copyin (thr) reduction (||:l)\n  {\n    l = thr != 32;\n    thr = omp_get_thread_num () + 11;\n  }\n\n  if (l || thr != 11)\n    abort ();\n\n#pragma omp parallel reduction (||:l)\n  l = thr != omp_get_thread_num () + 11;\n\n  if (l)\n    abort ();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "effective", "-", "target", "Ġt", "ls", "_", "runtime", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "omp", ".", "h", ">", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġvoid", "Ġabort", "Ġ(", "void", ");", "Ċ", "Ċ", "int", "Ġthr", "Ġ=", "Ġ32", ";", "Ċ", "#", "pr", "ag", "ma", "Ġo", "mp", "Ġthread", "private", "Ġ(", "th", "r", ")", "Ċ", "Ċ", "int", "Ċ", "main", "Ġ(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġl", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġo", "mp", "_", "set", "_", "d", "ynamic", "Ġ(", "0", ");", "Ċ", "Ġ", "Ġo", "mp", "_", "set", "_", "num", "_", "thread", "s", "Ġ(", "6", ");", "Ċ", "Ċ", "#", "pr", "ag", "ma", "Ġo", "mp", "Ġparallel", "Ġcopy", "in", "Ġ(", "th", "r", ")", "Ġreduction", "Ġ(", "||", ":", "l", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġl", "Ġ=", "Ġthr", "Ġ!=", "Ġ32", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthr", "Ġ=", "Ġo", "mp", "_", "get", "_", "thread", "_", "num", "Ġ()", "Ġ+", "Ġ11", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġif", "Ġ(", "l", "Ġ||", "Ġthr", "Ġ!=", "Ġ11", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġabort", "Ġ();", "Ċ", "Ċ", "#", "pr", "ag", "ma", "Ġo", "mp", "Ġparallel", "Ġreduction", "Ġ(", "||", ":", "l", ")", "Ċ", "Ġ", "Ġl", "Ġ=", "Ġthr", "Ġ!=", "Ġo", "mp", "_", "get", "_", "thread", "_", "num", "Ġ()", "Ġ+", "Ġ11", ";", "ĊĊ", "Ġ", "Ġif", "Ġ(", "l", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġabort", "Ġ();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["thr", 7, "comesFrom", ["thr"], [1]], ["thr", 11, "comesFrom", ["thr"], [8]], ["thr", 14, "comesFrom", ["thr"], [8]], ["l", 10, "comesFrom", ["l"], [6]], ["l", 16, "comesFrom", ["l"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::499", "code": "#include <stdio.h>\n\nint main(){\n  int n,h,m,s;\n  scanf(\"%d\",&n);\n  h = n/60/60;\n  m = (n % 3600)/60;\n  s = n%60;\n  printf(\"%d:%d:%d\\n\",h,m,s);\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġint", "Ġn", ",", "h", ",", "m", ",", "s", ";", "Ċ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "n", ");", "Ċ", "Ġ", "Ġh", "Ġ=", "Ġn", "/", "60", "/", "60", ";", "Ċ", "Ġ", "Ġm", "Ġ=", "Ġ(", "n", "Ġ%", "Ġ36", "00", ")/", "60", ";", "Ċ", "Ġ", "Ġs", "Ġ=", "Ġn", "%", "60", ";", "Ċ", "Ġ", "Ġprintf", "(\"", "%", "d", ":", "%", "d", ":", "%", "d", "\\", "n", "\",", "h", ",", "m", ",", "s", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 10, "comesFrom", ["n"], [1]], ["n", 12, "comesFrom", ["n"], [1]], ["h", 14, "comesFrom", ["h"], [7]], ["m", 15, "comesFrom", ["m"], [9]], ["s", 16, "comesFrom", ["s"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::500", "code": "#include \"glfwapplication.h\"\n#include <chrono>\n#include <thread>\n#define GLFW_INCLUDE_GLCOREARB\n#include <GLFW/glfw3.h>\n#include \"glfwwindow.h\"\n\nGLFWApplication::GLFWApplication() {\n   glfwInit();\n}\n\nGLFWApplication::~GLFWApplication() {\n   glfwTerminate();\n}\n\nvoid GLFWApplication::addWindow(GLFWWindow * window) {\n   if (window) {\n      windows.insert(window);\n   }\n}\n\nvoid GLFWApplication::collectGarbage() {\n   auto it = windows.begin();\n   while (it!=windows.end()) {\n      if ((*it)->isValid()) {\n         ++it;\n      }\n      else {\n         delete *it;\n         it = windows.erase(it);\n      }\n   }\n}\n\nint GLFWApplication::execute() {\n   double time = glfwGetTime();\n\n   while (!windows.empty()) {\n      for (auto it=windows.cbegin(); it!=windows.cend(); ++it) {\n         (*it)->update();\n      }\n\n      std::this_thread::sleep_for(std::chrono::milliseconds(std::max(int((0.015-glfwGetTime()+time)*1000.0), 0)));\n      time = glfwGetTime();\n\n      glfwPollEvents();\n      collectGarbage();\n   }\n   return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "g", "lf", "w", "application", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "chron", "o", ">", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ċ", "#", "define", "ĠGL", "FW", "_", "IN", "CL", "U", "DE", "_", "G", "LC", "ORE", "ARB", "Ċ", "#", "include", "Ġ<", "GL", "FW", "/", "g", "lf", "w", "3", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "g", "lf", "ww", "ind", "ow", ".", "h", "\"", "Ċ", "Ċ", "GL", "FW", "Application", "::", "GL", "FW", "Application", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġgl", "fw", "Init", "();", "Ċ", "}", "Ċ", "Ċ", "GL", "FW", "Application", "::", "~", "GL", "FW", "Application", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġgl", "fw", "Termin", "ate", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGL", "FW", "Application", "::", "add", "Window", "(", "GL", "FW", "Window", "Ġ*", "Ġwindow", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġif", "Ġ(", "window", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwindows", ".", "insert", "(", "window", ");", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGL", "FW", "Application", "::", "collect", "Gar", "bage", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġauto", "Ġit", "Ġ=", "Ġwindows", ".", "begin", "();", "Ċ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "it", "!", "=", "windows", ".", "end", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "*", "it", ")", "->", "is", "Valid", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "it", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġ*", "it", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġit", "Ġ=", "Ġwindows", ".", "er", "ase", "(", "it", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "ĠGL", "FW", "Application", "::", "execute", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġdouble", "Ġtime", "Ġ=", "Ġgl", "fw", "Get", "Time", "();", "ĊĊ", "Ġ", "Ġ", "Ġwhile", "Ġ(!", "windows", ".", "empty", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "Ġit", "=", "windows", ".", "c", "begin", "();", "Ġit", "!", "=", "windows", ".", "cend", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(*", "it", ")", "->", "update", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "this", "_", "thread", "::", "sleep", "_", "for", "(", "std", "::", "chron", "o", "::", "mill", "isec", "onds", "(", "std", "::", "max", "(", "int", "((", "0", ".", "015", "-", "g", "lf", "w", "Get", "Time", "()", "+", "time", ")*", "1000", ".", "0", "),", "Ġ0", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtime", "Ġ=", "Ġgl", "fw", "Get", "Time", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġgl", "fw", "Poll", "Events", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcollect", "Gar", "bage", "();", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["it", 15, "comesFrom", ["it"], [12]], ["it", 18, "comesFrom", ["it"], [12]], ["it", 20, "comesFrom", ["it"], [12]], ["it", 21, "comesFrom", ["it"], [12]], ["it", 25, "comesFrom", ["it"], [22]], ["it", 34, "comesFrom", ["it"], [31]], ["it", 37, "comesFrom", ["it"], [31]], ["it", 38, "comesFrom", ["it"], [31]], ["time", 44, "comesFrom", ["time"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::501", "code": "// Here's a wirish include:\n#include <wirish/wirish.h>\n\n#include \"control/Motor.h\"\n\nMotor motor = Motor(#pin1, #pin2, #pin3);\n\nvoid setup(void) {\n\tSerialUSB.println(\"Starting motor test program\");\n}\n\nvoid loop(void) {\n\tSerialUSB.println(\"Motor test loop\");\n\tmotor.setPower(0.5f);\n\tdelay(2500);\n\tmotor.setPower(0f);\n\tdelay(2500);\n\tmotor.setPower(1.0f);\n\tdelay(2500);\n}\n\n// Standard libmaple init() and main.\n//\n// The init() part makes sure your board gets set up correctly. It's\n// best to leave that alone unless you know what you're doing. main()\n// is the usual \"call setup(), then loop() forever\", but of course can\n// be whatever you want.\n\n__attribute__((constructor)) void premain() {\n    init();\n}\n\nint main(void) {\n    setup();\n\n    while (true) {\n        loop();\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ//", "ĠHere", "'s", "Ġa", "Ġw", "ir", "ish", "Ġinclude", ":", "Ċ", "#", "include", "Ġ<", "w", "ir", "ish", "/", "w", "ir", "ish", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "control", "/", "Motor", ".", "h", "\"", "Ċ", "Ċ", "Motor", "Ġmotor", "Ġ=", "ĠMotor", "(", "#", "pin", "1", ",", "Ġ#", "pin", "2", ",", "Ġ#", "pin", "3", ");", "Ċ", "Ċ", "void", "Ġsetup", "(", "void", ")", "Ġ{", "Ċ", "ĉ", "Serial", "USB", ".", "println", "(\"", "Starting", "Ġmotor", "Ġtest", "Ġprogram", "\");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġloop", "(", "void", ")", "Ġ{", "Ċ", "ĉ", "Serial", "USB", ".", "println", "(\"", "Motor", "Ġtest", "Ġloop", "\");", "Ċ", "ĉ", "m", "otor", ".", "set", "Power", "(", "0", ".", "5", "f", ");", "Ċ", "ĉ", "delay", "(", "2500", ");", "Ċ", "ĉ", "m", "otor", ".", "set", "Power", "(", "0", "f", ");", "Ċ", "ĉ", "delay", "(", "2500", ");", "Ċ", "ĉ", "m", "otor", ".", "set", "Power", "(", "1", ".", "0", "f", ");", "Ċ", "ĉ", "delay", "(", "2500", ");", "Ċ", "}", "Ċ", "Ċ", "//", "ĠStandard", "Ġlib", "map", "le", "Ġinit", "()", "Ġand", "Ġmain", ".", "Ċ", "//", "Ċ", "//", "ĠThe", "Ġinit", "()", "Ġpart", "Ġmakes", "Ġsure", "Ġyour", "Ġboard", "Ġgets", "Ġset", "Ġup", "Ġcorrectly", ".", "ĠIt", "'s", "Ċ", "//", "Ġbest", "Ġto", "Ġleave", "Ġthat", "Ġalone", "Ġunless", "Ġyou", "Ġknow", "Ġwhat", "Ġyou", "'re", "Ġdoing", ".", "Ġmain", "()", "Ċ", "//", "Ġis", "Ġthe", "Ġusual", "Ġ\"", "call", "Ġsetup", "(),", "Ġthen", "Ġloop", "()", "Ġforever", "\",", "Ġbut", "Ġof", "Ġcourse", "Ġcan", "Ċ", "//", "Ġbe", "Ġwhatever", "Ġyou", "Ġwant", ".", "Ċ", "Ċ", "__", "attribute", "__", "((", "construct", "or", "))", "Ġvoid", "Ġprem", "ain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinit", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "true", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġloop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["motor", 8, "comesFrom", ["motor"], [0]], ["motor", 11, "comesFrom", ["motor"], [0]], ["motor", 14, "comesFrom", ["motor"], [0]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::502", "code": "#include \"own_functions.h\"\r\n#include <seqan/arg_parse.h>\r\n\r\nusing namespace std;\r\nusing namespace seqan;\r\n\r\nint PARSE_ARGUMENTS(int argc,char const ** argv){\r\n\t// Setup ArgumentParser.\r\n    ArgumentParser parser(\"blastX\");\r\n\r\n    addOption(parser, seqan::ArgParseOption(\"d\", \"DATABASE\", \"PATH OF THE TARGET DATABASE FASTA FILE\",\r\n        ArgParseArgument::STRING, \"STRING\"));\r\n\r\n    // Parse command line.\r\n    ArgumentParser::ParseResult res = parse(parser, argc, argv);\r\n\r\n    // If parsing was not successful then exit with code 1 if there were errors.\r\n    // Otherwise, exit with code 0 (e.g. help was printed).\r\n\tif (res != ArgumentParser::PARSE_OK){\r\n\t\tArgumentParser::PARSE_ERROR;\r\n\t\treturn 1;\r\n\t}\r\n        \r\n    // Extract option values and print them.\r\n\tString fasta_file;\r\n\tgetOptionValue(fasta_file, parser, \"DATABASE\");\r\n\tcout<<fasta_file<<endl;\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "own", "_", "fun", "ctions", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "arg", "_", "parse", ".", "h", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "č", "Ċ", "č", "Ċ", "int", "ĠPAR", "SE", "_", "AR", "G", "UM", "ENTS", "(", "int", "Ġarg", "c", ",", "char", "Ġconst", "Ġ**", "Ġarg", "v", "){", "č", "Ċ", "ĉ", "//", "ĠSetup", "ĠArgument", "Parser", ".", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠArgument", "Parser", "Ġparser", "(\"", "blast", "X", "\");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġadd", "Option", "(", "parser", ",", "Ġseq", "an", "::", "Arg", "Par", "se", "Option", "(\"", "d", "\",", "Ġ\"", "D", "AT", "AB", "ASE", "\",", "Ġ\"", "PATH", "ĠOF", "ĠTHE", "ĠT", "ARGET", "ĠD", "AT", "AB", "ASE", "ĠF", "AS", "TA", "ĠFILE", "\",", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠArg", "Par", "se", "Arg", "ument", "::", "STR", "ING", ",", "Ġ\"", "STR", "ING", "\")", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠPar", "se", "Ġcommand", "Ġline", ".", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠArgument", "Parser", "::", "Par", "se", "Result", "Ġres", "Ġ=", "Ġparse", "(", "parser", ",", "Ġarg", "c", ",", "Ġarg", "v", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠIf", "Ġparsing", "Ġwas", "Ġnot", "Ġsuccessful", "Ġthen", "Ġexit", "Ġwith", "Ġcode", "Ġ1", "Ġif", "Ġthere", "Ġwere", "Ġerrors", ".", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠOtherwise", ",", "Ġexit", "Ġwith", "Ġcode", "Ġ0", "Ġ(", "e", ".", "g", ".", "Ġhelp", "Ġwas", "Ġprinted", ").", "č", "Ċ", "ĉ", "if", "Ġ(", "res", "Ġ!=", "ĠArgument", "Parser", "::", "PAR", "SE", "_", "OK", "){", "č", "Ċ", "ĉ", "ĉ", "Arg", "ument", "Parser", "::", "PAR", "SE", "_", "ERROR", ";", "č", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠExtract", "Ġoption", "Ġvalues", "Ġand", "Ġprint", "Ġthem", ".", "č", "Ċ", "ĉ", "String", "Ġfast", "a", "_", "file", ";", "č", "Ċ", "ĉ", "get", "Option", "Value", "(", "fast", "a", "_", "file", ",", "Ġparser", ",", "Ġ\"", "D", "AT", "AB", "ASE", "\");", "č", "Ċ", "ĉ", "c", "out", "<<", "fast", "a", "_", "file", "<<", "end", "l", ";", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["parser", 7, "comesFrom", ["parser"], [5]], ["parser", 12, "comesFrom", ["parser"], [5]], ["parser", 21, "comesFrom", ["parser"], [5]], ["argc", 13, "comesFrom", ["argc"], [3]], ["res", 15, "comesFrom", ["res"], [10]], ["fasta_file", 20, "comesFrom", ["fasta_file"], [18]], ["fasta_file", 23, "comesFrom", ["fasta_file"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::503", "code": "#include \"Cohesion.h\"\n#include \"Setting.h\"\n\n\nVector2 Cohesion::update(float deltaTime)\n{\n\tfloat speed = 100.0f;\n\tint neighbourCount = 0;\n\n\tfor (auto &var : SETAPP->players)\n\t{\n\n\t\tif (SETAPP->playerCircleCheck(Myself, var, (300 + 300)*0.9f))\n\t\t{\n\t\tif (Myself == var)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tpoint.x = point.x + var->position.x;\n\t\tpoint.y = point.y + var->position.y;\n\t\tneighbourCount++;\n\n\n\t\t}\n\t}\n\tif (neighbourCount == 0)\n\t{\n\t\tVector2 emptyvec;\n\t\treturn emptyvec;\n\t}\n\telse\n\t{\n\n\n\t\tpoint.x = point.x / neighbourCount;\n\t\tpoint.y = point.y / neighbourCount;\n\n\t\tVector2 v = { point.x - Myself->position.x, point.y - Myself->position.y };\n\n\t\tv.normalise();\n\n\t\tv = v *speed * behaviourWeight;\n\t\treturn v;\n\t}\n\n\tVector2 emptyvec;\n\treturn emptyvec;\n}\n\n\nCohesion::Cohesion(Object * myself)\n{\n\tMyself = myself;\n\tbehaviourWeight = 0;\n\tbTypes = COHESION;\n}\n\n\nCohesion::~Cohesion()\n{\n\n\t\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Co", "hesion", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Setting", ".", "h", "\"", "ĊĊ", "Ċ", "Vector", "2", "ĠCo", "hesion", "::", "update", "(", "float", "Ġdelta", "Time", ")", "Ċ", "{", "Ċ", "ĉ", "float", "Ġspeed", "Ġ=", "Ġ100", ".", "0", "f", ";", "Ċ", "ĉ", "int", "Ġneighbour", "Count", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "for", "Ġ(", "auto", "Ġ&", "var", "Ġ:", "ĠSET", "APP", "->", "players", ")", "Ċ", "ĉ", "{", "ĊĊ", "ĉ", "ĉ", "if", "Ġ(", "SET", "APP", "->", "player", "Circ", "le", "Check", "(", "My", "self", ",", "Ġvar", ",", "Ġ(", "300", "Ġ+", "Ġ300", ")*", "0", ".", "9", "f", "))", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "My", "self", "Ġ==", "Ġvar", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "continue", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "point", ".", "x", "Ġ=", "Ġpoint", ".", "x", "Ġ+", "Ġvar", "->", "position", ".", "x", ";", "Ċ", "ĉ", "ĉ", "point", ".", "y", "Ġ=", "Ġpoint", ".", "y", "Ġ+", "Ġvar", "->", "position", ".", "y", ";", "Ċ", "ĉ", "ĉ", "ne", "igh", "bour", "Count", "++;", "ĊĊ", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "if", "Ġ(", "ne", "igh", "bour", "Count", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Vector", "2", "Ġempty", "vec", ";", "Ċ", "ĉ", "ĉ", "return", "Ġempty", "vec", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "else", "Ċ", "ĉ", "{", "ĊĊ", "Ċ", "ĉ", "ĉ", "point", ".", "x", "Ġ=", "Ġpoint", ".", "x", "Ġ/", "Ġneighbour", "Count", ";", "Ċ", "ĉ", "ĉ", "point", ".", "y", "Ġ=", "Ġpoint", ".", "y", "Ġ/", "Ġneighbour", "Count", ";", "ĊĊ", "ĉ", "ĉ", "Vector", "2", "Ġv", "Ġ=", "Ġ{", "Ġpoint", ".", "x", "Ġ-", "ĠMy", "self", "->", "position", ".", "x", ",", "Ġpoint", ".", "y", "Ġ-", "ĠMy", "self", "->", "position", ".", "y", "Ġ};", "ĊĊ", "ĉ", "ĉ", "v", ".", "normal", "ise", "();", "ĊĊ", "ĉ", "ĉ", "v", "Ġ=", "Ġv", "Ġ*", "speed", "Ġ*", "Ġbehaviour", "Weight", ";", "Ċ", "ĉ", "ĉ", "return", "Ġv", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "Vector", "2", "Ġempty", "vec", ";", "Ċ", "ĉ", "return", "Ġempty", "vec", ";", "Ċ", "}", "ĊĊ", "Ċ", "Co", "hesion", "::", "Co", "hesion", "(", "Object", "Ġ*", "Ġmyself", ")", "Ċ", "{", "Ċ", "ĉ", "My", "self", "Ġ=", "Ġmyself", ";", "Ċ", "ĉ", "beh", "aviour", "Weight", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "b", "Types", "Ġ=", "ĠCO", "H", "ES", "ION", ";", "Ċ", "}", "ĊĊ", "Ċ", "Co", "hesion", "::", "~", "Co", "hesion", "()", "Ċ", "{", "ĊĊ", "ĉ", "Ċ", "}", "Ċ"], "dataflow_graph": [["neighbourCount", 27, "comesFrom", ["neighbourCount"], [3]], ["neighbourCount", 28, "comesFrom", ["neighbourCount"], [3]], ["neighbourCount", 35, "comesFrom", ["neighbourCount"], [3]], ["neighbourCount", 40, "comesFrom", ["neighbourCount"], [3]], ["emptyvec", 30, "comesFrom", ["emptyvec"], [29]], ["emptyvec", 60, "comesFrom", ["emptyvec"], [59]], ["v", 52, "comesFrom", ["v"], [41]], ["v", 55, "comesFrom", ["v"], [54]], ["v", 58, "comesFrom", ["v"], [54]], ["speed", 56, "comesFrom", ["speed"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::504", "code": "#include \"utils.h\"\n\nnamespace utils {\n\n    void Logln() {\n        if (loggingEnabled())\n            Serial.println();\n    }\n\n    void dump_byte_array(byte* buffer, byte bufferSize) {\n        if (loggingEnabled()) {\n            for (byte i = 0; i < bufferSize; i++) {\n                Log(buffer[i] < 0x10 ? \" 0\" : \" \");\n                Serial.print(buffer[i], HEX);\n            }\n        }\n    }\n\n    static bool loggingState = false;\n\n    bool loggingEnabled() {\n        return loggingState;\n    }\n\n    void UpdateLoggingState() {\n        loggingState = bool(Serial);\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "utils", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġut", "ils", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠLog", "ln", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "log", "ging", "Enabled", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSerial", ".", "println", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġdump", "_", "byte", "_", "array", "(", "byte", "*", "Ġbuffer", ",", "Ġbyte", "Ġbuffer", "Size", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "log", "ging", "Enabled", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "byte", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġbuffer", "Size", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠLog", "(", "buffer", "[", "i", "]", "Ġ<", "Ġ0", "x", "10", "Ġ?", "Ġ\"", "Ġ0", "\"", "Ġ:", "Ġ\"", "Ġ\"", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSerial", ".", "print", "(", "buffer", "[", "i", "],", "ĠH", "EX", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġbool", "Ġlogging", "State", "Ġ=", "Ġfalse", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġlogging", "Enabled", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġlogging", "State", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠUpdate", "Log", "ging", "State", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlogging", "State", "Ġ=", "Ġbool", "(", "Serial", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 9, "comesFrom", ["i"], [8]], ["i", 11, "comesFrom", ["i"], [8]], ["i", 14, "comesFrom", ["i"], [8]], ["i", 18, "comesFrom", ["i"], [8]], ["bufferSize", 10, "comesFrom", ["bufferSize"], [6]], ["loggingState", 22, "comesFrom", ["loggingState"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::505", "code": "#include <iostream>\n\nusing namespace std;\n\nint main() {\n    // Initialize variable\n    int number, even = 0;\n    // Loop for 5 times\n    for (int i = 0; i < 5; i++) {\n        // Take input\n        cin >> number;\n        if (number % 2 == 0) {\n            even++;\n        }\n    }\n    cout << even << \" valores pares\" << endl;\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠInitial", "ize", "Ġvariable", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġnumber", ",", "Ġeven", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠLoop", "Ġfor", "Ġ5", "Ġtimes", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ5", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠTake", "Ġinput", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġnumber", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "number", "Ġ%", "Ġ2", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġeven", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġeven", "Ġ<<", "Ġ\"", "Ġval", "ores", "Ġp", "ares", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 6, "comesFrom", ["i"], [4]], ["number", 8, "comesFrom", ["number"], [2]], ["number", 9, "comesFrom", ["number"], [2]], ["even", 10, "comesFrom", ["even"], [3]], ["even", 12, "comesFrom", ["even"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::506", "code": "#include \"catch.hpp\"\n\n#include <filesystem>\n#include <string>\n\n#include <jato.h>\n\nnamespace sys = std::tr2::sys;\n\nstruct TableTestFixture {\n\n    const sys::path testdb = \"C:/tmp/test-database.edb\";\n    const std::string sysobjects = \"MSysObjects\";\n\n    TableTestFixture() {\n        sys::remove(testdb);\n    }\n\n    ~TableTestFixture() {\n    }\n\n};\n\nTEST_CASE_METHOD(TableTestFixture, \"open MSysObjects table\") {\n    auto session = jato::make_session();\n    session->create_database(testdb);\n\n    auto db = session->open_database(testdb);\n    CHECK_NOTHROW(db->open_table(sysobjects));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "catch", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "files", "ystem", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "j", "ato", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "Ġsys", "Ġ=", "Ġstd", "::", "tr", "2", "::", "sys", ";", "Ċ", "Ċ", "struct", "ĠTable", "Test", "F", "ixture", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġsys", "::", "path", "Ġtest", "db", "Ġ=", "Ġ\"", "C", ":/", "tmp", "/", "test", "-", "database", ".", "ed", "b", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġsy", "so", "b", "ject", "s", "Ġ=", "Ġ\"", "MS", "ys", "Object", "s", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠTable", "Test", "F", "ixture", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsys", "::", "remove", "(", "test", "db", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ~", "Table", "Test", "F", "ixture", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "C", "ASE", "_", "METHOD", "(", "Table", "Test", "F", "ixture", ",", "Ġ\"", "open", "ĠMS", "ys", "Object", "s", "Ġtable", "\")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġsession", "Ġ=", "Ġj", "ato", "::", "make", "_", "session", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsession", "->", "create", "_", "database", "(", "test", "db", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġdb", "Ġ=", "Ġsession", "->", "open", "_", "database", "(", "test", "db", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCH", "ECK", "_", "NOT", "HR", "OW", "(", "db", "->", "open", "_", "table", "(", "sy", "so", "b", "ject", "s", "));", "Ċ", "}", "Ċ"], "dataflow_graph": [["session", 10, "comesFrom", ["session"], [8]], ["session", 14, "comesFrom", ["session"], [8]], ["db", 18, "comesFrom", ["db"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::507", "code": "#include \"Memory/ProxyAllocator.hpp\"\n\n#include <cassert>\n\nProxyAllocator::ProxyAllocator(const char* memoryScope, Allocator* allocator):\n\tallocator(allocator),\n\tmemoryScopeName(memoryScope),\n\tallocatedSize(0),\n\tallocatedCount(0)\n{\n}\n\nProxyAllocator::~ProxyAllocator()\n{\n\tassert(allocatedSize == 0);\n\tassert(allocatedCount == 0);\n}\n\nstd::size_t ProxyAllocator::GetTotalAllocationSize() const\n{\n\treturn allocatedSize;\n}\n\nstd::size_t ProxyAllocator::GetTotalAllocationCount() const\n{\n\treturn allocatedCount;\n}\n\nconst char* ProxyAllocator::GetMemoryScopeName() const\n{\n\treturn memoryScopeName;\n}\n\nvoid* ProxyAllocator::Allocate(std::size_t size)\n{\n\tvoid* result = allocator->Allocate(size);\n\n\tif (result != nullptr)\n\t{\n\t\tallocatedSize += size;\n\t\tallocatedCount += 1;\n\t}\n\n\treturn result;\n}\n\nvoid ProxyAllocator::Deallocate(void* ptr)\n{\n\tif (ptr != nullptr)\n\t{\n\t\tstd::size_t size = allocator->GetAllocatedSize(ptr);\n\n\t\tallocatedSize -= size;\n\t\tallocatedCount -= 1;\n\n\t\tallocator->Deallocate(ptr);\n\t}\n}\n\nstd::size_t ProxyAllocator::GetAllocatedSize(void* ptr)\n{\n\treturn allocator->GetAllocatedSize(ptr);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Memory", "/", "Proxy", "All", "oc", "ator", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "Proxy", "All", "oc", "ator", "::", "Proxy", "All", "oc", "ator", "(", "const", "Ġchar", "*", "Ġmemory", "Scope", ",", "ĠAll", "oc", "ator", "*", "Ġalloc", "ator", "):", "Ċ", "ĉ", "alloc", "ator", "(", "alloc", "ator", "),", "Ċ", "ĉ", "memory", "Scope", "Name", "(", "memory", "Scope", "),", "Ċ", "ĉ", "all", "ocated", "Size", "(", "0", "),", "Ċ", "ĉ", "all", "ocated", "Count", "(", "0", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Proxy", "All", "oc", "ator", "::", "~", "Proxy", "All", "oc", "ator", "()", "Ċ", "{", "Ċ", "ĉ", "assert", "(", "all", "ocated", "Size", "Ġ==", "Ġ0", ");", "Ċ", "ĉ", "assert", "(", "all", "ocated", "Count", "Ġ==", "Ġ0", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "size", "_", "t", "ĠProxy", "All", "oc", "ator", "::", "Get", "Total", "All", "ocation", "Size", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġallocated", "Size", ";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "size", "_", "t", "ĠProxy", "All", "oc", "ator", "::", "Get", "Total", "All", "ocation", "Count", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġallocated", "Count", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġchar", "*", "ĠProxy", "All", "oc", "ator", "::", "Get", "Memory", "Scope", "Name", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġmemory", "Scope", "Name", ";", "Ċ", "}", "Ċ", "Ċ", "void", "*", "ĠProxy", "All", "oc", "ator", "::", "All", "ocate", "(", "std", "::", "size", "_", "t", "Ġsize", ")", "Ċ", "{", "Ċ", "ĉ", "void", "*", "Ġresult", "Ġ=", "Ġalloc", "ator", "->", "All", "ocate", "(", "size", ");", "ĊĊ", "ĉ", "if", "Ġ(", "result", "Ġ!=", "Ġnull", "ptr", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "all", "ocated", "Size", "Ġ+=", "Ġsize", ";", "Ċ", "ĉ", "ĉ", "all", "ocated", "Count", "Ġ+=", "Ġ1", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠProxy", "All", "oc", "ator", "::", "De", "all", "ocate", "(", "void", "*", "Ġptr", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "ptr", "Ġ!=", "Ġnull", "ptr", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "size", "_", "t", "Ġsize", "Ġ=", "Ġalloc", "ator", "->", "Get", "All", "ocated", "Size", "(", "ptr", ");", "ĊĊ", "ĉ", "ĉ", "all", "ocated", "Size", "Ġ-=", "Ġsize", ";", "Ċ", "ĉ", "ĉ", "all", "ocated", "Count", "Ġ-=", "Ġ1", ";", "ĊĊ", "ĉ", "ĉ", "alloc", "ator", "->", "De", "all", "ocate", "(", "ptr", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "std", "::", "size", "_", "t", "ĠProxy", "All", "oc", "ator", "::", "Get", "All", "ocated", "Size", "(", "void", "*", "Ġptr", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġalloc", "ator", "->", "Get", "All", "ocated", "Size", "(", "ptr", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["size", 25, "comesFrom", ["size"], [21]], ["size", 28, "comesFrom", ["size"], [21]], ["size", 39, "comesFrom", ["size"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::508", "code": "#include \"wiArguments.h\"\n#include \"wiHelper.h\"\n#include \"wiUnorderedSet.h\"\n\n#include <sstream>\n#include <iterator>\n\nnamespace wi::arguments\n{\n\twi::unordered_set<std::string> params;\n\n\tvoid Parse(const wchar_t* args)\n\t{\n\t\tstd::wstring from = args;\n\t\tstd::string to;\n\t\twi::helper::StringConvert(from, to);\n\n\t\tstd::istringstream iss(to);\n\n\t\tparams =\n\t\t{\n\t\t\tstd::istream_iterator<std::string>{iss},\n\t\t\tstd::istream_iterator<std::string>{}\n\t\t};\n\n\t}\n\n\tvoid Parse(int argc, char *argv[])\n    {\n\t\tfor (int i = 1; i < argc; i++)\n\t\t{\n\t\t\tparams.insert(std::string(argv[i]));\n\t\t}\n    }\n\n\tbool HasArgument(const std::string& value)\n\t{\n\t\treturn params.find(value) != params.end();\n\t}\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "wi", "Arg", "uments", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "wi", "Helper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "wi", "Un", "ordered", "Set", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "Ċ", "names", "pace", "Ġwi", "::", "arg", "uments", "Ċ", "{", "Ċ", "ĉ", "wi", "::", "un", "ordered", "_", "set", "<", "std", "::", "string", ">", "Ġparams", ";", "ĊĊ", "ĉ", "void", "ĠPar", "se", "(", "const", "Ġw", "char", "_", "t", "*", "Ġargs", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "w", "string", "Ġfrom", "Ġ=", "Ġargs", ";", "Ċ", "ĉ", "ĉ", "std", "::", "string", "Ġto", ";", "Ċ", "ĉ", "ĉ", "wi", "::", "hel", "per", "::", "String", "Con", "vert", "(", "from", ",", "Ġto", ");", "ĊĊ", "ĉ", "ĉ", "std", "::", "ist", "ring", "stream", "Ġiss", "(", "to", ");", "ĊĊ", "ĉ", "ĉ", "params", "Ġ=", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "std", "::", "ist", "ream", "_", "iterator", "<", "std", "::", "string", ">", "{", "iss", "},", "Ċ", "ĉ", "ĉ", "ĉ", "std", "::", "ist", "ream", "_", "iterator", "<", "std", "::", "string", ">", "{", "}", "Ċ", "ĉ", "ĉ", "};", "ĊĊ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠPar", "se", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġarg", "c", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "params", ".", "insert", "(", "std", "::", "string", "(", "arg", "v", "[", "i", "])", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "ĉ", "bool", "ĠHas", "Arg", "ument", "(", "const", "Ġstd", "::", "string", "&", "Ġvalue", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġparams", ".", "find", "(", "value", ")", "Ġ!=", "Ġparams", ".", "end", "();", "Ċ", "ĉ", "}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["from", 7, "comesFrom", ["from"], [3]], ["to", 8, "comesFrom", ["to"], [5]], ["i", 16, "comesFrom", ["i"], [15]], ["i", 18, "comesFrom", ["i"], [15]], ["i", 23, "comesFrom", ["i"], [15]], ["argc", 17, "comesFrom", ["argc"], [13]], ["params", 19, "comesFrom", ["params"], [10]], ["params", 26, "comesFrom", ["params"], [10]], ["params", 29, "comesFrom", ["params"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::509", "code": "#include <iostream>\n\nusing namespace std;\n\nint gcd(int a, int b) {\n\n    return b == 0 ? a : gcd(b, a % b);\n\n}\n\nint main() {\n\n    int a, b;\n    cin >> a >> b;\n\n    cout << gcd(a, b) << endl;\n\n    return 0;\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġg", "cd", "(", "int", "Ġa", ",", "Ġint", "Ġb", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġb", "Ġ==", "Ġ0", "Ġ?", "Ġa", "Ġ:", "Ġg", "cd", "(", "b", ",", "Ġa", "Ġ%", "Ġb", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġg", "cd", "(", "a", ",", "Ġb", ")", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["b", 4, "comesFrom", ["b"], [3]], ["b", 7, "comesFrom", ["b"], [3]], ["b", 9, "comesFrom", ["b"], [3]], ["b", 15, "comesFrom", ["b"], [12]], ["b", 19, "comesFrom", ["b"], [12]], ["a", 5, "comesFrom", ["a"], [2]], ["a", 8, "comesFrom", ["a"], [2]], ["a", 14, "comesFrom", ["a"], [11]], ["a", 18, "comesFrom", ["a"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::510", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--) {\n\n\t\tstring y,x,z;\n\t\tcin >> x;\n\t\tcin >> y;\n\n\t\tz = \"\";\n\n\t\tfor(int i = 0; i < x.size(); i ++) {\n\t\t\tif(x[i] == 'W' && y[i] == 'W')\n\t\t\t\tz += 'B';\n\t\t\telse if(x[i] == 'B' && y[i] == 'B')\n\t\t\t\tz += 'W';\n\t\t\telse\n\t\t\t\tz += 'B';\n\t\t}\n\t\tcout << z << \"\\n\";\n\n\t}\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "int", "Ġt", ";", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "&", "t", ");", "Ċ", "ĉ", "while", "(", "t", "--", ")", "Ġ{", "ĊĊ", "ĉ", "ĉ", "string", "Ġy", ",", "x", ",", "z", ";", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġx", ";", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġy", ";", "ĊĊ", "ĉ", "ĉ", "z", "Ġ=", "Ġ\"", "\";", "ĊĊ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġx", ".", "size", "();", "Ġi", "Ġ++", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "x", "[", "i", "]", "Ġ==", "Ġ'", "W", "'", "Ġ&&", "Ġy", "[", "i", "]", "Ġ==", "Ġ'", "W", "')", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "z", "Ġ+=", "Ġ'", "B", "';", "Ċ", "ĉ", "ĉ", "ĉ", "else", "Ġif", "(", "x", "[", "i", "]", "Ġ==", "Ġ'", "B", "'", "Ġ&&", "Ġy", "[", "i", "]", "Ġ==", "Ġ'", "B", "')", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "z", "Ġ+=", "Ġ'", "W", "';", "Ċ", "ĉ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "z", "Ġ+=", "Ġ'", "B", "';", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġz", "Ġ<<", "Ġ\"\\", "n", "\";", "ĊĊ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["t", 4, "comesFrom", ["t"], [2]], ["t", 5, "comesFrom", ["t"], [2]], ["x", 10, "comesFrom", ["x"], [7]], ["x", 16, "comesFrom", ["x"], [7]], ["x", 19, "comesFrom", ["x"], [7]], ["x", 24, "comesFrom", ["x"], [7]], ["y", 12, "comesFrom", ["y"], [6]], ["y", 21, "comesFrom", ["y"], [6]], ["y", 26, "comesFrom", ["y"], [6]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 18, "comesFrom", ["i"], [14]], ["i", 20, "comesFrom", ["i"], [14]], ["i", 22, "comesFrom", ["i"], [14]], ["i", 25, "comesFrom", ["i"], [14]], ["i", 27, "comesFrom", ["i"], [14]], ["z", 31, "comesFrom", ["z"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::511", "code": "#include \"Light.h\"\n\nnamespace engine { namespace graphics {\n\n\tstd::vector<Light*> Light::lights;\n\n\tLight::Light(LightType type, math::Vector3f position, math::Vector3f color, float radius, float intensity) {\n\t\tthis->position = position;\n\t\tthis->color = color;\n\t\tthis->radius = radius;\n\t\tthis->intensity = intensity;\n\n\t\tlights.push_back(this);\n\t}\n\n\tfloat Light::getLinearFactor() {\n\t\treturn 2.0f / radius;\n\t}\n\n\tfloat Light::getQuadraticFactor() {\n\t\treturn 1.0f / (radius * radius);\n\t}\n\n\tstd::vector<Light*> Light::getEffictiveLightsFor(math::Vector3f position) {\n\t\tstd::vector<Light*> out;\n\t\tfor (unsigned int i = 0; i < lights.size(); i++) {\n\t\t\tfloat length = (lights[i]->position - position).magnitude();\n\t\t\tif (pow(length, 0.5f) <= lights[i]->radius)\n\t\t\t\tout.push_back(lights[i]);\n\t\t}\n\t\treturn out;\n\t}\n}}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Light", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġengine", "Ġ{", "Ġnamespace", "Ġgraphics", "Ġ{", "ĊĊ", "ĉ", "std", "::", "vector", "<", "Light", "*", ">", "ĠLight", "::", "lights", ";", "ĊĊ", "ĉ", "Light", "::", "Light", "(", "Light", "Type", "Ġtype", ",", "Ġmath", "::", "Vector", "3", "f", "Ġposition", ",", "Ġmath", "::", "Vector", "3", "f", "Ġcolor", ",", "Ġfloat", "Ġradius", ",", "Ġfloat", "Ġintensity", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "this", "->", "position", "Ġ=", "Ġposition", ";", "Ċ", "ĉ", "ĉ", "this", "->", "color", "Ġ=", "Ġcolor", ";", "Ċ", "ĉ", "ĉ", "this", "->", "radius", "Ġ=", "Ġradius", ";", "Ċ", "ĉ", "ĉ", "this", "->", "intensity", "Ġ=", "Ġintensity", ";", "ĊĊ", "ĉ", "ĉ", "lights", ".", "push", "_", "back", "(", "this", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "float", "ĠLight", "::", "get", "Lin", "ear", "Factor", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġ2", ".", "0", "f", "Ġ/", "Ġradius", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "float", "ĠLight", "::", "get", "Qu", "adr", "atic", "Factor", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ".", "0", "f", "Ġ/", "Ġ(", "radius", "Ġ*", "Ġradius", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "std", "::", "vector", "<", "Light", "*", ">", "ĠLight", "::", "get", "E", "ff", "ictive", "L", "ights", "For", "(", "math", "::", "Vector", "3", "f", "Ġposition", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "vector", "<", "Light", "*", ">", "Ġout", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "unsigned", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlights", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "float", "Ġlength", "Ġ=", "Ġ(", "lights", "[", "i", "]", "->", "position", "Ġ-", "Ġposition", ").", "m", "agn", "itude", "();", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "p", "ow", "(", "length", ",", "Ġ0", ".", "5", "f", ")", "Ġ<=", "Ġlights", "[", "i", "]", "->", "radius", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "out", ".", "push", "_", "back", "(", "lights", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "return", "Ġout", ";", "Ċ", "ĉ", "}", "Ċ", "}}"], "dataflow_graph": [["position", 7, "comesFrom", ["position"], [3]], ["position", 8, "comesFrom", ["position"], [3]], ["position", 33, "comesFrom", ["position"], [23]], ["position", 34, "comesFrom", ["position"], [23]], ["color", 9, "comesFrom", ["color"], [4]], ["color", 10, "comesFrom", ["color"], [4]], ["radius", 11, "comesFrom", ["radius"], [5]], ["radius", 12, "comesFrom", ["radius"], [5]], ["radius", 18, "comesFrom", ["radius"], [5]], ["radius", 20, "comesFrom", ["radius"], [5]], ["radius", 21, "comesFrom", ["radius"], [5]], ["radius", 40, "comesFrom", ["radius"], [5]], ["intensity", 13, "comesFrom", ["intensity"], [6]], ["intensity", 14, "comesFrom", ["intensity"], [6]], ["i", 26, "comesFrom", ["i"], [25]], ["i", 29, "comesFrom", ["i"], [25]], ["i", 32, "comesFrom", ["i"], [25]], ["i", 39, "comesFrom", ["i"], [25]], ["i", 44, "comesFrom", ["i"], [25]], ["length", 37, "comesFrom", ["length"], [30]], ["out", 41, "comesFrom", ["out"], [24]], ["out", 45, "comesFrom", ["out"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::512", "code": "// BLASTX IMPLEMENTIERUNG VON ANNKATRIN BRESSIN UND MARJAN FAIZI\r\n// SOFTWAREPROJEKT VOM 2.4. - 29.5.2012\r\n// VERSION VOM 19.APRIL.2013\r\n\r\n#include \"own_functions.h\"\r\n\r\nint translate(String<Dna> & aktual_triplet,String<int> & Alphabete){\r\n\treturn 0;\r\n}\r\n\r\n\r\n\r\nvoid translate_reads(StringSet<String<int>> & trans_reads,StringSet<String<Dna>> & Reads,String<int> & Alphabete,int frame){\r\n\tint numb_reads = length(Reads);\r\n\tfor (int i=0;i<numb_reads;++i){\r\n\t\tString<int>integer_code;\r\n\t\tfor (int triplet=0+frame;triplet<length(Reads[i])&& triplet+3<length(Reads[i]);triplet+=3){\r\n\t\t\tString<Dna> aktual_triplet = infix(Reads[i],triplet,triplet+3);\r\n\t\t\tappendValue(integer_code,translate(aktual_triplet,Alphabete));\r\n\t\t}\r\n\t\tappendValue(trans_reads,integer_code);\r\n\t}\r\n\r\n\r\n}\r\n", "code_tokens": ["Ġ//", "ĠBL", "AST", "X", "ĠIMP", "LE", "MENT", "IER", "UN", "G", "ĠV", "ON", "ĠANN", "K", "AT", "R", "IN", "ĠBR", "ESS", "IN", "ĠUN", "D", "ĠMAR", "J", "AN", "ĠFA", "IZ", "I", "č", "Ċ", "//", "ĠSOFTWARE", "PRO", "J", "E", "KT", "ĠV", "OM", "Ġ2", ".", "4", ".", "Ġ-", "Ġ29", ".", "5", ".", "2012", "č", "Ċ", "//", "ĠVERS", "ION", "ĠV", "OM", "Ġ19", ".", "AP", "R", "IL", ".", "2013", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "own", "_", "fun", "ctions", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "int", "Ġtranslate", "(", "String", "<", "D", "na", ">", "Ġ&", "Ġa", "kt", "ual", "_", "tri", "plet", ",", "String", "<", "int", ">", "Ġ&", "ĠAlphabet", "e", "){", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "č", "Ċ", "void", "Ġtranslate", "_", "reads", "(", "String", "Set", "<", "String", "<", "int", ">>", "Ġ&", "Ġtrans", "_", "reads", ",", "String", "Set", "<", "String", "<", "D", "na", ">>", "Ġ&", "ĠRead", "s", ",", "String", "<", "int", ">", "Ġ&", "ĠAlphabet", "e", ",", "int", "Ġframe", "){", "č", "Ċ", "ĉ", "int", "Ġnumb", "_", "reads", "Ġ=", "Ġlength", "(", "Read", "s", ");", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "=", "0", ";", "i", "<", "n", "umb", "_", "reads", ";", "++", "i", "){", "č", "Ċ", "ĉ", "ĉ", "String", "<", "int", ">", "integer", "_", "code", ";", "č", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġtriple", "t", "=", "0", "+", "frame", ";", "tri", "plet", "<", "length", "(", "Read", "s", "[", "i", "])", "&&", "Ġtriple", "t", "+", "3", "<", "length", "(", "Read", "s", "[", "i", "]);", "tri", "plet", "+=", "3", "){", "č", "Ċ", "ĉ", "ĉ", "ĉ", "String", "<", "D", "na", ">", "Ġa", "kt", "ual", "_", "tri", "plet", "Ġ=", "Ġinf", "ix", "(", "Read", "s", "[", "i", "],", "tri", "plet", ",", "tri", "plet", "+", "3", ");", "č", "Ċ", "ĉ", "ĉ", "ĉ", "append", "Value", "(", "integer", "_", "code", ",", "trans", "late", "(", "ak", "t", "ual", "_", "tri", "plet", ",", "Al", "phabet", "e", "));", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "append", "Value", "(", "trans", "_", "reads", ",", "integer", "_", "code", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["aktual_triplet", 36, "comesFrom", ["aktual_triplet"], [27]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["i", 21, "comesFrom", ["i"], [11]], ["i", 25, "comesFrom", ["i"], [11]], ["i", 30, "comesFrom", ["i"], [11]], ["numb_reads", 13, "comesFrom", ["numb_reads"], [8]], ["frame", 17, "comesFrom", ["frame"], [7]], ["triplet", 18, "comesFrom", ["triplet"], [16]], ["triplet", 22, "comesFrom", ["triplet"], [16]], ["triplet", 31, "comesFrom", ["triplet"], [26]], ["triplet", 32, "comesFrom", ["triplet"], [26]], ["integer_code", 34, "comesFrom", ["integer_code"], [15]], ["integer_code", 40, "comesFrom", ["integer_code"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::513", "code": "#ifndef _PROCESSLIST_H_\n#define _PROCESSLIST_H_\n\n#include <iostream>\n#include <Windows.h>\n#include <Psapi.h>\n#include <tlhelp32.h>\n#include <unordered_map>\n\n#pragma comment(lib, \"psapi.lib\")\n\nusing namespace std;\n\n#define MAP_THREADCOUNT 1\n#define MAP_HWNDLIST 2\n\nclass ProcessList\n{\nprivate:\n\tint processListCount = 128; // += 128\n\tDWORD *processList;\n\tDWORD processListSize = NULL;\n\n\tunordered_map<int, int> threadCounting;\n\tunordered_map<int, HWND> hWndList;\nprivate:\n\tvoid getProcessList();\n\tint getThreadCount();\n\tvoid getHwndList();\n\t// template <typename MapType> - Very Slow\n\tBOOLEAN isContainsKey(const int mapType, int paramPID);\npublic:\n\tProcessList()\n\t{\n\t\tprocessList = new DWORD[processListCount];\n\t\tUpdate();\n\t}\n\n\t~ProcessList()\n\t{\n\t\tif (processList)\n\t\t{\n\t\t\tdelete[] processList;\n\t\t\tprocessList = nullptr;\n\t\t}\n\t}\n\tvoid Update(); // process list update\n\tint getCount(); // update -> return value is processList count\n\tint getPID(const int i); // return value is num i to process PID value\n\tint getProcessThreadCount(const int paramPID);\n\tHWND getProcessHwnd(const int paramPID);\n\tint getTotalThreadCount();\n\tint getTotalHwndCount();\n};\n\n#endif", "code_tokens": ["Ġ#", "if", "nd", "ef", "Ġ_", "PR", "OC", "ESS", "LIST", "_", "H", "_", "Ċ", "#", "define", "Ġ_", "PR", "OC", "ESS", "LIST", "_", "H", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "Windows", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Ps", "api", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "tl", "help", "32", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ordered", "_", "map", ">", "Ċ", "Ċ", "#", "pr", "ag", "ma", "Ġcomment", "(", "lib", ",", "Ġ\"", "ps", "api", ".", "lib", "\")", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "define", "ĠMAP", "_", "TH", "READ", "C", "OUNT", "Ġ1", "Ċ", "#", "define", "ĠMAP", "_", "H", "W", "ND", "LIST", "Ġ2", "Ċ", "Ċ", "class", "ĠProcess", "List", "Ċ", "{", "Ċ", "private", ":", "Ċ", "ĉ", "int", "Ġprocess", "List", "Count", "Ġ=", "Ġ128", ";", "Ġ//", "Ġ+=", "Ġ128", "Ċ", "ĉ", "DW", "ORD", "Ġ*", "process", "List", ";", "Ċ", "ĉ", "DW", "ORD", "Ġprocess", "List", "Size", "Ġ=", "ĠNULL", ";", "ĊĊ", "ĉ", "un", "ordered", "_", "map", "<", "int", ",", "Ġint", ">", "Ġthread", "Count", "ing", ";", "Ċ", "ĉ", "un", "ordered", "_", "map", "<", "int", ",", "ĠHW", "ND", ">", "Ġh", "W", "nd", "List", ";", "Ċ", "private", ":", "Ċ", "ĉ", "void", "Ġget", "Process", "List", "();", "Ċ", "ĉ", "int", "Ġget", "Thread", "Count", "();", "Ċ", "ĉ", "void", "Ġget", "H", "w", "nd", "List", "();", "Ċ", "ĉ", "//", "Ġtemplate", "Ġ<", "ty", "pen", "ame", "ĠMap", "Type", ">", "Ġ-", "ĠVery", "ĠSlow", "Ċ", "ĉ", "B", "OO", "LE", "AN", "Ġis", "Cont", "ains", "Key", "(", "const", "Ġint", "Ġmap", "Type", ",", "Ġint", "Ġparam", "P", "ID", ");", "Ċ", "public", ":", "Ċ", "ĉ", "Process", "List", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "process", "List", "Ġ=", "Ġnew", "ĠDW", "ORD", "[", "process", "List", "Count", "];", "Ċ", "ĉ", "ĉ", "Update", "();", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "~", "Process", "List", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "process", "List", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "delete", "[]", "Ġprocess", "List", ";", "Ċ", "ĉ", "ĉ", "ĉ", "process", "List", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "void", "ĠUpdate", "();", "Ġ//", "Ġprocess", "Ġlist", "Ġupdate", "Ċ", "ĉ", "int", "Ġget", "Count", "();", "Ġ//", "Ġupdate", "Ġ->", "Ġreturn", "Ġvalue", "Ġis", "Ġprocess", "List", "Ġcount", "Ċ", "ĉ", "int", "Ġget", "P", "ID", "(", "const", "Ġint", "Ġi", ");", "Ġ//", "Ġreturn", "Ġvalue", "Ġis", "Ġnum", "Ġi", "Ġto", "Ġprocess", "ĠPID", "Ġvalue", "Ċ", "ĉ", "int", "Ġget", "Process", "Thread", "Count", "(", "const", "Ġint", "Ġparam", "P", "ID", ");", "Ċ", "ĉ", "H", "W", "ND", "Ġget", "Process", "H", "w", "nd", "(", "const", "Ġint", "Ġparam", "P", "ID", ");", "Ċ", "ĉ", "int", "Ġget", "Total", "Thread", "Count", "();", "Ċ", "ĉ", "int", "Ġget", "Total", "H", "w", "nd", "Count", "();", "Ċ", "};", "Ċ", "Ċ", "#", "endif"], "dataflow_graph": [["processList", 21, "comesFrom", ["processList"], [17]], ["processList", 22, "comesFrom", ["processList"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::514", "code": "#include \"sort_fun.h\"\n#ifdef MPI_HAO\n#include <mpi.h>\n#endif\n\nusing namespace std;\n\nvoid sort_indexes_test()\n{\n    vector<double> v={2.0,1.1,3.0,4.0,0.0,1.1};\n    vector<size_t> idx=sort_indexes(v);\n    //for (auto i: idx) cout<<i<<\" \"<<v[i]<<endl;\n    \n    size_t flag=0;\n    for(size_t i=0; i<(idx.size()-1); i++) \n    {\n        if(v[idx[i]]>v[idx[i+1]]) flag++;\n        //cout<<v[idx[i]]<<\" \"<<v[idx[i+1]]<<endl;;\n    }\n    if(flag==0) cout<<\"PASSED! Sort_indexes passed the test!\"<<endl;\n    else cout<<\"Warning!!!!Sort_indexes failed the test!\"<<endl;\n}\n\n\nvoid sort_fun_test()\n{\n    int rank=0;\n#ifdef MPI_HAO\n    MPI_Comm_rank(MPI_COMM_WORLD, &rank);\n#endif\n\n    if(rank==0)\n    {\n        sort_indexes_test();\n    }\n\n    if(rank==0) cout<<\" \"<<endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "sort", "_", "fun", ".", "h", "\"", "Ċ", "#", "if", "def", "ĠMP", "I", "_", "HA", "O", "Ċ", "#", "include", "Ġ<", "mp", "i", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġsort", "_", "index", "es", "_", "test", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "double", ">", "Ġv", "={", "2", ".", "0", ",", "1", ".", "1", ",", "3", ".", "0", ",", "4", ".", "0", ",", "0", ".", "0", ",", "1", ".", "1", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "size", "_", "t", ">", "Ġid", "x", "=", "sort", "_", "index", "es", "(", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "for", "Ġ(", "auto", "Ġi", ":", "Ġid", "x", ")", "Ġcout", "<<", "i", "<<", "\"", "Ġ\"", "<<", "v", "[", "i", "]", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsize", "_", "t", "Ġflag", "=", "0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "size", "_", "t", "Ġi", "=", "0", ";", "Ġi", "<", "(", "id", "x", ".", "size", "()", "-", "1", ");", "Ġi", "++)", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "v", "[", "id", "x", "[", "i", "]]", ">", "v", "[", "id", "x", "[", "i", "+", "1", "]]", ")", "Ġflag", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "c", "out", "<<", "v", "[", "id", "x", "[", "i", "]]", "<<", "\"", "Ġ\"", "<<", "v", "[", "id", "x", "[", "i", "+", "1", "]]", "<<", "end", "l", ";;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "flag", "==", "0", ")", "Ġcout", "<<", "\"", "PASS", "ED", "!", "ĠSort", "_", "index", "es", "Ġpassed", "Ġthe", "Ġtest", "!\"", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġcout", "<<", "\"", "Warning", "!!!!", "Sort", "_", "index", "es", "Ġfailed", "Ġthe", "Ġtest", "!\"", "<<", "end", "l", ";", "Ċ", "}", "ĊĊ", "Ċ", "void", "Ġsort", "_", "fun", "_", "test", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġrank", "=", "0", ";", "Ċ", "#", "if", "def", "ĠMP", "I", "_", "HA", "O", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMP", "I", "_", "Comm", "_", "rank", "(", "MP", "I", "_", "COM", "M", "_", "WOR", "LD", ",", "Ġ&", "rank", ");", "Ċ", "#", "endif", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "rank", "==", "0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsort", "_", "index", "es", "_", "test", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "rank", "==", "0", ")", "Ġcout", "<<", "\"", "Ġ\"", "<<", "end", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["v", 6, "comesFrom", ["v"], [3]], ["v", 13, "comesFrom", ["v"], [3]], ["v", 16, "comesFrom", ["v"], [3]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 12, "comesFrom", ["i"], [8]], ["i", 15, "comesFrom", ["i"], [8]], ["i", 18, "comesFrom", ["i"], [8]], ["idx", 10, "comesFrom", ["idx"], [4]], ["idx", 14, "comesFrom", ["idx"], [4]], ["idx", 17, "comesFrom", ["idx"], [4]], ["flag", 19, "comesFrom", ["flag"], [7]], ["flag", 20, "comesFrom", ["flag"], [7]], ["rank", 30, "comesFrom", ["rank"], [26]], ["rank", 31, "comesFrom", ["rank"], [26]], ["rank", 33, "comesFrom", ["rank"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::515", "code": "#include \"Label.hpp\"\n#include \"Visualizer.hpp\"\n#include \"Visuals.hpp\"\n#include \"Notifications.hpp\"\n\nBEGIN_INANITY_GUI\n\nLabel::Label(ptr<Visualizer> visualizer)\n: Element(visualizer) {}\n\nconst String& Label::GetText() const\n{\n\treturn text;\n}\n\nvoid Label::SetText(const String& text)\n{\n\tthis->text = text;\n}\n\nvoid Label::Draw(Canvas* canvas, Position offset)\n{\n\toffset += position;\n\tvisualizer->DrawRectText(canvas, VisualFonts::Label, text, offset.x, offset.y, offset.x + size.x, offset.y + size.y);\n}\n\nEND_INANITY_GUI\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Label", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Visual", "izer", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Visual", "s", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Not", "ifications", ".", "h", "pp", "\"", "Ċ", "Ċ", "B", "EGIN", "_", "IN", "AN", "ITY", "_", "GUI", "Ċ", "Ċ", "Label", "::", "Label", "(", "ptr", "<", "Visual", "izer", ">", "Ġvisual", "izer", ")", "Ċ", ":", "ĠElement", "(", "visual", "izer", ")", "Ġ{}", "Ċ", "Ċ", "const", "ĠString", "&", "ĠLabel", "::", "Get", "Text", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġtext", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLabel", "::", "Set", "Text", "(", "const", "ĠString", "&", "Ġtext", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "text", "Ġ=", "Ġtext", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLabel", "::", "Draw", "(", "Can", "vas", "*", "Ġcanvas", ",", "ĠPosition", "Ġoffset", ")", "Ċ", "{", "Ċ", "ĉ", "offset", "Ġ+=", "Ġposition", ";", "Ċ", "ĉ", "visual", "izer", "->", "Draw", "Rect", "Text", "(", "can", "vas", ",", "ĠVisual", "Font", "s", "::", "Label", ",", "Ġtext", ",", "Ġoffset", ".", "x", ",", "Ġoffset", ".", "y", ",", "Ġoffset", ".", "x", "Ġ+", "Ġsize", ".", "x", ",", "Ġoffset", ".", "y", "Ġ+", "Ġsize", ".", "y", ");", "Ċ", "}", "Ċ", "Ċ", "END", "_", "IN", "AN", "ITY", "_", "GUI", "Ċ"], "dataflow_graph": [["visualizer", 14, "comesFrom", ["visualizer"], [1]], ["offset", 19, "comesFrom", ["offset"], [12]], ["offset", 21, "comesFrom", ["offset"], [12]], ["offset", 23, "comesFrom", ["offset"], [12]], ["offset", 27, "comesFrom", ["offset"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::516", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define MAXN 1000000\n\nint main () {\n\tint n,m;\n    int v[MAXN], p[MAXN];\n\n    scanf(\"%d %d\", &n, &m);\n\n    v[0] = p[0]= 0;\n\n    for(int i = 1; i<= n; i++) {\n        scanf(\"%d\", &v[i]);\n        if(v[i]==v[i-1]) p[i]=p[i-1];\n        else p[i]=i;\n    }\n\n    for(int i = 0; i < m; i++) {\n\t\tint l,r,x;\n        scanf(\"%d %d %d\", &l, &r, &x);\n        int aux = r;\n        while(1) {\n\t\t\tif(v[aux]!=x) break;\n\t\t\telse {\n\t\t\t\taux = p[aux]-1;\n\t\t\t\tif(aux<l) {\n\t\t\t\t\taux = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n        }\n        printf(\"%d\\n\", aux);\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "define", "ĠMAX", "N", "Ġ100", "0000", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "ĉ", "int", "Ġn", ",", "m", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġv", "[", "MAX", "N", "],", "Ġp", "[", "MAX", "N", "];", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "Ġ%", "d", "\",", "Ġ&", "n", ",", "Ġ&", "m", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġv", "[", "0", "]", "Ġ=", "Ġp", "[", "0", "]=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "<", "=", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "v", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "v", "[", "i", "]", "==", "v", "[", "i", "-", "1", "])", "Ġp", "[", "i", "]=", "p", "[", "i", "-", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġp", "[", "i", "]=", "i", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġm", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "Ġl", ",", "r", ",", "x", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "Ġ%", "d", "Ġ%", "d", "\",", "Ġ&", "l", ",", "Ġ&", "r", ",", "Ġ&", "x", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġaux", "Ġ=", "Ġr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "1", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "v", "[", "aux", "]", "!", "=", "x", ")", "Ġbreak", ";", "Ċ", "ĉ", "ĉ", "ĉ", "else", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "aux", "Ġ=", "Ġp", "[", "aux", "]-", "1", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "aux", "<", "l", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "aux", "Ġ=", "Ġ-", "1", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġaux", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 10, "comesFrom", ["n"], [3]], ["n", 16, "comesFrom", ["n"], [3]], ["m", 11, "comesFrom", ["m"], [4]], ["m", 34, "comesFrom", ["m"], [4]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 17, "comesFrom", ["i"], [14]], ["i", 20, "comesFrom", ["i"], [14]], ["i", 22, "comesFrom", ["i"], [14]], ["i", 24, "comesFrom", ["i"], [14]], ["i", 26, "comesFrom", ["i"], [14]], ["i", 28, "comesFrom", ["i"], [14]], ["i", 30, "comesFrom", ["i"], [14]], ["i", 31, "comesFrom", ["i"], [14]], ["i", 33, "comesFrom", ["i"], [32]], ["i", 35, "comesFrom", ["i"], [32]], ["l", 40, "comesFrom", ["l"], [36]], ["l", 52, "comesFrom", ["l"], [36]], ["r", 41, "comesFrom", ["r"], [37]], ["x", 42, "comesFrom", ["x"], [38]], ["x", 47, "comesFrom", ["x"], [38]], ["aux", 46, "comesFrom", ["aux"], [43]], ["aux", 50, "comesFrom", ["aux"], [48]], ["aux", 51, "comesFrom", ["aux"], [48]], ["aux", 55, "comesFrom", ["aux"], [53]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::517", "code": "#include <algorithm>\r\n#include <iostream>\r\n#include <fstream>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <string>\r\n#include <vector>\r\n#include <cmath>\r\n#include <queue>\r\n#include <map>\r\n#include <set>\r\n\r\nusing namespace std;\r\n\r\nstruct ManySquares\r\n{\r\n\tint howManySquares(vector<int> sticks)\r\n\t{\r\n\t\tint m[1001]={0};\r\n\t\tfor(int i=0;i!=sticks.size();i++)\r\n\t\t\tm[sticks[i]++];\r\n\t\tint cnt = 0;\r\n\t\tfor(int i=1;i<=1000;i++)\r\n\t\t{\r\n\t\t\tcnt += m[i]/4;\r\n\t\t}\r\n\t\treturn cnt;\r\n\t}\r\n};\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "al", "gorithm", ">", "č", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "Ġ<", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "vector", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "č", "Ċ", "#", "include", "Ġ<", "queue", ">", "č", "Ċ", "#", "include", "Ġ<", "map", ">", "č", "Ċ", "#", "include", "Ġ<", "set", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "struct", "ĠMany", "Squ", "ares", "č", "Ċ", "{", "č", "Ċ", "ĉ", "int", "Ġhow", "Many", "Squ", "ares", "(", "vector", "<", "int", ">", "Ġsticks", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "int", "Ġm", "[", "1001", "]=", "{", "0", "};", "č", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "!", "=", "sticks", ".", "size", "();", "i", "++)", "č", "Ċ", "ĉ", "ĉ", "ĉ", "m", "[", "sticks", "[", "i", "]", "++", "];", "č", "Ċ", "ĉ", "ĉ", "int", "Ġc", "nt", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġi", "=", "1", ";", "i", "<", "=", "1000", ";", "i", "++)", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "c", "nt", "Ġ+=", "Ġm", "[", "i", "]", "/", "4", ";", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "return", "Ġc", "nt", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "};", "č", "Ċ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 8, "comesFrom", ["i"], [4]], ["i", 11, "comesFrom", ["i"], [4]], ["i", 14, "comesFrom", ["i"], [13]], ["i", 15, "comesFrom", ["i"], [13]], ["i", 18, "comesFrom", ["i"], [13]], ["sticks", 6, "comesFrom", ["sticks"], [2]], ["sticks", 10, "comesFrom", ["sticks"], [2]], ["cnt", 19, "comesFrom", ["cnt"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::518", "code": "﻿#pragma once\n\n#include \"setting.hpp\"\n\nnamespace ac2014\n{\ntemplate <class V, class F>\nauto random_access_exp(V const& vec, F const& func, uint num_iteration)\n{\n\tconst uint size = vec.size();\n\tsig::SimpleRandom<uint> random(0, size-1, DEBUG_MODE);\n\tdouble sum = 0;\n\n\tsig::TimeWatch<std::chrono::high_resolution_clock> tw;\n\tfor (uint n = 0; n < num_iteration; ++n){\n\t\tsum += func(vec, random());\n\t}\n\ttw.save();\n\t//std::cout << sum;\n\n\treturn tw.get_total_time<std::chrono::microseconds>();\n}\n\ntemplate <class V, class F>\nauto iteration_exp(V const& vec, F const& func)\n{\n\tconst uint size = vec.size();\n\tdouble sum = 0;\n\n\tsig::TimeWatch<std::chrono::high_resolution_clock> tw;\n\tsum += func(vec);\n\ttw.save();\n\n\treturn tw.get_total_time<std::chrono::nanoseconds>();\n}\n\ntemplate <class V, class F>\nauto inner_prod_exp(V const& vec, F const& func, uint num_iteration)\n{\n\tconst uint size = vec.size();\n\tdouble sum = 0;\n\n\tsig::TimeWatch<std::chrono::high_resolution_clock> tw;\n\tfor (uint n = 0; n < num_iteration; ++n) {\n\t\tsum += func(vec);\n\t}\n\ttw.save();\n\n\treturn tw.get_total_time<std::chrono::nanoseconds>();\n}\n\n}", "code_tokens": ["Ġï", "»", "¿", "#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "setting", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġac", "2014", "Ċ", "{", "Ċ", "template", "Ġ<", "class", "ĠV", ",", "Ġclass", "ĠF", ">", "Ċ", "auto", "Ġrandom", "_", "access", "_", "exp", "(", "V", "Ġconst", "&", "Ġvec", ",", "ĠF", "Ġconst", "&", "Ġfunc", ",", "Ġuint", "Ġnum", "_", "iter", "ation", ")", "Ċ", "{", "Ċ", "ĉ", "const", "Ġuint", "Ġsize", "Ġ=", "Ġvec", ".", "size", "();", "Ċ", "ĉ", "s", "ig", "::", "Simple", "Random", "<", "uint", ">", "Ġrandom", "(", "0", ",", "Ġsize", "-", "1", ",", "ĠDEBUG", "_", "MODE", ");", "Ċ", "ĉ", "double", "Ġsum", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "s", "ig", "::", "Time", "Watch", "<", "std", "::", "chron", "o", "::", "high", "_", "resolution", "_", "clock", ">", "Ġtw", ";", "Ċ", "ĉ", "for", "Ġ(", "uint", "Ġn", "Ġ=", "Ġ0", ";", "Ġn", "Ġ<", "Ġnum", "_", "iter", "ation", ";", "Ġ++", "n", "){", "Ċ", "ĉ", "ĉ", "sum", "Ġ+=", "Ġfunc", "(", "vec", ",", "Ġrandom", "());", "Ċ", "ĉ", "}", "Ċ", "ĉ", "tw", ".", "save", "();", "Ċ", "ĉ", "//", "std", "::", "c", "out", "Ġ<<", "Ġsum", ";", "ĊĊ", "ĉ", "return", "Ġtw", ".", "get", "_", "total", "_", "time", "<", "std", "::", "chron", "o", "::", "micro", "seconds", ">", "();", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠV", ",", "Ġclass", "ĠF", ">", "Ċ", "auto", "Ġiteration", "_", "exp", "(", "V", "Ġconst", "&", "Ġvec", ",", "ĠF", "Ġconst", "&", "Ġfunc", ")", "Ċ", "{", "Ċ", "ĉ", "const", "Ġuint", "Ġsize", "Ġ=", "Ġvec", ".", "size", "();", "Ċ", "ĉ", "double", "Ġsum", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "s", "ig", "::", "Time", "Watch", "<", "std", "::", "chron", "o", "::", "high", "_", "resolution", "_", "clock", ">", "Ġtw", ";", "Ċ", "ĉ", "sum", "Ġ+=", "Ġfunc", "(", "vec", ");", "Ċ", "ĉ", "tw", ".", "save", "();", "ĊĊ", "ĉ", "return", "Ġtw", ".", "get", "_", "total", "_", "time", "<", "std", "::", "chron", "o", "::", "nan", "ose", "cond", "s", ">", "();", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠV", ",", "Ġclass", "ĠF", ">", "Ċ", "auto", "Ġinner", "_", "pro", "d", "_", "exp", "(", "V", "Ġconst", "&", "Ġvec", ",", "ĠF", "Ġconst", "&", "Ġfunc", ",", "Ġuint", "Ġnum", "_", "iter", "ation", ")", "Ċ", "{", "Ċ", "ĉ", "const", "Ġuint", "Ġsize", "Ġ=", "Ġvec", ".", "size", "();", "Ċ", "ĉ", "double", "Ġsum", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "s", "ig", "::", "Time", "Watch", "<", "std", "::", "chron", "o", "::", "high", "_", "resolution", "_", "clock", ">", "Ġtw", ";", "Ċ", "ĉ", "for", "Ġ(", "uint", "Ġn", "Ġ=", "Ġ0", ";", "Ġn", "Ġ<", "Ġnum", "_", "iter", "ation", ";", "Ġ++", "n", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "sum", "Ġ+=", "Ġfunc", "(", "vec", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "tw", ".", "save", "();", "ĊĊ", "ĉ", "return", "Ġtw", ".", "get", "_", "total", "_", "time", "<", "std", "::", "chron", "o", "::", "nan", "ose", "cond", "s", ">", "();", "Ċ", "}", "Ċ", "Ċ", "}"], "dataflow_graph": [["size", 6, "comesFrom", ["size"], [4]], ["size", 8, "comesFrom", ["size"], [4]], ["size", 29, "comesFrom", ["size"], [27]], ["size", 45, "comesFrom", ["size"], [43]], ["n", 13, "comesFrom", ["n"], [12]], ["n", 15, "comesFrom", ["n"], [12]], ["n", 49, "comesFrom", ["n"], [48]], ["n", 51, "comesFrom", ["n"], [48]], ["num_iteration", 14, "comesFrom", ["num_iteration"], [3]], ["num_iteration", 50, "comesFrom", ["num_iteration"], [42]], ["random", 19, "comesFrom", ["random"], [7]], ["tw", 20, "comesFrom", ["tw"], [11]], ["tw", 22, "comesFrom", ["tw"], [11]], ["tw", 35, "comesFrom", ["tw"], [31]], ["tw", 37, "comesFrom", ["tw"], [31]], ["tw", 55, "comesFrom", ["tw"], [47]], ["tw", 57, "comesFrom", ["tw"], [47]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::519", "code": "#version 450 core\nlayout(location = 0)in vec3 position;\nlayout(location = 1)in float boundaries;\nlayout(location = 2)in vec3 normals;\n\n#define PI 3.1415926535f\n\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 modelMatrix;\n\nuniform float radius = 0.15;\nuniform float fov = 45.0;\nuniform float height = 920.0;\n\nout flat float pointRadius;\nout flat float boundary;\nout vec3 posEye;\nout vec3 posWorld;\nout flat int pointId;\n\n\nconst float pointScale = height / tan(fov * (0.5f * PI/180.0f));\n\nvoid main(){\n    pointRadius = radius;\n    vec3 pos = position.xyz;\n    posWorld = pos;\n    boundary = boundaries;\n    pointId = gl_VertexID;\n    posEye = (viewMatrix  * vec4(pos, 1.0)).xyz;\n    float dist = length(posEye);\n    gl_PointSize = pointRadius * (pointScale/dist);\n    gl_Position = projectionMatrix * viewMatrix  * modelMatrix * vec4(pos, 1.0);\n}\n\n", "code_tokens": ["Ġ#", "version", "Ġ450", "Ġcore", "Ċ", "layout", "(", "location", "Ġ=", "Ġ0", ")", "in", "Ġvec", "3", "Ġposition", ";", "Ċ", "layout", "(", "location", "Ġ=", "Ġ1", ")", "in", "Ġfloat", "Ġboundaries", ";", "Ċ", "layout", "(", "location", "Ġ=", "Ġ2", ")", "in", "Ġvec", "3", "Ġnorm", "als", ";", "Ċ", "Ċ", "#", "define", "ĠPI", "Ġ3", ".", "14", "159", "265", "35", "f", "Ċ", "Ċ", "un", "iform", "Ġmat", "4", "Ġview", "Matrix", ";", "Ċ", "un", "iform", "Ġmat", "4", "Ġprojection", "Matrix", ";", "Ċ", "un", "iform", "Ġmat", "4", "Ġmodel", "Matrix", ";", "Ċ", "Ċ", "un", "iform", "Ġfloat", "Ġradius", "Ġ=", "Ġ0", ".", "15", ";", "Ċ", "un", "iform", "Ġfloat", "Ġf", "ov", "Ġ=", "Ġ45", ".", "0", ";", "Ċ", "un", "iform", "Ġfloat", "Ġheight", "Ġ=", "Ġ920", ".", "0", ";", "Ċ", "Ċ", "out", "Ġflat", "Ġfloat", "Ġpoint", "Rad", "ius", ";", "Ċ", "out", "Ġflat", "Ġfloat", "Ġboundary", ";", "Ċ", "out", "Ġvec", "3", "Ġpos", "Eye", ";", "Ċ", "out", "Ġvec", "3", "Ġpos", "World", ";", "Ċ", "out", "Ġflat", "Ġint", "Ġpoint", "Id", ";", "ĊĊ", "Ċ", "const", "Ġfloat", "Ġpoint", "Scale", "Ġ=", "Ġheight", "Ġ/", "Ġtan", "(", "f", "ov", "Ġ*", "Ġ(", "0", ".", "5", "f", "Ġ*", "ĠPI", "/", "180", ".", "0", "f", "));", "Ċ", "Ċ", "void", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpoint", "Rad", "ius", "Ġ=", "Ġradius", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvec", "3", "Ġpos", "Ġ=", "Ġposition", ".", "xy", "z", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpos", "World", "Ġ=", "Ġpos", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġboundary", "Ġ=", "Ġboundaries", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpoint", "Id", "Ġ=", "Ġgl", "_", "Ver", "tex", "ID", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpos", "Eye", "Ġ=", "Ġ(", "view", "Matrix", "Ġ", "Ġ*", "Ġvec", "4", "(", "pos", ",", "Ġ1", ".", "0", ")).", "xy", "z", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġdist", "Ġ=", "Ġlength", "(", "pos", "Eye", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgl", "_", "Point", "Size", "Ġ=", "Ġpoint", "Rad", "ius", "Ġ*", "Ġ(", "point", "Scale", "/", "dist", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgl", "_", "Position", "Ġ=", "Ġprojection", "Matrix", "Ġ*", "Ġview", "Matrix", "Ġ", "Ġ*", "Ġmodel", "Matrix", "Ġ*", "Ġvec", "4", "(", "pos", ",", "Ġ1", ".", "0", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["float", 23, "comesFrom", ["float"], [21]], ["float", 26, "comesFrom", ["float"], [21]], ["float", 29, "comesFrom", ["float"], [21]], ["height", 39, "comesFrom", ["height"], [24]], ["radius", 45, "comesFrom", ["radius"], [20]], ["position", 47, "comesFrom", ["position"], [3]], ["pos", 50, "comesFrom", ["pos"], [46]], ["pos", 58, "comesFrom", ["pos"], [46]], ["pos", 72, "comesFrom", ["pos"], [46]], ["boundaries", 52, "comesFrom", ["boundaries"], [7]], ["viewMatrix", 56, "comesFrom", ["viewMatrix"], [14]], ["viewMatrix", 69, "comesFrom", ["viewMatrix"], [14]], ["posEye", 62, "comesFrom", ["posEye"], [55]], ["pointRadius", 64, "comesFrom", ["pointRadius"], [44]], ["pointScale", 65, "comesFrom", ["pointScale"], [38]], ["dist", 66, "comesFrom", ["dist"], [60]], ["projectionMatrix", 68, "comesFrom", ["projectionMatrix"], [16]], ["modelMatrix", 70, "comesFrom", ["modelMatrix"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::520", "code": "/*\n * RRT2DNearestNeighbourAlgorithm.cpp\n *\n *  Created on: May 27, 2011\n *      Author: vgil\n */\n\n#include \"RRT2DNearestNeighbourAlgorithm.h\"\n\nRRT2DNearestNeighbourAlgorithm::RRT2DNearestNeighbourAlgorithm(RRT2DMetric* m):NearestNeighbourAlgorithm(dynamic_cast<RRTMetric*>(m)) {\n}\n\nRRT2DNearestNeighbourAlgorithm::~RRT2DNearestNeighbourAlgorithm(){\n}\n\n\nRRTNode* RRT2DNearestNeighbourAlgorithm::get_nearest_neighbour(vector<RRTNode*>& target_nodes, RRTNode* node){\n\n\t// Brute force version\n\tdouble min_distance = std::numeric_limits<double>::max();\n\tRRTNode* min_dist_node = NULL;\n\n\tfor(unsigned int i = 0; i < target_nodes.size();i++){\n\t\tdouble dist = getMetric()->calcDistance(target_nodes[i],node);\n\t\tif( dist < min_distance){\n\t\t\tmin_dist_node = target_nodes[i];\n\t\t\tmin_distance = dist;\n\t\t}\n\t}\n\n\treturn min_dist_node;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠR", "RT", "2", "D", "Ne", "arest", "Neigh", "bour", "Al", "gorithm", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠMay", "Ġ27", ",", "Ġ2011", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "Ġv", "gil", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "R", "RT", "2", "D", "Ne", "arest", "Neigh", "bour", "Al", "gorithm", ".", "h", "\"", "Ċ", "Ċ", "R", "RT", "2", "D", "Ne", "arest", "Neigh", "bour", "Al", "gorithm", "::", "R", "RT", "2", "D", "Ne", "arest", "Neigh", "bour", "Al", "gorithm", "(", "R", "RT", "2", "D", "Met", "ric", "*", "Ġm", "):", "Ne", "arest", "Neigh", "bour", "Al", "gorithm", "(", "d", "ynamic", "_", "cast", "<", "R", "RT", "Met", "ric", "*", ">(", "m", "))", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "R", "RT", "2", "D", "Ne", "arest", "Neigh", "bour", "Al", "gorithm", "::", "~", "R", "RT", "2", "D", "Ne", "arest", "Neigh", "bour", "Al", "gorithm", "(){", "Ċ", "}", "ĊĊ", "Ċ", "R", "RT", "Node", "*", "ĠR", "RT", "2", "D", "Ne", "arest", "Neigh", "bour", "Al", "gorithm", "::", "get", "_", "ne", "arest", "_", "ne", "igh", "bour", "(", "vector", "<", "R", "RT", "Node", "*", ">", "&", "Ġtarget", "_", "n", "odes", ",", "ĠR", "RT", "Node", "*", "Ġnode", "){", "ĊĊ", "ĉ", "//", "ĠBr", "ute", "Ġforce", "Ġversion", "Ċ", "ĉ", "double", "Ġmin", "_", "distance", "Ġ=", "Ġstd", "::", "n", "umeric", "_", "limits", "<", "double", ">", "::", "max", "();", "Ċ", "ĉ", "R", "RT", "Node", "*", "Ġmin", "_", "dist", "_", "node", "Ġ=", "ĠNULL", ";", "ĊĊ", "ĉ", "for", "(", "unsigned", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġtarget", "_", "n", "odes", ".", "size", "();", "i", "++", "){", "Ċ", "ĉ", "ĉ", "double", "Ġdist", "Ġ=", "Ġget", "Met", "ric", "()", "->", "cal", "c", "Distance", "(", "target", "_", "n", "odes", "[", "i", "],", "node", ");", "Ċ", "ĉ", "ĉ", "if", "(", "Ġdist", "Ġ<", "Ġmin", "_", "distance", "){", "Ċ", "ĉ", "ĉ", "ĉ", "min", "_", "dist", "_", "node", "Ġ=", "Ġtarget", "_", "n", "odes", "[", "i", "];", "Ċ", "ĉ", "ĉ", "ĉ", "min", "_", "distance", "Ġ=", "Ġdist", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġmin", "_", "dist", "_", "node", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["min_dist_node", 30, "comesFrom", ["min_dist_node"], [25]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 16, "comesFrom", ["i"], [12]], ["i", 21, "comesFrom", ["i"], [12]], ["i", 27, "comesFrom", ["i"], [12]], ["dist", 23, "comesFrom", ["dist"], [17]], ["dist", 29, "comesFrom", ["dist"], [17]], ["min_distance", 24, "comesFrom", ["min_distance"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::521", "code": "class Solution {\npublic:\n    string largestNumber(vector<int>& nums) {\n        vector<string> strs;\n        for (int i = 0; i < nums.size(); i++) {\n            strs.push_back(to_string(nums[i]));\n        }\n        sort(strs.begin(), strs.end(), cmp);\n        string ans;\n        bool leading = true;\n        for (int i = 0; i < strs.size(); i++) {\n            if (strs[i] == \"0\" && leading) continue;\n            ans += strs[i];\n            leading = false;\n        }\n        if (ans == \"\") return \"0\";\n        return ans;\n    }\n    \n    static bool cmp(const string &a, const string &b) {\n        return a + b > b + a;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġlargest", "Number", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "string", ">", "Ġstr", "s", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġnum", "s", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstr", "s", ".", "push", "_", "back", "(", "to", "_", "string", "(", "n", "ums", "[", "i", "])", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsort", "(", "str", "s", ".", "begin", "(),", "Ġstr", "s", ".", "end", "(),", "Ġc", "mp", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġans", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġleading", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġstr", "s", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "str", "s", "[", "i", "]", "Ġ==", "Ġ\"", "0", "\"", "Ġ&&", "Ġleading", ")", "Ġcontinue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ+=", "Ġstr", "s", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġleading", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "ans", "Ġ==", "Ġ\"", "\")", "Ġreturn", "Ġ\"", "0", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġans", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġbool", "Ġc", "mp", "(", "const", "Ġstring", "Ġ&", "a", ",", "Ġconst", "Ġstring", "Ġ&", "b", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", "Ġ+", "Ġb", "Ġ>", "Ġb", "Ġ+", "Ġa", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 7, "comesFrom", ["i"], [3]], ["i", 12, "comesFrom", ["i"], [3]], ["i", 22, "comesFrom", ["i"], [21]], ["i", 25, "comesFrom", ["i"], [21]], ["i", 27, "comesFrom", ["i"], [21]], ["i", 31, "comesFrom", ["i"], [21]], ["strs", 8, "comesFrom", ["strs"], [2]], ["strs", 14, "comesFrom", ["strs"], [2]], ["strs", 16, "comesFrom", ["strs"], [2]], ["strs", 23, "comesFrom", ["strs"], [2]], ["strs", 26, "comesFrom", ["strs"], [2]], ["strs", 30, "comesFrom", ["strs"], [2]], ["leading", 28, "comesFrom", ["leading"], [20]], ["ans", 33, "comesFrom", ["ans"], [29]], ["ans", 34, "comesFrom", ["ans"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::522", "code": "/*\n  >>> ACM PROBLEM <<<\n\n  ID: 446\n  Name: Kibbles `n' Bits `n' Bits `n' Bits\n  Author: Arash Shakery\n  Email: arash.shakery@gmail.com\n  Language: C++\n*/\n#include <iostream>\nusing namespace std;\n\nvoid printB(int x){\n     int i,t=4096;\n     for(i=12;i>=0;i--)cout<<((x&t)>>i),t=t>>1;\n}\nint main()\n{\n     int x,y,n;\n     char c;\n     cin>>n;\n     while(n--)\n     {\n       scanf(\"%x %c %x\",&x,&c,&y);\n       printB(x);printf(\" %c \",c);printB(y);printf(\" = %d\\n\",c=='+'?x+y:x-y);\n     }\n  return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ", "Ġ>>>", "ĠAC", "M", "ĠPR", "OB", "LE", "M", "Ġ<<", "<", "ĊĊ", "Ġ", "ĠID", ":", "Ġ4", "46", "Ċ", "Ġ", "ĠName", ":", "ĠK", "ib", "bles", "Ġ`", "n", "'", "ĠBits", "Ġ`", "n", "'", "ĠBits", "Ġ`", "n", "'", "ĠBits", "Ċ", "Ġ", "ĠAuthor", ":", "ĠAr", "ash", "ĠSh", "akery", "Ċ", "Ġ", "ĠEmail", ":", "Ġar", "ash", ".", "sh", "akery", "@", "gmail", ".", "com", "Ċ", "Ġ", "ĠLanguage", ":", "ĠC", "++", "Ċ", "*/", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "void", "Ġprint", "B", "(", "int", "Ġx", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", ",", "t", "=", "40", "96", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "i", "=", "12", ";", "i", ">", "=", "0", ";", "i", "--", ")", "c", "out", "<<", "((", "x", "&", "t", ")", ">>", "i", "),", "t", "=", "t", ">>", "1", ";", "Ċ", "}", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġx", ",", "y", ",", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ">>", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "n", "--", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "x", "Ġ%", "c", "Ġ%", "x", "\",", "&", "x", ",", "&", "c", ",", "&", "y", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprint", "B", "(", "x", ");", "printf", "(\"", "Ġ%", "c", "Ġ\",", "c", ");", "print", "B", "(", "y", ");", "printf", "(\"", "Ġ=", "Ġ%", "d", "\\", "n", "\",", "c", "==", "'", "+", "'?", "x", "+", "y", ":", "x", "-", "y", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 7, "comesFrom", ["i"], [5]], ["i", 11, "comesFrom", ["i"], [5]], ["x", 9, "comesFrom", ["x"], [2]], ["x", 23, "comesFrom", ["x"], [15]], ["x", 27, "comesFrom", ["x"], [15]], ["x", 34, "comesFrom", ["x"], [15]], ["x", 36, "comesFrom", ["x"], [15]], ["t", 10, "comesFrom", ["t"], [4]], ["t", 13, "comesFrom", ["t"], [12]], ["n", 20, "comesFrom", ["n"], [17]], ["n", 21, "comesFrom", ["n"], [17]], ["c", 24, "comesFrom", ["c"], [18]], ["c", 29, "comesFrom", ["c"], [18]], ["c", 33, "comesFrom", ["c"], [18]], ["y", 25, "comesFrom", ["y"], [16]], ["y", 31, "comesFrom", ["y"], [16]], ["y", 35, "comesFrom", ["y"], [16]], ["y", 37, "comesFrom", ["y"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::523", "code": "#include <bits/stdc++.h>\n#define CBIT(var, pos) ((var) & (1 << (pos)))\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    long T, F, X;\n    cin >> T;\n\n    while (T--) {\n        cin >> F >> X;\n        bool flag = false;\n\n        for (unsigned long long i = 0; i < (1 << F); i++) {\n            unsigned long long m = 1;\n            for (unsigned long long a = 0; a < F; a++) {\n                if (CBIT(i, a)) {\n                    m *= (a+1);\n                }\n            }\n            if (m == X) {\n                flag = true;\n                break;\n            }\n        }\n    \n        if (flag) cout << \"yes\\n\";\n        else cout << \"no\\n\";\n    }\n   \n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "#", "define", "ĠCB", "IT", "(", "var", ",", "Ġpos", ")", "Ġ((", "var", ")", "Ġ&", "Ġ(", "1", "Ġ<<", "Ġ(", "pos", ")))", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġi", "os", "::", "sync", "_", "with", "_", "std", "io", "(", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ".", "tie", "(", "0", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġlong", "ĠT", ",", "ĠF", ",", "ĠX", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "ĠT", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "T", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "ĠF", "Ġ>>", "ĠX", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġflag", "Ġ=", "Ġfalse", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġlong", "Ġlong", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ(", "1", "Ġ<<", "ĠF", ");", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġlong", "Ġlong", "Ġm", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġlong", "Ġlong", "Ġa", "Ġ=", "Ġ0", ";", "Ġa", "Ġ<", "ĠF", ";", "Ġa", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "CB", "IT", "(", "i", ",", "Ġa", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "Ġ*", "=", "Ġ(", "a", "+", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "m", "Ġ==", "ĠX", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġflag", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "flag", ")", "Ġcout", "Ġ<<", "Ġ\"", "yes", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġcout", "Ġ<<", "Ġ\"", "no", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["T", 12, "comesFrom", ["T"], [8]], ["T", 13, "comesFrom", ["T"], [8]], ["F", 15, "comesFrom", ["F"], [9]], ["F", 20, "comesFrom", ["F"], [9]], ["F", 25, "comesFrom", ["F"], [9]], ["X", 16, "comesFrom", ["X"], [10]], ["X", 33, "comesFrom", ["X"], [10]], ["i", 19, "comesFrom", ["i"], [18]], ["i", 21, "comesFrom", ["i"], [18]], ["i", 28, "comesFrom", ["i"], [18]], ["a", 24, "comesFrom", ["a"], [23]], ["a", 26, "comesFrom", ["a"], [23]], ["a", 29, "comesFrom", ["a"], [23]], ["a", 31, "comesFrom", ["a"], [23]], ["m", 32, "comesFrom", ["m"], [30]], ["flag", 35, "comesFrom", ["flag"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::524", "code": "#include \"loadunit.h\"\n#include \"ui_loadunit.h\"\n//#include \"def.h\"\n\nLoadUnit::LoadUnit(QWidget *parent) :\n    QWidget(parent),\n    ui(new Ui::LoadUnit)\n{\n    ui->setupUi(this);\n}\n\nLoadUnit::~LoadUnit()\n{\n    delete ui;\n}\n\nvoid LoadUnit::setTable(int row,int column,LU inlu){\n    QTableWidgetItem *item = new QTableWidgetItem();\n    item->setText(inlu.getName());\n    ui->tableWidget->setItem(row,column,item);\n    QTableWidgetItem *item2 = new QTableWidgetItem();\n    if(inlu.getState() == TRUE){\n        item2->setText(\"Yes\");\n    }else{\n        item2->setText(\"No\");\n    }\n    ui->tableWidget->setItem(row,column+1,item2);\n    QTableWidgetItem *item3 = new QTableWidgetItem();\n    item3->setText(inlu.getAddr());\n    ui->tableWidget->setItem(row,column+2,item3);\n    QTableWidgetItem *item4 = new QTableWidgetItem();\n    item4->setText(inlu.getVal());\n    ui->tableWidget->setItem(row,column+3,item4);\n}\n\nvoid LoadUnit::clearTable(){\n    ui->tableWidget->clearContents();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "load", "unit", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "load", "unit", ".", "h", "\"", "Ċ", "//", "#", "include", "Ġ\"", "def", ".", "h", "\"", "Ċ", "Ċ", "Load", "Unit", "::", "Load", "Unit", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Widget", "(", "parent", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "(", "new", "ĠU", "i", "::", "Load", "Unit", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "setup", "U", "i", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "Load", "Unit", "::", "~", "Load", "Unit", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġu", "i", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLoad", "Unit", "::", "set", "Table", "(", "int", "Ġrow", ",", "int", "Ġcolumn", ",", "LU", "Ġin", "lu", "){", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Table", "Widget", "Item", "Ġ*", "item", "Ġ=", "Ġnew", "ĠQ", "Table", "Widget", "Item", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġitem", "->", "set", "Text", "(", "in", "lu", ".", "get", "Name", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "table", "Widget", "->", "set", "Item", "(", "row", ",", "column", ",", "item", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Table", "Widget", "Item", "Ġ*", "item", "2", "Ġ=", "Ġnew", "ĠQ", "Table", "Widget", "Item", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "in", "lu", ".", "get", "State", "()", "Ġ==", "ĠTRUE", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġitem", "2", "->", "set", "Text", "(\"", "Yes", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "else", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġitem", "2", "->", "set", "Text", "(\"", "No", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "table", "Widget", "->", "set", "Item", "(", "row", ",", "column", "+", "1", ",", "item", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Table", "Widget", "Item", "Ġ*", "item", "3", "Ġ=", "Ġnew", "ĠQ", "Table", "Widget", "Item", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġitem", "3", "->", "set", "Text", "(", "in", "lu", ".", "get", "Add", "r", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "table", "Widget", "->", "set", "Item", "(", "row", ",", "column", "+", "2", ",", "item", "3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Table", "Widget", "Item", "Ġ*", "item", "4", "Ġ=", "Ġnew", "ĠQ", "Table", "Widget", "Item", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġitem", "4", "->", "set", "Text", "(", "in", "lu", ".", "get", "Val", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "table", "Widget", "->", "set", "Item", "(", "row", ",", "column", "+", "3", ",", "item", "4", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLoad", "Unit", "::", "clear", "Table", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "table", "Widget", "->", "clear", "Contents", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["inlu", 16, "comesFrom", ["inlu"], [12]], ["inlu", 25, "comesFrom", ["inlu"], [12]], ["inlu", 40, "comesFrom", ["inlu"], [12]], ["inlu", 51, "comesFrom", ["inlu"], [12]], ["row", 21, "comesFrom", ["row"], [10]], ["row", 34, "comesFrom", ["row"], [10]], ["row", 45, "comesFrom", ["row"], [10]], ["row", 56, "comesFrom", ["row"], [10]], ["column", 22, "comesFrom", ["column"], [11]], ["column", 35, "comesFrom", ["column"], [11]], ["column", 46, "comesFrom", ["column"], [11]], ["column", 57, "comesFrom", ["column"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::525", "code": "//---------------------------------------------------------------------------//\n//!\n//! \\file   GeneratorType.cpp\n//! \\author Alex Robinson\n//! \\brief  Enumeration for the different types of generators\n//!\n//---------------------------------------------------------------------------//\n\n// Std Lib Includes\n#include <assert.h>\n\n// SPRNG Includes\n#include \"GeneratorType.hpp\"\n\nnamespace sprng{\n\n// Convert a GeneratorType to an int\nint generatorTypeToInt( const GeneratorType gtype )\n{\n  switch( gtype )\n  {\n  case LFG_TYPE: return 0;\n  case LCG_TYPE: return 1;\n  case LCG64_TYPE: return 2;\n  // case CMRG_TYPE: return 3;\n  // case MLFG_TYPE: return 4;\n  // case PMLCG_TYPE: return 5;\n  }\n}\n\n// Convert an int to a GeneratorType\nGeneratorType intToGeneratorType( const int gtype )\n{\n  assert( gtype >= 0 && gtype <= 5 );\n\n  switch( gtype )\n  {\n  case 0: return LFG_TYPE;\n  case 1: return LCG_TYPE;\n  case 2: return LCG64_TYPE;\n  // case 3: return CMRG_TYPE;\n  // case 4: return MLFG_TYPE;\n  // case 5: return PMLCG_TYPE;\n  }\n}\n\n} // end namespace sprng\n\n//---------------------------------------------------------------------------//\n// end GeneratorType.cpp\n//---------------------------------------------------------------------------//\n", "code_tokens": ["Ġ//", "----------------------------------------------------------------", "-----------", "//", "Ċ", "//", "!", "Ċ", "//", "!", "Ġ\\", "file", "Ġ", "Ġ", "ĠGenerator", "Type", ".", "cpp", "Ċ", "//", "!", "Ġ\\", "author", "ĠAlex", "ĠRobinson", "Ċ", "//", "!", "Ġ\\", "b", "rief", "Ġ", "ĠEn", "umer", "ation", "Ġfor", "Ġthe", "Ġdifferent", "Ġtypes", "Ġof", "Ġgenerators", "Ċ", "//", "!", "Ċ", "//", "----------------------------------------------------------------", "-----------", "//", "Ċ", "Ċ", "//", "ĠSt", "d", "ĠLib", "ĠIncludes", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "Ċ", "//", "ĠSPR", "NG", "ĠIncludes", "Ċ", "#", "include", "Ġ\"", "Gener", "ator", "Type", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġspr", "ng", "{", "Ċ", "Ċ", "//", "ĠConvert", "Ġa", "ĠGenerator", "Type", "Ġto", "Ġan", "Ġint", "Ċ", "int", "Ġgenerator", "Type", "To", "Int", "(", "Ġconst", "ĠGenerator", "Type", "Ġg", "type", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġswitch", "(", "Ġg", "type", "Ġ)", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġcase", "ĠL", "FG", "_", "TYPE", ":", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġcase", "ĠLC", "G", "_", "TYPE", ":", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġcase", "ĠLC", "G", "64", "_", "TYPE", ":", "Ġreturn", "Ġ2", ";", "Ċ", "Ġ", "Ġ//", "Ġcase", "ĠC", "MR", "G", "_", "TYPE", ":", "Ġreturn", "Ġ3", ";", "Ċ", "Ġ", "Ġ//", "Ġcase", "ĠML", "FG", "_", "TYPE", ":", "Ġreturn", "Ġ4", ";", "Ċ", "Ġ", "Ġ//", "Ġcase", "ĠPM", "LC", "G", "_", "TYPE", ":", "Ġreturn", "Ġ5", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "//", "ĠConvert", "Ġan", "Ġint", "Ġto", "Ġa", "ĠGenerator", "Type", "Ċ", "Gener", "ator", "Type", "Ġint", "To", "Gener", "ator", "Type", "(", "Ġconst", "Ġint", "Ġg", "type", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġassert", "(", "Ġg", "type", "Ġ>=", "Ġ0", "Ġ&&", "Ġg", "type", "Ġ<=", "Ġ5", "Ġ);", "ĊĊ", "Ġ", "Ġswitch", "(", "Ġg", "type", "Ġ)", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġcase", "Ġ0", ":", "Ġreturn", "ĠL", "FG", "_", "TYPE", ";", "Ċ", "Ġ", "Ġcase", "Ġ1", ":", "Ġreturn", "ĠLC", "G", "_", "TYPE", ";", "Ċ", "Ġ", "Ġcase", "Ġ2", ":", "Ġreturn", "ĠLC", "G", "64", "_", "TYPE", ";", "Ċ", "Ġ", "Ġ//", "Ġcase", "Ġ3", ":", "Ġreturn", "ĠC", "MR", "G", "_", "TYPE", ";", "Ċ", "Ġ", "Ġ//", "Ġcase", "Ġ4", ":", "Ġreturn", "ĠML", "FG", "_", "TYPE", ";", "Ċ", "Ġ", "Ġ//", "Ġcase", "Ġ5", ":", "Ġreturn", "ĠPM", "LC", "G", "_", "TYPE", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġend", "Ġnamespace", "Ġspr", "ng", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "-----------", "//", "Ċ", "//", "Ġend", "ĠGenerator", "Type", ".", "cpp", "Ċ", "//", "----------------------------------------------------------------", "-----------", "//", "Ċ"], "dataflow_graph": [["gtype", 2, "comesFrom", ["gtype"], [1]], ["gtype", 9, "comesFrom", ["gtype"], [7]], ["gtype", 10, "comesFrom", ["gtype"], [7]], ["gtype", 11, "comesFrom", ["gtype"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::526", "code": "/* Copyright (c) 2014 Fabian Schuiki */\n#include \"maxwell/test/parser/detail.hpp\"\n\ndriver::Driver drv;\n\nvoid parse(const std::string& input)\n{\n\tstd::stringstream s(input);\n\tdrv.nodes.clear();\n\tif (!drv.parseStream(s, \"stream\", maxwell::SourceLocation()))\n\t\tthrow std::runtime_error(\"failed to parse\");\n}\n\nstd::string structure(const NodePtr& node, int depth)\n{\n\tstd::string desc = node->describe(depth);\n\tstd::string output;\n\tbool wasWhitespace = false;\n\tbool wasEscape = false;\n\tfor (std::string::const_iterator i = desc.begin(); i != desc.end(); i++) {\n\t\tif (*i == ' ' || *i == '\\t' || *i == '\\n' || *i == '\\r') {\n\t\t\twasWhitespace = true;\n\t\t} else if (*i == '\\033') {\n\t\t\twasEscape = true;\n\t\t} else if (wasEscape) {\n\t\t\twasEscape = (*i != 'm');\n\t\t} else {\n\t\t\tif (wasWhitespace)\n\t\t\t\toutput += ' ';\n\t\t\toutput += *i;\n\t\t\twasWhitespace = false;\n\t\t}\n\t}\n\treturn output;\n}\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2014", "ĠFab", "ian", "ĠSch", "u", "iki", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "maxwell", "/", "test", "/", "parser", "/", "detail", ".", "h", "pp", "\"", "Ċ", "Ċ", "driver", "::", "Driver", "Ġdr", "v", ";", "Ċ", "Ċ", "void", "Ġparse", "(", "const", "Ġstd", "::", "string", "&", "Ġinput", ")", "Ċ", "{", "Ċ", "ĉ", "std", "::", "string", "stream", "Ġs", "(", "input", ");", "Ċ", "ĉ", "dr", "v", ".", "n", "odes", ".", "clear", "();", "Ċ", "ĉ", "if", "Ġ(!", "dr", "v", ".", "parse", "Stream", "(", "s", ",", "Ġ\"", "stream", "\",", "Ġmax", "well", "::", "Source", "Location", "()", "))", "Ċ", "ĉ", "ĉ", "throw", "Ġstd", "::", "runtime", "_", "error", "(\"", "failed", "Ġto", "Ġparse", "\");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "Ġstructure", "(", "const", "ĠNode", "Ptr", "&", "Ġnode", ",", "Ġint", "Ġdepth", ")", "Ċ", "{", "Ċ", "ĉ", "std", "::", "string", "Ġdesc", "Ġ=", "Ġnode", "->", "desc", "ribe", "(", "depth", ");", "Ċ", "ĉ", "std", "::", "string", "Ġoutput", ";", "Ċ", "ĉ", "bool", "Ġwas", "Wh", "ites", "pace", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "bool", "Ġwas", "E", "scape", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "for", "Ġ(", "std", "::", "string", "::", "const", "_", "iterator", "Ġi", "Ġ=", "Ġdesc", ".", "begin", "();", "Ġi", "Ġ!=", "Ġdesc", ".", "end", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(*", "i", "Ġ==", "Ġ'", "Ġ'", "Ġ||", "Ġ*", "i", "Ġ==", "Ġ'", "\\", "t", "'", "Ġ||", "Ġ*", "i", "Ġ==", "Ġ'", "\\", "n", "'", "Ġ||", "Ġ*", "i", "Ġ==", "Ġ'", "\\", "r", "')", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "was", "Wh", "ites", "pace", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġif", "Ġ(*", "i", "Ġ==", "Ġ'", "\\", "033", "')", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "was", "E", "scape", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġif", "Ġ(", "was", "E", "scape", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "was", "E", "scape", "Ġ=", "Ġ(*", "i", "Ġ!=", "Ġ'", "m", "');", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "was", "Wh", "ites", "pace", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "output", "Ġ+=", "Ġ'", "Ġ'", ";", "Ċ", "ĉ", "ĉ", "ĉ", "output", "Ġ+=", "Ġ*", "i", ";", "Ċ", "ĉ", "ĉ", "ĉ", "was", "Wh", "ites", "pace", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġoutput", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["drv", 4, "comesFrom", ["drv"], [0]], ["drv", 7, "comesFrom", ["drv"], [0]], ["depth", 18, "comesFrom", ["depth"], [14]], ["desc", 23, "comesFrom", ["desc"], [15]], ["desc", 26, "comesFrom", ["desc"], [15]], ["i", 25, "comesFrom", ["i"], [22]], ["i", 28, "comesFrom", ["i"], [22]], ["i", 29, "comesFrom", ["i"], [22]], ["i", 30, "comesFrom", ["i"], [22]], ["i", 31, "comesFrom", ["i"], [22]], ["i", 32, "comesFrom", ["i"], [22]], ["i", 34, "comesFrom", ["i"], [22]], ["i", 38, "comesFrom", ["i"], [22]], ["i", 42, "comesFrom", ["i"], [22]], ["wasEscape", 36, "comesFrom", ["wasEscape"], [35]], ["wasWhitespace", 39, "comesFrom", ["wasWhitespace"], [33]], ["output", 44, "comesFrom", ["output"], [41]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::527", "code": "/* ScummVM - Graphic Adventure Engine\n *\n * ScummVM is the legal property of its developers, whose names\n * are too numerous to list here. Please refer to the COPYRIGHT\n * file distributed with this source distribution.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n *\n */\n\n#include \"titanic/game/parrot/parrot_nut_eater.h\"\n\nnamespace Titanic {\n\nCParrotNutEater::CParrotNutEater() : CGameObject(), _fieldBC(0),\n\t\t_fieldC0(69), _fieldC4(132), _fieldC8(0), _fieldCC(68) {\n}\n\nvoid CParrotNutEater::save(SimpleFile *file, int indent) {\n\tfile->writeNumberLine(1, indent);\n\tfile->writeNumberLine(_fieldBC, indent);\n\t\n\tCGameObject::save(file, indent);\n}\n\nvoid CParrotNutEater::load(SimpleFile *file) {\n\tfile->readNumber();\n\t_fieldBC = file->readNumber();\n\n\tCGameObject::load(file);\n}\n\n} // End of namespace Titanic\n", "code_tokens": ["Ġ/*", "ĠSc", "umm", "VM", "Ġ-", "ĠGraphic", "ĠAdventure", "ĠEngine", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠSc", "umm", "VM", "Ġis", "Ġthe", "Ġlegal", "Ġproperty", "Ġof", "Ġits", "Ġdevelopers", ",", "Ġwhose", "Ġnames", "Ċ", "Ġ*", "Ġare", "Ġtoo", "Ġnumerous", "Ġto", "Ġlist", "Ġhere", ".", "ĠPlease", "Ġrefer", "Ġto", "Ġthe", "ĠCOP", "YR", "IGHT", "Ċ", "Ġ*", "Ġfile", "Ġdistributed", "Ġwith", "Ġthis", "Ġsource", "Ġdistribution", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ*", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠFranklin", "ĠStreet", ",", "ĠFifth", "ĠFloor", ",", "ĠBoston", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "t", "itan", "ic", "/", "game", "/", "par", "rot", "/", "par", "rot", "_", "nut", "_", "e", "ater", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠTitanic", "Ġ{", "Ċ", "Ċ", "CP", "ar", "rot", "Nut", "E", "ater", "::", "CP", "ar", "rot", "Nut", "E", "ater", "()", "Ġ:", "ĠC", "Game", "Object", "(),", "Ġ_", "field", "BC", "(", "0", "),", "Ċ", "ĉ", "ĉ", "_", "field", "C", "0", "(", "69", "),", "Ġ_", "field", "C", "4", "(", "132", "),", "Ġ_", "field", "C", "8", "(", "0", "),", "Ġ_", "field", "CC", "(", "68", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Par", "rot", "Nut", "E", "ater", "::", "save", "(", "Simple", "File", "Ġ*", "file", ",", "Ġint", "Ġindent", ")", "Ġ{", "Ċ", "ĉ", "file", "->", "write", "Number", "Line", "(", "1", ",", "Ġindent", ");", "Ċ", "ĉ", "file", "->", "write", "Number", "Line", "(_", "field", "BC", ",", "Ġindent", ");", "Ċ", "ĉ", "Ċ", "ĉ", "C", "Game", "Object", "::", "save", "(", "file", ",", "Ġindent", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Par", "rot", "Nut", "E", "ater", "::", "load", "(", "Simple", "File", "Ġ*", "file", ")", "Ġ{", "Ċ", "ĉ", "file", "->", "read", "Number", "();", "Ċ", "ĉ", "_", "field", "BC", "Ġ=", "Ġfile", "->", "read", "Number", "();", "ĊĊ", "ĉ", "C", "Game", "Object", "::", "load", "(", "file", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "ĠEnd", "Ġof", "Ġnamespace", "ĠTitanic", "Ċ"], "dataflow_graph": [["indent", 12, "comesFrom", ["indent"], [9]], ["indent", 16, "comesFrom", ["indent"], [9]], ["indent", 19, "comesFrom", ["indent"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::528", "code": "#include <iostream>\n#include <string>\n\n\nstd::string compress(std::string str)\n{\n\tsize_t original_length = str.length();\n\tif (original_length < 2) {\n\t\treturn str;\n\t}\n\tstd::string out{\"\"};\n\tint count = 1;\n\tfor( size_t i = 1; i < original_length; ++i ) {\n\t\tif (str[i-1] == str[i]) {\n\t\t\t++count;\n\t\t} else {\n\t\t\tout += str[i-1];\n\t\t\tout += std::to_string(count);\n\t\t\tcount = 1;\n\t\t}\n\t\tif (out.length() >= original_length) {\n\t\t\treturn str;\n\t\t}\n\t}\n\tout += str[original_length-1];\n\tout += std::to_string(count);\n\tif (out.length() >= original_length) {\n\t\treturn str;\n\t}\n\treturn out;\n}\n\nint main()\n{\n\tstd::string str, out;\n\tstd::cout << \"Enter a string:\\n\";\n\tstd::cin >> str;\n\tout = compress(str);\n\tif (str.compare(out)) {\n\t\tstd::cout << str << \" can be compressed to \" << out << std::endl;\n\t} else {\n\t\tstd::cout << str << \" can not be compressed\\n\";\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "ĊĊ", "Ċ", "std", "::", "string", "Ġcompress", "(", "std", "::", "string", "Ġstr", ")", "Ċ", "{", "Ċ", "ĉ", "size", "_", "t", "Ġoriginal", "_", "length", "Ġ=", "Ġstr", ".", "length", "();", "Ċ", "ĉ", "if", "Ġ(", "original", "_", "length", "Ġ<", "Ġ2", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġstr", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "std", "::", "string", "Ġout", "{\"", "\"", "};", "Ċ", "ĉ", "int", "Ġcount", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "for", "(", "Ġsize", "_", "t", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġoriginal", "_", "length", ";", "Ġ++", "i", "Ġ)", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "str", "[", "i", "-", "1", "]", "Ġ==", "Ġstr", "[", "i", "])", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "++", "count", ";", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "out", "Ġ+=", "Ġstr", "[", "i", "-", "1", "];", "Ċ", "ĉ", "ĉ", "ĉ", "out", "Ġ+=", "Ġstd", "::", "to", "_", "string", "(", "count", ");", "Ċ", "ĉ", "ĉ", "ĉ", "count", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "out", ".", "length", "()", "Ġ>=", "Ġoriginal", "_", "length", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġstr", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "out", "Ġ+=", "Ġstr", "[", "original", "_", "length", "-", "1", "];", "Ċ", "ĉ", "out", "Ġ+=", "Ġstd", "::", "to", "_", "string", "(", "count", ");", "Ċ", "ĉ", "if", "Ġ(", "out", ".", "length", "()", "Ġ>=", "Ġoriginal", "_", "length", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġstr", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġout", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "std", "::", "string", "Ġstr", ",", "Ġout", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Enter", "Ġa", "Ġstring", ":\\", "n", "\";", "Ċ", "ĉ", "std", "::", "cin", "Ġ>>", "Ġstr", ";", "Ċ", "ĉ", "out", "Ġ=", "Ġcompress", "(", "str", ");", "Ċ", "ĉ", "if", "Ġ(", "str", ".", "comp", "are", "(", "out", "))", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġstr", "Ġ<<", "Ġ\"", "Ġcan", "Ġbe", "Ġcompressed", "Ġto", "Ġ\"", "Ġ<<", "Ġout", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġstr", "Ġ<<", "Ġ\"", "Ġcan", "Ġnot", "Ġbe", "Ġcompressed", "\\", "n", "\";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["str", 3, "comesFrom", ["str"], [1]], ["str", 6, "comesFrom", ["str"], [1]], ["str", 13, "comesFrom", ["str"], [1]], ["str", 15, "comesFrom", ["str"], [1]], ["str", 19, "comesFrom", ["str"], [1]], ["str", 28, "comesFrom", ["str"], [1]], ["str", 30, "comesFrom", ["str"], [1]], ["str", 38, "comesFrom", ["str"], [1]], ["str", 45, "comesFrom", ["str"], [41]], ["str", 48, "comesFrom", ["str"], [41]], ["str", 49, "comesFrom", ["str"], [41]], ["str", 53, "comesFrom", ["str"], [41]], ["str", 57, "comesFrom", ["str"], [41]], ["original_length", 5, "comesFrom", ["original_length"], [2]], ["original_length", 11, "comesFrom", ["original_length"], [2]], ["original_length", 27, "comesFrom", ["original_length"], [2]], ["original_length", 31, "comesFrom", ["original_length"], [2]], ["original_length", 37, "comesFrom", ["original_length"], [2]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 14, "comesFrom", ["i"], [9]], ["i", 16, "comesFrom", ["i"], [9]], ["i", 20, "comesFrom", ["i"], [9]], ["count", 17, "comesFrom", ["count"], [8]], ["count", 23, "comesFrom", ["count"], [8]], ["count", 34, "comesFrom", ["count"], [24]], ["out", 25, "comesFrom", ["out"], [21]], ["out", 35, "comesFrom", ["out"], [32]], ["out", 39, "comesFrom", ["out"], [32]], ["out", 51, "comesFrom", ["out"], [46]], ["out", 54, "comesFrom", ["out"], [46]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::529", "code": "#include <stdlib.h>\r\n#include <stdio.h>\r\n\r\ndiv_t x;\r\nclrscr();\r\nint main(void)\r\n{\r\n   x = div(10,3);\r\n   printf(\"10 div 3 = %d e resta %d\\n\", x.quot, x.rem);\r\n\r\n   return 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "lib", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "č", "Ċ", "č", "Ċ", "div", "_", "t", "Ġx", ";", "č", "Ċ", "cl", "r", "sc", "r", "();", "č", "Ċ", "int", "Ġmain", "(", "void", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġdiv", "(", "10", ",", "3", ");", "č", "Ċ", "Ġ", "Ġ", "Ġprintf", "(\"", "10", "Ġdiv", "Ġ3", "Ġ=", "Ġ%", "d", "Ġe", "Ġrest", "a", "Ġ%", "d", "\\", "n", "\",", "Ġx", ".", "qu", "ot", ",", "Ġx", ".", "rem", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["x", 6, "comesFrom", ["x"], [3]], ["x", 8, "comesFrom", ["x"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::530", "code": "#include \"Derivative.h\"\r\n\r\nusing namespace rraLink;\r\n\r\n#include \"Derivative_p.h\"\r\nDerivativePrivate::DerivativePrivate()\r\n{\r\n    preValue = 0;\r\n    caption = \"Derivative\";\r\n}\r\n\r\nDerivative::Derivative():\r\n    Link(new DerivativePrivate())\r\n{\r\n}\r\n\r\nDerivative::Derivative(DerivativePrivate* d_ptr):\r\n    Link(d_ptr)\r\n{\r\n}\r\n\r\ndouble Derivative::out(double in)\r\n{\r\n    D(Derivative)\r\n    double dt = (in - d->preValue) / d->step;\r\n    d->preValue = in;\r\n    return dt;\r\n}\r\n\r\nvoid Derivative::reset()\r\n{\r\n    D(Derivative)\r\n    d->preValue = 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Der", "iv", "ative", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġr", "ra", "Link", ";", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Der", "iv", "ative", "_", "p", ".", "h", "\"", "č", "Ċ", "Der", "iv", "ative", "Private", "::", "Der", "iv", "ative", "Private", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpre", "Value", "Ġ=", "Ġ0", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcaption", "Ġ=", "Ġ\"", "Der", "iv", "ative", "\";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Der", "iv", "ative", "::", "Der", "iv", "ative", "():", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠLink", "(", "new", "ĠDer", "iv", "ative", "Private", "())", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Der", "iv", "ative", "::", "Der", "iv", "ative", "(", "Der", "iv", "ative", "Private", "*", "Ġd", "_", "ptr", "):", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠLink", "(", "d", "_", "ptr", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "double", "ĠDer", "iv", "ative", "::", "out", "(", "double", "Ġin", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠD", "(", "Der", "iv", "ative", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġd", "t", "Ġ=", "Ġ(", "in", "Ġ-", "Ġd", "->", "pre", "Value", ")", "Ġ/", "Ġd", "->", "step", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "->", "pre", "Value", "Ġ=", "Ġin", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġd", "t", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠDer", "iv", "ative", "::", "reset", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠD", "(", "Der", "iv", "ative", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "->", "pre", "Value", "Ġ=", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["in", 15, "comesFrom", ["in"], [11]], ["in", 22, "comesFrom", ["in"], [11]], ["preValue", 17, "comesFrom", ["preValue"], [2]], ["preValue", 21, "comesFrom", ["preValue"], [2]], ["preValue", 28, "comesFrom", ["preValue"], [2]], ["dt", 23, "comesFrom", ["dt"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::531", "code": "#include <CGAL/Exact_predicates_inexact_constructions_kernel.h>\n#include <CGAL/Projection_traits_xy_3.h>\n#include <CGAL/Delaunay_triangulation_2.h>\n#include <CGAL/Triangulation_vertex_base_with_info_2.h>\n\n#include <string>\n\ntypedef CGAL::Exact_predicates_inexact_constructions_kernel K;\ntypedef CGAL::Projection_traits_xy_3<K>  Gt;\ntypedef CGAL::Triangulation_vertex_base_with_info_2<std::string, Gt> Vb;\ntypedef CGAL::Triangulation_data_structure_2<Vb> Tds;\ntypedef CGAL::Delaunay_triangulation_2<Gt,Tds> Delaunay;\n\ntypedef K::Point_3   Point;\n\nint main()\n{\n  Delaunay dt;\n  Delaunay::Vertex_handle vh;\n\n  vh  = dt.insert(Point(0,0,0));\n  vh->info() = \"Paris\";\n  vh = dt.insert(Point(1,0,0.1));\n  vh->info() = \"London\";\n  vh = dt.insert(Point(0,1,0.2));\n  vh->info() = \"New York\";\n  \n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "CG", "AL", "/", "Ex", "act", "_", "pred", "icates", "_", "ine", "x", "act", "_", "construct", "ions", "_", "kernel", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "CG", "AL", "/", "Project", "ion", "_", "tra", "its", "_", "xy", "_", "3", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "CG", "AL", "/", "Del", "aun", "ay", "_", "tri", "ang", "ulation", "_", "2", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "CG", "AL", "/", "Tri", "ang", "ulation", "_", "ver", "tex", "_", "base", "_", "with", "_", "info", "_", "2", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "ty", "ped", "ef", "ĠCG", "AL", "::", "Ex", "act", "_", "pred", "icates", "_", "ine", "x", "act", "_", "construct", "ions", "_", "kernel", "ĠK", ";", "Ċ", "ty", "ped", "ef", "ĠCG", "AL", "::", "Project", "ion", "_", "tra", "its", "_", "xy", "_", "3", "<", "K", ">", "Ġ", "ĠG", "t", ";", "Ċ", "ty", "ped", "ef", "ĠCG", "AL", "::", "Tri", "ang", "ulation", "_", "ver", "tex", "_", "base", "_", "with", "_", "info", "_", "2", "<", "std", "::", "string", ",", "ĠG", "t", ">", "ĠV", "b", ";", "Ċ", "ty", "ped", "ef", "ĠCG", "AL", "::", "Tri", "ang", "ulation", "_", "data", "_", "st", "ructure", "_", "2", "<", "V", "b", ">", "ĠT", "ds", ";", "Ċ", "ty", "ped", "ef", "ĠCG", "AL", "::", "Del", "aun", "ay", "_", "tri", "ang", "ulation", "_", "2", "<", "G", "t", ",", "T", "ds", ">", "ĠDel", "aun", "ay", ";", "Ċ", "Ċ", "ty", "ped", "ef", "ĠK", "::", "Point", "_", "3", "Ġ", "Ġ", "ĠPoint", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "ĠDel", "aun", "ay", "Ġd", "t", ";", "Ċ", "Ġ", "ĠDel", "aun", "ay", "::", "Ver", "tex", "_", "handle", "Ġv", "h", ";", "ĊĊ", "Ġ", "Ġv", "h", "Ġ", "Ġ=", "Ġd", "t", ".", "insert", "(", "Point", "(", "0", ",", "0", ",", "0", "));", "Ċ", "Ġ", "Ġv", "h", "->", "info", "()", "Ġ=", "Ġ\"", "Paris", "\";", "Ċ", "Ġ", "Ġv", "h", "Ġ=", "Ġd", "t", ".", "insert", "(", "Point", "(", "1", ",", "0", ",", "0", ".", "1", "));", "Ċ", "Ġ", "Ġv", "h", "->", "info", "()", "Ġ=", "Ġ\"", "London", "\";", "Ċ", "Ġ", "Ġv", "h", "Ġ=", "Ġd", "t", ".", "insert", "(", "Point", "(", "0", ",", "1", ",", "0", ".", "2", "));", "Ċ", "Ġ", "Ġv", "h", "->", "info", "()", "Ġ=", "Ġ\"", "New", "ĠYork", "\";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["dt", 4, "comesFrom", ["dt"], [1]], ["dt", 10, "comesFrom", ["dt"], [1]], ["dt", 16, "comesFrom", ["dt"], [1]], ["vh", 7, "comesFrom", ["vh"], [3]], ["vh", 13, "comesFrom", ["vh"], [9]], ["vh", 19, "comesFrom", ["vh"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::532", "code": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\ntypedef long long LL;\n\nconst int N = 105;\n\nchar str[N];\nLL n;\n\nint main(){\n\t\n\twhile (scanf(\"%s\", str + 1) == 1){\n\t\tint len = strlen(str + 1);\n\t\tif (len > 15){\n\t\t\tprintf(\"TAT\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tn = 0;\n\t\tfor (int i = 1; i <= len; i++)\n\t\t\tn = n * 10 + str[i] - '0';\n\t\t\n\t\tif (n == 0 || n >= (1LL << 32)){\n\t\t\tprintf(\"TAT\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tfor (LL i = 0, t = 2; i <= 5; i++, t = t * t){\n\t\t\tif (n < t){\n\t\t\t\tcout << i << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "ĠLL", ";", "Ċ", "Ċ", "const", "Ġint", "ĠN", "Ġ=", "Ġ105", ";", "Ċ", "Ċ", "char", "Ġstr", "[", "N", "];", "Ċ", "LL", "Ġn", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "Ċ", "ĉ", "while", "Ġ(", "scan", "f", "(\"", "%", "s", "\",", "Ġstr", "Ġ+", "Ġ1", ")", "Ġ==", "Ġ1", "){", "Ċ", "ĉ", "ĉ", "int", "Ġlen", "Ġ=", "Ġstr", "len", "(", "str", "Ġ+", "Ġ1", ");", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "len", "Ġ>", "Ġ15", "){", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "T", "AT", "\\", "n", "\");", "Ċ", "ĉ", "ĉ", "ĉ", "continue", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "n", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġlen", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "n", "Ġ=", "Ġn", "Ġ*", "Ġ10", "Ġ+", "Ġstr", "[", "i", "]", "Ġ-", "Ġ'", "0", "';", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "n", "Ġ==", "Ġ0", "Ġ||", "Ġn", "Ġ>=", "Ġ(", "1", "LL", "Ġ<<", "Ġ32", "))", "{", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "T", "AT", "\\", "n", "\");", "Ċ", "ĉ", "ĉ", "ĉ", "continue", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "LL", "Ġi", "Ġ=", "Ġ0", ",", "Ġt", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<=", "Ġ5", ";", "Ġi", "++", ",", "Ġt", "Ġ=", "Ġt", "Ġ*", "Ġt", "){", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "n", "Ġ<", "Ġt", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġi", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["N", 3, "comesFrom", ["N"], [1]], ["len", 11, "comesFrom", ["len"], [8]], ["len", 16, "comesFrom", ["len"], [8]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 17, "comesFrom", ["i"], [14]], ["i", 21, "comesFrom", ["i"], [14]], ["i", 27, "comesFrom", ["i"], [25]], ["i", 28, "comesFrom", ["i"], [25]], ["i", 35, "comesFrom", ["i"], [25]], ["n", 19, "comesFrom", ["n"], [18]], ["n", 22, "comesFrom", ["n"], [18]], ["n", 23, "comesFrom", ["n"], [18]], ["n", 32, "comesFrom", ["n"], [18]], ["t", 30, "comesFrom", ["t"], [29]], ["t", 31, "comesFrom", ["t"], [29]], ["t", 33, "comesFrom", ["t"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::533", "code": "/* MAde with LOVE*/\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nint main(void){\n    int grid[6][6], sum[6] = {0}, id, max = 0;\n\n    for (int i = 0; i < 5; i++){\n        for (int j = 0; j < 4; j++){\n            cin >> grid[i][j];\n            sum[i] += grid[i][j];\n        }\n    }\n\n    for (int i = 0; i < 5; ++i){\n        if(sum[i] > max) {\n            max = sum[i];\n            id = i;\n        }\n    }\n\n    cout << id + 1 << \" \" << max << endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ/*", "ĠM", "Ad", "e", "Ġwith", "ĠLOVE", "*/", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "void", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġgrid", "[", "6", "][", "6", "],", "Ġsum", "[", "6", "]", "Ġ=", "Ġ{", "0", "},", "Ġid", ",", "Ġmax", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ5", ";", "Ġi", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġ4", ";", "Ġj", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġgrid", "[", "i", "][", "j", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsum", "[", "i", "]", "Ġ+=", "Ġgrid", "[", "i", "][", "j", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ5", ";", "Ġ++", "i", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "sum", "[", "i", "]", "Ġ>", "Ġmax", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmax", "Ġ=", "Ġsum", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġid", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġid", "Ġ+", "Ġ1", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġmax", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 8, "comesFrom", ["i"], [6]], ["i", 14, "comesFrom", ["i"], [6]], ["i", 17, "comesFrom", ["i"], [6]], ["i", 19, "comesFrom", ["i"], [6]], ["i", 22, "comesFrom", ["i"], [21]], ["i", 23, "comesFrom", ["i"], [21]], ["i", 25, "comesFrom", ["i"], [21]], ["i", 29, "comesFrom", ["i"], [21]], ["i", 31, "comesFrom", ["i"], [21]], ["j", 10, "comesFrom", ["j"], [9]], ["j", 11, "comesFrom", ["j"], [9]], ["j", 15, "comesFrom", ["j"], [9]], ["j", 20, "comesFrom", ["j"], [9]], ["max", 26, "comesFrom", ["max"], [5]], ["max", 34, "comesFrom", ["max"], [27]], ["id", 33, "comesFrom", ["id"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::534", "code": "#include \"contentmanager.h\"\n#include \"../graphics/graphicsdevice.h\"\n#include \"../graphics/mesh.h\"\n#include \"../graphics/texture2d.h\"\n#include \"../graphics/font.h\"\n#include \"../graphics/shader.h\"\n\nnamespace iris\n{\n\nContentManager::ContentManager(GraphicsDevicePtr graphics)\n{\n    this->graphics = graphics;\n}\n\nMeshPtr ContentManager::loadMesh(QString meshPath)\n{\n    return Mesh::loadMesh(meshPath);\n}\n\nTexture2DPtr ContentManager::loadTexture(QString texturePath, bool flipY)\n{\n    return Texture2D::load(texturePath, flipY);\n}\n\nFontPtr ContentManager::loadDefaultFont(int size)\n{\n    return Font::create(graphics, size);\n}\n\nFontPtr ContentManager::loadFont(QString fontName, int size)\n{\n    return Font::create(graphics, fontName, size);\n}\n\nShaderPtr ContentManager::loadShader(QString vertexShaderPath, QString fragmentShaderPath)\n{\n    return Shader::load(vertexShaderPath, fragmentShaderPath);\n}\n\nContentManagerPtr ContentManager::create(GraphicsDevicePtr graphics)\n{\n    return ContentManagerPtr(new ContentManager(graphics));\n}\n\n\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "content", "manager", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "g", "raphics", "/", "g", "raphics", "device", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "g", "raphics", "/", "m", "esh", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "g", "raphics", "/", "texture", "2", "d", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "g", "raphics", "/", "font", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "g", "raphics", "/", "sh", "ader", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġir", "is", "Ċ", "{", "Ċ", "Ċ", "Content", "Manager", "::", "Content", "Manager", "(", "Graphics", "Device", "Ptr", "Ġgraphics", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "g", "raphics", "Ġ=", "Ġgraphics", ";", "Ċ", "}", "Ċ", "Ċ", "Mesh", "Ptr", "ĠContent", "Manager", "::", "load", "Mesh", "(", "Q", "String", "Ġmesh", "Path", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠMesh", "::", "load", "Mesh", "(", "m", "esh", "Path", ");", "Ċ", "}", "Ċ", "Ċ", "Texture", "2", "DP", "tr", "ĠContent", "Manager", "::", "load", "Texture", "(", "Q", "String", "Ġtexture", "Path", ",", "Ġbool", "Ġflip", "Y", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠTexture", "2", "D", "::", "load", "(", "texture", "Path", ",", "Ġflip", "Y", ");", "Ċ", "}", "Ċ", "Ċ", "Font", "Ptr", "ĠContent", "Manager", "::", "load", "Default", "Font", "(", "int", "Ġsize", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠFont", "::", "create", "(", "g", "raphics", ",", "Ġsize", ");", "Ċ", "}", "Ċ", "Ċ", "Font", "Ptr", "ĠContent", "Manager", "::", "load", "Font", "(", "Q", "String", "Ġfont", "Name", ",", "Ġint", "Ġsize", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠFont", "::", "create", "(", "g", "raphics", ",", "Ġfont", "Name", ",", "Ġsize", ");", "Ċ", "}", "Ċ", "Ċ", "Sh", "ader", "Ptr", "ĠContent", "Manager", "::", "load", "Sh", "ader", "(", "Q", "String", "Ġvertex", "Sh", "ader", "Path", ",", "ĠQ", "String", "Ġfragment", "Sh", "ader", "Path", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠSh", "ader", "::", "load", "(", "ver", "tex", "Sh", "ader", "Path", ",", "Ġfragment", "Sh", "ader", "Path", ");", "Ċ", "}", "Ċ", "Ċ", "Content", "Manager", "Ptr", "ĠContent", "Manager", "::", "create", "(", "Graphics", "Device", "Ptr", "Ġgraphics", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠContent", "Manager", "Ptr", "(", "new", "ĠContent", "Manager", "(", "g", "raphics", "));", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["graphics", 2, "comesFrom", ["graphics"], [1]], ["graphics", 3, "comesFrom", ["graphics"], [1]], ["graphics", 17, "comesFrom", ["graphics"], [1]], ["graphics", 23, "comesFrom", ["graphics"], [1]], ["graphics", 35, "comesFrom", ["graphics"], [33]], ["meshPath", 7, "comesFrom", ["meshPath"], [5]], ["texturePath", 12, "comesFrom", ["texturePath"], [9]], ["flipY", 13, "comesFrom", ["flipY"], [10]], ["size", 18, "comesFrom", ["size"], [15]], ["size", 25, "comesFrom", ["size"], [21]], ["fontName", 24, "comesFrom", ["fontName"], [20]], ["vertexShaderPath", 30, "comesFrom", ["vertexShaderPath"], [27]], ["fragmentShaderPath", 31, "comesFrom", ["fragmentShaderPath"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::535", "code": "#include <cas_cci.h>\n#include \"gtest/gtest.h\"\n\nTEST(CCI_Get_Holdability, Basic) {\n  int conn_handle;\n  int port = 33700;\n  char *ip = \"127.0.0.1\";\n  char *db_name = \"demodb\";\n  char *db_user = \"dba\";\n  char *url = \"cci:CUBRID:127.0.0.1:33700:demodb:dba::\";\n  T_CCI_ERROR err_buf;\n  int hold;\n\n  conn_handle = cci_connect (ip, port, db_name, db_user, \"\");\n  EXPECT_LE(0, conn_handle);\n\n  hold = cci_get_holdability (conn_handle);\n\n  if (hold == 0 || hold == 1)\n  {\n    EXPECT_TRUE(1);\n  }\n  else\n  {\n    EXPECT_TRUE(0);\n  }\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "cas", "_", "cci", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "g", "test", "/", "g", "test", ".", "h", "\"", "Ċ", "Ċ", "T", "EST", "(", "CC", "I", "_", "Get", "_", "Hold", "ability", ",", "ĠBasic", ")", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġconn", "_", "handle", ";", "Ċ", "Ġ", "Ġint", "Ġport", "Ġ=", "Ġ337", "00", ";", "Ċ", "Ġ", "Ġchar", "Ġ*", "ip", "Ġ=", "Ġ\"", "127", ".", "0", ".", "0", ".", "1", "\";", "Ċ", "Ġ", "Ġchar", "Ġ*", "db", "_", "name", "Ġ=", "Ġ\"", "dem", "od", "b", "\";", "Ċ", "Ġ", "Ġchar", "Ġ*", "db", "_", "user", "Ġ=", "Ġ\"", "d", "ba", "\";", "Ċ", "Ġ", "Ġchar", "Ġ*", "url", "Ġ=", "Ġ\"", "cci", ":", "C", "UB", "R", "ID", ":", "127", ".", "0", ".", "0", ".", "1", ":", "33", "700", ":", "dem", "od", "b", ":", "d", "ba", "::", "\";", "Ċ", "Ġ", "ĠT", "_", "CC", "I", "_", "ERROR", "Ġerr", "_", "buf", ";", "Ċ", "Ġ", "Ġint", "Ġhold", ";", "ĊĊ", "Ġ", "Ġconn", "_", "handle", "Ġ=", "Ġc", "ci", "_", "connect", "Ġ(", "ip", ",", "Ġport", ",", "Ġdb", "_", "name", ",", "Ġdb", "_", "user", ",", "Ġ\"\"", ");", "Ċ", "Ġ", "ĠEXP", "ECT", "_", "LE", "(", "0", ",", "Ġconn", "_", "handle", ");", "ĊĊ", "Ġ", "Ġhold", "Ġ=", "Ġc", "ci", "_", "get", "_", "hold", "ability", "Ġ(", "conn", "_", "handle", ");", "ĊĊ", "Ġ", "Ġif", "Ġ(", "hold", "Ġ==", "Ġ0", "Ġ||", "Ġhold", "Ġ==", "Ġ1", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "TR", "UE", "(", "1", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "TR", "UE", "(", "0", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["port", 12, "comesFrom", ["port"], [2]], ["conn_handle", 16, "comesFrom", ["conn_handle"], [9]], ["conn_handle", 19, "comesFrom", ["conn_handle"], [9]], ["hold", 20, "comesFrom", ["hold"], [17]], ["hold", 21, "comesFrom", ["hold"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::536", "code": "﻿#include \"TestPopLayer.h\"\n\nTestPopLayer::TestPopLayer()\n{\n\n}\n\nTestPopLayer::~TestPopLayer()\n{\n\n}\n\nbool TestPopLayer::init()\n{\n\tif (!Pop::init()) return false;\n\t\t\n\tinitUI();\n\treturn true;\n}\n\n\nvoid TestPopLayer::initData()\n{\n\n}\n\nvoid TestPopLayer::initUI()\n{\n\tauto sp = Sprite::create(\"HelloWorld.png\");\n\tsp->setTag(99);\n\tm_popNode->addChild(sp);\n}", "code_tokens": ["Ġï", "»", "¿", "#", "include", "Ġ\"", "Test", "Pop", "Layer", ".", "h", "\"", "Ċ", "Ċ", "Test", "Pop", "Layer", "::", "Test", "Pop", "Layer", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Test", "Pop", "Layer", "::", "~", "Test", "Pop", "Layer", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠTest", "Pop", "Layer", "::", "init", "()", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(!", "Pop", "::", "init", "())", "Ġreturn", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "init", "UI", "();", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠTest", "Pop", "Layer", "::", "init", "Data", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTest", "Pop", "Layer", "::", "init", "UI", "()", "Ċ", "{", "Ċ", "ĉ", "auto", "Ġsp", "Ġ=", "ĠSprite", "::", "create", "(\"", "Hello", "World", ".", "png", "\");", "Ċ", "ĉ", "sp", "->", "set", "Tag", "(", "99", ");", "Ċ", "ĉ", "m", "_", "pop", "Node", "->", "add", "Child", "(", "sp", ");", "Ċ", "}"], "dataflow_graph": [["sp", 9, "comesFrom", ["sp"], [7]], ["sp", 13, "comesFrom", ["sp"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::537", "code": "/*\n *\n * (c) domzigm 2016 - GPLv3\n * https://github.com/domzigm/mt\n * \n */\n\n#include \"FigureDetection.h\"\n#include \"HelperRoutines.h\"\n\nusing namespace cv;\n\nnamespace mt\n{\n\nuint8_t locateFigure(const colorDescription& desc, const Mat& srcimage, Rect& rect)\n{\n\t// Assume the srcimage is already in HSV color space\n\tMat dstimage;\n\tstd::vector<std::vector<Point>> contours;\n\tstd::vector<Vec4i> hierarchy;\n\tuint32_t largest_contour_index = 0;\n\tuint32_t largest_area = 0;\n\n\tinHsvRange(srcimage, desc, dstimage);\n\tmorphOps(dstimage);\n\n\tfindContours(dstimage, contours, hierarchy, CV_RETR_CCOMP, CV_CHAIN_APPROX_SIMPLE);\n\n\tfor (uint32_t i = 0; i < contours.size(); i++) {\n\n\t\t//  Find the area of contour\n\t\tuint32_t a = (uint32_t)contourArea(contours[i], false);\n\t\tif (a > largest_area) {\n\n\t\t\t// Store the index of largest contour\n\t\t\tlargest_contour_index = i;\n\t\t\tlargest_area = a;\n\t\t}\n\t}\n\n\tif (contours.size() > 0) {\n\n\t\trect = boundingRect(contours[largest_contour_index]);\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ(", "c", ")", "Ġdom", "z", "igm", "Ġ2016", "Ġ-", "ĠGPL", "v", "3", "Ċ", "Ġ*", "Ġhttps", "://", "github", ".", "com", "/", "dom", "z", "igm", "/", "mt", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Figure", "Det", "ection", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Helper", "R", "out", "ines", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġc", "v", ";", "Ċ", "Ċ", "names", "pace", "Ġmt", "Ċ", "{", "Ċ", "Ċ", "uint", "8", "_", "t", "Ġlocate", "Figure", "(", "const", "Ġcolor", "Description", "&", "Ġdesc", ",", "Ġconst", "ĠMat", "&", "Ġsrc", "image", ",", "ĠRect", "&", "Ġrect", ")", "Ċ", "{", "Ċ", "ĉ", "//", "ĠAss", "ume", "Ġthe", "Ġsrc", "image", "Ġis", "Ġalready", "Ġin", "ĠHS", "V", "Ġcolor", "Ġspace", "Ċ", "ĉ", "Mat", "Ġdst", "image", ";", "Ċ", "ĉ", "std", "::", "vector", "<", "std", "::", "vector", "<", "Point", ">>", "Ġcont", "ours", ";", "Ċ", "ĉ", "std", "::", "vector", "<", "V", "ec", "4", "i", ">", "Ġhierarchy", ";", "Ċ", "ĉ", "uint", "32", "_", "t", "Ġlargest", "_", "cont", "our", "_", "index", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "uint", "32", "_", "t", "Ġlargest", "_", "area", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "in", "H", "sv", "Range", "(", "src", "image", ",", "Ġdesc", ",", "Ġdst", "image", ");", "Ċ", "ĉ", "morph", "Ops", "(", "d", "st", "image", ");", "ĊĊ", "ĉ", "find", "Cont", "ours", "(", "d", "st", "image", ",", "Ġcont", "ours", ",", "Ġhierarchy", ",", "ĠCV", "_", "RE", "TR", "_", "CC", "OM", "P", ",", "ĠCV", "_", "CH", "AIN", "_", "AP", "PRO", "X", "_", "SIM", "PLE", ");", "ĊĊ", "ĉ", "for", "Ġ(", "uint", "32", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġcont", "ours", ".", "size", "();", "Ġi", "++)", "Ġ{", "ĊĊ", "ĉ", "ĉ", "//", "Ġ", "ĠFind", "Ġthe", "Ġarea", "Ġof", "Ġcont", "our", "Ċ", "ĉ", "ĉ", "uint", "32", "_", "t", "Ġa", "Ġ=", "Ġ(", "uint", "32", "_", "t", ")", "cont", "our", "Area", "(", "cont", "ours", "[", "i", "],", "Ġfalse", ");", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "a", "Ġ>", "Ġlargest", "_", "area", ")", "Ġ{", "ĊĊ", "ĉ", "ĉ", "ĉ", "//", "ĠStore", "Ġthe", "Ġindex", "Ġof", "Ġlargest", "Ġcont", "our", "Ċ", "ĉ", "ĉ", "ĉ", "largest", "_", "cont", "our", "_", "index", "Ġ=", "Ġi", ";", "Ċ", "ĉ", "ĉ", "ĉ", "largest", "_", "area", "Ġ=", "Ġa", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "if", "Ġ(", "cont", "ours", ".", "size", "()", "Ġ>", "Ġ0", ")", "Ġ{", "ĊĊ", "ĉ", "ĉ", "rect", "Ġ=", "Ġbound", "ing", "Rect", "(", "cont", "ours", "[", "largest", "_", "cont", "our", "_", "index", "]);", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["dstimage", 13, "comesFrom", ["dstimage"], [5]], ["dstimage", 15, "comesFrom", ["dstimage"], [5]], ["dstimage", 17, "comesFrom", ["dstimage"], [5]], ["contours", 18, "comesFrom", ["contours"], [6]], ["contours", 24, "comesFrom", ["contours"], [6]], ["contours", 29, "comesFrom", ["contours"], [6]], ["contours", 37, "comesFrom", ["contours"], [6]], ["contours", 41, "comesFrom", ["contours"], [6]], ["hierarchy", 19, "comesFrom", ["hierarchy"], [7]], ["i", 23, "comesFrom", ["i"], [22]], ["i", 26, "comesFrom", ["i"], [22]], ["i", 30, "comesFrom", ["i"], [22]], ["i", 34, "comesFrom", ["i"], [22]], ["a", 31, "comesFrom", ["a"], [27]], ["a", 36, "comesFrom", ["a"], [27]], ["largest_area", 32, "comesFrom", ["largest_area"], [9]], ["largest_contour_index", 42, "comesFrom", ["largest_contour_index"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::538", "code": "class Solution {\npublic:\n    string longestPalindrome(string s) {\n        int start = 0, end = 0;\n        for (int i = 0; i < s.length(); i++) {\n            int len1 = expandAroundCenter(s, i, i);\n            int len2 = expandAroundCenter(s, i, i + 1);\n            int len = max(len1, len2);\n            if (len > end - start + 1) {\n                start = i - (len - 1) / 2;\n                end = i + len / 2;\n            }\n        }\n        return s.substr(start, end - start + 1);\n    }\n\nprivate:\n    int expandAroundCenter(string s, int left, int right) {\n        int l = left, r = right;\n        while (l >= 0 && r < s.length() && s[l] == s[r]) {\n            l--;\n            r++;\n        }\n        return r - l - 1;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġlongest", "Pal", "ind", "rome", "(", "string", "Ġs", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġstart", "Ġ=", "Ġ0", ",", "Ġend", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġs", ".", "length", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "1", "Ġ=", "Ġexpand", "Around", "Center", "(", "s", ",", "Ġi", ",", "Ġi", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "2", "Ġ=", "Ġexpand", "Around", "Center", "(", "s", ",", "Ġi", ",", "Ġi", "Ġ+", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "Ġ=", "Ġmax", "(", "len", "1", ",", "Ġlen", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "len", "Ġ>", "Ġend", "Ġ-", "Ġstart", "Ġ+", "Ġ1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstart", "Ġ=", "Ġi", "Ġ-", "Ġ(", "len", "Ġ-", "Ġ1", ")", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġend", "Ġ=", "Ġi", "Ġ+", "Ġlen", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġs", ".", "sub", "str", "(", "start", ",", "Ġend", "Ġ-", "Ġstart", "Ġ+", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "private", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġexpand", "Around", "Center", "(", "string", "Ġs", ",", "Ġint", "Ġleft", ",", "Ġint", "Ġright", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġl", "Ġ=", "Ġleft", ",", "Ġr", "Ġ=", "Ġright", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "l", "Ġ>=", "Ġ0", "Ġ&&", "Ġr", "Ġ<", "Ġs", ".", "length", "()", "Ġ&&", "Ġs", "[", "l", "]", "Ġ==", "Ġs", "[", "r", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġl", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġr", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġr", "Ġ-", "Ġl", "Ġ-", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 8, "comesFrom", ["i"], [4]], ["i", 12, "comesFrom", ["i"], [4]], ["i", 13, "comesFrom", ["i"], [4]], ["i", 17, "comesFrom", ["i"], [4]], ["i", 18, "comesFrom", ["i"], [4]], ["i", 27, "comesFrom", ["i"], [4]], ["i", 30, "comesFrom", ["i"], [4]], ["s", 6, "comesFrom", ["s"], [1]], ["s", 11, "comesFrom", ["s"], [1]], ["s", 16, "comesFrom", ["s"], [1]], ["s", 32, "comesFrom", ["s"], [1]], ["s", 47, "comesFrom", ["s"], [38]], ["s", 49, "comesFrom", ["s"], [38]], ["s", 51, "comesFrom", ["s"], [38]], ["len1", 21, "comesFrom", ["len1"], [9]], ["len2", 22, "comesFrom", ["len2"], [14]], ["len", 23, "comesFrom", ["len"], [19]], ["len", 28, "comesFrom", ["len"], [19]], ["len", 31, "comesFrom", ["len"], [19]], ["end", 24, "comesFrom", ["end"], [3]], ["end", 35, "comesFrom", ["end"], [29]], ["start", 25, "comesFrom", ["start"], [2]], ["start", 34, "comesFrom", ["start"], [26]], ["start", 36, "comesFrom", ["start"], [26]], ["l", 45, "comesFrom", ["l"], [41]], ["l", 50, "comesFrom", ["l"], [41]], ["l", 53, "comesFrom", ["l"], [41]], ["l", 56, "comesFrom", ["l"], [41]], ["r", 46, "comesFrom", ["r"], [43]], ["r", 52, "comesFrom", ["r"], [43]], ["r", 54, "comesFrom", ["r"], [43]], ["r", 55, "comesFrom", ["r"], [43]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::539", "code": "/* This file is part of Wikt.\n *\n * Wikt is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Wikt is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Wikt. If not, see <http://www.gnu.org/licenses/>.\n */\n#include \"bulletlistnode.h\"\n\nBulletListNode::BulletListNode() : Node(Node::BulletList)\n{\n}\n\nQString BulletListNode::toXHtml() const\n{\n  if (!_xhtmlVisible) return \"\";\n  return QString(\"<ul>%1</ul>\").arg(childrenToXHtml());\n}\n\nQString BulletListNode::toXml(int indentLevel) const\n{\n  QString indent(indentLevel, ' ');\n  return indent + QString(\"<bullet_list>\\n\") +\n    childrenToXml(indentLevel+1) +\n    indent + \"</bullet_list>\\n\";\n}\n", "code_tokens": ["Ġ/*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠWik", "t", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠWik", "t", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠWik", "t", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠWik", "t", ".", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "bul", "let", "list", "node", ".", "h", "\"", "Ċ", "Ċ", "Bul", "let", "List", "Node", "::", "Bul", "let", "List", "Node", "()", "Ġ:", "ĠNode", "(", "Node", "::", "Bul", "let", "List", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Q", "String", "ĠBullet", "List", "Node", "::", "to", "X", "H", "tml", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(!", "_", "x", "html", "V", "isible", ")", "Ġreturn", "Ġ\"", "\";", "Ċ", "Ġ", "Ġreturn", "ĠQ", "String", "(\"", "<", "ul", ">", "%", "1", "</", "ul", ">", "\").", "arg", "(", "children", "To", "X", "H", "tml", "());", "Ċ", "}", "Ċ", "Ċ", "Q", "String", "ĠBullet", "List", "Node", "::", "to", "X", "ml", "(", "int", "Ġindent", "Level", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠQ", "String", "Ġindent", "(", "ind", "ent", "Level", ",", "Ġ'", "Ġ'", ");", "Ċ", "Ġ", "Ġreturn", "Ġindent", "Ġ+", "ĠQ", "String", "(\"", "<", "bul", "let", "_", "list", ">", "\\", "n", "\")", "Ġ+", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchildren", "To", "X", "ml", "(", "ind", "ent", "Level", "+", "1", ")", "Ġ+", "Ċ", "Ġ", "Ġ", "Ġ", "Ġindent", "Ġ+", "Ġ\"", "</", "bul", "let", "_", "list", ">", "\\", "n", "\";", "Ċ", "}", "Ċ"], "dataflow_graph": [["indentLevel", 11, "comesFrom", ["indentLevel"], [9]], ["indentLevel", 15, "comesFrom", ["indentLevel"], [9]], ["indent", 12, "comesFrom", ["indent"], [10]], ["indent", 16, "comesFrom", ["indent"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::540", "code": "#include <iostream>\n#include <Misc/Datum.h>\n#include <Misc/create_parse.h>\n#include <Misc/TimeStamp.h>\n\nint main()\n{\n  std::cout << ManuProC::Datum::from_access(\"14.04.2012 00:00:00\") << '\\n';\n  ManuProC::TimeStamp ts(\"2012-04-01 12:00:00+2\");\n  std::cout << ts << '\\n';\n  std::cout << time_t(ts) << ' ' << ManuProC::TimeStamp(time_t(ts)) << '\\n';\n  std::cout << ManuProC::TimeStamp(ManuProC::Datum(14,4,2012),12,0,0) << '\\n';\n  std::cout << ManuProC::parse<float>(\"-24.8\") << '\\n';\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "M", "isc", "/", "D", "atum", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "M", "isc", "/", "create", "_", "parse", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "M", "isc", "/", "Time", "St", "amp", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "ĠMan", "u", "Pro", "C", "::", "D", "atum", "::", "from", "_", "access", "(\"", "14", ".", "04", ".", "2012", "Ġ00", ":", "00", ":", "00", "\")", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "ĠMan", "u", "Pro", "C", "::", "Time", "St", "amp", "Ġts", "(\"", "2012", "-", "04", "-", "01", "Ġ12", ":", "00", ":", "00", "+", "2", "\");", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġts", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġtime", "_", "t", "(", "ts", ")", "Ġ<<", "Ġ'", "Ġ'", "Ġ<<", "ĠMan", "u", "Pro", "C", "::", "Time", "St", "amp", "(", "time", "_", "t", "(", "ts", "))", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "ĠMan", "u", "Pro", "C", "::", "Time", "St", "amp", "(", "Man", "u", "Pro", "C", "::", "D", "atum", "(", "14", ",", "4", ",", "2012", "),", "12", ",", "0", ",", "0", ")", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "ĠMan", "u", "Pro", "C", "::", "parse", "<", "float", ">", "(\"", "-", "24", ".", "8", "\")", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["ts", 5, "comesFrom", ["ts"], [3]], ["ts", 8, "comesFrom", ["ts"], [3]], ["ts", 11, "comesFrom", ["ts"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::541", "code": "// Copyright 2021 Peter Dimov.\n// Distributed under the Boost Software License, Version 1.0.\n// https://www.boost.org/LICENSE_1_0.txt\n\n#include <boost/system/result.hpp>\n#include <boost/core/lightweight_test.hpp>\n#include <string>\n\nusing namespace boost::system;\n\nstruct X\n{\n    int a, b;\n};\n\nresult<X> fx1()\n{\n    return {{ EINVAL, generic_category() }};\n}\n\nstruct Y\n{\n    std::string v;\n};\n\nstruct E\n{\n    int v;\n};\n\nresult<Y, E> fy1()\n{\n    return {{ 42 }};\n}\n\nint main()\n{\n    {\n        result<X> r = fx1();\n\n        BOOST_TEST( !r.has_value() );\n        BOOST_TEST( r.has_error() );\n\n        BOOST_TEST_EQ( r.error(), std::error_code( EINVAL, generic_category() ) );\n    }\n\n    {\n        result<Y, E> r = fy1();\n\n        BOOST_TEST( !r.has_value() );\n        BOOST_TEST( r.has_error() );\n\n        BOOST_TEST_EQ( r.error().v, 42 );\n    }\n\n    return boost::report_errors();\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2021", "ĠPeter", "ĠDim", "ov", ".", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ċ", "//", "Ġhttps", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "system", "/", "result", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "core", "/", "light", "weight", "_", "test", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġboost", "::", "system", ";", "Ċ", "Ċ", "struct", "ĠX", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ";", "Ċ", "};", "Ċ", "Ċ", "result", "<", "X", ">", "Ġf", "x", "1", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ{{", "ĠE", "IN", "VAL", ",", "Ġgeneric", "_", "category", "()", "Ġ}", "};", "Ċ", "}", "Ċ", "Ċ", "struct", "ĠY", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġv", ";", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠE", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġv", ";", "Ċ", "};", "Ċ", "Ċ", "result", "<", "Y", ",", "ĠE", ">", "Ġf", "y", "1", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ{{", "Ġ42", "Ġ}", "};", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "<", "X", ">", "Ġr", "Ġ=", "Ġf", "x", "1", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "(", "Ġ!", "r", ".", "has", "_", "value", "()", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "(", "Ġr", ".", "has", "_", "error", "()", "Ġ);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "_", "E", "Q", "(", "Ġr", ".", "error", "(),", "Ġstd", "::", "error", "_", "code", "(", "ĠE", "IN", "VAL", ",", "Ġgeneric", "_", "category", "()", "Ġ)", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "<", "Y", ",", "ĠE", ">", "Ġr", "Ġ=", "Ġf", "y", "1", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "(", "Ġ!", "r", ".", "has", "_", "value", "()", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "(", "Ġr", ".", "has", "_", "error", "()", "Ġ);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "_", "E", "Q", "(", "Ġr", ".", "error", "().", "v", ",", "Ġ42", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġboost", "::", "report", "_", "errors", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["r", 13, "comesFrom", ["r"], [10]], ["r", 16, "comesFrom", ["r"], [10]], ["r", 19, "comesFrom", ["r"], [10]], ["r", 27, "comesFrom", ["r"], [24]], ["r", 30, "comesFrom", ["r"], [24]], ["r", 33, "comesFrom", ["r"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::542", "code": "\n#include \"Parser.h\"\n\nParser::Parser(Scanner* scanner, EvalQueue* q)\n\t: Parser(scanner)\n{ mInternalQ = q; }\n\n\nvoid Parser::eq_(str& s, EvalAtomType atomType)\n{\n\tif (mInternalQ == NULL)\n\t\treturn;\n\n\tif (s.empty())\n\t\treturn;\n\n\tEvalAtom* atom = new EvalAtom(s, atomType);\n\tmInternalQ->push_back(atom);\n}", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "Parser", ".", "h", "\"", "Ċ", "Ċ", "Parser", "::", "Parser", "(", "Scan", "ner", "*", "Ġscanner", ",", "ĠEval", "Queue", "*", "Ġq", ")", "Ċ", "ĉ", ":", "ĠPars", "er", "(", "scan", "ner", ")", "Ċ", "{", "Ġm", "Internal", "Q", "Ġ=", "Ġq", ";", "Ġ}", "ĊĊ", "Ċ", "void", "ĠPars", "er", "::", "eq", "_(", "str", "&", "Ġs", ",", "ĠEval", "At", "om", "Type", "Ġatom", "Type", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "m", "Internal", "Q", "Ġ==", "ĠNULL", ")", "Ċ", "ĉ", "ĉ", "return", ";", "ĊĊ", "ĉ", "if", "Ġ(", "s", ".", "empty", "())", "Ċ", "ĉ", "ĉ", "return", ";", "ĊĊ", "ĉ", "E", "val", "At", "om", "*", "Ġatom", "Ġ=", "Ġnew", "ĠEval", "At", "om", "(", "s", ",", "Ġatom", "Type", ");", "Ċ", "ĉ", "m", "Internal", "Q", "->", "push", "_", "back", "(", "atom", ");", "Ċ", "}"], "dataflow_graph": [["mInternalQ", 10, "comesFrom", ["mInternalQ"], [5]], ["mInternalQ", 16, "comesFrom", ["mInternalQ"], [5]], ["atomType", 15, "comesFrom", ["atomType"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::543", "code": "/****\n * Sming Framework Project - Open Source framework for high efficiency native ESP8266 development.\n * Created 2015 by Skurydin Alexey\n * http://github.com/SmingHub/Sming\n * All files of the Sming Core are provided under the LGPL v3 license.\n *\n * HttpServer.cpp\n *\n * Modified: 2017 - Slavey Karadzhov <slav@attachix.com>\n *\n ****/\n\n#include \"HttpServer.h\"\n#include \"TcpClient.h\"\n#include \"WString.h\"\n\n#ifdef ENABLE_HTTP_SERVER_MULTIPART\n#include <MultipartParser/MultipartParser.h>\n#endif\n\nvoid HttpServer::configure(const HttpServerSettings& settings)\n{\n\tthis->settings = settings;\n\tif(settings.minHeapSize > -1) {\n\t\tminHeapSize = settings.minHeapSize;\n\t}\n\n\tif(settings.useDefaultBodyParsers) {\n\t\tsetBodyParser(MIME_FORM_URL_ENCODED, formUrlParser);\n#ifdef ENABLE_HTTP_SERVER_MULTIPART\n\t\tsetBodyParser(MIME_FORM_MULTIPART, formMultipartParser);\n#endif\n\t}\n\n\tsetKeepAlive(settings.keepAliveSeconds);\n#ifdef ENABLE_SSL\n\tsslSessionCacheSize = settings.sslSessionCacheSize;\n#endif\n}\n\nTcpConnection* HttpServer::createClient(tcp_pcb* clientTcp)\n{\n\tHttpServerConnection* con = new HttpServerConnection(clientTcp);\n\tcon->setResourceTree(&paths);\n\tcon->setBodyParsers(&bodyParsers);\n\n\treturn con;\n}\n", "code_tokens": ["Ġ/", "****", "Ċ", "Ġ*", "ĠS", "ming", "ĠFramework", "ĠProject", "Ġ-", "ĠOpen", "ĠSource", "Ġframework", "Ġfor", "Ġhigh", "Ġefficiency", "Ġnative", "ĠESP", "8", "266", "Ġdevelopment", ".", "Ċ", "Ġ*", "ĠCreated", "Ġ2015", "Ġby", "ĠSk", "ury", "din", "ĠAlex", "ey", "Ċ", "Ġ*", "Ġhttp", "://", "github", ".", "com", "/", "S", "ming", "Hub", "/", "S", "ming", "Ċ", "Ġ*", "ĠAll", "Ġfiles", "Ġof", "Ġthe", "ĠS", "ming", "ĠCore", "Ġare", "Ġprovided", "Ġunder", "Ġthe", "ĠLG", "PL", "Ġv", "3", "Ġlicense", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠH", "ttp", "Server", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠModified", ":", "Ġ2017", "Ġ-", "ĠSlave", "y", "ĠKar", "ad", "zh", "ov", "Ġ<", "sl", "av", "@", "attach", "ix", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ****", "/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Http", "Server", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "T", "cp", "Client", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "W", "String", ".", "h", "\"", "Ċ", "Ċ", "#", "if", "def", "ĠE", "NA", "BLE", "_", "HTTP", "_", "SER", "VER", "_", "M", "ULT", "IP", "ART", "Ċ", "#", "include", "Ġ<", "Mult", "ip", "art", "Parser", "/", "Mult", "ip", "art", "Parser", ".", "h", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "void", "ĠH", "ttp", "Server", "::", "config", "ure", "(", "const", "ĠH", "ttp", "Server", "Settings", "&", "Ġsettings", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "settings", "Ġ=", "Ġsettings", ";", "Ċ", "ĉ", "if", "(", "settings", ".", "min", "He", "ap", "Size", "Ġ>", "Ġ-", "1", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "min", "He", "ap", "Size", "Ġ=", "Ġsettings", ".", "min", "He", "ap", "Size", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "if", "(", "settings", ".", "use", "Default", "Body", "P", "ars", "ers", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "set", "Body", "Parser", "(", "M", "IME", "_", "FORM", "_", "URL", "_", "ENC", "OD", "ED", ",", "Ġform", "Url", "Parser", ");", "Ċ", "#", "if", "def", "ĠE", "NA", "BLE", "_", "HTTP", "_", "SER", "VER", "_", "M", "ULT", "IP", "ART", "Ċ", "ĉ", "ĉ", "set", "Body", "Parser", "(", "M", "IME", "_", "FORM", "_", "M", "ULT", "IP", "ART", ",", "Ġform", "Mult", "ip", "art", "Parser", ");", "Ċ", "#", "endif", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "set", "Keep", "Al", "ive", "(", "settings", ".", "keep", "Al", "ive", "Second", "s", ");", "Ċ", "#", "if", "def", "ĠE", "NA", "BLE", "_", "SSL", "Ċ", "ĉ", "ssl", "Session", "Cache", "Size", "Ġ=", "Ġsettings", ".", "ssl", "Session", "Cache", "Size", ";", "Ċ", "#", "endif", "Ċ", "}", "Ċ", "Ċ", "T", "cp", "Connection", "*", "ĠH", "ttp", "Server", "::", "create", "Client", "(", "t", "cp", "_", "pc", "b", "*", "Ġclient", "T", "cp", ")", "Ċ", "{", "Ċ", "ĉ", "Http", "Server", "Connection", "*", "Ġcon", "Ġ=", "Ġnew", "ĠH", "ttp", "Server", "Connection", "(", "client", "T", "cp", ");", "Ċ", "ĉ", "con", "->", "set", "Resource", "Tree", "(&", "path", "s", ");", "Ċ", "ĉ", "con", "->", "set", "Body", "P", "ars", "ers", "(&", "body", "P", "ars", "ers", ");", "ĊĊ", "ĉ", "return", "Ġcon", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["minHeapSize", 9, "comesFrom", ["minHeapSize"], [7]], ["sslSessionCacheSize", 25, "comesFrom", ["sslSessionCacheSize"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::544", "code": "#pragma once\n#include <GameObjects/FreezeEffect.h>\n\nFreezeEffect::FreezeEffect() {}\n\nFreezeEffect::FreezeEffect(Tower* tower) {\n\tthis->_decoratedTower = tower;\n\n\tthis->load(\"resources/images/towers/icetower.png\");\n\tthis->setPosition(tower->getPosition().first, tower->getPosition().second);\t\t// has to be set BEFORE setRange();\n\n\tthis->_id = tower->getID();\n\tthis->_name = tower->getName();\n\tthis->_type = tower->getType();\n\tthis->_upgrade_level = tower->getUpgradeLevel();\n\tthis->_buy_cost = tower->getBuyCost();\n\tthis->_power = tower->getPower();\n\tthis->setRange(tower->getRange());\n\tthis->_rate_of_fire = tower->getRateOfFire();\n\tthis->_upgrade_cost = tower->getUpgradeCost();\n\tthis->_sell_cost = tower->getSellCost();\n\tthis->_target = tower->getTarget();\n\tthis->_strategy.reset(tower->getStrategy());\n}\n\nvoid FreezeEffect::attack() {\n\tTower::attack();\n\tcout << red << \"FreezeEffect critter \" << _target->getId() << endl;\n\tthis->_target->addEffect(new Stun());\n}\n\n// @Override\nstd::string FreezeEffect::getTowerSpecs() {\n\tstd::stringstream output;\n\toutput << Tower::getTowerSpecs();\n\toutput << \"Special Effect: Freezing\" << std::endl;\n\treturn output.str();\n}", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "#", "include", "Ġ<", "Game", "Object", "s", "/", "Free", "ze", "Effect", ".", "h", ">", "Ċ", "Ċ", "Free", "ze", "Effect", "::", "Free", "ze", "Effect", "()", "Ġ{}", "Ċ", "Ċ", "Free", "ze", "Effect", "::", "Free", "ze", "Effect", "(", "T", "ower", "*", "Ġtower", ")", "Ġ{", "Ċ", "ĉ", "this", "->", "_", "dec", "or", "ated", "T", "ower", "Ġ=", "Ġtower", ";", "ĊĊ", "ĉ", "this", "->", "load", "(\"", "resources", "/", "images", "/", "t", "owers", "/", "ic", "et", "ower", ".", "png", "\");", "Ċ", "ĉ", "this", "->", "set", "Position", "(", "tower", "->", "get", "Position", "().", "first", ",", "Ġtower", "->", "get", "Position", "().", "second", ");", "ĉ", "ĉ", "//", "Ġhas", "Ġto", "Ġbe", "Ġset", "ĠBEFORE", "Ġset", "Range", "();", "ĊĊ", "ĉ", "this", "->", "_", "id", "Ġ=", "Ġtower", "->", "get", "ID", "();", "Ċ", "ĉ", "this", "->", "_", "name", "Ġ=", "Ġtower", "->", "get", "Name", "();", "Ċ", "ĉ", "this", "->", "_", "type", "Ġ=", "Ġtower", "->", "get", "Type", "();", "Ċ", "ĉ", "this", "->", "_", "up", "grade", "_", "level", "Ġ=", "Ġtower", "->", "get", "Upgrade", "Level", "();", "Ċ", "ĉ", "this", "->", "_", "buy", "_", "cost", "Ġ=", "Ġtower", "->", "get", "Buy", "Cost", "();", "Ċ", "ĉ", "this", "->", "_", "power", "Ġ=", "Ġtower", "->", "get", "Power", "();", "Ċ", "ĉ", "this", "->", "set", "Range", "(", "tower", "->", "get", "Range", "());", "Ċ", "ĉ", "this", "->", "_", "rate", "_", "of", "_", "fire", "Ġ=", "Ġtower", "->", "get", "Rate", "Of", "Fire", "();", "Ċ", "ĉ", "this", "->", "_", "up", "grade", "_", "cost", "Ġ=", "Ġtower", "->", "get", "Upgrade", "Cost", "();", "Ċ", "ĉ", "this", "->", "_", "sell", "_", "cost", "Ġ=", "Ġtower", "->", "get", "S", "ell", "Cost", "();", "Ċ", "ĉ", "this", "->", "_", "target", "Ġ=", "Ġtower", "->", "get", "Target", "();", "Ċ", "ĉ", "this", "->", "_", "str", "ategy", ".", "reset", "(", "tower", "->", "get", "Str", "ategy", "());", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFreeze", "Effect", "::", "attack", "()", "Ġ{", "Ċ", "ĉ", "T", "ower", "::", "attack", "();", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġred", "Ġ<<", "Ġ\"", "Free", "ze", "Effect", "Ġcrit", "ter", "Ġ\"", "Ġ<<", "Ġ_", "target", "->", "get", "Id", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "this", "->", "_", "target", "->", "add", "Effect", "(", "new", "ĠStun", "());", "Ċ", "}", "Ċ", "Ċ", "//", "Ġ@", "Override", "Ċ", "std", "::", "string", "ĠFreeze", "Effect", "::", "get", "T", "ower", "Spe", "cs", "()", "Ġ{", "Ċ", "ĉ", "std", "::", "string", "stream", "Ġoutput", ";", "Ċ", "ĉ", "output", "Ġ<<", "ĠTower", "::", "get", "T", "ower", "Spe", "cs", "();", "Ċ", "ĉ", "output", "Ġ<<", "Ġ\"", "Special", "ĠEffect", ":", "ĠFree", "zing", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "return", "Ġoutput", ".", "str", "();", "Ċ", "}"], "dataflow_graph": [["output", 61, "comesFrom", ["output"], [60]], ["output", 63, "comesFrom", ["output"], [60]], ["output", 65, "comesFrom", ["output"], [60]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::545", "code": "#include<iostream>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nstruct Node\n{\n\tint data;\n\tNode *next;\n};/*\n  Insert Node at the end of a linked list \n  head pointer input could be NULL as well for empty list\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/\nNode* Insert(Node *head,int data)\n{\n  // Complete this method\n    if(head == NULL){\n        head = (Node *)malloc(sizeof(Node*));\n        head->data = data;\n        head->next = NULL;\n        return head;\n    }\n    \n    Node *curr = head;\n    while(curr->next != NULL){\n        curr = curr->next;\n    }\n    curr->next = (Node *)malloc(sizeof(Node*));\n    curr->next->data = data;\n    curr->next->next = NULL;\n    return head;\n}\n\nvoid Print(Node *head)\n{\n\tNode *temp = head;\n\twhile(temp!= NULL){ cout<<temp->data<<\"\\n\";temp = temp->next;}\n}\nint main()\n{\n\tint t;\n\tcin>>t;\n\tNode *head = NULL;\n\twhile(t-- >0)\n\t{\n\t\tint x; cin>>x;\n\t\thead = Insert(head,x);\n\t}\n\tPrint(head);\n}\n", "code_tokens": ["Ġ#", "include", "<", "i", "ost", "ream", ">", "Ċ", "#", "include", "<", "c", "std", "io", ">", "Ċ", "#", "include", "<", "c", "std", "lib", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "struct", "ĠNode", "Ċ", "{", "Ċ", "ĉ", "int", "Ġdata", ";", "Ċ", "ĉ", "Node", "Ġ*", "next", ";", "Ċ", "};", "/*", "Ċ", "Ġ", "ĠInsert", "ĠNode", "Ġat", "Ġthe", "Ġend", "Ġof", "Ġa", "Ġlinked", "Ġlist", "Ġ", "Ċ", "Ġ", "Ġhead", "Ġpointer", "Ġinput", "Ġcould", "Ġbe", "ĠNULL", "Ġas", "Ġwell", "Ġfor", "Ġempty", "Ġlist", "Ċ", "Ġ", "ĠNode", "Ġis", "Ġdefined", "Ġas", "Ġ", "Ċ", "Ġ", "Ġstruct", "ĠNode", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġdata", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstruct", "ĠNode", "Ġ*", "next", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "*/", "Ċ", "Node", "*", "ĠInsert", "(", "Node", "Ġ*", "head", ",", "int", "Ġdata", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠComplete", "Ġthis", "Ġmethod", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "head", "Ġ==", "ĠNULL", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhead", "Ġ=", "Ġ(", "Node", "Ġ*)", "m", "alloc", "(", "size", "of", "(", "Node", "*", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhead", "->", "data", "Ġ=", "Ġdata", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhead", "->", "next", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNode", "Ġ*", "cur", "r", "Ġ=", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "cur", "r", "->", "next", "Ġ!=", "ĠNULL", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcur", "r", "Ġ=", "Ġcur", "r", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcur", "r", "->", "next", "Ġ=", "Ġ(", "Node", "Ġ*)", "m", "alloc", "(", "size", "of", "(", "Node", "*", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcur", "r", "->", "next", "->", "data", "Ġ=", "Ġdata", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcur", "r", "->", "next", "->", "next", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġhead", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPrint", "(", "Node", "Ġ*", "head", ")", "Ċ", "{", "Ċ", "ĉ", "Node", "Ġ*", "temp", "Ġ=", "Ġhead", ";", "Ċ", "ĉ", "while", "(", "temp", "!", "=", "ĠNULL", "){", "Ġcout", "<<", "temp", "->", "data", "<<", "\"", "\\", "n", "\";", "temp", "Ġ=", "Ġtemp", "->", "next", ";}", "Ċ", "}", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġt", ";", "Ċ", "ĉ", "cin", ">>", "t", ";", "Ċ", "ĉ", "Node", "Ġ*", "head", "Ġ=", "ĠNULL", ";", "Ċ", "ĉ", "while", "(", "t", "--", "Ġ>", "0", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "int", "Ġx", ";", "Ġc", "in", ">>", "x", ";", "Ċ", "ĉ", "ĉ", "head", "Ġ=", "ĠInsert", "(", "head", ",", "x", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Print", "(", "head", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["data", 10, "comesFrom", ["data"], [5]], ["data", 11, "comesFrom", ["data"], [5]], ["data", 27, "comesFrom", ["data"], [5]], ["data", 28, "comesFrom", ["data"], [5]], ["data", 40, "comesFrom", ["data"], [5]], ["head", 9, "comesFrom", ["head"], [7]], ["head", 12, "comesFrom", ["head"], [7]], ["head", 14, "comesFrom", ["head"], [7]], ["head", 32, "comesFrom", ["head"], [16]], ["head", 34, "comesFrom", ["head"], [16]], ["head", 48, "comesFrom", ["head"], [36]], ["head", 55, "comesFrom", ["head"], [53]], ["head", 58, "comesFrom", ["head"], [53]], ["curr", 20, "comesFrom", ["curr"], [19]], ["curr", 22, "comesFrom", ["curr"], [19]], ["curr", 25, "comesFrom", ["curr"], [19]], ["curr", 29, "comesFrom", ["curr"], [19]], ["temp", 42, "comesFrom", ["temp"], [41]], ["t", 47, "comesFrom", ["t"], [45]], ["t", 49, "comesFrom", ["t"], [45]], ["x", 52, "comesFrom", ["x"], [50]], ["x", 56, "comesFrom", ["x"], [50]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::546", "code": "#include \"mbed.h\"\r\n#include \"EthernetInterface.h\"\r\n \r\nint main() {\r\n    EthernetInterface eth;\r\n    eth.init(); //Use DHCP\r\n    eth.connect();\r\n    \r\n    UDPSocket sock;\r\n    sock.init();\r\n    \r\n    Endpoint nist;\r\n    nist.set_address(\"utcnist.colorado.edu\", 37);\r\n    \r\n    char out_buffer[] = \"plop\"; // Does not matter\r\n    sock.sendTo(nist, out_buffer, sizeof(out_buffer));\r\n    \r\n    char in_buffer[4];\r\n    int n = sock.receiveFrom(nist, in_buffer, sizeof(in_buffer));\r\n    \r\n    unsigned int timeRes = ntohl( *((unsigned int*)in_buffer));\r\n    printf(\"Received %d bytes from server %s on port %d: %u seconds since 1/01/1900 00:00 GMT\\n\", n, nist.get_address(), nist.get_port(), timeRes);\r\n    \r\n    sock.close();\r\n    \r\n    eth.disconnect();\r\n    while(1) {}\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "mb", "ed", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "E", "ther", "net", "Interface", ".", "h", "\"", "č", "Ċ", "Ġ", "č", "Ċ", "int", "Ġmain", "()", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEthernet", "Interface", "Ġeth", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġeth", ".", "init", "();", "Ġ//", "Use", "ĠDHCP", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġeth", ".", "connect", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠUD", "PS", "ocket", "Ġsock", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsock", ".", "init", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEnd", "point", "Ġn", "ist", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġn", "ist", ".", "set", "_", "address", "(\"", "ut", "cn", "ist", ".", "color", "ado", ".", "edu", "\",", "Ġ37", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġout", "_", "buffer", "[]", "Ġ=", "Ġ\"", "pl", "op", "\";", "Ġ//", "ĠDoes", "Ġnot", "Ġmatter", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsock", ".", "send", "To", "(", "n", "ist", ",", "Ġout", "_", "buffer", ",", "Ġsizeof", "(", "out", "_", "buffer", "));", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġin", "_", "buffer", "[", "4", "];", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġsock", ".", "re", "ceive", "From", "(", "n", "ist", ",", "Ġin", "_", "buffer", ",", "Ġsizeof", "(", "in", "_", "buffer", "));", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġint", "Ġtime", "Res", "Ġ=", "Ġn", "t", "ohl", "(", "Ġ*", "((", "unsigned", "Ġint", "*)", "in", "_", "buffer", "));", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Re", "ceived", "Ġ%", "d", "Ġbytes", "Ġfrom", "Ġserver", "Ġ%", "s", "Ġon", "Ġport", "Ġ%", "d", ":", "Ġ%", "u", "Ġseconds", "Ġsince", "Ġ1", "/", "01", "/", "1900", "Ġ00", ":", "00", "ĠGMT", "\\", "n", "\",", "Ġn", ",", "Ġn", "ist", ".", "get", "_", "address", "(),", "Ġn", "ist", ".", "get", "_", "port", "(),", "Ġtime", "Res", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsock", ".", "close", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġeth", ".", "dis", "connect", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "1", ")", "Ġ{}", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["eth", 2, "comesFrom", ["eth"], [1]], ["eth", 4, "comesFrom", ["eth"], [1]], ["eth", 37, "comesFrom", ["eth"], [1]], ["sock", 7, "comesFrom", ["sock"], [6]], ["sock", 13, "comesFrom", ["sock"], [6]], ["sock", 20, "comesFrom", ["sock"], [6]], ["sock", 35, "comesFrom", ["sock"], [6]], ["nist", 10, "comesFrom", ["nist"], [9]], ["nist", 15, "comesFrom", ["nist"], [9]], ["nist", 22, "comesFrom", ["nist"], [9]], ["nist", 30, "comesFrom", ["nist"], [9]], ["nist", 32, "comesFrom", ["nist"], [9]], ["n", 29, "comesFrom", ["n"], [19]], ["timeRes", 34, "comesFrom", ["timeRes"], [25]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::547", "code": "/*============================================================\nProblem: Reverse Integer\n==============================================================\nReverse digits of an integer.\n\nExample1: x = 123, return 321\nExample2: x = -123, return -321\n\nAssume that your function returns 0 when the reversed integer \noverflows.\n============================================================*/\nclass Solution {\npublic:\n    int reverse(int x) {\n        bool sign = x > 0 ? true : false;\n        long temp = x;\n        long result = 0;\n        temp = temp > 0 ? temp : -temp;\n        while(temp) {\n            result *= 10;\n            result += temp % 10;\n            temp /= 10;\n        }\n        if (result > INT_MAX || result < INT_MIN)\n            return 0;\n        else {\n            if(sign)\n                return result;\n            else\n                return -result;\n        }\n    }\n};", "code_tokens": ["Ġ/*", "================================", "================", "============", "Ċ", "Problem", ":", "ĠReverse", "ĠInteger", "Ċ", "================================", "================", "============", "==", "Ċ", "R", "ever", "se", "Ġdigits", "Ġof", "Ġan", "Ġinteger", ".", "Ċ", "Ċ", "Example", "1", ":", "Ġx", "Ġ=", "Ġ123", ",", "Ġreturn", "Ġ321", "Ċ", "Example", "2", ":", "Ġx", "Ġ=", "Ġ-", "123", ",", "Ġreturn", "Ġ-", "321", "Ċ", "Ċ", "Ass", "ume", "Ġthat", "Ġyour", "Ġfunction", "Ġreturns", "Ġ0", "Ġwhen", "Ġthe", "Ġreversed", "Ġinteger", "Ġ", "Ċ", "over", "flows", ".", "Ċ", "================================", "================", "============", "*/", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġreverse", "(", "int", "Ġx", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġsign", "Ġ=", "Ġx", "Ġ>", "Ġ0", "Ġ?", "Ġtrue", "Ġ:", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġtemp", "Ġ=", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġresult", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtemp", "Ġ=", "Ġtemp", "Ġ>", "Ġ0", "Ġ?", "Ġtemp", "Ġ:", "Ġ-", "temp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "temp", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ*", "=", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ+=", "Ġtemp", "Ġ%", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtemp", "Ġ/", "=", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "result", "Ġ>", "ĠINT", "_", "MAX", "Ġ||", "Ġresult", "Ġ<", "ĠINT", "_", "MIN", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "sign", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "result", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["x", 3, "comesFrom", ["x"], [1]], ["temp", 8, "comesFrom", ["temp"], [7]], ["temp", 9, "comesFrom", ["temp"], [7]], ["temp", 10, "comesFrom", ["temp"], [7]], ["temp", 11, "comesFrom", ["temp"], [7]], ["temp", 14, "comesFrom", ["temp"], [7]], ["result", 16, "comesFrom", ["result"], [13]], ["result", 18, "comesFrom", ["result"], [13]], ["result", 21, "comesFrom", ["result"], [13]], ["result", 22, "comesFrom", ["result"], [13]], ["sign", 20, "comesFrom", ["sign"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::548", "code": "#include \"eval/eval/attribute_trail.h\"\n\n#include <utility>\n\n#include \"absl/status/status.h\"\n#include \"eval/public/cel_value.h\"\n\nnamespace google::api::expr::runtime {\n\n// Creates AttributeTrail with attribute path incremented by \"qualifier\".\nAttributeTrail AttributeTrail::Step(CelAttributeQualifier qualifier,\n                                    google::protobuf::Arena* arena) const {\n  // Cannot continue void trail\n  if (empty()) return AttributeTrail();\n\n  std::vector<CelAttributeQualifier> qualifiers = attribute_->qualifier_path();\n  qualifiers.push_back(qualifier);\n  return AttributeTrail(google::protobuf::Arena::Create<CelAttribute>(\n      arena, attribute_->variable(), std::move(qualifiers)));\n}\n\n}  // namespace google::api::expr::runtime\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "eval", "/", "eval", "/", "attribute", "_", "tra", "il", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "ab", "sl", "/", "status", "/", "status", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "eval", "/", "public", "/", "cel", "_", "value", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġgoogle", "::", "api", "::", "expr", "::", "runtime", "Ġ{", "Ċ", "Ċ", "//", "ĠCreat", "es", "ĠAtt", "ribute", "Tra", "il", "Ġwith", "Ġattribute", "Ġpath", "Ġincre", "mented", "Ġby", "Ġ\"", "qual", "ifier", "\".", "Ċ", "Attribute", "Tra", "il", "ĠAtt", "ribute", "Tra", "il", "::", "Step", "(", "C", "el", "Attribute", "Qual", "ifier", "Ġqualifier", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġgoogle", "::", "prot", "ob", "uf", "::", "Aren", "a", "*", "Ġarena", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠCannot", "Ġcontinue", "Ġvoid", "Ġtrail", "Ċ", "Ġ", "Ġif", "Ġ(", "empty", "())", "Ġreturn", "ĠAtt", "ribute", "Tra", "il", "();", "ĊĊ", "Ġ", "Ġstd", "::", "vector", "<", "C", "el", "Attribute", "Qual", "ifier", ">", "Ġqualifiers", "Ġ=", "Ġattribute", "_", "->", "qual", "ifier", "_", "path", "();", "Ċ", "Ġ", "Ġqualifiers", ".", "push", "_", "back", "(", "qual", "ifier", ");", "Ċ", "Ġ", "Ġreturn", "ĠAtt", "ribute", "Tra", "il", "(", "google", "::", "prot", "ob", "uf", "::", "Aren", "a", "::", "Create", "<", "C", "el", "Attribute", ">(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġarena", ",", "Ġattribute", "_", "->", "variable", "(),", "Ġstd", "::", "move", "(", "qual", "ifiers", "))", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġgoogle", "::", "api", "::", "expr", "::", "runtime", "Ċ"], "dataflow_graph": [["qualifiers", 8, "comesFrom", ["qualifiers"], [5]], ["qualifiers", 17, "comesFrom", ["qualifiers"], [5]], ["qualifier", 10, "comesFrom", ["qualifier"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::549", "code": "/*\n * fixed_size_io.hpp\n *\n *  Created on: 21 янв. 2016 г.\n *      Author: sergey.fedorov\n */\n\n#ifndef WIRE_DETAIL_FIXED_SIZE_IO_HPP_\n#define WIRE_DETAIL_FIXED_SIZE_IO_HPP_\n\n#include <wire/encoding/types.hpp>\n#include <iostream>\n\nnamespace wire {\nnamespace encoding {\nnamespace detail {\n\ntemplate < typename T >\nstd::ostream&\noperator << (std::ostream& os, fixed_size< T > v)\n{\n\tstd::ostream::sentry s(os);\n\tif (s) {\n\t\tos << v.value;\n\t}\n\treturn os;\n}\n\ntemplate < typename T >\nstd::istream&\noperator >> (std::istream& is, fixed_size< T >& v)\n{\n\tstd::istream::sentry s(is);\n\tif (s) {\n\t\ts >> v.value;\n\t}\n\treturn is;\n}\n\n}  // namespace detail\n}  // namespace encoding\n}  // namespace wire\n\n\n#endif /* WIRE_DETAIL_FIXED_SIZE_IO_HPP_ */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġfixed", "_", "size", "_", "io", ".", "h", "pp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "Ġ21", "Ġ", "Ñı", "Ð½", "Ð²", ".", "Ġ2016", "ĠÐ", "³", ".", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "Ġser", "gey", ".", "fed", "or", "ov", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠWI", "RE", "_", "D", "ETA", "IL", "_", "FIX", "ED", "_", "SIZE", "_", "IO", "_", "H", "PP", "_", "Ċ", "#", "define", "ĠWI", "RE", "_", "D", "ETA", "IL", "_", "FIX", "ED", "_", "SIZE", "_", "IO", "_", "H", "PP", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "wire", "/", "enc", "oding", "/", "types", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "names", "pace", "Ġwire", "Ġ{", "Ċ", "names", "pace", "Ġencoding", "Ġ{", "Ċ", "names", "pace", "Ġdetail", "Ġ{", "Ċ", "Ċ", "template", "Ġ<", "Ġtyp", "ename", "ĠT", "Ġ>", "Ċ", "std", "::", "ost", "ream", "&", "Ċ", "operator", "Ġ<<", "Ġ(", "std", "::", "ost", "ream", "&", "Ġos", ",", "Ġfixed", "_", "size", "<", "ĠT", "Ġ>", "Ġv", ")", "Ċ", "{", "Ċ", "ĉ", "std", "::", "ost", "ream", "::", "s", "entry", "Ġs", "(", "os", ");", "Ċ", "ĉ", "if", "Ġ(", "s", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "os", "Ġ<<", "Ġv", ".", "value", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "Ġtyp", "ename", "ĠT", "Ġ>", "Ċ", "std", "::", "ist", "ream", "&", "Ċ", "operator", "Ġ>>", "Ġ(", "std", "::", "ist", "ream", "&", "Ġis", ",", "Ġfixed", "_", "size", "<", "ĠT", "Ġ>", "&", "Ġv", ")", "Ċ", "{", "Ċ", "ĉ", "std", "::", "ist", "ream", "::", "s", "entry", "Ġs", "(", "is", ");", "Ċ", "ĉ", "if", "Ġ(", "s", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "s", "Ġ>>", "Ġv", ".", "value", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġis", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġdetail", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġencoding", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġwire", "ĊĊ", "Ċ", "#", "endif", "Ġ/*", "ĠWI", "RE", "_", "D", "ETA", "IL", "_", "FIX", "ED", "_", "SIZE", "_", "IO", "_", "H", "PP", "_", "Ġ*/", "Ċ"], "dataflow_graph": [["v", 7, "comesFrom", ["v"], [3]], ["v", 11, "comesFrom", ["v"], [3]], ["v", 15, "comesFrom", ["v"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::550", "code": "#include \"core.hpp\"\n\n#include <cstring>\n\nnamespace tap {\n\nstatic int bytes_traverse(PyObject *object, visitproc visit, void *arg) noexcept\n{\n\treturn 0;\n}\n\nstatic Py_ssize_t bytes_marshaled_size(PyObject *object) noexcept\n{\n\treturn PyBytes_GET_SIZE(object);\n}\n\nstatic int bytes_marshal(PyObject *object, void *buf, Py_ssize_t size, PeerObject &peer) noexcept\n{\n\tmemcpy(buf, PyBytes_AS_STRING(object), size);\n\treturn 0;\n}\n\nstatic PyObject *bytes_unmarshal_alloc(const void *data, Py_ssize_t size, PeerObject &peer) noexcept\n{\n\treturn PyBytes_FromStringAndSize(nullptr, size);\n}\n\nstatic int bytes_unmarshal_init(PyObject *object, const void *data, Py_ssize_t size, PeerObject &peer) noexcept\n{\n\tmemcpy(PyBytes_AS_STRING(object), data, size);\n\treturn 0;\n}\n\nconst TypeHandler bytes_type_handler = {\n\tBYTES_TYPE_ID,\n\tbytes_traverse,\n\tbytes_marshaled_size,\n\tbytes_marshal,\n\tbytes_unmarshal_alloc,\n\tbytes_unmarshal_init,\n};\n\n} // namespace tap\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "core", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "Ċ", "names", "pace", "Ġtap", "Ġ{", "Ċ", "Ċ", "static", "Ġint", "Ġbytes", "_", "tra", "verse", "(", "Py", "Object", "Ġ*", "object", ",", "Ġvisit", "proc", "Ġvisit", ",", "Ġvoid", "Ġ*", "arg", ")", "Ġno", "except", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "static", "ĠPy", "_", "ss", "ize", "_", "t", "Ġbytes", "_", "m", "arsh", "aled", "_", "size", "(", "Py", "Object", "Ġ*", "object", ")", "Ġno", "except", "Ċ", "{", "Ċ", "ĉ", "return", "ĠPy", "Bytes", "_", "GET", "_", "SIZE", "(", "object", ");", "Ċ", "}", "Ċ", "Ċ", "static", "Ġint", "Ġbytes", "_", "m", "arsh", "al", "(", "Py", "Object", "Ġ*", "object", ",", "Ġvoid", "Ġ*", "buf", ",", "ĠPy", "_", "ss", "ize", "_", "t", "Ġsize", ",", "ĠPeer", "Object", "Ġ&", "peer", ")", "Ġno", "except", "Ċ", "{", "Ċ", "ĉ", "mem", "c", "py", "(", "buf", ",", "ĠPy", "Bytes", "_", "AS", "_", "STR", "ING", "(", "object", "),", "Ġsize", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "static", "ĠPy", "Object", "Ġ*", "bytes", "_", "un", "m", "arsh", "al", "_", "alloc", "(", "const", "Ġvoid", "Ġ*", "data", ",", "ĠPy", "_", "ss", "ize", "_", "t", "Ġsize", ",", "ĠPeer", "Object", "Ġ&", "peer", ")", "Ġno", "except", "Ċ", "{", "Ċ", "ĉ", "return", "ĠPy", "Bytes", "_", "From", "String", "And", "Size", "(", "null", "ptr", ",", "Ġsize", ");", "Ċ", "}", "Ċ", "Ċ", "static", "Ġint", "Ġbytes", "_", "un", "m", "arsh", "al", "_", "init", "(", "Py", "Object", "Ġ*", "object", ",", "Ġconst", "Ġvoid", "Ġ*", "data", ",", "ĠPy", "_", "ss", "ize", "_", "t", "Ġsize", ",", "ĠPeer", "Object", "Ġ&", "peer", ")", "Ġno", "except", "Ċ", "{", "Ċ", "ĉ", "mem", "c", "py", "(", "Py", "Bytes", "_", "AS", "_", "STR", "ING", "(", "object", "),", "Ġdata", ",", "Ġsize", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "const", "ĠType", "Handler", "Ġbytes", "_", "type", "_", "handler", "Ġ=", "Ġ{", "Ċ", "ĉ", "BY", "T", "ES", "_", "TYPE", "_", "ID", ",", "Ċ", "ĉ", "bytes", "_", "tra", "verse", ",", "Ċ", "ĉ", "bytes", "_", "m", "arsh", "aled", "_", "size", ",", "Ċ", "ĉ", "bytes", "_", "m", "arsh", "al", ",", "Ċ", "ĉ", "bytes", "_", "un", "m", "arsh", "al", "_", "alloc", ",", "Ċ", "ĉ", "bytes", "_", "un", "m", "arsh", "al", "_", "init", ",", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġtap", "Ċ"], "dataflow_graph": [["size", 17, "comesFrom", ["size"], [11]], ["size", 23, "comesFrom", ["size"], [20]], ["size", 33, "comesFrom", ["size"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::551", "code": "#include \"disk.h\"\n\n// std::string\ntemplate <>\nvoid Disk::save<std::string>(tag_type tag, std::string const& element, std::ofstream& data) {\n  save_tag(tag, data);\n  size_t element_size = element.size();\n  data.write(reinterpret_cast<char const*>(&element_size), sizeof(element_size));\n  data.write(element.c_str(), static_cast<long>(element_size));\n}\ntemplate <>\nbool Disk::load<std::string>(tag_type tag, std::string& element, std::ifstream& data) {\n  if (!load_tag(tag, data)) { return false; }\n  size_t element_size;\n  data.read(reinterpret_cast<char*>(&element_size), sizeof(element_size));\n  element.resize(element_size);\n  data.read(const_cast<char*>(element.c_str()), static_cast<long>(element_size));\n\n  return true;\n}\n\n// item\ntemplate <>\nvoid Disk::save<Item>(tag_type tag, Item const& element, std::ofstream& data) {\n  save_tag(tag, data);\n  element.save(data);\n}\ntemplate <>\nbool Disk::load<Item>(tag_type tag, Item& element, std::ifstream& data) {\n  if (!load_tag(tag, data)) { return false; }\n  element.load(data);\n  return true;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "disk", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġstd", "::", "string", "Ċ", "template", "Ġ<", ">", "Ċ", "void", "ĠDisk", "::", "save", "<", "std", "::", "string", ">(", "tag", "_", "type", "Ġtag", ",", "Ġstd", "::", "string", "Ġconst", "&", "Ġelement", ",", "Ġstd", "::", "of", "stream", "&", "Ġdata", ")", "Ġ{", "Ċ", "Ġ", "Ġsave", "_", "tag", "(", "tag", ",", "Ġdata", ");", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġelement", "_", "size", "Ġ=", "Ġelement", ".", "size", "();", "Ċ", "Ġ", "Ġdata", ".", "write", "(", "re", "interpret", "_", "cast", "<", "char", "Ġconst", "*", ">(", "&", "element", "_", "size", "),", "Ġsizeof", "(", "element", "_", "size", "));", "Ċ", "Ġ", "Ġdata", ".", "write", "(", "element", ".", "c", "_", "str", "(),", "Ġstatic", "_", "cast", "<", "long", ">(", "element", "_", "size", "));", "Ċ", "}", "Ċ", "template", "Ġ<", ">", "Ċ", "bool", "ĠDisk", "::", "load", "<", "std", "::", "string", ">(", "tag", "_", "type", "Ġtag", ",", "Ġstd", "::", "string", "&", "Ġelement", ",", "Ġstd", "::", "if", "stream", "&", "Ġdata", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "load", "_", "tag", "(", "tag", ",", "Ġdata", "))", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġelement", "_", "size", ";", "Ċ", "Ġ", "Ġdata", ".", "read", "(", "re", "interpret", "_", "cast", "<", "char", "*", ">(", "&", "element", "_", "size", "),", "Ġsizeof", "(", "element", "_", "size", "));", "Ċ", "Ġ", "Ġelement", ".", "res", "ize", "(", "element", "_", "size", ");", "Ċ", "Ġ", "Ġdata", ".", "read", "(", "const", "_", "cast", "<", "char", "*", ">(", "element", ".", "c", "_", "str", "()", "),", "Ġstatic", "_", "cast", "<", "long", ">(", "element", "_", "size", "));", "ĊĊ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "//", "Ġitem", "Ċ", "template", "Ġ<", ">", "Ċ", "void", "ĠDisk", "::", "save", "<", "Item", ">(", "tag", "_", "type", "Ġtag", ",", "ĠItem", "Ġconst", "&", "Ġelement", ",", "Ġstd", "::", "of", "stream", "&", "Ġdata", ")", "Ġ{", "Ċ", "Ġ", "Ġsave", "_", "tag", "(", "tag", ",", "Ġdata", ");", "Ċ", "Ġ", "Ġelement", ".", "save", "(", "data", ");", "Ċ", "}", "Ċ", "template", "Ġ<", ">", "Ċ", "bool", "ĠDisk", "::", "load", "<", "Item", ">(", "tag", "_", "type", "Ġtag", ",", "ĠItem", "&", "Ġelement", ",", "Ġstd", "::", "if", "stream", "&", "Ġdata", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "load", "_", "tag", "(", "tag", ",", "Ġdata", "))", "Ġ{", "Ġreturn", "Ġfalse", ";", "Ġ}", "Ċ", "Ġ", "Ġelement", ".", "load", "(", "data", ");", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["tag", 5, "comesFrom", ["tag"], [1]], ["tag", 26, "comesFrom", ["tag"], [22]], ["tag", 49, "comesFrom", ["tag"], [45]], ["tag", 59, "comesFrom", ["tag"], [55]], ["element_size", 13, "comesFrom", ["element_size"], [7]], ["element_size", 14, "comesFrom", ["element_size"], [7]], ["element_size", 20, "comesFrom", ["element_size"], [7]], ["element_size", 32, "comesFrom", ["element_size"], [28]], ["element_size", 33, "comesFrom", ["element_size"], [28]], ["element_size", 36, "comesFrom", ["element_size"], [28]], ["element_size", 43, "comesFrom", ["element_size"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::552", "code": "#include <test/unit/math/test_ad.hpp>\n#include <stdexcept>\n\nTEST(MathMixMatFun, svd_U) {\n  auto f = [](const auto& x) { return stan::math::svd_U(x); };\n\n  Eigen::MatrixXd m00(0, 0);\n  EXPECT_THROW(f(m00), std::invalid_argument);\n\n  Eigen::MatrixXd m11(1, 1);\n  m11 << 1.1;\n  stan::test::expect_ad(f, m11);\n  stan::test::expect_ad_matvar(f, m11);\n\n  Eigen::MatrixXd m22(2, 2);\n  m22 << 3, -5, 7, 11;\n  stan::test::expect_ad(f, m22);\n  stan::test::expect_ad_matvar(f, m22);\n\n  Eigen::MatrixXd m23(2, 3);\n  m23 << 3, 5, -7, -11, 13, -17;\n  stan::test::expect_ad(f, m23);\n  stan::test::expect_ad_matvar(f, m23);\n\n  Eigen::MatrixXd m32(3, 2);\n  m32 << 1, 3, -5, 7, 9, -11;\n  stan::test::expect_ad(f, m32);\n  stan::test::expect_ad_matvar(f, m32);\n\n  Eigen::MatrixXd a22(2, 2);\n  a22 << 1, 2, 3, 4;\n  stan::test::expect_ad(f, a22);\n  stan::test::expect_ad_matvar(f, a22);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "test", "/", "unit", "/", "math", "/", "test", "_", "ad", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "Ċ", "T", "EST", "(", "Math", "Mix", "Mat", "Fun", ",", "Ġs", "vd", "_", "U", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġf", "Ġ=", "Ġ[", "](", "const", "Ġauto", "&", "Ġx", ")", "Ġ{", "Ġreturn", "Ġst", "an", "::", "math", "::", "s", "vd", "_", "U", "(", "x", ");", "Ġ};", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġm", "00", "(", "0", ",", "Ġ0", ");", "Ċ", "Ġ", "ĠEXP", "ECT", "_", "TH", "R", "OW", "(", "f", "(", "m", "00", "),", "Ġstd", "::", "in", "valid", "_", "argument", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġm", "11", "(", "1", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġm", "11", "Ġ<<", "Ġ1", ".", "1", ";", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "(", "f", ",", "Ġm", "11", ");", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "_", "mat", "var", "(", "f", ",", "Ġm", "11", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġm", "22", "(", "2", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġm", "22", "Ġ<<", "Ġ3", ",", "Ġ-", "5", ",", "Ġ7", ",", "Ġ11", ";", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "(", "f", ",", "Ġm", "22", ");", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "_", "mat", "var", "(", "f", ",", "Ġm", "22", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġm", "23", "(", "2", ",", "Ġ3", ");", "Ċ", "Ġ", "Ġm", "23", "Ġ<<", "Ġ3", ",", "Ġ5", ",", "Ġ-", "7", ",", "Ġ-", "11", ",", "Ġ13", ",", "Ġ-", "17", ";", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "(", "f", ",", "Ġm", "23", ");", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "_", "mat", "var", "(", "f", ",", "Ġm", "23", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġm", "32", "(", "3", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġm", "32", "Ġ<<", "Ġ1", ",", "Ġ3", ",", "Ġ-", "5", ",", "Ġ7", ",", "Ġ9", ",", "Ġ-", "11", ";", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "(", "f", ",", "Ġm", "32", ");", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "_", "mat", "var", "(", "f", ",", "Ġm", "32", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġa", "22", "(", "2", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġa", "22", "Ġ<<", "Ġ1", ",", "Ġ2", ",", "Ġ3", ",", "Ġ4", ";", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "(", "f", ",", "Ġa", "22", ");", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "_", "mat", "var", "(", "f", ",", "Ġa", "22", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["f", 7, "comesFrom", ["f"], [1]], ["f", 13, "comesFrom", ["f"], [1]], ["f", 16, "comesFrom", ["f"], [1]], ["f", 21, "comesFrom", ["f"], [1]], ["f", 24, "comesFrom", ["f"], [1]], ["f", 29, "comesFrom", ["f"], [1]], ["f", 32, "comesFrom", ["f"], [1]], ["f", 37, "comesFrom", ["f"], [1]], ["f", 40, "comesFrom", ["f"], [1]], ["f", 45, "comesFrom", ["f"], [1]], ["f", 48, "comesFrom", ["f"], [1]], ["m00", 8, "comesFrom", ["m00"], [5]], ["m11", 11, "comesFrom", ["m11"], [10]], ["m11", 14, "comesFrom", ["m11"], [10]], ["m11", 17, "comesFrom", ["m11"], [10]], ["m22", 19, "comesFrom", ["m22"], [18]], ["m22", 22, "comesFrom", ["m22"], [18]], ["m22", 25, "comesFrom", ["m22"], [18]], ["m23", 27, "comesFrom", ["m23"], [26]], ["m23", 30, "comesFrom", ["m23"], [26]], ["m23", 33, "comesFrom", ["m23"], [26]], ["m32", 35, "comesFrom", ["m32"], [34]], ["m32", 38, "comesFrom", ["m32"], [34]], ["m32", 41, "comesFrom", ["m32"], [34]], ["a22", 43, "comesFrom", ["a22"], [42]], ["a22", 46, "comesFrom", ["a22"], [42]], ["a22", 49, "comesFrom", ["a22"], [42]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::553", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"chrome/browser/sync/test/integration/multi_client_status_change_checker.h\"\n\n\nMultiClientStatusChangeChecker::MultiClientStatusChangeChecker(\n    std::vector<syncer::ProfileSyncService*> services)\n    : services_(services) {\n  for (syncer::ProfileSyncService* service : services)\n    scoped_observer_.Add(service);\n}\n\nMultiClientStatusChangeChecker::~MultiClientStatusChangeChecker() = default;\n\nvoid MultiClientStatusChangeChecker::OnStateChanged(syncer::SyncService* sync) {\n  CheckExitCondition();\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "browser", "/", "sync", "/", "test", "/", "integ", "ration", "/", "multi", "_", "client", "_", "status", "_", "change", "_", "check", "er", ".", "h", "\"", "ĊĊ", "Ċ", "Multi", "Client", "Status", "Change", "Check", "er", "::", "Multi", "Client", "Status", "Change", "Check", "er", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "syn", "cer", "::", "Profile", "Sync", "Service", "*", ">", "Ġservices", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġservices", "_(", "services", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "syn", "cer", "::", "Profile", "Sync", "Service", "*", "Ġservice", "Ġ:", "Ġservices", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsc", "oped", "_", "ob", "server", "_.", "Add", "(", "service", ");", "Ċ", "}", "Ċ", "Ċ", "Multi", "Client", "Status", "Change", "Check", "er", "::", "~", "Multi", "Client", "Status", "Change", "Check", "er", "()", "Ġ=", "Ġdefault", ";", "Ċ", "Ċ", "void", "ĠMulti", "Client", "Status", "Change", "Check", "er", "::", "On", "State", "Changed", "(", "syn", "cer", "::", "Sync", "Service", "*", "Ġsync", ")", "Ġ{", "Ċ", "Ġ", "ĠCheck", "Exit", "Condition", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["services", 3, "comesFrom", ["services"], [1]], ["services", 5, "comesFrom", ["services"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::554", "code": "#include <seqan/sequence.h>\n#include <seqan/basic.h>\n#include <seqan/find_motif.h>\n#include <seqan/file.h>\n#include <iostream>\n\nusing namespace seqan;\n\ntemplate<typename TString>//String<char>\nvoid countOneMers(TString const& str){\n\tIterator<TString>::Type StringIterator = begin(str);\n\t\n\tIterator<TString>::Type EndIterator = end(str);\n\tString<unsigned int> counter;\n\tresize(counter, 26,0);//26 = AlphSize\n\tunsigned int normalize =ordValue('a');\n\tunsigned int a=0;\n\twhile(StringIterator != EndIterator){\n\t\ta=  ordValue(*StringIterator);\n\t\tstd::cout<<a-normalize<<std::endl;\n\t\t++value(counter,(a-normalize));\n\t\t++StringIterator;\n\t}\n\tStringIterator = begin(str);\n\t//Iterator<String<unsigned int> >::Type countIterator = begin(counter);\n\twhile(i<26){\n\t\t//if(*countIterator>0)\n\t\t\tstd::cout<<char(i+'a')<<\" \"<<counter[i]<<std::endl;\n\t\t++i;\n\t\t\n\t}\n}\n\nint main(){\n\n\tString<char> str = \"helloworld\";\n\tcountOneMers(str);\n\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "basic", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "find", "_", "mot", "if", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġseq", "an", ";", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", "String", ">", "//", "String", "<", "char", ">", "Ċ", "void", "Ġcount", "One", "M", "ers", "(", "T", "String", "Ġconst", "&", "Ġstr", "){", "Ċ", "ĉ", "Iterator", "<", "T", "String", ">", "::", "Type", "ĠString", "Iterator", "Ġ=", "Ġbegin", "(", "str", ");", "Ċ", "ĉ", "Ċ", "ĉ", "Iterator", "<", "T", "String", ">", "::", "Type", "ĠEnd", "Iterator", "Ġ=", "Ġend", "(", "str", ");", "Ċ", "ĉ", "String", "<", "unsigned", "Ġint", ">", "Ġcounter", ";", "Ċ", "ĉ", "res", "ize", "(", "counter", ",", "Ġ26", ",", "0", ");", "//", "26", "Ġ=", "ĠAlph", "Size", "Ċ", "ĉ", "unsigned", "Ġint", "Ġnormal", "ize", "Ġ=", "ord", "Value", "('", "a", "');", "Ċ", "ĉ", "unsigned", "Ġint", "Ġa", "=", "0", ";", "Ċ", "ĉ", "while", "(", "String", "Iterator", "Ġ!=", "ĠEnd", "Iterator", "){", "Ċ", "ĉ", "ĉ", "a", "=", "Ġ", "Ġord", "Value", "(*", "String", "Iterator", ");", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "<<", "a", "-", "normal", "ize", "<<", "std", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "++", "value", "(", "counter", ",", "(", "a", "-", "normal", "ize", "));", "Ċ", "ĉ", "ĉ", "++", "String", "Iterator", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "String", "Iterator", "Ġ=", "Ġbegin", "(", "str", ");", "Ċ", "ĉ", "//", "Iterator", "<", "String", "<", "unsigned", "Ġint", ">", "Ġ>", "::", "Type", "Ġcount", "Iterator", "Ġ=", "Ġbegin", "(", "counter", ");", "Ċ", "ĉ", "while", "(", "i", "<", "26", "){", "Ċ", "ĉ", "ĉ", "//", "if", "(*", "count", "Iterator", ">", "0", ")", "Ċ", "ĉ", "ĉ", "ĉ", "std", "::", "c", "out", "<<", "char", "(", "i", "+", "'", "a", "')", "<<", "\"", "Ġ\"", "<<", "counter", "[", "i", "]", "<<", "std", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "++", "i", ";", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "ĊĊ", "ĉ", "String", "<", "char", ">", "Ġstr", "Ġ=", "Ġ\"", "hell", "ow", "orld", "\";", "Ċ", "ĉ", "count", "One", "M", "ers", "(", "str", ");", "ĊĊ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["str", 42, "comesFrom", ["str"], [40]], ["counter", 11, "comesFrom", ["counter"], [9]], ["counter", 25, "comesFrom", ["counter"], [9]], ["counter", 35, "comesFrom", ["counter"], [9]], ["StringIterator", 15, "comesFrom", ["StringIterator"], [3]], ["StringIterator", 19, "comesFrom", ["StringIterator"], [3]], ["StringIterator", 28, "comesFrom", ["StringIterator"], [3]], ["EndIterator", 16, "comesFrom", ["EndIterator"], [6]], ["a", 21, "comesFrom", ["a"], [17]], ["a", 26, "comesFrom", ["a"], [17]], ["normalize", 22, "comesFrom", ["normalize"], [12]], ["normalize", 27, "comesFrom", ["normalize"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::555", "code": "#include <iostream>\n#include \"scpp_assert.hpp\"\n\n\nint main() {\n    std::cout << \"Hello, SCPP_ASSERT\" << std::endl;\n    try {\n        double stock_price{ 100.0 };\n        SCPP_ASSERT(\n            0 < stock_price && stock_price <= 1e6,\n            \"Stock price \" << stock_price << \" is out of range.\");\n\n        stock_price = -1.;\n        SCPP_ASSERT(\n            0 < stock_price && stock_price <= 1e6,\n            \"Stock price \" << stock_price << \" is out of range.\");\n    }\n    catch (const std::exception& ex) {\n        std::cerr << \"Exception caught in \" << __FILE__ \n                  << \" #\" << __LINE__ << \":\\n\" \n                  << ex.what() << std::endl;\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ\"", "sc", "pp", "_", "assert", ".", "h", "pp", "\"", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Hello", ",", "ĠSC", "PP", "_", "ASS", "ERT", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtry", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġstock", "_", "price", "{", "Ġ100", ".", "0", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSC", "PP", "_", "ASS", "ERT", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ0", "Ġ<", "Ġstock", "_", "price", "Ġ&&", "Ġstock", "_", "price", "Ġ<=", "Ġ1", "e", "6", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "Stock", "Ġprice", "Ġ\"", "Ġ<<", "Ġstock", "_", "price", "Ġ<<", "Ġ\"", "Ġis", "Ġout", "Ġof", "Ġrange", ".\"", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstock", "_", "price", "Ġ=", "Ġ-", "1", ".;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSC", "PP", "_", "ASS", "ERT", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ0", "Ġ<", "Ġstock", "_", "price", "Ġ&&", "Ġstock", "_", "price", "Ġ<=", "Ġ1", "e", "6", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "Stock", "Ġprice", "Ġ\"", "Ġ<<", "Ġstock", "_", "price", "Ġ<<", "Ġ\"", "Ġis", "Ġout", "Ġof", "Ġrange", ".\"", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcatch", "Ġ(", "const", "Ġstd", "::", "ex", "ception", "&", "Ġex", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Exception", "Ġcaught", "Ġin", "Ġ\"", "Ġ<<", "Ġ__", "FILE", "__", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\"", "Ġ#", "\"", "Ġ<<", "Ġ__", "LINE", "__", "Ġ<<", "Ġ\"", ":\\", "n", "\"", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġex", ".", "what", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["stock_price", 5, "comesFrom", ["stock_price"], [3]], ["stock_price", 6, "comesFrom", ["stock_price"], [3]], ["stock_price", 7, "comesFrom", ["stock_price"], [3]], ["stock_price", 10, "comesFrom", ["stock_price"], [8]], ["stock_price", 11, "comesFrom", ["stock_price"], [8]], ["stock_price", 12, "comesFrom", ["stock_price"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::556", "code": "#include <stdio.h>\n#include <string.h>\nint main(int argc, char const *argv[])\n{\n\tchar  str[] =\"abcd\";\n\tint len = 4;\n\tfor(int i=0;i<(1<<len);i++){\n\t\tprintf(\"\\n { \");\n\t\tfor(int j=0;j<len;j++){\n\t\t\tif(i &(1<<j))\n\t\t\t\tprintf(\"%c \",str[j]);\n\t\t}\n\t\tprintf(\"} \\n\");\n\t}\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġconst", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "char", "Ġ", "Ġstr", "[]", "Ġ=", "\"", "ab", "cd", "\";", "Ċ", "ĉ", "int", "Ġlen", "Ġ=", "Ġ4", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "(", "1", "<<", "len", ");", "i", "++", "){", "Ċ", "ĉ", "ĉ", "printf", "(\"", "\\", "n", "Ġ{", "Ġ\"", ");", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġj", "=", "0", ";", "j", "<", "len", ";", "j", "++", "){", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "i", "Ġ&", "(", "1", "<<", "j", "))", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "%", "c", "Ġ\",", "str", "[", "j", "]);", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "printf", "(\"", "}", "Ġ\\", "n", "\");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 8, "comesFrom", ["i"], [5]], ["i", 14, "comesFrom", ["i"], [5]], ["len", 7, "comesFrom", ["len"], [4]], ["len", 12, "comesFrom", ["len"], [4]], ["j", 11, "comesFrom", ["j"], [10]], ["j", 13, "comesFrom", ["j"], [10]], ["j", 15, "comesFrom", ["j"], [10]], ["j", 18, "comesFrom", ["j"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::557", "code": "/*\r\n  Free Download Manager Copyright (c) 2003-2014 FreeDownloadManager.ORG\r\n*/\r\n\r\n#include \"stdafx.h\"\r\n#include \"fsArchiveRebuilder.h\"\r\n\r\nusing namespace fsArchive;\r\n\r\n#ifdef _DEBUG\r\n#undef THIS_FILE\r\nstatic char THIS_FILE[]=__FILE__;\r\n#define new DEBUG_NEW\r\n#endif\r\n\r\nfsArchiveRebuilder::fsArchiveRebuilder()\r\n{\r\n\tm_in = m_out = NULL;\r\n\tm_uResArchiveSize = 0;\r\n\tm_dwFileSize = 0;\r\n\tm_dwSFXSize = 0;\r\n}\r\n\r\nfsArchiveRebuilder::~fsArchiveRebuilder()\r\n{\r\n\r\n}\r\n\r\nDWORD fsArchiveRebuilder::OpenArchive(fsArchiveStream *in)\r\n{\r\n\tm_in = in;\r\n\treturn RetreiveArchiveContent ();\r\n}\r\n\r\nDWORD fsArchiveRebuilder::SaveArchiveHeaders(fsArchiveStream *out)\r\n{\r\n\tm_out = out;\r\n\treturn SaveArchiveHeaders_imp ();\r\n}\r\n\r\nUINT64 fsArchiveRebuilder::GetResultingArchiveSize()\r\n{\r\n\treturn m_uResArchiveSize;\r\n}\r\n\r\nvoid fsArchiveRebuilder::SetSFXSize(DWORD dw)\r\n{\r\n\tm_dwSFXSize = dw;\r\n}\r\n\r\nvoid fsArchiveRebuilder::SetFileSize(DWORD dw)\r\n{\r\n\tm_dwFileSize = dw;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "Ġ", "ĠFree", "ĠDownload", "ĠManager", "ĠCopyright", "Ġ(", "c", ")", "Ġ2003", "-", "2014", "ĠFree", "Download", "Manager", ".", "OR", "G", "č", "Ċ", "*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "fs", "Arch", "ive", "Reb", "uild", "er", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġfs", "Arch", "ive", ";", "č", "Ċ", "č", "Ċ", "#", "if", "def", "Ġ_", "DEBUG", "č", "Ċ", "#", "und", "ef", "ĠTHIS", "_", "FILE", "č", "Ċ", "static", "Ġchar", "ĠTHIS", "_", "FILE", "[]", "=", "__", "FILE", "__", ";", "č", "Ċ", "#", "define", "Ġnew", "ĠDEBUG", "_", "NEW", "č", "Ċ", "#", "endif", "č", "Ċ", "č", "Ċ", "fs", "Arch", "ive", "Reb", "uild", "er", "::", "fs", "Arch", "ive", "Reb", "uild", "er", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "m", "_", "in", "Ġ=", "Ġm", "_", "out", "Ġ=", "ĠNULL", ";", "č", "Ċ", "ĉ", "m", "_", "u", "Res", "Arch", "ive", "Size", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "m", "_", "d", "w", "File", "Size", "Ġ=", "Ġ0", ";", "č", "Ċ", "ĉ", "m", "_", "d", "w", "S", "FX", "Size", "Ġ=", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "fs", "Arch", "ive", "Reb", "uild", "er", "::", "~", "fs", "Arch", "ive", "Reb", "uild", "er", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "DW", "ORD", "Ġfs", "Arch", "ive", "Reb", "uild", "er", "::", "Open", "Arch", "ive", "(", "fs", "Arch", "ive", "Stream", "Ġ*", "in", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "m", "_", "in", "Ġ=", "Ġin", ";", "č", "Ċ", "ĉ", "return", "ĠRet", "re", "ive", "Arch", "ive", "Content", "Ġ();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "DW", "ORD", "Ġfs", "Arch", "ive", "Reb", "uild", "er", "::", "Save", "Arch", "ive", "Head", "ers", "(", "fs", "Arch", "ive", "Stream", "Ġ*", "out", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "m", "_", "out", "Ġ=", "Ġout", ";", "č", "Ċ", "ĉ", "return", "ĠSave", "Arch", "ive", "Head", "ers", "_", "imp", "Ġ();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "U", "INT", "64", "Ġfs", "Arch", "ive", "Reb", "uild", "er", "::", "Get", "Result", "ing", "Arch", "ive", "Size", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġm", "_", "u", "Res", "Arch", "ive", "Size", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġfs", "Arch", "ive", "Reb", "uild", "er", "::", "Set", "S", "FX", "Size", "(", "DW", "ORD", "Ġdw", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "m", "_", "d", "w", "S", "FX", "Size", "Ġ=", "Ġdw", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġfs", "Arch", "ive", "Reb", "uild", "er", "::", "Set", "File", "Size", "(", "DW", "ORD", "Ġdw", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "m", "_", "d", "w", "File", "Size", "Ġ=", "Ġdw", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["m_uResArchiveSize", 23, "comesFrom", ["m_uResArchiveSize"], [8]], ["dw", 27, "comesFrom", ["dw"], [25]], ["dw", 31, "comesFrom", ["dw"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::558", "code": "// Copyright 2008 Isis Innovation Limited\n// Modified by ICGJKU 2015\n#include \"Map.h\"\n#include \"MapPoint.h\"\n\nnamespace APTAM {\n\nMap::Map()\n{\n  Reset();\n  bTrackingGood = false;\n  pthread_mutex_init(&ptlock, NULL); //TODO destroy\n}\n\nvoid Map::LockMap()\n{\n\tpthread_mutex_lock(&ptlock);\n}\n\nvoid Map::UnlockMap()\n{\n\tpthread_mutex_unlock(&ptlock);\n}\n\nvoid Map::Reset()\n{\n  for(unsigned int i=0; i<vpPoints.size(); i++)\n    delete vpPoints[i];\n  vpPoints.clear();\n  bGood = false;\n  EmptyTrash();\n}\n\nvoid Map::MoveBadPointsToTrash()\n{\n  int nBad = 0;\n  for(int i = vpPoints.size()-1; i>=0; i--)\n    {\n      if(vpPoints[i]->bBad)\n\t{\n\t  vpPointsTrash.push_back(vpPoints[i]);\n\t  vpPoints.erase(vpPoints.begin() + i);\n\t  nBad++;\n\t}\n    };\n}\n\nvoid Map::EmptyTrash()\n{\n  for(unsigned int i=0; i<vpPointsTrash.size(); i++)\n    delete vpPointsTrash[i];\n  vpPointsTrash.clear();\n}\n\n}\n\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2008", "ĠIsis", "ĠInnovation", "ĠLimited", "Ċ", "//", "ĠModified", "Ġby", "ĠIC", "G", "J", "K", "U", "Ġ2015", "Ċ", "#", "include", "Ġ\"", "Map", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Map", "Point", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠAP", "T", "AM", "Ġ{", "Ċ", "Ċ", "Map", "::", "Map", "()", "Ċ", "{", "Ċ", "Ġ", "ĠReset", "();", "Ċ", "Ġ", "Ġb", "Tr", "acking", "Good", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġp", "thread", "_", "mut", "ex", "_", "init", "(&", "pt", "lock", ",", "ĠNULL", ");", "Ġ//", "T", "OD", "O", "Ġdestroy", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMap", "::", "Lock", "Map", "()", "Ċ", "{", "Ċ", "ĉ", "p", "thread", "_", "mut", "ex", "_", "lock", "(&", "pt", "lock", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMap", "::", "Un", "lock", "Map", "()", "Ċ", "{", "Ċ", "ĉ", "p", "thread", "_", "mut", "ex", "_", "un", "lock", "(&", "pt", "lock", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMap", "::", "Res", "et", "()", "Ċ", "{", "Ċ", "Ġ", "Ġfor", "(", "unsigned", "Ġint", "Ġi", "=", "0", ";", "Ġi", "<", "vp", "Points", ".", "size", "();", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġv", "p", "Points", "[", "i", "];", "Ċ", "Ġ", "Ġv", "p", "Points", ".", "clear", "();", "Ċ", "Ġ", "Ġb", "Good", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "ĠEmpty", "Tr", "ash", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMap", "::", "Move", "Bad", "Points", "To", "Tr", "ash", "()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġn", "Bad", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġv", "p", "Points", ".", "size", "()", "-", "1", ";", "Ġi", ">", "=", "0", ";", "Ġi", "--", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "vp", "Points", "[", "i", "]", "->", "b", "Bad", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "Ġ", "Ġv", "p", "Points", "Tr", "ash", ".", "push", "_", "back", "(", "vp", "Points", "[", "i", "]);", "Ċ", "ĉ", "Ġ", "Ġv", "p", "Points", ".", "er", "ase", "(", "vp", "Points", ".", "begin", "()", "Ġ+", "Ġi", ");", "Ċ", "ĉ", "Ġ", "Ġn", "Bad", "++;", "Ċ", "ĉ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMap", "::", "Empty", "Tr", "ash", "()", "Ċ", "{", "Ċ", "Ġ", "Ġfor", "(", "unsigned", "Ġint", "Ġi", "=", "0", ";", "Ġi", "<", "vp", "Points", "Tr", "ash", ".", "size", "();", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġv", "p", "Points", "Tr", "ash", "[", "i", "];", "Ċ", "Ġ", "Ġv", "p", "Points", "Tr", "ash", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 13, "comesFrom", ["i"], [12]], ["i", 16, "comesFrom", ["i"], [12]], ["i", 18, "comesFrom", ["i"], [12]], ["i", 28, "comesFrom", ["i"], [25]], ["i", 29, "comesFrom", ["i"], [25]], ["i", 31, "comesFrom", ["i"], [25]], ["i", 36, "comesFrom", ["i"], [25]], ["i", 41, "comesFrom", ["i"], [25]], ["i", 45, "comesFrom", ["i"], [44]], ["i", 48, "comesFrom", ["i"], [44]], ["i", 50, "comesFrom", ["i"], [44]], ["nBad", 42, "comesFrom", ["nBad"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::559", "code": "#include <iostream>\n#include <omp.h>\n\nint main(int argc, const char** argv) \n{\n  int i;\n\n#pragma omp parallel for default(none)\n  for (i=0; i<1000; i++);\n\n  std::cout << \"without: \"<< i << std::endl;\n\n#pragma omp parallel for default(none) lastprivate(i)\n  for (i=0; i<1000; i++);\n\n  std::cout << \"with:    \"<< i << std::endl;\n\n  return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "omp", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġconst", "Ġchar", "**", "Ġarg", "v", ")", "Ġ", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġi", ";", "Ċ", "Ċ", "#", "pr", "ag", "ma", "Ġo", "mp", "Ġparallel", "Ġfor", "Ġdefault", "(", "none", ")", "Ċ", "Ġ", "Ġfor", "Ġ(", "i", "=", "0", ";", "Ġi", "<", "1000", ";", "Ġi", "++", ");", "ĊĊ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "without", ":", "Ġ\"", "<<", "Ġi", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ċ", "#", "pr", "ag", "ma", "Ġo", "mp", "Ġparallel", "Ġfor", "Ġdefault", "(", "none", ")", "Ġlast", "private", "(", "i", ")", "Ċ", "Ġ", "Ġfor", "Ġ(", "i", "=", "0", ";", "Ġi", "<", "1000", ";", "Ġi", "++", ");", "ĊĊ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "with", ":", "Ġ", "Ġ", "Ġ", "Ġ\"", "<<", "Ġi", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 6, "comesFrom", ["i"], [4]], ["i", 8, "comesFrom", ["i"], [4]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 12, "comesFrom", ["i"], [10]], ["i", 14, "comesFrom", ["i"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::560", "code": "#include <iostream>\n// Part of Cosmos by OpenGenus Foundation\nusing namespace std;\n\nlong long int factorial(long long int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n\n}\n\nint main()\n{\n    long long int n;\n    cin >> n;\n\n    long long int result = factorial(n);\n    cout << result << endl;\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "//", "ĠPart", "Ġof", "ĠCosmos", "Ġby", "ĠOpen", "Gen", "us", "ĠFoundation", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "long", "Ġlong", "Ġint", "Ġfact", "orial", "(", "long", "Ġlong", "Ġint", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġn", "Ġ*", "Ġfact", "orial", "(", "n", "Ġ-", "Ġ1", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġlong", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġlong", "Ġint", "Ġresult", "Ġ=", "Ġfact", "orial", "(", "n", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġresult", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 3, "comesFrom", ["n"], [2]], ["n", 4, "comesFrom", ["n"], [2]], ["n", 6, "comesFrom", ["n"], [2]], ["n", 10, "comesFrom", ["n"], [8]], ["n", 13, "comesFrom", ["n"], [8]], ["result", 15, "comesFrom", ["result"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::561", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/iot/model/DescribeJobExecutionRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n#include <aws/core/http/URI.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\n#include <utility>\n\nusing namespace Aws::IoT::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\nusing namespace Aws::Http;\n\nDescribeJobExecutionRequest::DescribeJobExecutionRequest() : \n    m_jobIdHasBeenSet(false),\n    m_thingNameHasBeenSet(false),\n    m_executionNumber(0),\n    m_executionNumberHasBeenSet(false)\n{\n}\n\nAws::String DescribeJobExecutionRequest::SerializePayload() const\n{\n  return {};\n}\n\nvoid DescribeJobExecutionRequest::AddQueryStringParameters(URI& uri) const\n{\n    Aws::StringStream ss;\n    if(m_executionNumberHasBeenSet)\n    {\n      ss << m_executionNumber;\n      uri.AddQueryStringParameter(\"executionNumber\", ss.str());\n      ss.str(\"\");\n    }\n\n}\n\n\n\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "iot", "/", "model", "/", "Desc", "ribe", "Job", "Exec", "ution", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "J", "son", "Serial", "izer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "http", "/", "URI", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "st", "l", "/", "AW", "S", "String", "Stream", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "I", "o", "T", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", "::", "J", "son", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Http", ";", "Ċ", "Ċ", "Desc", "ribe", "Job", "Exec", "ution", "Request", "::", "Desc", "ribe", "Job", "Exec", "ution", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "job", "Id", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "thing", "Name", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "exec", "ution", "Number", "(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "exec", "ution", "Number", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠDesc", "ribe", "Job", "Exec", "ution", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ{", "};", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDesc", "ribe", "Job", "Exec", "ution", "Request", "::", "Add", "Query", "String", "Parameters", "(", "URI", "&", "Ġur", "i", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAw", "s", "::", "String", "Stream", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "_", "exec", "ution", "Number", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġm", "_", "exec", "ution", "Number", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġur", "i", ".", "Add", "Query", "String", "Parameter", "(\"", "exec", "ution", "Number", "\",", "Ġss", ".", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", ".", "str", "(\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["ss", 14, "comesFrom", ["ss"], [12]], ["ss", 18, "comesFrom", ["ss"], [12]], ["ss", 20, "comesFrom", ["ss"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::562", "code": "// { dg-do compile { target c++11 } }\n\n// Copyright (C) 2012-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <vector>\n\n// libstdc++/52799\nint main()\n{\n  std::vector<int> v;\n  v.emplace(v.begin());\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", "-", "20", "21", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "//", "Ġlib", "st", "dc", "++", "/", "5", "27", "99", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġv", ";", "Ċ", "Ġ", "Ġv", ".", "em", "place", "(", "v", ".", "begin", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["v", 2, "comesFrom", ["v"], [1]], ["v", 4, "comesFrom", ["v"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::563", "code": "// 2006-06-04  Stephen M. Webb <stephen.webb@bregmasoft.com>\n//\n// Copyright (C) 2006-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 5.1.4.1 Class template linear_congruential\n// 5.1 [3] Table 16\n\n#include <tr1/random>\n#include <testsuite_hooks.h>\n\nvoid\ntest01()\n{\n  std::tr1::minstd_rand0 a;\n  std::tr1::minstd_rand0 b;\n  std::tr1::minstd_rand0 c(120);\n\n  VERIFY( a == b );\n  VERIFY( !(a == c) );\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ2006", "-", "06", "-", "04", "Ġ", "ĠStephen", "ĠM", ".", "ĠWebb", "Ġ<", "step", "hen", ".", "we", "bb", "@", "b", "reg", "mas", "oft", ".", "com", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "-", "20", "21", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ5", ".", "1", ".", "4", ".", "1", "ĠClass", "Ġtemplate", "Ġlinear", "_", "cong", "ru", "ential", "Ċ", "//", "Ġ5", ".", "1", "Ġ[", "3", "]", "ĠTable", "Ġ16", "Ċ", "Ċ", "#", "include", "Ġ<", "tr", "1", "/", "random", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "tr", "1", "::", "min", "std", "_", "rand", "0", "Ġa", ";", "Ċ", "Ġ", "Ġstd", "::", "tr", "1", "::", "min", "std", "_", "rand", "0", "Ġb", ";", "Ċ", "Ġ", "Ġstd", "::", "tr", "1", "::", "min", "std", "_", "rand", "0", "Ġc", "(", "120", ");", "ĊĊ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġa", "Ġ==", "Ġb", "Ġ);", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġ!", "(", "a", "Ġ==", "Ġc", ")", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 5, "comesFrom", ["a"], [1]], ["a", 8, "comesFrom", ["a"], [1]], ["b", 6, "comesFrom", ["b"], [2]], ["c", 9, "comesFrom", ["c"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::564", "code": "#include \"simulation/ToolCommon.h\"\n\nstatic int perform(Simulation * sim, Particle * cpart, int x, int y, int brushX, int brushY, float strength);\n\nvoid SimTool::Tool_AMBM()\n{\n\tIdentifier = \"DEFAULT_TOOL_AMBM\";\n\tName = \"AMBM\";\n\tColour = PIXPACK(0x00DDFF);\n\tDescription = \"Decreases ambient air temperature.\";\n\tPerform = &perform;\n}\n\nstatic int perform(Simulation *sim, Particle *cpart, int x, int y, int brushX, int brushY, float strength)\n{\n\tif (!sim->aheat_enable)\n\t{\n\t\treturn 0;\n\t}\n\n\tsim->hv[y / CELL][x / CELL] -= strength * 2.0f;\n\tif (sim->hv[y / CELL][x / CELL] > MAX_TEMP) sim->hv[y / CELL][x / CELL] = MAX_TEMP;\n\tif (sim->hv[y / CELL][x / CELL] < MIN_TEMP) sim->hv[y / CELL][x / CELL] = MIN_TEMP;\n\treturn 1;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "sim", "ulation", "/", "Tool", "Common", ".", "h", "\"", "Ċ", "Ċ", "static", "Ġint", "Ġperform", "(", "Sim", "ulation", "Ġ*", "Ġsim", ",", "ĠPart", "icle", "Ġ*", "Ġc", "part", ",", "Ġint", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġbrush", "X", ",", "Ġint", "Ġbrush", "Y", ",", "Ġfloat", "Ġstrength", ");", "Ċ", "Ċ", "void", "ĠSim", "Tool", "::", "Tool", "_", "AM", "BM", "()", "Ċ", "{", "Ċ", "ĉ", "Ident", "ifier", "Ġ=", "Ġ\"", "DE", "FAULT", "_", "TO", "OL", "_", "AM", "BM", "\";", "Ċ", "ĉ", "Name", "Ġ=", "Ġ\"", "AM", "BM", "\";", "Ċ", "ĉ", "Col", "our", "Ġ=", "ĠP", "IX", "P", "ACK", "(", "0", "x", "00", "DD", "FF", ");", "Ċ", "ĉ", "Description", "Ġ=", "Ġ\"", "Decre", "ases", "Ġambient", "Ġair", "Ġtemperature", ".\"", ";", "Ċ", "ĉ", "Per", "form", "Ġ=", "Ġ&", "per", "form", ";", "Ċ", "}", "Ċ", "Ċ", "static", "Ġint", "Ġperform", "(", "Sim", "ulation", "Ġ*", "sim", ",", "ĠPart", "icle", "Ġ*", "c", "part", ",", "Ġint", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġbrush", "X", ",", "Ġint", "Ġbrush", "Y", ",", "Ġfloat", "Ġstrength", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(!", "sim", "->", "a", "heat", "_", "enable", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "sim", "->", "h", "v", "[", "y", "Ġ/", "ĠCE", "LL", "][", "x", "Ġ/", "ĠCE", "LL", "]", "Ġ-=", "Ġstrength", "Ġ*", "Ġ2", ".", "0", "f", ";", "Ċ", "ĉ", "if", "Ġ(", "sim", "->", "h", "v", "[", "y", "Ġ/", "ĠCE", "LL", "][", "x", "Ġ/", "ĠCE", "LL", "]", "Ġ>", "ĠMAX", "_", "T", "EMP", ")", "Ġsim", "->", "h", "v", "[", "y", "Ġ/", "ĠCE", "LL", "][", "x", "Ġ/", "ĠCE", "LL", "]", "Ġ=", "ĠMAX", "_", "T", "EMP", ";", "Ċ", "ĉ", "if", "Ġ(", "sim", "->", "h", "v", "[", "y", "Ġ/", "ĠCE", "LL", "][", "x", "Ġ/", "ĠCE", "LL", "]", "Ġ<", "ĠMIN", "_", "T", "EMP", ")", "Ġsim", "->", "h", "v", "[", "y", "Ġ/", "ĠCE", "LL", "][", "x", "Ġ/", "ĠCE", "LL", "]", "Ġ=", "ĠMIN", "_", "T", "EMP", ";", "Ċ", "ĉ", "return", "Ġ1", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["y", 28, "comesFrom", ["y"], [20]], ["y", 35, "comesFrom", ["y"], [20]], ["y", 42, "comesFrom", ["y"], [20]], ["y", 49, "comesFrom", ["y"], [20]], ["y", 56, "comesFrom", ["y"], [20]], ["x", 30, "comesFrom", ["x"], [19]], ["x", 37, "comesFrom", ["x"], [19]], ["x", 44, "comesFrom", ["x"], [19]], ["x", 51, "comesFrom", ["x"], [19]], ["x", 58, "comesFrom", ["x"], [19]], ["strength", 32, "comesFrom", ["strength"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::565", "code": "// Copyright (c) 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"ui/gl/shader_tracking.h\"\n\n#include \"base/check.h\"\n#include \"ui/gl/gl_switches.h\"\n\nnamespace gl {\n\n// static\nShaderTracking* ShaderTracking::GetInstance() {\n#if defined(OS_WIN)\n  // Shaders can only be reliably retrieved with ANGLE backend. Therefore,\n  // limit to Windows platform only.\n  static bool enabled =\n      base::FeatureList::IsEnabled(features::kTrackCurrentShaders);\n  if (enabled) {\n    static base::NoDestructor<ShaderTracking> instance;\n    return instance.get();\n  }\n#endif  // OS_WIN\n  return nullptr;\n}\n\nvoid ShaderTracking::GetShaders(std::string* shader0, std::string* shader1) {\n  DCHECK(shader0 && shader1);\n  base::AutoLock auto_lock(lock_);\n  *shader0 = shaders_[0];\n  *shader1 = shaders_[1];\n}\n\nvoid ShaderTracking::SetShaders(const char* shader0, const char* shader1) {\n  base::AutoLock auto_lock(lock_);\n  shaders_[0] = shader0 ? shader0 : \"\";\n  shaders_[1] = shader1 ? shader1 : \"\";\n}\n\n}  // namespace gl\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2019", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "ui", "/", "gl", "/", "sh", "ader", "_", "tracking", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "check", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "/", "gl", "/", "gl", "_", "sw", "itches", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġgl", "Ġ{", "Ċ", "Ċ", "//", "Ġstatic", "Ċ", "Sh", "ader", "Tr", "acking", "*", "ĠSh", "ader", "Tr", "acking", "::", "Get", "Instance", "()", "Ġ{", "Ċ", "#", "if", "Ġdefined", "(", "OS", "_", "WIN", ")", "Ċ", "Ġ", "Ġ//", "ĠSh", "aders", "Ġcan", "Ġonly", "Ġbe", "Ġreliably", "Ġretrieved", "Ġwith", "ĠANG", "LE", "Ġbackend", ".", "ĠTherefore", ",", "Ċ", "Ġ", "Ġ//", "Ġlimit", "Ġto", "ĠWindows", "Ġplatform", "Ġonly", ".", "Ċ", "Ġ", "Ġstatic", "Ġbool", "Ġenabled", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbase", "::", "Feature", "List", "::", "Is", "Enabled", "(", "features", "::", "k", "Track", "Current", "Sh", "aders", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "enabled", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġbase", "::", "No", "Dest", "ruct", "or", "<", "Sh", "ader", "Tr", "acking", ">", "Ġinstance", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġinstance", ".", "get", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "#", "endif", "Ġ", "Ġ//", "ĠOS", "_", "WIN", "Ċ", "Ġ", "Ġreturn", "Ġnull", "ptr", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSh", "ader", "Tr", "acking", "::", "Get", "Sh", "aders", "(", "std", "::", "string", "*", "Ġshader", "0", ",", "Ġstd", "::", "string", "*", "Ġshader", "1", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "(", "sh", "ader", "0", "Ġ&&", "Ġshader", "1", ");", "Ċ", "Ġ", "Ġbase", "::", "Auto", "Lock", "Ġauto", "_", "lock", "(", "lock", "_", ");", "Ċ", "Ġ", "Ġ*", "sh", "ader", "0", "Ġ=", "Ġsh", "aders", "_", "[", "0", "];", "Ċ", "Ġ", "Ġ*", "sh", "ader", "1", "Ġ=", "Ġsh", "aders", "_", "[", "1", "];", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSh", "ader", "Tr", "acking", "::", "Set", "Sh", "aders", "(", "const", "Ġchar", "*", "Ġshader", "0", ",", "Ġconst", "Ġchar", "*", "Ġshader", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġbase", "::", "Auto", "Lock", "Ġauto", "_", "lock", "(", "lock", "_", ");", "Ċ", "Ġ", "Ġsh", "aders", "_", "[", "0", "]", "Ġ=", "Ġshader", "0", "Ġ?", "Ġshader", "0", "Ġ:", "Ġ\"", "\";", "Ċ", "Ġ", "Ġsh", "aders", "_", "[", "1", "]", "Ġ=", "Ġshader", "1", "Ġ?", "Ġshader", "1", "Ġ:", "Ġ\"", "\";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġgl", "Ċ"], "dataflow_graph": [["enabled", 5, "comesFrom", ["enabled"], [2]], ["instance", 7, "comesFrom", ["instance"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::566", "code": "#include <vector>\n\nnamespace util {\n\nstd::vector<int> arange(int n) {\n  std::vector<int> out(n);\n  for (int i=0; i < n; ++i) out[i] = i;\n  return out;\n}\n\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "names", "pace", "Ġutil", "Ġ{", "Ċ", "Ċ", "std", "::", "vector", "<", "int", ">", "Ġar", "ange", "(", "int", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġout", "(", "n", ");", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġout", "[", "i", "]", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġreturn", "Ġout", ";", "Ċ", "}", "ĊĊ", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 6, "comesFrom", ["i"], [3]], ["i", 8, "comesFrom", ["i"], [3]], ["i", 9, "comesFrom", ["i"], [3]], ["n", 5, "comesFrom", ["n"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::567", "code": "// { dg-do run { target c++11 } }\n\n// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n// Copyright (C) 2010-2017 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <string>\n#include <testsuite_hooks.h>\n\n// libstdc++/42573\nvoid test01()\n{\n  std::string s(100, 'a');\n  s.push_back('b');\n  s.push_back('b');\n  VERIFY( s.size() < s.capacity() );\n  s.shrink_to_fit();\n  VERIFY( s.size() == s.capacity() );\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġ}", "Ġ}", "Ċ", "Ċ", "//", "Ġ2010", "-", "01", "-", "08", "Ġ", "ĠPa", "olo", "ĠCar", "lin", "i", "Ġ", "Ġ<", "pa", "olo", ".", "car", "lin", "i", "@", "or", "acle", ".", "com", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "-", "2017", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "//", "Ġlib", "st", "dc", "++", "/", "425", "73", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġs", "(", "100", ",", "Ġ'", "a", "');", "Ċ", "Ġ", "Ġs", ".", "push", "_", "back", "('", "b", "');", "Ċ", "Ġ", "Ġs", ".", "push", "_", "back", "('", "b", "');", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġs", ".", "size", "()", "Ġ<", "Ġs", ".", "capacity", "()", "Ġ);", "Ċ", "Ġ", "Ġs", ".", "shr", "ink", "_", "to", "_", "fit", "();", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġs", ".", "size", "()", "Ġ==", "Ġs", ".", "capacity", "()", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["s", 2, "comesFrom", ["s"], [1]], ["s", 4, "comesFrom", ["s"], [1]], ["s", 7, "comesFrom", ["s"], [1]], ["s", 9, "comesFrom", ["s"], [1]], ["s", 11, "comesFrom", ["s"], [1]], ["s", 14, "comesFrom", ["s"], [1]], ["s", 16, "comesFrom", ["s"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::568", "code": "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"base/fuchsia/file_utils.h\"\n\n#include \"base/files/file_util.h\"\n#include \"base/files/scoped_temp_dir.h\"\n#include \"testing/gtest/include/gtest/gtest.h\"\n\nnamespace base {\n\nclass OpenDirectoryTest : public testing::Test {\n protected:\n  void SetUp() override {\n    EXPECT_TRUE(temp_dir.CreateUniqueTempDirUnderPath(\n        base::FilePath(kPersistedDataDirectoryPath)));\n  }\n\n  ScopedTempDir temp_dir;\n};\n\nTEST_F(OpenDirectoryTest, Open) {\n  auto dir = OpenDirectoryHandle(temp_dir.GetPath());\n  ASSERT_TRUE(dir);\n}\n\n// OpenDirectoryHandle() should fail when opening a directory that doesn't\n// exist.\nTEST_F(OpenDirectoryTest, OpenNonExistent) {\n  auto dir =\n      OpenDirectoryHandle(temp_dir.GetPath().AppendASCII(\"non_existent\"));\n  ASSERT_FALSE(dir);\n}\n\n// OpenDirectoryHandle() should open only directories.\nTEST_F(OpenDirectoryTest, OpenFile) {\n  auto file_path = temp_dir.GetPath().AppendASCII(\"test_file\");\n  ASSERT_TRUE(WriteFile(file_path, \"foo\"));\n  auto dir = OpenDirectoryHandle(file_path);\n  ASSERT_FALSE(dir);\n}\n\n}  // namespace base\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2019", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "f", "uchs", "ia", "/", "file", "_", "utils", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "files", "/", "file", "_", "util", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "files", "/", "sc", "oped", "_", "temp", "_", "dir", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "testing", "/", "g", "test", "/", "include", "/", "g", "test", "/", "g", "test", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġbase", "Ġ{", "Ċ", "Ċ", "class", "ĠOpen", "Directory", "Test", "Ġ:", "Ġpublic", "Ġtesting", "::", "Test", "Ġ{", "Ċ", "Ġprotected", ":", "Ċ", "Ġ", "Ġvoid", "ĠSet", "Up", "()", "Ġoverride", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "TR", "UE", "(", "temp", "_", "dir", ".", "Create", "Unique", "Temp", "Dir", "Under", "Path", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbase", "::", "File", "Path", "(", "k", "Pers", "isted", "Data", "Directory", "Path", "))", ");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "ĠSc", "oped", "Temp", "Dir", "Ġtemp", "_", "dir", ";", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "Open", "Directory", "Test", ",", "ĠOpen", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġdir", "Ġ=", "ĠOpen", "Directory", "Handle", "(", "temp", "_", "dir", ".", "Get", "Path", "());", "Ċ", "Ġ", "ĠASS", "ERT", "_", "TR", "UE", "(", "dir", ");", "Ċ", "}", "Ċ", "Ċ", "//", "ĠOpen", "Directory", "Handle", "()", "Ġshould", "Ġfail", "Ġwhen", "Ġopening", "Ġa", "Ġdirectory", "Ġthat", "Ġdoesn", "'t", "Ċ", "//", "Ġexist", ".", "Ċ", "T", "EST", "_", "F", "(", "Open", "Directory", "Test", ",", "ĠOpen", "Non", "Ex", "istent", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġdir", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠOpen", "Directory", "Handle", "(", "temp", "_", "dir", ".", "Get", "Path", "().", "App", "end", "ASC", "II", "(\"", "non", "_", "existent", "\")", ");", "Ċ", "Ġ", "ĠASS", "ERT", "_", "F", "ALSE", "(", "dir", ");", "Ċ", "}", "Ċ", "Ċ", "//", "ĠOpen", "Directory", "Handle", "()", "Ġshould", "Ġopen", "Ġonly", "Ġdirectories", ".", "Ċ", "T", "EST", "_", "F", "(", "Open", "Directory", "Test", ",", "ĠOpen", "File", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġfile", "_", "path", "Ġ=", "Ġtemp", "_", "dir", ".", "Get", "Path", "().", "App", "end", "ASC", "II", "(\"", "test", "_", "file", "\");", "Ċ", "Ġ", "ĠASS", "ERT", "_", "TR", "UE", "(", "Write", "File", "(", "file", "_", "path", ",", "Ġ\"", "foo", "\")", ");", "Ċ", "Ġ", "Ġauto", "Ġdir", "Ġ=", "ĠOpen", "Directory", "Handle", "(", "file", "_", "path", ");", "Ċ", "Ġ", "ĠASS", "ERT", "_", "F", "ALSE", "(", "dir", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġbase", "Ċ"], "dataflow_graph": [["dir", 13, "comesFrom", ["dir"], [8]], ["dir", 21, "comesFrom", ["dir"], [15]], ["dir", 34, "comesFrom", ["dir"], [30]], ["file_path", 29, "comesFrom", ["file_path"], [23]], ["file_path", 32, "comesFrom", ["file_path"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::569", "code": "// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"third_party/blink/renderer/platform/graphics/main_thread_mutator_client.h\"\n\n#include <memory>\n#include \"third_party/blink/renderer/platform/graphics/animation_worklet_mutator_dispatcher_impl.h\"\n\nnamespace blink {\n\nMainThreadMutatorClient::MainThreadMutatorClient(\n    std::unique_ptr<AnimationWorkletMutatorDispatcherImpl> mutator)\n    : mutator_(std::move(mutator)) {\n  mutator_->SetClient(this);\n}\n\nvoid MainThreadMutatorClient::SynchronizeAnimatorName(\n    const String& animator_name) {\n  delegate_->SynchronizeAnimatorName(animator_name);\n}\n\nvoid MainThreadMutatorClient::SetMutationUpdate(\n    std::unique_ptr<AnimationWorkletOutput> output_state) {\n  delegate_->SetMutationUpdate(std::move(output_state));\n}\n\nvoid MainThreadMutatorClient::SetDelegate(MutatorClient* delegate) {\n  delegate_ = delegate;\n}\n\n}  // namespace blink\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2018", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "third", "_", "party", "/", "bl", "ink", "/", "rend", "erer", "/", "platform", "/", "g", "raphics", "/", "main", "_", "thread", "_", "mut", "ator", "_", "client", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ\"", "third", "_", "party", "/", "bl", "ink", "/", "rend", "erer", "/", "platform", "/", "g", "raphics", "/", "anim", "ation", "_", "work", "let", "_", "mut", "ator", "_", "dis", "pat", "cher", "_", "impl", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġblink", "Ġ{", "Ċ", "Ċ", "Main", "Thread", "Mut", "ator", "Client", "::", "Main", "Thread", "Mut", "ator", "Client", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "Animation", "Work", "let", "Mut", "ator", "Dis", "pat", "cher", "Impl", ">", "Ġmut", "ator", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġmut", "ator", "_(", "std", "::", "move", "(", "mut", "ator", "))", "Ġ{", "Ċ", "Ġ", "Ġmut", "ator", "_", "->", "Set", "Client", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMain", "Thread", "Mut", "ator", "Client", "::", "S", "ynchron", "ize", "Anim", "ator", "Name", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠString", "&", "Ġanim", "ator", "_", "name", ")", "Ġ{", "Ċ", "Ġ", "Ġdelegate", "_", "->", "S", "ynchron", "ize", "Anim", "ator", "Name", "(", "anim", "ator", "_", "name", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMain", "Thread", "Mut", "ator", "Client", "::", "Set", "M", "utation", "Update", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "Animation", "Work", "let", "Output", ">", "Ġoutput", "_", "state", ")", "Ġ{", "Ċ", "Ġ", "Ġdelegate", "_", "->", "Set", "M", "utation", "Update", "(", "std", "::", "move", "(", "output", "_", "state", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMain", "Thread", "Mut", "ator", "Client", "::", "Set", "De", "legate", "(", "Mut", "ator", "Client", "*", "Ġdelegate", ")", "Ġ{", "Ċ", "Ġ", "Ġdelegate", "_", "Ġ=", "Ġdelegate", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġblink", "Ċ"], "dataflow_graph": [["mutator", 5, "comesFrom", ["mutator"], [2]], ["output_state", 18, "comesFrom", ["output_state"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::570", "code": "\n#include \"dnsrecords.hh\"\n#include \"iputils.hh\"\n\nstatic inline std::shared_ptr<DNSRecordContent> getRecordContent(uint16_t type, const std::string& content)\n{\n  std::shared_ptr<DNSRecordContent> result = nullptr;\n\n  if (type == QType::NS) {\n    result = std::make_shared<NSRecordContent>(DNSName(content));\n  }\n  else if (type == QType::A) {\n    result = std::make_shared<ARecordContent>(ComboAddress(content));\n  }\n  else if (type == QType::AAAA) {\n    result = std::make_shared<AAAARecordContent>(ComboAddress(content));\n  }\n  else if (type == QType::CNAME) {\n    result = std::make_shared<CNAMERecordContent>(DNSName(content));\n  }\n  else if (type == QType::OPT) {\n    result = std::make_shared<OPTRecordContent>();\n  }\n  else {\n    result = DNSRecordContent::mastermake(type, QClass::IN, content);\n  }\n\n  return result;\n}\n\nstatic inline void addRecordToList(std::vector<DNSRecord>& records, const DNSName& name, uint16_t type, const std::string& content, DNSResourceRecord::Place place=DNSResourceRecord::ANSWER, uint32_t ttl=3600)\n{\n  DNSRecord rec;\n  rec.d_place = place;\n  rec.d_name = name;\n  rec.d_type = type;\n  rec.d_ttl = ttl;\n\n  rec.d_content = getRecordContent(type, content);\n\n  records.push_back(rec);\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "d", "ns", "rec", "ords", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "ip", "utils", ".", "hh", "\"", "Ċ", "Ċ", "static", "Ġinline", "Ġstd", "::", "shared", "_", "ptr", "<", "D", "NS", "Record", "Content", ">", "Ġget", "Record", "Content", "(", "uint", "16", "_", "t", "Ġtype", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġcontent", ")", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "D", "NS", "Record", "Content", ">", "Ġresult", "Ġ=", "Ġnull", "ptr", ";", "ĊĊ", "Ġ", "Ġif", "Ġ(", "type", "Ġ==", "ĠQ", "Type", "::", "NS", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "NS", "Record", "Content", ">(", "D", "NS", "Name", "(", "content", "));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ġif", "Ġ(", "type", "Ġ==", "ĠQ", "Type", "::", "A", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "AR", "ec", "ord", "Content", ">(", "Com", "bo", "Address", "(", "content", "));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ġif", "Ġ(", "type", "Ġ==", "ĠQ", "Type", "::", "AAAA", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "AAA", "AR", "ec", "ord", "Content", ">(", "Com", "bo", "Address", "(", "content", "));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ġif", "Ġ(", "type", "Ġ==", "ĠQ", "Type", "::", "C", "NAME", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "CN", "AM", "ER", "ec", "ord", "Content", ">(", "D", "NS", "Name", "(", "content", "));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ġif", "Ġ(", "type", "Ġ==", "ĠQ", "Type", "::", "OP", "T", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "OP", "TR", "ec", "ord", "Content", ">", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ=", "ĠDNS", "Record", "Content", "::", "master", "make", "(", "type", ",", "ĠQ", "Class", "::", "IN", ",", "Ġcontent", ");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "static", "Ġinline", "Ġvoid", "Ġadd", "Record", "To", "List", "(", "std", "::", "vector", "<", "D", "NS", "Record", ">", "&", "Ġrecords", ",", "Ġconst", "ĠDNS", "Name", "&", "Ġname", ",", "Ġuint", "16", "_", "t", "Ġtype", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġcontent", ",", "ĠDNS", "Resource", "Record", "::", "Place", "Ġplace", "=", "D", "NS", "Resource", "Record", "::", "ANS", "WER", ",", "Ġuint", "32", "_", "t", "Ġt", "tl", "=", "36", "00", ")", "Ċ", "{", "Ċ", "Ġ", "ĠDNS", "Record", "Ġrec", ";", "Ċ", "Ġ", "Ġrec", ".", "d", "_", "place", "Ġ=", "Ġplace", ";", "Ċ", "Ġ", "Ġrec", ".", "d", "_", "name", "Ġ=", "Ġname", ";", "Ċ", "Ġ", "Ġrec", ".", "d", "_", "type", "Ġ=", "Ġtype", ";", "Ċ", "Ġ", "Ġrec", ".", "d", "_", "tt", "l", "Ġ=", "Ġt", "tl", ";", "ĊĊ", "Ġ", "Ġrec", ".", "d", "_", "content", "Ġ=", "Ġget", "Record", "Content", "(", "type", ",", "Ġcontent", ");", "ĊĊ", "Ġ", "Ġrecords", ".", "push", "_", "back", "(", "rec", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["type", 4, "comesFrom", ["type"], [1]], ["type", 10, "comesFrom", ["type"], [1]], ["type", 16, "comesFrom", ["type"], [1]], ["type", 22, "comesFrom", ["type"], [1]], ["type", 28, "comesFrom", ["type"], [1]], ["type", 34, "comesFrom", ["type"], [1]], ["type", 55, "comesFrom", ["type"], [41]], ["type", 62, "comesFrom", ["type"], [41]], ["result", 37, "comesFrom", ["result"], [32]], ["rec", 47, "comesFrom", ["rec"], [46]], ["rec", 50, "comesFrom", ["rec"], [46]], ["rec", 53, "comesFrom", ["rec"], [46]], ["rec", 56, "comesFrom", ["rec"], [46]], ["rec", 59, "comesFrom", ["rec"], [46]], ["rec", 66, "comesFrom", ["rec"], [46]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::571", "code": "// { dg-do compile }\n// { dg-options \"-std=gnu++0x\" }\n\n// Copyright (C) 2010 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 24.6.5, range access [iterator.range]\n\n#include <deque>\n\nvoid\ntest01()\n{\n  std::deque<int> d{1, 2, 3};\n  std::begin(d);\n  std::end(d);\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "0", "x", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2010", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "ĠPred", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ24", ".", "6", ".", "5", ",", "Ġrange", "Ġaccess", "Ġ[", "iterator", ".", "range", "]", "Ċ", "Ċ", "#", "include", "Ġ<", "de", "que", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "de", "que", "<", "int", ">", "Ġd", "{", "1", ",", "Ġ2", ",", "Ġ3", "};", "Ċ", "Ġ", "Ġstd", "::", "begin", "(", "d", ");", "Ċ", "Ġ", "Ġstd", "::", "end", "(", "d", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["d", 3, "comesFrom", ["d"], [1]], ["d", 5, "comesFrom", ["d"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::572", "code": "// Copyright (c) 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"ui/gfx/size_f.h\"\n\n#include \"base/strings/stringprintf.h\"\n\nnamespace gfx {\n\ntemplate class SizeBase<SizeF, float>;\n\nstd::string SizeF::ToString() const {\n  return base::StringPrintf(\"%fx%f\", width(), height());\n}\n\nSizeF ScaleSize(const SizeF& s, float x_scale, float y_scale) {\n  SizeF scaled_s(s);\n  scaled_s.Scale(x_scale, y_scale);\n  return scaled_s;\n}\n\n}  // namespace gfx\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2012", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "ui", "/", "g", "fx", "/", "size", "_", "f", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "strings", "/", "string", "printf", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġg", "fx", "Ġ{", "Ċ", "Ċ", "template", "Ġclass", "ĠSize", "Base", "<", "Size", "F", ",", "Ġfloat", ">", ";", "Ċ", "Ċ", "std", "::", "string", "ĠSize", "F", "::", "To", "String", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġbase", "::", "String", "Print", "f", "(\"", "%", "fx", "%", "f", "\",", "Ġwidth", "(),", "Ġheight", "());", "Ċ", "}", "Ċ", "Ċ", "Size", "F", "ĠScale", "Size", "(", "const", "ĠSize", "F", "&", "Ġs", ",", "Ġfloat", "Ġx", "_", "scale", ",", "Ġfloat", "Ġy", "_", "scale", ")", "Ġ{", "Ċ", "Ġ", "ĠSize", "F", "Ġscaled", "_", "s", "(", "s", ");", "Ċ", "Ġ", "Ġscaled", "_", "s", ".", "Scale", "(", "x", "_", "scale", ",", "Ġy", "_", "scale", ");", "Ċ", "Ġ", "Ġreturn", "Ġscaled", "_", "s", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġg", "fx", "Ċ"], "dataflow_graph": [["x_scale", 12, "comesFrom", ["x_scale"], [7]], ["y_scale", 13, "comesFrom", ["y_scale"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::573", "code": "// { dg-do run }\n// { dg-options \"-ansi -pedantic-errors -fsigned-bitfields\" }\n\n// Copyright (C) 2001 Free Software Foundation, Inc.\n// Contributed by Nathan Sidwell 15 Dec 2001 <nathan@codesourcery.com>\n\ntypedef int Int;\ntypedef signed int SInt;\ntypedef unsigned int UInt;\n\nstruct A\n{\n  SInt bitS : 1;\t// signed\n  UInt bitU : 1;\t// unsigned\n  Int bit : 1;\t\t// signedness by -f{signed,unsigned}-bitfields\n};\n\nint main ()\n{\n  A a;\n\n  a.bitS = 1; // { dg-warning \"overflow\" }\n  a.bitU = 1;\n  a.bit = 1;  // { dg-warning \"overflow\" }\n\n  if (a.bitS != -1)\n    return 1;\n  if (a.bitU != 1)\n    return 2;\n  if (a.bit != -1)\n    return 3;\n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "ans", "i", "Ġ-", "ped", "antic", "-", "errors", "Ġ-", "fs", "igned", "-", "bit", "fields", "\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2001", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "ĠCont", "ributed", "Ġby", "ĠNathan", "ĠSid", "well", "Ġ15", "ĠDec", "Ġ2001", "Ġ<", "n", "athan", "@", "codes", "our", "cery", ".", "com", ">", "Ċ", "Ċ", "ty", "ped", "ef", "Ġint", "ĠInt", ";", "Ċ", "ty", "ped", "ef", "Ġsigned", "Ġint", "ĠS", "Int", ";", "Ċ", "ty", "ped", "ef", "Ġunsigned", "Ġint", "ĠU", "Int", ";", "Ċ", "Ċ", "struct", "ĠA", "Ċ", "{", "Ċ", "Ġ", "ĠS", "Int", "Ġbit", "S", "Ġ:", "Ġ1", ";", "ĉ", "//", "Ġsigned", "Ċ", "Ġ", "ĠU", "Int", "Ġbit", "U", "Ġ:", "Ġ1", ";", "ĉ", "//", "Ġunsigned", "Ċ", "Ġ", "ĠInt", "Ġbit", "Ġ:", "Ġ1", ";", "ĉ", "ĉ", "//", "Ġsigned", "ness", "Ġby", "Ġ-", "f", "{", "signed", ",", "unsigned", "}", "-", "bit", "fields", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "ĠA", "Ġa", ";", "ĊĊ", "Ġ", "Ġa", ".", "bit", "S", "Ġ=", "Ġ1", ";", "Ġ//", "Ġ{", "Ġd", "g", "-", "warning", "Ġ\"", "over", "flow", "\"", "Ġ}", "Ċ", "Ġ", "Ġa", ".", "bit", "U", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġa", ".", "bit", "Ġ=", "Ġ1", ";", "Ġ", "Ġ//", "Ġ{", "Ġd", "g", "-", "warning", "Ġ\"", "over", "flow", "\"", "Ġ}", "ĊĊ", "Ġ", "Ġif", "Ġ(", "a", ".", "bit", "S", "Ġ!=", "Ġ-", "1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġif", "Ġ(", "a", ".", "bit", "U", "Ġ!=", "Ġ1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ2", ";", "Ċ", "Ġ", "Ġif", "Ġ(", "a", ".", "bit", "Ġ!=", "Ġ-", "1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ3", ";", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 5, "comesFrom", ["a"], [4]], ["a", 7, "comesFrom", ["a"], [4]], ["a", 9, "comesFrom", ["a"], [4]], ["a", 11, "comesFrom", ["a"], [4]], ["a", 13, "comesFrom", ["a"], [4]], ["a", 15, "comesFrom", ["a"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::574", "code": "//Thomas Salemy\n//Project Euler Solutions\n//Problem 72\n\n#include <iostream>\n#include <time.h>\nusing namespace std;\n\n\nint main() {\n    clock_t time = clock();\n\n    const int MAX = 1000001;\n    int* sieve = new int[MAX]();\n\n    for (int i = 2; i < MAX; i++) {\n\t    if (sieve[i] == 0) {\n\t\t    sieve[i] = i - 1;\n\t\t    for (int k = i * 2; k < MAX; k += i) {\n\t\t\t    if (sieve[k] == 0) {\n\t\t\t\t    sieve[k] = k;\n\t\t\t    }\n\t\t\t    sieve[k] = (int) (sieve[k] * (1.0 - 1.0 / i));\n\t\t    }\n\t    }   \n    }\n\n    long long total = 0;\n    for (int i = 2; i < MAX; i++) {\n\t    total += sieve[i];\n    }\n\n    cout << total << endl;\n    cout << (clock() - time) / (double) CLOCKS_PER_SEC << endl;\n\n    delete [] sieve;\n}\n", "code_tokens": ["Ġ//", "Thomas", "ĠSal", "emy", "Ċ", "//", "Project", "ĠE", "uler", "ĠSolutions", "Ċ", "//", "Problem", "Ġ72", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "time", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġclock", "_", "t", "Ġtime", "Ġ=", "Ġclock", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġint", "ĠMAX", "Ġ=", "Ġ100", "0001", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "*", "Ġs", "ieve", "Ġ=", "Ġnew", "Ġint", "[", "MAX", "]", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<", "ĠMAX", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "ieve", "[", "i", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġs", "ieve", "[", "i", "]", "Ġ=", "Ġi", "Ġ-", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġk", "Ġ=", "Ġi", "Ġ*", "Ġ2", ";", "Ġk", "Ġ<", "ĠMAX", ";", "Ġk", "Ġ+=", "Ġi", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "ieve", "[", "k", "]", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġs", "ieve", "[", "k", "]", "Ġ=", "Ġk", ";", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġs", "ieve", "[", "k", "]", "Ġ=", "Ġ(", "int", ")", "Ġ(", "s", "ieve", "[", "k", "]", "Ġ*", "Ġ(", "1", ".", "0", "Ġ-", "Ġ1", ".", "0", "Ġ/", "Ġi", "));", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġlong", "Ġtotal", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<", "ĠMAX", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġtotal", "Ġ+=", "Ġs", "ieve", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġtotal", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ(", "clock", "()", "Ġ-", "Ġtime", ")", "Ġ/", "Ġ(", "double", ")", "ĠCL", "OCK", "S", "_", "PER", "_", "SEC", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġ[]", "Ġs", "ieve", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["MAX", 6, "comesFrom", ["MAX"], [4]], ["MAX", 9, "comesFrom", ["MAX"], [4]], ["MAX", 19, "comesFrom", ["MAX"], [4]], ["MAX", 35, "comesFrom", ["MAX"], [4]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["i", 12, "comesFrom", ["i"], [7]], ["i", 14, "comesFrom", ["i"], [7]], ["i", 15, "comesFrom", ["i"], [7]], ["i", 17, "comesFrom", ["i"], [7]], ["i", 21, "comesFrom", ["i"], [7]], ["i", 31, "comesFrom", ["i"], [7]], ["i", 34, "comesFrom", ["i"], [33]], ["i", 36, "comesFrom", ["i"], [33]], ["i", 39, "comesFrom", ["i"], [33]], ["k", 18, "comesFrom", ["k"], [16]], ["k", 23, "comesFrom", ["k"], [20]], ["k", 25, "comesFrom", ["k"], [20]], ["k", 26, "comesFrom", ["k"], [20]], ["k", 28, "comesFrom", ["k"], [20]], ["k", 30, "comesFrom", ["k"], [20]], ["total", 41, "comesFrom", ["total"], [37]], ["time", 45, "comesFrom", ["time"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::575", "code": "#ifndef VEC2_HPP\n#define VEC2_HPP\n\n#include \"math.h\"\n\nclass Vec2 {\npublic:\n\tfloat x, y;\n\n\tVec2() : x{0}, y{0} {}\n\tVec2(const Vec2& vec) : x{vec.x}, y{vec.y} {}\n\tVec2(float xp, float yp) : x{xp}, y{yp} {}\n\n\t/* Operations */\n\tVec2 operator+(const Vec2 b);\n\tvoid operator+=(const Vec2 b);\n\n\tVec2 operator-(const Vec2 b);\n\tvoid operator-=(const Vec2 b);\n\n\tVec2 operator*(const Vec2 b);\n\tVec2 operator*(const float n);\n\tvoid operator*=(const Vec2 b);\n\tvoid operator*=(const float n);\n\n\tVec2 operator/(const Vec2 b);\n\tVec2 operator/(const float n);\n\tvoid operator/=(const Vec2 b);\n\tvoid operator/=(const float n);\n\t\n\t/* Calculate and return length of vector */\n\tfloat length();\n\tvoid length(float len);\n\tvoid limit(float len);\n\n\t/* Returns vector with length 1 */\n\tVec2 normal();\n\tvoid normalize();\n\n\tvoid rotate(float theta);\n\tfloat angle(Vec2 b = Vec2(0, 0));\n\n\tVec2 onlyX();\n\tVec2 onlyY();\n\n};\n\n#endif", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠV", "EC", "2", "_", "H", "PP", "Ċ", "#", "define", "ĠV", "EC", "2", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ\"", "math", ".", "h", "\"", "Ċ", "Ċ", "class", "ĠVec", "2", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "float", "Ġx", ",", "Ġy", ";", "ĊĊ", "ĉ", "V", "ec", "2", "()", "Ġ:", "Ġx", "{", "0", "},", "Ġy", "{", "0", "}", "Ġ{}", "Ċ", "ĉ", "V", "ec", "2", "(", "const", "ĠVec", "2", "&", "Ġvec", ")", "Ġ:", "Ġx", "{", "vec", ".", "x", "},", "Ġy", "{", "vec", ".", "y", "}", "Ġ{}", "Ċ", "ĉ", "V", "ec", "2", "(", "float", "Ġxp", ",", "Ġfloat", "Ġy", "p", ")", "Ġ:", "Ġx", "{", "xp", "},", "Ġy", "{", "yp", "}", "Ġ{}", "ĊĊ", "ĉ", "/*", "ĠOperations", "Ġ*/", "Ċ", "ĉ", "V", "ec", "2", "Ġoperator", "+(", "const", "ĠVec", "2", "Ġb", ");", "Ċ", "ĉ", "void", "Ġoperator", "+", "=(", "const", "ĠVec", "2", "Ġb", ");", "ĊĊ", "ĉ", "V", "ec", "2", "Ġoperator", "-(", "const", "ĠVec", "2", "Ġb", ");", "Ċ", "ĉ", "void", "Ġoperator", "-", "=(", "const", "ĠVec", "2", "Ġb", ");", "ĊĊ", "ĉ", "V", "ec", "2", "Ġoperator", "*", "(", "const", "ĠVec", "2", "Ġb", ");", "Ċ", "ĉ", "V", "ec", "2", "Ġoperator", "*", "(", "const", "Ġfloat", "Ġn", ");", "Ċ", "ĉ", "void", "Ġoperator", "*", "=(", "const", "ĠVec", "2", "Ġb", ");", "Ċ", "ĉ", "void", "Ġoperator", "*", "=(", "const", "Ġfloat", "Ġn", ");", "ĊĊ", "ĉ", "V", "ec", "2", "Ġoperator", "/(", "const", "ĠVec", "2", "Ġb", ");", "Ċ", "ĉ", "V", "ec", "2", "Ġoperator", "/(", "const", "Ġfloat", "Ġn", ");", "Ċ", "ĉ", "void", "Ġoperator", "/", "=(", "const", "ĠVec", "2", "Ġb", ");", "Ċ", "ĉ", "void", "Ġoperator", "/", "=(", "const", "Ġfloat", "Ġn", ");", "Ċ", "ĉ", "Ċ", "ĉ", "/*", "ĠCalcul", "ate", "Ġand", "Ġreturn", "Ġlength", "Ġof", "Ġvector", "Ġ*/", "Ċ", "ĉ", "float", "Ġlength", "();", "Ċ", "ĉ", "void", "Ġlength", "(", "float", "Ġlen", ");", "Ċ", "ĉ", "void", "Ġlimit", "(", "float", "Ġlen", ");", "ĊĊ", "ĉ", "/*", "ĠReturns", "Ġvector", "Ġwith", "Ġlength", "Ġ1", "Ġ*/", "Ċ", "ĉ", "V", "ec", "2", "Ġnormal", "();", "Ċ", "ĉ", "void", "Ġnormal", "ize", "();", "ĊĊ", "ĉ", "void", "Ġrotate", "(", "float", "Ġthe", "ta", ");", "Ċ", "ĉ", "float", "Ġangle", "(", "V", "ec", "2", "Ġb", "Ġ=", "ĠVec", "2", "(", "0", ",", "Ġ0", "));", "ĊĊ", "ĉ", "V", "ec", "2", "Ġonly", "X", "();", "Ċ", "ĉ", "V", "ec", "2", "Ġonly", "Y", "();", "Ċ", "Ċ", "};", "Ċ", "Ċ", "#", "endif"], "dataflow_graph": [["xp", 19, "comesFrom", ["xp"], [16]], ["yp", 21, "comesFrom", ["yp"], [17]], ["b", 44, "comesFrom", ["b"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::576", "code": "#include <iostream>\n\n//Function to calculate number of integers in a given number.\nint integer_length(long long int n){\n    int length = 0;\n    while (n!=0){\n        length++;\n        n=n/10;\n    }\n    return length;\n}\n\n//Driver function.\nint main(){\n    std::cout << integer_length(34) << std::endl;\n    std::cout << integer_length(6) << std::endl;\n    std::cout << integer_length(785416931) << std::endl;\n} ", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "//", "Function", "Ġto", "Ġcalculate", "Ġnumber", "Ġof", "Ġintegers", "Ġin", "Ġa", "Ġgiven", "Ġnumber", ".", "Ċ", "int", "Ġinteger", "_", "length", "(", "long", "Ġlong", "Ġint", "Ġn", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlength", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "n", "!", "=", "0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlength", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "=", "n", "/", "10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġlength", ";", "Ċ", "}", "Ċ", "Ċ", "//", "Driver", "Ġfunction", ".", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġinteger", "_", "length", "(", "34", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġinteger", "_", "length", "(", "6", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġinteger", "_", "length", "(", "78", "54", "169", "31", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ġ"], "dataflow_graph": [["n", 3, "comesFrom", ["n"], [1]], ["n", 6, "comesFrom", ["n"], [5]], ["length", 4, "comesFrom", ["length"], [2]], ["length", 7, "comesFrom", ["length"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::577", "code": "#include <cstring>\n#include <ctime>\n\nextern \"C\" {\n__asm__(\".symver memcpy,memcpy@GLIBC_2.2.5\");\n__asm__(\".symver clock_gettime,clock_gettime@GLIBC_2.2.5\");\n\nvoid* __wrap_memcpy(void* dest, const void* src, size_t n) {\n  return memcpy(dest, src, n);\n}\n\nint __wrap_clock_gettime(clockid_t clk_id, struct timespec* tp) {\n  return clock_gettime(clk_id, tp);\n}\n}  // extern \"C\"\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "string", ">", "Ċ", "#", "include", "Ġ<", "ct", "ime", ">", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġ{", "Ċ", "__", "asm", "__", "(", "\".", "sym", "ver", "Ġmem", "c", "py", ",", "mem", "c", "py", "@", "GL", "I", "BC", "_", "2", ".", "2", ".", "5", "\");", "Ċ", "__", "asm", "__", "(", "\".", "sym", "ver", "Ġclock", "_", "get", "time", ",", "clock", "_", "get", "time", "@", "GL", "I", "BC", "_", "2", ".", "2", ".", "5", "\");", "Ċ", "Ċ", "void", "*", "Ġ__", "wrap", "_", "mem", "c", "py", "(", "void", "*", "Ġdest", ",", "Ġconst", "Ġvoid", "*", "Ġsrc", ",", "Ġsize", "_", "t", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġmem", "c", "py", "(", "dest", ",", "Ġsrc", ",", "Ġn", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġ__", "wrap", "_", "clock", "_", "get", "time", "(", "clock", "id", "_", "t", "Ġcl", "k", "_", "id", ",", "Ġstruct", "Ġtimes", "pec", "*", "Ġt", "p", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġclock", "_", "get", "time", "(", "cl", "k", "_", "id", ",", "Ġt", "p", ");", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "Ġex", "tern", "Ġ\"", "C", "\"", "Ċ"], "dataflow_graph": [["n", 7, "comesFrom", ["n"], [3]], ["clk_id", 12, "comesFrom", ["clk_id"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::578", "code": "// Copyright (c) 2009-2010 Satoshi Nakamoto\n// Copyright (c) 2009-2014 The Bitcoin Core Developers\n// Copyright (c) 2015 Solarminx\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"amount.h\"\n\n#include \"tinyformat.h\"\n\nCFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nSize)\n{\n    if (nSize > 0)\n        nSatoshisPerK = nFeePaid*1000/nSize;\n    else\n        nSatoshisPerK = 0;\n}\n\nCAmount CFeeRate::GetFee(size_t nSize) const\n{\n    CAmount nFee = nSatoshisPerK*nSize / 1000;\n\n    if (nFee == 0 && nSatoshisPerK > 0)\n        nFee = nSatoshisPerK;\n\n    return nFee;\n}\n\nstd::string CFeeRate::ToString() const\n{\n    return strprintf(\"%d.%08d SRI/kB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN);\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2010", "ĠSatoshi", "ĠNak", "amoto", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2009", "-", "2014", "ĠThe", "ĠBitcoin", "ĠCore", "ĠDevelopers", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "ĠSolar", "min", "x", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠMIT", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġaccompanying", "Ċ", "//", "Ġfile", "ĠCOP", "YING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "amount", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "tiny", "format", ".", "h", "\"", "Ċ", "Ċ", "CF", "ee", "Rate", "::", "CF", "ee", "Rate", "(", "const", "ĠC", "Amount", "&", "Ġn", "F", "ee", "P", "aid", ",", "Ġsize", "_", "t", "Ġn", "Size", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Size", "Ġ>", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ=", "Ġn", "F", "ee", "P", "aid", "*", "1000", "/", "n", "Size", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "C", "Amount", "ĠCF", "ee", "Rate", "::", "Get", "F", "ee", "(", "size", "_", "t", "Ġn", "Size", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠC", "Amount", "Ġn", "F", "ee", "Ġ=", "Ġn", "Sat", "osh", "is", "Per", "K", "*", "n", "Size", "Ġ/", "Ġ1000", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "F", "ee", "Ġ==", "Ġ0", "Ġ&&", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ>", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "F", "ee", "Ġ=", "Ġn", "Sat", "osh", "is", "Per", "K", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġn", "F", "ee", ";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "ĠCF", "ee", "Rate", "::", "To", "String", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstr", "printf", "(\"", "%", "d", ".", "%", "08", "d", "ĠS", "RI", "/", "kB", "\",", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ/", "ĠCO", "IN", ",", "Ġn", "Sat", "osh", "is", "Per", "K", "Ġ%", "ĠCO", "IN", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["nSize", 3, "comesFrom", ["nSize"], [2]], ["nSize", 6, "comesFrom", ["nSize"], [2]], ["nSize", 12, "comesFrom", ["nSize"], [9]], ["nSatoshisPerK", 11, "comesFrom", ["nSatoshisPerK"], [7]], ["nSatoshisPerK", 14, "comesFrom", ["nSatoshisPerK"], [7]], ["nSatoshisPerK", 16, "comesFrom", ["nSatoshisPerK"], [7]], ["nSatoshisPerK", 20, "comesFrom", ["nSatoshisPerK"], [7]], ["nSatoshisPerK", 22, "comesFrom", ["nSatoshisPerK"], [7]], ["nFee", 13, "comesFrom", ["nFee"], [10]], ["nFee", 17, "comesFrom", ["nFee"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::579", "code": "#include \"tvpreviewlabel.h\"\r\n\r\n#include <QMenu>\r\n#include <QContextMenuEvent>\r\n\r\nnamespace MoodBox\r\n{\r\n\r\nTVPreviewLabel::TVPreviewLabel(QWidget *parent)\r\n\t: QLabel(parent), contextMenu(NULL)\r\n{\r\n}\r\n\r\nvoid TVPreviewLabel::setContextMenu(QMenu *menu)\r\n{\r\n\tcontextMenu = menu;\r\n}\r\n\r\nvoid TVPreviewLabel::enterEvent(QEvent *event)\r\n{\r\n\tQLabel::enterEvent(event);\r\n\r\n\temit mouseInPreview();\r\n}\r\n\r\nvoid TVPreviewLabel::leaveEvent(QEvent *event)\r\n{\r\n\tQLabel::leaveEvent(event);\r\n\r\n\temit mouseOutPreview();\r\n}\r\n\r\nvoid TVPreviewLabel::contextMenuEvent(QContextMenuEvent *event)\r\n{\r\n\tif (contextMenu != NULL)\r\n\t{\r\n\t\tcontextMenu->exec(event->globalPos());\r\n\t}\r\n\r\n\tQLabel::contextMenuEvent(event);\r\n}\r\n\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "tv", "pre", "view", "label", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "Q", "Menu", ">", "č", "Ċ", "#", "include", "Ġ<", "Q", "Context", "Menu", "Event", ">", "č", "Ċ", "č", "Ċ", "names", "pace", "ĠMood", "Box", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "TV", "Preview", "Label", "::", "TV", "Preview", "Label", "(", "Q", "Widget", "Ġ*", "parent", ")", "č", "Ċ", "ĉ", ":", "ĠQ", "Label", "(", "parent", "),", "Ġcontext", "Menu", "(", "NULL", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠTV", "Preview", "Label", "::", "set", "Context", "Menu", "(", "Q", "Menu", "Ġ*", "menu", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "context", "Menu", "Ġ=", "Ġmenu", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠTV", "Preview", "Label", "::", "enter", "Event", "(", "Q", "Event", "Ġ*", "event", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "QL", "abel", "::", "enter", "Event", "(", "event", ");", "č", "Ċ", "č", "Ċ", "ĉ", "em", "it", "Ġmouse", "In", "Preview", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠTV", "Preview", "Label", "::", "leave", "Event", "(", "Q", "Event", "Ġ*", "event", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "QL", "abel", "::", "leave", "Event", "(", "event", ");", "č", "Ċ", "č", "Ċ", "ĉ", "em", "it", "Ġmouse", "Out", "Preview", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠTV", "Preview", "Label", "::", "context", "Menu", "Event", "(", "Q", "Context", "Menu", "Event", "Ġ*", "event", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "if", "Ġ(", "context", "Menu", "Ġ!=", "ĠNULL", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "context", "Menu", "->", "exec", "(", "event", "->", "global", "Pos", "());", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "QL", "abel", "::", "context", "Menu", "Event", "(", "event", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "}"], "dataflow_graph": [["contextMenu", 21, "comesFrom", ["contextMenu"], [7]], ["contextMenu", 22, "comesFrom", ["contextMenu"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::580", "code": "#include \"tests/Component3.h\"\n\nComponent3::Component3() : i(0) {}\nComponent3::Component3(int i) : i(i) {}\nvoid Component3::set_i(int _i) { i = _i; }\nint Component3::get_i() { return i; }", "code_tokens": ["Ġ#", "include", "Ġ\"", "tests", "/", "Component", "3", ".", "h", "\"", "Ċ", "Ċ", "Component", "3", "::", "Component", "3", "()", "Ġ:", "Ġi", "(", "0", ")", "Ġ{}", "Ċ", "Component", "3", "::", "Component", "3", "(", "int", "Ġi", ")", "Ġ:", "Ġi", "(", "i", ")", "Ġ{}", "Ċ", "void", "ĠComponent", "3", "::", "set", "_", "i", "(", "int", "Ġ_", "i", ")", "Ġ{", "Ġi", "Ġ=", "Ġ_", "i", ";", "Ġ}", "Ċ", "int", "ĠComponent", "3", "::", "get", "_", "i", "()", "Ġ{", "Ġreturn", "Ġi", ";", "Ġ}"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 5, "comesFrom", ["i"], [3]], ["i", 11, "comesFrom", ["i"], [8]], ["_i", 9, "comesFrom", ["_i"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::581", "code": "\n\n//read a child input file \nvoid Chintz_base::ReadChildControlFile(const QString& inputfile){\n  ifstream infile;\n  infile.open(inputfile);\n  string q,val;\n  QString qty;\n  char c;\n  bool detected;\n  int num=0;\n  while (!infile.eof())\n    {\n      infile>>val;\n      if (val.find(\"Comments\")==0)break;\n      detected=false;\n      if(!infile.good())break;\n      infile.get(c);\n      while (c!='\\n')infile.get(c);\n      if(val.find(\"#\")==0)continue;\n      q=\"#\";\n      while(q.find(\"#\")==0)infile>>q;\n      infile.get(c);\n      while (c!='\\n')infile.get(c);\n      qty=q.c_str();\n      if (qty.isNull()) continue;\n      if (qty.isEmpty()) continue;\n      #include \"generated_child_readcode\"\n      if (!detected){\n       num++;\n       #include \"generated_extra_readcode\"\n      }\n    }\n}\n\n", "code_tokens": ["Ċ", "Ċ", "//", "read", "Ġa", "Ġchild", "Ġinput", "Ġfile", "Ġ", "Ċ", "void", "ĠCh", "int", "z", "_", "base", "::", "Read", "Child", "Control", "File", "(", "const", "ĠQ", "String", "&", "Ġinput", "file", "){", "Ċ", "Ġ", "Ġif", "stream", "Ġinf", "ile", ";", "Ċ", "Ġ", "Ġinf", "ile", ".", "open", "(", "input", "file", ");", "Ċ", "Ġ", "Ġstring", "Ġq", ",", "val", ";", "Ċ", "Ġ", "ĠQ", "String", "Ġq", "ty", ";", "Ċ", "Ġ", "Ġchar", "Ġc", ";", "Ċ", "Ġ", "Ġbool", "Ġdetected", ";", "Ċ", "Ġ", "Ġint", "Ġnum", "=", "0", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(!", "in", "file", ".", "e", "of", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġinf", "ile", ">>", "val", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "val", ".", "find", "(\"", "Comments", "\")", "==", "0", ")", "break", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdetected", "=", "false", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "in", "file", ".", "good", "())", "break", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġinf", "ile", ".", "get", "(", "c", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "c", "!", "='", "\\", "n", "')", "in", "file", ".", "get", "(", "c", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "val", ".", "find", "(\"", "#", "\")", "==", "0", ")", "continue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", "=\"#", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "q", ".", "find", "(\"", "#", "\")", "==", "0", ")", "in", "file", ">>", "q", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġinf", "ile", ".", "get", "(", "c", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "c", "!", "='", "\\", "n", "')", "in", "file", ".", "get", "(", "c", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", "ty", "=", "q", ".", "c", "_", "str", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "q", "ty", ".", "is", "Null", "())", "Ġcontinue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "q", "ty", ".", "is", "Empty", "())", "Ġcontinue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ#", "include", "Ġ\"", "generated", "_", "child", "_", "read", "code", "\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "det", "ected", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnum", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ#", "include", "Ġ\"", "generated", "_", "extra", "_", "read", "code", "\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["infile", 3, "comesFrom", ["infile"], [2]], ["infile", 12, "comesFrom", ["infile"], [2]], ["infile", 14, "comesFrom", ["infile"], [2]], ["infile", 19, "comesFrom", ["infile"], [2]], ["infile", 21, "comesFrom", ["infile"], [2]], ["infile", 25, "comesFrom", ["infile"], [2]], ["infile", 33, "comesFrom", ["infile"], [2]], ["infile", 35, "comesFrom", ["infile"], [2]], ["infile", 39, "comesFrom", ["infile"], [2]], ["val", 15, "comesFrom", ["val"], [7]], ["val", 16, "comesFrom", ["val"], [7]], ["val", 28, "comesFrom", ["val"], [7]], ["c", 23, "comesFrom", ["c"], [9]], ["c", 24, "comesFrom", ["c"], [9]], ["c", 27, "comesFrom", ["c"], [9]], ["c", 37, "comesFrom", ["c"], [9]], ["c", 38, "comesFrom", ["c"], [9]], ["c", 41, "comesFrom", ["c"], [9]], ["q", 31, "comesFrom", ["q"], [30]], ["q", 34, "comesFrom", ["q"], [30]], ["q", 43, "comesFrom", ["q"], [30]], ["qty", 45, "comesFrom", ["qty"], [42]], ["qty", 47, "comesFrom", ["qty"], [42]], ["detected", 49, "comesFrom", ["detected"], [18]], ["num", 50, "comesFrom", ["num"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::582", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() \n{\n\tchar ch[100];\n\tscanf(\"%s\",ch);\n\tdouble a,b;\n\tscanf(\"%lf%lf\",&a,&b);\t\n\tprintf(\"TOTAL = R$ %.2lf\\n\",a+b*.15);\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ", "Ċ", "{", "Ċ", "ĉ", "char", "Ġch", "[", "100", "];", "Ċ", "ĉ", "scan", "f", "(\"", "%", "s", "\",", "ch", ");", "Ċ", "ĉ", "double", "Ġa", ",", "b", ";", "Ċ", "ĉ", "scan", "f", "(\"", "%", "lf", "%", "lf", "\",", "&", "a", ",", "&", "b", ");", "ĉ", "Ċ", "ĉ", "printf", "(\"", "T", "OTAL", "Ġ=", "ĠR", "$", "Ġ%", ".", "2", "lf", "\\", "n", "\",", "a", "+", "b", "*.", "15", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["a", 8, "comesFrom", ["a"], [5]], ["a", 11, "comesFrom", ["a"], [5]], ["b", 9, "comesFrom", ["b"], [6]], ["b", 12, "comesFrom", ["b"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::583", "code": "//**********************************************\n// This program demonstrates boolean variables.\n//\n// By: Jesus Hilario Hernandez\n// Last Updated: November 22, 2016\n//**********************************************\n#include <iostream>\nusing namespace std;\n\nint main()\n{\n    bool boolValue;\n\n    boolValue = true;\n    cout << boolValue << endl;\n    boolValue = false;\n    cout << boolValue << endl;\n    boolValue = 1;\n    cout << boolValue << endl;\n    boolValue = 0;\n    cout << boolValue << endl;\n    return 0;\n}\n", "code_tokens": ["Ġ//", "********************************", "************", "**", "Ċ", "//", "ĠThis", "Ġprogram", "Ġdemonstrates", "Ġboolean", "Ġvariables", ".", "Ċ", "//", "Ċ", "//", "ĠBy", ":", "ĠJesus", "ĠH", "ilar", "io", "ĠHernandez", "Ċ", "//", "ĠLast", "ĠUpdated", ":", "ĠNovember", "Ġ22", ",", "Ġ2016", "Ċ", "//", "********************************", "************", "**", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġbool", "Value", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbool", "Value", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġbool", "Value", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Value", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġbool", "Value", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Value", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġbool", "Value", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Value", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġbool", "Value", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["boolValue", 5, "comesFrom", ["boolValue"], [3]], ["boolValue", 9, "comesFrom", ["boolValue"], [7]], ["boolValue", 13, "comesFrom", ["boolValue"], [11]], ["boolValue", 17, "comesFrom", ["boolValue"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::584", "code": "#include \"Template.h\"\n#include \"FreeCameraController.h\"\n\nusing namespace ojgl;\n\nojstd::vector<Scene> Template::buildSceneGraph(const Vector2i& sceneSize) const\n{\n    ojstd::vector<Scene> scenes;\n    {\n        auto raymarch = Buffer::construct(sceneSize.x / 4, sceneSize.y / 4, \"common/quad.vs\", \"common/raymarch_template.fs\");\n        raymarch->setUniformCallback([]([[maybe_unused]] float relativeSceneTime) {\n            Buffer::UniformVector vector;\n            vector.push_back(ojstd::make_shared<UniformMatrix4fv>(\"iCameraMatrix\", FreeCameraController::instance().getCameraMatrix()));\n            return vector;\n        });\n\n        scenes.emplace_back(raymarch, Duration::seconds(9999), \"raymarchScene\");\n    }\n\n    return scenes;\n}\n\nojstd::string Template::getTitle() const\n{\n    return \"Template Demo\";\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Template", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Free", "Camera", "Controller", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġo", "j", "gl", ";", "Ċ", "Ċ", "oj", "std", "::", "vector", "<", "Scene", ">", "ĠTemplate", "::", "build", "Scene", "Graph", "(", "const", "ĠVector", "2", "i", "&", "Ġscene", "Size", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġo", "j", "std", "::", "vector", "<", "Scene", ">", "Ġscenes", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġray", "m", "arch", "Ġ=", "ĠBuffer", "::", "construct", "(", "scene", "Size", ".", "x", "Ġ/", "Ġ4", ",", "Ġscene", "Size", ".", "y", "Ġ/", "Ġ4", ",", "Ġ\"", "common", "/", "quad", ".", "vs", "\",", "Ġ\"", "common", "/", "ray", "m", "arch", "_", "template", ".", "fs", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġray", "m", "arch", "->", "set", "Un", "iform", "Callback", "([", "](", "[[", "maybe", "_", "un", "used", "]]", "Ġfloat", "Ġrelative", "Scene", "Time", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠBuffer", "::", "Un", "iform", "Vector", "Ġvector", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", ".", "push", "_", "back", "(", "oj", "std", "::", "make", "_", "shared", "<", "Un", "iform", "Matrix", "4", "f", "v", ">", "(\"", "i", "Camera", "Matrix", "\",", "ĠFree", "Camera", "Controller", "::", "instance", "().", "get", "Camera", "Matrix", "()", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġvector", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ});", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscenes", ".", "em", "place", "_", "back", "(", "ray", "m", "arch", ",", "ĠDuration", "::", "seconds", "(", "9999", "),", "Ġ\"", "ray", "m", "arch", "Scene", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġscenes", ";", "Ċ", "}", "Ċ", "Ċ", "oj", "std", "::", "string", "ĠTemplate", "::", "get", "Title", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ\"", "Template", "ĠDemo", "\";", "Ċ", "}", "Ċ"], "dataflow_graph": [["raymarch", 10, "comesFrom", ["raymarch"], [4]], ["raymarch", 23, "comesFrom", ["raymarch"], [4]], ["vector", 15, "comesFrom", ["vector"], [14]], ["vector", 20, "comesFrom", ["vector"], [14]], ["scenes", 21, "comesFrom", ["scenes"], [3]], ["scenes", 25, "comesFrom", ["scenes"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::585", "code": "#include <iostream>\n#include <seqan/sequence.h>  // CharString, ...\n#include <seqan/file.h>      // to stream a CharString into cout\n\ntypedef seqan::String<seqan::Dna> DnaString;\n\ntemplate <class A>\nint count1mers(typename seqan::String<A> str)\n{\n\tint alphabetsize = A.size();\n\tseqan::String<int> charcount;\n\tseqan::resize(charcount, , 0);\n\n\tfor(int i = 0; )\n\n\treturn 1;\n}\n\nint main(int, char **) {\n\tDnaString testseq = \"CAGTGTGAGCGATTACATACCATCGACTAG\";\n    std::cout << testseq << std::endl;\n\n    return 1;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "sequence", ".", "h", ">", "Ġ", "Ġ//", "ĠChar", "String", ",", "Ġ...", "Ċ", "#", "include", "Ġ<", "seq", "an", "/", "file", ".", "h", ">", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġto", "Ġstream", "Ġa", "ĠChar", "String", "Ġinto", "Ġcout", "Ċ", "Ċ", "ty", "ped", "ef", "Ġseq", "an", "::", "String", "<", "seq", "an", "::", "D", "na", ">", "ĠD", "na", "String", ";", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠA", ">", "Ċ", "int", "Ġcount", "1", "mers", "(", "ty", "pen", "ame", "Ġseq", "an", "::", "String", "<", "A", ">", "Ġstr", ")", "Ċ", "{", "Ċ", "ĉ", "int", "Ġal", "ph", "ab", "ets", "ize", "Ġ=", "ĠA", ".", "size", "();", "Ċ", "ĉ", "seq", "an", "::", "String", "<", "int", ">", "Ġchar", "count", ";", "Ċ", "ĉ", "seq", "an", "::", "res", "ize", "(", "ch", "arc", "ount", ",", "Ġ,", "Ġ0", ");", "ĊĊ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġ)", "ĊĊ", "ĉ", "return", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "Ġ**", ")", "Ġ{", "Ċ", "ĉ", "D", "na", "String", "Ġtest", "seq", "Ġ=", "Ġ\"", "C", "AG", "T", "GT", "G", "AG", "CG", "ATT", "AC", "AT", "ACC", "AT", "CG", "ACT", "AG", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġtest", "seq", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "}"], "dataflow_graph": [["charcount", 7, "comesFrom", ["charcount"], [5]], ["testseq", 12, "comesFrom", ["testseq"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::586", "code": "#include \"scripts.h\"\n#include \"runtime.h\"\n\nnamespace ee\n{\n\nextern \"C\" __declspec(dllexport) int luaopen_d2d(lua_State* L)\n{\n\tlua_newtable(L);\n\t// Preload module loaders.\n\tfor (int i = 0; modules[i].name != 0; i++)\n\t{\n\t\tluax_preload(L, modules[i].func, modules[i].name);\n\t}\n\treturn 1;\n}\n\nlua_State* scripts_create() \n{\n\tlua_State* L = luaL_newstate();\n\tluaL_openlibs(L);\n\n\tluax_preload(L, luaopen_d2d, \"d2d\");\n\tluaopen_d2d(L);\n\n\treturn L;\n}\n\nvoid scripts_release(lua_State* L)\n{\n\tlua_close(L);\n}\n\nvoid scripts_do_string(const char* str)\n{\n\tlua_State* L = scripts_create();\n\tluaL_dostring(L, str);\n\tscripts_release(L);\n}\n\nvoid scripts_do_file(const char* filename)\n{\n\tlua_State* L = scripts_create();\n\tluaL_dofile(L, filename);\n\tscripts_release(L);\n}\n\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "scripts", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "runtime", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġe", "e", "Ċ", "{", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġ__", "decl", "spec", "(", "dl", "lex", "port", ")", "Ġint", "Ġl", "ua", "open", "_", "d", "2", "d", "(", "lua", "_", "State", "*", "ĠL", ")", "Ċ", "{", "Ċ", "ĉ", "lua", "_", "new", "table", "(", "L", ");", "Ċ", "ĉ", "//", "ĠPre", "load", "Ġmodule", "Ġload", "ers", ".", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġmodules", "[", "i", "].", "name", "Ġ!=", "Ġ0", ";", "Ġi", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "lu", "ax", "_", "pre", "load", "(", "L", ",", "Ġmodules", "[", "i", "].", "func", ",", "Ġmodules", "[", "i", "].", "name", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ1", ";", "Ċ", "}", "Ċ", "Ċ", "lua", "_", "State", "*", "Ġscripts", "_", "create", "()", "Ġ", "Ċ", "{", "Ċ", "ĉ", "lua", "_", "State", "*", "ĠL", "Ġ=", "Ġl", "ua", "L", "_", "new", "state", "();", "Ċ", "ĉ", "lua", "L", "_", "open", "lib", "s", "(", "L", ");", "ĊĊ", "ĉ", "lu", "ax", "_", "pre", "load", "(", "L", ",", "Ġl", "ua", "open", "_", "d", "2", "d", ",", "Ġ\"", "d", "2", "d", "\");", "Ċ", "ĉ", "lua", "open", "_", "d", "2", "d", "(", "L", ");", "ĊĊ", "ĉ", "return", "ĠL", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġscripts", "_", "release", "(", "lua", "_", "State", "*", "ĠL", ")", "Ċ", "{", "Ċ", "ĉ", "lua", "_", "close", "(", "L", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġscripts", "_", "do", "_", "string", "(", "const", "Ġchar", "*", "Ġstr", ")", "Ċ", "{", "Ċ", "ĉ", "lua", "_", "State", "*", "ĠL", "Ġ=", "Ġscripts", "_", "create", "();", "Ċ", "ĉ", "lua", "L", "_", "d", "ost", "ring", "(", "L", ",", "Ġstr", ");", "Ċ", "ĉ", "scripts", "_", "release", "(", "L", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġscripts", "_", "do", "_", "file", "(", "const", "Ġchar", "*", "Ġfilename", ")", "Ċ", "{", "Ċ", "ĉ", "lua", "_", "State", "*", "ĠL", "Ġ=", "Ġscripts", "_", "create", "();", "Ċ", "ĉ", "lua", "L", "_", "d", "of", "ile", "(", "L", ",", "Ġfilename", ");", "Ċ", "ĉ", "scripts", "_", "release", "(", "L", ");", "Ċ", "}", "Ċ", "Ċ", "}"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [5]], ["i", 9, "comesFrom", ["i"], [5]], ["i", 13, "comesFrom", ["i"], [5]], ["i", 16, "comesFrom", ["i"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::587", "code": "#include <iostream>\n\nusing namespace std;\n\nint min(int a, int b, int c) {\n    if (a < b && a < c) {\n        return a;\n    }\n    else if (b < a && b < c) {\n        return b;\n    }\n    return c;\n}\n\nint max(int a, int b, int c) {\n    if (a > b && a > c) {\n        return a;\n    }\n    else if (b > a && b > c) {\n        return b;\n    }\n    return c;\n}\nint main() {\n    int broj1;\n    int broj2;\n    int broj3;\n    cout << \"Unesite molim prvi broj: \";\n    cin >> broj1;\n    cout << \"Unesite molim drugi broj: \";\n    cin >> broj3;\n    cout << \"Unesite molim treci broj: \";\n    cin >> broj2;\n    //poziv metoda\n    cout << \"min:\" << min(broj1, broj2, broj3) << endl;\n    cout << \"max:\" << max(broj1, broj2, broj3) << endl;\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmin", "(", "int", "Ġa", ",", "Ġint", "Ġb", ",", "Ġint", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "Ġ<", "Ġb", "Ġ&&", "Ġa", "Ġ<", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "b", "Ġ<", "Ġa", "Ġ&&", "Ġb", "Ġ<", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġc", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmax", "(", "int", "Ġa", ",", "Ġint", "Ġb", ",", "Ġint", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "Ġ>", "Ġb", "Ġ&&", "Ġa", "Ġ>", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "b", "Ġ>", "Ġa", "Ġ&&", "Ġb", "Ġ>", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġc", ";", "Ċ", "}", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġbro", "j", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġbro", "j", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġbro", "j", "3", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "U", "nes", "ite", "Ġmol", "im", "Ġpr", "vi", "Ġbro", "j", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġbro", "j", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "U", "nes", "ite", "Ġmol", "im", "Ġdrug", "i", "Ġbro", "j", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġbro", "j", "3", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "U", "nes", "ite", "Ġmol", "im", "Ġtre", "ci", "Ġbro", "j", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġbro", "j", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "po", "z", "iv", "Ġmet", "oda", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "min", ":\"", "Ġ<<", "Ġmin", "(", "bro", "j", "1", ",", "Ġbro", "j", "2", ",", "Ġbro", "j", "3", ")", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "max", ":\"", "Ġ<<", "Ġmax", "(", "bro", "j", "1", ",", "Ġbro", "j", "2", ",", "Ġbro", "j", "3", ")", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["a", 5, "comesFrom", ["a"], [2]], ["a", 7, "comesFrom", ["a"], [2]], ["a", 9, "comesFrom", ["a"], [2]], ["a", 11, "comesFrom", ["a"], [2]], ["a", 20, "comesFrom", ["a"], [17]], ["a", 22, "comesFrom", ["a"], [17]], ["a", 24, "comesFrom", ["a"], [17]], ["a", 26, "comesFrom", ["a"], [17]], ["b", 6, "comesFrom", ["b"], [3]], ["b", 10, "comesFrom", ["b"], [3]], ["b", 12, "comesFrom", ["b"], [3]], ["b", 14, "comesFrom", ["b"], [3]], ["b", 21, "comesFrom", ["b"], [18]], ["b", 25, "comesFrom", ["b"], [18]], ["b", 27, "comesFrom", ["b"], [18]], ["b", 29, "comesFrom", ["b"], [18]], ["c", 8, "comesFrom", ["c"], [4]], ["c", 13, "comesFrom", ["c"], [4]], ["c", 15, "comesFrom", ["c"], [4]], ["c", 23, "comesFrom", ["c"], [19]], ["c", 28, "comesFrom", ["c"], [19]], ["c", 30, "comesFrom", ["c"], [19]], ["broj1", 37, "comesFrom", ["broj1"], [32]], ["broj1", 46, "comesFrom", ["broj1"], [32]], ["broj1", 52, "comesFrom", ["broj1"], [32]], ["broj3", 40, "comesFrom", ["broj3"], [34]], ["broj3", 48, "comesFrom", ["broj3"], [34]], ["broj3", 54, "comesFrom", ["broj3"], [34]], ["broj2", 43, "comesFrom", ["broj2"], [33]], ["broj2", 47, "comesFrom", ["broj2"], [33]], ["broj2", 53, "comesFrom", ["broj2"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::588", "code": "////////////////////////////////////////////////////////////\n//\n// SFML - Simple and Fast Multimedia Library\n// Copyright (C) 2007-2014 Laurent Gomila (laurent.gom@gmail.com)\n//\n// This software is provided 'as-is', without any express or implied warranty.\n// In no event will the authors be held liable for any damages arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it freely,\n// subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented;\n//    you must not claim that you wrote the original software.\n//    If you use this software in a product, an acknowledgment\n//    in the product documentation would be appreciated but is not required.\n//\n// 2. Altered source versions must be plainly marked as such,\n//    and must not be misrepresented as being the original software.\n//\n// 3. This notice may not be removed or altered from any source distribution.\n//\n////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////\n// Headers\n////////////////////////////////////////////////////////////\n#include <cpp3ds/System/Sleep.hpp>\n#include <3ds.h>\n\nnamespace cpp3ds\n{\n////////////////////////////////////////////////////////////\nvoid sleep(Time duration)\n{\n    if (duration >= Time::Zero)\n\t\tsvcSleepThread(duration.asMicroseconds() * 1000);\n}\n\n} // namespace cpp3ds\n", "code_tokens": ["Ġ//", "////////////////////////////////", "////////////////", "////////", "//", "Ċ", "//", "Ċ", "//", "ĠSF", "ML", "Ġ-", "ĠSimple", "Ġand", "ĠFast", "ĠMult", "imedia", "ĠLibrary", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2007", "-", "2014", "ĠLaurent", "ĠG", "om", "ila", "Ġ(", "la", "ure", "nt", ".", "gom", "@", "gmail", ".", "com", ")", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġsoftware", "Ġis", "Ġprovided", "Ġ'", "as", "-", "is", "',", "Ġwithout", "Ġany", "Ġexpress", "Ġor", "Ġimplied", "Ġwarranty", ".", "Ċ", "//", "ĠIn", "Ġno", "Ġevent", "Ġwill", "Ġthe", "Ġauthors", "Ġbe", "Ġheld", "Ġliable", "Ġfor", "Ġany", "Ġdamages", "Ġarising", "Ġfrom", "Ġthe", "Ġuse", "Ġof", "Ġthis", "Ġsoftware", ".", "Ċ", "//", "Ċ", "//", "ĠPer", "mission", "Ġis", "Ġgranted", "Ġto", "Ġanyone", "Ġto", "Ġuse", "Ġthis", "Ġsoftware", "Ġfor", "Ġany", "Ġpurpose", ",", "Ċ", "//", "Ġincluding", "Ġcommercial", "Ġapplications", ",", "Ġand", "Ġto", "Ġalter", "Ġit", "Ġand", "Ġredist", "ribute", "Ġit", "Ġfreely", ",", "Ċ", "//", "Ġsubject", "Ġto", "Ġthe", "Ġfollowing", "Ġrestrictions", ":", "Ċ", "//", "Ċ", "//", "Ġ1", ".", "ĠThe", "Ġorigin", "Ġof", "Ġthis", "Ġsoftware", "Ġmust", "Ġnot", "Ġbe", "Ġmisrepresent", "ed", ";", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġyou", "Ġmust", "Ġnot", "Ġclaim", "Ġthat", "Ġyou", "Ġwrote", "Ġthe", "Ġoriginal", "Ġsoftware", ".", "Ċ", "//", "Ġ", "Ġ", "Ġ", "ĠIf", "Ġyou", "Ġuse", "Ġthis", "Ġsoftware", "Ġin", "Ġa", "Ġproduct", ",", "Ġan", "Ġacknowledgment", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġin", "Ġthe", "Ġproduct", "Ġdocumentation", "Ġwould", "Ġbe", "Ġappreciated", "Ġbut", "Ġis", "Ġnot", "Ġrequired", ".", "Ċ", "//", "Ċ", "//", "Ġ2", ".", "ĠAl", "tered", "Ġsource", "Ġversions", "Ġmust", "Ġbe", "Ġplainly", "Ġmarked", "Ġas", "Ġsuch", ",", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġand", "Ġmust", "Ġnot", "Ġbe", "Ġmisrepresent", "ed", "Ġas", "Ġbeing", "Ġthe", "Ġoriginal", "Ġsoftware", ".", "Ċ", "//", "Ċ", "//", "Ġ3", ".", "ĠThis", "Ġnotice", "Ġmay", "Ġnot", "Ġbe", "Ġremoved", "Ġor", "Ġaltered", "Ġfrom", "Ġany", "Ġsource", "Ġdistribution", ".", "Ċ", "//", "Ċ", "////////////////////////////////", "////////////////", "////////", "////", "Ċ", "Ċ", "////////////////////////////////", "////////////////", "////////", "////", "Ċ", "//", "ĠHead", "ers", "Ċ", "////////////////////////////////", "////////////////", "////////", "////", "Ċ", "#", "include", "Ġ<", "cpp", "3", "ds", "/", "System", "/", "Sleep", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "3", "ds", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "Ġc", "pp", "3", "ds", "Ċ", "{", "Ċ", "////////////////////////////////", "////////////////", "////////", "////", "Ċ", "void", "Ġsleep", "(", "Time", "Ġduration", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "duration", "Ġ>=", "ĠTime", "::", "Zero", ")", "Ċ", "ĉ", "ĉ", "sv", "c", "Sleep", "Thread", "(", "duration", ".", "as", "Micro", "seconds", "()", "Ġ*", "Ġ1000", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġc", "pp", "3", "ds", "Ċ"], "dataflow_graph": [["duration", 2, "comesFrom", ["duration"], [1]], ["duration", 5, "comesFrom", ["duration"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::589", "code": "#include \"core/migration/TranslationFunction.hpp\"\n\nGenomeTemplate TranslationFunction::translate(GenomeTemplate target) {\n\treturn GenomeTemplate(target.getGenes());\n}\n\nGenome* TranslationFunction::createTranslatedGenome(\n\tGenome* target,\n\tstd::string targetNode\n) {\n\treturn new Genome(this->translate(target->getTemplate()), targetNode);\n}\n\nbool TranslationFunction::isNull() {\n\treturn false;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "core", "/", "m", "igration", "/", "Translation", "Function", ".", "h", "pp", "\"", "Ċ", "Ċ", "Gen", "ome", "Template", "ĠTranslation", "Function", "::", "trans", "late", "(", "Gen", "ome", "Template", "Ġtarget", ")", "Ġ{", "Ċ", "ĉ", "return", "ĠGen", "ome", "Template", "(", "target", ".", "get", "Gen", "es", "());", "Ċ", "}", "Ċ", "Ċ", "Gen", "ome", "*", "ĠTranslation", "Function", "::", "create", "Trans", "lated", "Gen", "ome", "(", "Ċ", "ĉ", "Gen", "ome", "*", "Ġtarget", ",", "Ċ", "ĉ", "std", "::", "string", "Ġtarget", "Node", "Ċ", ")", "Ġ{", "Ċ", "ĉ", "return", "Ġnew", "ĠGen", "ome", "(", "this", "->", "trans", "late", "(", "target", "->", "get", "Template", "()", "),", "Ġtarget", "Node", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠTranslation", "Function", "::", "is", "Null", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġfalse", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["target", 3, "comesFrom", ["target"], [1]], ["target", 6, "comesFrom", ["target"], [1]], ["target", 9, "comesFrom", ["target"], [1]], ["targetNode", 11, "comesFrom", ["targetNode"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::590", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll= long long ;\n\nvoid solve() {\n    int n; cin >> n;\n    vector<ll> a(n);\n    for (auto& x: a) {\n        cin >> x;\n    }\n    ll res = 0;\n\n    // why work, imagine coordinate displace.\n    // so with cnt offset fixed, max -(n+1) equiv to each -(n+1) till to <n is fine.\n    while (*max_element(a.begin(), a.end()) >= n) {\n        ll cnt = 0;\n        for (auto& x: a) {\n            cnt += x/n;\n        }\n        res += cnt;\n        for (auto& x: a) {\n            x = (x%n) + cnt - (x/n);\n        }\n    }\n    cout << res;\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    solve();\n    cout << endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "using", "Ġll", "=", "Ġlong", "Ġlong", "Ġ;", "Ċ", "Ċ", "void", "Ġsolve", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ġc", "in", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "ll", ">", "Ġa", "(", "n", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "&", "Ġx", ":", "Ġa", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġll", "Ġres", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġwhy", "Ġwork", ",", "Ġimagine", "Ġcoordinate", "Ġdis", "place", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġso", "Ġwith", "Ġc", "nt", "Ġoffset", "Ġfixed", ",", "Ġmax", "Ġ-", "(", "n", "+", "1", ")", "Ġequ", "iv", "Ġto", "Ġeach", "Ġ-", "(", "n", "+", "1", ")", "Ġtill", "Ġto", "Ġ<", "n", "Ġis", "Ġfine", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(*", "max", "_", "element", "(", "a", ".", "begin", "(),", "Ġa", ".", "end", "())", "Ġ>=", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġll", "Ġc", "nt", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "&", "Ġx", ":", "Ġa", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "nt", "Ġ+=", "Ġx", "/", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġres", "Ġ+=", "Ġc", "nt", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "&", "Ġx", ":", "Ġa", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġ(", "x", "%", "n", ")", "Ġ+", "Ġc", "nt", "Ġ-", "Ġ(", "x", "/", "n", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġres", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġi", "os", "_", "base", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ".", "tie", "(", "NULL", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsolve", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [2]], ["n", 16, "comesFrom", ["n"], [2]], ["n", 22, "comesFrom", ["n"], [2]], ["n", 29, "comesFrom", ["n"], [2]], ["n", 32, "comesFrom", ["n"], [2]], ["x", 28, "comesFrom", ["x"], [27]], ["x", 31, "comesFrom", ["x"], [27]], ["cnt", 24, "comesFrom", ["cnt"], [20]], ["cnt", 30, "comesFrom", ["cnt"], [20]], ["res", 34, "comesFrom", ["res"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::591", "code": "#include \"optional.hpp\"\n#include <vector>\n#include <array>\nusing namespace how;\n\nnamespace\n{\n\tstruct no_default_constructor\n\t{\n\t\texplicit no_default_constructor(int)\n\t\t{\n\t\t}\n\n\t\tno_default_constructor(no_default_constructor const &) = delete;\n\t\tno_default_constructor &operator = (no_default_constructor const &) = delete;\n\t};\n\n\toptional<no_default_constructor> n;\n\tvoid h()\n\t{\n\t\tn.emplace(123);\n\t}\n\n\tstruct configuration\n\t{\n\t\t// -1 for not applicable\n\t\tint id_of_something;\n\n\t\toptional<int> better_id_of_something;\n\t};\n\n\toptional<int> sqrt(int);\n\n\t//none: 1,2,3\n\t//' ':  1, 2, 3\n\t//'\\n': 1,\\n2,\\n3\n\tvoid format_stuff(std::ostream &, std::vector<int> const &, optional<char> separator);\n\n\tvoid g(optional<std::string> const &)\n\t{\n\t}\n\n\tvoid f(bool b)\n\t{\n\t\toptional<std::string> i;\n\t\tif (b)\n\t\t{\n\t\t\ti = std::string(\"2\");\n\t\t}\n\t\tg(i);\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "optional", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "array", ">", "Ċ", "using", "Ġnamespace", "Ġhow", ";", "Ċ", "Ċ", "names", "pace", "Ċ", "{", "Ċ", "ĉ", "struct", "Ġno", "_", "default", "_", "construct", "or", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "expl", "icit", "Ġno", "_", "default", "_", "construct", "or", "(", "int", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "no", "_", "default", "_", "construct", "or", "(", "no", "_", "default", "_", "construct", "or", "Ġconst", "Ġ&", ")", "Ġ=", "Ġdelete", ";", "Ċ", "ĉ", "ĉ", "no", "_", "default", "_", "construct", "or", "Ġ&", "operator", "Ġ=", "Ġ(", "no", "_", "default", "_", "construct", "or", "Ġconst", "Ġ&", ")", "Ġ=", "Ġdelete", ";", "Ċ", "ĉ", "};", "ĊĊ", "ĉ", "optional", "<", "no", "_", "default", "_", "construct", "or", ">", "Ġn", ";", "Ċ", "ĉ", "void", "Ġh", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "n", ".", "em", "place", "(", "123", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "struct", "Ġconfiguration", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "Ġ-", "1", "Ġfor", "Ġnot", "Ġapplicable", "Ċ", "ĉ", "ĉ", "int", "Ġid", "_", "of", "_", "something", ";", "ĊĊ", "ĉ", "ĉ", "optional", "<", "int", ">", "Ġbetter", "_", "id", "_", "of", "_", "something", ";", "Ċ", "ĉ", "};", "ĊĊ", "ĉ", "optional", "<", "int", ">", "Ġsq", "rt", "(", "int", ");", "ĊĊ", "ĉ", "//", "none", ":", "Ġ1", ",", "2", ",", "3", "Ċ", "ĉ", "//", "'", "Ġ'", ":", "Ġ", "Ġ1", ",", "Ġ2", ",", "Ġ3", "Ċ", "ĉ", "//", "'", "\\", "n", "':", "Ġ1", ",", "\\", "n", "2", ",", "\\", "n", "3", "Ċ", "ĉ", "void", "Ġformat", "_", "stuff", "(", "std", "::", "ost", "ream", "Ġ&", ",", "Ġstd", "::", "vector", "<", "int", ">", "Ġconst", "Ġ&", ",", "Ġoptional", "<", "char", ">", "Ġsepar", "ator", ");", "ĊĊ", "ĉ", "void", "Ġg", "(", "optional", "<", "std", "::", "string", ">", "Ġconst", "Ġ&", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "Ġf", "(", "bool", "Ġb", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "optional", "<", "std", "::", "string", ">", "Ġi", ";", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "b", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "i", "Ġ=", "Ġstd", "::", "string", "(\"", "2", "\");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "g", "(", "i", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [3]], ["b", 16, "comesFrom", ["b"], [14]], ["i", 20, "comesFrom", ["i"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::592", "code": "#if (ARDUINO >= 100)\n#include <Arduino.h>\n#else\n#include\n#endif\n\nextern unsigned int __heap_start;\nextern void *__brkval;\n\n/*\n * The free list structure as maintained by the\n * avr-libc memory allocation routines.\n */\nstruct __freelist {\n  size_t sz;\n  struct __freelist *nx;\n};\n\n/* The head of the free list structure */\nextern struct __freelist *__flp;\n\n#include \"memfree.h\";\n\n/* Calculates the size of the free list */\nint freeListSize() {\n  struct __freelist* current;\n  int total = 0;\n\n  for (current = __flp; current; current = current->nx) {\n    total += 2; /* Add two bytes for the memory block's header  */\n    total += (int) current->sz;\n  }\n\n  return total;\n}\n\nint freeMemory() {\n  int free_memory;\n\n  if ((int)__brkval == 0) {\n    free_memory = ((int)&free_memory) - ((int)&__heap_start);\n  } else {\n    free_memory = ((int)&free_memory) - ((int)__brkval);\n    free_memory += freeListSize();\n  }\n  return free_memory;\n}\n", "code_tokens": ["Ġ#", "if", "Ġ(", "ARD", "U", "INO", "Ġ>=", "Ġ100", ")", "Ċ", "#", "include", "Ġ<", "Ar", "duino", ".", "h", ">", "Ċ", "#", "else", "Ċ", "#", "include", "Ċ", "#", "endif", "Ċ", "Ċ", "ex", "tern", "Ġunsigned", "Ġint", "Ġ__", "he", "ap", "_", "start", ";", "Ċ", "ex", "tern", "Ġvoid", "Ġ*", "__", "br", "k", "val", ";", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠThe", "Ġfree", "Ġlist", "Ġstructure", "Ġas", "Ġmaintained", "Ġby", "Ġthe", "Ċ", "Ġ*", "Ġav", "r", "-", "lib", "c", "Ġmemory", "Ġallocation", "Ġroutines", ".", "Ċ", "Ġ*/", "Ċ", "struct", "Ġ__", "fre", "elist", "Ġ{", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġs", "z", ";", "Ċ", "Ġ", "Ġstruct", "Ġ__", "fre", "elist", "Ġ*", "n", "x", ";", "Ċ", "};", "Ċ", "Ċ", "/*", "ĠThe", "Ġhead", "Ġof", "Ġthe", "Ġfree", "Ġlist", "Ġstructure", "Ġ*/", "Ċ", "ex", "tern", "Ġstruct", "Ġ__", "fre", "elist", "Ġ*", "__", "fl", "p", ";", "Ċ", "Ċ", "#", "include", "Ġ\"", "mem", "free", ".", "h", "\";", "Ċ", "Ċ", "/*", "ĠCalcul", "ates", "Ġthe", "Ġsize", "Ġof", "Ġthe", "Ġfree", "Ġlist", "Ġ*/", "Ċ", "int", "Ġfree", "List", "Size", "()", "Ġ{", "Ċ", "Ġ", "Ġstruct", "Ġ__", "fre", "elist", "*", "Ġcurrent", ";", "Ċ", "Ġ", "Ġint", "Ġtotal", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "current", "Ġ=", "Ġ__", "fl", "p", ";", "Ġcurrent", ";", "Ġcurrent", "Ġ=", "Ġcurrent", "->", "n", "x", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtotal", "Ġ+=", "Ġ2", ";", "Ġ/*", "ĠAdd", "Ġtwo", "Ġbytes", "Ġfor", "Ġthe", "Ġmemory", "Ġblock", "'s", "Ġheader", "Ġ", "Ġ*/", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtotal", "Ġ+=", "Ġ(", "int", ")", "Ġcurrent", "->", "s", "z", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġtotal", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġfree", "Memory", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġfree", "_", "memory", ";", "ĊĊ", "Ġ", "Ġif", "Ġ((", "int", ")", "__", "br", "k", "val", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfree", "_", "memory", "Ġ=", "Ġ((", "int", ")", "&", "free", "_", "memory", ")", "Ġ-", "Ġ((", "int", ")", "&", "__", "he", "ap", "_", "start", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfree", "_", "memory", "Ġ=", "Ġ((", "int", ")", "&", "free", "_", "memory", ")", "Ġ-", "Ġ((", "int", ")", "__", "br", "k", "val", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfree", "_", "memory", "Ġ+=", "Ġfree", "List", "Size", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġfree", "_", "memory", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["current", 11, "comesFrom", ["current"], [9]], ["current", 13, "comesFrom", ["current"], [12]], ["current", 17, "comesFrom", ["current"], [12]], ["total", 19, "comesFrom", ["total"], [16]], ["free_memory", 24, "comesFrom", ["free_memory"], [23]], ["free_memory", 27, "comesFrom", ["free_memory"], [26]], ["free_memory", 31, "comesFrom", ["free_memory"], [29]], ["__heap_start", 25, "comesFrom", ["__heap_start"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::593", "code": "#include<iostream>\nint main(int a,int b){\n            if((std::cin>>a)&&(std::cin>>b))\n                if(std::cout<<a+b<<\"\\n\"){}\n}\n", "code_tokens": ["Ġ#", "include", "<", "i", "ost", "ream", ">", "Ċ", "int", "Ġmain", "(", "int", "Ġa", ",", "int", "Ġb", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "((", "std", "::", "cin", ">>", "a", ")", "&&", "(", "std", "::", "cin", ">>", "b", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "std", "::", "c", "out", "<<", "a", "+", "b", "<<", "\"", "\\", "n", "\")", "{", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 4, "comesFrom", ["a"], [1]], ["a", 8, "comesFrom", ["a"], [1]], ["b", 6, "comesFrom", ["b"], [2]], ["b", 9, "comesFrom", ["b"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::594", "code": "#include \"mpi_cascade.hpp\"\n#include \"iostream\"\n\nCMPICascade::CMPICascade(int nodes_per_level, MPI_Comm comm)\n{\n\tint remaining_levels;\n\tMPI_Comm intraComm;\n\tint l = 0; // current level\n\tdo {\n\t\tlevel.push_back(comm);\n\t\tremaining_levels = ilog(nodes_per_level /*base*/, level[l].size /*arg*/) + 1;\n\t\tlevel[l].group_size = iroot(remaining_levels, level[l].size); // group_size^remaining_levels <= size\n\t\tlevel[l].p_grp_size = level[l].size/level[l].group_size;\n\t\n\t\tMPI_Comm_split(comm, level[l].colour(), level[l].key(), &intraComm);\n\t\tMPI_Comm_split(comm, level[l].p_colour(), level[l].p_key(), &(level[l].pg_comm));\n\t\tcomm = intraComm;\n\t\tl++;\n\t} while (--remaining_levels);\n\tnum_levels = l;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "mp", "i", "_", "c", "ascade", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "i", "ost", "ream", "\"", "Ċ", "Ċ", "C", "MP", "IC", "ascade", "::", "C", "MP", "IC", "ascade", "(", "int", "Ġnodes", "_", "per", "_", "level", ",", "ĠMP", "I", "_", "Comm", "Ġcomm", ")", "Ċ", "{", "Ċ", "ĉ", "int", "Ġremaining", "_", "levels", ";", "Ċ", "ĉ", "MP", "I", "_", "Comm", "Ġintra", "Comm", ";", "Ċ", "ĉ", "int", "Ġl", "Ġ=", "Ġ0", ";", "Ġ//", "Ġcurrent", "Ġlevel", "Ċ", "ĉ", "do", "Ġ{", "Ċ", "ĉ", "ĉ", "level", ".", "push", "_", "back", "(", "comm", ");", "Ċ", "ĉ", "ĉ", "rem", "aining", "_", "levels", "Ġ=", "Ġil", "og", "(", "n", "odes", "_", "per", "_", "level", "Ġ/*", "base", "*/", ",", "Ġlevel", "[", "l", "].", "size", "Ġ/*", "arg", "*/", ")", "Ġ+", "Ġ1", ";", "Ċ", "ĉ", "ĉ", "level", "[", "l", "].", "group", "_", "size", "Ġ=", "Ġi", "root", "(", "rem", "aining", "_", "levels", ",", "Ġlevel", "[", "l", "].", "size", ");", "Ġ//", "Ġgroup", "_", "size", "^", "rem", "aining", "_", "levels", "Ġ<=", "Ġsize", "Ċ", "ĉ", "ĉ", "level", "[", "l", "].", "p", "_", "gr", "p", "_", "size", "Ġ=", "Ġlevel", "[", "l", "].", "size", "/", "level", "[", "l", "].", "group", "_", "size", ";", "Ċ", "ĉ", "Ċ", "ĉ", "ĉ", "MP", "I", "_", "Comm", "_", "split", "(", "comm", ",", "Ġlevel", "[", "l", "].", "colour", "(),", "Ġlevel", "[", "l", "].", "key", "(),", "Ġ&", "int", "ra", "Comm", ");", "Ċ", "ĉ", "ĉ", "MP", "I", "_", "Comm", "_", "split", "(", "comm", ",", "Ġlevel", "[", "l", "].", "p", "_", "colour", "(),", "Ġlevel", "[", "l", "].", "p", "_", "key", "(),", "Ġ&", "(", "level", "[", "l", "].", "pg", "_", "comm", "));", "Ċ", "ĉ", "ĉ", "comm", "Ġ=", "Ġintra", "Comm", ";", "Ċ", "ĉ", "ĉ", "l", "++;", "Ċ", "ĉ", "}", "Ġwhile", "Ġ(", "--", "rem", "aining", "_", "levels", ");", "Ċ", "ĉ", "num", "_", "levels", "Ġ=", "Ġl", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["comm", 8, "comesFrom", ["comm"], [2]], ["comm", 33, "comesFrom", ["comm"], [2]], ["comm", 42, "comesFrom", ["comm"], [2]], ["nodes_per_level", 11, "comesFrom", ["nodes_per_level"], [1]], ["l", 13, "comesFrom", ["l"], [5]], ["l", 16, "comesFrom", ["l"], [5]], ["l", 21, "comesFrom", ["l"], [5]], ["l", 24, "comesFrom", ["l"], [5]], ["l", 27, "comesFrom", ["l"], [5]], ["l", 30, "comesFrom", ["l"], [5]], ["l", 35, "comesFrom", ["l"], [5]], ["l", 38, "comesFrom", ["l"], [5]], ["l", 44, "comesFrom", ["l"], [5]], ["l", 47, "comesFrom", ["l"], [5]], ["l", 50, "comesFrom", ["l"], [5]], ["l", 54, "comesFrom", ["l"], [5]], ["l", 57, "comesFrom", ["l"], [5]], ["remaining_levels", 19, "comesFrom", ["remaining_levels"], [9]], ["remaining_levels", 55, "comesFrom", ["remaining_levels"], [9]], ["intraComm", 40, "comesFrom", ["intraComm"], [4]], ["intraComm", 53, "comesFrom", ["intraComm"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::595", "code": "// Copyright (C) 2013-2016 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n//\n// { dg-do run { target c++11 xfail *-*-* } }\n// { dg-require-debug-mode \"\" }\n// { dg-options \"-D_GLIBCXX_DEBUG_PEDANTIC\" }\n\n#include <forward_list>\n#include <iterator>\n\nvoid test01()\n{\n  std::forward_list<int> fl{ 1, 2, 3 };\n  fl.insert_after(fl.before_begin(), fl.begin(), std::next(fl.begin(), 2));\n}\n\nint main()\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2013", "-", "2016", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "//", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ{", "Ġtarget", "Ġc", "++", "11", "Ġx", "fail", "Ġ*", "-", "*", "-", "*", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "debug", "-", "mode", "Ġ\"\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "D", "_", "GL", "I", "BC", "XX", "_", "DEBUG", "_", "P", "ED", "ANT", "IC", "\"", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "forward", "_", "list", ">", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "forward", "_", "list", "<", "int", ">", "Ġfl", "{", "Ġ1", ",", "Ġ2", ",", "Ġ3", "Ġ};", "Ċ", "Ġ", "Ġfl", ".", "insert", "_", "after", "(", "fl", ".", "before", "_", "begin", "(),", "Ġfl", ".", "begin", "(),", "Ġstd", "::", "next", "(", "fl", ".", "begin", "(),", "Ġ2", "));", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["fl", 2, "comesFrom", ["fl"], [1]], ["fl", 4, "comesFrom", ["fl"], [1]], ["fl", 6, "comesFrom", ["fl"], [1]], ["fl", 9, "comesFrom", ["fl"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::596", "code": "#include <cstdio>  \n#include <cstring>  \n#include <algorithm>  \n\nusing namespace std;\n\nint dp[25][4];\nint a[25][4];\nint n, t;\n\nint main(void)\n{\n\t\n\twhile (scanf(\"%d\", &t) != EOF)\n\t{\n\t\tfor (int k = 1; k <= t; k++)\n\t\t{\n\t\t\tscanf(\"%d\", &n);\n\t\t\tmemset(a, 0, sizeof(a));\n\t\t\tmemset(dp, 0, sizeof(dp));\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t{\n\t\t\t\tfor (int j = 1; j <= 3; j++)\n\t\t\t\t\tscanf(\"%d\", &a[i][j]);\n\t\t\t}\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t{\n\t\t\t\tfor (int j = 3; j < 6; j++)\n\t\t\t\t{\n\t\t\t\t\tdp[i][j % 3 + 1] = a[i][j % 3 + 1] + min(dp[i - 1][(j - 1) % 3 + 1], dp[i - 1][(j + 1) % 3 + 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"Case %d: %d\\n\", k, min(dp[n][1], min(dp[n][2], dp[n][3])));\n\t\t}\n\t}\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ġ", "Ġ", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ġ", "Ġ", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ġ", "Ġ", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġd", "p", "[", "25", "][", "4", "];", "Ċ", "int", "Ġa", "[", "25", "][", "4", "];", "Ċ", "int", "Ġn", ",", "Ġt", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "ĉ", "Ċ", "ĉ", "while", "Ġ(", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "t", ")", "Ġ!=", "ĠE", "OF", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġk", "Ġ=", "Ġ1", ";", "Ġk", "Ġ<=", "Ġt", ";", "Ġk", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "Ċ", "ĉ", "ĉ", "ĉ", "mem", "set", "(", "a", ",", "Ġ0", ",", "Ġsizeof", "(", "a", "));", "Ċ", "ĉ", "ĉ", "ĉ", "mem", "set", "(", "dp", ",", "Ġ0", ",", "Ġsizeof", "(", "dp", "));", "Ċ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ1", ";", "Ġj", "Ġ<=", "Ġ3", ";", "Ġj", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "a", "[", "i", "][", "j", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ3", ";", "Ġj", "Ġ<", "Ġ6", ";", "Ġj", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "dp", "[", "i", "][", "j", "Ġ%", "Ġ3", "Ġ+", "Ġ1", "]", "Ġ=", "Ġa", "[", "i", "][", "j", "Ġ%", "Ġ3", "Ġ+", "Ġ1", "]", "Ġ+", "Ġmin", "(", "dp", "[", "i", "Ġ-", "Ġ1", "][", "(", "j", "Ġ-", "Ġ1", ")", "Ġ%", "Ġ3", "Ġ+", "Ġ1", "],", "Ġd", "p", "[", "i", "Ġ-", "Ġ1", "][", "(", "j", "Ġ+", "Ġ1", ")", "Ġ%", "Ġ3", "Ġ+", "Ġ1", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "Case", "Ġ%", "d", ":", "Ġ%", "d", "\\", "n", "\",", "Ġk", ",", "Ġmin", "(", "dp", "[", "n", "][", "1", "],", "Ġmin", "(", "dp", "[", "n", "][", "2", "],", "Ġd", "p", "[", "n", "][", "3", "]", "))", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["t", 7, "comesFrom", ["t"], [4]], ["t", 11, "comesFrom", ["t"], [4]], ["k", 10, "comesFrom", ["k"], [9]], ["k", 12, "comesFrom", ["k"], [9]], ["k", 53, "comesFrom", ["k"], [9]], ["n", 14, "comesFrom", ["n"], [3]], ["n", 23, "comesFrom", ["n"], [3]], ["n", 34, "comesFrom", ["n"], [3]], ["n", 56, "comesFrom", ["n"], [3]], ["n", 59, "comesFrom", ["n"], [3]], ["n", 61, "comesFrom", ["n"], [3]], ["i", 22, "comesFrom", ["i"], [21]], ["i", 24, "comesFrom", ["i"], [21]], ["i", 30, "comesFrom", ["i"], [21]], ["i", 33, "comesFrom", ["i"], [32]], ["i", 35, "comesFrom", ["i"], [32]], ["i", 40, "comesFrom", ["i"], [32]], ["i", 43, "comesFrom", ["i"], [32]], ["i", 47, "comesFrom", ["i"], [32]], ["i", 50, "comesFrom", ["i"], [32]], ["j", 26, "comesFrom", ["j"], [25]], ["j", 27, "comesFrom", ["j"], [25]], ["j", 31, "comesFrom", ["j"], [25]], ["j", 37, "comesFrom", ["j"], [36]], ["j", 38, "comesFrom", ["j"], [36]], ["j", 41, "comesFrom", ["j"], [36]], ["j", 44, "comesFrom", ["j"], [36]], ["j", 48, "comesFrom", ["j"], [36]], ["j", 51, "comesFrom", ["j"], [36]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::597", "code": "#include \"stdafx.h\"\r\n#include \"PollEngine.h\"\r\n\r\nvoid PollEngine::setVector(std::vector<char*>* vector_)\r\n{\r\n\tthis->vector = vector;\r\n}\r\n\r\nstd::vector<char*>* PollEngine::getVector()\r\n{\r\n\treturn this->vector;\r\n}\r\n\r\nvoid PollEngine::sendRequests(PollEngine *that)\r\n{\r\n\twhile (1) {\r\n\t\tfor (int i = 0; i < that->vector->size(); i++) {\r\n\t\t\tchar *request = new char[12];\r\n\t\t\tTCPDriver::getInstance().createRequest(that->vector->at(i), request);\r\n\r\n\t\t\tTCPDriver::getInstance().sendRequest(request);\r\n\r\n\r\n\t\t}\r\n\t\tSleep(2000);\r\n\t}\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Poll", "Engine", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "void", "ĠPoll", "Engine", "::", "set", "Vector", "(", "std", "::", "vector", "<", "char", "*", ">", "*", "Ġvector", "_", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "this", "->", "vector", "Ġ=", "Ġvector", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "std", "::", "vector", "<", "char", "*", ">", "*", "ĠPoll", "Engine", "::", "get", "Vector", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġthis", "->", "vector", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠPoll", "Engine", "::", "send", "Requ", "ests", "(", "Poll", "Engine", "Ġ*", "that", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "while", "Ġ(", "1", ")", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġthat", "->", "vector", "->", "size", "();", "Ġi", "++)", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "char", "Ġ*", "request", "Ġ=", "Ġnew", "Ġchar", "[", "12", "];", "č", "Ċ", "ĉ", "ĉ", "ĉ", "TC", "PD", "river", "::", "get", "Instance", "().", "create", "Request", "(", "that", "->", "vector", "->", "at", "(", "i", "),", "Ġrequest", ");", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "ĉ", "TC", "PD", "river", "::", "get", "Instance", "().", "send", "Request", "(", "request", ");", "č", "Ċ", "č", "Ċ", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "Sleep", "(", "2000", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["i", 9, "comesFrom", ["i"], [8]], ["i", 13, "comesFrom", ["i"], [8]], ["i", 20, "comesFrom", ["i"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::598", "code": "//\n//  checkCamera.cpp\n//  UnprotectedLeftTurn\n//\n//  Created by SonHojun on 12/4/15.\n//  Copyright © 2015 SonHojun. All rights reserved.\n//\n#include \"MetaHeader.h\"\n\n\nint main()\n{\n    Mat img1, img2, gray1, gray2;\n    VideoCapture cap1 = VideoCapture(0);\n    VideoCapture cap2 = VideoCapture(2);\n    int success = 0, k = 0;\n    bool found1 = false, found2 = false;\n    \n    while(1)\n    {\n        cap1 >> img1;\n        cap2 >> img2;\n        \n        imshow(\"camera1\", img1);\n        imshow(\"camera2\", img2);\n    }\n    \n    return 0;\n}", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġcheck", "Camera", ".", "cpp", "Ċ", "//", "Ġ", "ĠUn", "protected", "Left", "Turn", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠSon", "H", "oj", "un", "Ġon", "Ġ12", "/", "4", "/", "15", ".", "Ċ", "//", "Ġ", "ĠCopyright", "ĠÂ©", "Ġ2015", "ĠSon", "H", "oj", "un", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "#", "include", "Ġ\"", "Meta", "Header", ".", "h", "\"", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMat", "Ġimg", "1", ",", "Ġimg", "2", ",", "Ġgray", "1", ",", "Ġgray", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVideo", "Capture", "Ġcap", "1", "Ġ=", "ĠVideo", "Capture", "(", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVideo", "Capture", "Ġcap", "2", "Ġ=", "ĠVideo", "Capture", "(", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsuccess", "Ġ=", "Ġ0", ",", "Ġk", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġfound", "1", "Ġ=", "Ġfalse", ",", "Ġfound", "2", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcap", "1", "Ġ>>", "Ġimg", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcap", "2", "Ġ>>", "Ġimg", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġim", "show", "(\"", "camera", "1", "\",", "Ġimg", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġim", "show", "(\"", "camera", "2", "\",", "Ġimg", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["cap1", 13, "comesFrom", ["cap1"], [5]], ["img1", 14, "comesFrom", ["img1"], [1]], ["img1", 18, "comesFrom", ["img1"], [1]], ["cap2", 15, "comesFrom", ["cap2"], [7]], ["img2", 16, "comesFrom", ["img2"], [2]], ["img2", 20, "comesFrom", ["img2"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::599", "code": "/*\n * Open-source multi-Physics Phenomena Analyzer (OP2A) ver. 0.1\n *\n * \t\tCopyright (c) 2015 MINKWAN KIM\n *\n * \tInitial Developed Date: Jun 22, 2015\n *      \t\t\tAuthor: Minkwan Kim\n *\n * VariableFaceData1D.cpp\n * \t\t\t-  \n *  \n */\n\n\n\n\n#include \"CFD/include/Variables.hpp\"\n\n\nnamespace OP2A{\nnamespace CFD{\n\n\nvoid FaceData1D::InitializeData(Data::DataStorageVector<Data::DataStorage>& face1D, CHEM::SpeciesSet& species_set, int ND, unsigned int variabletype, unsigned int CFD_NT, bool viscous)\n{\n\tint indexVar;\n\n\tindexVar = face1D.dataMap.find(NAME_FINV);\n#pragma omp parallel for num_threads(CFD_NT)\n\tfor (int i = 0; i <= face1D(indexVar).numData-1; i++)\n\t\tface1D(indexVar).data[i]\t= 0.0;\n\n\n\tif (viscous == true)\n\t{\n\t\tindexVar = face1D.dataMap.find(NAME_FVIS);\n#pragma omp parallel for num_threads(CFD_NT)\n\t\tfor (int i = 0; i <= face1D(indexVar).numData-1; i++)\n\t\t\tface1D(indexVar).data[i]\t= 0.0;\n\t}\n}\n\n\n\n\n\n\n\n}\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠOpen", "-", "source", "Ġmulti", "-", "Ph", "ysics", "ĠPhen", "omen", "a", "ĠAnaly", "zer", "Ġ(", "OP", "2", "A", ")", "Ġver", ".", "Ġ0", ".", "1", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĉ", "ĉ", "Copyright", "Ġ(", "c", ")", "Ġ2015", "ĠM", "INK", "W", "AN", "ĠK", "IM", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĉ", "Initial", "ĠDevelop", "ed", "ĠDate", ":", "ĠJun", "Ġ22", ",", "Ġ2015", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "ĉ", "Author", ":", "ĠM", "ink", "wan", "ĠKim", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠVariable", "Face", "Data", "1", "D", ".", "cpp", "Ċ", "Ġ*", "Ġ", "ĉ", "ĉ", "ĉ", "-", "Ġ", "Ġ", "Ċ", "Ġ*", "Ġ", "Ġ", "Ċ", "Ġ*/", "ĊĊ", "ĊĊ", "Ċ", "#", "include", "Ġ\"", "CF", "D", "/", "include", "/", "Vari", "ables", ".", "h", "pp", "\"", "ĊĊ", "Ċ", "names", "pace", "ĠOP", "2", "A", "{", "Ċ", "names", "pace", "ĠCF", "D", "{", "ĊĊ", "Ċ", "void", "ĠFace", "Data", "1", "D", "::", "Initial", "ize", "Data", "(", "Data", "::", "Data", "Storage", "Vector", "<", "Data", "::", "Data", "Storage", ">", "&", "Ġface", "1", "D", ",", "ĠCH", "EM", "::", "Spe", "cies", "Set", "&", "Ġspecies", "_", "set", ",", "Ġint", "ĠND", ",", "Ġunsigned", "Ġint", "Ġvariable", "type", ",", "Ġunsigned", "Ġint", "ĠCF", "D", "_", "NT", ",", "Ġbool", "Ġvisc", "ous", ")", "Ċ", "{", "Ċ", "ĉ", "int", "Ġindex", "Var", ";", "ĊĊ", "ĉ", "index", "Var", "Ġ=", "Ġface", "1", "D", ".", "data", "Map", ".", "find", "(", "NAME", "_", "FIN", "V", ");", "Ċ", "#", "pr", "ag", "ma", "Ġo", "mp", "Ġparallel", "Ġfor", "Ġnum", "_", "thread", "s", "(", "CF", "D", "_", "NT", ")", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġface", "1", "D", "(", "index", "Var", ").", "num", "Data", "-", "1", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "face", "1", "D", "(", "index", "Var", ").", "data", "[", "i", "]", "ĉ", "=", "Ġ0", ".", "0", ";", "ĊĊ", "Ċ", "ĉ", "if", "Ġ(", "v", "isc", "ous", "Ġ==", "Ġtrue", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "index", "Var", "Ġ=", "Ġface", "1", "D", ".", "data", "Map", ".", "find", "(", "NAME", "_", "F", "VIS", ");", "Ċ", "#", "pr", "ag", "ma", "Ġo", "mp", "Ġparallel", "Ġfor", "Ġnum", "_", "thread", "s", "(", "CF", "D", "_", "NT", ")", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġface", "1", "D", "(", "index", "Var", ").", "num", "Data", "-", "1", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "face", "1", "D", "(", "index", "Var", ").", "data", "[", "i", "]", "ĉ", "=", "Ġ0", ".", "0", ";", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ", "ĊĊ", "ĊĊ", "Ċ", "Ċ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 14, "comesFrom", ["i"], [13]], ["i", 18, "comesFrom", ["i"], [13]], ["i", 22, "comesFrom", ["i"], [13]], ["i", 30, "comesFrom", ["i"], [29]], ["i", 34, "comesFrom", ["i"], [29]], ["i", 38, "comesFrom", ["i"], [29]], ["indexVar", 16, "comesFrom", ["indexVar"], [8]], ["indexVar", 20, "comesFrom", ["indexVar"], [8]], ["indexVar", 32, "comesFrom", ["indexVar"], [24]], ["indexVar", 36, "comesFrom", ["indexVar"], [24]], ["viscous", 23, "comesFrom", ["viscous"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::600", "code": "#ifndef BACKGROUNDLAYER_HPP\n#define\tBACKGROUNDLAYER_HPP\n\n#include \"../engine/GMEngine.hpp\"\n\nclass backgroundLayer : public gme::GameObject{\npublic:\n    backgroundLayer(std::string n) : gme::GameObject(n){\n        texture = \"\";\n    };\n    void setup();\n    float parallaxFactor;\n    std::string texture;\nprivate:\n\n};\n\n#endif\t/* BACKGROUNDLAYER_HPP */\n\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠBACK", "GROUND", "L", "AY", "ER", "_", "H", "PP", "Ċ", "#", "define", "ĉ", "BACK", "GROUND", "L", "AY", "ER", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "engine", "/", "GM", "Engine", ".", "h", "pp", "\"", "Ċ", "Ċ", "class", "Ġbackground", "Layer", "Ġ:", "Ġpublic", "Ġg", "me", "::", "Game", "Object", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbackground", "Layer", "(", "std", "::", "string", "Ġn", ")", "Ġ:", "Ġg", "me", "::", "Game", "Object", "(", "n", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtexture", "Ġ=", "Ġ\"", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġsetup", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġpar", "all", "ax", "Factor", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġtexture", ";", "Ċ", "private", ":", "Ċ", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "ĉ", "/*", "ĠBACK", "GROUND", "L", "AY", "ER", "_", "H", "PP", "Ġ*/", "ĊĊ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [3]], ["texture", 9, "comesFrom", ["texture"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::601", "code": "#include <iostream>\n#include \"Mat/Mat.h\"\n\nusing namespace std;\n\nint main(int argc, char* argv[])\n{\n\tMat<float> A(10.0f,100,100);\n\tMat<float> B(100,100,(char)1);\n\t\n\tclock_t timer = clock();\n\tfor(int i=10;i--;)\n\t{\n\t\tA*=B;\n\t}\n\t\n\tcout << (float)(clock()-timer)/CLOCKS_PER_SEC << \" seconds.\" << endl;\n\t\n\t\n};\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ\"", "Mat", "/", "Mat", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "Mat", "<", "float", ">", "ĠA", "(", "10", ".", "0", "f", ",", "100", ",", "100", ");", "Ċ", "ĉ", "Mat", "<", "float", ">", "ĠB", "(", "100", ",", "100", ",", "(", "char", ")", "1", ");", "Ċ", "ĉ", "Ċ", "ĉ", "clock", "_", "t", "Ġtimer", "Ġ=", "Ġclock", "();", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "10", ";", "i", "--", ";", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "A", "*", "=", "B", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ(", "float", ")(", "clock", "()", "-", "timer", ")/", "CL", "OCK", "S", "_", "PER", "_", "SEC", "Ġ<<", "Ġ\"", "Ġseconds", ".\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "Ċ", "ĉ", "Ċ", "};", "Ċ"], "dataflow_graph": [["i", 9, "comesFrom", ["i"], [8]], ["B", 11, "comesFrom", ["B"], [5]], ["timer", 14, "comesFrom", ["timer"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::602", "code": "\n//#include <iostream>\n//using namespace std;\n\n#include <stdio.h>\n\nint main()\n{\n    int size;\n    int N, A, B;\n    scanf(\"%d\", &size);\n    while (size--) {\n        scanf(\"%d %d %d\", &N, &A, &B);\n        if (N % (A + B) <= A && N % (A + B) > 0)\n            printf(\"Bob\\n\");\n        else\n            printf(\"Alice\\n\");\n    }\n    return 0;\n}\n", "code_tokens": ["Ċ", "//", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "//", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsize", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "ĠN", ",", "ĠA", ",", "ĠB", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "size", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "size", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "Ġ%", "d", "Ġ%", "d", "\",", "Ġ&", "N", ",", "Ġ&", "A", ",", "Ġ&", "B", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "N", "Ġ%", "Ġ(", "A", "Ġ+", "ĠB", ")", "Ġ<=", "ĠA", "Ġ&&", "ĠN", "Ġ%", "Ġ(", "A", "Ġ+", "ĠB", ")", "Ġ>", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Bob", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Alice", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["size", 6, "comesFrom", ["size"], [1]], ["size", 7, "comesFrom", ["size"], [1]], ["N", 9, "comesFrom", ["N"], [2]], ["N", 12, "comesFrom", ["N"], [2]], ["N", 16, "comesFrom", ["N"], [2]], ["A", 10, "comesFrom", ["A"], [3]], ["A", 13, "comesFrom", ["A"], [3]], ["A", 15, "comesFrom", ["A"], [3]], ["A", 17, "comesFrom", ["A"], [3]], ["B", 11, "comesFrom", ["B"], [4]], ["B", 14, "comesFrom", ["B"], [4]], ["B", 18, "comesFrom", ["B"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::603", "code": "#include \"controller.hpp\"\n\nusing namespace std;\n\nController::Controller(MapReader* reader) : reader(reader),view(reader)\n{\n    startSong();\n}\n\nvoid Controller::update()\n{\n\n}\n\nvoid Controller::eventLoop()\n{\n  while (view.window->isOpen())\n    {\n      loop_time = clock.getElapsedTime();\n      sf::Event event;\n      while (view.window->pollEvent(event))\n        {\n\t  if (event.type == sf::Event::Closed)\n\t    view.window->close();\n      if(event.type == sf::Event::MouseButtonPressed)\n        {\n          reader->computeScore(event.mouseButton.x,event.mouseButton.y, loop_time);\n        }\n\n        }\n      view.show(loop_time);\n      }\n}\n\n\nvoid Controller::startSong()\n{\n    clock.restart();\n    reader->startSong();\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "controller", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Controller", "::", "Controller", "(", "Map", "Reader", "*", "Ġreader", ")", "Ġ:", "Ġreader", "(", "reader", "),", "view", "(", "reader", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstart", "Song", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠController", "::", "update", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠController", "::", "event", "Loop", "()", "Ċ", "{", "Ċ", "Ġ", "Ġwhile", "Ġ(", "view", ".", "window", "->", "is", "Open", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġloop", "_", "time", "Ġ=", "Ġclock", ".", "get", "El", "apsed", "Time", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "f", "::", "Event", "Ġevent", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "view", ".", "window", "->", "poll", "Event", "(", "event", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "ĉ", "Ġ", "Ġif", "Ġ(", "event", ".", "type", "Ġ==", "Ġs", "f", "::", "Event", "::", "Cl", "osed", ")", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġview", ".", "window", "->", "close", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "event", ".", "type", "Ġ==", "Ġs", "f", "::", "Event", "::", "Mouse", "Button", "P", "ressed", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreader", "->", "comp", "ute", "Score", "(", "event", ".", "mouse", "Button", ".", "x", ",", "event", ".", "mouse", "Button", ".", "y", ",", "Ġloop", "_", "time", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġview", ".", "show", "(", "loop", "_", "time", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠController", "::", "start", "Song", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġclock", ".", "rest", "art", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreader", "->", "start", "Song", "();", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["event", 20, "comesFrom", ["event"], [16]], ["event", 21, "comesFrom", ["event"], [16]], ["event", 27, "comesFrom", ["event"], [16]], ["event", 32, "comesFrom", ["event"], [16]], ["event", 35, "comesFrom", ["event"], [16]], ["loop_time", 38, "comesFrom", ["loop_time"], [13]], ["loop_time", 41, "comesFrom", ["loop_time"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::604", "code": "// Copyright 2012 Bob Wilkinson <bob@fourtheye.org>\n\n// This is a solution for http://projecteuler.net/problem=9\n\n#include <cstdio>\n\nint main() {\n  int a, b, c;\n  int stop = 1000;\n  for (a = 1; a < stop; a++) {\n    for (b = a + 1; b < stop; b++) {\n      for (c = b + 1; c < stop; c++) {\n        if ((a + b +c) == stop) {\n          if ((a * a) + (b * b) == (c * c)) {\n            printf(\"%d\\n\", a*b*c);\n            return(0);\n          }\n        }\n      }\n    }\n  }\n  return(1);\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2012", "ĠBob", "ĠWilkinson", "Ġ<", "b", "ob", "@", "four", "the", "ye", ".", "org", ">", "Ċ", "Ċ", "//", "ĠThis", "Ġis", "Ġa", "Ġsolution", "Ġfor", "Ġhttp", "://", "project", "e", "uler", ".", "net", "/", "problem", "=", "9", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ",", "Ġc", ";", "Ċ", "Ġ", "Ġint", "Ġstop", "Ġ=", "Ġ1000", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "a", "Ġ=", "Ġ1", ";", "Ġa", "Ġ<", "Ġstop", ";", "Ġa", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "b", "Ġ=", "Ġa", "Ġ+", "Ġ1", ";", "Ġb", "Ġ<", "Ġstop", ";", "Ġb", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "c", "Ġ=", "Ġb", "Ġ+", "Ġ1", ";", "Ġc", "Ġ<", "Ġstop", ";", "Ġc", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "a", "Ġ+", "Ġb", "Ġ+", "c", ")", "Ġ==", "Ġstop", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "a", "Ġ*", "Ġa", ")", "Ġ+", "Ġ(", "b", "Ġ*", "Ġb", ")", "Ġ==", "Ġ(", "c", "Ġ*", "Ġc", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġa", "*", "b", "*", "c", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "(", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "(", "1", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 6, "comesFrom", ["a"], [5]], ["a", 8, "comesFrom", ["a"], [5]], ["a", 10, "comesFrom", ["a"], [5]], ["a", 19, "comesFrom", ["a"], [5]], ["a", 23, "comesFrom", ["a"], [5]], ["a", 24, "comesFrom", ["a"], [5]], ["a", 30, "comesFrom", ["a"], [5]], ["stop", 7, "comesFrom", ["stop"], [4]], ["stop", 12, "comesFrom", ["stop"], [4]], ["stop", 17, "comesFrom", ["stop"], [4]], ["stop", 22, "comesFrom", ["stop"], [4]], ["b", 11, "comesFrom", ["b"], [9]], ["b", 13, "comesFrom", ["b"], [9]], ["b", 15, "comesFrom", ["b"], [9]], ["b", 20, "comesFrom", ["b"], [9]], ["b", 25, "comesFrom", ["b"], [9]], ["b", 26, "comesFrom", ["b"], [9]], ["b", 31, "comesFrom", ["b"], [9]], ["c", 16, "comesFrom", ["c"], [14]], ["c", 18, "comesFrom", ["c"], [14]], ["c", 21, "comesFrom", ["c"], [14]], ["c", 27, "comesFrom", ["c"], [14]], ["c", 28, "comesFrom", ["c"], [14]], ["c", 32, "comesFrom", ["c"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::605", "code": "\n#include \"CompModelStatic.h\"\n\n#include \"../../Signals/SignalEnterClient.h\"\n#include \"../../Signals/SignalExitClient.h\"\n\nCompModelStatic::CompModelStatic() :\nSComponent(COMPID::modelStatic){\n\tinit();\n\t_modelId = 0;\n}\n\nCompModelStatic::CompModelStatic(uint32_t modelId) :\nSComponent(COMPID::modelStatic){\n\tinit();\n\t_modelId = modelId;\n}\n\nCompModelStatic::CompModelStatic(const CompModelStatic& orig) :\nSComponent(COMPID::modelStatic){\n\tinit();\n\t_modelId = orig._modelId;\n}\n\n\nvoid CompModelStatic::init(){\n}\n\nvoid CompModelStatic::acceptSignal(SIGNAL::Enum type, Signal* data){\n\t\n\tswitch(type){\n\t\tcase SIGNAL::enterClient:{\n\t\t\tcerr<<\"signal enter\"<<endl;\n\t\t\tSignalEnterClient* s = (SignalEnterClient*)data;\n\t\t\tsendEnter(s->_clientId);\n\t\t\tbreak;\n\t\t}\n\t\tcase SIGNAL::exitClient:{\n\t\t\tSignalExitClient* s = (SignalExitClient*)data;\n\t\t\tsendEnter(s->_clientId);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nvoid CompModelStatic::acceptMessage(MESSAGE::Enum type, Message* data){\n\t\n}\n\n\nCompModelStatic::~CompModelStatic() {\n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "Comp", "Model", "Static", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "../", "Sign", "als", "/", "Sign", "al", "Enter", "Client", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "../", "Sign", "als", "/", "Sign", "al", "Exit", "Client", ".", "h", "\"", "Ċ", "Ċ", "Comp", "Model", "Static", "::", "Comp", "Model", "Static", "()", "Ġ:", "Ċ", "SC", "omp", "onent", "(", "COM", "P", "ID", "::", "model", "Static", "){", "Ċ", "ĉ", "init", "();", "Ċ", "ĉ", "_", "model", "Id", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Comp", "Model", "Static", "::", "Comp", "Model", "Static", "(", "uint", "32", "_", "t", "Ġmodel", "Id", ")", "Ġ:", "Ċ", "SC", "omp", "onent", "(", "COM", "P", "ID", "::", "model", "Static", "){", "Ċ", "ĉ", "init", "();", "Ċ", "ĉ", "_", "model", "Id", "Ġ=", "Ġmodel", "Id", ";", "Ċ", "}", "Ċ", "Ċ", "Comp", "Model", "Static", "::", "Comp", "Model", "Static", "(", "const", "ĠComp", "Model", "Static", "&", "Ġorig", ")", "Ġ:", "Ċ", "SC", "omp", "onent", "(", "COM", "P", "ID", "::", "model", "Static", "){", "Ċ", "ĉ", "init", "();", "Ċ", "ĉ", "_", "model", "Id", "Ġ=", "Ġorig", "._", "model", "Id", ";", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠComp", "Model", "Static", "::", "init", "(){", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComp", "Model", "Static", "::", "accept", "Sign", "al", "(", "SIGN", "AL", "::", "En", "um", "Ġtype", ",", "ĠSignal", "*", "Ġdata", "){", "Ċ", "ĉ", "Ċ", "ĉ", "switch", "(", "type", "){", "Ċ", "ĉ", "ĉ", "case", "ĠSIGN", "AL", "::", "enter", "Client", ":{", "Ċ", "ĉ", "ĉ", "ĉ", "cer", "r", "<<", "\"", "sign", "al", "Ġenter", "\"", "<<", "end", "l", ";", "Ċ", "ĉ", "ĉ", "ĉ", "Sign", "al", "Enter", "Client", "*", "Ġs", "Ġ=", "Ġ(", "Sign", "al", "Enter", "Client", "*)", "data", ";", "Ċ", "ĉ", "ĉ", "ĉ", "send", "Enter", "(", "s", "->", "_", "client", "Id", ");", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "case", "ĠSIGN", "AL", "::", "exit", "Client", ":{", "Ċ", "ĉ", "ĉ", "ĉ", "Sign", "al", "Exit", "Client", "*", "Ġs", "Ġ=", "Ġ(", "Sign", "al", "Exit", "Client", "*)", "data", ";", "Ċ", "ĉ", "ĉ", "ĉ", "send", "Enter", "(", "s", "->", "_", "client", "Id", ");", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠComp", "Model", "Static", "::", "accept", "Message", "(", "M", "ES", "SA", "GE", "::", "En", "um", "Ġtype", ",", "ĠMessage", "*", "Ġdata", "){", "Ċ", "ĉ", "Ċ", "}", "ĊĊ", "Ċ", "Comp", "Model", "Static", "::", "~", "Comp", "Model", "Static", "()", "Ġ{", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["modelId", 11, "comesFrom", ["modelId"], [6]], ["_modelId", 19, "comesFrom", ["_modelId"], [17]], ["type", 24, "comesFrom", ["type"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::606", "code": "#include \"exam.h\"\r\n\r\n#include <QCoreApplication>\r\n#include <QMessageBox>\r\n\r\nExam::Exam(QObject *parent) : QObject(parent)\r\n{\r\n}\r\n\r\nvoid Exam::processAnswer(QString answer)\r\n{\r\n    if (generatedRound.answer == answer)\r\n    {\r\n        roundsRemains--;\r\n    }\r\n    else\r\n    {\r\n        QMessageBox::warning(NULL,tr(\"Error\"),tr(\"Wrong answer\"));\r\n    }\r\n    qDebug() << \"slot processanswer :\" << roundsRemains;\r\n    if (roundsRemains < 0)\r\n    {\r\n        QCoreApplication::quit();\r\n    }\r\n    else\r\n    {\r\n        generateQuestion();\r\n    }\r\n    qDebug() << \"slot processanswer :\" << answer;\r\n    qDebug() << \"slot processanswer :\" << generatedRound.answer << \":\";\r\n}\r\n\r\nvoid Exam::start()\r\n{\r\n    roundsRemains=5;\r\n    generateQuestion();\r\n}\r\n\r\nvoid Exam::generateQuestion()\r\n{\r\n    generatedRound=examGenerator.generateRound();\r\n    emit questionGenerated(generatedRound.question);\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "ex", "am", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "Q", "Core", "Application", ">", "č", "Ċ", "#", "include", "Ġ<", "Q", "Message", "Box", ">", "č", "Ċ", "č", "Ċ", "Ex", "am", "::", "Ex", "am", "(", "Q", "Object", "Ġ*", "parent", ")", "Ġ:", "ĠQ", "Object", "(", "parent", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠExam", "::", "process", "Answer", "(", "Q", "String", "Ġanswer", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "generated", "Round", ".", "answer", "Ġ==", "Ġanswer", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġrounds", "Rem", "ains", "--", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "Message", "Box", "::", "warning", "(", "NULL", ",", "tr", "(\"", "Error", "\"),", "tr", "(\"", "Wr", "ong", "Ġanswer", "\")", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġ\"", "slot", "Ġprocess", "answer", "Ġ:", "\"", "Ġ<<", "Ġrounds", "Rem", "ains", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "round", "s", "Rem", "ains", "Ġ<", "Ġ0", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "Core", "Application", "::", "quit", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġgenerate", "Question", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġ\"", "slot", "Ġprocess", "answer", "Ġ:", "\"", "Ġ<<", "Ġanswer", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġ\"", "slot", "Ġprocess", "answer", "Ġ:", "\"", "Ġ<<", "Ġgenerated", "Round", ".", "answer", "Ġ<<", "Ġ\"", ":", "\";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠExam", "::", "start", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġrounds", "Rem", "ains", "=", "5", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgenerate", "Question", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠExam", "::", "gener", "ate", "Question", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgenerated", "Round", "=", "ex", "am", "Gener", "ator", ".", "gener", "ate", "Round", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġemit", "Ġquestion", "Gener", "ated", "(", "generated", "Round", ".", "question", ");", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["generatedRound", 31, "comesFrom", ["generatedRound"], [27]], ["answer", 7, "comesFrom", ["answer"], [5]], ["answer", 8, "comesFrom", ["answer"], [5]], ["answer", 19, "comesFrom", ["answer"], [5]], ["answer", 22, "comesFrom", ["answer"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::607", "code": "/** Author: Sharmin Akter **/\r\n/** Created at: 2/3/2012 12:48:38 AM **/\r\n\r\n#include<cstdio>\r\n#include<iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n\tlong a,l,i,j,t=1,A;\r\n\t\t\r\n\twhile(cin>>a>>l){\t \t \r\n\t\tint c=1;\r\n\t\tA=a;\r\n\t\tif(a<0 && l<0)\r\n\t\t\tbreak;\r\n\t\t\twhile(a!=1){\r\n\t\t\t\tif(a&1){\r\n\t\t\t\t\tif(a<=l){\r\n\t\t\t\t\t\ta=(3*a)+1;\r\n\t\t\t\t\t\tif(a<=l)\r\n\t\t\t\t\t\t\tc++;\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\ta=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t \t \r\n\t\t\t\telse{\r\n\t\t\t\t\tif(a<=l){\r\n\t\t\t\t\t\ta/=2;\r\n\t\t\t\t\t\tif(a<=l)\r\n\t\t\t\t\t\t\tc++;\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\ta=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tif(a==1)\r\n\t\t\tprintf(\"Case %ld: A = %ld, limit = %ld, number of terms = %d\\n\",t,A,l,c);\r\n\t\tt++;\r\n\t}\r\nreturn 0;\r\n}\r\n\r\n", "code_tokens": ["Ġ/**", "ĠAuthor", ":", "ĠShar", "min", "ĠAk", "ter", "Ġ**", "/", "č", "Ċ", "/**", "ĠCreated", "Ġat", ":", "Ġ2", "/", "3", "/", "2012", "Ġ12", ":", "48", ":", "38", "ĠAM", "Ġ**", "/", "č", "Ċ", "č", "Ċ", "#", "include", "<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "<", "i", "ost", "ream", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(){", "č", "Ċ", "č", "Ċ", "ĉ", "long", "Ġa", ",", "l", ",", "i", ",", "j", ",", "t", "=", "1", ",", "A", ";", "č", "Ċ", "ĉ", "ĉ", "č", "Ċ", "ĉ", "while", "(", "cin", ">>", "a", ">>", "l", "){", "ĉ", "Ġ", "ĉ", "Ġ", "č", "Ċ", "ĉ", "ĉ", "int", "Ġc", "=", "1", ";", "č", "Ċ", "ĉ", "ĉ", "A", "=", "a", ";", "č", "Ċ", "ĉ", "ĉ", "if", "(", "a", "<", "0", "Ġ&&", "Ġl", "<", "0", ")", "č", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "while", "(", "a", "!", "=", "1", "){", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "a", "&", "1", "){", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "a", "<", "=", "l", "){", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "a", "=(", "3", "*", "a", ")+", "1", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "a", "<", "=", "l", ")", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "c", "++;", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "else", "Ġ", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "a", "=", "1", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "ĉ", "Ġ", "ĉ", "Ġ", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "else", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "a", "<", "=", "l", "){", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "a", "/", "=", "2", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "a", "<", "=", "l", ")", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "c", "++;", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "else", "Ġ", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "a", "=", "1", ";", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "if", "(", "a", "==", "1", ")", "č", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "Case", "Ġ%", "ld", ":", "ĠA", "Ġ=", "Ġ%", "ld", ",", "Ġlimit", "Ġ=", "Ġ%", "ld", ",", "Ġnumber", "Ġof", "Ġterms", "Ġ=", "Ġ%", "d", "\\", "n", "\",", "t", ",", "A", ",", "l", ",", "c", ");", "č", "Ċ", "ĉ", "ĉ", "t", "++;", "č", "Ċ", "ĉ", "}", "č", "Ċ", "return", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ"], "dataflow_graph": [["a", 9, "comesFrom", ["a"], [2]], ["a", 13, "comesFrom", ["a"], [2]], ["a", 14, "comesFrom", ["a"], [2]], ["a", 16, "comesFrom", ["a"], [2]], ["a", 17, "comesFrom", ["a"], [2]], ["a", 18, "comesFrom", ["a"], [2]], ["a", 21, "comesFrom", ["a"], [20]], ["a", 22, "comesFrom", ["a"], [20]], ["a", 26, "comesFrom", ["a"], [25]], ["a", 29, "comesFrom", ["a"], [28]], ["a", 33, "comesFrom", ["a"], [32]], ["l", 10, "comesFrom", ["l"], [3]], ["l", 15, "comesFrom", ["l"], [3]], ["l", 19, "comesFrom", ["l"], [3]], ["l", 23, "comesFrom", ["l"], [3]], ["l", 27, "comesFrom", ["l"], [3]], ["l", 30, "comesFrom", ["l"], [3]], ["l", 37, "comesFrom", ["l"], [3]], ["c", 24, "comesFrom", ["c"], [11]], ["c", 31, "comesFrom", ["c"], [11]], ["c", 38, "comesFrom", ["c"], [11]], ["t", 35, "comesFrom", ["t"], [6]], ["t", 39, "comesFrom", ["t"], [6]], ["A", 36, "comesFrom", ["A"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::608", "code": "/* Copyright (c) 2016 Vinícius dos Santos Oliveira\n\n   Distributed under the Boost Software License, Version 1.0. (See accompanying\n   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt) */\n\n\n#ifndef BOOST_HTTP_SYNTAX_DETAIL_IS_OBS_TEXT_HPP\n#define BOOST_HTTP_SYNTAX_DETAIL_IS_OBS_TEXT_HPP\n\nnamespace boost {\nnamespace http {\nnamespace syntax {\nnamespace detail {\n\ntemplate<class CharT>\nbool is_obs_text(CharT c)\n{\n    return c >= 0x80 && c <= 0xFF;\n}\n\n} // namespace detail\n} // namespace syntax\n} // namespace http\n} // namespace boost\n\n#endif // BOOST_HTTP_SYNTAX_DETAIL_IS_OBS_TEXT_HPP\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2016", "ĠVin", "ÃŃ", "cius", "Ġdos", "ĠSantos", "ĠOlive", "ira", "ĊĊ", "Ġ", "Ġ", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġaccompanying", "Ċ", "Ġ", "Ġ", "Ġfile", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "Ġ*/", "ĊĊ", "Ċ", "#", "if", "nd", "ef", "ĠB", "OO", "ST", "_", "HTTP", "_", "SY", "N", "TA", "X", "_", "D", "ETA", "IL", "_", "IS", "_", "O", "BS", "_", "TEXT", "_", "H", "PP", "Ċ", "#", "define", "ĠB", "OO", "ST", "_", "HTTP", "_", "SY", "N", "TA", "X", "_", "D", "ETA", "IL", "_", "IS", "_", "O", "BS", "_", "TEXT", "_", "H", "PP", "Ċ", "Ċ", "names", "pace", "Ġboost", "Ġ{", "Ċ", "names", "pace", "Ġhttp", "Ġ{", "Ċ", "names", "pace", "Ġsyntax", "Ġ{", "Ċ", "names", "pace", "Ġdetail", "Ġ{", "Ċ", "Ċ", "template", "<", "class", "ĠChar", "T", ">", "Ċ", "bool", "Ġis", "_", "obs", "_", "text", "(", "Char", "T", "Ġc", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġc", "Ġ>=", "Ġ0", "x", "80", "Ġ&&", "Ġc", "Ġ<=", "Ġ0", "x", "FF", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġdetail", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġsyntax", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġhttp", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġboost", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠB", "OO", "ST", "_", "HTTP", "_", "SY", "N", "TA", "X", "_", "D", "ETA", "IL", "_", "IS", "_", "O", "BS", "_", "TEXT", "_", "H", "PP", "Ċ"], "dataflow_graph": [["c", 4, "comesFrom", ["c"], [3]], ["c", 5, "comesFrom", ["c"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::609", "code": "#include <iostream>\n\n#include \"Ch3Ex4FunctionsHeaders.h \"  \n\nint main()\n{\n\tauto a = add(3, 4);\n\tcout << \" 3 + 4 , Is , : , : \" << a;\n\tdouble b = add(1.2, 3.4);\n\tcout << endl;\n\tcout << \" 1.2 + 3.4 , Is , : , : \" << b;\n\tcout << endl;\n\tauto c = add(1.1, 2.2, 3.3);\n\tcout << \" 1.1 + 2.2 + 3.3 , Is , : , : \" << c;\n\tcout << endl;\n\n\n\tadd(0, 0);\n\tadd(0, 0, 0);\n\n\tif (test(true))\n\t{\n\t\tcout << \" True Passes The Test \" << endl;\n\t}\n\n\tif (test(3.2))\n\t{\n\t\tcout << \" 3.2 Passes The Test \" << endl;\n\t}\n\n\n\n\n\n\n\n\n\n\t///Pausing The Prompt Consol From Auto Finish / \\ \\ / \\\\ / \\ \\ From Auto Finishing And Closing / \\ \\ / \\\\ / \\ \\ And After Closing \n\tsystem(\"pause\");\n\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Ch", "3", "Ex", "4", "Fun", "ctions", "Head", "ers", ".", "h", "Ġ\"", "Ġ", "Ġ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "auto", "Ġa", "Ġ=", "Ġadd", "(", "3", ",", "Ġ4", ");", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Ġ3", "Ġ+", "Ġ4", "Ġ,", "ĠIs", "Ġ,", "Ġ:", "Ġ,", "Ġ:", "Ġ\"", "Ġ<<", "Ġa", ";", "Ċ", "ĉ", "double", "Ġb", "Ġ=", "Ġadd", "(", "1", ".", "2", ",", "Ġ3", ".", "4", ");", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Ġ1", ".", "2", "Ġ+", "Ġ3", ".", "4", "Ġ,", "ĠIs", "Ġ,", "Ġ:", "Ġ,", "Ġ:", "Ġ\"", "Ġ<<", "Ġb", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "auto", "Ġc", "Ġ=", "Ġadd", "(", "1", ".", "1", ",", "Ġ2", ".", "2", ",", "Ġ3", ".", "3", ");", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Ġ1", ".", "1", "Ġ+", "Ġ2", ".", "2", "Ġ+", "Ġ3", ".", "3", "Ġ,", "ĠIs", "Ġ,", "Ġ:", "Ġ,", "Ġ:", "Ġ\"", "Ġ<<", "Ġc", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ċ", "ĉ", "add", "(", "0", ",", "Ġ0", ");", "Ċ", "ĉ", "add", "(", "0", ",", "Ġ0", ",", "Ġ0", ");", "ĊĊ", "ĉ", "if", "Ġ(", "test", "(", "true", "))", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "ĠTrue", "ĠPass", "es", "ĠThe", "ĠTest", "Ġ\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "if", "Ġ(", "test", "(", "3", ".", "2", "))", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Ġ3", ".", "2", "ĠPass", "es", "ĠThe", "ĠTest", "Ġ\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĊĊ", "ĊĊ", "ĊĊ", "ĊĊ", "ĉ", "///", "Pa", "using", "ĠThe", "ĠPrompt", "ĠCons", "ol", "ĠFrom", "ĠAuto", "ĠFinish", "Ġ/", "Ġ\\", "Ġ\\", "Ġ/", "Ġ\\\\", "Ġ/", "Ġ\\", "Ġ\\", "ĠFrom", "ĠAuto", "ĠFin", "ishing", "ĠAnd", "ĠClosing", "Ġ/", "Ġ\\", "Ġ\\", "Ġ/", "Ġ\\\\", "Ġ/", "Ġ\\", "Ġ\\", "ĠAnd", "ĠAfter", "ĠClosing", "Ġ", "Ċ", "ĉ", "system", "(\"", "pause", "\");", "ĊĊ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["a", 4, "comesFrom", ["a"], [1]], ["b", 10, "comesFrom", ["b"], [5]], ["c", 16, "comesFrom", ["c"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::610", "code": "#include \"gnavigatorview.h\"\n\n#include \"gnavigatormodel.h\"\n\n#include <QDebug>\n\nGNavigatorView::GNavigatorView(QWidget *parent)\n    : QTreeView(parent),\n      mNavModel(NULL)\n{\n    setSelectionMode(QAbstractItemView::SingleSelection);\n}\n\nvoid GNavigatorView::setModel(QAbstractItemModel *model)\n{\n    Q_ASSERT(model->inherits(\"GNavigatorModel\"));\n    QTreeView::setModel(model);\n\n    mNavModel = static_cast<GNavigatorModel*>(model);\n    connect(this, SIGNAL(clicked(QModelIndex)), mNavModel, SLOT(clicked(QModelIndex)));\n    \n    viewport()->installEventFilter(mNavModel);\n    installEventFilter(mNavModel);\n}\n\nvoid GNavigatorView::currentChanged(const QModelIndex &current, const QModelIndex &previous)\n{\n//    qDebug() << __PRETTY_FUNCTION__ << current.row();\n    QTreeView::currentChanged(current, previous);\n    mNavModel->currentChanged(current);\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "gn", "av", "igator", "view", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "gn", "av", "ig", "at", "orm", "od", "el", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "Ċ", "GN", "av", "igator", "View", "::", "GN", "av", "igator", "View", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠQ", "Tree", "View", "(", "parent", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "Nav", "Model", "(", "NULL", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Se", "lection", "Mode", "(", "Q", "Abstract", "Item", "View", "::", "Single", "Se", "lection", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGN", "av", "igator", "View", "::", "set", "Model", "(", "Q", "Abstract", "Item", "Model", "Ġ*", "model", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "ASS", "ERT", "(", "model", "->", "in", "her", "its", "(\"", "GN", "av", "igator", "Model", "\")", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Tree", "View", "::", "set", "Model", "(", "model", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġm", "Nav", "Model", "Ġ=", "Ġstatic", "_", "cast", "<", "GN", "av", "igator", "Model", "*", ">(", "model", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconnect", "(", "this", ",", "ĠSIGN", "AL", "(", "cl", "icked", "(", "Q", "Model", "Index", ")),", "Ġm", "Nav", "Model", ",", "ĠSL", "OT", "(", "cl", "icked", "(", "Q", "Model", "Index", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "port", "()", "->", "install", "Event", "Filter", "(", "m", "Nav", "Model", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinstall", "Event", "Filter", "(", "m", "Nav", "Model", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGN", "av", "igator", "View", "::", "current", "Changed", "(", "const", "ĠQ", "Model", "Index", "Ġ&", "current", ",", "Ġconst", "ĠQ", "Model", "Index", "Ġ&", "pre", "vious", ")", "Ċ", "{", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġq", "Debug", "()", "Ġ<<", "Ġ__", "P", "RET", "TY", "_", "FUN", "CT", "ION", "__", "Ġ<<", "Ġcurrent", ".", "row", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Tree", "View", "::", "current", "Changed", "(", "current", ",", "Ġprevious", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "Nav", "Model", "->", "current", "Changed", "(", "current", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["mNavModel", 21, "comesFrom", ["mNavModel"], [14]], ["mNavModel", 27, "comesFrom", ["mNavModel"], [14]], ["mNavModel", 29, "comesFrom", ["mNavModel"], [14]], ["mNavModel", 36, "comesFrom", ["mNavModel"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::611", "code": "#include \"team_communicator.h\"\n#include \"database_driver.h\"\n#include \"model.h\"\n\n#include <memory>\n#include <sstream>\n#include <string>\n#include <vector>\n\nnamespace bavian {\nnamespace database {\n\nTeamCommunicator::TeamCommunicator(\n    const std::shared_ptr<DatabaseDriver> &db_connection)\n    : DatabaseCommunicator(db_connection, \"teams\") {}\n\nbool TeamCommunicator::Install() const {\n  const std::string query{\n      \"CREATE TABLE IF NOT EXISTS teams (\"\n      \"id INTEGER PRIMARY KEY AUTOINCREMENT,\"\n      \"name TEXT NOT NULL);\"};\n  return db_connection_->ExecuteQuery(query);\n}\n\nbool TeamCommunicator::Insert(const Team &team) const {\n  std::stringstream query;\n  query << \"INSERT INTO teams(name) VALUES('\" << team.name << \"')\";\n  return db_connection_->ExecuteQuery(query.str());\n}\n\nTeam TeamCommunicator::ConvertRow(const std::vector<std::string> &row) const {\n  const int id{std::stoi(row.at(0))};\n  const std::string name{row.at(1)};\n  return Team{id, name};\n}\n\n}  // namespace database\n}  // namespace bavian\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "team", "_", "commun", "icator", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "database", "_", "driver", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "model", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "names", "pace", "Ġb", "av", "ian", "Ġ{", "Ċ", "names", "pace", "Ġdatabase", "Ġ{", "Ċ", "Ċ", "Team", "Commun", "icator", "::", "Team", "Commun", "icator", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "shared", "_", "ptr", "<", "Database", "Driver", ">", "Ġ&", "db", "_", "connection", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠDatabase", "Commun", "icator", "(", "db", "_", "connection", ",", "Ġ\"", "te", "ams", "\")", "Ġ{}", "Ċ", "Ċ", "bool", "ĠTeam", "Commun", "icator", "::", "Install", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġquery", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "CRE", "ATE", "ĠTABLE", "ĠIF", "ĠNOT", "ĠEX", "IS", "TS", "Ġteams", "Ġ(\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "id", "ĠINT", "EG", "ER", "ĠPR", "IM", "ARY", "ĠKEY", "ĠAUT", "O", "INC", "RE", "MENT", ",\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "name", "ĠTEXT", "ĠNOT", "ĠNULL", ");", "\"", "};", "Ċ", "Ġ", "Ġreturn", "Ġdb", "_", "connection", "_", "->", "Exec", "ute", "Query", "(", "query", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠTeam", "Commun", "icator", "::", "Insert", "(", "const", "ĠTeam", "Ġ&", "team", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "string", "stream", "Ġquery", ";", "Ċ", "Ġ", "Ġquery", "Ġ<<", "Ġ\"", "INS", "ERT", "ĠINTO", "Ġteams", "(", "name", ")", "ĠVAL", "UES", "('", "\"", "Ġ<<", "Ġteam", ".", "name", "Ġ<<", "Ġ\"", "')", "\";", "Ċ", "Ġ", "Ġreturn", "Ġdb", "_", "connection", "_", "->", "Exec", "ute", "Query", "(", "query", ".", "str", "());", "Ċ", "}", "Ċ", "Ċ", "Team", "ĠTeam", "Commun", "icator", "::", "Con", "vert", "Row", "(", "const", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġ&", "row", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġconst", "Ġint", "Ġid", "{", "std", "::", "st", "oi", "(", "row", ".", "at", "(", "0", "))", "};", "Ċ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġname", "{", "row", ".", "at", "(", "1", ")", "};", "Ċ", "Ġ", "Ġreturn", "ĠTeam", "{", "id", ",", "Ġname", "};", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġdatabase", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġb", "av", "ian", "Ċ"], "dataflow_graph": [["query", 8, "comesFrom", ["query"], [5]], ["query", 12, "comesFrom", ["query"], [11]], ["query", 17, "comesFrom", ["query"], [11]], ["name", 29, "comesFrom", ["name"], [25]], ["id", 28, "comesFrom", ["id"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::612", "code": "#include \"Ship.h\"\n\nShip::Ship(SDL_Surface* surface, SDL_Surface* screen, int x, int y)\n{\n    this->surface = surface;\n    this->screen = screen;\n    this->x = x;\n    this->y = y;\n    this->borrar = true;\n\n    this->tipo = \"Ship\";\n}\n\nShip::~Ship()\n{\n    //dtor\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Ship", ".", "h", "\"", "Ċ", "Ċ", "Ship", "::", "Ship", "(", "SD", "L", "_", "Sur", "face", "*", "Ġsurface", ",", "ĠSDL", "_", "Sur", "face", "*", "Ġscreen", ",", "Ġint", "Ġx", ",", "Ġint", "Ġy", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "surface", "Ġ=", "Ġsurface", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "screen", "Ġ=", "Ġscreen", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "x", "Ġ=", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "y", "Ġ=", "Ġy", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "bor", "rar", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "tip", "o", "Ġ=", "Ġ\"", "Ship", "\";", "Ċ", "}", "Ċ", "Ċ", "Ship", "::", "~", "Ship", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "d", "tor", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["x", 9, "comesFrom", ["x"], [3]], ["x", 10, "comesFrom", ["x"], [3]], ["y", 11, "comesFrom", ["y"], [4]], ["y", 12, "comesFrom", ["y"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::613", "code": "#include \"RaytraceRenderer.h\"\n\n#include <Eigen/Core>\n#include <QtDebug>\n\n#include \"Raytracer.h\"\n\nusing Eigen::Vector3d;\n\nRaytraceRenderer::RaytraceRenderer(ScenePointer scene, unsigned int width, unsigned int height, unsigned int aaSamples, Angle projectionAngle): Renderer(scene, width, height, aaSamples, projectionAngle)\n{\n\n}\n\nRaytraceRenderer::~RaytraceRenderer()\n{\n\n}\n\nQImage RaytraceRenderer::render()\n{\n\tRaytracer raytracer(width, height, aaSamples, projectionAngle);\n\n\tlist<RayObjectPointer> objects = scene->getObjects();\n\tlist<LightPointer> lights = scene->getLights();\n\n\tfor (list<RayObjectPointer>::iterator it = objects.begin(); it != objects.end(); it++) {\n\t\traytracer.addObject(*it);\n\t}\n\n\tfor (list<LightPointer>::iterator it = lights.begin(); it != lights.end(); it++) {\n\t\traytracer.addLight(*it);\n\t}\n\n\treturn raytracer.render();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Ray", "trace", "R", "end", "erer", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "E", "igen", "/", "Core", ">", "Ċ", "#", "include", "Ġ<", "Q", "t", "Debug", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Ray", "tr", "acer", ".", "h", "\"", "Ċ", "Ċ", "using", "ĠE", "igen", "::", "Vector", "3", "d", ";", "Ċ", "Ċ", "Ray", "trace", "R", "end", "erer", "::", "Ray", "trace", "R", "end", "erer", "(", "Scene", "Po", "inter", "Ġscene", ",", "Ġunsigned", "Ġint", "Ġwidth", ",", "Ġunsigned", "Ġint", "Ġheight", ",", "Ġunsigned", "Ġint", "Ġa", "a", "S", "amples", ",", "ĠAngle", "Ġprojection", "Ang", "le", "):", "ĠRend", "erer", "(", "scene", ",", "Ġwidth", ",", "Ġheight", ",", "Ġa", "a", "S", "amples", ",", "Ġprojection", "Ang", "le", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Ray", "trace", "R", "end", "erer", "::", "~", "Ray", "trace", "R", "end", "erer", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Q", "Image", "ĠRay", "trace", "R", "end", "erer", "::", "render", "()", "Ċ", "{", "Ċ", "ĉ", "Ray", "tr", "acer", "Ġray", "tr", "acer", "(", "width", ",", "Ġheight", ",", "Ġa", "a", "S", "amples", ",", "Ġprojection", "Ang", "le", ");", "ĊĊ", "ĉ", "list", "<", "Ray", "Object", "Po", "inter", ">", "Ġobjects", "Ġ=", "Ġscene", "->", "get", "Object", "s", "();", "Ċ", "ĉ", "list", "<", "Light", "Po", "inter", ">", "Ġlights", "Ġ=", "Ġscene", "->", "get", "L", "ights", "();", "ĊĊ", "ĉ", "for", "Ġ(", "list", "<", "Ray", "Object", "Po", "inter", ">", "::", "iterator", "Ġit", "Ġ=", "Ġobjects", ".", "begin", "();", "Ġit", "Ġ!=", "Ġobjects", ".", "end", "();", "Ġit", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ray", "tr", "acer", ".", "add", "Object", "(*", "it", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "for", "Ġ(", "list", "<", "Light", "Po", "inter", ">", "::", "iterator", "Ġit", "Ġ=", "Ġlights", ".", "begin", "();", "Ġit", "Ġ!=", "Ġlights", ".", "end", "();", "Ġit", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ray", "tr", "acer", ".", "add", "Light", "(*", "it", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġray", "tr", "acer", ".", "render", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["scene", 8, "comesFrom", ["scene"], [2]], ["scene", 17, "comesFrom", ["scene"], [2]], ["scene", 20, "comesFrom", ["scene"], [2]], ["width", 9, "comesFrom", ["width"], [3]], ["height", 10, "comesFrom", ["height"], [4]], ["aaSamples", 11, "comesFrom", ["aaSamples"], [5]], ["projectionAngle", 12, "comesFrom", ["projectionAngle"], [6]], ["objects", 23, "comesFrom", ["objects"], [16]], ["objects", 26, "comesFrom", ["objects"], [16]], ["it", 25, "comesFrom", ["it"], [22]], ["it", 28, "comesFrom", ["it"], [22]], ["it", 31, "comesFrom", ["it"], [22]], ["it", 35, "comesFrom", ["it"], [32]], ["it", 38, "comesFrom", ["it"], [32]], ["it", 41, "comesFrom", ["it"], [32]], ["lights", 33, "comesFrom", ["lights"], [19]], ["lights", 36, "comesFrom", ["lights"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::614", "code": "#include \"inteiro.h\"\n#include <iostream>\nusing namespace std;\n\nint main(){\n\tinteiro *p, *paux, *inserido;\n\tint input=1;\n\tp=paux=NULL;\n\twhile(input!=0){\n\t\tcout << \"Digite um número(0 para sair): \";\n\t\tcin >> input;\n\t\tcout << endl;\n\t\tif(p==NULL){\n\t\t\tp = new inteiro();\n\t\t\tp->valor=input;\n\t\t\tp->prox=NULL;\n\t\t}else{\n\t\t\tif(input < p->valor){\n\t\t\t\tpaux = new inteiro();\n\t\t\t\tpaux->valor = input;\n\t\t\t\tpaux->prox = p;\n\t\t\t\tp = paux;\n\t\t\t}else{\n\t\t\t\tpaux=p;\n\t\t\t\twhile(paux->valor < input){\n\t\t\t\t\tif(paux->prox->valor >input){\n\t\t\t\t\t\tinserido = new inteiro();\n\t\t\t\t\t\tinserido->valor = input;\n\t\t\t\t\t\tinserido->prox = paux->prox;\n\t\t\t\t\t\tpaux->prox=inserido;\n\t\t\t\t\t}else paux = paux->prox;\t\t\t\t\t\n\t}\n\tpaux=p;\n\tcout << \"Lista:\" << endl;\n\twhile(paux != NULL){\n\t\tcout << paux->valor << endl;\n\t\tpaux = paux->prox;\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "int", "e", "iro", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "int", "e", "iro", "Ġ*", "p", ",", "Ġ*", "p", "aux", ",", "Ġ*", "ins", "er", "ido", ";", "Ċ", "ĉ", "int", "Ġinput", "=", "1", ";", "Ċ", "ĉ", "p", "=", "p", "aux", "=", "NULL", ";", "Ċ", "ĉ", "while", "(", "input", "!", "=", "0", "){", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Dig", "ite", "Ġum", "Ġn", "Ãº", "mer", "o", "(", "0", "Ġpara", "Ġsa", "ir", "):", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġinput", ";", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "if", "(", "p", "==", "NULL", "){", "Ċ", "ĉ", "ĉ", "ĉ", "p", "Ġ=", "Ġnew", "Ġint", "e", "iro", "();", "Ċ", "ĉ", "ĉ", "ĉ", "p", "->", "val", "or", "=", "input", ";", "Ċ", "ĉ", "ĉ", "ĉ", "p", "->", "pro", "x", "=", "NULL", ";", "Ċ", "ĉ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "input", "Ġ<", "Ġp", "->", "val", "or", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "p", "aux", "Ġ=", "Ġnew", "Ġint", "e", "iro", "();", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "p", "aux", "->", "val", "or", "Ġ=", "Ġinput", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "p", "aux", "->", "pro", "x", "Ġ=", "Ġp", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "p", "Ġ=", "Ġp", "aux", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "p", "aux", "=", "p", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "while", "(", "p", "aux", "->", "val", "or", "Ġ<", "Ġinput", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(", "p", "aux", "->", "pro", "x", "->", "val", "or", "Ġ>", "input", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ins", "er", "ido", "Ġ=", "Ġnew", "Ġint", "e", "iro", "();", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ins", "er", "ido", "->", "val", "or", "Ġ=", "Ġinput", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ins", "er", "ido", "->", "pro", "x", "Ġ=", "Ġp", "aux", "->", "pro", "x", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "p", "aux", "->", "pro", "x", "=", "ins", "er", "ido", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "else", "Ġp", "aux", "Ġ=", "Ġp", "aux", "->", "pro", "x", ";", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Ċ", "ĉ", "}", "Ċ", "ĉ", "p", "aux", "=", "p", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "List", "a", ":\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "while", "(", "p", "aux", "Ġ!=", "ĠNULL", "){", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġp", "aux", "->", "val", "or", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "p", "aux", "Ġ=", "Ġp", "aux", "->", "pro", "x", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["p", 14, "comesFrom", ["p"], [6]], ["p", 16, "comesFrom", ["p"], [15]], ["p", 19, "comesFrom", ["p"], [15]], ["p", 22, "comesFrom", ["p"], [15]], ["p", 30, "comesFrom", ["p"], [15]], ["p", 34, "comesFrom", ["p"], [31]], ["p", 57, "comesFrom", ["p"], [31]], ["paux", 25, "comesFrom", ["paux"], [24]], ["paux", 28, "comesFrom", ["paux"], [24]], ["paux", 32, "comesFrom", ["paux"], [24]], ["paux", 35, "comesFrom", ["paux"], [33]], ["paux", 38, "comesFrom", ["paux"], [33]], ["paux", 48, "comesFrom", ["paux"], [33]], ["paux", 50, "comesFrom", ["paux"], [33]], ["paux", 54, "comesFrom", ["paux"], [53]], ["paux", 60, "comesFrom", ["paux"], [56]], ["paux", 62, "comesFrom", ["paux"], [56]], ["paux", 66, "comesFrom", ["paux"], [65]], ["inserido", 43, "comesFrom", ["inserido"], [42]], ["inserido", 46, "comesFrom", ["inserido"], [42]], ["inserido", 52, "comesFrom", ["inserido"], [42]], ["input", 8, "comesFrom", ["input"], [5]], ["input", 11, "comesFrom", ["input"], [5]], ["input", 18, "comesFrom", ["input"], [5]], ["input", 21, "comesFrom", ["input"], [5]], ["input", 27, "comesFrom", ["input"], [5]], ["input", 37, "comesFrom", ["input"], [5]], ["input", 41, "comesFrom", ["input"], [5]], ["input", 45, "comesFrom", ["input"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::615", "code": "#include \"bitefficient_envelope_parser.h\"\n#include \"grammar/grammar_bitefficient_envelope.h\"\n\nnamespace fipa {\nnamespace acl {\n        \nbool BitefficientEnvelopeParser::parseData(const std::string& storage, ACLEnvelope& envelope)\n{\n    typedef fipa::acl::bitefficient::Envelope<std::string::const_iterator> bitefficient_envelope_grammar;\n    bitefficient_envelope_grammar grammar;\n\n    std::string::const_iterator iter = storage.begin(); \n    std::string::const_iterator end = storage.end(); \n    bool r = parse(iter, end, grammar, envelope);\n\n    if(r && iter == end)\n    {\n        return true;\n    }\n    return false;\n}\n\n} // end namespace acl\n} // end namespace fipa\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "bite", "fficient", "_", "en", "velop", "e", "_", "parser", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gram", "mar", "/", "gram", "mar", "_", "bite", "fficient", "_", "en", "velop", "e", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġf", "ip", "a", "Ġ{", "Ċ", "names", "pace", "Ġa", "cl", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "bool", "ĠBite", "fficient", "En", "velop", "e", "Parser", "::", "parse", "Data", "(", "const", "Ġstd", "::", "string", "&", "Ġstorage", ",", "ĠAC", "LE", "n", "velop", "e", "&", "Ġenvelope", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtyped", "ef", "Ġf", "ip", "a", "::", "acl", "::", "bite", "fficient", "::", "En", "velop", "e", "<", "std", "::", "string", "::", "const", "_", "iterator", ">", "Ġbite", "fficient", "_", "en", "velop", "e", "_", "gram", "mar", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbite", "fficient", "_", "en", "velop", "e", "_", "gram", "mar", "Ġgrammar", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "::", "const", "_", "iterator", "Ġiter", "Ġ=", "Ġstorage", ".", "begin", "();", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "::", "const", "_", "iterator", "Ġend", "Ġ=", "Ġstorage", ".", "end", "();", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġr", "Ġ=", "Ġparse", "(", "iter", ",", "Ġend", ",", "Ġgrammar", ",", "Ġenvelope", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "r", "Ġ&&", "Ġiter", "Ġ==", "Ġend", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġend", "Ġnamespace", "Ġa", "cl", "Ċ", "}", "Ġ//", "Ġend", "Ġnamespace", "Ġf", "ip", "a", "Ċ"], "dataflow_graph": [["end", 9, "comesFrom", ["end"], [7]], ["end", 13, "comesFrom", ["end"], [7]], ["end", 18, "comesFrom", ["end"], [7]], ["iter", 12, "comesFrom", ["iter"], [4]], ["iter", 17, "comesFrom", ["iter"], [4]], ["grammar", 14, "comesFrom", ["grammar"], [3]], ["r", 16, "comesFrom", ["r"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::616", "code": "/***************************************************************************\n * NoiseTest.cpp\n *\n *  Copyright 2011 Ben Hocking\n *  This file is part of the NeuroJet tester AllTests.\n *\n *  NeuroJet is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU Lesser General Public License as published\n *  by the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  NeuroJet is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public License\n *  along with NeuroJet.  If not, see <http://www.gnu.org/licenses/lgpl.txt>.\n ****************************************************************************/\n#include \"Noise.hpp\"\n#include <iostream>\n#include <stdexcept>\n#include \"gtest/gtest.h\"\n\nnamespace {\n  TEST(NoiseTest, RandIntRespectsBounds) {\n    long unsigned int seed = 4380L;\n    Noise instance(seed);\n    int low = 0;\n    int high = 2047;\n    for (int i = 0; i < 10000000; ++i) {\n      int val = instance.RandInt(low, high);\n      EXPECT_GE(val, low) << \"Generated value \" << val << \" should be greater than or equal to  \" << low;\n      EXPECT_LE(val, high) << \"Generated value \" << val << \" should be less than or equal to \" << high;\n    }\n  }\n}\n", "code_tokens": ["Ġ/", "********************************", "********************************", "********", "***", "Ċ", "Ġ*", "ĠNoise", "Test", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ2011", "ĠBen", "ĠH", "ocking", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠNeuro", "Jet", "Ġt", "ester", "ĠAll", "T", "ests", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠNeuro", "Jet", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ċ", "Ġ*", "Ġ", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠNeuro", "Jet", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġalong", "Ġwith", "ĠNeuro", "Jet", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/", "l", "g", "pl", ".", "txt", ">.", "Ċ", "Ġ********************************", "********************************", "************", "/", "Ċ", "#", "include", "Ġ\"", "No", "ise", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "#", "include", "Ġ\"", "g", "test", "/", "g", "test", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ġ", "ĠTEST", "(", "No", "ise", "Test", ",", "ĠRand", "Int", "Res", "pects", "B", "ounds", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġunsigned", "Ġint", "Ġseed", "Ġ=", "Ġ43", "80", "L", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠNoise", "Ġinstance", "(", "seed", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlow", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġhigh", "Ġ=", "Ġ20", "47", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100", "00000", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", "Ġ=", "Ġinstance", ".", "Rand", "Int", "(", "low", ",", "Ġhigh", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "GE", "(", "val", ",", "Ġlow", ")", "Ġ<<", "Ġ\"", "Gener", "ated", "Ġvalue", "Ġ\"", "Ġ<<", "Ġval", "Ġ<<", "Ġ\"", "Ġshould", "Ġbe", "Ġgreater", "Ġthan", "Ġor", "Ġequal", "Ġto", "Ġ", "Ġ\"", "Ġ<<", "Ġlow", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "LE", "(", "val", ",", "Ġhigh", ")", "Ġ<<", "Ġ\"", "Gener", "ated", "Ġvalue", "Ġ\"", "Ġ<<", "Ġval", "Ġ<<", "Ġ\"", "Ġshould", "Ġbe", "Ġless", "Ġthan", "Ġor", "Ġequal", "Ġto", "Ġ\"", "Ġ<<", "Ġhigh", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 7, "comesFrom", ["i"], [5]], ["low", 11, "comesFrom", ["low"], [3]], ["low", 15, "comesFrom", ["low"], [3]], ["low", 17, "comesFrom", ["low"], [3]], ["high", 12, "comesFrom", ["high"], [4]], ["high", 20, "comesFrom", ["high"], [4]], ["high", 22, "comesFrom", ["high"], [4]], ["val", 14, "comesFrom", ["val"], [8]], ["val", 16, "comesFrom", ["val"], [8]], ["val", 19, "comesFrom", ["val"], [8]], ["val", 21, "comesFrom", ["val"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::617", "code": "#include \"Potion.hpp\"\n\n/*\n * Nome: Potion (Construtor)\n * Descricao: Construtor que define os valores iniciais para os atributos da classe\n * Entrada: (string) nome da pocao, (double) preço, (int) poder de restauracao\n*/\nPotion::Potion(const string name, double price, int restorepts) : Item(name, price){\n    this->restorepts = restorepts;\n}\n\n/*\n * Nome: Potion (Construtor de cópia)\n * Descricao: Construtor que copia os atributos de um objeto Potion\n * Entrada: (Potion&) Referencia para um objeto Potion\n*/\nPotion::Potion(Potion & potion) : Item(potion){\n    restorepts = potion.restorepts;\n}\n\nPotion::~Potion(){}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "P", "otion", ".", "h", "pp", "\"", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠN", "ome", ":", "ĠPotion", "Ġ(", "Con", "str", "utor", ")", "Ċ", "Ġ*", "ĠDesc", "ric", "ao", ":", "ĠCon", "str", "utor", "Ġque", "Ġdefine", "Ġos", "Ġval", "ores", "Ġin", "icia", "is", "Ġpara", "Ġos", "Ġat", "ribut", "os", "Ġda", "Ġcl", "asse", "Ċ", "Ġ*", "ĠEnt", "r", "ada", ":", "Ġ(", "string", ")", "Ġn", "ome", "Ġda", "Ġp", "oc", "ao", ",", "Ġ(", "double", ")", "Ġpre", "Ã§", "o", ",", "Ġ(", "int", ")", "Ġp", "oder", "Ġde", "Ġrestaur", "ac", "ao", "Ċ", "*/", "Ċ", "P", "otion", "::", "P", "otion", "(", "const", "Ġstring", "Ġname", ",", "Ġdouble", "Ġprice", ",", "Ġint", "Ġrestore", "pt", "s", ")", "Ġ:", "ĠItem", "(", "name", ",", "Ġprice", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "rest", "ore", "pt", "s", "Ġ=", "Ġrestore", "pt", "s", ";", "Ċ", "}", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "ĠN", "ome", ":", "ĠPotion", "Ġ(", "Con", "str", "utor", "Ġde", "Ġc", "Ã³", "p", "ia", ")", "Ċ", "Ġ*", "ĠDesc", "ric", "ao", ":", "ĠCon", "str", "utor", "Ġque", "Ġcop", "ia", "Ġos", "Ġat", "ribut", "os", "Ġde", "Ġum", "Ġobj", "eto", "ĠPotion", "Ċ", "Ġ*", "ĠEnt", "r", "ada", ":", "Ġ(", "P", "otion", "&", ")", "ĠRef", "ere", "nc", "ia", "Ġpara", "Ġum", "Ġobj", "eto", "ĠPotion", "Ċ", "*/", "Ċ", "P", "otion", "::", "P", "otion", "(", "P", "otion", "Ġ&", "Ġpotion", ")", "Ġ:", "ĠItem", "(", "potion", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġrestore", "pt", "s", "Ġ=", "Ġpotion", ".", "rest", "ore", "pt", "s", ";", "Ċ", "}", "Ċ", "Ċ", "P", "otion", "::", "~", "P", "otion", "(){", "}", "Ċ"], "dataflow_graph": [["name", 5, "comesFrom", ["name"], [1]], ["price", 6, "comesFrom", ["price"], [2]], ["restorepts", 7, "comesFrom", ["restorepts"], [3]], ["restorepts", 8, "comesFrom", ["restorepts"], [3]], ["restorepts", 15, "comesFrom", ["restorepts"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::618", "code": "// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n#include \"wrap_syscall.h\"\n#include <errno.h>\n#include <stdexcept>\n#include \"absl/strings/str_cat.h\"\n\nint WrapSyscall(const char* name, std::function<int()> fn) {\n  int r;\n  for (;;) {\n    r = fn();\n    if (r == -1) {\n      int e = errno;\n      if (e == EINTR) continue;\n      throw std::runtime_error(\n          absl::StrCat(name, \" failed: errno=\", e, \" \", strerror(e)));\n    }\n    return r;\n  }\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2017", "ĠGoogle", "ĠLLC", "Ċ", "//", "Ċ", "//", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "//", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "//", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttps", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "//", "Ċ", "//", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "//", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "//", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "//", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "//", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "#", "include", "Ġ\"", "wrap", "_", "sys", "call", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "err", "no", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "#", "include", "Ġ\"", "ab", "sl", "/", "strings", "/", "str", "_", "cat", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠWrap", "Sys", "call", "(", "const", "Ġchar", "*", "Ġname", ",", "Ġstd", "::", "function", "<", "int", "()", ">", "Ġfn", ")", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġr", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", ";;", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġr", "Ġ=", "Ġfn", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "r", "Ġ==", "Ġ-", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġe", "Ġ=", "Ġerr", "no", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "e", "Ġ==", "ĠE", "IN", "TR", ")", "Ġcontinue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġabs", "l", "::", "Str", "Cat", "(", "name", ",", "Ġ\"", "Ġfailed", ":", "Ġerr", "no", "=", "\",", "Ġe", ",", "Ġ\"", "Ġ\",", "Ġstre", "r", "ror", "(", "e", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġr", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["fn", 5, "comesFrom", ["fn"], [2]], ["r", 6, "comesFrom", ["r"], [4]], ["r", 17, "comesFrom", ["r"], [4]], ["e", 9, "comesFrom", ["e"], [7]], ["e", 14, "comesFrom", ["e"], [7]], ["e", 16, "comesFrom", ["e"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::619", "code": "#include \"jd-util/Util.h\"\n\n#include <QRegularExpression>\n#include <vector>\n\n#include <catch.hpp>\n\nusing namespace JD::Util;\n\nTEST_CASE(\"Range works\") {\n\tstd::vector<int> values;\n\tfor (const int i : range(5)) {\n\t\tvalues.push_back(i);\n\t}\n\tREQUIRE(values == std::vector<int>({0, 1, 2, 3, 4}));\n}\n\nTEST_CASE(\"regexReplace\") {\n\tREQUIRE(regexReplace(\"abcdef\", QRegularExpression(\"[ace]\"), [](const QString &str) { return str.toUpper(); }) == \"AbCdEf\");\n\tREQUIRE(regexReplace(\"abcdef\", QRegularExpression(\"[ace]\"), [](const QString &str) { return str + str; }) == \"aabccdeef\");\n\tREQUIRE(regexReplace(\"abcdef\", QRegularExpression(\"[ace]\"), [](const QString &str) { return \"\"; }) == \"bdf\");\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "j", "d", "-", "util", "/", "Ut", "il", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Regular", "Exp", "ression", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "catch", ".", "h", "pp", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠJD", "::", "Ut", "il", ";", "Ċ", "Ċ", "T", "EST", "_", "C", "ASE", "(\"", "Range", "Ġworks", "\")", "Ġ{", "Ċ", "ĉ", "std", "::", "vector", "<", "int", ">", "Ġvalues", ";", "Ċ", "ĉ", "for", "Ġ(", "const", "Ġint", "Ġi", "Ġ:", "Ġrange", "(", "5", "))", "Ġ{", "Ċ", "ĉ", "ĉ", "values", ".", "push", "_", "back", "(", "i", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "RE", "QUIRE", "(", "values", "Ġ==", "Ġstd", "::", "vector", "<", "int", ">", "({", "0", ",", "Ġ1", ",", "Ġ2", ",", "Ġ3", ",", "Ġ4", "}", "));", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "_", "C", "ASE", "(\"", "re", "gex", "Re", "place", "\")", "Ġ{", "Ċ", "ĉ", "RE", "QUIRE", "(", "re", "gex", "Re", "place", "(\"", "abc", "def", "\",", "ĠQ", "Regular", "Exp", "ression", "(\"", "[", "ace", "]", "\"),", "Ġ[", "](", "const", "ĠQ", "String", "Ġ&", "str", ")", "Ġ{", "Ġreturn", "Ġstr", ".", "to", "U", "pper", "();", "Ġ})", "Ġ==", "Ġ\"", "Ab", "C", "d", "E", "f", "\");", "Ċ", "ĉ", "RE", "QUIRE", "(", "re", "gex", "Re", "place", "(\"", "abc", "def", "\",", "ĠQ", "Regular", "Exp", "ression", "(\"", "[", "ace", "]", "\"),", "Ġ[", "](", "const", "ĠQ", "String", "Ġ&", "str", ")", "Ġ{", "Ġreturn", "Ġstr", "Ġ+", "Ġstr", ";", "Ġ})", "Ġ==", "Ġ\"", "a", "ab", "cc", "de", "ef", "\");", "Ċ", "ĉ", "RE", "QUIRE", "(", "re", "gex", "Re", "place", "(\"", "abc", "def", "\",", "ĠQ", "Regular", "Exp", "ression", "(\"", "[", "ace", "]", "\"),", "Ġ[", "](", "const", "ĠQ", "String", "Ġ&", "str", ")", "Ġ{", "Ġreturn", "Ġ\"", "\";", "Ġ})", "Ġ==", "Ġ\"", "b", "df", "\");", "Ċ", "}", "Ċ"], "dataflow_graph": [["values", 5, "comesFrom", ["values"], [2]], ["values", 9, "comesFrom", ["values"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::620", "code": "#include \"Serial-solution.h\"\n#include \"Structures.h\"\n#include \"Verify.h\"\n\nvoid CheckDuplicatesSerially(const std::vector<CadPt2ID> &points, int gridSize)\n{\n\tstd::vector<std::pair<int, int>> duplicates;\n\n\tfor (auto outerPt : points)\n\t{\n\t\tfor (auto innerPt : points)\n\t\t{\n\t\t\tif (innerPt.id != outerPt.id && innerPt.pt == outerPt.pt) // coordinates are the same, but id's are different\n\t\t\t{\n\t\t\t\tduplicates.push_back(std::make_pair(innerPt.id, outerPt.id));\n\t\t\t}\n\t\t}\n\t}\n\n\t// Ensure first member of pair is less than second\n\tstd::transform(duplicates.begin(), duplicates.end(), duplicates.begin(), &OrderPair);\n\n\t// Sort vector to get pairs ordered adjacent to each other\n\tstd::sort(duplicates.begin(), duplicates.end(), &ComparePairs);\n\n\t// The vector now contains a,b entries as well as b,a. Ensure uniqueness.\n\tduplicates.erase(std::unique(duplicates.begin(), duplicates.end()), duplicates.end());\n\n\tif (settings.Verify)\n\t\tVerify(duplicates, gridSize);\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Serial", "-", "s", "olution", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Struct", "ures", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Ver", "ify", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠCheck", "Du", "pl", "icates", "Ser", "ially", "(", "const", "Ġstd", "::", "vector", "<", "C", "ad", "P", "t", "2", "ID", ">", "Ġ&", "points", ",", "Ġint", "Ġgrid", "Size", ")", "Ċ", "{", "Ċ", "ĉ", "std", "::", "vector", "<", "std", "::", "pair", "<", "int", ",", "Ġint", ">>", "Ġdupl", "icates", ";", "ĊĊ", "ĉ", "for", "Ġ(", "auto", "Ġouter", "P", "t", "Ġ:", "Ġpoints", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "auto", "Ġinner", "P", "t", "Ġ:", "Ġpoints", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "inner", "P", "t", ".", "id", "Ġ!=", "Ġouter", "P", "t", ".", "id", "Ġ&&", "Ġinner", "P", "t", ".", "pt", "Ġ==", "Ġouter", "P", "t", ".", "pt", ")", "Ġ//", "Ġcoordinates", "Ġare", "Ġthe", "Ġsame", ",", "Ġbut", "Ġid", "'s", "Ġare", "Ġdifferent", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "du", "pl", "icates", ".", "push", "_", "back", "(", "std", "::", "make", "_", "pair", "(", "inner", "P", "t", ".", "id", ",", "Ġouter", "P", "t", ".", "id", "));", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "//", "ĠEnsure", "Ġfirst", "Ġmember", "Ġof", "Ġpair", "Ġis", "Ġless", "Ġthan", "Ġsecond", "Ċ", "ĉ", "std", "::", "transform", "(", "du", "pl", "icates", ".", "begin", "(),", "Ġdupl", "icates", ".", "end", "(),", "Ġdupl", "icates", ".", "begin", "(),", "Ġ&", "Order", "P", "air", ");", "ĊĊ", "ĉ", "//", "ĠSort", "Ġvector", "Ġto", "Ġget", "Ġpairs", "Ġordered", "Ġadjacent", "Ġto", "Ġeach", "Ġother", "Ċ", "ĉ", "std", "::", "sort", "(", "du", "pl", "icates", ".", "begin", "(),", "Ġdupl", "icates", ".", "end", "(),", "Ġ&", "Compare", "P", "airs", ");", "ĊĊ", "ĉ", "//", "ĠThe", "Ġvector", "Ġnow", "Ġcontains", "Ġa", ",", "b", "Ġentries", "Ġas", "Ġwell", "Ġas", "Ġb", ",", "a", ".", "ĠEnsure", "Ġuniqueness", ".", "Ċ", "ĉ", "du", "pl", "icates", ".", "er", "ase", "(", "std", "::", "unique", "(", "du", "pl", "icates", ".", "begin", "(),", "Ġdupl", "icates", ".", "end", "()", "),", "Ġdupl", "icates", ".", "end", "());", "ĊĊ", "ĉ", "if", "Ġ(", "settings", ".", "Ver", "ify", ")", "Ċ", "ĉ", "ĉ", "Ver", "ify", "(", "du", "pl", "icates", ",", "Ġgrid", "Size", ");", "Ċ", "}"], "dataflow_graph": [["duplicates", 16, "comesFrom", ["duplicates"], [3]], ["duplicates", 24, "comesFrom", ["duplicates"], [3]], ["duplicates", 26, "comesFrom", ["duplicates"], [3]], ["duplicates", 28, "comesFrom", ["duplicates"], [3]], ["duplicates", 32, "comesFrom", ["duplicates"], [3]], ["duplicates", 34, "comesFrom", ["duplicates"], [3]], ["duplicates", 37, "comesFrom", ["duplicates"], [3]], ["duplicates", 40, "comesFrom", ["duplicates"], [3]], ["duplicates", 42, "comesFrom", ["duplicates"], [3]], ["duplicates", 44, "comesFrom", ["duplicates"], [3]], ["duplicates", 49, "comesFrom", ["duplicates"], [3]], ["gridSize", 50, "comesFrom", ["gridSize"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::621", "code": "#include \"FileRange.h\"\n#include <sstream>\n\nstd::string to_string(const FileRange& range)\n{\n\tstd::ostringstream stream;\n\n\tstream << \"bytes \" << range.begin() << \"-\" << range.end() << \"/\" << range.fileSize();\n\n\treturn stream.str();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "File", "Range", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "std", "::", "string", "Ġto", "_", "string", "(", "const", "ĠFile", "Range", "&", "Ġrange", ")", "Ċ", "{", "Ċ", "ĉ", "std", "::", "ost", "ring", "stream", "Ġstream", ";", "ĊĊ", "ĉ", "stream", "Ġ<<", "Ġ\"", "bytes", "Ġ\"", "Ġ<<", "Ġrange", ".", "begin", "()", "Ġ<<", "Ġ\"", "-\"", "Ġ<<", "Ġrange", ".", "end", "()", "Ġ<<", "Ġ\"/", "\"", "Ġ<<", "Ġrange", ".", "file", "Size", "();", "ĊĊ", "ĉ", "return", "Ġstream", ".", "str", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["stream", 3, "comesFrom", ["stream"], [2]], ["stream", 10, "comesFrom", ["stream"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::622", "code": "class Solution {\npublic:\n    int jumpFloor(int number) {\n        if (number<=2)\n        {\n        \treturn number;\n        }\n        int pre=1,post=2,result;\n        for (int i = 3; i <= number; ++i)\n        {\n        \tresult = pre+post;\n        \tpre = post;\n        \tpost = result;\n        }\n        return result;\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġjump", "Fl", "oor", "(", "int", "Ġnumber", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "number", "<", "=", "2", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "return", "Ġnumber", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġpre", "=", "1", ",", "post", "=", "2", ",", "result", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ3", ";", "Ġi", "Ġ<=", "Ġnumber", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "result", "Ġ=", "Ġpre", "+", "post", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "pre", "Ġ=", "Ġpost", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "post", "Ġ=", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["number", 2, "comesFrom", ["number"], [1]], ["number", 3, "comesFrom", ["number"], [1]], ["number", 9, "comesFrom", ["number"], [1]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["pre", 12, "comesFrom", ["pre"], [4]], ["post", 13, "comesFrom", ["post"], [5]], ["post", 15, "comesFrom", ["post"], [5]], ["result", 17, "comesFrom", ["result"], [11]], ["result", 18, "comesFrom", ["result"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::623", "code": "题目描述\n\nGiven two sorted integer arrays A and B, merge B into A as one sorted array.\n\nNote:\nYou may assume that A has enough space to hold additional elements from B. The number of elements initialized in A and B are m and n respectively. \n\nclass Solution {\npublic:\n    //时间复杂度为O(m+n),空间复杂度为O(1)\n    void merge(int A[], int m, int B[], int n) {\n        int ia = m - 1, ib = n - 1, icur = m + n - 1;\n        while(ia >= 0 && ib >= 0){\n            A[icur--] = A[ia] >= B[ib] ? A[ia--] : B[ib--];\n        }\n        while(ib >= 0)\n            A[icur--] = B[ib--];\n    }\n};\n", "code_tokens": ["Ġé", "¢", "ĺ", "çĽ", "®", "æ", "ı", "ı", "è¿", "°", "Ċ", "Ċ", "Given", "Ġtwo", "Ġsorted", "Ġinteger", "Ġarrays", "ĠA", "Ġand", "ĠB", ",", "Ġmerge", "ĠB", "Ġinto", "ĠA", "Ġas", "Ġone", "Ġsorted", "Ġarray", ".", "Ċ", "Ċ", "Note", ":", "Ċ", "You", "Ġmay", "Ġassume", "Ġthat", "ĠA", "Ġhas", "Ġenough", "Ġspace", "Ġto", "Ġhold", "Ġadditional", "Ġelements", "Ġfrom", "ĠB", ".", "ĠThe", "Ġnumber", "Ġof", "Ġelements", "Ġinitialized", "Ġin", "ĠA", "Ġand", "ĠB", "Ġare", "Ġm", "Ġand", "Ġn", "Ġrespectively", ".", "Ġ", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "æĹ", "¶", "éĹ", "´", "å¤", "į", "æĿ", "Ĥ", "åº", "¦", "ä¸", "º", "O", "(", "m", "+", "n", "),", "ç", "©", "º", "éĹ", "´", "å¤", "į", "æĿ", "Ĥ", "åº", "¦", "ä¸", "º", "O", "(", "1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġmerge", "(", "int", "ĠA", "[", "],", "Ġint", "Ġm", ",", "Ġint", "ĠB", "[", "],", "Ġint", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġ", "ia", "Ġ=", "Ġm", "Ġ-", "Ġ1", ",", "Ġib", "Ġ=", "Ġn", "Ġ-", "Ġ1", ",", "Ġic", "ur", "Ġ=", "Ġm", "Ġ+", "Ġn", "Ġ-", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "ia", "Ġ>=", "Ġ0", "Ġ&&", "Ġib", "Ġ>=", "Ġ0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠA", "[", "ic", "ur", "--", "]", "Ġ=", "ĠA", "[", "ia", "]", "Ġ>=", "ĠB", "[", "ib", "]", "Ġ?", "ĠA", "[", "ia", "--", "]", "Ġ:", "ĠB", "[", "ib", "--", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "ib", "Ġ>=", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠA", "[", "ic", "ur", "--", "]", "Ġ=", "ĠB", "[", "ib", "--", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["B", 8, "comesFrom", ["B"], [6]], ["B", 29, "comesFrom", ["B"], [6]], ["B", 38, "comesFrom", ["B"], [6]], ["B", 49, "comesFrom", ["B"], [6]], ["B", 64, "comesFrom", ["B"], [6]], ["B", 68, "comesFrom", ["B"], [6]], ["B", 74, "comesFrom", ["B"], [6]], ["ia", 58, "comesFrom", ["ia"], [51]], ["ia", 63, "comesFrom", ["ia"], [51]], ["ia", 67, "comesFrom", ["ia"], [51]], ["ib", 59, "comesFrom", ["ib"], [53]], ["ib", 65, "comesFrom", ["ib"], [53]], ["ib", 69, "comesFrom", ["ib"], [53]], ["ib", 71, "comesFrom", ["ib"], [53]], ["ib", 75, "comesFrom", ["ib"], [53]], ["icur", 61, "comesFrom", ["icur"], [55]], ["icur", 73, "comesFrom", ["icur"], [55]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::624", "code": "#include \"collpsetestform.h\"\n#include \"ui_collpsetestform.h\"\n\n#include \"collapseview.h\"\n\nCollpseTestForm::CollpseTestForm(QWidget *parent) :\n    QWidget(parent),\n    ui(new Ui::CollpseTestForm)\n{\n    ui->setupUi(this);\n\n    for(int i=0;i<6;i++){\n\n        ui->widget->layout()->addWidget(new CollapseView(this));\n\n    }\n}\n\nCollpseTestForm::~CollpseTestForm()\n{\n    delete ui;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "coll", "ps", "et", "est", "form", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "coll", "ps", "et", "est", "form", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "coll", "apse", "view", ".", "h", "\"", "Ċ", "Ċ", "Coll", "pse", "Test", "Form", "::", "Coll", "pse", "Test", "Form", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Widget", "(", "parent", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "(", "new", "ĠU", "i", "::", "Coll", "pse", "Test", "Form", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "setup", "U", "i", "(", "this", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "6", ";", "i", "++", "){", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġu", "i", "->", "widget", "->", "layout", "()", "->", "add", "Widget", "(", "new", "ĠColl", "apse", "View", "(", "this", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "Coll", "pse", "Test", "Form", "::", "~", "Coll", "pse", "Test", "Form", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġu", "i", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 8, "comesFrom", ["i"], [7]], ["i", 9, "comesFrom", ["i"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::625", "code": "#include <cstdio>\n#define MAX 999999\nint arr[MAX];\nint flag[MAX] = {0};\nint total;\nint main()\n{\n\tscanf(\"%d\", &total);\n\tfor(int i = 0; i<total; i++) {\n\t\tscanf(\"%d\", &arr[i]);\n\t\tflag[arr[i]]++;\n\t}\n\tfor(int i = 0; i<total; i++) {\n\t\tif(flag[arr[i]] == 1) {\n\t\t\tprintf(\"%d\", arr[i]);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"None\");\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "define", "ĠMAX", "Ġ999", "999", "Ċ", "int", "Ġarr", "[", "MAX", "];", "Ċ", "int", "Ġflag", "[", "MAX", "]", "Ġ=", "Ġ{", "0", "};", "Ċ", "int", "Ġtotal", ";", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "total", ");", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "total", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "arr", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "flag", "[", "arr", "[", "i", "]]", "++;", "Ċ", "ĉ", "}", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "total", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "(", "flag", "[", "arr", "[", "i", "]]", "Ġ==", "Ġ1", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "%", "d", "\",", "Ġarr", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "printf", "(\"", "None", "\");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["total", 8, "comesFrom", ["total"], [5]], ["total", 11, "comesFrom", ["total"], [5]], ["total", 21, "comesFrom", ["total"], [5]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]], ["i", 18, "comesFrom", ["i"], [9]], ["i", 20, "comesFrom", ["i"], [19]], ["i", 22, "comesFrom", ["i"], [19]], ["i", 25, "comesFrom", ["i"], [19]], ["i", 28, "comesFrom", ["i"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::626", "code": "// http://codeforces.com/problemset/problem/831/A\n#include <iostream>\n\nint main(int argc, char* argv[])\n{\n    int n;\n    std::cin >> n;\n\n    enum Mode { UP, CONST, DOWN };\n    int mode = Mode::UP;\n    int previous_a = -1;\n    bool good_sequence = true;\n    for (int i = 0, a = 0; i < n && good_sequence; i++, previous_a = a) {\n        std::cin >> a;\n        if ((a > previous_a && mode == Mode::UP)\n                || (a == previous_a && mode == Mode::CONST)\n                || (a < previous_a && mode == Mode::DOWN)) {\n        } else if (a == previous_a && mode == Mode::UP) {\n            mode = Mode::CONST;\n        } else if (a < previous_a && (mode == Mode::UP || mode == Mode::CONST)) {\n            mode = Mode::DOWN;\n        } else {\n            good_sequence = false;\n        }\n    }\n\n    std::cout << (good_sequence ? \"YES\" : \"NO\")\n              << std::endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ//", "Ġhttp", "://", "cod", "ef", "or", "ces", ".", "com", "/", "pro", "blems", "et", "/", "problem", "/", "8", "31", "/", "A", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cin", "Ġ>>", "Ġn", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġenum", "ĠMode", "Ġ{", "ĠUP", ",", "ĠCON", "ST", ",", "ĠDOWN", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġmode", "Ġ=", "ĠMode", "::", "UP", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġprevious", "_", "a", "Ġ=", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġgood", "_", "sequence", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ",", "Ġa", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", "Ġ&&", "Ġgood", "_", "sequence", ";", "Ġi", "++", ",", "Ġprevious", "_", "a", "Ġ=", "Ġa", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cin", "Ġ>>", "Ġa", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "a", "Ġ>", "Ġprevious", "_", "a", "Ġ&&", "Ġmode", "Ġ==", "ĠMode", "::", "UP", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ||", "Ġ(", "a", "Ġ==", "Ġprevious", "_", "a", "Ġ&&", "Ġmode", "Ġ==", "ĠMode", "::", "CON", "ST", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ||", "Ġ(", "a", "Ġ<", "Ġprevious", "_", "a", "Ġ&&", "Ġmode", "Ġ==", "ĠMode", "::", "DOWN", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "a", "Ġ==", "Ġprevious", "_", "a", "Ġ&&", "Ġmode", "Ġ==", "ĠMode", "::", "UP", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmode", "Ġ=", "ĠMode", "::", "CON", "ST", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "a", "Ġ<", "Ġprevious", "_", "a", "Ġ&&", "Ġ(", "mode", "Ġ==", "ĠMode", "::", "UP", "Ġ||", "Ġmode", "Ġ==", "ĠMode", "::", "CON", "ST", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmode", "Ġ=", "ĠMode", "::", "DOWN", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġgood", "_", "sequence", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ(", "good", "_", "sequence", "Ġ?", "Ġ\"", "YES", "\"", "Ġ:", "Ġ\"", "NO", "\")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [3]], ["n", 16, "comesFrom", ["n"], [3]], ["i", 15, "comesFrom", ["i"], [13]], ["i", 18, "comesFrom", ["i"], [13]], ["good_sequence", 17, "comesFrom", ["good_sequence"], [12]], ["good_sequence", 51, "comesFrom", ["good_sequence"], [49]], ["a", 20, "comesFrom", ["a"], [14]], ["a", 22, "comesFrom", ["a"], [14]], ["a", 23, "comesFrom", ["a"], [14]], ["a", 27, "comesFrom", ["a"], [14]], ["a", 31, "comesFrom", ["a"], [14]], ["a", 35, "comesFrom", ["a"], [14]], ["a", 41, "comesFrom", ["a"], [14]], ["previous_a", 24, "comesFrom", ["previous_a"], [19]], ["previous_a", 28, "comesFrom", ["previous_a"], [19]], ["previous_a", 32, "comesFrom", ["previous_a"], [19]], ["previous_a", 36, "comesFrom", ["previous_a"], [19]], ["previous_a", 42, "comesFrom", ["previous_a"], [19]], ["mode", 25, "comesFrom", ["mode"], [9]], ["mode", 29, "comesFrom", ["mode"], [9]], ["mode", 33, "comesFrom", ["mode"], [9]], ["mode", 37, "comesFrom", ["mode"], [9]], ["mode", 43, "comesFrom", ["mode"], [39]], ["mode", 45, "comesFrom", ["mode"], [39]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::627", "code": "// Run TCG with a small trust-region radius.  This verifies that the algorithm\n// will not violate the trust-region radius and that the final solution will\n// touch the radius.\n\n#include \"linear_algebra.h\"\n#include \"spaces.h\"\n\nint main() {\n    // Setup the problem\n    auto setup = Unit::tcg <Real,Rm> ();\n\n    // Problem setup\n    setup.A = std::make_unique <Matrix>(\n        Unit::Matrix <Real>::symmetric(setup.m,0));\n    setup.b = std::make_unique <Vector> (Unit::Vector <Real>::basic(setup.m));\n    setup.delta = Real(1e-3);\n    setup.iter_max = 1;\n\n    // Target solutions\n    setup.iter_star = 1;\n    setup.stop_star = Optizelle::TruncatedStop::TrustRegionViolated;\n\n    // Tests\n    setup.check_cp = true;\n    setup.check_tr = true;\n    setup.check_iter = true;\n    setup.check_stop = true;\n\n    // Check the solver\n    Unit::run_and_verify <Real,Rm> (setup);\n\n    // Declare success\n    return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ġ//", "ĠRun", "ĠTC", "G", "Ġwith", "Ġa", "Ġsmall", "Ġtrust", "-", "region", "Ġradius", ".", "Ġ", "ĠThis", "Ġver", "ifies", "Ġthat", "Ġthe", "Ġalgorithm", "Ċ", "//", "Ġwill", "Ġnot", "Ġviolate", "Ġthe", "Ġtrust", "-", "region", "Ġradius", "Ġand", "Ġthat", "Ġthe", "Ġfinal", "Ġsolution", "Ġwill", "Ċ", "//", "Ġtouch", "Ġthe", "Ġradius", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "linear", "_", "al", "gebra", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sp", "aces", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠSetup", "Ġthe", "Ġproblem", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġsetup", "Ġ=", "ĠUnit", "::", "tc", "g", "Ġ<", "Real", ",", "R", "m", ">", "Ġ();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠProblem", "Ġsetup", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "A", "Ġ=", "Ġstd", "::", "make", "_", "unique", "Ġ<", "Matrix", ">(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠUnit", "::", "Matrix", "Ġ<", "Real", ">", "::", "sy", "mm", "etric", "(", "setup", ".", "m", ",", "0", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "b", "Ġ=", "Ġstd", "::", "make", "_", "unique", "Ġ<", "Vector", ">", "Ġ(", "Unit", "::", "Vector", "Ġ<", "Real", ">", "::", "basic", "(", "setup", ".", "m", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "d", "elta", "Ġ=", "ĠReal", "(", "1", "e", "-", "3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "iter", "_", "max", "Ġ=", "Ġ1", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠTarget", "Ġsolutions", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "iter", "_", "star", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "stop", "_", "star", "Ġ=", "ĠOpt", "iz", "elle", "::", "Tr", "unc", "ated", "Stop", "::", "Trust", "Region", "Viol", "ated", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠTests", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "check", "_", "cp", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "check", "_", "tr", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "check", "_", "iter", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "check", "_", "stop", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠCheck", "Ġthe", "Ġsol", "ver", "Ċ", "Ġ", "Ġ", "Ġ", "ĠUnit", "::", "run", "_", "and", "_", "ver", "ify", "Ġ<", "Real", ",", "R", "m", ">", "Ġ(", "setup", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠDecl", "are", "Ġsuccess", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["setup", 3, "comesFrom", ["setup"], [1]], ["setup", 7, "comesFrom", ["setup"], [1]], ["setup", 9, "comesFrom", ["setup"], [1]], ["setup", 13, "comesFrom", ["setup"], [1]], ["setup", 15, "comesFrom", ["setup"], [1]], ["setup", 18, "comesFrom", ["setup"], [1]], ["setup", 20, "comesFrom", ["setup"], [1]], ["setup", 22, "comesFrom", ["setup"], [1]], ["setup", 25, "comesFrom", ["setup"], [1]], ["setup", 27, "comesFrom", ["setup"], [1]], ["setup", 29, "comesFrom", ["setup"], [1]], ["setup", 31, "comesFrom", ["setup"], [1]], ["setup", 34, "comesFrom", ["setup"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::628", "code": "/*\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n#include \"BigValueRoute.h\"\n\n#include \"mcrouter/routes/McRouteHandleBuilder.h\"\n#include \"mcrouter/routes/McrouterRouteHandle.h\"\n\nnamespace facebook { namespace memcache { namespace mcrouter {\n\nMcrouterRouteHandlePtr makeBigValueRoute(McrouterRouteHandlePtr rh,\n                                         BigValueRouteOptions options) {\n  return makeMcrouterRouteHandle<BigValueRoute>(\n    std::move(rh),\n    std::move(options));\n}\n\n}}}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", ",", "ĠFacebook", ",", "ĠInc", ".", "Ċ", "Ġ*", "Ġ", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġsource", "Ġcode", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "ĠB", "SD", "-", "style", "Ġlicense", "Ġfound", "Ġin", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠLIC", "ENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġdirectory", "Ġof", "Ġthis", "Ġsource", "Ġtree", ".", "ĠAn", "Ġadditional", "Ġgrant", "Ċ", "Ġ*", "Ġ", "Ġof", "Ġpatent", "Ġrights", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠPAT", "ENTS", "Ġfile", "Ġin", "Ġthe", "Ġsame", "Ġdirectory", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "Big", "Value", "Route", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "mc", "rou", "ter", "/", "r", "out", "es", "/", "Mc", "Route", "Handle", "Builder", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mc", "rou", "ter", "/", "r", "out", "es", "/", "Mc", "rou", "ter", "Route", "Handle", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġfacebook", "Ġ{", "Ġnamespace", "Ġmem", "cache", "Ġ{", "Ġnamespace", "Ġmc", "rou", "ter", "Ġ{", "Ċ", "Ċ", "Mc", "rou", "ter", "Route", "Handle", "Ptr", "Ġmake", "Big", "Value", "Route", "(", "Mc", "rou", "ter", "Route", "Handle", "Ptr", "Ġrh", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠBig", "Value", "Route", "Options", "Ġoptions", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġmake", "Mc", "rou", "ter", "Route", "Handle", "<", "Big", "Value", "Route", ">(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "move", "(", "rh", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "move", "(", "options", "));", "Ċ", "}", "Ċ", "Ċ", "}}}", "Ċ"], "dataflow_graph": [["rh", 5, "comesFrom", ["rh"], [1]], ["options", 7, "comesFrom", ["options"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::629", "code": "/*\r\n*  2007  2013 Copyright Northwestern University\r\n*\r\n*  Distributed under the OSI-approved BSD 3-Clause License.\r\n*  See http://ncip.github.com/annotation-and-image-markup/LICENSE.txt for details.\r\n*/\r\n\r\n\r\n#include \"../stdafx.h\"\r\n\r\n#include <limits.h>\r\n\r\n#include \"AimBase.h\"\r\n#include \"CharacteristicQuantification.h\"\r\n#include \"Quantile.h\"\r\n\r\n#include \"../memdebug.h\"\r\n\r\nusing std::string;\r\nusing namespace aim_lib;\r\n\r\nQuantile::Quantile(void) : CharacteristicQuantification(C_QUANTIFICATION_QUANTILE_NAME)\r\n{\r\n\t_bin = INT_MIN;\r\n}\r\n\r\nQuantile::Quantile(const Quantile& quantile) : CharacteristicQuantification(quantile)\r\n{\r\n\t*this = quantile;\r\n}\r\n\r\nQuantile::~Quantile(void)\r\n{\r\n}\r\n\r\nQuantile& Quantile::operator=(const Quantile& quantile)\r\n{\r\n\tif (this != &quantile)\r\n\t{\r\n\t\tCharacteristicQuantification::operator=(quantile);\r\n\t\t_bin = quantile._bin;\r\n\t}\r\n\r\n\treturn *this;\r\n}\r\n\r\nQuantile* Quantile::Clone() const\r\n{\r\n\treturn new Quantile(*this);\r\n}\r\n\r\nint Quantile::GetBin() const\r\n{\r\n\treturn _bin;\r\n}\r\n\r\nvoid Quantile::SetBin(int newVal)\r\n{\r\n\t_bin = newVal;\r\n}\r\n", "code_tokens": ["Ġ/*", "č", "Ċ", "*", "Ġ", "Ġ2007", "ĠÂ", "ĸ", "Ġ2013", "ĠCopyright", "ĠNorthwestern", "ĠUniversity", "č", "Ċ", "*", "č", "Ċ", "*", "Ġ", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠOS", "I", "-", "approved", "ĠB", "SD", "Ġ3", "-", "Cl", "ause", "ĠLicense", ".", "č", "Ċ", "*", "Ġ", "ĠSee", "Ġhttp", "://", "nc", "ip", ".", "github", ".", "com", "/", "ann", "otation", "-", "and", "-", "image", "-", "mark", "up", "/", "L", "IC", "ENSE", ".", "txt", "Ġfor", "Ġdetails", ".", "č", "Ċ", "*/", "č", "Ċ", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "../", "std", "af", "x", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "limits", ".", "h", ">", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Aim", "Base", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Character", "istic", "Quant", "ification", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Quant", "ile", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "../", "mem", "debug", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġstd", "::", "string", ";", "č", "Ċ", "using", "Ġnamespace", "Ġaim", "_", "lib", ";", "č", "Ċ", "č", "Ċ", "Quant", "ile", "::", "Quant", "ile", "(", "void", ")", "Ġ:", "ĠCharacter", "istic", "Quant", "ification", "(", "C", "_", "QU", "ANT", "IFIC", "ATION", "_", "QU", "ANT", "ILE", "_", "NAME", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "_", "bin", "Ġ=", "ĠINT", "_", "MIN", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Quant", "ile", "::", "Quant", "ile", "(", "const", "ĠQuant", "ile", "&", "Ġquant", "ile", ")", "Ġ:", "ĠCharacter", "istic", "Quant", "ification", "(", "quant", "ile", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "*", "this", "Ġ=", "Ġquant", "ile", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Quant", "ile", "::", "~", "Quant", "ile", "(", "void", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Quant", "ile", "&", "ĠQuant", "ile", "::", "operator", "=(", "const", "ĠQuant", "ile", "&", "Ġquant", "ile", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "if", "Ġ(", "this", "Ġ!=", "Ġ&", "quant", "ile", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "Character", "istic", "Quant", "ification", "::", "operator", "=(", "quant", "ile", ");", "č", "Ċ", "ĉ", "ĉ", "_", "bin", "Ġ=", "Ġquant", "ile", "._", "bin", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "return", "Ġ*", "this", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Quant", "ile", "*", "ĠQuant", "ile", "::", "Cl", "one", "()", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġnew", "ĠQuant", "ile", "(*", "this", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠQuant", "ile", "::", "Get", "B", "in", "()", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġ_", "bin", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠQuant", "ile", "::", "Set", "B", "in", "(", "int", "Ġnew", "Val", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "_", "bin", "Ġ=", "Ġnew", "Val", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["_bin", 18, "comesFrom", ["_bin"], [16]], ["_bin", 21, "comesFrom", ["_bin"], [16]], ["newVal", 25, "comesFrom", ["newVal"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::630", "code": "\n#include \"increment.h\"\n#include \"dummy.h\"\n\n//int x = 0;\n\nNBCounter::NBCounter(int k /*= 0*/) {\n\tx = k;\n\tint status = pthread_mutex_init(&mutex, NULL);\n\tif (status != 0) exit(-1);\n}\n\nNBCounter::~NBCounter() {\n\tpthread_mutex_destroy(&mutex);\n}\n\nvoid NBCounter::increment() {\n\n\tconcurritStartInstrument();\n\n\twhile(true) {\n\t\tlong int t = x;\n\t\tlong int k = t + 1;\n\n\t\tprintf(\"---------------------- INCREMENT READS FROM X\\n\");\n\n\t\tlock();\n\t\tif(x == t) {\n\t\t\tx = k;\n\t\t\tunlock();\n\t\t\tprintf(\"---------------------- INCREMENT SUCCEEDS\\n\");\n\t\t\tbreak;\n\t\t}\n\t\tunlock();\n\t\tprintf(\"---------------------- INCREMENT RETRYING\\n\");\n\n\t}\n\n\tconcurritEndInstrument();\n}\n\nint NBCounter::get() {\n\treturn x;\n}\n\nvoid NBCounter::set(int k) {\n\tx = k;\n}\n\nvoid* NBCounter::x_address() {\n\treturn (&x);\n}\n\nvoid NBCounter::lock() {\n\tpthread_mutex_lock(&mutex);\n}\n\nvoid NBCounter::unlock() {\n\tpthread_mutex_unlock(&mutex);\n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "incre", "ment", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "d", "ummy", ".", "h", "\"", "Ċ", "Ċ", "//", "int", "Ġx", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "NBC", "ounter", "::", "NBC", "ounter", "(", "int", "Ġk", "Ġ/*", "=", "Ġ0", "*/", ")", "Ġ{", "Ċ", "ĉ", "x", "Ġ=", "Ġk", ";", "Ċ", "ĉ", "int", "Ġstatus", "Ġ=", "Ġp", "thread", "_", "mut", "ex", "_", "init", "(&", "mut", "ex", ",", "ĠNULL", ");", "Ċ", "ĉ", "if", "Ġ(", "status", "Ġ!=", "Ġ0", ")", "Ġexit", "(-", "1", ");", "Ċ", "}", "Ċ", "Ċ", "NBC", "ounter", "::", "~", "NBC", "ounter", "()", "Ġ{", "Ċ", "ĉ", "p", "thread", "_", "mut", "ex", "_", "destroy", "(&", "mut", "ex", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNBC", "ounter", "::", "incre", "ment", "()", "Ġ{", "ĊĊ", "ĉ", "con", "cur", "rit", "Start", "In", "strument", "();", "ĊĊ", "ĉ", "while", "(", "true", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "long", "Ġint", "Ġt", "Ġ=", "Ġx", ";", "Ċ", "ĉ", "ĉ", "long", "Ġint", "Ġk", "Ġ=", "Ġt", "Ġ+", "Ġ1", ";", "ĊĊ", "ĉ", "ĉ", "printf", "(\"", "--------------------", "--", "ĠINC", "RE", "MENT", "ĠREAD", "S", "ĠFROM", "ĠX", "\\", "n", "\");", "ĊĊ", "ĉ", "ĉ", "lock", "();", "Ċ", "ĉ", "ĉ", "if", "(", "x", "Ġ==", "Ġt", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "x", "Ġ=", "Ġk", ";", "Ċ", "ĉ", "ĉ", "ĉ", "un", "lock", "();", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "--------------------", "--", "ĠINC", "RE", "MENT", "ĠSU", "CC", "EED", "S", "\\", "n", "\");", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "un", "lock", "();", "Ċ", "ĉ", "ĉ", "printf", "(\"", "--------------------", "--", "ĠINC", "RE", "MENT", "ĠRET", "RY", "ING", "\\", "n", "\");", "ĊĊ", "ĉ", "}", "ĊĊ", "ĉ", "con", "cur", "rit", "End", "In", "strument", "();", "Ċ", "}", "Ċ", "Ċ", "int", "ĠNBC", "ounter", "::", "get", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġx", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNBC", "ounter", "::", "set", "(", "int", "Ġk", ")", "Ġ{", "Ċ", "ĉ", "x", "Ġ=", "Ġk", ";", "Ċ", "}", "Ċ", "Ċ", "void", "*", "ĠNBC", "ounter", "::", "x", "_", "address", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġ(&", "x", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNBC", "ounter", "::", "lock", "()", "Ġ{", "Ċ", "ĉ", "p", "thread", "_", "mut", "ex", "_", "lock", "(&", "mut", "ex", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠNBC", "ounter", "::", "un", "lock", "()", "Ġ{", "Ċ", "ĉ", "p", "thread", "_", "mut", "ex", "_", "un", "lock", "(&", "mut", "ex", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["k", 3, "comesFrom", ["k"], [1]], ["k", 23, "comesFrom", ["k"], [16]], ["k", 34, "comesFrom", ["k"], [32]], ["status", 7, "comesFrom", ["status"], [4]], ["t", 17, "comesFrom", ["t"], [14]], ["t", 21, "comesFrom", ["t"], [14]], ["x", 20, "comesFrom", ["x"], [15]], ["x", 30, "comesFrom", ["x"], [22]], ["x", 36, "comesFrom", ["x"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::631", "code": "#include \"Motor.h\"\n\n\nusing namespace A2O;\n\nMotor::Motor(IActuatorConfig::ConstPtr config)\n      : Actuator(config), _speed(0), _stopWatch(new Stopwatch())\n{\n\n}\n\nMotor::~Motor()\n{\n  if (_stopWatch != nullptr) {\n    delete _stopWatch;\n    _stopWatch = nullptr;\n  }\n}\n\nconst double& Motor::getSpeed() const\n{\n  return _speed; \n}\n\nvoid Motor::setSpeed(const double& speed)\n{\n  _speed = speed;\n}\n\nconst bool Motor::update(IPerception::ConstPtr perception)\n{\n  if (_stopWatch != nullptr) {\n    _stopWatch->start();\n\n    if (_stopWatch->elapsedTimeMs() > 6000) {\n      delete _stopWatch;\n      _stopWatch = nullptr;\n    }\n  }\n\n  return false;\n}\n\nconst bool Motor::reflectAction(IAction::Ptr action) const\n{\n  IDoubleValueEffector::Ptr valueEffector = action->getMotorEffector(_effectorName);\n  \n  if (valueEffector.get()) {\n    valueEffector->setValue(_speed, 0);\n    return true;\n  }\n  \n  return false;\n}\n\nconst bool Motor::isInitialized() const\n{\n  return _stopWatch == nullptr;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Motor", ".", "h", "\"", "ĊĊ", "Ċ", "using", "Ġnamespace", "ĠA", "2", "O", ";", "Ċ", "Ċ", "Motor", "::", "Motor", "(", "IA", "ct", "u", "ator", "Config", "::", "Const", "Ptr", "Ġconfig", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠAct", "u", "ator", "(", "config", "),", "Ġ_", "speed", "(", "0", "),", "Ġ_", "stop", "Watch", "(", "new", "ĠStop", "watch", "())", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Motor", "::", "~", "Motor", "()", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(_", "stop", "Watch", "Ġ!=", "Ġnull", "ptr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġ_", "stop", "Watch", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "stop", "Watch", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "const", "Ġdouble", "&", "ĠMotor", "::", "get", "Speed", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ_", "speed", ";", "Ġ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMotor", "::", "set", "Speed", "(", "const", "Ġdouble", "&", "Ġspeed", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ_", "speed", "Ġ=", "Ġspeed", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġbool", "ĠMotor", "::", "update", "(", "IP", "er", "ception", "::", "Const", "Ptr", "Ġperception", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(_", "stop", "Watch", "Ġ!=", "Ġnull", "ptr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "stop", "Watch", "->", "start", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(_", "stop", "Watch", "->", "el", "apsed", "Time", "Ms", "()", "Ġ>", "Ġ6000", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġ_", "stop", "Watch", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ_", "stop", "Watch", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġbool", "ĠMotor", "::", "reflect", "Action", "(", "IA", "ction", "::", "Ptr", "Ġaction", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠID", "ouble", "Value", "Effect", "or", "::", "Ptr", "Ġvalue", "Effect", "or", "Ġ=", "Ġaction", "->", "get", "Motor", "Effect", "or", "(_", "effect", "or", "Name", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġif", "Ġ(", "value", "Effect", "or", ".", "get", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvalue", "Effect", "or", "->", "set", "Value", "(_", "speed", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġbool", "ĠMotor", "::", "is", "Initialized", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ_", "stop", "Watch", "Ġ==", "Ġnull", "ptr", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["config", 4, "comesFrom", ["config"], [2]], ["_speed", 36, "comesFrom", ["_speed"], [15]], ["_stopWatch", 19, "comesFrom", ["_stopWatch"], [10]], ["_stopWatch", 20, "comesFrom", ["_stopWatch"], [10]], ["_stopWatch", 22, "comesFrom", ["_stopWatch"], [10]], ["_stopWatch", 24, "comesFrom", ["_stopWatch"], [10]], ["_stopWatch", 38, "comesFrom", ["_stopWatch"], [25]], ["action", 29, "comesFrom", ["action"], [27]], ["valueEffector", 32, "comesFrom", ["valueEffector"], [28]], ["valueEffector", 34, "comesFrom", ["valueEffector"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::632", "code": "// Copyright (c) 2011-2013 The Octocoin developers\n// Distributed under the MIT/X11 software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"qvaluecombobox.h\"\n\nQValueComboBox::QValueComboBox(QWidget *parent) :\n        QComboBox(parent), role(Qt::UserRole)\n{\n    connect(this, SIGNAL(currentIndexChanged(int)), this, SLOT(handleSelectionChanged(int)));\n}\n\nQVariant QValueComboBox::value() const\n{\n    return itemData(currentIndex(), role);\n}\n\nvoid QValueComboBox::setValue(const QVariant &value)\n{\n    setCurrentIndex(findData(value, role));\n}\n\nvoid QValueComboBox::setRole(int role)\n{\n    this->role = role;\n}\n\nvoid QValueComboBox::handleSelectionChanged(int idx)\n{\n    emit valueChanged();\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "-", "2013", "ĠThe", "ĠOct", "oco", "in", "Ġdevelopers", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠMIT", "/", "X", "11", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġaccompanying", "Ċ", "//", "Ġfile", "ĠCOP", "YING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "q", "value", "comb", "ob", "ox", ".", "h", "\"", "Ċ", "Ċ", "Q", "Value", "Com", "bo", "Box", "::", "Q", "Value", "Com", "bo", "Box", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "Com", "bo", "Box", "(", "parent", "),", "Ġrole", "(", "Q", "t", "::", "User", "Role", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconnect", "(", "this", ",", "ĠSIGN", "AL", "(", "current", "Index", "Changed", "(", "int", ")),", "Ġthis", ",", "ĠSL", "OT", "(", "handle", "Se", "lection", "Changed", "(", "int", "))", ");", "Ċ", "}", "Ċ", "Ċ", "Q", "Vari", "ant", "ĠQ", "Value", "Com", "bo", "Box", "::", "value", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġitem", "Data", "(", "current", "Index", "(),", "Ġrole", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "Com", "bo", "Box", "::", "set", "Value", "(", "const", "ĠQ", "Vari", "ant", "Ġ&", "value", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Current", "Index", "(", "find", "Data", "(", "value", ",", "Ġrole", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "Com", "bo", "Box", "::", "set", "Role", "(", "int", "Ġrole", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "role", "Ġ=", "Ġrole", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠQ", "Value", "Com", "bo", "Box", "::", "handle", "Se", "lection", "Changed", "(", "int", "Ġid", "x", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġemit", "Ġvalue", "Changed", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["role", 19, "comesFrom", ["role"], [18]], ["role", 20, "comesFrom", ["role"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::633", "code": "class Solution {\n    \n    void help(vector<vector<int>>& result, int begin, vector<int> &num)\n    {\n        if (begin == num.size()) {\n            result.emplace(result.end(), num);\n            return;\n        }\n            \n        for (int i = begin; i < num.size();i++)\n        {\n            swap(num[begin], num[i]);\n            help(result, begin+1, num);\n            swap(num[begin], num[i]);\n        }\n    }\n    \npublic:\n    vector<vector<int> > permute(vector<int> &num) {\n        vector<vector<int>> result;\n        help(result, 0, num);\n        return result;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġhelp", "(", "vector", "<", "vector", "<", "int", ">>", "&", "Ġresult", ",", "Ġint", "Ġbegin", ",", "Ġvector", "<", "int", ">", "Ġ&", "num", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "begin", "Ġ==", "Ġnum", ".", "size", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", ".", "em", "place", "(", "result", ".", "end", "(),", "Ġnum", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġbegin", ";", "Ġi", "Ġ<", "Ġnum", ".", "size", "();", "i", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġswap", "(", "num", "[", "begin", "],", "Ġnum", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhelp", "(", "result", ",", "Ġbegin", "+", "1", ",", "Ġnum", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġswap", "(", "num", "[", "begin", "],", "Ġnum", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "vector", "<", "int", ">", "Ġ>", "Ġperm", "ute", "(", "vector", "<", "int", ">", "Ġ&", "num", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "vector", "<", "int", ">>", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhelp", "(", "result", ",", "Ġ0", ",", "Ġnum", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["result", 36, "comesFrom", ["result"], [34]], ["result", 38, "comesFrom", ["result"], [34]], ["begin", 4, "comesFrom", ["begin"], [2]], ["begin", 20, "comesFrom", ["begin"], [13]], ["begin", 25, "comesFrom", ["begin"], [13]], ["begin", 29, "comesFrom", ["begin"], [13]], ["i", 14, "comesFrom", ["i"], [12]], ["i", 17, "comesFrom", ["i"], [12]], ["i", 22, "comesFrom", ["i"], [12]], ["i", 31, "comesFrom", ["i"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::634", "code": "#include \"StdAfx.h\"\r\n#include \"XmlAttribute.h\"\r\n#include \"ControlCheckBox.h\"\r\n#include \"InstallerSession.h\"\r\n#include \"InstallerLog.h\"\r\n\r\nControlCheckBox::ControlCheckBox()\r\n: ControlText(control_type_checkbox),\r\nchecked(false)\r\n{\r\n\r\n}\r\n\r\nvoid ControlCheckBox::Load(tinyxml2::XMLElement * node)\r\n{\r\n    checked = XmlAttribute(node->Attribute(\"checked\")).GetBoolValue(false);\r\n    id = node->Attribute(\"id\");\r\n    checked_value = node->Attribute(\"checked_value\");\r\n    unchecked_value = node->Attribute(\"unchecked_value\");\r\n    ControlText::Load(node);\r\n}\r\n\r\nstd::wstring ControlCheckBox::GetString() const\r\n{\r\n    std::wstringstream ss;\r\n    ss << L\"'checkbox' control, id=\" << id << L\", \" << ControlText::GetString();\r\n    return ss.str();\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "St", "d", "Af", "x", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "X", "ml", "Attribute", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Control", "Check", "Box", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Install", "er", "Session", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Install", "er", "Log", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "Control", "Check", "Box", "::", "Control", "Check", "Box", "()", "č", "Ċ", ":", "ĠControl", "Text", "(", "control", "_", "type", "_", "check", "box", "),", "č", "Ċ", "checked", "(", "false", ")", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠControl", "Check", "Box", "::", "Load", "(", "tiny", "xml", "2", "::", "XM", "LE", "lement", "Ġ*", "Ġnode", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchecked", "Ġ=", "ĠX", "ml", "Attribute", "(", "node", "->", "Attribute", "(\"", "checked", "\")", ").", "Get", "B", "ool", "Value", "(", "false", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġid", "Ġ=", "Ġnode", "->", "Attribute", "(\"", "id", "\");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchecked", "_", "value", "Ġ=", "Ġnode", "->", "Attribute", "(\"", "checked", "_", "value", "\");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunchecked", "_", "value", "Ġ=", "Ġnode", "->", "Attribute", "(\"", "un", "checked", "_", "value", "\");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠControl", "Text", "::", "Load", "(", "node", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "std", "::", "w", "string", "ĠControl", "Check", "Box", "::", "Get", "String", "()", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "w", "string", "stream", "Ġss", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "ĠL", "\"'", "check", "box", "'", "Ġcontrol", ",", "Ġid", "=\"", "Ġ<<", "Ġid", "Ġ<<", "ĠL", "\",", "Ġ\"", "Ġ<<", "ĠControl", "Text", "::", "Get", "String", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġss", ".", "str", "();", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["ss", 24, "comesFrom", ["ss"], [23]], ["ss", 27, "comesFrom", ["ss"], [23]], ["id", 25, "comesFrom", ["id"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::635", "code": "#include<bits/stdc++.h>\n#define ll long long int\n\nusing namespace std;\n\nint main()\n{\n   \tll t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n    \tll num,cpy,digit;\n    \tscanf(\"%lld\",&num);\n    \tcpy=num;\n    \twhile(cpy){\n    \t\tdigit=cpy%10;\n\n    \t\tif(digit!=0 && (num%digit)!=0)\n    \t\t\tbreak;\n    \t\tcpy/=10;\n    \t\t\t\n    \t\t\n    \t}\t\n    \tif(cpy==0 && num!=0)\n    \t\tprintf(\"yes\\n\");\n    \telse\n    \t\tprintf(\"no\\n\");\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "#", "define", "Ġll", "Ġlong", "Ġlong", "Ġint", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĉ", "ll", "Ġt", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "ll", "d", "\",", "&", "t", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "t", "--", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ll", "Ġnum", ",", "c", "py", ",", "digit", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "scan", "f", "(\"", "%", "ll", "d", "\",", "&", "num", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "c", "py", "=", "num", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "while", "(", "c", "py", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "digit", "=", "c", "py", "%", "10", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "if", "(", "digit", "!", "=", "0", "Ġ&&", "Ġ(", "num", "%", "digit", ")!", "=", "0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "c", "py", "/", "=", "10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "ĉ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "}", "ĉ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "if", "(", "c", "py", "==", "0", "Ġ&&", "Ġnum", "!", "=", "0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "printf", "(\"", "yes", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "else", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "ĉ", "printf", "(\"", "no", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["t", 5, "comesFrom", ["t"], [3]], ["t", 6, "comesFrom", ["t"], [3]], ["num", 11, "comesFrom", ["num"], [7]], ["num", 13, "comesFrom", ["num"], [7]], ["num", 18, "comesFrom", ["num"], [7]], ["num", 22, "comesFrom", ["num"], [7]], ["cpy", 14, "comesFrom", ["cpy"], [12]], ["cpy", 16, "comesFrom", ["cpy"], [12]], ["cpy", 21, "comesFrom", ["cpy"], [20]], ["digit", 17, "comesFrom", ["digit"], [15]], ["digit", 19, "comesFrom", ["digit"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::636", "code": "#define _CRT_SECURE_NO_WARNINGS\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n#define MAXN 30010\nint set[MAXN], cnt[MAXN];\nint n, m;\n\nint findset(int x) {\n\treturn set[x] == x ? x : set[x] = findset(set[x]);\n}\n\nint main() {\n\tint nCase;\n\tscanf(\"%d\", &nCase);\n\twhile (nCase--) {\n\t\tint n, m;\n\t\tscanf(\"%d %d\", &n, &m);\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tset[i] = i;\n\t\t\tcnt[i] = 0;\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tint a, b, x, y;\n\t\t\tscanf(\"%d %d\", &a, &b);\n\t\t\tx = findset(a);\n\t\t\ty = findset(b);\n\t\t\tif (x != y) set[x] = y;\n\t\t}\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tcnt[findset(i)]++;\n\t\t}\n\n\t\tint max = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (cnt[i] > max)\n\t\t\t\tmax = cnt[i];\n\t\t}\n\t\tprintf(\"%d\\n\", max);\n\t}\n\treturn 0;\n}", "code_tokens": ["Ġ#", "define", "Ġ_", "CR", "T", "_", "SEC", "URE", "_", "NO", "_", "WARNING", "S", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "define", "ĠMAX", "N", "Ġ300", "10", "Ċ", "int", "Ġset", "[", "MAX", "N", "],", "Ġc", "nt", "[", "MAX", "N", "];", "Ċ", "int", "Ġn", ",", "Ġm", ";", "Ċ", "Ċ", "int", "Ġfind", "set", "(", "int", "Ġx", ")", "Ġ{", "Ċ", "ĉ", "return", "Ġset", "[", "x", "]", "Ġ==", "Ġx", "Ġ?", "Ġx", "Ġ:", "Ġset", "[", "x", "]", "Ġ=", "Ġfind", "set", "(", "set", "[", "x", "]);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "int", "Ġn", "Case", ";", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", "Case", ");", "Ċ", "ĉ", "while", "Ġ(", "n", "Case", "--", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "Ġn", ",", "Ġm", ";", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "Ġ%", "d", "\",", "Ġ&", "n", ",", "Ġ&", "m", ");", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "set", "[", "i", "]", "Ġ=", "Ġi", ";", "Ċ", "ĉ", "ĉ", "ĉ", "c", "nt", "[", "i", "]", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġm", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "int", "Ġa", ",", "Ġb", ",", "Ġx", ",", "Ġy", ";", "Ċ", "ĉ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "Ġ%", "d", "\",", "Ġ&", "a", ",", "Ġ&", "b", ");", "Ċ", "ĉ", "ĉ", "ĉ", "x", "Ġ=", "Ġfind", "set", "(", "a", ");", "Ċ", "ĉ", "ĉ", "ĉ", "y", "Ġ=", "Ġfind", "set", "(", "b", ");", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "x", "Ġ!=", "Ġy", ")", "Ġset", "[", "x", "]", "Ġ=", "Ġy", ";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "c", "nt", "[", "find", "set", "(", "i", ")]", "++;", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "int", "Ġmax", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "c", "nt", "[", "i", "]", "Ġ>", "Ġmax", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "max", "Ġ=", "Ġc", "nt", "[", "i", "];", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "Ġmax", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["x", 12, "comesFrom", ["x"], [10]], ["x", 13, "comesFrom", ["x"], [10]], ["x", 14, "comesFrom", ["x"], [10]], ["x", 16, "comesFrom", ["x"], [10]], ["x", 19, "comesFrom", ["x"], [10]], ["x", 56, "comesFrom", ["x"], [50]], ["x", 59, "comesFrom", ["x"], [50]], ["nCase", 23, "comesFrom", ["nCase"], [21]], ["nCase", 24, "comesFrom", ["nCase"], [21]], ["n", 28, "comesFrom", ["n"], [25]], ["n", 32, "comesFrom", ["n"], [25]], ["n", 63, "comesFrom", ["n"], [25]], ["n", 71, "comesFrom", ["n"], [25]], ["m", 29, "comesFrom", ["m"], [26]], ["m", 41, "comesFrom", ["m"], [26]], ["i", 31, "comesFrom", ["i"], [30]], ["i", 33, "comesFrom", ["i"], [30]], ["i", 35, "comesFrom", ["i"], [30]], ["i", 36, "comesFrom", ["i"], [30]], ["i", 38, "comesFrom", ["i"], [30]], ["i", 40, "comesFrom", ["i"], [39]], ["i", 42, "comesFrom", ["i"], [39]], ["i", 62, "comesFrom", ["i"], [61]], ["i", 64, "comesFrom", ["i"], [61]], ["i", 67, "comesFrom", ["i"], [61]], ["i", 70, "comesFrom", ["i"], [69]], ["i", 72, "comesFrom", ["i"], [69]], ["i", 74, "comesFrom", ["i"], [69]], ["i", 78, "comesFrom", ["i"], [69]], ["a", 48, "comesFrom", ["a"], [43]], ["a", 52, "comesFrom", ["a"], [43]], ["b", 49, "comesFrom", ["b"], [44]], ["b", 55, "comesFrom", ["b"], [44]], ["y", 57, "comesFrom", ["y"], [53]], ["y", 60, "comesFrom", ["y"], [53]], ["max", 75, "comesFrom", ["max"], [68]], ["max", 80, "comesFrom", ["max"], [76]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::637", "code": "void function();\n\nvoid function()\n{\n    int x;\n    x = 20;\n}\n\ntemplate <typename T>\nT templateFunction(T t)\n{\n    return t;\n}\n\ntemplate <>\nint templateFunction(int t)\n{\n    return t;\n}\n\nextern template double templateFunction<double>(double);\ntemplate double templateFunction<double>(double);\n\ntemplate<typename T>\nusing TemplateFunctionType = T(&)(T);\n\n\nTemplateFunctionType<int> aliasToTemplateFunction = templateFunction<int>;\n\nvoid f()\n{\n    aliasToTemplateFunction(1);\n}\n\nvoid f(int);\nvoid f(double);\n\nvoid f2()\n{\n    function();\n}\n", "code_tokens": ["Ġvoid", "Ġfunction", "();", "Ċ", "Ċ", "void", "Ġfunction", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġ20", ";", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "T", "Ġtemplate", "Function", "(", "T", "Ġt", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġt", ";", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", ">", "Ċ", "int", "Ġtemplate", "Function", "(", "int", "Ġt", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġt", ";", "Ċ", "}", "Ċ", "Ċ", "ex", "tern", "Ġtemplate", "Ġdouble", "Ġtemplate", "Function", "<", "double", ">(", "double", ");", "Ċ", "template", "Ġdouble", "Ġtemplate", "Function", "<", "double", ">(", "double", ");", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "using", "ĠTemplate", "Function", "Type", "Ġ=", "ĠT", "(&", ")(", "T", ");", "ĊĊ", "Ċ", "Template", "Function", "Type", "<", "int", ">", "Ġalias", "To", "Template", "Function", "Ġ=", "Ġtemplate", "Function", "<", "int", ">", ";", "Ċ", "Ċ", "void", "Ġf", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġalias", "To", "Template", "Function", "(", "1", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġf", "(", "int", ");", "Ċ", "void", "Ġf", "(", "double", ");", "Ċ", "Ċ", "void", "Ġf", "2", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfunction", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["t", 6, "comesFrom", ["t"], [5]], ["t", 9, "comesFrom", ["t"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::638", "code": "/***************************************************************************\n * \n * Copyright (c) 2008 Baidu.com, Inc. All Rights Reserved\n * $Id: test3.cpp,v 1.2 2009/03/25 12:34:12 yingxiang Exp $ \n * \n **************************************************************************/\n \n \n \n/**\n * @file test3.cpp\n * @author yingxiang(com@baidu.com)\n * @date 2008/11/06 18:42:19\n * @version $Revision: 1.2 $ \n * @brief i\n *  \n **/\n\n#include <stdio.h>\n\n#include <string.h>\n#include \"com_log.h\"\n\nvoid set(char *s, char *src){\n\tsprintf(s, \"%s\", src);\n\ts[strlen(src)] = 0;\n}\n\nint main(){\n\tcom_device_t dev;\n\tset(dev.host, \"log\");\n\tset(dev.file, \"test3\");\n\tset(dev.type, \"ULLOG\");\n\tdev.log_size = 2048;\n\tdev.open = 1;\n\tdev.log_mask = (1<<16)-1;\n\tdev.layout = NULL;\n\tcom_openlog(\"AAA\", &dev, 1, NULL);\n\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* vim: set ts=4 sw=4 sts=4 tw=100 */\n", "code_tokens": ["Ġ/", "********************************", "********************************", "********", "***", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2008", "ĠB", "aid", "u", ".", "com", ",", "ĠInc", ".", "ĠAll", "ĠRights", "ĠReserved", "Ċ", "Ġ*", "Ġ$", "Id", ":", "Ġtest", "3", ".", "cpp", ",", "v", "Ġ1", ".", "2", "Ġ2009", "/", "03", "/", "25", "Ġ12", ":", "34", ":", "12", "Ġy", "ing", "x", "iang", "ĠExp", "Ġ$", "Ġ", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ********************************", "********************************", "********", "**", "/", "Ċ", "Ġ", "Ċ", "Ġ", "Ċ", "Ġ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "file", "Ġtest", "3", ".", "cpp", "Ċ", "Ġ*", "Ġ@", "author", "Ġy", "ing", "x", "iang", "(", "com", "@", "b", "aid", "u", ".", "com", ")", "Ċ", "Ġ*", "Ġ@", "date", "Ġ2008", "/", "11", "/", "06", "Ġ18", ":", "42", ":", "19", "Ċ", "Ġ*", "Ġ@", "version", "Ġ$", "Rev", "ision", ":", "Ġ1", ".", "2", "Ġ$", "Ġ", "Ċ", "Ġ*", "Ġ@", "b", "rief", "Ġi", "Ċ", "Ġ*", "Ġ", "Ġ", "Ċ", "Ġ**", "/", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "com", "_", "log", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġset", "(", "char", "Ġ*", "s", ",", "Ġchar", "Ġ*", "src", "){", "Ċ", "ĉ", "s", "printf", "(", "s", ",", "Ġ\"%", "s", "\",", "Ġsrc", ");", "Ċ", "ĉ", "s", "[", "str", "len", "(", "src", ")]", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "com", "_", "device", "_", "t", "Ġdev", ";", "Ċ", "ĉ", "set", "(", "dev", ".", "host", ",", "Ġ\"", "log", "\");", "Ċ", "ĉ", "set", "(", "dev", ".", "file", ",", "Ġ\"", "test", "3", "\");", "Ċ", "ĉ", "set", "(", "dev", ".", "type", ",", "Ġ\"", "ULL", "OG", "\");", "Ċ", "ĉ", "dev", ".", "log", "_", "size", "Ġ=", "Ġ2048", ";", "Ċ", "ĉ", "dev", ".", "open", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "dev", ".", "log", "_", "mask", "Ġ=", "Ġ(", "1", "<<", "16", ")-", "1", ";", "Ċ", "ĉ", "dev", ".", "layout", "Ġ=", "ĠNULL", ";", "Ċ", "ĉ", "com", "_", "open", "log", "(\"", "AAA", "\",", "Ġ&", "dev", ",", "Ġ1", ",", "ĠNULL", ");", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ", "ĊĊ", "ĊĊ", "ĊĊ", "ĊĊ", "ĊĊ", "ĊĊ", "ĊĊ", "ĊĊ", "Ċ", "Ċ", "/*", "Ġvim", ":", "Ġset", "Ġts", "=", "4", "Ġsw", "=", "4", "Ġsts", "=", "4", "Ġtw", "=", "100", "Ġ*/", "Ċ"], "dataflow_graph": [["dev", 12, "comesFrom", ["dev"], [10]], ["dev", 15, "comesFrom", ["dev"], [10]], ["dev", 18, "comesFrom", ["dev"], [10]], ["dev", 20, "comesFrom", ["dev"], [10]], ["dev", 22, "comesFrom", ["dev"], [10]], ["dev", 24, "comesFrom", ["dev"], [10]], ["dev", 26, "comesFrom", ["dev"], [10]], ["dev", 29, "comesFrom", ["dev"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::639", "code": "#include <iostream>\n#include <string>\n\n\nint main() {\n    std::string empty1;\n    std::cout << \"|\" << empty1 << \"|\\n\";\n\n    std::string empty2{ };\n    std::cout << \"|\" << empty2 << \"|\\n\";\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġempty", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "|", "\"", "Ġ<<", "Ġempty", "1", "Ġ<<", "Ġ\"", "|", "\\", "n", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġempty", "2", "{", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "|", "\"", "Ġ<<", "Ġempty", "2", "Ġ<<", "Ġ\"", "|", "\\", "n", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["empty1", 3, "comesFrom", ["empty1"], [1]], ["empty2", 6, "comesFrom", ["empty2"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::640", "code": "#include \"../../psirichtext.cpp\"\n#include <QTextDocument>\n#include <QTextCursor>\n\n#include <QtTest/QtTest>\n\nclass TestRichText : public QObject\n{\n\tQ_OBJECT\nprivate:\n\tint countText(QTextDocument *doc, QString text) {\n\t\tint result = 0;\n\t\tQTextCursor cursor(doc);\n\t\tcursor.movePosition(QTextCursor::Start, QTextCursor::MoveAnchor);\n\t\t\n\t\tforever {\n\t\t\tcursor = doc->find(text, cursor);\n\t\t\tif (cursor.isNull())\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tresult++;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\nprivate slots:\n\tvoid testSetText() {\n\t\tQTextDocument doc;\n\t\tPsiRichText::setText(&doc, \"Test <icon name=\\\"foo\\\" text=\\\"bar\\\">\");\n\t\tQCOMPARE(countText(&doc, QString(QChar::ObjectReplacementCharacter)), 1);\n\t}\n};\n\nQTEST_MAIN(TestRichText)\n#include \"main.moc\"", "code_tokens": ["Ġ#", "include", "Ġ\"", "../", "../", "ps", "ir", "ich", "text", ".", "cpp", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Text", "Document", ">", "Ċ", "#", "include", "Ġ<", "Q", "Text", "C", "ursor", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "t", "Test", "/", "Q", "t", "Test", ">", "Ċ", "Ċ", "class", "ĠTest", "Rich", "Text", "Ġ:", "Ġpublic", "ĠQ", "Object", "Ċ", "{", "Ċ", "ĉ", "Q", "_", "OB", "JECT", "Ċ", "private", ":", "Ċ", "ĉ", "int", "Ġcount", "Text", "(", "Q", "Text", "Document", "Ġ*", "doc", ",", "ĠQ", "String", "Ġtext", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "Ġresult", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "Q", "Text", "C", "ursor", "Ġcursor", "(", "doc", ");", "Ċ", "ĉ", "ĉ", "c", "ursor", ".", "move", "Position", "(", "Q", "Text", "C", "ursor", "::", "Start", ",", "ĠQ", "Text", "C", "ursor", "::", "Move", "An", "ch", "or", ");", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "fore", "ver", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "c", "ursor", "Ġ=", "Ġdoc", "->", "find", "(", "text", ",", "Ġcursor", ");", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "c", "ursor", ".", "is", "Null", "())", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "ĉ", "result", "++;", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "return", "Ġresult", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "private", "Ġslots", ":", "Ċ", "ĉ", "void", "Ġtest", "Set", "Text", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "Q", "Text", "Document", "Ġdoc", ";", "Ċ", "ĉ", "ĉ", "Ps", "i", "Rich", "Text", "::", "set", "Text", "(&", "doc", ",", "Ġ\"", "Test", "Ġ<", "icon", "Ġname", "=\\\"", "foo", "\\\"", "Ġtext", "=\\\"", "bar", "\\\">", "\");", "Ċ", "ĉ", "ĉ", "Q", "COM", "P", "ARE", "(", "count", "Text", "(&", "doc", ",", "ĠQ", "String", "(", "Q", "Char", "::", "Object", "Repl", "acement", "Character", ")),", "Ġ1", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "Q", "T", "EST", "_", "MA", "IN", "(", "Test", "Rich", "Text", ")", "Ċ", "#", "include", "Ġ\"", "main", ".", "m", "oc", "\""], "dataflow_graph": [["doc", 26, "comesFrom", ["doc"], [24]], ["doc", 29, "comesFrom", ["doc"], [24]], ["cursor", 16, "comesFrom", ["cursor"], [12]], ["cursor", 17, "comesFrom", ["cursor"], [12]], ["result", 19, "comesFrom", ["result"], [6]], ["result", 20, "comesFrom", ["result"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::641", "code": "/*\nCopyright (©) 2003-2022 Teus Benschop.\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n*/\n\n\n#include <filter/webview.h>\n#include <database/logs.h>\n\n\nvoid filter_webview_log_user_agent (string user_agent)\n{\n  // Whether the information has been logged.\n  static bool filter_webview_logged = false;\n\n  // Log the browser's user agent once.\n  if (!filter_webview_logged) {\n    Database_Logs::log (user_agent);\n    filter_webview_logged = true;\n  }\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "Ġ(", "Â©", ")", "Ġ2003", "-", "20", "22", "ĠTe", "us", "ĠB", "ens", "ch", "op", ".", "Ċ", "Ċ", "This", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "This", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "but", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "MER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "GN", "U", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "along", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Found", "ation", ",", "ĠInc", ".,", "Ġ51", "ĠFranklin", "ĠStreet", ",", "ĠFifth", "ĠFloor", ",", "ĠBoston", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", "ĠUSA", ".", "Ċ", "*/", "ĊĊ", "Ċ", "#", "include", "Ġ<", "filter", "/", "web", "view", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "database", "/", "log", "s", ".", "h", ">", "ĊĊ", "Ċ", "void", "Ġfilter", "_", "web", "view", "_", "log", "_", "user", "_", "agent", "Ġ(", "string", "Ġuser", "_", "agent", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠWhether", "Ġthe", "Ġinformation", "Ġhas", "Ġbeen", "Ġlogged", ".", "Ċ", "Ġ", "Ġstatic", "Ġbool", "Ġfilter", "_", "web", "view", "_", "log", "ged", "Ġ=", "Ġfalse", ";", "ĊĊ", "Ġ", "Ġ//", "ĠLog", "Ġthe", "Ġbrowser", "'s", "Ġuser", "Ġagent", "Ġonce", ".", "Ċ", "Ġ", "Ġif", "Ġ(!", "filter", "_", "web", "view", "_", "log", "ged", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDatabase", "_", "Log", "s", "::", "log", "Ġ(", "user", "_", "agent", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfilter", "_", "web", "view", "_", "log", "ged", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["filter_webview_logged", 3, "comesFrom", ["filter_webview_logged"], [2]], ["user_agent", 5, "comesFrom", ["user_agent"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::642", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/iam/model/PutUserPolicyRequest.h>\n#include <aws/core/utils/StringUtils.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\nusing namespace Aws::IAM::Model;\nusing namespace Aws::Utils;\n\nPutUserPolicyRequest::PutUserPolicyRequest() : \n    m_userNameHasBeenSet(false),\n    m_policyNameHasBeenSet(false),\n    m_policyDocumentHasBeenSet(false)\n{\n}\n\nAws::String PutUserPolicyRequest::SerializePayload() const\n{\n  Aws::StringStream ss;\n  ss << \"Action=PutUserPolicy&\";\n  if(m_userNameHasBeenSet)\n  {\n    ss << \"UserName=\" << StringUtils::URLEncode(m_userName.c_str()) << \"&\";\n  }\n\n  if(m_policyNameHasBeenSet)\n  {\n    ss << \"PolicyName=\" << StringUtils::URLEncode(m_policyName.c_str()) << \"&\";\n  }\n\n  if(m_policyDocumentHasBeenSet)\n  {\n    ss << \"PolicyDocument=\" << StringUtils::URLEncode(m_policyDocument.c_str()) << \"&\";\n  }\n\n  ss << \"Version=2010-05-08\";\n  return ss.str();\n}\n\n\nvoid  PutUserPolicyRequest::DumpBodyToUrl(Aws::Http::URI& uri ) const\n{\n  uri.SetQueryString(SerializePayload());\n}\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "iam", "/", "model", "/", "Put", "User", "Policy", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "String", "Ut", "ils", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "st", "l", "/", "AW", "S", "String", "Stream", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "I", "AM", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "Ċ", "Put", "User", "Policy", "Request", "::", "Put", "User", "Policy", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "user", "Name", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "policy", "Name", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "policy", "Document", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠPut", "User", "Policy", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠAw", "s", "::", "String", "Stream", "Ġss", ";", "Ċ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Action", "=", "Put", "User", "Policy", "&", "\";", "Ċ", "Ġ", "Ġif", "(", "m", "_", "user", "Name", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "User", "Name", "=\"", "Ġ<<", "ĠString", "Ut", "ils", "::", "UR", "LE", "n", "code", "(", "m", "_", "user", "Name", ".", "c", "_", "str", "())", "Ġ<<", "Ġ\"", "&", "\";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġif", "(", "m", "_", "policy", "Name", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Policy", "Name", "=\"", "Ġ<<", "ĠString", "Ut", "ils", "::", "UR", "LE", "n", "code", "(", "m", "_", "policy", "Name", ".", "c", "_", "str", "())", "Ġ<<", "Ġ\"", "&", "\";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġif", "(", "m", "_", "policy", "Document", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Policy", "Document", "=\"", "Ġ<<", "ĠString", "Ut", "ils", "::", "UR", "LE", "n", "code", "(", "m", "_", "policy", "Document", ".", "c", "_", "str", "())", "Ġ<<", "Ġ\"", "&", "\";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Version", "=", "2010", "-", "05", "-", "08", "\";", "Ċ", "Ġ", "Ġreturn", "Ġss", ".", "str", "();", "Ċ", "}", "ĊĊ", "Ċ", "void", "Ġ", "ĠPut", "User", "Policy", "Request", "::", "D", "ump", "Body", "To", "Url", "(", "A", "ws", "::", "Http", "::", "URI", "&", "Ġur", "i", "Ġ)", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġur", "i", ".", "Set", "Query", "String", "(", "Serial", "ize", "Pay", "load", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["ss", 8, "comesFrom", ["ss"], [7]], ["ss", 10, "comesFrom", ["ss"], [7]], ["ss", 15, "comesFrom", ["ss"], [7]], ["ss", 20, "comesFrom", ["ss"], [7]], ["ss", 24, "comesFrom", ["ss"], [7]], ["ss", 25, "comesFrom", ["ss"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::643", "code": "// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"components/proximity_auth/logging/logging.h\"\n\n#include \"components/proximity_auth/logging/log_buffer.h\"\n\nnamespace proximity_auth {\n\nScopedLogMessage::ScopedLogMessage(const char* file,\n                                   int line,\n                                   logging::LogSeverity severity)\n    : file_(file), line_(line), severity_(severity) {\n}\n\nScopedLogMessage::~ScopedLogMessage() {\n  LogBuffer::GetInstance()->AddLogMessage(LogBuffer::LogMessage(\n      stream_.str(), base::Time::Now(), file_, line_, severity_));\n\n  // The destructor of |log_message| also creates a log for the standard logging\n  // system.\n  logging::LogMessage log_message(file_, line_, severity_);\n  log_message.stream() << stream_.str();\n}\n\n}  // proximity_auth\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2015", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "comp", "onents", "/", "pro", "x", "imity", "_", "auth", "/", "log", "ging", "/", "log", "ging", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "comp", "onents", "/", "pro", "x", "imity", "_", "auth", "/", "log", "ging", "/", "log", "_", "buffer", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġproximity", "_", "auth", "Ġ{", "Ċ", "Ċ", "Sc", "oped", "Log", "Message", "::", "Sc", "oped", "Log", "Message", "(", "const", "Ġchar", "*", "Ġfile", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġline", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlogging", "::", "Log", "S", "ever", "ity", "Ġseverity", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġfile", "_(", "file", "),", "Ġline", "_(", "line", "),", "Ġseverity", "_(", "sever", "ity", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Sc", "oped", "Log", "Message", "::", "~", "Sc", "oped", "Log", "Message", "()", "Ġ{", "Ċ", "Ġ", "ĠLog", "Buffer", "::", "Get", "Instance", "()", "->", "Add", "Log", "Message", "(", "Log", "Buffer", "::", "Log", "Message", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstream", "_.", "str", "(),", "Ġbase", "::", "Time", "::", "Now", "(),", "Ġfile", "_", ",", "Ġline", "_", ",", "Ġseverity", "_", "));", "ĊĊ", "Ġ", "Ġ//", "ĠThe", "Ġdestruct", "or", "Ġof", "Ġ|", "log", "_", "message", "|", "Ġalso", "Ġcreates", "Ġa", "Ġlog", "Ġfor", "Ġthe", "Ġstandard", "Ġlogging", "Ċ", "Ġ", "Ġ//", "Ġsystem", ".", "Ċ", "Ġ", "Ġlogging", "::", "Log", "Message", "Ġlog", "_", "message", "(", "file", "_", ",", "Ġline", "_", ",", "Ġseverity", "_", ");", "Ċ", "Ġ", "Ġlog", "_", "message", ".", "stream", "()", "Ġ<<", "Ġstream", "_.", "str", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġproximity", "_", "auth", "Ċ"], "dataflow_graph": [["line", 7, "comesFrom", ["line"], [2]], ["severity", 9, "comesFrom", ["severity"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::644", "code": "#include \"phrase_location_sampler.h\"\n\n#include \"matchings_sampler.h\"\n#include \"phrase_location.h\"\n#include \"suffix_array.h\"\n#include \"suffix_array_sampler.h\"\n\nnamespace extractor {\n\nPhraseLocationSampler::PhraseLocationSampler(\n    shared_ptr<SuffixArray> suffix_array, int max_samples) {\n  matchings_sampler = make_shared<MatchingsSampler>(\n      suffix_array->GetData(), max_samples);\n  suffix_array_sampler = make_shared<SuffixArrayRangeSampler>(\n      suffix_array, max_samples);\n}\n\nPhraseLocationSampler::PhraseLocationSampler(\n    shared_ptr<MatchingsSampler> matchings_sampler,\n    shared_ptr<SuffixArrayRangeSampler> suffix_array_sampler) :\n    matchings_sampler(matchings_sampler),\n    suffix_array_sampler(suffix_array_sampler) {}\n\nPhraseLocation PhraseLocationSampler::Sample(\n    const PhraseLocation& location,\n    const unordered_set<int>& blacklisted_sentence_ids) const {\n  if (location.matchings == NULL) {\n    return suffix_array_sampler->Sample(location, blacklisted_sentence_ids);\n  } else {\n    return matchings_sampler->Sample(location, blacklisted_sentence_ids);\n  }\n}\n\n} // namespace extractor\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "phrase", "_", "location", "_", "sam", "pler", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "match", "ings", "_", "sam", "pler", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "phrase", "_", "location", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "suff", "ix", "_", "array", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "suff", "ix", "_", "array", "_", "sam", "pler", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġextract", "or", "Ġ{", "Ċ", "Ċ", "Ph", "rase", "Location", "Sam", "pler", "::", "Ph", "rase", "Location", "Sam", "pler", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġshared", "_", "ptr", "<", "S", "uff", "ix", "Array", ">", "Ġsuffix", "_", "array", ",", "Ġint", "Ġmax", "_", "s", "amples", ")", "Ġ{", "Ċ", "Ġ", "Ġmatch", "ings", "_", "sam", "pler", "Ġ=", "Ġmake", "_", "shared", "<", "Match", "ings", "Sam", "pler", ">(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsuffix", "_", "array", "->", "Get", "Data", "(),", "Ġmax", "_", "s", "amples", ");", "Ċ", "Ġ", "Ġsuffix", "_", "array", "_", "sam", "pler", "Ġ=", "Ġmake", "_", "shared", "<", "S", "uff", "ix", "Array", "Range", "Sam", "pler", ">(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsuffix", "_", "array", ",", "Ġmax", "_", "s", "amples", ");", "Ċ", "}", "Ċ", "Ċ", "Ph", "rase", "Location", "Sam", "pler", "::", "Ph", "rase", "Location", "Sam", "pler", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġshared", "_", "ptr", "<", "Match", "ings", "Sam", "pler", ">", "Ġmatch", "ings", "_", "sam", "pler", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġshared", "_", "ptr", "<", "S", "uff", "ix", "Array", "Range", "Sam", "pler", ">", "Ġsuffix", "_", "array", "_", "sam", "pler", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmatch", "ings", "_", "sam", "pler", "(", "match", "ings", "_", "sam", "pler", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsuffix", "_", "array", "_", "sam", "pler", "(", "suff", "ix", "_", "array", "_", "sam", "pler", ")", "Ġ{}", "Ċ", "Ċ", "Ph", "rase", "Location", "ĠPh", "rase", "Location", "Sam", "pler", "::", "Sample", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠPh", "rase", "Location", "&", "Ġlocation", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġun", "ordered", "_", "set", "<", "int", ">", "&", "Ġblack", "listed", "_", "sent", "ence", "_", "ids", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "location", ".", "match", "ings", "Ġ==", "ĠNULL", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġsuffix", "_", "array", "_", "sam", "pler", "->", "Sample", "(", "location", ",", "Ġblack", "listed", "_", "sent", "ence", "_", "ids", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmatch", "ings", "_", "sam", "pler", "->", "Sample", "(", "location", ",", "Ġblack", "listed", "_", "sent", "ence", "_", "ids", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġextract", "or", "Ċ"], "dataflow_graph": [["suffix_array", 6, "comesFrom", ["suffix_array"], [2]], ["suffix_array", 11, "comesFrom", ["suffix_array"], [2]], ["max_samples", 8, "comesFrom", ["max_samples"], [3]], ["max_samples", 12, "comesFrom", ["max_samples"], [3]], ["matchings_sampler", 17, "comesFrom", ["matchings_sampler"], [15]], ["matchings_sampler", 18, "comesFrom", ["matchings_sampler"], [15]], ["matchings_sampler", 30, "comesFrom", ["matchings_sampler"], [15]], ["suffix_array_sampler", 19, "comesFrom", ["suffix_array_sampler"], [16]], ["suffix_array_sampler", 20, "comesFrom", ["suffix_array_sampler"], [16]], ["suffix_array_sampler", 26, "comesFrom", ["suffix_array_sampler"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::645", "code": "#define CGAL_PROFILE\n\n#include <CGAL/Profile_timer.h>\n\nvoid f()\n{\n  CGAL_TIME_PROFILER(\"seconds spent in this function (total time)\");\n  // do something\n  double d = 1+1;\n  (void) d;\n}\n\nint main()\n{\n  for (int i=0; i<100000; ++i)\n    f();\n  return 0;\n}\n", "code_tokens": ["Ġ#", "define", "ĠCG", "AL", "_", "PRO", "FILE", "Ċ", "Ċ", "#", "include", "Ġ<", "CG", "AL", "/", "Profile", "_", "timer", ".", "h", ">", "Ċ", "Ċ", "void", "Ġf", "()", "Ċ", "{", "Ċ", "Ġ", "ĠCG", "AL", "_", "TIME", "_", "PR", "OF", "IL", "ER", "(\"", "seconds", "Ġspent", "Ġin", "Ġthis", "Ġfunction", "Ġ(", "total", "Ġtime", ")", "\");", "Ċ", "Ġ", "Ġ//", "Ġdo", "Ġsomething", "Ċ", "Ġ", "Ġdouble", "Ġd", "Ġ=", "Ġ1", "+", "1", ";", "Ċ", "Ġ", "Ġ(", "void", ")", "Ġd", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "100", "000", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġf", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["d", 4, "comesFrom", ["d"], [3]], ["i", 7, "comesFrom", ["i"], [6]], ["i", 8, "comesFrom", ["i"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::646", "code": "int fail;\n\nclass A *ptr_a;\n\nclass A {\npublic:\n  char space1[24];\n  virtual void foo() {\n    if (this != ptr_a)\n      fail = 1;\n  }\n};\n\nclass Space {\n  char space2[36];\n};\n\nclass B : public Space, public A {\n} b;\n\nvoid (B::*pmf1)() = &A::foo;\nvoid (A::*pmf2)() = &A::foo;\n\nint main() {\n  ptr_a = &b;\n  (b .* (void (B::*) ()) &A::foo) ();\n  (b .* pmf1) ();\n  (b .* pmf2) ();\n  (b .* &A::foo) ();\n  return fail;\n}\n", "code_tokens": ["Ġint", "Ġfail", ";", "Ċ", "Ċ", "class", "ĠA", "Ġ*", "ptr", "_", "a", ";", "Ċ", "Ċ", "class", "ĠA", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġchar", "Ġspace", "1", "[", "24", "];", "Ċ", "Ġ", "Ġvirtual", "Ġvoid", "Ġfoo", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "this", "Ġ!=", "Ġptr", "_", "a", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfail", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠSpace", "Ġ{", "Ċ", "Ġ", "Ġchar", "Ġspace", "2", "[", "36", "];", "Ċ", "};", "Ċ", "Ċ", "class", "ĠB", "Ġ:", "Ġpublic", "ĠSpace", ",", "Ġpublic", "ĠA", "Ġ{", "Ċ", "}", "Ġb", ";", "Ċ", "Ċ", "void", "Ġ(", "B", "::", "*", "pm", "f", "1", ")", "()", "Ġ=", "Ġ&", "A", "::", "foo", ";", "Ċ", "void", "Ġ(", "A", "::", "*", "pm", "f", "2", ")", "()", "Ġ=", "Ġ&", "A", "::", "foo", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġptr", "_", "a", "Ġ=", "Ġ&", "b", ";", "Ċ", "Ġ", "Ġ(", "b", "Ġ.", "*", "Ġ(", "void", "Ġ(", "B", "::", "*)", "Ġ())", "Ġ&", "A", "::", "foo", ")", "Ġ();", "Ċ", "Ġ", "Ġ(", "b", "Ġ.", "*", "Ġpm", "f", "1", ")", "Ġ();", "Ċ", "Ġ", "Ġ(", "b", "Ġ.", "*", "Ġpm", "f", "2", ")", "Ġ();", "Ċ", "Ġ", "Ġ(", "b", "Ġ.", "*", "Ġ&", "A", "::", "foo", ")", "Ġ();", "Ċ", "Ġ", "Ġreturn", "Ġfail", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["b", 12, "comesFrom", ["b"], [7]], ["b", 13, "comesFrom", ["b"], [7]], ["b", 16, "comesFrom", ["b"], [7]], ["b", 18, "comesFrom", ["b"], [7]], ["b", 20, "comesFrom", ["b"], [7]], ["fail", 22, "comesFrom", ["fail"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::647", "code": "//  Copyright John Maddock 2008.\r\n//  Use, modification and distribution are subject to the\r\n//  Boost Software License, Version 1.0.  (See accompanying file\r\n//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n//\r\n#  include <pch.hpp>\r\n#ifndef BOOST_MATH_TR1_SOURCE\r\n#  define BOOST_MATH_TR1_SOURCE\r\n#endif\r\n#include <boost/math/tr1.hpp>\r\n#include <boost/math/special_functions/fpclassify.hpp>\r\n#include \"c_policy.hpp\"\r\n\r\nextern \"C\" double BOOST_MATH_TR1_DECL boost_fmin BOOST_PREVENT_MACRO_SUBSTITUTION(double x, double y) BOOST_MATH_C99_THROW_SPEC\r\n{\r\n   if((boost::math::isnan)(x))\r\n      return y;\r\n   if((boost::math::isnan)(y))\r\n      return x;\r\n   return (std::min)(x, y);\r\n}\r\n\r\n\r\n", "code_tokens": ["Ġ//", "Ġ", "ĠCopyright", "ĠJohn", "ĠMadd", "ock", "Ġ2008", ".", "č", "Ċ", "//", "Ġ", "ĠUse", ",", "Ġmodification", "Ġand", "Ġdistribution", "Ġare", "Ġsubject", "Ġto", "Ġthe", "č", "Ċ", "//", "Ġ", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ", "Ġ(", "See", "Ġaccompanying", "Ġfile", "č", "Ċ", "//", "Ġ", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "č", "Ċ", "//", "č", "Ċ", "#", "Ġ", "Ġinclude", "Ġ<", "p", "ch", ".", "h", "pp", ">", "č", "Ċ", "#", "if", "nd", "ef", "ĠB", "OO", "ST", "_", "M", "ATH", "_", "TR", "1", "_", "SOURCE", "č", "Ċ", "#", "Ġ", "Ġdefine", "ĠB", "OO", "ST", "_", "M", "ATH", "_", "TR", "1", "_", "SOURCE", "č", "Ċ", "#", "endif", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "math", "/", "tr", "1", ".", "h", "pp", ">", "č", "Ċ", "#", "include", "Ġ<", "boost", "/", "math", "/", "special", "_", "fun", "ctions", "/", "fp", "class", "ify", ".", "h", "pp", ">", "č", "Ċ", "#", "include", "Ġ\"", "c", "_", "policy", ".", "h", "pp", "\"", "č", "Ċ", "č", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġdouble", "ĠB", "OO", "ST", "_", "M", "ATH", "_", "TR", "1", "_", "DEC", "L", "Ġboost", "_", "f", "min", "ĠB", "OO", "ST", "_", "PRE", "V", "ENT", "_", "MAC", "RO", "_", "S", "UB", "ST", "IT", "UTION", "(", "double", "Ġx", ",", "Ġdouble", "Ġy", ")", "ĠB", "OO", "ST", "_", "M", "ATH", "_", "C", "99", "_", "TH", "R", "OW", "_", "SPEC", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġif", "((", "boost", "::", "math", "::", "is", "nan", ")(", "x", "))", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġy", ";", "č", "Ċ", "Ġ", "Ġ", "Ġif", "((", "boost", "::", "math", "::", "is", "nan", ")(", "y", "))", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġx", ";", "č", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġ(", "std", "::", "min", ")(", "x", ",", "Ġy", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ"], "dataflow_graph": [["x", 8, "comesFrom", ["x"], [5]], ["x", 11, "comesFrom", ["x"], [5]], ["x", 12, "comesFrom", ["x"], [5]], ["y", 9, "comesFrom", ["y"], [6]], ["y", 10, "comesFrom", ["y"], [6]], ["y", 13, "comesFrom", ["y"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::648", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"crypto/scoped_test_nss_chromeos_user.h\"\n\n#include \"base/check.h\"\n#include \"crypto/nss_util.h\"\n#include \"crypto/nss_util_internal.h\"\n\nnamespace crypto {\n\nScopedTestNSSChromeOSUser::ScopedTestNSSChromeOSUser(\n    const std::string& username_hash)\n    : username_hash_(username_hash), constructed_successfully_(false) {\n  if (!temp_dir_.CreateUniqueTempDir())\n    return;\n  // This opens a software DB in the given folder. In production code that is in\n  // the home folder, but for testing the temp folder is used.\n  constructed_successfully_ =\n      InitializeNSSForChromeOSUser(username_hash, temp_dir_.GetPath());\n}\n\nScopedTestNSSChromeOSUser::~ScopedTestNSSChromeOSUser() {\n  if (constructed_successfully_)\n    CloseChromeOSUserForTesting(username_hash_);\n}\n\nvoid ScopedTestNSSChromeOSUser::FinishInit() {\n  DCHECK(constructed_successfully_);\n  if (!ShouldInitializeTPMForChromeOSUser(username_hash_))\n    return;\n  WillInitializeTPMForChromeOSUser(username_hash_);\n  InitializePrivateSoftwareSlotForChromeOSUser(username_hash_);\n}\n\n}  // namespace crypto\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "crypt", "o", "/", "sc", "oped", "_", "test", "_", "n", "ss", "_", "chrome", "os", "_", "user", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "check", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "crypt", "o", "/", "n", "ss", "_", "util", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "crypt", "o", "/", "n", "ss", "_", "util", "_", "internal", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġcrypto", "Ġ{", "Ċ", "Ċ", "Sc", "oped", "Test", "N", "SS", "Ch", "rome", "OS", "User", "::", "Sc", "oped", "Test", "N", "SS", "Ch", "rome", "OS", "User", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "string", "&", "Ġusername", "_", "hash", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġusername", "_", "hash", "_(", "username", "_", "hash", "),", "Ġconstructed", "_", "successfully", "_(", "false", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "temp", "_", "dir", "_.", "Create", "Unique", "Temp", "Dir", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "Ġ//", "ĠThis", "Ġopens", "Ġa", "Ġsoftware", "ĠDB", "Ġin", "Ġthe", "Ġgiven", "Ġfolder", ".", "ĠIn", "Ġproduction", "Ġcode", "Ġthat", "Ġis", "Ġin", "Ċ", "Ġ", "Ġ//", "Ġthe", "Ġhome", "Ġfolder", ",", "Ġbut", "Ġfor", "Ġtesting", "Ġthe", "Ġtemp", "Ġfolder", "Ġis", "Ġused", ".", "Ċ", "Ġ", "Ġconstructed", "_", "successfully", "_", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠInitial", "ize", "N", "SS", "For", "Ch", "rome", "OS", "User", "(", "username", "_", "hash", ",", "Ġtemp", "_", "dir", "_.", "Get", "Path", "());", "Ċ", "}", "Ċ", "Ċ", "Sc", "oped", "Test", "N", "SS", "Ch", "rome", "OS", "User", "::", "~", "Sc", "oped", "Test", "N", "SS", "Ch", "rome", "OS", "User", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "con", "structed", "_", "successfully", "_", ")", "Ċ", "Ġ", "Ġ", "Ġ", "ĠClose", "Ch", "rome", "OS", "User", "For", "Testing", "(", "username", "_", "hash", "_", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSc", "oped", "Test", "N", "SS", "Ch", "rome", "OS", "User", "::", "Finish", "Init", "()", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "(", "con", "structed", "_", "successfully", "_", ");", "Ċ", "Ġ", "Ġif", "Ġ(!", "Should", "Initial", "ize", "T", "PM", "For", "Ch", "rome", "OS", "User", "(", "username", "_", "hash", "_", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "ĠWill", "Initial", "ize", "T", "PM", "For", "Ch", "rome", "OS", "User", "(", "username", "_", "hash", "_", ");", "Ċ", "Ġ", "ĠInitial", "ize", "Private", "Software", "Slot", "For", "Ch", "rome", "OS", "User", "(", "username", "_", "hash", "_", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġcrypto", "Ċ"], "dataflow_graph": [["constructed_successfully_", 13, "comesFrom", ["constructed_successfully_"], [7]], ["constructed_successfully_", 18, "comesFrom", ["constructed_successfully_"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::649", "code": "/*\n *  Copyright (C) 2005-2020 Team Kodi\n *  This file is part of Kodi - https://kodi.tv\n *\n *  SPDX-License-Identifier: GPL-2.0-or-later\n *  See LICENSES/README.md for more information.\n */\n\n#include \"DRMConnector.h\"\n\n#include \"utils/log.h\"\n\nusing namespace KODI::WINDOWING::GBM;\n\nCDRMConnector::CDRMConnector(int fd, uint32_t connector)\n  : CDRMObject(fd), m_connector(drmModeGetConnector(m_fd, connector))\n{\n  if (!m_connector)\n    throw std::runtime_error(\"drmModeGetConnector failed: \" + std::string{strerror(errno)});\n\n  if (!GetProperties(m_connector->connector_id, DRM_MODE_OBJECT_CONNECTOR))\n    throw std::runtime_error(\"failed to get properties for connector: \" +\n                             std::to_string(m_connector->connector_id));\n}\n\nbool CDRMConnector::CheckConnector()\n{\n  unsigned retryCnt = 7;\n  while (!IsConnected() && retryCnt > 0)\n  {\n    CLog::Log(LOGDEBUG, \"CDRMConnector::{} - connector is disconnected\", __FUNCTION__);\n    retryCnt--;\n    KODI::TIME::Sleep(1000);\n\n    m_connector.reset(drmModeGetConnector(m_fd, m_connector->connector_id));\n  }\n\n  return m_connector->connection == DRM_MODE_CONNECTED;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "-", "2020", "ĠTeam", "ĠKodi", "Ċ", "Ġ*", "Ġ", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠKodi", "Ġ-", "Ġhttps", "://", "k", "odi", ".", "tv", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠGPL", "-", "2", ".", "0", "-", "or", "-", "later", "Ċ", "Ġ*", "Ġ", "ĠSee", "ĠLIC", "ENS", "ES", "/", "READ", "ME", ".", "md", "Ġfor", "Ġmore", "Ġinformation", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "DR", "M", "Connector", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "utils", "/", "log", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠK", "OD", "I", "::", "WIND", "OW", "ING", "::", "GB", "M", ";", "Ċ", "Ċ", "C", "DR", "M", "Connector", "::", "C", "DR", "M", "Connector", "(", "int", "Ġf", "d", ",", "Ġuint", "32", "_", "t", "Ġconnector", ")", "Ċ", "Ġ", "Ġ:", "ĠCD", "RM", "Object", "(", "fd", "),", "Ġm", "_", "connect", "or", "(", "drm", "Mode", "Get", "Connector", "(", "m", "_", "fd", ",", "Ġconnector", "))", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(!", "m", "_", "connect", "or", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "drm", "Mode", "Get", "Connector", "Ġfailed", ":", "Ġ\"", "Ġ+", "Ġstd", "::", "string", "{", "st", "rer", "ror", "(", "err", "no", ")", "});", "ĊĊ", "Ġ", "Ġif", "Ġ(!", "Get", "Pro", "perties", "(", "m", "_", "connect", "or", "->", "connect", "or", "_", "id", ",", "ĠDRM", "_", "MODE", "_", "OB", "JECT", "_", "CON", "NECT", "OR", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "failed", "Ġto", "Ġget", "Ġproperties", "Ġfor", "Ġconnector", ":", "Ġ\"", "Ġ+", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "to", "_", "string", "(", "m", "_", "connect", "or", "->", "connect", "or", "_", "id", "));", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠCD", "RM", "Connector", "::", "Check", "Connector", "()", "Ċ", "{", "Ċ", "Ġ", "Ġunsigned", "Ġret", "ry", "C", "nt", "Ġ=", "Ġ7", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(!", "Is", "Connect", "ed", "()", "Ġ&&", "Ġret", "ry", "C", "nt", "Ġ>", "Ġ0", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCL", "og", "::", "Log", "(", "LOG", "DEBUG", ",", "Ġ\"", "C", "DR", "M", "Connector", "::", "{", "}", "Ġ-", "Ġconnector", "Ġis", "Ġdisconnected", "\",", "Ġ__", "FUN", "CT", "ION", "__", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġret", "ry", "C", "nt", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠK", "OD", "I", "::", "TIME", "::", "Sleep", "(", "1000", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "connect", "or", ".", "reset", "(", "drm", "Mode", "Get", "Connector", "(", "m", "_", "fd", ",", "Ġm", "_", "connect", "or", "->", "connect", "or", "_", "id", "));", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġm", "_", "connect", "or", "->", "connection", "Ġ==", "ĠDRM", "_", "MODE", "_", "CON", "NECT", "ED", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["fd", 5, "comesFrom", ["fd"], [2]], ["connector", 9, "comesFrom", ["connector"], [3]], ["retryCnt", 25, "comesFrom", ["retryCnt"], [23]], ["retryCnt", 29, "comesFrom", ["retryCnt"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::650", "code": "#include <blitz/array.h>\n#include <blitz/array/convolve.h>\n\nusing namespace blitz;\n\nint main()\n{\n    Array<float,1> B(Range(-2,+2));\n    Array<float,1> C(Range(10,15));\n\n    B = 1, 0, 2, 5, 3;\n    C = 10, 2, 4, 1, 7, 2;\n\n    Array<float,1> A = convolve(B,C);\n\n    cout << \"A has domain \" << A.lbound(0) << \"...\" << A.ubound(0) << endl\n         << A << endl;\n\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bl", "itz", "/", "array", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "bl", "itz", "/", "array", "/", "conv", "olve", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġblitz", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠArray", "<", "float", ",", "1", ">", "ĠB", "(", "Range", "(-", "2", ",", "+", "2", "));", "Ċ", "Ġ", "Ġ", "Ġ", "ĠArray", "<", "float", ",", "1", ">", "ĠC", "(", "Range", "(", "10", ",", "15", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠB", "Ġ=", "Ġ1", ",", "Ġ0", ",", "Ġ2", ",", "Ġ5", ",", "Ġ3", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠC", "Ġ=", "Ġ10", ",", "Ġ2", ",", "Ġ4", ",", "Ġ1", ",", "Ġ7", ",", "Ġ2", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠArray", "<", "float", ",", "1", ">", "ĠA", "Ġ=", "Ġconv", "olve", "(", "B", ",", "C", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "A", "Ġhas", "Ġdomain", "Ġ\"", "Ġ<<", "ĠA", ".", "l", "bound", "(", "0", ")", "Ġ<<", "Ġ\"", "...\"", "Ġ<<", "ĠA", ".", "ub", "ound", "(", "0", ")", "Ġ<<", "Ġend", "l", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "ĠA", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["B", 10, "comesFrom", ["B"], [6]], ["C", 11, "comesFrom", ["C"], [7]], ["A", 13, "comesFrom", ["A"], [8]], ["A", 15, "comesFrom", ["A"], [8]], ["A", 18, "comesFrom", ["A"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::651", "code": "// { dg-do run  }\ntemplate <class INT>\nclass b\n{\nprivate:\n  char a(int x)\n  {\n    union {\n      int i;\n      char c;\n    } val;\n    val.i = x;\n    return val.c;\n  };\n\npublic:\n  b()  {\n  }\n};\n\nint main() {\n  b<int> n;\n  return 0;\n}\n   \n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġrun", "Ġ", "Ġ}", "Ċ", "template", "Ġ<", "class", "ĠINT", ">", "Ċ", "class", "Ġb", "Ċ", "{", "Ċ", "private", ":", "Ċ", "Ġ", "Ġchar", "Ġa", "(", "int", "Ġx", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunion", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġval", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġval", ".", "i", "Ġ=", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġval", ".", "c", ";", "Ċ", "Ġ", "Ġ};", "Ċ", "Ċ", "public", ":", "Ċ", "Ġ", "Ġb", "()", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġb", "<", "int", ">", "Ġn", ";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ċ"], "dataflow_graph": [["val", 5, "comesFrom", ["val"], [4]], ["val", 8, "comesFrom", ["val"], [4]], ["x", 7, "comesFrom", ["x"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::652", "code": "// { dg-do compile }\n\n// 2006-02-04  Edward Smith-Rowland <3dw4rd@verizon.net>\n//\n// Copyright (C) 2006-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 5.2.1.1 assoc_laguerre\n\n#include <tr1/math.h>\n\nvoid\ntest01()\n{\n\n  float xf = 0.5F;\n  double xd = 0.5;\n  long double xl = 0.5L;\n  unsigned int n = 2, m = 1;\n\n  assoc_laguerre(n, m, xf);\n  assoc_laguerref(n, m, xf);\n  assoc_laguerre(n, m, xd);\n  assoc_laguerre(n, m, xl);\n  assoc_laguerrel(n, m, xl);\n\n  return;\n}\n\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "Ċ", "//", "Ġ2006", "-", "02", "-", "04", "Ġ", "ĠEdward", "ĠSmith", "-", "Row", "land", "Ġ<", "3", "d", "w", "4", "rd", "@", "ver", "izon", ".", "net", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "-", "2013", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ5", ".", "2", ".", "1", ".", "1", "Ġass", "oc", "_", "l", "agu", "er", "re", "Ċ", "Ċ", "#", "include", "Ġ<", "tr", "1", "/", "math", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "ĊĊ", "Ġ", "Ġfloat", "Ġx", "f", "Ġ=", "Ġ0", ".", "5", "F", ";", "Ċ", "Ġ", "Ġdouble", "Ġx", "d", "Ġ=", "Ġ0", ".", "5", ";", "Ċ", "Ġ", "Ġlong", "Ġdouble", "Ġx", "l", "Ġ=", "Ġ0", ".", "5", "L", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġn", "Ġ=", "Ġ2", ",", "Ġm", "Ġ=", "Ġ1", ";", "ĊĊ", "Ġ", "Ġass", "oc", "_", "l", "agu", "er", "re", "(", "n", ",", "Ġm", ",", "Ġx", "f", ");", "Ċ", "Ġ", "Ġass", "oc", "_", "l", "agu", "er", "ref", "(", "n", ",", "Ġm", ",", "Ġx", "f", ");", "Ċ", "Ġ", "Ġass", "oc", "_", "l", "agu", "er", "re", "(", "n", ",", "Ġm", ",", "Ġx", "d", ");", "Ċ", "Ġ", "Ġass", "oc", "_", "l", "agu", "er", "re", "(", "n", ",", "Ġm", ",", "Ġx", "l", ");", "Ċ", "Ġ", "Ġass", "oc", "_", "l", "agu", "er", "rel", "(", "n", ",", "Ġm", ",", "Ġx", "l", ");", "ĊĊ", "Ġ", "Ġreturn", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["n", 7, "comesFrom", ["n"], [4]], ["n", 11, "comesFrom", ["n"], [4]], ["n", 15, "comesFrom", ["n"], [4]], ["n", 19, "comesFrom", ["n"], [4]], ["n", 23, "comesFrom", ["n"], [4]], ["m", 8, "comesFrom", ["m"], [5]], ["m", 12, "comesFrom", ["m"], [5]], ["m", 16, "comesFrom", ["m"], [5]], ["m", 20, "comesFrom", ["m"], [5]], ["m", 24, "comesFrom", ["m"], [5]], ["xf", 9, "comesFrom", ["xf"], [1]], ["xf", 13, "comesFrom", ["xf"], [1]], ["xd", 17, "comesFrom", ["xd"], [2]], ["xl", 21, "comesFrom", ["xl"], [3]], ["xl", 25, "comesFrom", ["xl"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::653", "code": "// { dg-options \"-std=gnu++0x\" }\n// { dg-require-atomic-builtins \"\" }\n\n// Copyright (C) 2009 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <exception>\n#include <testsuite_hooks.h>\n\nvoid test01() \n{\n  bool test __attribute__((unused)) = true;\n\n  std::nested_exception e;\n\n  VERIFY( e.nested_ptr() == 0 );\n}\n\nvoid test02() \n{\n  bool test __attribute__((unused)) = true;\n\n  try\n  {\n    throw 42;\n  }\n  catch (...)\n  {\n    std::nested_exception e;\n    VERIFY( e.nested_ptr() == std::current_exception() );\n  }\n}\n\nint main()\n{\n  test01();\n  test02();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "0", "x", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "atomic", "-", "built", "ins", "Ġ\"\"", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2009", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "ex", "ception", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "void", "Ġtest", "01", "()", "Ġ", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġstd", "::", "n", "ested", "_", "ex", "ception", "Ġe", ";", "ĊĊ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġe", ".", "n", "ested", "_", "ptr", "()", "Ġ==", "Ġ0", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "void", "Ġtest", "02", "()", "Ġ", "Ċ", "{", "Ċ", "Ġ", "Ġbool", "Ġtest", "Ġ__", "attribute", "__", "((", "un", "used", "))", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġtry", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġ42", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcatch", "Ġ(", "...)", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "n", "ested", "_", "ex", "ception", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġe", ".", "n", "ested", "_", "ptr", "()", "Ġ==", "Ġstd", "::", "current", "_", "ex", "ception", "()", "Ġ);", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġtest", "02", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["e", 5, "comesFrom", ["e"], [3]], ["e", 12, "comesFrom", ["e"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::654", "code": "// RUN: %clang_cc1 %s -triple x86_64-unknown-unknown -emit-llvm -o - | FileCheck %s\n// PR6641\n\nextern \"C\" int printf(const char *, ...);\n\nstruct Foo {\n Foo() : iFoo (2) {\n  printf(\"%p\\n\", this);\n }\n int iFoo;\n};\n\n\ntypedef Foo (*T)[3][4];\n\nT bar() {\n return new Foo[2][3][4];\n}\n\nT bug(int i) {\n  return new Foo[i][3][4];\n}\n\nvoid pr(T a) {\n  for (int i = 0; i < 3; i++)\n   for (int j = 0; j < 4; j++)\n     printf(\"%p\\n\", a[i][j]);\n}\n\nFoo *test() {\n  return new Foo[5];\n}\n\nint main() {\n T f =  bar();\n pr(f);\n f = bug(3);\n pr(f);\n\n Foo * g = test();\n for (int i = 0; i < 5; i++)\n printf(\"%d\\n\", g[i].iFoo);\n return 0;\n}\n\n// CHECK: call noalias i8* @_Znam\n// CHECK: call noalias i8* @_Znam\n// CHECK: call noalias i8* @_Znam\n\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "cl", "ang", "_", "cc", "1", "Ġ%", "s", "Ġ-", "tri", "ple", "Ġx", "86", "_", "64", "-", "unknown", "-", "unknown", "Ġ-", "em", "it", "-", "ll", "vm", "Ġ-", "o", "Ġ-", "Ġ|", "ĠFile", "Check", "Ġ%", "s", "Ċ", "//", "ĠPR", "6", "641", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġint", "Ġprintf", "(", "const", "Ġchar", "Ġ*", ",", "Ġ...", ");", "Ċ", "Ċ", "struct", "ĠFoo", "Ġ{", "Ċ", "ĠFoo", "()", "Ġ:", "Ġi", "F", "oo", "Ġ(", "2", ")", "Ġ{", "Ċ", "Ġ", "Ġprintf", "(\"", "%", "p", "\\", "n", "\",", "Ġthis", ");", "Ċ", "Ġ}", "Ċ", "Ġint", "Ġi", "F", "oo", ";", "Ċ", "};", "ĊĊ", "Ċ", "ty", "ped", "ef", "ĠFoo", "Ġ(*", "T", ")[", "3", "][", "4", "];", "Ċ", "Ċ", "T", "Ġbar", "()", "Ġ{", "Ċ", "Ġreturn", "Ġnew", "ĠFoo", "[", "2", "][", "3", "][", "4", "];", "Ċ", "}", "Ċ", "Ċ", "T", "Ġbug", "(", "int", "Ġi", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġnew", "ĠFoo", "[", "i", "][", "3", "][", "4", "];", "Ċ", "}", "Ċ", "Ċ", "void", "Ġpr", "(", "T", "Ġa", ")", "Ġ{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ3", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġ4", ";", "Ġj", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "p", "\\", "n", "\",", "Ġa", "[", "i", "][", "j", "]);", "Ċ", "}", "Ċ", "Ċ", "F", "oo", "Ġ*", "test", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġnew", "ĠFoo", "[", "5", "];", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĠT", "Ġf", "Ġ=", "Ġ", "Ġbar", "();", "Ċ", "Ġpr", "(", "f", ");", "Ċ", "Ġf", "Ġ=", "Ġbug", "(", "3", ");", "Ċ", "Ġpr", "(", "f", ");", "ĊĊ", "ĠFoo", "Ġ*", "Ġg", "Ġ=", "Ġtest", "();", "Ċ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ5", ";", "Ġi", "++)", "Ċ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġg", "[", "i", "].", "i", "F", "oo", ");", "Ċ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "//", "ĠCH", "ECK", ":", "Ġcall", "Ġno", "alias", "Ġi", "8", "*", "Ġ@", "_", "Z", "nam", "Ċ", "//", "ĠCH", "ECK", ":", "Ġcall", "Ġno", "alias", "Ġi", "8", "*", "Ġ@", "_", "Z", "nam", "Ċ", "//", "ĠCH", "ECK", ":", "Ġcall", "Ġno", "alias", "Ġi", "8", "*", "Ġ@", "_", "Z", "nam", "ĊĊ"], "dataflow_graph": [["i", 8, "comesFrom", ["i"], [7]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 13, "comesFrom", ["i"], [11]], ["i", 19, "comesFrom", ["i"], [11]], ["i", 34, "comesFrom", ["i"], [33]], ["i", 35, "comesFrom", ["i"], [33]], ["i", 38, "comesFrom", ["i"], [33]], ["j", 15, "comesFrom", ["j"], [14]], ["j", 16, "comesFrom", ["j"], [14]], ["j", 20, "comesFrom", ["j"], [14]], ["a", 18, "comesFrom", ["a"], [10]], ["f", 26, "comesFrom", ["f"], [23]], ["f", 30, "comesFrom", ["f"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::655", "code": "// PR c++/33496\n// { dg-do compile }\n// { dg-options \"-std=gnu++0x\" }\n\ntemplate<int M, int N> struct pair\n{\n  int i, j;\n  pair () : i (M), j (N) {}\n};\n\ntemplate<int... M> struct S\n{\n  template<int... N> static int *foo ()\n  {\n    static int x[] = { (M + N)... };\t// { dg-error \"mismatched argument pack lengths\" }\n    return x;\n  }\n};\n\nint *bar ()\n{\n  return S<0, 1, 2>::foo<0, 1> ();\n}\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "33", "496", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "std", "=", "gnu", "++", "0", "x", "\"", "Ġ}", "Ċ", "Ċ", "template", "<", "int", "ĠM", ",", "Ġint", "ĠN", ">", "Ġstruct", "Ġpair", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġi", ",", "Ġj", ";", "Ċ", "Ġ", "Ġpair", "Ġ()", "Ġ:", "Ġi", "Ġ(", "M", "),", "Ġj", "Ġ(", "N", ")", "Ġ{}", "Ċ", "};", "Ċ", "Ċ", "template", "<", "int", "...", "ĠM", ">", "Ġstruct", "ĠS", "Ċ", "{", "Ċ", "Ġ", "Ġtemplate", "<", "int", "...", "ĠN", ">", "Ġstatic", "Ġint", "Ġ*", "foo", "Ġ()", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġint", "Ġx", "[]", "Ġ=", "Ġ{", "Ġ(", "M", "Ġ+", "ĠN", ")...", "Ġ};", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"", "m", "ism", "atched", "Ġargument", "Ġpack", "Ġlengths", "\"", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġx", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġ*", "bar", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "ĠS", "<", "0", ",", "Ġ1", ",", "Ġ2", ">", "::", "foo", "<", "0", ",", "Ġ1", ">", "Ġ();", "Ċ", "}", "Ċ"], "dataflow_graph": [["M", 6, "comesFrom", ["M"], [0]], ["M", 9, "comesFrom", ["M"], [0]], ["M", 13, "comesFrom", ["M"], [0]], ["N", 8, "comesFrom", ["N"], [1]], ["N", 10, "comesFrom", ["N"], [1]], ["N", 14, "comesFrom", ["N"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::656", "code": "// Testcase for printing typename/typedef bindings as well as template args\n// in diagnostics (PR c++/25185)\n\ntemplate <class T>\nstruct A {\n  typename T::type f();\t\t// { dg-message \"typename T::type = void*\" }\n  void f(int i = 0);\t\t// { dg-message \"\" }\n\n  typedef typename T::type mytype;\n  mytype g();\t\t\t// { dg-message \"mytype = void*\" }\n  void g(int i = 0);\t\t// { dg-message \"\" }\n};\n\nstruct B\n{\n  typedef void* type;\n};\n\n// Also make sure that deduced template arguments get canonicalized.\n\ntemplate <class T>\nvoid f (T &t);\t\t\t// { dg-message \"T = int\" }\n\ntemplate <class T>\nvoid f (T &t, int = 0);\t\t// { dg-message \"\" }\n\ntypedef int myint;\nmyint i;\nmyint *p;\n\nint main()\n{\n  A<B> a;\n  a.f();\t\t\t// { dg-error \"\" }\n  a.g();\t\t\t// { dg-error \"\" }\n\n  f(i);\t\t\t\t// { dg-error \"\" }\n  f(p);\t\t\t\t// { dg-error \"\" }\n}\n", "code_tokens": ["Ġ//", "ĠTest", "case", "Ġfor", "Ġprinting", "Ġtyp", "ename", "/", "ty", "ped", "ef", "Ġbindings", "Ġas", "Ġwell", "Ġas", "Ġtemplate", "Ġargs", "Ċ", "//", "Ġin", "Ġdiagn", "ostics", "Ġ(", "PR", "Ġc", "++", "/", "25", "185", ")", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "struct", "ĠA", "Ġ{", "Ċ", "Ġ", "Ġtyp", "ename", "ĠT", "::", "type", "Ġf", "();", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "message", "Ġ\"", "ty", "pen", "ame", "ĠT", "::", "type", "Ġ=", "Ġvoid", "*", "\"", "Ġ}", "Ċ", "Ġ", "Ġvoid", "Ġf", "(", "int", "Ġi", "Ġ=", "Ġ0", ");", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "message", "Ġ\"\"", "Ġ}", "ĊĊ", "Ġ", "Ġtyped", "ef", "Ġtyp", "ename", "ĠT", "::", "type", "Ġmy", "type", ";", "Ċ", "Ġ", "Ġmy", "type", "Ġg", "();", "ĉ", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "message", "Ġ\"", "my", "type", "Ġ=", "Ġvoid", "*", "\"", "Ġ}", "Ċ", "Ġ", "Ġvoid", "Ġg", "(", "int", "Ġi", "Ġ=", "Ġ0", ");", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "message", "Ġ\"\"", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠB", "Ċ", "{", "Ċ", "Ġ", "Ġtyped", "ef", "Ġvoid", "*", "Ġtype", ";", "Ċ", "};", "Ċ", "Ċ", "//", "ĠAlso", "Ġmake", "Ġsure", "Ġthat", "Ġded", "uced", "Ġtemplate", "Ġarguments", "Ġget", "Ġcanonical", "ized", ".", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "void", "Ġf", "Ġ(", "T", "Ġ&", "t", ");", "ĉ", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "message", "Ġ\"", "T", "Ġ=", "Ġint", "\"", "Ġ}", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ċ", "void", "Ġf", "Ġ(", "T", "Ġ&", "t", ",", "Ġint", "Ġ=", "Ġ0", ");", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "message", "Ġ\"\"", "Ġ}", "Ċ", "Ċ", "ty", "ped", "ef", "Ġint", "Ġmy", "int", ";", "Ċ", "my", "int", "Ġi", ";", "Ċ", "my", "int", "Ġ*", "p", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "ĠA", "<", "B", ">", "Ġa", ";", "Ċ", "Ġ", "Ġa", ".", "f", "();", "ĉ", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"\"", "Ġ}", "Ċ", "Ġ", "Ġa", ".", "g", "();", "ĉ", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"\"", "Ġ}", "ĊĊ", "Ġ", "Ġf", "(", "i", ");", "ĉ", "ĉ", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"\"", "Ġ}", "Ċ", "Ġ", "Ġf", "(", "p", ");", "ĉ", "ĉ", "ĉ", "ĉ", "//", "Ġ{", "Ġd", "g", "-", "error", "Ġ\"\"", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 19, "comesFrom", ["i"], [10]], ["a", 14, "comesFrom", ["a"], [13]], ["a", 16, "comesFrom", ["a"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::657", "code": "#include \"CalcEngine.hpp\"\n#include \"CalcEngineTests.hpp\"\n\nQTEST_MAIN(CalcEngineTests)\n\nvoid CalcEngineTests::simpleNumber() {\n    CalcEngine e;\n    QCOMPARE(QString(\"5\"), e.calc(\"5\"));\n}\n\nvoid CalcEngineTests::simpleSum() {\n    CalcEngine e;\n    QCOMPARE(QString(\"5\"), e.calc(\"2+3\"));\n}\n\nvoid CalcEngineTests::simpleSumWithSpaces() {\n    CalcEngine e;\n    QCOMPARE(QString(\"5\"), e.calc(\"2 +  3\"));\n}\n\nvoid CalcEngineTests::multiSumWithSpaces() {\n    CalcEngine e;\n    QCOMPARE(QString(\"9\"), e.calc(\"2 + 3 +  4\"));\n}\n\nvoid CalcEngineTests::mixSumAndMul() {\n    CalcEngine e;\n    QCOMPARE(QString(\"14\"), e.calc(\"2 + 3 *   4\"));\n}\n\nvoid CalcEngineTests::mixSumAndMulReversed() {\n    CalcEngine e;\n    QCOMPARE(QString(\"14\"), e.calc(\"4 *    3   + 2\"));\n}\n\nvoid CalcEngineTests::simpleSumParan() {\n    CalcEngine e;\n    QCOMPARE(QString(\"5\"), e.calc(\"(2+3)\"));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Cal", "c", "Engine", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Cal", "c", "Engine", "T", "ests", ".", "h", "pp", "\"", "Ċ", "Ċ", "Q", "T", "EST", "_", "MA", "IN", "(", "Cal", "c", "Engine", "T", "ests", ")", "Ċ", "Ċ", "void", "ĠCal", "c", "Engine", "T", "ests", "::", "simple", "Number", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCal", "c", "Engine", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "Q", "String", "(\"", "5", "\"),", "Ġe", ".", "cal", "c", "(\"", "5", "\")", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCal", "c", "Engine", "T", "ests", "::", "simple", "Sum", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCal", "c", "Engine", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "Q", "String", "(\"", "5", "\"),", "Ġe", ".", "cal", "c", "(\"", "2", "+", "3", "\")", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCal", "c", "Engine", "T", "ests", "::", "simple", "Sum", "With", "Sp", "aces", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCal", "c", "Engine", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "Q", "String", "(\"", "5", "\"),", "Ġe", ".", "cal", "c", "(\"", "2", "Ġ+", "Ġ", "Ġ3", "\")", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCal", "c", "Engine", "T", "ests", "::", "multi", "Sum", "With", "Sp", "aces", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCal", "c", "Engine", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "Q", "String", "(\"", "9", "\"),", "Ġe", ".", "cal", "c", "(\"", "2", "Ġ+", "Ġ3", "Ġ+", "Ġ", "Ġ4", "\")", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCal", "c", "Engine", "T", "ests", "::", "mix", "Sum", "And", "M", "ul", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCal", "c", "Engine", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "Q", "String", "(\"", "14", "\"),", "Ġe", ".", "cal", "c", "(\"", "2", "Ġ+", "Ġ3", "Ġ*", "Ġ", "Ġ", "Ġ4", "\")", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCal", "c", "Engine", "T", "ests", "::", "mix", "Sum", "And", "M", "ul", "Re", "vers", "ed", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCal", "c", "Engine", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "Q", "String", "(\"", "14", "\"),", "Ġe", ".", "cal", "c", "(\"", "4", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ3", "Ġ", "Ġ", "Ġ+", "Ġ2", "\")", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠCal", "c", "Engine", "T", "ests", "::", "simple", "Sum", "Par", "an", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCal", "c", "Engine", "Ġe", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "COM", "P", "ARE", "(", "Q", "String", "(\"", "5", "\"),", "Ġe", ".", "cal", "c", "(\"", "(", "2", "+", "3", ")", "\")", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["e", 6, "comesFrom", ["e"], [3]], ["e", 12, "comesFrom", ["e"], [9]], ["e", 18, "comesFrom", ["e"], [15]], ["e", 24, "comesFrom", ["e"], [21]], ["e", 30, "comesFrom", ["e"], [27]], ["e", 36, "comesFrom", ["e"], [33]], ["e", 42, "comesFrom", ["e"], [39]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::658", "code": "#ifndef LIBSHELLY_STRING_UTILS_HPP_KKLJKJKLBBV\n#define LIBSHELLY_STRING_UTILS_HPP_KKLJKJKLBBV\n\nnamespace shelly {\n\nstd::string ReplaceAll(const std::string& a_str, const std::string& from, const std::string& to) {\n  std::string str(a_str);\n  for (size_t start_pos = str.find(from); start_pos != std::string::npos; start_pos = str.find(from)) {\n    str.replace(start_pos, from.length(), to);\n  }\n  return str;\n}\n\nstd::vector<std::string> Split(const std::string &sentence, char separator) {\n  std::vector<std::string> tokens;\n\n  size_t pos = 0, start = 0;\n  while ((pos = sentence.find(separator, start)) != std::string::npos) {\n    if (pos >= 1 && start != pos) {\n      tokens.push_back(sentence.substr(start, pos - start));\n    }\n    start = pos + 1;\n  }\n  if (start != sentence.size()) {\n    tokens.push_back(sentence.substr(start, sentence.size() - start));\n  }\n\n  return tokens;\n}\n\n}\n\n#endif\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠLI", "BS", "HE", "LL", "Y", "_", "STR", "ING", "_", "UT", "ILS", "_", "H", "PP", "_", "KK", "L", "J", "K", "J", "K", "L", "BB", "V", "Ċ", "#", "define", "ĠLI", "BS", "HE", "LL", "Y", "_", "STR", "ING", "_", "UT", "ILS", "_", "H", "PP", "_", "KK", "L", "J", "K", "J", "K", "L", "BB", "V", "Ċ", "Ċ", "names", "pace", "Ġshell", "y", "Ġ{", "Ċ", "Ċ", "std", "::", "string", "ĠReplace", "All", "(", "const", "Ġstd", "::", "string", "&", "Ġa", "_", "str", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġfrom", ",", "Ġconst", "Ġstd", "::", "string", "&", "Ġto", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġstr", "(", "a", "_", "str", ");", "Ċ", "Ġ", "Ġfor", "Ġ(", "size", "_", "t", "Ġstart", "_", "pos", "Ġ=", "Ġstr", ".", "find", "(", "from", ");", "Ġstart", "_", "pos", "Ġ!=", "Ġstd", "::", "string", "::", "n", "pos", ";", "Ġstart", "_", "pos", "Ġ=", "Ġstr", ".", "find", "(", "from", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstr", ".", "replace", "(", "start", "_", "pos", ",", "Ġfrom", ".", "length", "(),", "Ġto", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġstr", ";", "Ċ", "}", "Ċ", "Ċ", "std", "::", "vector", "<", "std", "::", "string", ">", "ĠSplit", "(", "const", "Ġstd", "::", "string", "Ġ&", "sent", "ence", ",", "Ġchar", "Ġsepar", "ator", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "Ġtokens", ";", "ĊĊ", "Ġ", "Ġsize", "_", "t", "Ġpos", "Ġ=", "Ġ0", ",", "Ġstart", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġwhile", "Ġ((", "pos", "Ġ=", "Ġsentence", ".", "find", "(", "separ", "ator", ",", "Ġstart", "))", "Ġ!=", "Ġstd", "::", "string", "::", "n", "pos", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "pos", "Ġ>=", "Ġ1", "Ġ&&", "Ġstart", "Ġ!=", "Ġpos", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtokens", ".", "push", "_", "back", "(", "sent", "ence", ".", "sub", "str", "(", "start", ",", "Ġpos", "Ġ-", "Ġstart", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstart", "Ġ=", "Ġpos", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ(", "start", "Ġ!=", "Ġsentence", ".", "size", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtokens", ".", "push", "_", "back", "(", "sent", "ence", ".", "sub", "str", "(", "start", ",", "Ġsentence", ".", "size", "()", "Ġ-", "Ġstart", "));", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġtokens", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["start_pos", 11, "comesFrom", ["start_pos"], [7]], ["start_pos", 19, "comesFrom", ["start_pos"], [13]], ["separator", 33, "comesFrom", ["separator"], [26]], ["start", 34, "comesFrom", ["start"], [29]], ["start", 37, "comesFrom", ["start"], [29]], ["start", 43, "comesFrom", ["start"], [29]], ["start", 45, "comesFrom", ["start"], [29]], ["start", 48, "comesFrom", ["start"], [46]], ["start", 55, "comesFrom", ["start"], [46]], ["start", 58, "comesFrom", ["start"], [46]], ["pos", 36, "comesFrom", ["pos"], [30]], ["pos", 38, "comesFrom", ["pos"], [30]], ["pos", 44, "comesFrom", ["pos"], [30]], ["pos", 47, "comesFrom", ["pos"], [30]], ["tokens", 39, "comesFrom", ["tokens"], [27]], ["tokens", 51, "comesFrom", ["tokens"], [27]], ["tokens", 59, "comesFrom", ["tokens"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::659", "code": "#include \"ServerTask.h\"\n#include \"NetServer.h\"\n#include \"ReceiveNetTask.h\"\n#include \"HeadTask.h\"\n\nServerTask::ServerTask():\nm_port(0),\nm_netServer(nullptr)\n{\n\n}\n\nvoid ServerTask::DoTask()\n{\n\tif (!m_netServer->initServer(m_port))\n\t{\n\t\treturn;\n\t}\n\n\tm_netServer->m_receiveThreadId = CTaskThreadManager::Instance().Init();\n\n\tstd::shared_ptr<ReceiveNetTask> spReceiveTask(new ReceiveNetTask);\n\tspReceiveTask->setParam(&m_netServer->m_receiveQueue, &m_netServer->m_receiveSemaphore, m_netServer);\n\tCTaskThreadManager::Instance().GetThreadInterface(m_netServer->m_receiveThreadId)->PostTask(spReceiveTask);\n\n\tm_netServer->head();\n\n\tm_netServer->loop();\n}\n\nvoid ServerTask::setParam(int32_t port, NetServer* netServer)\n{\n\tm_port = port;\n\tm_netServer = netServer;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Server", "Task", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Net", "Server", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Re", "ceive", "Net", "Task", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Head", "Task", ".", "h", "\"", "Ċ", "Ċ", "Server", "Task", "::", "Server", "Task", "():", "Ċ", "m", "_", "port", "(", "0", "),", "Ċ", "m", "_", "net", "Server", "(", "null", "ptr", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠServer", "Task", "::", "Do", "Task", "()", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(!", "m", "_", "net", "Server", "->", "init", "Server", "(", "m", "_", "port", "))", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "m", "_", "net", "Server", "->", "m", "_", "re", "ceive", "Thread", "Id", "Ġ=", "ĠCT", "ask", "Thread", "Manager", "::", "Instance", "().", "Init", "();", "ĊĊ", "ĉ", "std", "::", "shared", "_", "ptr", "<", "Re", "ceive", "Net", "Task", ">", "Ġsp", "Re", "ceive", "Task", "(", "new", "ĠRe", "ceive", "Net", "Task", ");", "Ċ", "ĉ", "sp", "Re", "ceive", "Task", "->", "set", "Param", "(&", "m", "_", "net", "Server", "->", "m", "_", "re", "ceive", "Queue", ",", "Ġ&", "m", "_", "net", "Server", "->", "m", "_", "re", "ceive", "Sem", "aph", "ore", ",", "Ġm", "_", "net", "Server", ");", "Ċ", "ĉ", "CT", "ask", "Thread", "Manager", "::", "Instance", "().", "Get", "Thread", "Interface", "(", "m", "_", "net", "Server", "->", "m", "_", "re", "ceive", "Thread", "Id", ")", "->", "Post", "Task", "(", "sp", "Re", "ceive", "Task", ");", "ĊĊ", "ĉ", "m", "_", "net", "Server", "->", "head", "();", "ĊĊ", "ĉ", "m", "_", "net", "Server", "->", "loop", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠServer", "Task", "::", "set", "Param", "(", "int", "32", "_", "t", "Ġport", ",", "ĠNet", "Server", "*", "Ġnet", "Server", ")", "Ċ", "{", "Ċ", "ĉ", "m", "_", "port", "Ġ=", "Ġport", ";", "Ċ", "ĉ", "m", "_", "net", "Server", "Ġ=", "Ġnet", "Server", ";", "Ċ", "}"], "dataflow_graph": [["spReceiveTask", 12, "comesFrom", ["spReceiveTask"], [11]], ["spReceiveTask", 24, "comesFrom", ["spReceiveTask"], [11]], ["port", 33, "comesFrom", ["port"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::660", "code": "//\n// Created by Sashank on 3/22/2016.\n//\n\n#include \"Algebra.h\"\n#include <algorithm>\n#include <ctime>\n\n#define LARGEVALUE 1e10\n\n\nconst double Algebra::floatDivision(const double a, const double b) {\n    if (b == 0){\n        if (a == 0) return 0;\n    else return LARGEVALUE * sign(a);\n}\n    else {\n        if (a == 0) return 0;\n        else {\n            if ((a + b) == a)                       //a is infinity\n                return LARGEVALUE * sign(a) * sign(b);\n        }\n        return a / b;\n    }\n}\n\n\nint Algebra::sign(double x)\n{\n    return (x == 0 ? 0 : (x < 0 ? -1 : 1));\n}\n\ndouble Algebra::deg2rad (double degrees) {\n    return degrees * 4.0 * atan (1.0) / 180.0;\n}\n\n\ndouble Algebra::getRandomBetween(double min, double max) {\n    if (min > max) std::swap(min, max);\n    return min + ((double)rand() * (max - min) /RAND_MAX);\n}\n\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "ĠS", "ash", "ank", "Ġon", "Ġ3", "/", "22", "/", "2016", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "Al", "gebra", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "ct", "ime", ">", "Ċ", "Ċ", "#", "define", "ĠLAR", "GE", "VALUE", "Ġ1", "e", "10", "ĊĊ", "Ċ", "const", "Ġdouble", "ĠAl", "gebra", "::", "float", "Div", "ision", "(", "const", "Ġdouble", "Ġa", ",", "Ġconst", "Ġdouble", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "b", "Ġ==", "Ġ0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "Ġ==", "Ġ0", ")", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġreturn", "ĠLAR", "GE", "VALUE", "Ġ*", "Ġsign", "(", "a", ");", "Ċ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "Ġ==", "Ġ0", ")", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "a", "Ġ+", "Ġb", ")", "Ġ==", "Ġa", ")", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "a", "Ġis", "Ġinfinity", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠLAR", "GE", "VALUE", "Ġ*", "Ġsign", "(", "a", ")", "Ġ*", "Ġsign", "(", "b", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", "Ġ/", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ", "Ċ", "int", "ĠAl", "gebra", "::", "sign", "(", "double", "Ġx", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ(", "x", "Ġ==", "Ġ0", "Ġ?", "Ġ0", "Ġ:", "Ġ(", "x", "Ġ<", "Ġ0", "Ġ?", "Ġ-", "1", "Ġ:", "Ġ1", "));", "Ċ", "}", "Ċ", "Ċ", "double", "ĠAl", "gebra", "::", "deg", "2", "rad", "Ġ(", "double", "Ġdegrees", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġdegrees", "Ġ*", "Ġ4", ".", "0", "Ġ*", "Ġat", "an", "Ġ(", "1", ".", "0", ")", "Ġ/", "Ġ180", ".", "0", ";", "Ċ", "}", "ĊĊ", "Ċ", "double", "ĠAl", "gebra", "::", "get", "Random", "Between", "(", "double", "Ġmin", ",", "Ġdouble", "Ġmax", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "min", "Ġ>", "Ġmax", ")", "Ġstd", "::", "sw", "ap", "(", "min", ",", "Ġmax", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmin", "Ġ+", "Ġ((", "double", ")", "rand", "()", "Ġ*", "Ġ(", "max", "Ġ-", "Ġmin", ")", "Ġ/", "R", "AND", "_", "MAX", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["b", 4, "comesFrom", ["b"], [3]], ["b", 11, "comesFrom", ["b"], [3]], ["b", 17, "comesFrom", ["b"], [3]], ["b", 19, "comesFrom", ["b"], [3]], ["a", 5, "comesFrom", ["a"], [2]], ["a", 8, "comesFrom", ["a"], [2]], ["a", 9, "comesFrom", ["a"], [2]], ["a", 10, "comesFrom", ["a"], [2]], ["a", 12, "comesFrom", ["a"], [2]], ["a", 15, "comesFrom", ["a"], [2]], ["a", 18, "comesFrom", ["a"], [2]], ["x", 22, "comesFrom", ["x"], [21]], ["x", 23, "comesFrom", ["x"], [21]], ["degrees", 26, "comesFrom", ["degrees"], [25]], ["min", 31, "comesFrom", ["min"], [29]], ["min", 34, "comesFrom", ["min"], [29]], ["min", 36, "comesFrom", ["min"], [29]], ["min", 39, "comesFrom", ["min"], [29]], ["max", 32, "comesFrom", ["max"], [30]], ["max", 35, "comesFrom", ["max"], [30]], ["max", 38, "comesFrom", ["max"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::661", "code": "/*---------------------------------------------------------------------\n*\n* Copyright © 2015  Minsi Chen\n* E-mail: m.chen@derby.ac.uk\n*\n* The source is written for the Graphics I and II modules. You are free\n* to use and extend the functionality. The code provided here is functional\n* however the author does not guarantee its performance.\n---------------------------------------------------------------------*/\n#include \"Light.h\"\n\n\nLight::Light()\n{\n\tInitDefaultLight();\n}\n\n\nLight::~Light()\n{\n}\n\nvoid Light::InitDefaultLight()\n{\n\t//set default position and colour for a light\n\tSetLightColour(1.0, 1.0, 1.0);\n\tSetLightPosition(0.0, 20.0, 0.0);\n}\n\nvoid Light::SetLightColour(double r, double g, double b)\n{\n\tmColour.SetVector(r, g, b);\n}\n\nvoid Light::SetLightPosition(double x, double y, double z)\n{\n\tmPosition.SetVector(x, y, z);\n}\n", "code_tokens": ["Ġ/*", "----------------------------------------------------------------", "-----", "Ċ", "*", "Ċ", "*", "ĠCopyright", "ĠÂ©", "Ġ2015", "Ġ", "ĠM", "ins", "i", "ĠChen", "Ċ", "*", "ĠE", "-", "mail", ":", "Ġm", ".", "chen", "@", "der", "by", ".", "ac", ".", "uk", "Ċ", "*", "Ċ", "*", "ĠThe", "Ġsource", "Ġis", "Ġwritten", "Ġfor", "Ġthe", "ĠGraphics", "ĠI", "Ġand", "ĠII", "Ġmodules", ".", "ĠYou", "Ġare", "Ġfree", "Ċ", "*", "Ġto", "Ġuse", "Ġand", "Ġextend", "Ġthe", "Ġfunctionality", ".", "ĠThe", "Ġcode", "Ġprovided", "Ġhere", "Ġis", "Ġfunctional", "Ċ", "*", "Ġhowever", "Ġthe", "Ġauthor", "Ġdoes", "Ġnot", "Ġguarantee", "Ġits", "Ġperformance", ".", "Ċ", "----------------------------------------------------------------", "-----", "*/", "Ċ", "#", "include", "Ġ\"", "Light", ".", "h", "\"", "ĊĊ", "Ċ", "Light", "::", "Light", "()", "Ċ", "{", "Ċ", "ĉ", "Init", "Default", "Light", "();", "Ċ", "}", "ĊĊ", "Ċ", "Light", "::", "~", "Light", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLight", "::", "Init", "Default", "Light", "()", "Ċ", "{", "Ċ", "ĉ", "//", "set", "Ġdefault", "Ġposition", "Ġand", "Ġcolour", "Ġfor", "Ġa", "Ġlight", "Ċ", "ĉ", "Set", "Light", "Col", "our", "(", "1", ".", "0", ",", "Ġ1", ".", "0", ",", "Ġ1", ".", "0", ");", "Ċ", "ĉ", "Set", "Light", "Position", "(", "0", ".", "0", ",", "Ġ20", ".", "0", ",", "Ġ0", ".", "0", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLight", "::", "Set", "Light", "Col", "our", "(", "double", "Ġr", ",", "Ġdouble", "Ġg", ",", "Ġdouble", "Ġb", ")", "Ċ", "{", "Ċ", "ĉ", "m", "Col", "our", ".", "Set", "Vector", "(", "r", ",", "Ġg", ",", "Ġb", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLight", "::", "Set", "Light", "Position", "(", "double", "Ġx", ",", "Ġdouble", "Ġy", ",", "Ġdouble", "Ġz", ")", "Ċ", "{", "Ċ", "ĉ", "m", "Position", ".", "Set", "Vector", "(", "x", ",", "Ġy", ",", "Ġz", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["r", 12, "comesFrom", ["r"], [7]], ["g", 13, "comesFrom", ["g"], [8]], ["b", 14, "comesFrom", ["b"], [9]], ["x", 21, "comesFrom", ["x"], [16]], ["y", 22, "comesFrom", ["y"], [17]], ["z", 23, "comesFrom", ["z"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::662", "code": "#include \"mappers.h\"\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Mapper 79 - American Video Entertainment mapper\n\nvoid Mapper79_writeSpecial(unsigned int address, unsigned char value) {\n\tif (address >= 0x4000) {\n\t\t// very simple register mask\n\t\tif ((address & 0xE100) == 0x4100) {\n\t\t\tMapper79_CONTROL_PRG = (value & 0x8) >> 3;\n\t\t}\n\t\tMapper79_CONTROL_CHAR = value & 0x7;\n\t\tnesCart.Mapper79_Update();\n\t}\n}\n\nvoid nes_cart::Mapper79_Update() {\n \tunsigned int prgBank = (Mapper79_CONTROL_PRG * 4) & (numPRGBanks * 2 - 1);\n\tMapProgramBanks(0, prgBank, 4);\n\n\tunsigned int chrBank = (Mapper79_CONTROL_CHAR & (numCHRBanks - 1)) * 8;\n\tMapCharacterBanks(0, chrBank, 8);\n}\n\nvoid nes_cart::setupMapper79_AVE() {\n\twriteSpecial = Mapper79_writeSpecial;\n\n\tcachedBankCount = availableROMBanks;\n\n\t// only CHR ROM\n\tDebugAssert(numCHRBanks);\n\tMapCharacterBanks(0, 0, 8);\n\n\t// map first 32 KB of PRG mamory to 80-FF by default\n\tMapProgramBanks(0, 0, 4);\n\n\t// RAM bank is not supported\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "m", "appers", ".", "h", "\"", "Ċ", "Ċ", "////////////////////////////////", "////////////////////////////////", "////////////////////////////////", "////////", "////", "/", "Ċ", "//", "ĠM", "apper", "Ġ79", "Ġ-", "ĠAmerican", "ĠVideo", "ĠEntertainment", "Ġm", "apper", "Ċ", "Ċ", "void", "ĠM", "apper", "79", "_", "write", "Special", "(", "unsigned", "Ġint", "Ġaddress", ",", "Ġunsigned", "Ġchar", "Ġvalue", ")", "Ġ{", "Ċ", "ĉ", "if", "Ġ(", "address", "Ġ>=", "Ġ0", "x", "4000", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "//", "Ġvery", "Ġsimple", "Ġregister", "Ġmask", "Ċ", "ĉ", "ĉ", "if", "Ġ((", "address", "Ġ&", "Ġ0", "x", "E", "100", ")", "Ġ==", "Ġ0", "x", "4", "100", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "M", "apper", "79", "_", "CON", "TR", "OL", "_", "PR", "G", "Ġ=", "Ġ(", "value", "Ġ&", "Ġ0", "x", "8", ")", "Ġ>>", "Ġ3", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "M", "apper", "79", "_", "CON", "TR", "OL", "_", "CHAR", "Ġ=", "Ġvalue", "Ġ&", "Ġ0", "x", "7", ";", "Ċ", "ĉ", "ĉ", "nes", "Cart", ".", "M", "apper", "79", "_", "Update", "();", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "Ġn", "es", "_", "cart", "::", "M", "apper", "79", "_", "Update", "()", "Ġ{", "Ċ", "Ġ", "ĉ", "unsigned", "Ġint", "Ġpr", "g", "Bank", "Ġ=", "Ġ(", "M", "apper", "79", "_", "CON", "TR", "OL", "_", "PR", "G", "Ġ*", "Ġ4", ")", "Ġ&", "Ġ(", "num", "PR", "GB", "anks", "Ġ*", "Ġ2", "Ġ-", "Ġ1", ");", "Ċ", "ĉ", "Map", "Program", "B", "anks", "(", "0", ",", "Ġpr", "g", "Bank", ",", "Ġ4", ");", "ĊĊ", "ĉ", "unsigned", "Ġint", "Ġch", "r", "Bank", "Ġ=", "Ġ(", "M", "apper", "79", "_", "CON", "TR", "OL", "_", "CHAR", "Ġ&", "Ġ(", "num", "CH", "RB", "anks", "Ġ-", "Ġ1", "))", "Ġ*", "Ġ8", ";", "Ċ", "ĉ", "Map", "Character", "B", "anks", "(", "0", ",", "Ġch", "r", "Bank", ",", "Ġ8", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġn", "es", "_", "cart", "::", "setup", "M", "apper", "79", "_", "A", "VE", "()", "Ġ{", "Ċ", "ĉ", "write", "Special", "Ġ=", "ĠM", "apper", "79", "_", "write", "Special", ";", "ĊĊ", "ĉ", "c", "ached", "Bank", "Count", "Ġ=", "Ġavailable", "ROM", "B", "anks", ";", "ĊĊ", "ĉ", "//", "Ġonly", "ĠCHR", "ĠROM", "Ċ", "ĉ", "Debug", "Ass", "ert", "(", "num", "CH", "RB", "anks", ");", "Ċ", "ĉ", "Map", "Character", "B", "anks", "(", "0", ",", "Ġ0", ",", "Ġ8", ");", "ĊĊ", "ĉ", "//", "Ġmap", "Ġfirst", "Ġ32", "ĠKB", "Ġof", "ĠPR", "G", "Ġm", "am", "ory", "Ġto", "Ġ80", "-", "FF", "Ġby", "Ġdefault", "Ċ", "ĉ", "Map", "Program", "B", "anks", "(", "0", ",", "Ġ0", ",", "Ġ4", ");", "ĊĊ", "ĉ", "//", "ĠRAM", "Ġbank", "Ġis", "Ġnot", "Ġsupported", "Ċ", "}", "Ċ"], "dataflow_graph": [["address", 3, "comesFrom", ["address"], [1]], ["address", 4, "comesFrom", ["address"], [1]], ["value", 6, "comesFrom", ["value"], [2]], ["value", 8, "comesFrom", ["value"], [2]], ["Mapper79_CONTROL_PRG", 13, "comesFrom", ["Mapper79_CONTROL_PRG"], [5]], ["prgBank", 16, "comesFrom", ["prgBank"], [12]], ["Mapper79_CONTROL_CHAR", 18, "comesFrom", ["Mapper79_CONTROL_CHAR"], [7]], ["chrBank", 21, "comesFrom", ["chrBank"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::663", "code": "#include <chrono>\n#include <iostream>\nusing std::cout;\nusing std::endl;\n\n#include \"ThreadPool.h\"\n\nint main() {\n  ThreadPool<void> pool;\n  pool.queueTask([]{\n      cout << \"computing..\" << endl;\n      for (int i = 0; i < 10; i++) {\n        cout << i << endl;\n        std::this_thread::sleep_for(std::chrono::milliseconds(300));\n      }\n      cout << \"done..\" << endl;\n    });\n\n  cout << \"before\" << endl;\n  pool.process([]{\n      cout << \"done callback!\" << endl;\n    });\n  cout << \"after\" << endl;\n\n  for (int i = 0; i < 3; i++) {\n    pool.queueTask([i]{\n        std::this_thread::sleep_for(std::chrono::milliseconds(500 * (i+1)));\n        cout << \"this was added after process started\" << endl;\n      });\n  }\n\n  // Only one processing invocation can be live at any one time. A mutex\n  // protects against it. Because of the callback to the above process() it will\n  // return immediately, but it will still hold the lock so this call will wait.\n  pool.process();\n\n  return 0;\n\n  // When pool is to be destroyed it will join its thread if joinable. In other\n  // words, it will wait if need be instead of prematurely stopping the\n  // asynchronous computations.\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "chron", "o", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "Ċ", "#", "include", "Ġ\"", "Thread", "Pool", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "ĠThread", "Pool", "<", "void", ">", "Ġpool", ";", "Ċ", "Ġ", "Ġpool", ".", "queue", "Task", "(", "[]", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "com", "puting", "..", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ10", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġi", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "this", "_", "thread", "::", "sleep", "_", "for", "(", "std", "::", "chron", "o", "::", "mill", "isec", "onds", "(", "300", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "done", "..", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ});", "ĊĊ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "before", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġpool", ".", "process", "(", "[]", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "done", "Ġcallback", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ});", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "after", "\"", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ3", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpool", ".", "queue", "Task", "([", "i", "]", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "this", "_", "thread", "::", "sleep", "_", "for", "(", "std", "::", "chron", "o", "::", "mill", "isec", "onds", "(", "500", "Ġ*", "Ġ(", "i", "+", "1", "))", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "this", "Ġwas", "Ġadded", "Ġafter", "Ġprocess", "Ġstarted", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ});", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ//", "ĠOnly", "Ġone", "Ġprocessing", "Ġinvocation", "Ġcan", "Ġbe", "Ġlive", "Ġat", "Ġany", "Ġone", "Ġtime", ".", "ĠA", "Ġmut", "ex", "Ċ", "Ġ", "Ġ//", "Ġprotects", "Ġagainst", "Ġit", ".", "ĠBecause", "Ġof", "Ġthe", "Ġcallback", "Ġto", "Ġthe", "Ġabove", "Ġprocess", "()", "Ġit", "Ġwill", "Ċ", "Ġ", "Ġ//", "Ġreturn", "Ġimmediately", ",", "Ġbut", "Ġit", "Ġwill", "Ġstill", "Ġhold", "Ġthe", "Ġlock", "Ġso", "Ġthis", "Ġcall", "Ġwill", "Ġwait", ".", "Ċ", "Ġ", "Ġpool", ".", "process", "();", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ//", "ĠWhen", "Ġpool", "Ġis", "Ġto", "Ġbe", "Ġdestroyed", "Ġit", "Ġwill", "Ġjoin", "Ġits", "Ġthread", "Ġif", "Ġjoin", "able", ".", "ĠIn", "Ġother", "Ċ", "Ġ", "Ġ//", "Ġwords", ",", "Ġit", "Ġwill", "Ġwait", "Ġif", "Ġneed", "Ġbe", "Ġinstead", "Ġof", "Ġprematurely", "Ġstopping", "Ġthe", "Ċ", "Ġ", "Ġ//", "Ġasynchronous", "Ġcomput", "ations", ".", "Ċ", "}", "Ċ"], "dataflow_graph": [["pool", 4, "comesFrom", ["pool"], [3]], ["pool", 20, "comesFrom", ["pool"], [3]], ["pool", 29, "comesFrom", ["pool"], [3]], ["pool", 37, "comesFrom", ["pool"], [3]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 10, "comesFrom", ["i"], [8]], ["i", 12, "comesFrom", ["i"], [8]], ["i", 27, "comesFrom", ["i"], [26]], ["i", 28, "comesFrom", ["i"], [26]], ["i", 31, "comesFrom", ["i"], [26]], ["i", 34, "comesFrom", ["i"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::664", "code": "#define NULL 0\r\n#include<iostream>\r\n\r\nstruct Student\r\n{ int num;\r\n\tfloat score;\r\n\tstruct Student *next;\r\n};\r\n\r\nint main(){\r\n\tStudent a,b,c,*head,*p;\r\n\ta.num = 31001;a.score=89.5;\r\n\tb.num = 31003;b.score=90;\r\n\tc.num = 31007;c.score=85;\r\n\thead = &a;\r\n\ta.next = &b;\r\n\tb.next = &c;\r\n\tc.next = NULL:\r\n\tp = head;\r\n\tdo {\r\n\t\tstd:cout<<p->num<<p->score<<endl;\r\n\t\tp=p->next;\r\n\t}while(p!=null);\r\n\treturn 0;\r\n}", "code_tokens": ["Ġ#", "define", "ĠNULL", "Ġ0", "č", "Ċ", "#", "include", "<", "i", "ost", "ream", ">", "č", "Ċ", "č", "Ċ", "struct", "ĠStudent", "č", "Ċ", "{", "Ġint", "Ġnum", ";", "č", "Ċ", "ĉ", "float", "Ġscore", ";", "č", "Ċ", "ĉ", "struct", "ĠStudent", "Ġ*", "next", ";", "č", "Ċ", "};", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(){", "č", "Ċ", "ĉ", "Student", "Ġa", ",", "b", ",", "c", ",", "*", "head", ",", "*", "p", ";", "č", "Ċ", "ĉ", "a", ".", "num", "Ġ=", "Ġ3", "1001", ";", "a", ".", "score", "=", "89", ".", "5", ";", "č", "Ċ", "ĉ", "b", ".", "num", "Ġ=", "Ġ3", "100", "3", ";", "b", ".", "score", "=", "90", ";", "č", "Ċ", "ĉ", "c", ".", "num", "Ġ=", "Ġ3", "1007", ";", "c", ".", "score", "=", "85", ";", "č", "Ċ", "ĉ", "head", "Ġ=", "Ġ&", "a", ";", "č", "Ċ", "ĉ", "a", ".", "next", "Ġ=", "Ġ&", "b", ";", "č", "Ċ", "ĉ", "b", ".", "next", "Ġ=", "Ġ&", "c", ";", "č", "Ċ", "ĉ", "c", ".", "next", "Ġ=", "ĠNULL", ":", "č", "Ċ", "ĉ", "p", "Ġ=", "Ġhead", ";", "č", "Ċ", "ĉ", "do", "Ġ{", "č", "Ċ", "ĉ", "ĉ", "std", ":", "c", "out", "<<", "p", "->", "num", "<<", "p", "->", "score", "<<", "end", "l", ";", "č", "Ċ", "ĉ", "ĉ", "p", "=", "p", "->", "next", ";", "č", "Ċ", "ĉ", "}", "while", "(", "p", "!", "=", "null", ");", "č", "Ċ", "ĉ", "return", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["head", 33, "comesFrom", ["head"], [22]], ["p", 35, "comesFrom", ["p"], [32]], ["p", 37, "comesFrom", ["p"], [32]], ["p", 41, "comesFrom", ["p"], [40]], ["p", 43, "comesFrom", ["p"], [40]], ["a", 10, "comesFrom", ["a"], [5]], ["a", 12, "comesFrom", ["a"], [5]], ["a", 23, "comesFrom", ["a"], [5]], ["a", 24, "comesFrom", ["a"], [5]], ["b", 14, "comesFrom", ["b"], [6]], ["b", 16, "comesFrom", ["b"], [6]], ["b", 26, "comesFrom", ["b"], [6]], ["b", 27, "comesFrom", ["b"], [6]], ["c", 18, "comesFrom", ["c"], [7]], ["c", 20, "comesFrom", ["c"], [7]], ["c", 29, "comesFrom", ["c"], [7]], ["c", 30, "comesFrom", ["c"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::665", "code": "\n#include \"AbstractConfigLoader.h\"\n\nnamespace Quartz {\n\nstruct AbstractConfigLoader::Data {\n    explicit Data(StoreFunc func)\n        : m_func(func) {\n    }\n\n    StoreFunc m_func;\n};\n\nAbstractConfigLoader::~AbstractConfigLoader() {\n}\n\nAbstractConfigLoader::StoreFunc AbstractConfigLoader::storeFunc() const {\n    return m_data->m_func;\n}\n\nAbstractConfigLoader::AbstractConfigLoader(\n    AbstractConfigLoader::StoreFunc storeFunc)\n    : m_data(std::make_unique<Data>(storeFunc)) {\n}\n\n} // namespace Quartz\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "Abstract", "Config", "Loader", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠQuartz", "Ġ{", "Ċ", "Ċ", "struct", "ĠAbstract", "Config", "Loader", "::", "Data", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġexplicit", "ĠData", "(", "Store", "F", "unc", "Ġfunc", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġm", "_", "func", "(", "func", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠStore", "F", "unc", "Ġm", "_", "func", ";", "Ċ", "};", "Ċ", "Ċ", "Abstract", "Config", "Loader", "::", "~", "Abstract", "Config", "Loader", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Abstract", "Config", "Loader", "::", "Store", "F", "unc", "ĠAbstract", "Config", "Loader", "::", "store", "F", "unc", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġm", "_", "data", "->", "m", "_", "func", ";", "Ċ", "}", "Ċ", "Ċ", "Abstract", "Config", "Loader", "::", "Abstract", "Config", "Loader", "(", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAbstract", "Config", "Loader", "::", "Store", "F", "unc", "Ġstore", "F", "unc", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġm", "_", "data", "(", "std", "::", "make", "_", "unique", "<", "Data", ">(", "store", "F", "unc", "))", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠQuartz", "Ċ"], "dataflow_graph": [["func", 3, "comesFrom", ["func"], [1]], ["storeFunc", 13, "comesFrom", ["storeFunc"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::666", "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  /*\n    %d utilizado para inteiro\n    %c utilizado para caracter\n    %f utilizado para float(ponto flutuante)\n    %lf utilizado para double\n    %s utilizado para string\n    %o utilizado para octal\n    %x utilizado para hexadecimal\n    \\n utilizado para nova linha\n  */\n\n  int input_int;\n  char input_char;\n  float input_float;\n  double input_double;\n  char input_string[255];\n\n  scanf(\"%d\\n\", &input_int);\n  scanf(\"%c\\n\", &input_char);\n  scanf(\"%f\\n\", &input_float);\n  scanf(\"%lf\\n\", &input_double);\n  scanf(\"%s\\n\", &input_string);\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ/*", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ%", "d", "Ġutil", "iz", "ado", "Ġpara", "Ġint", "e", "iro", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ%", "c", "Ġutil", "iz", "ado", "Ġpara", "Ġcar", "acter", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ%", "f", "Ġutil", "iz", "ado", "Ġpara", "Ġfloat", "(", "p", "onto", "Ġfl", "ut", "u", "ante", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ%", "lf", "Ġutil", "iz", "ado", "Ġpara", "Ġdouble", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ%", "s", "Ġutil", "iz", "ado", "Ġpara", "Ġstring", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ%", "o", "Ġutil", "iz", "ado", "Ġpara", "Ġoct", "al", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ%", "x", "Ġutil", "iz", "ado", "Ġpara", "Ġhex", "ade", "c", "imal", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ\\", "n", "Ġutil", "iz", "ado", "Ġpara", "Ġno", "va", "Ġlin", "ha", "Ċ", "Ġ", "Ġ*/", "ĊĊ", "Ġ", "Ġint", "Ġinput", "_", "int", ";", "Ċ", "Ġ", "Ġchar", "Ġinput", "_", "char", ";", "Ċ", "Ġ", "Ġfloat", "Ġinput", "_", "float", ";", "Ċ", "Ġ", "Ġdouble", "Ġinput", "_", "double", ";", "Ċ", "Ġ", "Ġchar", "Ġinput", "_", "string", "[", "255", "];", "ĊĊ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\\", "n", "\",", "Ġ&", "input", "_", "int", ");", "Ċ", "Ġ", "Ġscan", "f", "(\"", "%", "c", "\\", "n", "\",", "Ġ&", "input", "_", "char", ");", "Ċ", "Ġ", "Ġscan", "f", "(\"", "%", "f", "\\", "n", "\",", "Ġ&", "input", "_", "float", ");", "Ċ", "Ġ", "Ġscan", "f", "(\"", "%", "lf", "\\", "n", "\",", "Ġ&", "input", "_", "double", ");", "Ċ", "Ġ", "Ġscan", "f", "(\"", "%", "s", "\\", "n", "\",", "Ġ&", "input", "_", "string", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["input_int", 8, "comesFrom", ["input_int"], [2]], ["input_char", 10, "comesFrom", ["input_char"], [3]], ["input_float", 12, "comesFrom", ["input_float"], [4]], ["input_double", 14, "comesFrom", ["input_double"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::667", "code": "// You are climbing a stair case. It takes n steps to reach to the top.\n//\n// Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\n//\n//\n// Note: Given n will be a positive integer.\n\n\nclass Solution {\npublic:\n    int climbStairs(int n)\n    {\n        ++n;\n        double phi = (1 + pow(5, 0.5)) / 2;\n        return round(pow(phi, n) / pow(5, 0.5));\n    }\n};\n", "code_tokens": ["Ġ//", "ĠYou", "Ġare", "Ġclimbing", "Ġa", "Ġstair", "Ġcase", ".", "ĠIt", "Ġtakes", "Ġn", "Ġsteps", "Ġto", "Ġreach", "Ġto", "Ġthe", "Ġtop", ".", "Ċ", "//", "Ċ", "//", "ĠEach", "Ġtime", "Ġyou", "Ġcan", "Ġeither", "Ġclimb", "Ġ1", "Ġor", "Ġ2", "Ġsteps", ".", "ĠIn", "Ġhow", "Ġmany", "Ġdistinct", "Ġways", "Ġcan", "Ġyou", "Ġclimb", "Ġto", "Ġthe", "Ġtop", "?", "Ċ", "//", "Ċ", "//", "Ċ", "//", "ĠNote", ":", "ĠGiven", "Ġn", "Ġwill", "Ġbe", "Ġa", "Ġpositive", "Ġinteger", ".", "ĊĊ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġclimb", "St", "airs", "(", "int", "Ġn", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġph", "i", "Ġ=", "Ġ(", "1", "Ġ+", "Ġpow", "(", "5", ",", "Ġ0", ".", "5", "))", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġround", "(", "p", "ow", "(", "phi", ",", "Ġn", ")", "Ġ/", "Ġpow", "(", "5", ",", "Ġ0", ".", "5", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["n", 2, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["phi", 7, "comesFrom", ["phi"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::668", "code": "#include \"OsciCanvasInt.h\"\n#include \"GraphLissajous.h\"\n\n#define SCALEX  250\n#define SCALEY  200\n\nvoid GraphLissajous::init()\n{\n\tCanvasInt.init(1,1);\n}\n\n\n\nfloat t = 0;\n\nvoid GraphLissajous::draw()\n{\n\tint x0 = 0, y0 = 0;\n\n\tdo {\n\t\tint x = (int)(SCALEX * cos(3.0 * t)) + 256;\n\t\tint y = (int)(SCALEX * cos(4.01 * t)) + 256;\n\t\tt += 0.02;\n\t\tCanvasInt.line(x0, y0, x, y);\n\t\tx0 = x;\n\t\ty0 = y;\n\t} while(true);\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Os", "ci", "Can", "vas", "Int", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Graph", "L", "iss", "aj", "ous", ".", "h", "\"", "Ċ", "Ċ", "#", "define", "ĠSC", "AL", "EX", "Ġ", "Ġ250", "Ċ", "#", "define", "ĠSC", "ALE", "Y", "Ġ", "Ġ200", "Ċ", "Ċ", "void", "ĠGraph", "L", "iss", "aj", "ous", "::", "init", "()", "Ċ", "{", "Ċ", "ĉ", "Can", "vas", "Int", ".", "init", "(", "1", ",", "1", ");", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "float", "Ġt", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "void", "ĠGraph", "L", "iss", "aj", "ous", "::", "draw", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġx", "0", "Ġ=", "Ġ0", ",", "Ġy", "0", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "do", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "Ġx", "Ġ=", "Ġ(", "int", ")(", "SC", "AL", "EX", "Ġ*", "Ġcos", "(", "3", ".", "0", "Ġ*", "Ġt", "))", "Ġ+", "Ġ256", ";", "Ċ", "ĉ", "ĉ", "int", "Ġy", "Ġ=", "Ġ(", "int", ")(", "SC", "AL", "EX", "Ġ*", "Ġcos", "(", "4", ".", "01", "Ġ*", "Ġt", "))", "Ġ+", "Ġ256", ";", "Ċ", "ĉ", "ĉ", "t", "Ġ+=", "Ġ0", ".", "02", ";", "Ċ", "ĉ", "ĉ", "Can", "vas", "Int", ".", "line", "(", "x", "0", ",", "Ġy", "0", ",", "Ġx", ",", "Ġy", ");", "Ċ", "ĉ", "ĉ", "x", "0", "Ġ=", "Ġx", ";", "Ċ", "ĉ", "ĉ", "y", "0", "Ġ=", "Ġy", ";", "Ċ", "ĉ", "}", "Ġwhile", "(", "true", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["t", 12, "comesFrom", ["t"], [5]], ["t", 16, "comesFrom", ["t"], [5]], ["x0", 20, "comesFrom", ["x0"], [7]], ["y0", 21, "comesFrom", ["y0"], [8]], ["x", 22, "comesFrom", ["x"], [9]], ["x", 25, "comesFrom", ["x"], [9]], ["y", 23, "comesFrom", ["y"], [13]], ["y", 27, "comesFrom", ["y"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::669", "code": "#include \"Powerup.h\"\n#include <iostream>\n\nPowerup::Powerup(Vec2 pos, int width, int height, string filename)\n    : Object(pos, width, height, filename)\n{\n    setId(Object::POWERUP);\n}\n\nPowerup::~Powerup()\n{\n\n}\n\nvoid Powerup::update(float dt)\n{\n;\n}\n\nvoid Powerup::draw(Renderer* renderer)\n{\n    if (!getDead())\n        Object::draw(renderer);\n}\n\nvoid Powerup::handleCollision(Object* &object)\n{\n\n}\n\n\nObject* Powerup::clone()\n{\n    Object* NewObject = new Powerup(getPosition(), getWidth(), getHeight(), getFilename());\n    return NewObject;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Power", "up", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "Power", "up", "::", "Power", "up", "(", "V", "ec", "2", "Ġpos", ",", "Ġint", "Ġwidth", ",", "Ġint", "Ġheight", ",", "Ġstring", "Ġfilename", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠObject", "(", "pos", ",", "Ġwidth", ",", "Ġheight", ",", "Ġfilename", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Id", "(", "Object", "::", "P", "OWER", "UP", ");", "Ċ", "}", "Ċ", "Ċ", "Power", "up", "::", "~", "Power", "up", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPower", "up", "::", "update", "(", "float", "Ġd", "t", ")", "Ċ", "{", "Ċ", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPower", "up", "::", "draw", "(", "R", "end", "erer", "*", "Ġrend", "erer", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "get", "Dead", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠObject", "::", "draw", "(", "rend", "erer", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPower", "up", "::", "handle", "Coll", "ision", "(", "Object", "*", "Ġ&", "object", ")", "Ċ", "{", "Ċ", "Ċ", "}", "ĊĊ", "Ċ", "Object", "*", "ĠPower", "up", "::", "clone", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠObject", "*", "ĠNew", "Object", "Ġ=", "Ġnew", "ĠPower", "up", "(", "get", "Position", "(),", "Ġget", "Width", "(),", "Ġget", "Height", "(),", "Ġget", "Filename", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠNew", "Object", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["pos", 6, "comesFrom", ["pos"], [1]], ["width", 7, "comesFrom", ["width"], [2]], ["height", 8, "comesFrom", ["height"], [3]], ["filename", 9, "comesFrom", ["filename"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::670", "code": "#include <iostream>\nusing namespace std;\n\nint main ()\n{\n    // declaring variables:\n    int number = 0;\n\n    // process:\n    while(number != 42)\n    {\n\tcin >> number;\n\tif(number != 42)\n\t    {\n\t    cout << number;\n\t    cout << \"\\n\";\n\t    }\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġdeclaring", "Ġvariables", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġnumber", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġprocess", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "number", "Ġ!=", "Ġ42", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "ĉ", "cin", "Ġ>>", "Ġnumber", ";", "Ċ", "ĉ", "if", "(", "number", "Ġ!=", "Ġ42", ")", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġnumber", ";", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["number", 3, "comesFrom", ["number"], [2]], ["number", 5, "comesFrom", ["number"], [2]], ["number", 6, "comesFrom", ["number"], [2]], ["number", 8, "comesFrom", ["number"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::671", "code": "﻿//-----------------------------------------------\n//\n//\tThis file is part of the Siv3D Engine.\n//\n//\tCopyright (c) 2008-2018 Ryo Suzuki\n//\tCopyright (c) 2016-2018 OpenSiv3D Project\n//\n//\tLicensed under the MIT License.\n//\n//-----------------------------------------------\n\n# pragma once\n# include \"Fwd.hpp\"\n# include \"Array.hpp\"\n# include \"Image.hpp\"\n\nnamespace s3d\n{\n\tnamespace ImageProcessing\n\t{\n\t\t[[nodiscard]] inline constexpr uint32 CalculateMipCount(uint32 width, uint32 height)\n\t\t{\n\t\t\tuint32 numLevels = 1u;\n\n\t\t\twhile (width > 1u && height > 1u)\n\t\t\t{\n\t\t\t\twidth = std::max(width / 2, 1u);\n\n\t\t\t\theight = std::max(height / 2, 1u);\n\n\t\t\t\t++numLevels;\n\t\t\t}\n\n\t\t\treturn numLevels;\n\t\t}\n\n\t\t[[nodiscard]] Array<Image> GenerateMips(const Image& src);\n\n\t\t[[nodiscard]] Image GenerateSDF(const Image& image, const uint32 scale, const double spread = 16.0);\n\t}\n}\n", "code_tokens": ["Ġï", "»", "¿", "//", "--------------------------------", "---------------", "Ċ", "//", "Ċ", "//", "ĉ", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠS", "iv", "3", "D", "ĠEngine", ".", "Ċ", "//", "Ċ", "//", "ĉ", "Copyright", "Ġ(", "c", ")", "Ġ2008", "-", "2018", "ĠR", "yo", "ĠSuzuki", "Ċ", "//", "ĉ", "Copyright", "Ġ(", "c", ")", "Ġ2016", "-", "2018", "ĠOpen", "S", "iv", "3", "D", "ĠProject", "Ċ", "//", "Ċ", "//", "ĉ", "Lic", "ensed", "Ġunder", "Ġthe", "ĠMIT", "ĠLicense", ".", "Ċ", "//", "Ċ", "//", "--------------------------------", "---------------", "Ċ", "Ċ", "#", "Ġprag", "ma", "Ġonce", "Ċ", "#", "Ġinclude", "Ġ\"", "F", "wd", ".", "h", "pp", "\"", "Ċ", "#", "Ġinclude", "Ġ\"", "Array", ".", "h", "pp", "\"", "Ċ", "#", "Ġinclude", "Ġ\"", "Image", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġs", "3", "d", "Ċ", "{", "Ċ", "ĉ", "names", "pace", "ĠImage", "Process", "ing", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "[[", "n", "od", "isc", "ard", "]]", "Ġinline", "Ġconst", "expr", "Ġuint", "32", "ĠCalcul", "ate", "M", "ip", "Count", "(", "uint", "32", "Ġwidth", ",", "Ġuint", "32", "Ġheight", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "uint", "32", "Ġnum", "Level", "s", "Ġ=", "Ġ1", "u", ";", "ĊĊ", "ĉ", "ĉ", "ĉ", "while", "Ġ(", "width", "Ġ>", "Ġ1", "u", "Ġ&&", "Ġheight", "Ġ>", "Ġ1", "u", ")", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "width", "Ġ=", "Ġstd", "::", "max", "(", "width", "Ġ/", "Ġ2", ",", "Ġ1", "u", ");", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "height", "Ġ=", "Ġstd", "::", "max", "(", "height", "Ġ/", "Ġ2", ",", "Ġ1", "u", ");", "ĊĊ", "ĉ", "ĉ", "ĉ", "ĉ", "++", "num", "Level", "s", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "ĉ", "return", "Ġnum", "Level", "s", ";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "[[", "n", "od", "isc", "ard", "]]", "ĠArray", "<", "Image", ">", "ĠGener", "ate", "M", "ips", "(", "const", "ĠImage", "&", "Ġsrc", ");", "ĊĊ", "ĉ", "ĉ", "[[", "n", "od", "isc", "ard", "]]", "ĠImage", "ĠGener", "ate", "S", "DF", "(", "const", "ĠImage", "&", "Ġimage", ",", "Ġconst", "Ġuint", "32", "Ġscale", ",", "Ġconst", "Ġdouble", "Ġspread", "Ġ=", "Ġ16", ".", "0", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["width", 5, "comesFrom", ["width"], [2]], ["width", 9, "comesFrom", ["width"], [7]], ["height", 6, "comesFrom", ["height"], [3]], ["height", 12, "comesFrom", ["height"], [10]], ["numLevels", 13, "comesFrom", ["numLevels"], [4]], ["numLevels", 14, "comesFrom", ["numLevels"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::672", "code": "#include \"constoverload.h\"\n#include <iostream>\nusing namespace std ;\n\ninline static double& zero(int index) { \n    static double _zero = 0 ;\n    _zero = 0 ;\n    cerr << \"index out of bounds: \"  << index << endl ; \n    return _zero;\n}\n\nostream& operator<<(ostream& out, const Point3& v) {\n    out << '(' << v[0] << \", \" << v[1] << \", \" << v[2] <<  ')';\n    return out;\n}\n\nPoint3::Point3(double x, double y, double z) {\n    m_Coord[0] = x;\n    m_Coord[1] = y;\n    m_Coord[2] = z;\n}\n\n//start\nconst double& Point3::operator[](int index) const {\n    if ((index >= 0) && (index < cm_Dim))\n        return m_Coord[index];\n    else\n        return zero(index);\n}\n\ndouble& Point3::operator[](int index) {\n    if ((index >= 0) && (index < cm_Dim))\n        return m_Coord[index];\n    else\n        return zero(index);\n }\n \n//end\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "const", "over", "load", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", "Ġ;", "Ċ", "Ċ", "inline", "Ġstatic", "Ġdouble", "&", "Ġzero", "(", "int", "Ġindex", ")", "Ġ{", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġdouble", "Ġ_", "zero", "Ġ=", "Ġ0", "Ġ;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "zero", "Ġ=", "Ġ0", "Ġ;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "index", "Ġout", "Ġof", "Ġbounds", ":", "Ġ\"", "Ġ", "Ġ<<", "Ġindex", "Ġ<<", "Ġend", "l", "Ġ;", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ_", "zero", ";", "Ċ", "}", "Ċ", "Ċ", "ost", "ream", "&", "Ġoperator", "<<", "(", "ost", "ream", "&", "Ġout", ",", "Ġconst", "ĠPoint", "3", "&", "Ġv", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "Ġ<<", "Ġ'", "('", "Ġ<<", "Ġv", "[", "0", "]", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġv", "[", "1", "]", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġv", "[", "2", "]", "Ġ<<", "Ġ", "Ġ'", ")", "';", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġout", ";", "Ċ", "}", "Ċ", "Ċ", "Point", "3", "::", "Point", "3", "(", "double", "Ġx", ",", "Ġdouble", "Ġy", ",", "Ġdouble", "Ġz", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Co", "ord", "[", "0", "]", "Ġ=", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Co", "ord", "[", "1", "]", "Ġ=", "Ġy", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Co", "ord", "[", "2", "]", "Ġ=", "Ġz", ";", "Ċ", "}", "Ċ", "Ċ", "//", "start", "Ċ", "const", "Ġdouble", "&", "ĠPoint", "3", "::", "operator", "[", "](", "int", "Ġindex", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "index", "Ġ>=", "Ġ0", ")", "Ġ&&", "Ġ(", "index", "Ġ<", "Ġcm", "_", "Dim", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġm", "_", "Co", "ord", "[", "index", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġzero", "(", "index", ");", "Ċ", "}", "Ċ", "Ċ", "double", "&", "ĠPoint", "3", "::", "operator", "[", "](", "int", "Ġindex", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "index", "Ġ>=", "Ġ0", ")", "Ġ&&", "Ġ(", "index", "Ġ<", "Ġcm", "_", "Dim", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġm", "_", "Co", "ord", "[", "index", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġzero", "(", "index", ");", "Ċ", "Ġ}", "Ċ", "Ġ", "Ċ", "//", "end", "ĊĊ"], "dataflow_graph": [["index", 6, "comesFrom", ["index"], [2]], ["index", 27, "comesFrom", ["index"], [26]], ["index", 28, "comesFrom", ["index"], [26]], ["index", 31, "comesFrom", ["index"], [26]], ["index", 33, "comesFrom", ["index"], [26]], ["index", 35, "comesFrom", ["index"], [34]], ["index", 36, "comesFrom", ["index"], [34]], ["index", 39, "comesFrom", ["index"], [34]], ["index", 41, "comesFrom", ["index"], [34]], ["_zero", 8, "comesFrom", ["_zero"], [4]], ["x", 21, "comesFrom", ["x"], [17]], ["y", 23, "comesFrom", ["y"], [18]], ["z", 25, "comesFrom", ["z"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::673", "code": "#include \"stdafx.h\"\n#include \"InsertDocumentItemCommand.h\"\n\n\nCInsertDocumentItemCommand::CInsertDocumentItemCommand(CDocumentItemCollection & collection, CDocumentItemPtr item, boost::optional<size_t> position)\n\t:m_collection(collection), m_item(item), m_position(position)\n{\n}\n\nvoid CInsertDocumentItemCommand::DoExecute()\n{\n\tbool result = m_collection.AddItem(m_item, m_position);\n\tif (!result)\n\t{\n\t\tthrow std::out_of_range(\"Item does not exist. Position: \" + std::to_string(m_position.get()));\n\t}\n}\n\nvoid CInsertDocumentItemCommand::DoUnexecute()\n{\n\tsize_t position = m_position ? m_position.get() : m_collection.GetSize() - 1;\n\tm_collection.RemoveItem(position);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Insert", "Document", "Item", "Command", ".", "h", "\"", "ĊĊ", "Ċ", "C", "Insert", "Document", "Item", "Command", "::", "C", "Insert", "Document", "Item", "Command", "(", "CD", "ocument", "Item", "Collection", "Ġ&", "Ġcollection", ",", "ĠCD", "ocument", "Item", "Ptr", "Ġitem", ",", "Ġboost", "::", "optional", "<", "size", "_", "t", ">", "Ġposition", ")", "Ċ", "ĉ", ":", "m", "_", "collection", "(", "collection", "),", "Ġm", "_", "item", "(", "item", "),", "Ġm", "_", "position", "(", "position", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Insert", "Document", "Item", "Command", "::", "Do", "Exec", "ute", "()", "Ċ", "{", "Ċ", "ĉ", "bool", "Ġresult", "Ġ=", "Ġm", "_", "collection", ".", "Add", "Item", "(", "m", "_", "item", ",", "Ġm", "_", "position", ");", "Ċ", "ĉ", "if", "Ġ(!", "result", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "throw", "Ġstd", "::", "out", "_", "of", "_", "range", "(\"", "Item", "Ġdoes", "Ġnot", "Ġexist", ".", "ĠPosition", ":", "Ġ\"", "Ġ+", "Ġstd", "::", "to", "_", "string", "(", "m", "_", "position", ".", "get", "()", "));", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Insert", "Document", "Item", "Command", "::", "Do", "U", "nex", "ec", "ute", "()", "Ċ", "{", "Ċ", "ĉ", "size", "_", "t", "Ġposition", "Ġ=", "Ġm", "_", "position", "Ġ?", "Ġm", "_", "position", ".", "get", "()", "Ġ:", "Ġm", "_", "collection", ".", "Get", "Size", "()", "Ġ-", "Ġ1", ";", "Ċ", "ĉ", "m", "_", "collection", ".", "Remove", "Item", "(", "position", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["item", 7, "comesFrom", ["item"], [2]], ["position", 9, "comesFrom", ["position"], [3]], ["position", 30, "comesFrom", ["position"], [22]], ["result", 16, "comesFrom", ["result"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::674", "code": "/**\n * resumable_thing example: counter\n * From James McNellis: Introduction to C++ Coroutines CppCon 2016.\n *\n * compile: clang++ -std=c++14 -fcoroutines-ts resumable_thing1.cpp\n * Tal Lancaster 2017-06-30\n **/\n\n#include <iostream>\n\n#include \"resumable_thing1.hpp\"\n\nresumable_thing counter ()\n{\n    std::cout << \"counter: called\\n\";\n    for (auto i {1u}; ; ++i) {\n        co_await std::experimental::suspend_always ();\n        std::cout << \"counter: resumed (#\" << i << \")\\n\";\n    }\n}\n\n#ifndef AS_TEST\nint main ()\n{\n    std::cout << \"main: calling counter\\n\";\n    resumable_thing the_counter {counter () };\n    std::cout << \"main: resuming counter\\n\";\n\n    the_counter.resume ();\n    the_counter.resume ();\n\n    std::cout << \"main: done\\n\";\n}\n#endif // AS_TEST\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġres", "um", "able", "_", "thing", "Ġexample", ":", "Ġcounter", "Ċ", "Ġ*", "ĠFrom", "ĠJames", "ĠMcN", "ell", "is", ":", "ĠIntroduction", "Ġto", "ĠC", "++", "ĠCor", "out", "ines", "ĠC", "pp", "Con", "Ġ2016", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġcompile", ":", "Ġcl", "ang", "++", "Ġ-", "std", "=", "c", "++", "14", "Ġ-", "f", "cor", "out", "ines", "-", "ts", "Ġres", "um", "able", "_", "thing", "1", ".", "cpp", "Ċ", "Ġ*", "ĠTal", "ĠLancaster", "Ġ2017", "-", "06", "-", "30", "Ċ", "Ġ**", "/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "res", "um", "able", "_", "thing", "1", ".", "h", "pp", "\"", "Ċ", "Ċ", "res", "um", "able", "_", "thing", "Ġcounter", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "counter", ":", "Ġcalled", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "Ġi", "Ġ{", "1", "u", "};", "Ġ;", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġco", "_", "aw", "ait", "Ġstd", "::", "exper", "imental", "::", "susp", "end", "_", "always", "Ġ();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "counter", ":", "Ġresumed", "Ġ(#", "\"", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", ")\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠAS", "_", "T", "EST", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "main", ":", "Ġcalling", "Ġcounter", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġres", "um", "able", "_", "thing", "Ġthe", "_", "counter", "Ġ{", "counter", "Ġ()", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "main", ":", "Ġres", "uming", "Ġcounter", "\\", "n", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġthe", "_", "counter", ".", "res", "ume", "Ġ();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthe", "_", "counter", ".", "res", "ume", "Ġ();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "main", ":", "Ġdone", "\\", "n", "\";", "Ċ", "}", "Ċ", "#", "endif", "Ġ//", "ĠAS", "_", "T", "EST", "Ċ"], "dataflow_graph": [["i", 3, "comesFrom", ["i"], [2]], ["i", 6, "comesFrom", ["i"], [2]], ["the_counter", 13, "comesFrom", ["the_counter"], [10]], ["the_counter", 15, "comesFrom", ["the_counter"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::675", "code": "#include <type_traits>\n#include <iostream>\n\ntemplate <typename T>\nclass A\n{\npublic:\n  bool isInt() { return std::is_same<T, int>::value; }\n};\n\nint main()\n{\n  A<int> a;\n  A<double> b;\n  std::cout << a.isInt() << std::endl;\n  std::cout << b.isInt() << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "type", "_", "tra", "its", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "class", "ĠA", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġbool", "Ġis", "Int", "()", "Ġ{", "Ġreturn", "Ġstd", "::", "is", "_", "same", "<", "T", ",", "Ġint", ">", "::", "value", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "ĠA", "<", "int", ">", "Ġa", ";", "Ċ", "Ġ", "ĠA", "<", "double", ">", "Ġb", ";", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġa", ".", "is", "Int", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġb", ".", "is", "Int", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 6, "comesFrom", ["a"], [3]], ["b", 10, "comesFrom", ["b"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::676", "code": "\n#include <libclientserver.h>\n\nclass UDPClient : public UDPMCastClient {\npublic:\n    UDPClient() :\n        HasMessage(false)\n    {\n        SetPort(1232);\n        SetIP4Group(\"225.0.0.1\");\n        SetIP6Group(\"ff01::1\");\n        UDPMCastClient::Start();\n    }\n\n    ~UDPClient() {\n        UDPMCastClient::Stop();\n    }\n\n    bool HasMessage;\n\n    void OnMessage(const std::string &Host, const std::string &Msg) {\n        HasMessage = true;\n        printf(\"Host: %s Msg: %s\\n\", Host.c_str(), Msg.c_str());\n    }\n\n    void OnError(const std::string &str) {\n        printf(\"Error: %s\\n\", str.c_str());\n    }\n\n};\n\n\nint main(int argc, char **argv) {\n    UDPClient C;\n\n    int ret = system(\"./TestUDPMCast\");\n    printf(\"ret: %d\", ret);\n\n    if (!C.HasMessage)\n        return EXIT_FAILURE;\n\n    return 0;\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "lib", "cl", "ients", "erver", ".", "h", ">", "Ċ", "Ċ", "class", "ĠUDP", "Client", "Ġ:", "Ġpublic", "ĠUD", "PM", "Cast", "Client", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠUDP", "Client", "()", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠHas", "Message", "(", "false", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSet", "Port", "(", "12", "32", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSet", "IP", "4", "Group", "(\"", "225", ".", "0", ".", "0", ".", "1", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSet", "IP", "6", "Group", "(\"", "ff", "01", "::", "1", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠUD", "PM", "Cast", "Client", "::", "Start", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ~", "U", "DP", "Client", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠUD", "PM", "Cast", "Client", "::", "Stop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbool", "ĠHas", "Message", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠOn", "Message", "(", "const", "Ġstd", "::", "string", "Ġ&", "Host", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "Msg", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠHas", "Message", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Host", ":", "Ġ%", "s", "ĠMs", "g", ":", "Ġ%", "s", "\\", "n", "\",", "ĠHost", ".", "c", "_", "str", "(),", "ĠMs", "g", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠOn", "Error", "(", "const", "Ġstd", "::", "string", "Ġ&", "str", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Error", ":", "Ġ%", "s", "\\", "n", "\",", "Ġstr", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "};", "ĊĊ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠUDP", "Client", "ĠC", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġret", "Ġ=", "Ġsystem", "(", "\".", "/", "Test", "UD", "PM", "Cast", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "ret", ":", "Ġ%", "d", "\",", "Ġret", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "C", ".", "Has", "Message", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "FA", "IL", "URE", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["HasMessage", 32, "comesFrom", ["HasMessage"], [12]], ["ret", 30, "comesFrom", ["ret"], [27]], ["C", 31, "comesFrom", ["C"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::677", "code": "﻿#ifdef __ANDROID__\n\n#include    \"AndroidAssetLoader.h\"\n#include    \"AndroidMappedAsset.hpp\"\n#include    <android/asset_manager_jni.h>\n#include \"es/internal/protoground-internal.hpp\"\n\nnamespace es {\nnamespace internal {\n\nAndroidAssetLoader::AndroidAssetLoader(::jc::lang::object_wrapper jAssetManager, const std::string &newBasePath) :\n        basePath(newBasePath) {\n    this->assets = AAssetManager_fromJava(jAssetManager.getEnv(), jAssetManager.getJobject());\n    assert(this->assets);\n}\n\nstd::shared_ptr<IAsset> AndroidAssetLoader::load(const std::string &path, const Bundle &hint) {\n    AAsset *pAsset = AAssetManager_open(assets, (basePath + path).c_str(), AASSET_MODE_BUFFER);\n\n    if (!pAsset) {\n        eslog(\"load error(%s)\", path.c_str());\n        return ::std::shared_ptr<IAsset>();\n    }\n\n    return std::shared_ptr<IAsset>(new AndroidMappedAsset(assets, pAsset));\n}\n\nstd::shared_ptr<IWriter> AndroidAssetLoader::write(const std::string &path, const unsigned flags, const Bundle &hint) {\n    // not support\n    return std::shared_ptr<IWriter>();\n}\n\n}\n}\n\n#endif\n", "code_tokens": ["Ġï", "»", "¿", "#", "if", "def", "Ġ__", "AND", "RO", "ID", "__", "Ċ", "Ċ", "#", "include", "Ġ", "Ġ", "Ġ", "Ġ\"", "Android", "Asset", "Loader", ".", "h", "\"", "Ċ", "#", "include", "Ġ", "Ġ", "Ġ", "Ġ\"", "Android", "M", "apped", "Asset", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ", "Ġ", "Ġ", "Ġ<", "android", "/", "ass", "et", "_", "manager", "_", "j", "ni", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "es", "/", "internal", "/", "prot", "og", "round", "-", "internal", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġes", "Ġ{", "Ċ", "names", "pace", "Ġinternal", "Ġ{", "Ċ", "Ċ", "Android", "Asset", "Loader", "::", "Android", "Asset", "Loader", "(", "::", "jc", "::", "lang", "::", "object", "_", "wrapper", "Ġj", "Asset", "Manager", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "new", "Base", "Path", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbase", "Path", "(", "new", "Base", "Path", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "assets", "Ġ=", "ĠA", "Asset", "Manager", "_", "from", "Java", "(", "j", "Asset", "Manager", ".", "get", "En", "v", "(),", "Ġj", "Asset", "Manager", ".", "get", "J", "object", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "this", "->", "assets", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "shared", "_", "ptr", "<", "IA", "ss", "et", ">", "ĠAndroid", "Asset", "Loader", "::", "load", "(", "const", "Ġstd", "::", "string", "Ġ&", "path", ",", "Ġconst", "ĠBundle", "Ġ&", "h", "int", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠA", "Asset", "Ġ*", "p", "Asset", "Ġ=", "ĠA", "Asset", "Manager", "_", "open", "(", "assets", ",", "Ġ(", "base", "Path", "Ġ+", "Ġpath", ").", "c", "_", "str", "(),", "ĠA", "ASS", "ET", "_", "MODE", "_", "BU", "FFER", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "p", "Asset", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġes", "log", "(\"", "load", "Ġerror", "(", "%", "s", ")\",", "Ġpath", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ::", "std", "::", "shared", "_", "ptr", "<", "IA", "ss", "et", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstd", "::", "shared", "_", "ptr", "<", "IA", "ss", "et", ">(", "new", "ĠAndroid", "M", "apped", "Asset", "(", "assets", ",", "Ġp", "Asset", "));", "Ċ", "}", "Ċ", "Ċ", "std", "::", "shared", "_", "ptr", "<", "I", "Writer", ">", "ĠAndroid", "Asset", "Loader", "::", "write", "(", "const", "Ġstd", "::", "string", "Ġ&", "path", ",", "Ġconst", "Ġunsigned", "Ġflags", ",", "Ġconst", "ĠBundle", "Ġ&", "h", "int", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġnot", "Ġsupport", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstd", "::", "shared", "_", "ptr", "<", "I", "Writer", ">", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["jAssetManager", 8, "comesFrom", ["jAssetManager"], [2]], ["jAssetManager", 10, "comesFrom", ["jAssetManager"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::678", "code": "#include <iostream>\n#include <SDL2/SDL.h>\n\nint main()\n{\n    SDL_Init(SDL_INIT_EVERYTHING);\n    SDL_Window* window = SDL_CreateWindow(\"RPG Version 1.0 Alpha\", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 0, 0, SDL_WINDOW_OPENGL | SDL_WINDOW_SHOWN);\n    \n    SDL_SetWindowFullscreen(window, SDL_WINDOW_FULLSCREEN_DESKTOP);\n    \n    SDL_Renderer* renderer = SDL_CreateRenderer(window, 0, SDL_RENDERER_ACCELERATED);\n    \n    SDL_Event event;\n    bool isRunning = true;\n    \n    while (isRunning)\n    {\n        while (SDL_PollEvent(&event) != 0)\n        {\n            if (event.type == SDL_QUIT || event.key.keysym.sym == SDLK_ESCAPE)\n            {\n                isRunning = false;\n            }\n        }\n        SDL_UpdateWindowSurface(window);\n        SDL_RenderClear(renderer);\n    }\n    SDL_DestroyWindow(window);\n    SDL_DestroyRenderer(renderer);\n    SDL_Quit();\n    system(\"exit\");\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "SD", "L", "2", "/", "SD", "L", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Init", "(", "SD", "L", "_", "IN", "IT", "_", "E", "VER", "Y", "THING", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Window", "*", "Ġwindow", "Ġ=", "ĠSDL", "_", "Create", "Window", "(\"", "RPG", "ĠVersion", "Ġ1", ".", "0", "ĠAlpha", "\",", "ĠSDL", "_", "WIND", "OW", "POS", "_", "CENT", "ER", "ED", ",", "ĠSDL", "_", "WIND", "OW", "POS", "_", "CENT", "ER", "ED", ",", "Ġ0", ",", "Ġ0", ",", "ĠSDL", "_", "WIND", "OW", "_", "OP", "EN", "GL", "Ġ|", "ĠSDL", "_", "WIND", "OW", "_", "SH", "OWN", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Set", "Window", "Full", "screen", "(", "window", ",", "ĠSDL", "_", "WIND", "OW", "_", "F", "ULL", "SC", "RE", "EN", "_", "DES", "K", "TOP", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "R", "end", "erer", "*", "Ġrend", "erer", "Ġ=", "ĠSDL", "_", "Create", "R", "end", "erer", "(", "window", ",", "Ġ0", ",", "ĠSDL", "_", "R", "END", "ER", "ER", "_", "ACC", "EL", "ER", "ATED", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Event", "Ġevent", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġis", "Running", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "is", "Running", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "SD", "L", "_", "Poll", "Event", "(&", "event", ")", "Ġ!=", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "event", ".", "type", "Ġ==", "ĠSDL", "_", "QU", "IT", "Ġ||", "Ġevent", ".", "key", ".", "keys", "ym", ".", "sym", "Ġ==", "ĠSDL", "K", "_", "ES", "CAP", "E", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġis", "Running", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Update", "Window", "Sur", "face", "(", "window", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Render", "Clear", "(", "rend", "erer", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Destroy", "Window", "(", "window", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Destroy", "R", "end", "erer", "(", "rend", "erer", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Qu", "it", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsystem", "(\"", "exit", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["isRunning", 18, "comesFrom", ["isRunning"], [17]], ["event", 20, "comesFrom", ["event"], [16]], ["event", 21, "comesFrom", ["event"], [16]], ["event", 24, "comesFrom", ["event"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::679", "code": "#include \"LabelMaker.hpp\"\n#include <iostream>\n#include <sstream>\n\nusing namespace std;\n\nLabelMaker::LabelMaker() : currentLabelNumber(1), endLabel(NULL) {} \n\n/* Prints a generic label */\nstring LabelMaker::getNewLabel() \n{\n\tstringstream s;\n\ts << \"label\" << currentLabelNumber++;\n\treturn s.str();\n}\n\n/* Prints a label for an end conditional */\nstring LabelMaker::getEndCondLabel()\n{\n\tif (this->needsNewEndCondLabel())\n\t{\n\t\tthis->endLabel = new string(this->getNewLabel());\n\t}\n\treturn *(this->endLabel);\n}\n\n/* Ensures that next time an end cond label is gathered, it is created new */\nbool LabelMaker::needsNewEndCondLabel()\n{\n\treturn !(this->endLabel);\n}\n\n/* Pushes the end condition label onto a stack so it is not overwritten. */\nvoid LabelMaker::pushEndCondLabel()\n{\n\tthis->endCondLabelStack.push(this->endLabel);\n\tthis->endLabel = NULL;\n}\n\nvoid LabelMaker::popEndCondLabel()\n{\n\tthis->resetEndCondLabel();\n\tthis->endLabel = this->endCondLabelStack.top();\n\tthis->endCondLabelStack.pop();\n}\n\n/* Deletes the label and sets its pointer to NULL. */\nvoid LabelMaker::resetEndCondLabel()\n{\n\tdelete this->endLabel;\n\tthis->endLabel = NULL;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Label", "Maker", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Label", "Maker", "::", "Label", "Maker", "()", "Ġ:", "Ġcurrent", "Label", "Number", "(", "1", "),", "Ġend", "Label", "(", "NULL", ")", "Ġ{}", "Ġ", "Ċ", "Ċ", "/*", "ĠPrint", "s", "Ġa", "Ġgeneric", "Ġlabel", "Ġ*/", "Ċ", "string", "ĠLabel", "Maker", "::", "get", "New", "Label", "()", "Ġ", "Ċ", "{", "Ċ", "ĉ", "string", "stream", "Ġs", ";", "Ċ", "ĉ", "s", "Ġ<<", "Ġ\"", "label", "\"", "Ġ<<", "Ġcurrent", "Label", "Number", "++;", "Ċ", "ĉ", "return", "Ġs", ".", "str", "();", "Ċ", "}", "Ċ", "Ċ", "/*", "ĠPrint", "s", "Ġa", "Ġlabel", "Ġfor", "Ġan", "Ġend", "Ġconditional", "Ġ*/", "Ċ", "string", "ĠLabel", "Maker", "::", "get", "End", "Cond", "Label", "()", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "this", "->", "needs", "New", "End", "Cond", "Label", "())", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "this", "->", "end", "Label", "Ġ=", "Ġnew", "Ġstring", "(", "this", "->", "get", "New", "Label", "());", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ*", "(", "this", "->", "end", "Label", ");", "Ċ", "}", "Ċ", "Ċ", "/*", "ĠEns", "ures", "Ġthat", "Ġnext", "Ġtime", "Ġan", "Ġend", "Ġcond", "Ġlabel", "Ġis", "Ġgathered", ",", "Ġit", "Ġis", "Ġcreated", "Ġnew", "Ġ*/", "Ċ", "bool", "ĠLabel", "Maker", "::", "needs", "New", "End", "Cond", "Label", "()", "Ċ", "{", "Ċ", "ĉ", "return", "Ġ!", "(", "this", "->", "end", "Label", ");", "Ċ", "}", "Ċ", "Ċ", "/*", "ĠP", "ushes", "Ġthe", "Ġend", "Ġcondition", "Ġlabel", "Ġonto", "Ġa", "Ġstack", "Ġso", "Ġit", "Ġis", "Ġnot", "Ġoverw", "ritten", ".", "Ġ*/", "Ċ", "void", "ĠLabel", "Maker", "::", "push", "End", "Cond", "Label", "()", "Ċ", "{", "Ċ", "ĉ", "this", "->", "end", "Cond", "Label", "Stack", ".", "push", "(", "this", "->", "end", "Label", ");", "Ċ", "ĉ", "this", "->", "end", "Label", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLabel", "Maker", "::", "pop", "End", "Cond", "Label", "()", "Ċ", "{", "Ċ", "ĉ", "this", "->", "reset", "End", "Cond", "Label", "();", "Ċ", "ĉ", "this", "->", "end", "Label", "Ġ=", "Ġthis", "->", "end", "Cond", "Label", "Stack", ".", "top", "();", "Ċ", "ĉ", "this", "->", "end", "Cond", "Label", "Stack", ".", "pop", "();", "Ċ", "}", "Ċ", "Ċ", "/*", "ĠDe", "letes", "Ġthe", "Ġlabel", "Ġand", "Ġsets", "Ġits", "Ġpointer", "Ġto", "ĠNULL", ".", "Ġ*/", "Ċ", "void", "ĠLabel", "Maker", "::", "reset", "End", "Cond", "Label", "()", "Ċ", "{", "Ċ", "ĉ", "delete", "Ġthis", "->", "end", "Label", ";", "Ċ", "ĉ", "this", "->", "end", "Label", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["s", 6, "comesFrom", ["s"], [5]], ["s", 8, "comesFrom", ["s"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::680", "code": "#include <iostream>\n#include <string.h>\nusing namespace std;\n\nstruct Tanc {\n\tchar ime[15];\n\tchar zemja[15];\n};\n\nstruct Tancer {\n\tchar ime[20];\n\tchar prezime[20];\n\tTanc niza[5];\n};\n\nvoid tancuvanje(Tancer *t, int n, char *zemja) {\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < 3; ++j) {\n\t\t\tif (!(strcmp(t[i].niza[j].zemja, zemja))) {\n\t\t\t\tcout << \"Ime: \" << t[i].ime << \" Prezime: \" << t[i].prezime << \" Tanc: \" << t[i].niza[j].ime << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tint i, j, n;\n\tchar zemja[10];\n\tTancer tanceri[5];\n\tcin >> n;\n\tfor(i = 0; i < n; i++){\n\t\tcin >> tanceri[i].ime;\n\t\tcin >> tanceri[i].prezime;\n\t\tfor(j = 0; j < 3; j++){\n\t\t\tcin >> tanceri[i].niza[j].ime;\n\t\t\tcin >> tanceri[i].niza[j].zemja;\n\t\t}\n\t}\n\tcin >> zemja;\n\ttancuvanje(tanceri, n, zemja);\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "struct", "ĠT", "anc", "Ġ{", "Ċ", "ĉ", "char", "Ġ", "ime", "[", "15", "];", "Ċ", "ĉ", "char", "Ġz", "em", "ja", "[", "15", "];", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠT", "ancer", "Ġ{", "Ċ", "ĉ", "char", "Ġ", "ime", "[", "20", "];", "Ċ", "ĉ", "char", "Ġpre", "z", "ime", "[", "20", "];", "Ċ", "ĉ", "T", "anc", "Ġn", "iza", "[", "5", "];", "Ċ", "};", "Ċ", "Ċ", "void", "Ġt", "anc", "u", "van", "je", "(", "T", "ancer", "Ġ*", "t", ",", "Ġint", "Ġn", ",", "Ġchar", "Ġ*", "z", "em", "ja", ")", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġ3", ";", "Ġ++", "j", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(!", "(", "str", "cmp", "(", "t", "[", "i", "].", "n", "iza", "[", "j", "].", "z", "em", "ja", ",", "Ġz", "em", "ja", ")))", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "I", "me", ":", "Ġ\"", "Ġ<<", "Ġt", "[", "i", "].", "ime", "Ġ<<", "Ġ\"", "ĠPre", "z", "ime", ":", "Ġ\"", "Ġ<<", "Ġt", "[", "i", "].", "pre", "z", "ime", "Ġ<<", "Ġ\"", "ĠT", "anc", ":", "Ġ\"", "Ġ<<", "Ġt", "[", "i", "].", "n", "iza", "[", "j", "].", "ime", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "int", "Ġi", ",", "Ġj", ",", "Ġn", ";", "Ċ", "ĉ", "char", "Ġz", "em", "ja", "[", "10", "];", "Ċ", "ĉ", "T", "ancer", "Ġt", "ancer", "i", "[", "5", "];", "Ċ", "ĉ", "cin", "Ġ>>", "Ġn", ";", "Ċ", "ĉ", "for", "(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++", "){", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġt", "ancer", "i", "[", "i", "].", "ime", ";", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġt", "ancer", "i", "[", "i", "].", "pre", "z", "ime", ";", "Ċ", "ĉ", "ĉ", "for", "(", "j", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġ3", ";", "Ġj", "++", "){", "Ċ", "ĉ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġt", "ancer", "i", "[", "i", "].", "n", "iza", "[", "j", "].", "ime", ";", "Ċ", "ĉ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġt", "ancer", "i", "[", "i", "].", "n", "iza", "[", "j", "].", "z", "em", "ja", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "cin", "Ġ>>", "Ġz", "em", "ja", ";", "Ċ", "ĉ", "t", "anc", "u", "van", "je", "(", "t", "ancer", "i", ",", "Ġn", ",", "Ġz", "em", "ja", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["i", 11, "comesFrom", ["i"], [10]], ["i", 13, "comesFrom", ["i"], [10]], ["i", 19, "comesFrom", ["i"], [10]], ["i", 26, "comesFrom", ["i"], [10]], ["i", 29, "comesFrom", ["i"], [10]], ["i", 32, "comesFrom", ["i"], [10]], ["i", 46, "comesFrom", ["i"], [45]], ["i", 48, "comesFrom", ["i"], [45]], ["i", 51, "comesFrom", ["i"], [45]], ["i", 55, "comesFrom", ["i"], [45]], ["i", 62, "comesFrom", ["i"], [45]], ["i", 68, "comesFrom", ["i"], [45]], ["n", 12, "comesFrom", ["n"], [8]], ["n", 44, "comesFrom", ["n"], [40]], ["n", 47, "comesFrom", ["n"], [40]], ["n", 76, "comesFrom", ["n"], [40]], ["j", 15, "comesFrom", ["j"], [14]], ["j", 16, "comesFrom", ["j"], [14]], ["j", 21, "comesFrom", ["j"], [14]], ["j", 34, "comesFrom", ["j"], [14]], ["j", 58, "comesFrom", ["j"], [57]], ["j", 59, "comesFrom", ["j"], [57]], ["j", 64, "comesFrom", ["j"], [57]], ["j", 70, "comesFrom", ["j"], [57]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::681", "code": "#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#include<string>\n#define pf(i,s,t) for (int (i)=s;(i)<(t);(i)++)\n#define mf(i,s,t) for (int (i)=s;(i)>(t);(i)--)\n#define mt(a,d) memset((a),(d),sizeof(a))\nusing namespace std;\nmain()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile (T--)\n\t{\n\t\tint a,b,c,d;\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tDFS(a,b,c,d);\t\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "c", "std", "io", ">", "Ċ", "#", "include", "<", "c", "string", ">", "Ċ", "#", "include", "<", "c", "math", ">", "Ċ", "#", "include", "<", "i", "ost", "ream", ">", "Ċ", "#", "include", "<", "vector", ">", "Ċ", "#", "include", "<", "queue", ">", "Ċ", "#", "include", "<", "al", "gorithm", ">", "Ċ", "#", "include", "<", "string", ">", "Ċ", "#", "define", "Ġp", "f", "(", "i", ",", "s", ",", "t", ")", "Ġfor", "Ġ(", "int", "Ġ(", "i", ")=", "s", ";", "(", "i", ")", "<", "(", "t", ");", "(", "i", ")", "++)", "Ċ", "#", "define", "Ġm", "f", "(", "i", ",", "s", ",", "t", ")", "Ġfor", "Ġ(", "int", "Ġ(", "i", ")=", "s", ";", "(", "i", ")", ">(", "t", ");", "(", "i", ")--", ")", "Ċ", "#", "define", "Ġmt", "(", "a", ",", "d", ")", "Ġmem", "set", "((", "a", "),", "(", "d", "),", "size", "of", "(", "a", "))", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "main", "()", "Ċ", "{", "Ċ", "ĉ", "int", "ĠT", ";", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "&", "T", ");", "Ċ", "ĉ", "while", "Ġ(", "T", "--", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "int", "Ġa", ",", "b", ",", "c", ",", "d", ";", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "%", "d", "%", "d", "%", "d", "\",", "&", "a", ",", "&", "b", ",", "&", "c", ",", "&", "d", ");", "Ċ", "ĉ", "ĉ", "DF", "S", "(", "a", ",", "b", ",", "c", ",", "d", ");", "ĉ", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 22, "comesFrom", ["a"], [17]], ["a", 27, "comesFrom", ["a"], [17]], ["d", 25, "comesFrom", ["d"], [20]], ["d", 30, "comesFrom", ["d"], [20]], ["T", 15, "comesFrom", ["T"], [13]], ["T", 16, "comesFrom", ["T"], [13]], ["b", 23, "comesFrom", ["b"], [18]], ["b", 28, "comesFrom", ["b"], [18]], ["c", 24, "comesFrom", ["c"], [19]], ["c", 29, "comesFrom", ["c"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::682", "code": "/*\n * Copyright (C) 2012, Nils Asmussen <nils@os.inf.tu-dresden.de>\n * Economic rights: Technische Universitaet Dresden (Germany)\n *\n * This file is part of NRE (NOVA runtime environment).\n *\n * NRE is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * NRE is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * General Public License version 2 for more details.\n */\n\n#include <new>\n#include <cstdlib>\n\n// clang generates calls to operator new(unsigned int), because it expects size_t = unsigned int\n// but gcc uses size_t = unsigned long and thus generates an operator new(unsigned long) into the\n// libsupc++. its a bit funny that this only happens on x86_32 where unsigned int is the same as\n// unsigned long anyway :)\n// thus, we use this workaround here\n\n#ifdef __clang__\n#   ifdef __i386__\n\nnamespace std {\nclass bad_alloc {\n};\n}\n\nvoid *operator new(uint size) throw(std::bad_alloc) {\n    return malloc(size);\n}\n\nvoid *operator new[](uint size) throw(std::bad_alloc) {\n    return malloc(size);\n}\n\n#   endif\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2012", ",", "ĠN", "ils", "ĠAs", "m", "ussen", "Ġ<", "n", "ils", "@", "os", ".", "inf", ".", "tu", "-", "d", "res", "den", ".", "de", ">", "Ċ", "Ġ*", "ĠEconomic", "Ġrights", ":", "ĠTechn", "ische", "ĠUnivers", "ita", "et", "ĠDresden", "Ġ(", "Germany", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠN", "RE", "Ġ(", "N", "OVA", "Ġruntime", "Ġenvironment", ").", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠN", "RE", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ġ2", "Ġas", "Ċ", "Ġ*", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠN", "RE", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "Ċ", "Ġ*", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ*", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġversion", "Ġ2", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "new", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "Ċ", "//", "Ġcl", "ang", "Ġgenerates", "Ġcalls", "Ġto", "Ġoperator", "Ġnew", "(", "unsigned", "Ġint", "),", "Ġbecause", "Ġit", "Ġexpects", "Ġsize", "_", "t", "Ġ=", "Ġunsigned", "Ġint", "Ċ", "//", "Ġbut", "Ġgcc", "Ġuses", "Ġsize", "_", "t", "Ġ=", "Ġunsigned", "Ġlong", "Ġand", "Ġthus", "Ġgenerates", "Ġan", "Ġoperator", "Ġnew", "(", "unsigned", "Ġlong", ")", "Ġinto", "Ġthe", "Ċ", "//", "Ġlib", "sup", "c", "++", ".", "Ġits", "Ġa", "Ġbit", "Ġfunny", "Ġthat", "Ġthis", "Ġonly", "Ġhappens", "Ġon", "Ġx", "86", "_", "32", "Ġwhere", "Ġunsigned", "Ġint", "Ġis", "Ġthe", "Ġsame", "Ġas", "Ċ", "//", "Ġunsigned", "Ġlong", "Ġanyway", "Ġ:)", "Ċ", "//", "Ġthus", ",", "Ġwe", "Ġuse", "Ġthis", "Ġworkaround", "Ġhere", "Ċ", "Ċ", "#", "if", "def", "Ġ__", "cl", "ang", "__", "Ċ", "#", "Ġ", "Ġ", "Ġif", "def", "Ġ__", "i", "386", "__", "Ċ", "Ċ", "names", "pace", "Ġstd", "Ġ{", "Ċ", "class", "Ġbad", "_", "alloc", "Ġ{", "Ċ", "};", "Ċ", "}", "Ċ", "Ċ", "void", "Ġ*", "operator", "Ġnew", "(", "uint", "Ġsize", ")", "Ġthrow", "(", "std", "::", "bad", "_", "alloc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmall", "oc", "(", "size", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġ*", "operator", "Ġnew", "[", "](", "uint", "Ġsize", ")", "Ġthrow", "(", "std", "::", "bad", "_", "alloc", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmall", "oc", "(", "size", ");", "Ċ", "}", "Ċ", "Ċ", "#", "Ġ", "Ġ", "Ġendif", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["size", 4, "comesFrom", ["size"], [2]], ["size", 7, "comesFrom", ["size"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::683", "code": "#include <algorithm>\n#include <iostream>\n#include <iterator>\n#include <spell.h>\n#include <dag.h>\n#include <dictionary.h>\n\nusing namespace std;\n\nint main(int argc, char **argv)\n{\n  get_ngram().read(argc == 2 ? argv[1] : \"ngram\");\n  dic_init();\n  warch.load(\"wordlist\");\n\n  int count = 0;\n  while (!cin.eof()) {\n    if (++count % 200 == 0) cerr << count << endl;\n    Lattice l;\n    cin >> l;\n    WordDAG dag(&l);\n    cout << dag << endl;\n  }\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "#", "include", "Ġ<", "spell", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "d", "ag", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "d", "ictionary", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġget", "_", "ng", "ram", "().", "read", "(", "arg", "c", "Ġ==", "Ġ2", "Ġ?", "Ġarg", "v", "[", "1", "]", "Ġ:", "Ġ\"", "ng", "ram", "\");", "Ċ", "Ġ", "Ġd", "ic", "_", "init", "();", "Ċ", "Ġ", "Ġw", "arch", ".", "load", "(\"", "word", "list", "\");", "ĊĊ", "Ġ", "Ġint", "Ġcount", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġwhile", "Ġ(!", "cin", ".", "e", "of", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "++", "count", "Ġ%", "Ġ200", "Ġ==", "Ġ0", ")", "Ġc", "err", "Ġ<<", "Ġcount", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠL", "att", "ice", "Ġl", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġl", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWord", "D", "AG", "Ġdag", "(&", "l", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġdag", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 6, "comesFrom", ["argc"], [2]], ["count", 14, "comesFrom", ["count"], [11]], ["count", 16, "comesFrom", ["count"], [11]], ["l", 20, "comesFrom", ["l"], [18]], ["l", 22, "comesFrom", ["l"], [18]], ["dag", 24, "comesFrom", ["dag"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::684", "code": "/* Copyright (C) 2003-2010 Jesper K. Pedersen <blackie@kde.org>\n\n   This program is free software; you can redistribute it and/or\n   modify it under the terms of the GNU General Public\n   License as published by the Free Software Foundation; either\n   version 2 of the License, or (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; see the file COPYING.  If not, write to\n   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n   Boston, MA 02110-1301, USA.\n*/\n#include \"ThumbnailRequest.h\"\n#include \"ThumbnailModel.h\"\n\nThumbnailView::ThumbnailRequest::ThumbnailRequest( int row, const DB::FileName& fileName, const QSize& size, int angle, ThumbnailModel* client)\n    : ImageManager::ImageRequest( fileName, size, angle, client ), _thumbnailModel( client ), m_row(row)\n{\n    setIsThumbnailRequest(true);\n}\n\nbool ThumbnailView::ThumbnailRequest::stillNeeded() const\n{\n    return _thumbnailModel->thumbnailStillNeeded( m_row );\n}\n// vi:expandtab:tabstop=4 shiftwidth=4:\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", "-", "2010", "ĠJes", "per", "ĠK", ".", "ĠPed", "ersen", "Ġ<", "black", "ie", "@", "k", "de", ".", "org", ">", "ĊĊ", "Ġ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ", "Ġ", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "Ċ", "Ġ", "Ġ", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ", "Ġ", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "ĊĊ", "Ġ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ", "Ġ", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "ĊĊ", "Ġ", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ", "Ġ", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġwrite", "Ġto", "Ċ", "Ġ", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠFranklin", "ĠStreet", ",", "ĠFifth", "ĠFloor", ",", "Ċ", "Ġ", "Ġ", "ĠBoston", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "*/", "Ċ", "#", "include", "Ġ\"", "Thumbnail", "Request", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Thumbnail", "Model", ".", "h", "\"", "Ċ", "Ċ", "Thumbnail", "View", "::", "Thumbnail", "Request", "::", "Thumbnail", "Request", "(", "Ġint", "Ġrow", ",", "Ġconst", "ĠDB", "::", "File", "Name", "&", "Ġfile", "Name", ",", "Ġconst", "ĠQ", "Size", "&", "Ġsize", ",", "Ġint", "Ġangle", ",", "ĠTh", "umbnail", "Model", "*", "Ġclient", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠImage", "Manager", "::", "Image", "Request", "(", "Ġfile", "Name", ",", "Ġsize", ",", "Ġangle", ",", "Ġclient", "Ġ),", "Ġ_", "th", "umbnail", "Model", "(", "Ġclient", "Ġ),", "Ġm", "_", "row", "(", "row", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Is", "Thumbnail", "Request", "(", "true", ");", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠTh", "umbnail", "View", "::", "Thumbnail", "Request", "::", "still", "Need", "ed", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ_", "th", "umbnail", "Model", "->", "th", "umbnail", "Still", "Need", "ed", "(", "Ġm", "_", "row", "Ġ);", "Ċ", "}", "Ċ", "//", "Ġvi", ":", "exp", "and", "tab", ":", "tab", "stop", "=", "4", "Ġshift", "width", "=", "4", ":", "Ċ"], "dataflow_graph": [["angle", 9, "comesFrom", ["angle"], [4]], ["row", 14, "comesFrom", ["row"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::685", "code": "/**Copyright (C) Austin Hicks, 2014\nThis file is part of Libaudioverse, a library for 3D and environmental audio simulation, and is released under the terms of the Gnu General Public License Version 3 or (at your option) any later version.\nA copy of the GPL, as well as other important copyright and licensing information, may be found in the file 'LICENSE' in the root of the Libaudioverse repository.  Should this file be missing or unavailable to you, see <http://www.gnu.org/licenses/>.*/\n#pragma once\nnamespace libaudioverse_implementation {\n\nclass IIRFilter {\n\tpublic:\n\tIIRFilter(double sr);\n\tfloat tick(float sample);\n\tvoid configure(int newNumeratorLength, double* newNumerator, int newDenominatorLength,  double* newDenominator);\n\tvoid setGain(double gain);\n\tvoid clearHistories();\n\tvoid configureBiquad(int type, double frequency, double dbGain, double q);\n\tdouble qFromBw(double frequency, double bw);\n\tdouble qFromS(double frequency, double s);\n\t\n\tprivate:\n\tdouble *history = nullptr, *recursion_history = nullptr, *numerator = nullptr, *denominator = nullptr;\n\tint numerator_length = 0, denominator_length = 0;\n\tdouble gain = 1.0;\n\tdouble sr;\n};\n\n}", "code_tokens": ["Ġ/**", "Copyright", "Ġ(", "C", ")", "ĠAustin", "ĠHicks", ",", "Ġ2014", "Ċ", "This", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠLib", "audio", "verse", ",", "Ġa", "Ġlibrary", "Ġfor", "Ġ3", "D", "Ġand", "Ġenvironmental", "Ġaudio", "Ġsimulation", ",", "Ġand", "Ġis", "Ġreleased", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGn", "u", "ĠGeneral", "ĠPublic", "ĠLicense", "ĠVersion", "Ġ3", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "A", "Ġcopy", "Ġof", "Ġthe", "ĠGPL", ",", "Ġas", "Ġwell", "Ġas", "Ġother", "Ġimportant", "Ġcopyright", "Ġand", "Ġlicensing", "Ġinformation", ",", "Ġmay", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "Ġ'", "L", "IC", "ENSE", "'", "Ġin", "Ġthe", "Ġroot", "Ġof", "Ġthe", "ĠLib", "audio", "verse", "Ġrepository", ".", "Ġ", "ĠShould", "Ġthis", "Ġfile", "Ġbe", "Ġmissing", "Ġor", "Ġunavailable", "Ġto", "Ġyou", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".*", "/", "Ċ", "#", "pr", "ag", "ma", "Ġonce", "Ċ", "names", "pace", "Ġlib", "audio", "verse", "_", "im", "plementation", "Ġ{", "Ċ", "Ċ", "class", "ĠII", "R", "Filter", "Ġ{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "II", "R", "Filter", "(", "double", "Ġsr", ");", "Ċ", "ĉ", "float", "Ġtick", "(", "float", "Ġsample", ");", "Ċ", "ĉ", "void", "Ġconfigure", "(", "int", "Ġnew", "N", "umer", "ator", "Length", ",", "Ġdouble", "*", "Ġnew", "N", "umer", "ator", ",", "Ġint", "Ġnew", "Den", "omin", "ator", "Length", ",", "Ġ", "Ġdouble", "*", "Ġnew", "Den", "omin", "ator", ");", "Ċ", "ĉ", "void", "Ġset", "G", "ain", "(", "double", "Ġgain", ");", "Ċ", "ĉ", "void", "Ġclear", "Hist", "ories", "();", "Ċ", "ĉ", "void", "Ġconfigure", "B", "iqu", "ad", "(", "int", "Ġtype", ",", "Ġdouble", "Ġfrequency", ",", "Ġdouble", "Ġdb", "G", "ain", ",", "Ġdouble", "Ġq", ");", "Ċ", "ĉ", "double", "Ġq", "From", "B", "w", "(", "double", "Ġfrequency", ",", "Ġdouble", "Ġb", "w", ");", "Ċ", "ĉ", "double", "Ġq", "From", "S", "(", "double", "Ġfrequency", ",", "Ġdouble", "Ġs", ");", "Ċ", "ĉ", "Ċ", "ĉ", "private", ":", "Ċ", "ĉ", "double", "Ġ*", "history", "Ġ=", "Ġnull", "ptr", ",", "Ġ*", "rec", "ursion", "_", "history", "Ġ=", "Ġnull", "ptr", ",", "Ġ*", "n", "umer", "ator", "Ġ=", "Ġnull", "ptr", ",", "Ġ*", "den", "omin", "ator", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "ĉ", "int", "Ġnumer", "ator", "_", "length", "Ġ=", "Ġ0", ",", "Ġdenomin", "ator", "_", "length", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "double", "Ġgain", "Ġ=", "Ġ1", ".", "0", ";", "Ċ", "ĉ", "double", "Ġsr", ";", "Ċ", "};", "Ċ", "Ċ", "}"], "dataflow_graph": [["gain", 29, "comesFrom", ["gain"], [10]], ["sr", 30, "comesFrom", ["sr"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::686", "code": "#include \"diagonaldistancefunction.h\"\n#include <QtMath>\n\nfloat DiagonalDistanceFunction::operator()(int x1, int y1, int x2, int y2) const\n{\n\t//dX = |x1-x2|\n\t//dY = |y1-y2|\n\t//d = max(dX, dY)\n\treturn qMax(qAbs(x1-x2), qAbs(y1-y2));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "di", "agon", "ald", "istance", "function", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "t", "Math", ">", "Ċ", "Ċ", "float", "ĠDi", "agonal", "Distance", "Function", "::", "operator", "()", "(", "int", "Ġx", "1", ",", "Ġint", "Ġy", "1", ",", "Ġint", "Ġx", "2", ",", "Ġint", "Ġy", "2", ")", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "//", "d", "X", "Ġ=", "Ġ|", "x", "1", "-", "x", "2", "|", "Ċ", "ĉ", "//", "d", "Y", "Ġ=", "Ġ|", "y", "1", "-", "y", "2", "|", "Ċ", "ĉ", "//", "d", "Ġ=", "Ġmax", "(", "d", "X", ",", "Ġd", "Y", ")", "Ċ", "ĉ", "return", "Ġq", "Max", "(", "q", "Abs", "(", "x", "1", "-", "x", "2", "),", "Ġq", "Abs", "(", "y", "1", "-", "y", "2", "));", "Ċ", "}", "Ċ"], "dataflow_graph": [["x1", 6, "comesFrom", ["x1"], [0]], ["x2", 7, "comesFrom", ["x2"], [2]], ["y1", 9, "comesFrom", ["y1"], [1]], ["y2", 10, "comesFrom", ["y2"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::687", "code": "#include \"select_class_dialog.h\"\n#include \"ui_select_class_dialog.h\"\n#include <QMessageBox>\n\nSelectClassDialog::SelectClassDialog(QWidget *parent) :\n  QDialog(parent),\n  ui(new Ui::SelectClassDialog)\n{\n  ui->setupUi(this);\n}\n\nSelectClassDialog::~SelectClassDialog()\n{\n  delete ui;\n}\n\nvoid SelectClassDialog::on_button_warrior_clicked()\n{\n  QMessageBox b;\n  b.setWindowTitle(\"You've picked: warrior\");\n  b.setText(\"You've picked: warrior\");\n  b.exec();\n  close();\n}\n\nvoid SelectClassDialog::on_button_mage_clicked()\n{\n  QMessageBox b;\n  b.setWindowTitle(\"You've picked: mage\");\n  b.setText(\"You've picked: mage\");\n  b.exec();\n  close();\n}\n\nvoid SelectClassDialog::on_button_thief_clicked()\n{\n  QMessageBox b;\n  b.setWindowTitle(\"You've picked: thief\");\n  b.setText(\"You've picked: thief\");\n  b.exec();\n  close();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "select", "_", "class", "_", "dial", "og", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ui", "_", "select", "_", "class", "_", "dial", "og", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Message", "Box", ">", "Ċ", "Ċ", "Select", "Class", "Dialog", "::", "Select", "Class", "Dialog", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "ĠQ", "Dialog", "(", "parent", "),", "Ċ", "Ġ", "Ġu", "i", "(", "new", "ĠU", "i", "::", "Select", "Class", "Dialog", ")", "Ċ", "{", "Ċ", "Ġ", "Ġu", "i", "->", "setup", "U", "i", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "Select", "Class", "Dialog", "::", "~", "Select", "Class", "Dialog", "()", "Ċ", "{", "Ċ", "Ġ", "Ġdelete", "Ġu", "i", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSelect", "Class", "Dialog", "::", "on", "_", "button", "_", "war", "rior", "_", "cl", "icked", "()", "Ċ", "{", "Ċ", "Ġ", "ĠQ", "Message", "Box", "Ġb", ";", "Ċ", "Ġ", "Ġb", ".", "set", "Window", "Title", "(\"", "You", "'ve", "Ġpicked", ":", "Ġwarrior", "\");", "Ċ", "Ġ", "Ġb", ".", "set", "Text", "(\"", "You", "'ve", "Ġpicked", ":", "Ġwarrior", "\");", "Ċ", "Ġ", "Ġb", ".", "exec", "();", "Ċ", "Ġ", "Ġclose", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSelect", "Class", "Dialog", "::", "on", "_", "button", "_", "mage", "_", "cl", "icked", "()", "Ċ", "{", "Ċ", "Ġ", "ĠQ", "Message", "Box", "Ġb", ";", "Ċ", "Ġ", "Ġb", ".", "set", "Window", "Title", "(\"", "You", "'ve", "Ġpicked", ":", "Ġmage", "\");", "Ċ", "Ġ", "Ġb", ".", "set", "Text", "(\"", "You", "'ve", "Ġpicked", ":", "Ġmage", "\");", "Ċ", "Ġ", "Ġb", ".", "exec", "();", "Ċ", "Ġ", "Ġclose", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSelect", "Class", "Dialog", "::", "on", "_", "button", "_", "th", "ief", "_", "cl", "icked", "()", "Ċ", "{", "Ċ", "Ġ", "ĠQ", "Message", "Box", "Ġb", ";", "Ċ", "Ġ", "Ġb", ".", "set", "Window", "Title", "(\"", "You", "'ve", "Ġpicked", ":", "Ġthief", "\");", "Ċ", "Ġ", "Ġb", ".", "set", "Text", "(\"", "You", "'ve", "Ġpicked", ":", "Ġthief", "\");", "Ċ", "Ġ", "Ġb", ".", "exec", "();", "Ċ", "Ġ", "Ġclose", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["b", 11, "comesFrom", ["b"], [10]], ["b", 13, "comesFrom", ["b"], [10]], ["b", 15, "comesFrom", ["b"], [10]], ["b", 20, "comesFrom", ["b"], [19]], ["b", 22, "comesFrom", ["b"], [19]], ["b", 24, "comesFrom", ["b"], [19]], ["b", 29, "comesFrom", ["b"], [28]], ["b", 31, "comesFrom", ["b"], [28]], ["b", 33, "comesFrom", ["b"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::688", "code": "#include \"common_header.h\"\n\n\nnamespace {\n\nusing ArrayType = std::vector<int>;\n\n/** Number of local extrema in an array\n *\n * @reference   https://www.geeksforgeeks.org/maximum-number-local-extrema/\n *\n * You are given an array on n-elements. An extrema is an elements which is either\n * greater than its both of neighbors or less than its both neighbors. You have to\n * calculate the number of local extrema in given array.\n * Note: 1st and last elements are not extrema.\n */\nauto CountLocalExtrema(const ArrayType &elements) {\n    assert(elements.size() > 2);\n\n    auto count = 0;\n    auto prev = elements.cbegin();\n    auto iter = std::next(prev);\n    for (auto next = std::next(iter); next != elements.cend(); ++prev, ++iter, ++next)\n        count += (*prev < *iter and *iter > *next) or\n                 (*prev > *iter and * iter < *next);\n\n    return count;\n}\n\n}//namespace\n\n\nconst ArrayType SAMPLE1 = {1, 5, 2, 5};\nconst ArrayType SAMPLE2 = {1, 2, 3};\nconst ArrayType SAMPLE3 = {1, 0, 2, 1};\n\n\nTHE_BENCHMARK(CountLocalExtrema, SAMPLE1);\n\nSIMPLE_TEST(CountLocalExtrema, TestSAMPLE1, 2, SAMPLE1);\nSIMPLE_TEST(CountLocalExtrema, TestSAMPLE2, 0, SAMPLE2);\nSIMPLE_TEST(CountLocalExtrema, TestSAMPLE3, 2, SAMPLE3);\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "common", "_", "header", ".", "h", "\"", "ĊĊ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "using", "ĠArray", "Type", "Ġ=", "Ġstd", "::", "vector", "<", "int", ">", ";", "Ċ", "Ċ", "/**", "ĠNumber", "Ġof", "Ġlocal", "Ġext", "re", "ma", "Ġin", "Ġan", "Ġarray", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ@", "reference", "Ġ", "Ġ", "Ġhttps", "://", "www", ".", "ge", "eks", "forge", "eks", ".", "org", "/", "maximum", "-", "number", "-", "local", "-", "ext", "re", "ma", "/", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġare", "Ġgiven", "Ġan", "Ġarray", "Ġon", "Ġn", "-", "e", "lements", ".", "ĠAn", "Ġext", "re", "ma", "Ġis", "Ġan", "Ġelements", "Ġwhich", "Ġis", "Ġeither", "Ċ", "Ġ*", "Ġgreater", "Ġthan", "Ġits", "Ġboth", "Ġof", "Ġneighbors", "Ġor", "Ġless", "Ġthan", "Ġits", "Ġboth", "Ġneighbors", ".", "ĠYou", "Ġhave", "Ġto", "Ċ", "Ġ*", "Ġcalculate", "Ġthe", "Ġnumber", "Ġof", "Ġlocal", "Ġext", "re", "ma", "Ġin", "Ġgiven", "Ġarray", ".", "Ċ", "Ġ*", "ĠNote", ":", "Ġ1", "st", "Ġand", "Ġlast", "Ġelements", "Ġare", "Ġnot", "Ġext", "re", "ma", ".", "Ċ", "Ġ*/", "Ċ", "auto", "ĠCount", "Local", "Ext", "re", "ma", "(", "const", "ĠArray", "Type", "Ġ&", "e", "lements", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "e", "lements", ".", "size", "()", "Ġ>", "Ġ2", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġcount", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġprev", "Ġ=", "Ġelements", ".", "c", "begin", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġiter", "Ġ=", "Ġstd", "::", "next", "(", "prev", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "Ġnext", "Ġ=", "Ġstd", "::", "next", "(", "iter", ");", "Ġnext", "Ġ!=", "Ġelements", ".", "cend", "();", "Ġ++", "prev", ",", "Ġ++", "iter", ",", "Ġ++", "next", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcount", "Ġ+=", "Ġ(*", "prev", "Ġ<", "Ġ*", "iter", "Ġand", "Ġ*", "iter", "Ġ>", "Ġ*", "next", ")", "Ġor", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(*", "prev", "Ġ>", "Ġ*", "iter", "Ġand", "Ġ*", "Ġiter", "Ġ<", "Ġ*", "next", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcount", ";", "Ċ", "}", "Ċ", "Ċ", "}", "//", "names", "pace", "ĊĊ", "Ċ", "const", "ĠArray", "Type", "ĠSAM", "PLE", "1", "Ġ=", "Ġ{", "1", ",", "Ġ5", ",", "Ġ2", ",", "Ġ5", "};", "Ċ", "const", "ĠArray", "Type", "ĠSAM", "PLE", "2", "Ġ=", "Ġ{", "1", ",", "Ġ2", ",", "Ġ3", "};", "Ċ", "const", "ĠArray", "Type", "ĠSAM", "PLE", "3", "Ġ=", "Ġ{", "1", ",", "Ġ0", ",", "Ġ2", ",", "Ġ1", "};", "ĊĊ", "Ċ", "THE", "_", "B", "EN", "CH", "M", "ARK", "(", "Count", "Local", "Ext", "re", "ma", ",", "ĠSAM", "PLE", "1", ");", "Ċ", "Ċ", "SIM", "PLE", "_", "T", "EST", "(", "Count", "Local", "Ext", "re", "ma", ",", "ĠTest", "SAM", "PLE", "1", ",", "Ġ2", ",", "ĠSAM", "PLE", "1", ");", "Ċ", "SIM", "PLE", "_", "T", "EST", "(", "Count", "Local", "Ext", "re", "ma", ",", "ĠTest", "SAM", "PLE", "2", ",", "Ġ0", ",", "ĠSAM", "PLE", "2", ");", "Ċ", "SIM", "PLE", "_", "T", "EST", "(", "Count", "Local", "Ext", "re", "ma", ",", "ĠTest", "SAM", "PLE", "3", ",", "Ġ2", ",", "ĠSAM", "PLE", "3", ");", "Ċ"], "dataflow_graph": [["next", 13, "comesFrom", ["next"], [12]], ["next", 15, "comesFrom", ["next"], [12]], ["next", 20, "comesFrom", ["next"], [12]], ["next", 25, "comesFrom", ["next"], [12]], ["next", 29, "comesFrom", ["next"], [12]], ["prev", 11, "comesFrom", ["prev"], [6]], ["prev", 18, "comesFrom", ["prev"], [6]], ["prev", 22, "comesFrom", ["prev"], [6]], ["prev", 26, "comesFrom", ["prev"], [6]], ["iter", 14, "comesFrom", ["iter"], [9]], ["iter", 19, "comesFrom", ["iter"], [9]], ["iter", 23, "comesFrom", ["iter"], [9]], ["iter", 24, "comesFrom", ["iter"], [9]], ["iter", 27, "comesFrom", ["iter"], [9]], ["iter", 28, "comesFrom", ["iter"], [9]], ["count", 30, "comesFrom", ["count"], [21]], ["SAMPLE1", 36, "comesFrom", ["SAMPLE1"], [31]], ["SAMPLE1", 40, "comesFrom", ["SAMPLE1"], [31]], ["SAMPLE2", 44, "comesFrom", ["SAMPLE2"], [32]], ["SAMPLE3", 48, "comesFrom", ["SAMPLE3"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::689", "code": "#include <stdexcept>\n#include <sstream>\n#include \"prioritizedstack.h\"\n\nnamespace goap\n{\nIPath::Ptr PrioritizedStack::pop_queue(PrioritizedQueue::lst_path_type &queue) {\n    if (queue.empty()) {\n        throw std::runtime_error(\"[PrioritizedQueue] stack pop error\");\n    }\n    IPath::Ptr value = queue.back();\n    queue.pop_back();\n    return value;\n}\n\nstring PrioritizedStack::toDebugString() const\n{\n    stringstream ss;\n    ss << \"PrioritizedStack: { min:\" << _min << \", _queues_size:\" << _queues.size() << \", lazyArray_size:\" << _lazyArray.size() << \"}\" << endl;\n    return ss.str();\n}\n\n}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "except", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ\"", "pri", "or", "itized", "stack", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġgo", "ap", "Ċ", "{", "Ċ", "IP", "ath", "::", "Ptr", "ĠPrior", "itized", "Stack", "::", "pop", "_", "queue", "(", "Prior", "itized", "Queue", "::", "l", "st", "_", "path", "_", "type", "Ġ&", "queue", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "queue", ".", "empty", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "[", "Prior", "itized", "Queue", "]", "Ġstack", "Ġpop", "Ġerror", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "ĠIP", "ath", "::", "Ptr", "Ġvalue", "Ġ=", "Ġqueue", ".", "back", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġqueue", ".", "pop", "_", "back", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġvalue", ";", "Ċ", "}", "Ċ", "Ċ", "string", "ĠPrior", "itized", "Stack", "::", "to", "Debug", "String", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "stream", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Prior", "itized", "Stack", ":", "Ġ{", "Ġmin", ":\"", "Ġ<<", "Ġ_", "min", "Ġ<<", "Ġ\",", "Ġ_", "que", "ues", "_", "size", ":\"", "Ġ<<", "Ġ_", "que", "ues", ".", "size", "()", "Ġ<<", "Ġ\",", "Ġlazy", "Array", "_", "size", ":\"", "Ġ<<", "Ġ_", "l", "azy", "Array", ".", "size", "()", "Ġ<<", "Ġ\"", "}\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġss", ".", "str", "();", "Ċ", "}", "Ċ", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["value", 10, "comesFrom", ["value"], [5]], ["ss", 13, "comesFrom", ["ss"], [12]], ["ss", 20, "comesFrom", ["ss"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::690", "code": "#include \"EditorView.hpp\"\n\nIMPLEMENT_DYNAMIC_CLASS(EditorView, wxView)\n\nvoid EditorView::OnInit(wxFlatNotebook* n)\n{\n    notebook = n;\n    wxString title = \"Untitled.asm\";\n    wxDocument* doc = GetDocument();\n    panel = new EditorPanel(notebook);\n    if (doc)\n    {\n        title = doc->GetTitle();\n        panel->LoadFile(doc->GetFilename());\n    }\n    notebook->AddPage(panel, title, false);\n}\n\nvoid EditorView::LoadFile(const wxString& file)\n{\n    if (panel)\n        panel->LoadFile(file);\n}\n\nvoid EditorView::SaveFile(const wxString& file)\n{\n    if (panel)\n        panel->SaveFile(file);\n}\n\nvoid EditorView::Clear()\n{\n    if (panel)\n        panel->Clear();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Editor", "View", ".", "h", "pp", "\"", "Ċ", "Ċ", "IM", "PLE", "MENT", "_", "D", "YN", "AM", "IC", "_", "CLASS", "(", "Editor", "View", ",", "Ġw", "x", "View", ")", "Ċ", "Ċ", "void", "ĠEditor", "View", "::", "On", "Init", "(", "wx", "Fl", "at", "Note", "book", "*", "Ġn", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnotebook", "Ġ=", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġw", "x", "String", "Ġtitle", "Ġ=", "Ġ\"", "Untitled", ".", "asm", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġw", "x", "Document", "*", "Ġdoc", "Ġ=", "ĠGet", "Document", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpanel", "Ġ=", "Ġnew", "ĠEditor", "Panel", "(", "note", "book", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "doc", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtitle", "Ġ=", "Ġdoc", "->", "Get", "Title", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpanel", "->", "Load", "File", "(", "doc", "->", "Get", "Filename", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnotebook", "->", "Add", "Page", "(", "panel", ",", "Ġtitle", ",", "Ġfalse", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠEditor", "View", "::", "Load", "File", "(", "const", "Ġw", "x", "String", "&", "Ġfile", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "panel", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpanel", "->", "Load", "File", "(", "file", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠEditor", "View", "::", "Save", "File", "(", "const", "Ġw", "x", "String", "&", "Ġfile", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "panel", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpanel", "->", "Save", "File", "(", "file", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠEditor", "View", "::", "Clear", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "panel", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpanel", "->", "Clear", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["notebook", 11, "comesFrom", ["notebook"], [5]], ["notebook", 20, "comesFrom", ["notebook"], [5]], ["panel", 16, "comesFrom", ["panel"], [10]], ["panel", 22, "comesFrom", ["panel"], [10]], ["panel", 26, "comesFrom", ["panel"], [10]], ["panel", 27, "comesFrom", ["panel"], [10]], ["panel", 32, "comesFrom", ["panel"], [10]], ["panel", 33, "comesFrom", ["panel"], [10]], ["panel", 37, "comesFrom", ["panel"], [10]], ["panel", 38, "comesFrom", ["panel"], [10]], ["title", 23, "comesFrom", ["title"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::691", "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nint edit_distance(std::string a, std::string b) {\n  std::vector<std::vector<int>> dp(a.size() + 1,\n                                   std::vector<int>(b.size() + 1, 0));\n\n  // edit distance between empty strings 0.\n\n  for (uint32_t i = 0; i <= a.size(); ++i) {\n    for (uint32_t j = 0; j <= b.size(); ++j) {\n      if (i == 0) {\n        dp[i][j] = j;\n      } else if (j == 0) {\n        dp[i][j] = i;\n      } else if (a[i - 1] == b[j - 1]) {\n        dp[i][j] = dp[i - 1][j - 1];\n      } else {\n        dp[i][j] = 1 + std::min({dp[i - 1][j - 1], dp[i - 1][j], dp[i][j - 1]});\n      }\n    }\n  }\n\n  return dp[a.size()][b.size()];\n}\n\nint main() {\n  std::string a, b;\n  std::cin >> a >> b;\n  std::cout << edit_distance(a, b) << std::endl;\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "int", "Ġedit", "_", "distance", "(", "std", "::", "string", "Ġa", ",", "Ġstd", "::", "string", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "vector", "<", "int", ">>", "Ġd", "p", "(", "a", ".", "size", "()", "Ġ+", "Ġ1", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">(", "b", ".", "size", "()", "Ġ+", "Ġ1", ",", "Ġ0", "));", "ĊĊ", "Ġ", "Ġ//", "Ġedit", "Ġdistance", "Ġbetween", "Ġempty", "Ġstrings", "Ġ0", ".", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "uint", "32", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġa", ".", "size", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "uint", "32", "_", "t", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<=", "Ġb", ".", "size", "();", "Ġ++", "j", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "i", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "i", "][", "j", "]", "Ġ=", "Ġj", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "j", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "i", "][", "j", "]", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "a", "[", "i", "Ġ-", "Ġ1", "]", "Ġ==", "Ġb", "[", "j", "Ġ-", "Ġ1", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "i", "][", "j", "]", "Ġ=", "Ġd", "p", "[", "i", "Ġ-", "Ġ1", "][", "j", "Ġ-", "Ġ1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "i", "][", "j", "]", "Ġ=", "Ġ1", "Ġ+", "Ġstd", "::", "min", "({", "dp", "[", "i", "Ġ-", "Ġ1", "][", "j", "Ġ-", "Ġ1", "],", "Ġd", "p", "[", "i", "Ġ-", "Ġ1", "][", "j", "],", "Ġd", "p", "[", "i", "][", "j", "Ġ-", "Ġ1", "]", "});", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġd", "p", "[", "a", ".", "size", "()", "][", "b", ".", "size", "()", "];", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġstd", "::", "cin", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġedit", "_", "distance", "(", "a", ",", "Ġb", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 4, "comesFrom", ["a"], [1]], ["a", 11, "comesFrom", ["a"], [1]], ["a", 29, "comesFrom", ["a"], [1]], ["a", 53, "comesFrom", ["a"], [1]], ["a", 61, "comesFrom", ["a"], [58]], ["a", 65, "comesFrom", ["a"], [58]], ["b", 7, "comesFrom", ["b"], [2]], ["b", 16, "comesFrom", ["b"], [2]], ["b", 31, "comesFrom", ["b"], [2]], ["b", 55, "comesFrom", ["b"], [2]], ["b", 62, "comesFrom", ["b"], [59]], ["b", 66, "comesFrom", ["b"], [59]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 13, "comesFrom", ["i"], [9]], ["i", 19, "comesFrom", ["i"], [9]], ["i", 21, "comesFrom", ["i"], [9]], ["i", 26, "comesFrom", ["i"], [9]], ["i", 28, "comesFrom", ["i"], [9]], ["i", 30, "comesFrom", ["i"], [9]], ["i", 34, "comesFrom", ["i"], [9]], ["i", 37, "comesFrom", ["i"], [9]], ["i", 40, "comesFrom", ["i"], [9]], ["i", 44, "comesFrom", ["i"], [9]], ["i", 47, "comesFrom", ["i"], [9]], ["i", 50, "comesFrom", ["i"], [9]], ["j", 15, "comesFrom", ["j"], [14]], ["j", 18, "comesFrom", ["j"], [14]], ["j", 22, "comesFrom", ["j"], [14]], ["j", 23, "comesFrom", ["j"], [14]], ["j", 24, "comesFrom", ["j"], [14]], ["j", 27, "comesFrom", ["j"], [14]], ["j", 32, "comesFrom", ["j"], [14]], ["j", 35, "comesFrom", ["j"], [14]], ["j", 38, "comesFrom", ["j"], [14]], ["j", 41, "comesFrom", ["j"], [14]], ["j", 45, "comesFrom", ["j"], [14]], ["j", 48, "comesFrom", ["j"], [14]], ["j", 51, "comesFrom", ["j"], [14]], ["dp", 20, "comesFrom", ["dp"], [3]], ["dp", 25, "comesFrom", ["dp"], [3]], ["dp", 33, "comesFrom", ["dp"], [3]], ["dp", 36, "comesFrom", ["dp"], [3]], ["dp", 39, "comesFrom", ["dp"], [3]], ["dp", 43, "comesFrom", ["dp"], [3]], ["dp", 46, "comesFrom", ["dp"], [3]], ["dp", 49, "comesFrom", ["dp"], [3]], ["dp", 52, "comesFrom", ["dp"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::692", "code": "// OnePoleLP.cpp: implementation of the COnePoleLP class.\n//\n//////////////////////////////////////////////////////////////////////\n\n#include \"OnePoleLP.h\"\n\n//////////////////////////////////////////////////////////////////////\n// Construction/Destruction\n//////////////////////////////////////////////////////////////////////\n\nCOnePoleLP::COnePoleLP()\n{\n    Value = 0;\n    lambda = 0.5f;\n}\n\nCOnePoleLP::~COnePoleLP()\n{}\n\nvoid COnePoleLP::SetParams(float lambda)\n{\n    this->lambda = lambda;\n}\n", "code_tokens": ["Ġ//", "ĠOne", "P", "ole", "LP", ".", "cpp", ":", "Ġimplementation", "Ġof", "Ġthe", "ĠC", "One", "P", "ole", "LP", "Ġclass", ".", "Ċ", "//", "Ċ", "////////////////////////////////", "////////////////////////////////", "////", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "One", "P", "ole", "LP", ".", "h", "\"", "Ċ", "Ċ", "////////////////////////////////", "////////////////////////////////", "////", "//", "Ċ", "//", "ĠConstruction", "/", "Dest", "ruction", "Ċ", "////////////////////////////////", "////////////////////////////////", "////", "//", "Ċ", "Ċ", "C", "One", "P", "ole", "LP", "::", "C", "One", "P", "ole", "LP", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠValue", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlambda", "Ġ=", "Ġ0", ".", "5", "f", ";", "Ċ", "}", "Ċ", "Ċ", "C", "One", "P", "ole", "LP", "::", "~", "C", "One", "P", "ole", "LP", "()", "Ċ", "{", "}", "Ċ", "Ċ", "void", "ĠC", "One", "P", "ole", "LP", "::", "Set", "Par", "ams", "(", "float", "Ġlambda", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "lambda", "Ġ=", "Ġlambda", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["lambda", 6, "comesFrom", ["lambda"], [5]], ["lambda", 7, "comesFrom", ["lambda"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::693", "code": "/*\n\n  Вариант 4\n  Написать программу, которая считывает текст из \n  файла и выводит на экран только строки,\n  не содержащие двузначных чисел.\n  \n*/\n\n#include <cctype>\n#include <iostream>\n#include <string.h>\nusing namespace std;\n\nclass StringClass\n{\n\n\tprotected:\n\t    FILE* buf_file;\n\t    char str[256];\n\n\tpublic:\n\t    void checker();\n};\n\nvoid StringClass::checker()\n{\n    char cset[] = \"1234567890\";\n    buf_file = fopen(\"txt.txt\", \"r\");\n\n    while (!feof(buf_file)) {\n        fgets(str, 256, buf_file);\n        char* symbol = str;\n        while (!isdigit(*symbol))\n            symbol++;\n        int i = strspn(symbol, cset);\n        if (i != 2)\n            puts(str);\n    }\n}\n\nint main()\n{\n  StringClass* obj;\n  obj = new StringClass;\n  obj->checker();\n  return 0;\n}", "code_tokens": ["Ġ/*", "ĊĊ", "Ġ", "ĠÐ", "Ĵ", "Ð°", "ÑĢ", "Ð¸", "Ð°", "Ð½", "ÑĤ", "Ġ4", "Ċ", "Ġ", "ĠÐ", "Ŀ", "Ð°", "Ð", "¿", "Ð¸", "Ñģ", "Ð°", "ÑĤ", "ÑĮ", "ĠÐ", "¿", "ÑĢ", "Ð¾Ð", "³", "ÑĢ", "Ð°", "Ð¼", "Ð¼", "Ñĥ", ",", "ĠÐ", "º", "Ð¾", "ÑĤ", "Ð¾", "ÑĢ", "Ð°", "Ñı", "Ġ", "Ñģ", "Ñ", "ĩ", "Ð¸", "ÑĤ", "Ñĭ", "Ð²", "Ð°", "Ðµ", "ÑĤ", "Ġ", "ÑĤ", "Ðµ", "Ðº", "Ñģ", "ÑĤ", "ĠÐ", "¸", "Ð", "·", "Ġ", "Ċ", "Ġ", "Ġ", "Ñ", "Ħ", "Ð°", "Ð", "¹", "Ð»", "Ð°", "ĠÐ", "¸", "ĠÐ", "²", "Ñĭ", "Ð²", "Ð¾Ð", "´", "Ð¸", "ÑĤ", "ĠÐ", "½", "Ð°", "Ġ", "Ñ", "į", "Ðº", "ÑĢ", "Ð°", "Ð½", "Ġ", "ÑĤ", "Ð¾Ð", "»", "ÑĮ", "Ðº", "Ð¾", "Ġ", "Ñģ", "ÑĤ", "ÑĢ", "Ð¾Ð", "º", "Ð¸", ",", "Ċ", "Ġ", "ĠÐ", "½", "Ðµ", "Ġ", "Ñģ", "Ð¾Ð", "´", "Ðµ", "ÑĢ", "Ð", "¶", "Ð°", "Ñ", "ī", "Ð¸", "Ðµ", "ĠÐ", "´", "Ð²", "Ñĥ", "Ð", "·", "Ð½", "Ð°", "Ñ", "ĩ", "Ð½", "Ñĭ", "Ñ", "ħ", "Ġ", "Ñ", "ĩ", "Ð¸", "Ñģ", "Ðµ", "Ð»", ".", "Ċ", "Ġ", "Ġ", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "ct", "ype", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠString", "Class", "Ċ", "{", "ĊĊ", "ĉ", "protected", ":", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "ĠFILE", "*", "Ġbuf", "_", "file", ";", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġstr", "[", "256", "];", "ĊĊ", "ĉ", "public", ":", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġcheck", "er", "();", "Ċ", "};", "Ċ", "Ċ", "void", "ĠString", "Class", "::", "check", "er", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġc", "set", "[]", "Ġ=", "Ġ\"", "123", "45", "678", "90", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbuf", "_", "file", "Ġ=", "Ġf", "open", "(\"", "txt", ".", "txt", "\",", "Ġ\"", "r", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(!", "fe", "of", "(", "buf", "_", "file", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġf", "gets", "(", "str", ",", "Ġ256", ",", "Ġbuf", "_", "file", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "*", "Ġsymbol", "Ġ=", "Ġstr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(!", "isd", "ig", "it", "(*", "sy", "mbol", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsymbol", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġstr", "sp", "n", "(", "sy", "mbol", ",", "Ġc", "set", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "i", "Ġ!=", "Ġ2", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġputs", "(", "str", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "ĠString", "Class", "*", "Ġobj", ";", "Ċ", "Ġ", "Ġobj", "Ġ=", "Ġnew", "ĠString", "Class", ";", "Ċ", "Ġ", "Ġobj", "->", "check", "er", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["buf_file", 9, "comesFrom", ["buf_file"], [6]], ["buf_file", 12, "comesFrom", ["buf_file"], [6]], ["str", 24, "comesFrom", ["str"], [14]], ["i", 22, "comesFrom", ["i"], [18]], ["obj", 28, "comesFrom", ["obj"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::694", "code": "/************************************\n *\tAUTHOR: \t\tDivyansh Gaba\t*\n *\tINSTITUTION: \tASET, BIJWASAN\t*\n ************************************/\n#include<bits/stdc++.h>\n#define fast ios_base::sync_with_stdio(0); cin.tie(0);\n#define F first\n#define S second\n#define PB push_back\n#define MP make_pair\n#define REP(i,a,b) for (int i = a; i <= b; i++)\n\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\n\nint main()\n{\n\tfast;\n\tint test=1;\n\tcin>>test;\n\tfor(int t = 1;t<=test;t++)\n    {\n        int n;\n        cin>>n;\n        ll l[n];\n        for(int i = 0;i<n;i++) cin>>l[i];\n        cout<<\"Case #\"<<t<<\": \"<<ans<<endl;\n    }\n\n\treturn 0;\n\n}\n", "code_tokens": ["Ġ/", "********************************", "****", "Ċ", "Ġ*", "ĉ", "A", "UTH", "OR", ":", "Ġ", "ĉ", "ĉ", "Div", "y", "ans", "h", "ĠGab", "a", "ĉ", "*", "Ċ", "Ġ*", "ĉ", "INST", "IT", "UTION", ":", "Ġ", "ĉ", "AS", "ET", ",", "ĠBI", "J", "W", "AS", "AN", "ĉ", "*", "Ċ", "Ġ********************************", "****", "/", "Ċ", "#", "include", "<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "#", "define", "Ġfast", "Ġi", "os", "_", "base", "::", "sync", "_", "with", "_", "std", "io", "(", "0", ");", "Ġc", "in", ".", "tie", "(", "0", ");", "Ċ", "#", "define", "ĠF", "Ġfirst", "Ċ", "#", "define", "ĠS", "Ġsecond", "Ċ", "#", "define", "ĠPB", "Ġpush", "_", "back", "Ċ", "#", "define", "ĠMP", "Ġmake", "_", "pair", "Ċ", "#", "define", "ĠRE", "P", "(", "i", ",", "a", ",", "b", ")", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġa", ";", "Ġi", "Ġ<=", "Ġb", ";", "Ġi", "++)", "ĊĊ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "Ġll", ";", "Ċ", "ty", "ped", "ef", "Ġvector", "<", "int", ">", "Ġvi", ";", "Ċ", "ty", "ped", "ef", "Ġpair", "<", "int", ",", "int", ">", "Ġpi", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "fast", ";", "Ċ", "ĉ", "int", "Ġtest", "=", "1", ";", "Ċ", "ĉ", "cin", ">>", "test", ";", "Ċ", "ĉ", "for", "(", "int", "Ġt", "Ġ=", "Ġ1", ";", "t", "<", "=", "test", ";", "t", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ">>", "n", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġll", "Ġl", "[", "n", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "i", "<", "n", ";", "i", "++)", "Ġc", "in", ">>", "l", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "\"", "Case", "Ġ#", "\"", "<<", "t", "<<", "\":", "Ġ\"", "<<", "ans", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 25, "comesFrom", ["i"], [24]], ["i", 27, "comesFrom", ["i"], [24]], ["i", 30, "comesFrom", ["i"], [24]], ["test", 14, "comesFrom", ["test"], [12]], ["test", 17, "comesFrom", ["test"], [12]], ["t", 16, "comesFrom", ["t"], [15]], ["t", 18, "comesFrom", ["t"], [15]], ["t", 32, "comesFrom", ["t"], [15]], ["n", 21, "comesFrom", ["n"], [19]], ["n", 23, "comesFrom", ["n"], [19]], ["n", 26, "comesFrom", ["n"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::695", "code": "/**\n * Rotate List\n * Time complexity: O(n)\n *\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if (head == NULL) return head;\n        ListNode *oldtail = head, *newtail = head;\n        int n = 1;\n        while (oldtail->next != NULL) {\n            n++;\n            oldtail = oldtail->next;\n        }\n        k %= n;\n        if (k == 0) return head;\n        for (int i = 1; i < n-k; i++) newtail = newtail->next;\n        ListNode *newhead = newtail->next;\n        oldtail->next = head;\n        newtail->next = NULL;\n        return newhead;\n    }\n};\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠRot", "ate", "ĠList", "Ċ", "Ġ*", "ĠTime", "Ġcomplexity", ":", "ĠO", "(", "n", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠDefinition", "Ġfor", "Ġsing", "ly", "-", "linked", "Ġlist", ".", "Ċ", "Ġ*", "Ġstruct", "ĠList", "Node", "Ġ{", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "next", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġnext", "(", "NULL", ")", "Ġ{}", "Ċ", "Ġ*", "Ġ};", "Ċ", "Ġ*/", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "*", "Ġrotate", "Right", "(", "List", "Node", "*", "Ġhead", ",", "Ġint", "Ġk", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "head", "Ġ==", "ĠNULL", ")", "Ġreturn", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "old", "tail", "Ġ=", "Ġhead", ",", "Ġ*", "new", "tail", "Ġ=", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "old", "tail", "->", "next", "Ġ!=", "ĠNULL", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġold", "tail", "Ġ=", "Ġold", "tail", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġk", "Ġ%", "=", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "k", "Ġ==", "Ġ0", ")", "Ġreturn", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġn", "-", "k", ";", "Ġi", "++)", "Ġnew", "tail", "Ġ=", "Ġnew", "tail", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "new", "head", "Ġ=", "Ġnew", "tail", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġold", "tail", "->", "next", "Ġ=", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnew", "tail", "->", "next", "Ġ=", "ĠNULL", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġnew", "head", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["head", 19, "comesFrom", ["head"], [8]], ["head", 33, "comesFrom", ["head"], [8]], ["oldtail", 14, "comesFrom", ["oldtail"], [13]], ["oldtail", 31, "comesFrom", ["oldtail"], [13]], ["newtail", 26, "comesFrom", ["newtail"], [25]], ["newtail", 29, "comesFrom", ["newtail"], [25]], ["newtail", 34, "comesFrom", ["newtail"], [25]], ["n", 12, "comesFrom", ["n"], [9]], ["n", 17, "comesFrom", ["n"], [9]], ["n", 22, "comesFrom", ["n"], [9]], ["k", 18, "comesFrom", ["k"], [16]], ["k", 23, "comesFrom", ["k"], [16]], ["i", 21, "comesFrom", ["i"], [20]], ["i", 24, "comesFrom", ["i"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::696", "code": "#include \"products.h\"\n\nvoid Products::SetCurrentProducts(const QStringList & productsName)\n{\n\tm_currentProduct = 0;\n\n\tfor (auto iter = m_mapAllProducts.cbegin(); iter != m_mapAllProducts.cend(); ++iter)\n\t{\n\t\tif (productsName.contains(iter.value().m_name))\n\t\t\tm_currentProduct |= iter.key();\n\t}\n}\n\nvoid Products::SetCurrentProducts(EProducts product)\n{\n\tm_currentProduct = product;\n}\n\nbool Products::ContainsInProducts(int productIndex)\n{\n\tif (m_currentProduct == 0)\n\t\treturn true;\n\telse\n\t\treturn m_currentProduct & productIndex;\n}\n\nProducts::Products()\n{\n\tm_mapAllProducts.insert(ENotePad, SProducts(\"notepad\", \"notepad\", \"notepad_gray\"));\n\tm_mapAllProducts.insert(EWordPad, SProducts(\"wordpad\", \"wordpad\", \"wordpad_gray\"));\n\tm_mapAllProducts.insert(ECalculator, SProducts(\"calc\", \"calc\", \"calc_gray\"));\n\tm_mapAllProducts.insert(EPaint, SProducts(\"mspaint\", \"paint\", \"paint_gray\"));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "products", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠProducts", "::", "Set", "Current", "Products", "(", "const", "ĠQ", "String", "List", "Ġ&", "Ġproducts", "Name", ")", "Ċ", "{", "Ċ", "ĉ", "m", "_", "current", "Product", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "for", "Ġ(", "auto", "Ġiter", "Ġ=", "Ġm", "_", "map", "All", "Products", ".", "c", "begin", "();", "Ġiter", "Ġ!=", "Ġm", "_", "map", "All", "Products", ".", "cend", "();", "Ġ++", "iter", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "products", "Name", ".", "cont", "ains", "(", "iter", ".", "value", "().", "m", "_", "name", "))", "Ċ", "ĉ", "ĉ", "ĉ", "m", "_", "current", "Product", "Ġ|", "=", "Ġiter", ".", "key", "();", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠProducts", "::", "Set", "Current", "Products", "(", "EP", "rodu", "ct", "s", "Ġproduct", ")", "Ċ", "{", "Ċ", "ĉ", "m", "_", "current", "Product", "Ġ=", "Ġproduct", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠProducts", "::", "Cont", "ains", "In", "Products", "(", "int", "Ġproduct", "Index", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "m", "_", "current", "Product", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "return", "Ġm", "_", "current", "Product", "Ġ&", "Ġproduct", "Index", ";", "Ċ", "}", "Ċ", "Ċ", "Products", "::", "Products", "()", "Ċ", "{", "Ċ", "ĉ", "m", "_", "map", "All", "Products", ".", "insert", "(", "EN", "ote", "Pad", ",", "ĠSP", "rodu", "ct", "s", "(\"", "not", "epad", "\",", "Ġ\"", "not", "epad", "\",", "Ġ\"", "not", "epad", "_", "gray", "\")", ");", "Ċ", "ĉ", "m", "_", "map", "All", "Products", ".", "insert", "(", "EW", "ord", "Pad", ",", "ĠSP", "rodu", "ct", "s", "(\"", "word", "pad", "\",", "Ġ\"", "word", "pad", "\",", "Ġ\"", "word", "pad", "_", "gray", "\")", ");", "Ċ", "ĉ", "m", "_", "map", "All", "Products", ".", "insert", "(", "EC", "al", "cul", "ator", ",", "ĠSP", "rodu", "ct", "s", "(\"", "cal", "c", "\",", "Ġ\"", "cal", "c", "\",", "Ġ\"", "cal", "c", "_", "gray", "\")", ");", "Ċ", "ĉ", "m", "_", "map", "All", "Products", ".", "insert", "(", "EP", "aint", ",", "ĠSP", "rodu", "ct", "s", "(\"", "ms", "p", "aint", "\",", "Ġ\"", "p", "aint", "\",", "Ġ\"", "p", "aint", "_", "gray", "\")", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["iter", 6, "comesFrom", ["iter"], [3]], ["iter", 9, "comesFrom", ["iter"], [3]], ["iter", 12, "comesFrom", ["iter"], [3]], ["iter", 16, "comesFrom", ["iter"], [3]], ["product", 21, "comesFrom", ["product"], [19]], ["m_currentProduct", 24, "comesFrom", ["m_currentProduct"], [20]], ["m_currentProduct", 25, "comesFrom", ["m_currentProduct"], [20]], ["productIndex", 26, "comesFrom", ["productIndex"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::697", "code": "class grass_points\n{\npublic:  \n    inline grass_points(const std::string in_path,\n\t\t    const std::string in_actionNames,  \n\t\t    const float in_scale_factor, \n\t\t    const int in_shift,\n\t\t    const int in_scene,\n\t\t    const int segment_length,\n\t\t    const int in_p,\n\t\t    const bool in_flag_shift\n                  );\n    \n\n\n    inline void calculate( field<string> all_people, int dim );\n    inline void calculate_onepervideo( field<string> all_people, int dim  );\n\nconst std::string path;\nconst std::string actionNames;\n\nconst float scale_factor;\nconst int shift;\nconst int total_scenes;\nconst int segment_length;\nconst int p;\nint dim;\nconst bool flag_shift;\n\nfield<std::string> actions;\nfield<string> all_people;\n\n\n  private: \n    inline void one_video( std::string load_feat_video_i, std::string load_labels_video_i, int sc, int pe, int act );\n    inline void one_video_one_point( std::string load_feat_video_i, int sc, int pe, int act );\n\n\n \n  \n};", "code_tokens": ["Ġclass", "Ġgrass", "_", "points", "Ċ", "{", "Ċ", "public", ":", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġgrass", "_", "points", "(", "const", "Ġstd", "::", "string", "Ġin", "_", "path", ",", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "string", "Ġin", "_", "action", "Names", ",", "Ġ", "Ġ", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġfloat", "Ġin", "_", "scale", "_", "factor", ",", "Ġ", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġint", "Ġin", "_", "shift", ",", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġint", "Ġin", "_", "scene", ",", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġint", "Ġsegment", "_", "length", ",", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġint", "Ġin", "_", "p", ",", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġbool", "Ġin", "_", "flag", "_", "shift", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġvoid", "Ġcalculate", "(", "Ġfield", "<", "string", ">", "Ġall", "_", "people", ",", "Ġint", "Ġdim", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġvoid", "Ġcalculate", "_", "one", "per", "video", "(", "Ġfield", "<", "string", ">", "Ġall", "_", "people", ",", "Ġint", "Ġdim", "Ġ", "Ġ);", "Ċ", "Ċ", "const", "Ġstd", "::", "string", "Ġpath", ";", "Ċ", "const", "Ġstd", "::", "string", "Ġaction", "Names", ";", "Ċ", "Ċ", "const", "Ġfloat", "Ġscale", "_", "factor", ";", "Ċ", "const", "Ġint", "Ġshift", ";", "Ċ", "const", "Ġint", "Ġtotal", "_", "scenes", ";", "Ċ", "const", "Ġint", "Ġsegment", "_", "length", ";", "Ċ", "const", "Ġint", "Ġp", ";", "Ċ", "int", "Ġdim", ";", "Ċ", "const", "Ġbool", "Ġflag", "_", "shift", ";", "Ċ", "Ċ", "field", "<", "std", "::", "string", ">", "Ġactions", ";", "Ċ", "field", "<", "string", ">", "Ġall", "_", "people", ";", "ĊĊ", "Ċ", "Ġ", "Ġprivate", ":", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġvoid", "Ġone", "_", "video", "(", "Ġstd", "::", "string", "Ġload", "_", "feat", "_", "video", "_", "i", ",", "Ġstd", "::", "string", "Ġload", "_", "lab", "els", "_", "video", "_", "i", ",", "Ġint", "Ġsc", ",", "Ġint", "Ġpe", ",", "Ġint", "Ġact", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġvoid", "Ġone", "_", "video", "_", "one", "_", "point", "(", "Ġstd", "::", "string", "Ġload", "_", "feat", "_", "video", "_", "i", ",", "Ġint", "Ġsc", ",", "Ġint", "Ġpe", ",", "Ġint", "Ġact", "Ġ);", "ĊĊ", "Ċ", "Ġ", "Ċ", "Ġ", "Ġ", "Ċ", "};"], "dataflow_graph": [["segment_length", 20, "comesFrom", ["segment_length"], [6]], ["dim", 22, "comesFrom", ["dim"], [14]], ["all_people", 25, "comesFrom", ["all_people"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::698", "code": "// example on insertion\n#include <iostream>\nusing namespace std;\n\nint main () {\n\n  int val = 65;\n  unsigned int val2 = 43;\n  cout << val << endl;     // Insert integer\n  cout << val2 << endl;     // Insert integer\n  \n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġexample", "Ġon", "Ġinsertion", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "ĊĊ", "Ġ", "Ġint", "Ġval", "Ġ=", "Ġ65", ";", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġval", "2", "Ġ=", "Ġ43", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġval", "Ġ<<", "Ġend", "l", ";", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠInsert", "Ġinteger", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġval", "2", "Ġ<<", "Ġend", "l", ";", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠInsert", "Ġinteger", "Ċ", "Ġ", "Ġ", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["val", 5, "comesFrom", ["val"], [2]], ["val2", 8, "comesFrom", ["val2"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::699", "code": "template <typename T>\nvoid isort(vector<T> &vec)\n{\n\tfor (int j=1;j<vec.size();++j)\n\t{\n\t\tint i=j-1;\n\t\tT v = vec[j];\n\t\twhile (i>=0&&v<vec[i])\n\t\t{\n\t\t\tvec[i+1]=vec[i];\n\t\t\t--i;\n\t\t} \n\t\tvec[i+1]=v;\n\t}\n}", "code_tokens": ["Ġtemplate", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "void", "Ġis", "ort", "(", "vector", "<", "T", ">", "Ġ&", "vec", ")", "Ċ", "{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġj", "=", "1", ";", "j", "<", "vec", ".", "size", "();", "++", "j", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "int", "Ġi", "=", "j", "-", "1", ";", "Ċ", "ĉ", "ĉ", "T", "Ġv", "Ġ=", "Ġvec", "[", "j", "];", "Ċ", "ĉ", "ĉ", "while", "Ġ(", "i", ">", "=", "0", "&&", "v", "<", "vec", "[", "i", "])", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "vec", "[", "i", "+", "1", "]=", "vec", "[", "i", "];", "Ċ", "ĉ", "ĉ", "ĉ", "--", "i", ";", "Ċ", "ĉ", "ĉ", "}", "Ġ", "Ċ", "ĉ", "ĉ", "vec", "[", "i", "+", "1", "]=", "v", ";", "Ċ", "ĉ", "}", "Ċ", "}"], "dataflow_graph": [["j", 3, "comesFrom", ["j"], [2]], ["j", 6, "comesFrom", ["j"], [2]], ["j", 8, "comesFrom", ["j"], [2]], ["j", 11, "comesFrom", ["j"], [2]], ["i", 12, "comesFrom", ["i"], [7]], ["i", 15, "comesFrom", ["i"], [7]], ["i", 17, "comesFrom", ["i"], [7]], ["i", 19, "comesFrom", ["i"], [7]], ["i", 20, "comesFrom", ["i"], [7]], ["i", 22, "comesFrom", ["i"], [7]], ["v", 13, "comesFrom", ["v"], [9]], ["v", 23, "comesFrom", ["v"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::700", "code": "#include<stdio.h>\nint main() {\n  long int n,i;\n  while(scanf(\"%ld%ld\",&n,&i)!=EOF) {\n    printf(\"%ld\\n\",n+(n-1)/(i-1));\n  }\n  return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "<", "std", "io", ".", "h", ">", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġlong", "Ġint", "Ġn", ",", "i", ";", "Ċ", "Ġ", "Ġwhile", "(", "scan", "f", "(\"", "%", "ld", "%", "ld", "\",", "&", "n", ",", "&", "i", ")!", "=", "EO", "F", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "ld", "\\", "n", "\",", "n", "+(", "n", "-", "1", ")/", "(", "i", "-", "1", "));", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["n", 4, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 9, "comesFrom", ["n"], [1]], ["i", 5, "comesFrom", ["i"], [2]], ["i", 10, "comesFrom", ["i"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::701", "code": "\n#include \"TROOT.h\"\n#include \"TFile.h\"\n#include \"TTree.h\"\n#include \"TBranch.h\"\n#include \"TH1F.h\"\n#include \"TF1.h\"\n#include \"TCanvas.h\"\n#include \"TMath.h\"\n#include \"TSpectrum.h\"\n#include \"TMarker.h\"\n\n\nTF1 *f1, *f2;\ndouble finter(double *x, double*par) {\n   return TMath::Abs(f1->EvalPar(x,par) - f2->EvalPar(x,par));\n}\nvoid fint() {\n   f1 = new TF1(\"f1\",\"1+2*x+0.2*x*x\",0,10);\n   f2 = new TF1(\"f2\",\"6+3*x-0.3*x*x\",0,10);\n   f1->Draw();\n   f2->Draw(\"same\");\n   TF1 *fint = new TF1(\"fint\",finter,0,10,0);\n   double xint = fint->GetMinimumX();\n   fint->Draw(\"lsame\");\n   TMarker *m = new TMarker(xint,f1->Eval(xint),24);\n   m->SetMarkerColor(kRed);\n   m->SetMarkerSize(3);\n   m->Draw();\n   printf(\"xint=%g\\n\",xint);\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "TR", "O", "OT", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "T", "File", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "TT", "ree", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "TB", "ranch", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "TH", "1", "F", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "TF", "1", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "TC", "an", "vas", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "TM", "ath", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "TS", "pect", "rum", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "T", "Mark", "er", ".", "h", "\"", "ĊĊ", "Ċ", "TF", "1", "Ġ*", "f", "1", ",", "Ġ*", "f", "2", ";", "Ċ", "double", "Ġfin", "ter", "(", "double", "Ġ*", "x", ",", "Ġdouble", "*", "par", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġreturn", "ĠTM", "ath", "::", "Abs", "(", "f", "1", "->", "E", "val", "Par", "(", "x", ",", "par", ")", "Ġ-", "Ġf", "2", "->", "E", "val", "Par", "(", "x", ",", "par", "));", "Ċ", "}", "Ċ", "void", "Ġf", "int", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġf", "1", "Ġ=", "Ġnew", "ĠTF", "1", "(\"", "f", "1", "\",\"", "1", "+", "2", "*", "x", "+", "0", ".", "2", "*", "x", "*", "x", "\",", "0", ",", "10", ");", "Ċ", "Ġ", "Ġ", "Ġf", "2", "Ġ=", "Ġnew", "ĠTF", "1", "(\"", "f", "2", "\",\"", "6", "+", "3", "*", "x", "-", "0", ".", "3", "*", "x", "*", "x", "\",", "0", ",", "10", ");", "Ċ", "Ġ", "Ġ", "Ġf", "1", "->", "Draw", "();", "Ċ", "Ġ", "Ġ", "Ġf", "2", "->", "Draw", "(\"", "same", "\");", "Ċ", "Ġ", "Ġ", "ĠTF", "1", "Ġ*", "f", "int", "Ġ=", "Ġnew", "ĠTF", "1", "(\"", "f", "int", "\",", "f", "inter", ",", "0", ",", "10", ",", "0", ");", "Ċ", "Ġ", "Ġ", "Ġdouble", "Ġx", "int", "Ġ=", "Ġf", "int", "->", "Get", "Minimum", "X", "();", "Ċ", "Ġ", "Ġ", "Ġf", "int", "->", "Draw", "(\"", "ls", "ame", "\");", "Ċ", "Ġ", "Ġ", "ĠT", "Mark", "er", "Ġ*", "m", "Ġ=", "Ġnew", "ĠT", "Mark", "er", "(", "x", "int", ",", "f", "1", "->", "E", "val", "(", "x", "int", "),", "24", ");", "Ċ", "Ġ", "Ġ", "Ġm", "->", "Set", "Mark", "er", "Color", "(", "k", "Red", ");", "Ċ", "Ġ", "Ġ", "Ġm", "->", "Set", "Mark", "er", "Size", "(", "3", ");", "Ċ", "Ġ", "Ġ", "Ġm", "->", "Draw", "();", "Ċ", "Ġ", "Ġ", "Ġprintf", "(\"", "x", "int", "=", "%", "g", "\\", "n", "\",", "x", "int", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["f1", 17, "comesFrom", ["f1"], [15]], ["f1", 30, "comesFrom", ["f1"], [15]], ["f2", 19, "comesFrom", ["f2"], [16]], ["xint", 29, "comesFrom", ["xint"], [23]], ["xint", 32, "comesFrom", ["xint"], [23]], ["xint", 41, "comesFrom", ["xint"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::702", "code": "\n#include <memory>\n#include <iostream>\n\nclass i\n{\n  public:\n\tint jj() const {}\n\tint mm() {}\n\n  public:\n\tint k;\n\tint m;\n};\nint main()\n{\n\n\tconst std::shared_ptr<i> mm{new i{}};\n\tconst i cc;\n\tcc.mm();\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "class", "Ġi", "Ċ", "{", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "ĉ", "int", "Ġj", "j", "()", "Ġconst", "Ġ{}", "Ċ", "ĉ", "int", "Ġmm", "()", "Ġ{}", "ĊĊ", "Ġ", "Ġpublic", ":", "Ċ", "ĉ", "int", "Ġk", ";", "Ċ", "ĉ", "int", "Ġm", ";", "Ċ", "};", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "ĊĊ", "ĉ", "const", "Ġstd", "::", "shared", "_", "ptr", "<", "i", ">", "Ġmm", "{", "new", "Ġi", "{", "}}", ";", "Ċ", "ĉ", "const", "Ġi", "Ġcc", ";", "Ċ", "ĉ", "cc", ".", "mm", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["mm", 8, "comesFrom", ["mm"], [5]], ["cc", 7, "comesFrom", ["cc"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::703", "code": "/****************\n  LeetCode Balanced Binary Tree\n\n  Given a binary tree, determine if it is height-balanced.\n\n  For this problem, a height-balanced binary tree is defined as a binary\n  tree in which the depth of the two subtrees of every node never differ \n  by more than 1.\n\n  Discussion:\n  recursively find the height of the two substrees of every node.\n\n  time complexity O(n), space complexify O(logn)\n*********************/\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode *root) {\n        return balancedHeight(root)>=0;\n        \n    }\nprivate:\n    int balancedHeight(TreeNode *root) {\n        if (root == NULL) return 0;  // terminate condition\n        \n        int leftHeight = balancedHeight(root->left);\n        int rightHeight = balancedHeight(root->right);\n        \n        if (leftHeight < 0 || rightHeight < 0 || abs(leftHeight - rightHeight) > 1)\n            return -1;\n            \n        return max(leftHeight, rightHeight) + 1;\n    }\n};\n", "code_tokens": ["Ġ/", "****************", "Ċ", "Ġ", "ĠLe", "et", "Code", "ĠBalanced", "ĠBinary", "ĠTree", "ĊĊ", "Ġ", "ĠGiven", "Ġa", "Ġbinary", "Ġtree", ",", "Ġdetermine", "Ġif", "Ġit", "Ġis", "Ġheight", "-", "balanced", ".", "ĊĊ", "Ġ", "ĠFor", "Ġthis", "Ġproblem", ",", "Ġa", "Ġheight", "-", "balanced", "Ġbinary", "Ġtree", "Ġis", "Ġdefined", "Ġas", "Ġa", "Ġbinary", "Ċ", "Ġ", "Ġtree", "Ġin", "Ġwhich", "Ġthe", "Ġdepth", "Ġof", "Ġthe", "Ġtwo", "Ġsubt", "rees", "Ġof", "Ġevery", "Ġnode", "Ġnever", "Ġdiffer", "Ġ", "Ċ", "Ġ", "Ġby", "Ġmore", "Ġthan", "Ġ1", ".", "ĊĊ", "Ġ", "ĠDiscussion", ":", "Ċ", "Ġ", "Ġrec", "urs", "ively", "Ġfind", "Ġthe", "Ġheight", "Ġof", "Ġthe", "Ġtwo", "Ġsubst", "rees", "Ġof", "Ġevery", "Ġnode", ".", "ĊĊ", "Ġ", "Ġtime", "Ġcomplexity", "ĠO", "(", "n", "),", "Ġspace", "Ġcomplex", "ify", "ĠO", "(", "l", "ogn", ")", "Ċ", "****************", "****", "*/", "Ċ", "/**", "Ċ", "Ġ*", "ĠDefinition", "Ġfor", "Ġbinary", "Ġtree", "Ċ", "Ġ*", "Ġstruct", "ĠTree", "Node", "Ġ{", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġ*", "left", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġ*", "right", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġleft", "(", "NULL", "),", "Ġright", "(", "NULL", ")", "Ġ{}", "Ċ", "Ġ*", "Ġ};", "Ċ", "Ġ*/", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġis", "Bal", "anced", "(", "Tree", "Node", "Ġ*", "root", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġbalanced", "Height", "(", "root", ")", ">", "=", "0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "private", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġbalanced", "Height", "(", "Tree", "Node", "Ġ*", "root", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "root", "Ġ==", "ĠNULL", ")", "Ġreturn", "Ġ0", ";", "Ġ", "Ġ//", "Ġterminate", "Ġcondition", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġleft", "Height", "Ġ=", "Ġbalanced", "Height", "(", "root", "->", "left", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġright", "Height", "Ġ=", "Ġbalanced", "Height", "(", "root", "->", "right", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "left", "Height", "Ġ<", "Ġ0", "Ġ||", "Ġright", "Height", "Ġ<", "Ġ0", "Ġ||", "Ġabs", "(", "left", "Height", "Ġ-", "Ġright", "Height", ")", "Ġ>", "Ġ1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmax", "(", "left", "Height", ",", "Ġright", "Height", ")", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["leftHeight", 15, "comesFrom", ["leftHeight"], [7]], ["leftHeight", 18, "comesFrom", ["leftHeight"], [7]], ["leftHeight", 21, "comesFrom", ["leftHeight"], [7]], ["rightHeight", 16, "comesFrom", ["rightHeight"], [11]], ["rightHeight", 19, "comesFrom", ["rightHeight"], [11]], ["rightHeight", 22, "comesFrom", ["rightHeight"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::704", "code": "/*\n * meego-handset-socialweb - Meego Handset Social Networking application\n *\n * Copyright (c) 2010, Intel Corporation.\n *\n * This program is licensed under the terms and conditions of the\n * Apache License, version 2.0.  The full text of the Apache License is at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n */\n\n\n#include \"socialwebapp.h\"\n#include \"switemlistpage.h\"\n\nSocialWebApp::SocialWebApp(int &argc, char**argv)\n        : MApplication(argc, argv)\n{\n\n    mWindow = new MApplicationWindow();\n    mWindow->show();\n\n    mSwItemListPage = new SwItemListPage();\n    mSwItemListPage->appear();\n\n}\n\nSocialWebApp::~SocialWebApp()\n{\n    delete mSwItemListPage;\n    delete mWindow;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġme", "eg", "o", "-", "hands", "et", "-", "social", "web", "Ġ-", "ĠM", "ee", "go", "ĠHands", "et", "ĠSocial", "ĠNetwork", "ing", "Ġapplication", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2010", ",", "ĠIntel", "ĠCorporation", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "Ġterms", "Ġand", "Ġconditions", "Ġof", "Ġthe", "Ċ", "Ġ*", "ĠApache", "ĠLicense", ",", "Ġversion", "Ġ2", ".", "0", ".", "Ġ", "ĠThe", "Ġfull", "Ġtext", "Ġof", "Ġthe", "ĠApache", "ĠLicense", "Ġis", "Ġat", "Ċ", "Ġ*", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*/", "ĊĊ", "Ċ", "#", "include", "Ġ\"", "social", "web", "app", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sw", "item", "list", "page", ".", "h", "\"", "Ċ", "Ċ", "Social", "Web", "App", "::", "Social", "Web", "App", "(", "int", "Ġ&", "arg", "c", ",", "Ġchar", "**", "arg", "v", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠM", "Application", "(", "arg", "c", ",", "Ġarg", "v", ")", "Ċ", "{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġm", "Window", "Ġ=", "Ġnew", "ĠM", "Application", "Window", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "Window", "->", "show", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġm", "Sw", "Item", "List", "Page", "Ġ=", "Ġnew", "ĠSw", "Item", "List", "Page", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "Sw", "Item", "List", "Page", "->", "app", "ear", "();", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Social", "Web", "App", "::", "~", "Social", "Web", "App", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġm", "Sw", "Item", "List", "Page", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġm", "Window", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["mWindow", 7, "comesFrom", ["mWindow"], [6]], ["mWindow", 14, "comesFrom", ["mWindow"], [6]], ["mSwItemListPage", 10, "comesFrom", ["mSwItemListPage"], [9]], ["mSwItemListPage", 13, "comesFrom", ["mSwItemListPage"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::705", "code": "#include \"stdafx.h\"\n\n#include \"poses_blending.h\"\n\nposes_interpolation::poses_interpolation(const Fmatrix& m0, const Fmatrix& m1)\n    : p0(m0.c), p1(m1.c), q0(Fquaternion().set(m0)), q1(Fquaternion().set(m1)) {}\n\nvoid poses_interpolation::pose(Fmatrix& p, float factor) const {\n    p.rotation(Fquaternion().slerp(q0, q1, factor));\n    p.c.lerp(p0, p1, factor);\n}\n\nposes_blending::poses_blending(const Fmatrix& m0, const Fmatrix& m1, float target_time_)\n    : interpolation(m0, m1), target_time(target_time_) {}\n\nvoid poses_blending::pose(Fmatrix& p, float time) const {\n    VERIFY(target_time > EPS_S);\n    VERIFY(time >= 0.f);\n    VERIFY(time < target_time);\n\n    interpolation.pose(p, time / target_time);\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "poses", "_", "bl", "ending", ".", "h", "\"", "Ċ", "Ċ", "poses", "_", "inter", "pol", "ation", "::", "poses", "_", "inter", "pol", "ation", "(", "const", "ĠF", "mat", "rix", "&", "Ġm", "0", ",", "Ġconst", "ĠF", "mat", "rix", "&", "Ġm", "1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġp", "0", "(", "m", "0", ".", "c", "),", "Ġp", "1", "(", "m", "1", ".", "c", "),", "Ġq", "0", "(", "F", "qu", "atern", "ion", "().", "set", "(", "m", "0", ")),", "Ġq", "1", "(", "F", "qu", "atern", "ion", "().", "set", "(", "m", "1", "))", "Ġ{}", "Ċ", "Ċ", "void", "Ġposes", "_", "inter", "pol", "ation", "::", "pose", "(", "F", "mat", "rix", "&", "Ġp", ",", "Ġfloat", "Ġfactor", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", ".", "rot", "ation", "(", "F", "qu", "atern", "ion", "().", "s", "ler", "p", "(", "q", "0", ",", "Ġq", "1", ",", "Ġfactor", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", ".", "c", ".", "ler", "p", "(", "p", "0", ",", "Ġp", "1", ",", "Ġfactor", ");", "Ċ", "}", "Ċ", "Ċ", "poses", "_", "bl", "ending", "::", "poses", "_", "bl", "ending", "(", "const", "ĠF", "mat", "rix", "&", "Ġm", "0", ",", "Ġconst", "ĠF", "mat", "rix", "&", "Ġm", "1", ",", "Ġfloat", "Ġtarget", "_", "time", "_", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġinterpol", "ation", "(", "m", "0", ",", "Ġm", "1", "),", "Ġtarget", "_", "time", "(", "target", "_", "time", "_", ")", "Ġ{}", "Ċ", "Ċ", "void", "Ġposes", "_", "bl", "ending", "::", "pose", "(", "F", "mat", "rix", "&", "Ġp", ",", "Ġfloat", "Ġtime", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVER", "IF", "Y", "(", "target", "_", "time", "Ġ>", "ĠEPS", "_", "S", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVER", "IF", "Y", "(", "time", "Ġ>=", "Ġ0", ".", "f", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVER", "IF", "Y", "(", "time", "Ġ<", "Ġtarget", "_", "time", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġinterpol", "ation", ".", "pose", "(", "p", ",", "Ġtime", "Ġ/", "Ġtarget", "_", "time", ");", "Ċ", "}"], "dataflow_graph": [["factor", 26, "comesFrom", ["factor"], [19]], ["factor", 32, "comesFrom", ["factor"], [19]], ["target_time_", 41, "comesFrom", ["target_time_"], [36]], ["time", 49, "comesFrom", ["time"], [44]], ["time", 51, "comesFrom", ["time"], [44]], ["time", 56, "comesFrom", ["time"], [44]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::706", "code": "// Project\n#include \"GameScreen.h\"\n#include \"ISE.h\"\n#include \"qfile.h\"\n#include \"qtextstream.h\"\n#include \"GameBar.h\"\nISEBegin\n\n  void setStyles(GameScreen *screen)\n{  \n  QFile file(ISE::DataPath(\"charcoal.txt\"));\n  if(!file.open(QIODevice::ReadOnly| QIODevice::Text))\n    return;\n  QTextStream in(&file);\n  screen->setStyleSheet(in.readAll());\n\n}\n\nGameScreen::GameScreen()\n  : QMainWindow()\n{\n  setStyles(this);\n  addToolBar(Qt::ToolBarArea::LeftToolBarArea,new GameBar());\n}\n\n\nGameScreen::~GameScreen()\n{\n\n}\n\nISEEnd", "code_tokens": ["Ġ//", "ĠProject", "Ċ", "#", "include", "Ġ\"", "Game", "Screen", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "ISE", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "q", "file", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "q", "text", "stream", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Game", "Bar", ".", "h", "\"", "Ċ", "ISE", "Begin", "ĊĊ", "Ġ", "Ġvoid", "Ġset", "Sty", "les", "(", "Game", "Screen", "Ġ*", "screen", ")", "Ċ", "{", "Ġ", "Ġ", "Ċ", "Ġ", "ĠQ", "File", "Ġfile", "(", "ISE", "::", "Data", "Path", "(\"", "char", "coal", ".", "txt", "\")", ");", "Ċ", "Ġ", "Ġif", "(", "!", "file", ".", "open", "(", "Q", "I", "OD", "ev", "ice", "::", "Read", "Only", "|", "ĠQ", "I", "OD", "ev", "ice", "::", "Text", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", ";", "Ċ", "Ġ", "ĠQ", "Text", "Stream", "Ġin", "(&", "file", ");", "Ċ", "Ġ", "Ġscreen", "->", "set", "Style", "She", "et", "(", "in", ".", "read", "All", "());", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Game", "Screen", "::", "Game", "Screen", "()", "Ċ", "Ġ", "Ġ:", "ĠQ", "Main", "Window", "()", "Ċ", "{", "Ċ", "Ġ", "Ġset", "Sty", "les", "(", "this", ");", "Ċ", "Ġ", "Ġadd", "Tool", "Bar", "(", "Q", "t", "::", "Tool", "Bar", "Area", "::", "Left", "Tool", "Bar", "Area", ",", "new", "ĠGame", "Bar", "());", "Ċ", "}", "ĊĊ", "Ċ", "Game", "Screen", "::", "~", "Game", "Screen", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "IS", "EE", "nd"], "dataflow_graph": [["file", 5, "comesFrom", ["file"], [3]], ["file", 10, "comesFrom", ["file"], [3]], ["in", 13, "comesFrom", ["in"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::707", "code": "/*\n * Copyright (c) 2012-2015 Aldebaran Robotics. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the COPYING file.\n */\n#include <iostream>\n#include <fstream>\n\nint main(int argc, char* argv[])\n{\n  if(argc < 3) {\n    std::cerr << \"Usage footool IN OUT\" << std::endl;\n    return 2;\n  }\n\n  char* in = argv[1];\n  char* out = argv[2];\n  std::fstream infile;\n  std::fstream outfile;\n\n  infile.open(in, std::ios_base::in);\n\n  if (! infile.is_open()) {\n    std::cerr << \"Could not open: '\" << in << \"' for reading\" << std::endl;\n    return 2;\n  }\n\n  outfile.open(out, std::ios_base::out | std::ios_base::trunc);\n  if (! outfile.is_open()) {\n    std::cerr << \"Could not open: '\" << out << \"' for writing\" << std::endl;\n    return 2;\n  }\n\n  std::cout << \"Compiling: \" << in << \" -> \" << out << std::endl;\n  outfile << infile.rdbuf();\n  infile.close();\n  outfile.close();\n#ifdef FAIL_COMPILER\n  std::cerr << \"Compilation failed!\" << std::endl;\n  return 1;\n#endif\n  return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2012", "-", "2015", "ĠAld", "eb", "aran", "ĠRobotics", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "Ġ*", "Ġfound", "Ġin", "Ġthe", "ĠCOP", "YING", "Ġfile", ".", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġif", "(", "arg", "c", "Ġ<", "Ġ3", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Usage", "Ġfoot", "ool", "ĠIN", "ĠOUT", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ2", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġchar", "*", "Ġin", "Ġ=", "Ġarg", "v", "[", "1", "];", "Ċ", "Ġ", "Ġchar", "*", "Ġout", "Ġ=", "Ġarg", "v", "[", "2", "];", "Ċ", "Ġ", "Ġstd", "::", "f", "stream", "Ġinf", "ile", ";", "Ċ", "Ġ", "Ġstd", "::", "f", "stream", "Ġout", "file", ";", "ĊĊ", "Ġ", "Ġinf", "ile", ".", "open", "(", "in", ",", "Ġstd", "::", "ios", "_", "base", "::", "in", ");", "ĊĊ", "Ġ", "Ġif", "Ġ(!", "Ġinf", "ile", ".", "is", "_", "open", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Could", "Ġnot", "Ġopen", ":", "Ġ'", "\"", "Ġ<<", "Ġin", "Ġ<<", "Ġ\"'", "Ġfor", "Ġreading", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ2", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġout", "file", ".", "open", "(", "out", ",", "Ġstd", "::", "ios", "_", "base", "::", "out", "Ġ|", "Ġstd", "::", "ios", "_", "base", "::", "tr", "unc", ");", "Ċ", "Ġ", "Ġif", "Ġ(!", "Ġout", "file", ".", "is", "_", "open", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Could", "Ġnot", "Ġopen", ":", "Ġ'", "\"", "Ġ<<", "Ġout", "Ġ<<", "Ġ\"'", "Ġfor", "Ġwriting", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ2", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Comp", "iling", ":", "Ġ\"", "Ġ<<", "Ġin", "Ġ<<", "Ġ\"", "Ġ->", "Ġ\"", "Ġ<<", "Ġout", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġout", "file", "Ġ<<", "Ġinf", "ile", ".", "rd", "buf", "();", "Ċ", "Ġ", "Ġinf", "ile", ".", "close", "();", "Ċ", "Ġ", "Ġout", "file", ".", "close", "();", "Ċ", "#", "if", "def", "ĠFA", "IL", "_", "COM", "P", "IL", "ER", "Ċ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Comp", "ilation", "Ġfailed", "!\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "#", "endif", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 3, "comesFrom", ["argc"], [1]], ["infile", 12, "comesFrom", ["infile"], [10]], ["infile", 16, "comesFrom", ["infile"], [10]], ["infile", 36, "comesFrom", ["infile"], [10]], ["infile", 38, "comesFrom", ["infile"], [10]], ["outfile", 21, "comesFrom", ["outfile"], [11]], ["outfile", 26, "comesFrom", ["outfile"], [11]], ["outfile", 35, "comesFrom", ["outfile"], [11]], ["outfile", 40, "comesFrom", ["outfile"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::708", "code": "// Copyright (c) Steinwurf ApS 2016.\n// All Rights Reserved\n//\n// Distributed under the \"BSD License\". See the accompanying LICENSE.rst file.\n\n#include <petro/box/data_box.hpp>\n#include <petro/box/stts.hpp>\n\n#include <gtest/gtest.h>\n\n#include <cstdint>\n#include <memory>\n#include <system_error>\n#include <vector>\n\nTEST(box_test_stts, construct)\n{\n    std::vector<uint8_t> buffer = {0x00, 0x00, 0x00, 0x00, 's',  't',\n                                   't',  's',  0x00, 0x00, 0x00, 0x00,\n                                   0x00, 0x00, 0x00, 0x00};\n    auto stts_box =\n        std::make_shared<petro::box::stts>(buffer.data(), buffer.size());\n\n    std::error_code error;\n    stts_box->parse(error);\n    ASSERT_FALSE(bool(error));\n\n    EXPECT_EQ(\"stts\", stts_box->type());\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "ĠStein", "w", "ur", "f", "ĠAp", "S", "Ġ2016", ".", "Ċ", "//", "ĠAll", "ĠRights", "ĠReserved", "Ċ", "//", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "Ġ\"", "BSD", "ĠLicense", "\".", "ĠSee", "Ġthe", "Ġaccompanying", "ĠLIC", "ENSE", ".", "r", "st", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "pet", "ro", "/", "box", "/", "data", "_", "box", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "pet", "ro", "/", "box", "/", "st", "ts", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "std", "int", ">", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "#", "include", "Ġ<", "system", "_", "error", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "T", "EST", "(", "box", "_", "test", "_", "st", "ts", ",", "Ġconstruct", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "uint", "8", "_", "t", ">", "Ġbuffer", "Ġ=", "Ġ{", "0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ'", "s", "',", "Ġ", "Ġ'", "t", "',", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ'", "t", "',", "Ġ", "Ġ'", "s", "',", "Ġ", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġst", "ts", "_", "box", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "make", "_", "shared", "<", "pet", "ro", "::", "box", "::", "st", "ts", ">(", "buffer", ".", "data", "(),", "Ġbuffer", ".", "size", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "error", "_", "code", "Ġerror", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġst", "ts", "_", "box", "->", "parse", "(", "error", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠASS", "ERT", "_", "F", "ALSE", "(", "bool", "(", "error", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(\"", "st", "ts", "\",", "Ġst", "ts", "_", "box", "->", "type", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["buffer", 4, "comesFrom", ["buffer"], [1]], ["buffer", 6, "comesFrom", ["buffer"], [1]], ["stts_box", 9, "comesFrom", ["stts_box"], [2]], ["stts_box", 15, "comesFrom", ["stts_box"], [2]], ["error", 11, "comesFrom", ["error"], [8]], ["error", 13, "comesFrom", ["error"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::709", "code": "/*----------------------------------------------------------------------------*/\r\n/* Copyright (c) FIRST 2011. All Rights Reserved.\t\t\t\t\t\t\t  */\r\n/* Open Source Software - may be modified and shared by FRC teams. The code   */\r\n/* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */\r\n/*----------------------------------------------------------------------------*/\r\n\r\n#include \"Commands/WaitForChildren.h\"\r\n#include \"Commands/CommandGroup.h\"\r\n\r\nWaitForChildren::WaitForChildren(double timeout) :\r\n\tCommand(\"WaitForChildren\", timeout)\r\n{\t\r\n}\r\n\r\nWaitForChildren::WaitForChildren(const char *name, double timeout) :\r\n\tCommand(name, timeout)\r\n{\r\n}\r\n\r\nvoid WaitForChildren::Initialize()\r\n{\r\n}\r\n\r\nvoid WaitForChildren::Execute()\r\n{\r\n}\r\n\r\nvoid WaitForChildren::End()\r\n{\r\n}\r\n\r\nvoid WaitForChildren::Interrupted()\r\n{\r\n}\r\n\r\nbool WaitForChildren::IsFinished()\r\n{\r\n    return GetGroup() == NULL || GetGroup()->GetSize() == 0;\r\n}\r\n", "code_tokens": ["Ġ/*", "----------------------------------------------------------------", "------------", "*/", "č", "Ċ", "/*", "ĠCopyright", "Ġ(", "c", ")", "ĠFIRST", "Ġ2011", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ*/", "č", "Ċ", "/*", "ĠOpen", "ĠSource", "ĠSoftware", "Ġ-", "Ġmay", "Ġbe", "Ġmodified", "Ġand", "Ġshared", "Ġby", "ĠF", "RC", "Ġteams", ".", "ĠThe", "Ġcode", "Ġ", "Ġ", "Ġ*/", "č", "Ċ", "/*", "Ġmust", "Ġbe", "Ġaccompanied", "Ġby", "Ġthe", "ĠFIRST", "ĠB", "SD", "Ġlicense", "Ġfile", "Ġin", "Ġ$(", "WIND", "_", "B", "ASE", ")/", "WP", "IL", "ib", ".", "Ġ", "Ġ*/", "č", "Ċ", "/*", "----------------------------------------------------------------", "------------", "*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ\"", "Comm", "ands", "/", "Wait", "For", "Children", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "Comm", "ands", "/", "Command", "Group", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "Wait", "For", "Children", "::", "Wait", "For", "Children", "(", "double", "Ġtimeout", ")", "Ġ:", "č", "Ċ", "ĉ", "Command", "(\"", "Wait", "For", "Children", "\",", "Ġtimeout", ")", "č", "Ċ", "{", "ĉ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Wait", "For", "Children", "::", "Wait", "For", "Children", "(", "const", "Ġchar", "Ġ*", "name", ",", "Ġdouble", "Ġtimeout", ")", "Ġ:", "č", "Ċ", "ĉ", "Command", "(", "name", ",", "Ġtimeout", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠWait", "For", "Children", "::", "Initial", "ize", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠWait", "For", "Children", "::", "Exec", "ute", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠWait", "For", "Children", "::", "End", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠWait", "For", "Children", "::", "Inter", "rupted", "()", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "bool", "ĠWait", "For", "Children", "::", "Is", "Fin", "ished", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠGet", "Group", "()", "Ġ==", "ĠNULL", "Ġ||", "ĠGet", "Group", "()", "->", "Get", "Size", "()", "Ġ==", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["timeout", 3, "comesFrom", ["timeout"], [1]], ["timeout", 9, "comesFrom", ["timeout"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::710", "code": "#include <test/unit/math/test_ad.hpp>\n\nvoid expect_transpose(const Eigen::MatrixXd& m) {\n  auto f = [](const auto& x) { return stan::math::transpose(x); };\n  Eigen::VectorXd v = stan::test::to_vector(m);\n  Eigen::RowVectorXd rv = stan::test::to_row_vector(m);\n  stan::test::expect_ad(f, m);\n  stan::test::expect_ad(f, v);\n  stan::test::expect_ad(f, rv);\n}\n\nTEST(MathMixMatFun, transpose) {\n  Eigen::MatrixXd a(0, 0);\n  expect_transpose(a);\n\n  Eigen::MatrixXd b(1, 1);\n  b << -1.2;\n  expect_transpose(b);\n\n  Eigen::MatrixXd c(2, 2);\n  c << -1, 2, 5, 10;\n  expect_transpose(c);\n\n  Eigen::MatrixXd d(2, 3);\n  d << -1, 2, -3, 5, 10, 100;\n  expect_transpose(d);\n\n  Eigen::MatrixXd e(3, 1);\n  e << 1, 2, 3;\n  expect_transpose(e);\n\n  Eigen::MatrixXd g(3, 3);\n  g << 1, 2, 3, 4, 5, 6, 7, 8, 9;\n  expect_transpose(g);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "test", "/", "unit", "/", "math", "/", "test", "_", "ad", ".", "h", "pp", ">", "Ċ", "Ċ", "void", "Ġexpect", "_", "trans", "pose", "(", "const", "ĠE", "igen", "::", "Matrix", "X", "d", "&", "Ġm", ")", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġf", "Ġ=", "Ġ[", "](", "const", "Ġauto", "&", "Ġx", ")", "Ġ{", "Ġreturn", "Ġst", "an", "::", "math", "::", "trans", "pose", "(", "x", ");", "Ġ};", "Ċ", "Ġ", "ĠE", "igen", "::", "Vector", "X", "d", "Ġv", "Ġ=", "Ġst", "an", "::", "test", "::", "to", "_", "vector", "(", "m", ");", "Ċ", "Ġ", "ĠE", "igen", "::", "Row", "Vector", "X", "d", "Ġr", "v", "Ġ=", "Ġst", "an", "::", "test", "::", "to", "_", "row", "_", "vector", "(", "m", ");", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "(", "f", ",", "Ġm", ");", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "(", "f", ",", "Ġv", ");", "Ċ", "Ġ", "Ġst", "an", "::", "test", "::", "ex", "pect", "_", "ad", "(", "f", ",", "Ġr", "v", ");", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "(", "Math", "Mix", "Mat", "Fun", ",", "Ġtrans", "pose", ")", "Ġ{", "Ċ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġa", "(", "0", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġexpect", "_", "trans", "pose", "(", "a", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġb", "(", "1", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġb", "Ġ<<", "Ġ-", "1", ".", "2", ";", "Ċ", "Ġ", "Ġexpect", "_", "trans", "pose", "(", "b", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġc", "(", "2", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġc", "Ġ<<", "Ġ-", "1", ",", "Ġ2", ",", "Ġ5", ",", "Ġ10", ";", "Ċ", "Ġ", "Ġexpect", "_", "trans", "pose", "(", "c", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġd", "(", "2", ",", "Ġ3", ");", "Ċ", "Ġ", "Ġd", "Ġ<<", "Ġ-", "1", ",", "Ġ2", ",", "Ġ-", "3", ",", "Ġ5", ",", "Ġ10", ",", "Ġ100", ";", "Ċ", "Ġ", "Ġexpect", "_", "trans", "pose", "(", "d", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġe", "(", "3", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġe", "Ġ<<", "Ġ1", ",", "Ġ2", ",", "Ġ3", ";", "Ċ", "Ġ", "Ġexpect", "_", "trans", "pose", "(", "e", ");", "ĊĊ", "Ġ", "ĠE", "igen", "::", "Matrix", "X", "d", "Ġg", "(", "3", ",", "Ġ3", ");", "Ċ", "Ġ", "Ġg", "Ġ<<", "Ġ1", ",", "Ġ2", ",", "Ġ3", ",", "Ġ4", ",", "Ġ5", ",", "Ġ6", ",", "Ġ7", ",", "Ġ8", ",", "Ġ9", ";", "Ċ", "Ġ", "Ġexpect", "_", "trans", "pose", "(", "g", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["f", 13, "comesFrom", ["f"], [2]], ["f", 16, "comesFrom", ["f"], [2]], ["f", 19, "comesFrom", ["f"], [2]], ["v", 17, "comesFrom", ["v"], [6]], ["rv", 20, "comesFrom", ["rv"], [9]], ["a", 24, "comesFrom", ["a"], [22]], ["b", 26, "comesFrom", ["b"], [25]], ["b", 28, "comesFrom", ["b"], [25]], ["c", 30, "comesFrom", ["c"], [29]], ["c", 32, "comesFrom", ["c"], [29]], ["d", 34, "comesFrom", ["d"], [33]], ["d", 36, "comesFrom", ["d"], [33]], ["e", 38, "comesFrom", ["e"], [37]], ["e", 40, "comesFrom", ["e"], [37]], ["g", 42, "comesFrom", ["g"], [41]], ["g", 44, "comesFrom", ["g"], [41]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::711", "code": "/*\n * Copyright 2017 Google Inc.\n *\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n#include \"gm/gm.h\"\n#include \"include/core/SkCanvas.h\"\n#include \"include/core/SkPaint.h\"\n#include \"include/core/SkPath.h\"\n\nDEF_SIMPLE_GM(crbug_788500, canvas, 300, 300) {\n    SkPath path;\n    path.setFillType(SkPath::kEvenOdd_FillType);\n    path.moveTo(0, 0);\n    path.moveTo(245.5f, 98.5f);\n    path.cubicTo(245.5f, 98.5f, 242, 78, 260, 75);\n\n    SkPaint paint;\n    paint.setAntiAlias(true);\n    canvas->drawPath(path, paint);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2017", "ĠGoogle", "ĠInc", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "Ġ*", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "gm", "/", "gm", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "include", "/", "core", "/", "Sk", "Can", "vas", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "include", "/", "core", "/", "Sk", "P", "aint", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "include", "/", "core", "/", "Sk", "Path", ".", "h", "\"", "Ċ", "Ċ", "DEF", "_", "SIM", "PLE", "_", "GM", "(", "cr", "bug", "_", "7", "88", "500", ",", "Ġcanvas", ",", "Ġ300", ",", "Ġ300", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "Path", "Ġpath", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpath", ".", "set", "Fill", "Type", "(", "Sk", "Path", "::", "k", "Even", "O", "dd", "_", "Fill", "Type", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpath", ".", "move", "To", "(", "0", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpath", ".", "move", "To", "(", "245", ".", "5", "f", ",", "Ġ98", ".", "5", "f", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpath", ".", "c", "ub", "ic", "To", "(", "245", ".", "5", "f", ",", "Ġ98", ".", "5", "f", ",", "Ġ242", ",", "Ġ78", ",", "Ġ260", ",", "Ġ75", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠSk", "P", "aint", "Ġpaint", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpaint", ".", "set", "Anti", "Alias", "(", "true", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcanvas", "->", "draw", "Path", "(", "path", ",", "Ġpaint", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["path", 4, "comesFrom", ["path"], [3]], ["path", 7, "comesFrom", ["path"], [3]], ["path", 9, "comesFrom", ["path"], [3]], ["path", 11, "comesFrom", ["path"], [3]], ["path", 18, "comesFrom", ["path"], [3]], ["paint", 14, "comesFrom", ["paint"], [13]], ["paint", 19, "comesFrom", ["paint"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::712", "code": "#include <cctype>\n#include <iostream>\n#include <map>\n\nusing namespace std;\n\ninline\nvoid use_io_optimizations()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n}\n\nint main()\n{\n    use_io_optimizations();\n\n    unsigned int rooms;\n    cin >> rooms;\n\n    unsigned int bought_keys {0};\n    map<char, unsigned int> keys_count;\n\n    for (unsigned int i {0}; i < rooms - 1; ++i)\n    {\n        char key;\n        char door;\n\n        cin >> key >> door;\n\n        ++keys_count[key];\n\n        if (keys_count[tolower(door)] == 0)\n        {\n            ++bought_keys;\n        }\n        else\n        {\n            --keys_count[tolower(door)];\n        }\n    }\n\n    cout << bought_keys << '\\n';\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "ct", "ype", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "inline", "Ċ", "void", "Ġuse", "_", "io", "_", "optim", "izations", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġi", "os", "_", "base", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ".", "tie", "(", "null", "ptr", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġuse", "_", "io", "_", "optim", "izations", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġint", "Ġrooms", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġrooms", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġint", "Ġbought", "_", "keys", "Ġ{", "0", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmap", "<", "char", ",", "Ġunsigned", "Ġint", ">", "Ġkeys", "_", "count", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġint", "Ġi", "Ġ{", "0", "};", "Ġi", "Ġ<", "Ġrooms", "Ġ-", "Ġ1", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġkey", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġdoor", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġkey", "Ġ>>", "Ġdoor", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "keys", "_", "count", "[", "key", "];", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "keys", "_", "count", "[", "t", "ol", "ower", "(", "door", ")]", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "b", "ought", "_", "keys", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ--", "keys", "_", "count", "[", "t", "ol", "ower", "(", "door", ")", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġbought", "_", "keys", "Ġ<<", "Ġ'", "\\", "n", "';", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["rooms", 9, "comesFrom", ["rooms"], [7]], ["rooms", 14, "comesFrom", ["rooms"], [7]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 15, "comesFrom", ["i"], [12]], ["key", 19, "comesFrom", ["key"], [16]], ["key", 22, "comesFrom", ["key"], [16]], ["door", 20, "comesFrom", ["door"], [17]], ["door", 25, "comesFrom", ["door"], [17]], ["door", 29, "comesFrom", ["door"], [17]], ["keys_count", 21, "comesFrom", ["keys_count"], [11]], ["keys_count", 23, "comesFrom", ["keys_count"], [11]], ["keys_count", 27, "comesFrom", ["keys_count"], [11]], ["bought_keys", 26, "comesFrom", ["bought_keys"], [10]], ["bought_keys", 31, "comesFrom", ["bought_keys"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::713", "code": "/*\nID: ashish1610\nPROG: D\nLANG: C++\n*/\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll  long long int\nint main()\n{\n    string str;\n    cin>>str;\n    ll dp[2][2];\n    memset(dp,0,sizeof(dp));\n    ll even=0,odd=0;\n    int len=str.length();\n    for(int i=0;i<len;++i)\n    {\n        dp[str[i]-'a'][(i+1)&1]++;\n        even+=dp[str[i]-'a'][!((i+1)&1)];\n        odd+=dp[str[i]-'a'][(i+1)&1];\n    }\n    cout<<even<<\" \"<<odd<<endl;\n    return 0;\n}", "code_tokens": ["Ġ/*", "Ċ", "ID", ":", "Ġash", "ish", "16", "10", "Ċ", "PR", "OG", ":", "ĠD", "Ċ", "L", "ANG", ":", "ĠC", "++", "Ċ", "*/", "Ċ", "#", "include", "<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "define", "Ġll", "Ġ", "Ġlong", "Ġlong", "Ġint", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġstr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ">>", "str", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġll", "Ġd", "p", "[", "2", "][", "2", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmem", "set", "(", "dp", ",", "0", ",", "size", "of", "(", "dp", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġll", "Ġeven", "=", "0", ",", "odd", "=", "0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "=", "str", ".", "length", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "str", "[", "i", "]", "-'", "a", "'", "][", "(", "i", "+", "1", ")", "&", "1", "]", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġeven", "+=", "dp", "[", "str", "[", "i", "]", "-'", "a", "'", "][", "!", "((", "i", "+", "1", ")", "&", "1", ")", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġodd", "+=", "dp", "[", "str", "[", "i", "]", "-'", "a", "'", "][", "(", "i", "+", "1", ")", "&", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "even", "<<", "\"", "Ġ\"", "<<", "odd", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["str", 5, "comesFrom", ["str"], [3]], ["str", 13, "comesFrom", ["str"], [3]], ["str", 20, "comesFrom", ["str"], [3]], ["str", 25, "comesFrom", ["str"], [3]], ["str", 30, "comesFrom", ["str"], [3]], ["i", 16, "comesFrom", ["i"], [15]], ["i", 18, "comesFrom", ["i"], [15]], ["i", 21, "comesFrom", ["i"], [15]], ["i", 22, "comesFrom", ["i"], [15]], ["i", 26, "comesFrom", ["i"], [15]], ["i", 27, "comesFrom", ["i"], [15]], ["i", 31, "comesFrom", ["i"], [15]], ["i", 32, "comesFrom", ["i"], [15]], ["len", 17, "comesFrom", ["len"], [12]], ["even", 34, "comesFrom", ["even"], [23]], ["odd", 35, "comesFrom", ["odd"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::714", "code": "// Copyright 2009-2021 Intel Corporation\n// SPDX-License-Identifier: Apache-2.0\n\n// ospray\n#include \"Light.h\"\n#include \"common/Util.h\"\n#include \"lights/Light_ispc.h\"\n\nnamespace ospray {\n\nstatic FactoryMap<Light> g_lightsMap;\n\n// Light definitions //////////////////////////////////////////////////////////\n\nLight::Light()\n{\n  managedObjectType = OSP_LIGHT;\n}\n\nvoid Light::commit()\n{\n  coloredIntensity =\n      getParam<vec3f>(\"color\", vec3f(1.f)) * getParam<float>(\"intensity\", 1.f);\n  ispc::Light_set(getIE(), getParam<bool>(\"visible\", true));\n}\n\nstd::string Light::toString() const\n{\n  return \"ospray::Light\";\n}\n\nLight *Light::createInstance(const char *type)\n{\n  return createInstanceHelper(type, g_lightsMap[type]);\n}\n\nvoid Light::registerType(const char *type, FactoryFcn<Light> f)\n{\n  g_lightsMap[type] = f;\n}\n\nvoid Light::queryIntensityQuantityType(const OSPIntensityQuantity &defaultIQ)\n{\n  intensityQuantity =\n      (OSPIntensityQuantity)getParam<uint8_t>(\"intensityQuantity\", defaultIQ);\n}\n\nutility::Optional<void *> Light::getSecondIE()\n{\n  utility::Optional<void *> emptyOptional;\n  return emptyOptional;\n}\n\nOSPTYPEFOR_DEFINITION(Light *);\n\n} // namespace ospray\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2009", "-", "20", "21", "ĠIntel", "ĠCorporation", "Ċ", "//", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", "Ċ", "Ċ", "//", "Ġos", "pr", "ay", "Ċ", "#", "include", "Ġ\"", "Light", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "common", "/", "Ut", "il", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "lights", "/", "Light", "_", "isp", "c", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġos", "pr", "ay", "Ġ{", "Ċ", "Ċ", "static", "ĠFactory", "Map", "<", "Light", ">", "Ġg", "_", "lights", "Map", ";", "Ċ", "Ċ", "//", "ĠLight", "Ġdefinitions", "Ġ//", "////////////////////////////////", "////////////////", "////////", "Ċ", "Ċ", "Light", "::", "Light", "()", "Ċ", "{", "Ċ", "Ġ", "Ġmanaged", "Object", "Type", "Ġ=", "ĠO", "SP", "_", "L", "IGHT", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLight", "::", "commit", "()", "Ċ", "{", "Ċ", "Ġ", "Ġcolored", "Int", "ensity", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġget", "Param", "<", "vec", "3", "f", ">", "(\"", "color", "\",", "Ġvec", "3", "f", "(", "1", ".", "f", "))", "Ġ*", "Ġget", "Param", "<", "float", ">", "(\"", "intensity", "\",", "Ġ1", ".", "f", ");", "Ċ", "Ġ", "Ġis", "pc", "::", "Light", "_", "set", "(", "get", "IE", "(),", "Ġget", "Param", "<", "bool", ">", "(\"", "visible", "\",", "Ġtrue", "));", "Ċ", "}", "Ċ", "Ċ", "std", "::", "string", "ĠLight", "::", "to", "String", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ\"", "os", "pr", "ay", "::", "Light", "\";", "Ċ", "}", "Ċ", "Ċ", "Light", "Ġ*", "Light", "::", "create", "Instance", "(", "const", "Ġchar", "Ġ*", "type", ")", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġcreate", "Instance", "Helper", "(", "type", ",", "Ġg", "_", "lights", "Map", "[", "type", "]);", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLight", "::", "register", "Type", "(", "const", "Ġchar", "Ġ*", "type", ",", "ĠFactory", "F", "cn", "<", "Light", ">", "Ġf", ")", "Ċ", "{", "Ċ", "Ġ", "Ġg", "_", "lights", "Map", "[", "type", "]", "Ġ=", "Ġf", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLight", "::", "query", "Int", "ensity", "Quantity", "Type", "(", "const", "ĠO", "SP", "Int", "ensity", "Quantity", "Ġ&", "default", "IQ", ")", "Ċ", "{", "Ċ", "Ġ", "Ġintensity", "Quantity", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "OSP", "Int", "ensity", "Quantity", ")", "get", "Param", "<", "uint", "8", "_", "t", ">", "(\"", "intensity", "Quantity", "\",", "Ġdefault", "IQ", ");", "Ċ", "}", "Ċ", "Ċ", "ut", "ility", "::", "Optional", "<", "void", "Ġ*", ">", "ĠLight", "::", "get", "Second", "IE", "()", "Ċ", "{", "Ċ", "Ġ", "Ġutility", "::", "Optional", "<", "void", "Ġ*", ">", "Ġempty", "Optional", ";", "Ċ", "Ġ", "Ġreturn", "Ġempty", "Optional", ";", "Ċ", "}", "Ċ", "Ċ", "OSP", "TYPE", "FOR", "_", "DE", "FIN", "ITION", "(", "Light", "Ġ*", ");", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġos", "pr", "ay", "Ċ"], "dataflow_graph": [["g_lightsMap", 17, "comesFrom", ["g_lightsMap"], [0]], ["g_lightsMap", 22, "comesFrom", ["g_lightsMap"], [0]], ["f", 24, "comesFrom", ["f"], [21]], ["emptyOptional", 32, "comesFrom", ["emptyOptional"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::715", "code": "\n#ifdef _DEBUG\n\n#include \"AnimationSample.h\"\n\nAnimationSample::AnimationSample()\n{\n\tm_Animation = NNAnimation::Create( 2, L\"Image/ITEM_BIRD_A.png\",\n\t\tL\"Image/ITEM_BIRD_B.png\"\n\t\t);\n\n\t// ÃÑ 6Àå ¾Ö´Ï¸ÞÀÌ¼Ç\n\t// ¸Ç ¾ÕÀÌ ÅØ½ºÃÄ ¼ö, µÚ°¡ °æ·Î\n\n\tm_Animation->SetPosition( NNPoint(50.f,50.f) );\n\n\t// Çà·Ä ¿¬»ê ¸ÔÈû\n\t \n\tAddChild( m_Animation );\n}\nAnimationSample::~AnimationSample()\n{\n\n}\n\nvoid AnimationSample::Render()\n{\n\tNNScene::Render();\n}\nvoid AnimationSample::Update( float eTime )\n{\n\tNNScene::Update( eTime );\n}\n\n#endif", "code_tokens": ["Ċ", "#", "if", "def", "Ġ_", "DEBUG", "Ċ", "Ċ", "#", "include", "Ġ\"", "Animation", "Sample", ".", "h", "\"", "Ċ", "Ċ", "Animation", "Sample", "::", "Animation", "Sample", "()", "Ċ", "{", "Ċ", "ĉ", "m", "_", "Animation", "Ġ=", "ĠN", "N", "Animation", "::", "Create", "(", "Ġ2", ",", "ĠL", "\"", "Image", "/", "IT", "EM", "_", "BI", "RD", "_", "A", ".", "png", "\",", "Ċ", "ĉ", "ĉ", "L", "\"", "Image", "/", "IT", "EM", "_", "BI", "RD", "_", "B", ".", "png", "\"", "Ċ", "ĉ", "ĉ", ");", "ĊĊ", "ĉ", "//", "Ġ", "Ãĥ", "Ã", "ĳ", "Ġ6", "Ã", "Ģ", "Ã¥", "ĠÂ", "¾", "Ã", "ĸ", "Â´", "Ã", "ı", "Â", "¸", "Ã", "ŀ", "Ã", "Ģ", "Ã", "Į", "Â", "¼", "Ã", "ĩ", "Ċ", "ĉ", "//", "ĠÂ", "¸", "Ã", "ĩ", "ĠÂ", "¾", "Ã", "ķ", "Ã", "Ģ", "Ã", "Į", "ĠÃ", "ħ", "Ã", "ĺ", "Â½", "Âº", "Ãĥ", "Ã", "Ħ", "ĠÂ", "¼", "Ã¶", ",", "ĠÂµ", "Ã", "ļ", "Â°", "Â", "¡", "ĠÂ°", "Ã¦", "Â·", "Ã", "İ", "ĊĊ", "ĉ", "m", "_", "Animation", "->", "Set", "Position", "(", "ĠN", "N", "Point", "(", "50", ".", "f", ",", "50", ".", "f", ")", "Ġ);", "ĊĊ", "ĉ", "//", "ĠÃ", "ĩ", "Ãł", "Â·", "Ã", "Ħ", "ĠÂ", "¿", "Â", "¬", "Â»", "Ãª", "ĠÂ", "¸", "Ã", "Ķ", "Ã", "Ī", "Ã»", "Ċ", "ĉ", "Ġ", "Ċ", "ĉ", "Add", "Child", "(", "Ġm", "_", "Animation", "Ġ);", "Ċ", "}", "Ċ", "Animation", "Sample", "::", "~", "Animation", "Sample", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAnimation", "Sample", "::", "Render", "()", "Ċ", "{", "Ċ", "ĉ", "NN", "Scene", "::", "Render", "();", "Ċ", "}", "Ċ", "void", "ĠAnimation", "Sample", "::", "Update", "(", "Ġfloat", "Ġe", "Time", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "NN", "Scene", "::", "Update", "(", "Ġe", "Time", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "#", "endif"], "dataflow_graph": [["m_Animation", 4, "comesFrom", ["m_Animation"], [2]], ["m_Animation", 8, "comesFrom", ["m_Animation"], [2]], ["eTime", 15, "comesFrom", ["eTime"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::716", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/braket/model/UntagResourceRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n#include <aws/core/http/URI.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\n#include <utility>\n\nusing namespace Aws::Braket::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\nusing namespace Aws::Http;\n\nUntagResourceRequest::UntagResourceRequest() : \n    m_resourceArnHasBeenSet(false),\n    m_tagKeysHasBeenSet(false)\n{\n}\n\nAws::String UntagResourceRequest::SerializePayload() const\n{\n  return {};\n}\n\nvoid UntagResourceRequest::AddQueryStringParameters(URI& uri) const\n{\n    Aws::StringStream ss;\n    if(m_tagKeysHasBeenSet)\n    {\n      for(const auto& item : m_tagKeys)\n      {\n        ss << item;\n        uri.AddQueryStringParameter(\"tagKeys\", ss.str());\n        ss.str(\"\");\n      }\n    }\n\n}\n\n\n\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "bra", "ket", "/", "model", "/", "Unt", "ag", "Resource", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "J", "son", "Serial", "izer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "http", "/", "URI", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "st", "l", "/", "AW", "S", "String", "Stream", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Bra", "ket", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", "::", "J", "son", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Http", ";", "Ċ", "Ċ", "Unt", "ag", "Resource", "Request", "::", "Unt", "ag", "Resource", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "resource", "Ar", "n", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "tag", "Keys", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠUnt", "ag", "Resource", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ{", "};", "Ċ", "}", "Ċ", "Ċ", "void", "ĠUnt", "ag", "Resource", "Request", "::", "Add", "Query", "String", "Parameters", "(", "URI", "&", "Ġur", "i", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAw", "s", "::", "String", "Stream", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "_", "tag", "Keys", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "const", "Ġauto", "&", "Ġitem", "Ġ:", "Ġm", "_", "tag", "Keys", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġitem", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġur", "i", ".", "Add", "Query", "String", "Parameter", "(\"", "tag", "Keys", "\",", "Ġss", ".", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", ".", "str", "(\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["ss", 14, "comesFrom", ["ss"], [10]], ["ss", 18, "comesFrom", ["ss"], [10]], ["ss", 20, "comesFrom", ["ss"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::717", "code": "/*=============================================================================\n    Copyright (c) 2007 Tobias Schwinger\n\n    Use modification and distribution are subject to the Boost Software\n    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at\n    http://www.boost.org/LICENSE_1_0.txt).\n==============================================================================*/\n\n#include <boost/functional/factory.hpp>\n#include <boost/detail/lightweight_test.hpp>\n#include <boost/none_t.hpp>\n\n#include <memory>\n\nclass sum\n{\n    int val_sum;\n  public:\n    sum(int a, int b) : val_sum(a + b) { }\n\n    operator int() const { return this->val_sum; }\n};\n\nint main()\n{\n    int one = 1, two = 2;\n    {\n      sum* instance( boost::factory< sum*, boost::none_t >()(one,two) );\n      BOOST_TEST(*instance == 3);\n    }\n    {\n      std::auto_ptr<sum> instance(\n              boost::factory< std::auto_ptr<sum>, boost::none_t >()(one,two) );\n      BOOST_TEST(*instance == 3);\n    }\n    return boost::report_errors();\n}\n", "code_tokens": ["Ġ/*", "================================================================", "============", "=", "Ċ", "Ġ", "Ġ", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2007", "ĠTobias", "ĠSchw", "inger", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠUse", "Ġmodification", "Ġand", "Ġdistribution", "Ġare", "Ġsubject", "Ġto", "Ġthe", "ĠBoost", "ĠSoftware", "Ċ", "Ġ", "Ġ", "Ġ", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġaccompanying", "Ġfile", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ").", "Ċ", "================================================================", "============", "==", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "functional", "/", "f", "actory", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "detail", "/", "light", "weight", "_", "test", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "none", "_", "t", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "class", "Ġsum", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", "_", "sum", ";", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsum", "(", "int", "Ġa", ",", "Ġint", "Ġb", ")", "Ġ:", "Ġval", "_", "sum", "(", "a", "Ġ+", "Ġb", ")", "Ġ{", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġoperator", "Ġint", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġthis", "->", "val", "_", "sum", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġone", "Ġ=", "Ġ1", ",", "Ġtwo", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsum", "*", "Ġinstance", "(", "Ġboost", "::", "f", "actory", "<", "Ġsum", "*,", "Ġboost", "::", "none", "_", "t", "Ġ>", "()", "(", "one", ",", "two", ")", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "(*", "instance", "Ġ==", "Ġ3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "auto", "_", "ptr", "<", "sum", ">", "Ġinstance", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġboost", "::", "f", "actory", "<", "Ġstd", "::", "auto", "_", "ptr", "<", "sum", ">,", "Ġboost", "::", "none", "_", "t", "Ġ>", "()", "(", "one", ",", "two", ")", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "(*", "instance", "Ġ==", "Ġ3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġboost", "::", "report", "_", "errors", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 5, "comesFrom", ["a"], [2]], ["b", 6, "comesFrom", ["b"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::718", "code": "﻿/*\n* Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\").\n* You may not use this file except in compliance with the License.\n* A copy of the License is located at\n*\n*  http://aws.amazon.com/apache2.0\n*\n* or in the \"license\" file accompanying this file. This file is distributed\n* on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n* express or implied. See the License for the specific language governing\n* permissions and limitations under the License.\n*/\n\n#include <aws/elasticache/model/ListTagsForResourceRequest.h>\n#include <aws/core/utils/StringUtils.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\nusing namespace Aws::ElastiCache::Model;\nusing namespace Aws::Utils;\n\nListTagsForResourceRequest::ListTagsForResourceRequest() : \n    m_resourceNameHasBeenSet(false)\n{\n}\n\nAws::String ListTagsForResourceRequest::SerializePayload() const\n{\n  Aws::StringStream ss;\n  ss << \"Action=ListTagsForResource&\";\n  if(m_resourceNameHasBeenSet)\n  {\n    ss << \"ResourceName=\" << StringUtils::URLEncode(m_resourceName.c_str()) << \"&\";\n  }\n\n  ss << \"Version=2015-02-02\";\n  return ss.str();\n}\n\n\nvoid  ListTagsForResourceRequest::DumpBodyToUrl(Aws::Http::URI& uri ) const\n{\n  uri.SetQueryString(SerializePayload());\n}\n", "code_tokens": ["Ġï", "»", "¿", "/*", "Ċ", "*", "ĠCopyright", "Ġ2010", "-", "2017", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "*", "Ċ", "*", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\").", "Ċ", "*", "ĠYou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "*", "ĠA", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġis", "Ġlocated", "Ġat", "Ċ", "*", "Ċ", "*", "Ġ", "Ġhttp", "://", "aws", ".", "amazon", ".", "com", "/", "apache", "2", ".", "0", "Ċ", "*", "Ċ", "*", "Ġor", "Ġin", "Ġthe", "Ġ\"", "license", "\"", "Ġfile", "Ġaccompanying", "Ġthis", "Ġfile", ".", "ĠThis", "Ġfile", "Ġis", "Ġdistributed", "Ċ", "*", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ċ", "*", "Ġexpress", "Ġor", "Ġimplied", ".", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ċ", "*", "Ġpermissions", "Ġand", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "el", "astic", "ache", "/", "model", "/", "List", "Tags", "For", "Resource", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "String", "Ut", "ils", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "st", "l", "/", "AW", "S", "String", "Stream", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "El", "ast", "i", "Cache", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "Ċ", "List", "Tags", "For", "Resource", "Request", "::", "List", "Tags", "For", "Resource", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "resource", "Name", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠList", "Tags", "For", "Resource", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "ĠAw", "s", "::", "String", "Stream", "Ġss", ";", "Ċ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Action", "=", "List", "Tags", "For", "Resource", "&", "\";", "Ċ", "Ġ", "Ġif", "(", "m", "_", "resource", "Name", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Resource", "Name", "=\"", "Ġ<<", "ĠString", "Ut", "ils", "::", "UR", "LE", "n", "code", "(", "m", "_", "resource", "Name", ".", "c", "_", "str", "())", "Ġ<<", "Ġ\"", "&", "\";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "Version", "=", "2015", "-", "02", "-", "02", "\";", "Ċ", "Ġ", "Ġreturn", "Ġss", ".", "str", "();", "Ċ", "}", "ĊĊ", "Ċ", "void", "Ġ", "ĠList", "Tags", "For", "Resource", "Request", "::", "D", "ump", "Body", "To", "Url", "(", "A", "ws", "::", "Http", "::", "URI", "&", "Ġur", "i", "Ġ)", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġur", "i", ".", "Set", "Query", "String", "(", "Serial", "ize", "Pay", "load", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["ss", 6, "comesFrom", ["ss"], [5]], ["ss", 8, "comesFrom", ["ss"], [5]], ["ss", 12, "comesFrom", ["ss"], [5]], ["ss", 13, "comesFrom", ["ss"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::719", "code": "/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set ts=8 sts=2 et sw=2 tw=80: */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* Implementations of FloatingPoint functions */\n\n#include \"mozilla/FloatingPoint.h\"\n\nnamespace mozilla {\n\nbool\nIsFloat32Representable(double aFloat32)\n{\n  float asFloat = static_cast<float>(aFloat32);\n  double floatAsDouble = static_cast<double>(asFloat);\n  return floatAsDouble == aFloat32;\n}\n\n} /* namespace mozilla */\n", "code_tokens": ["Ġ/*", "Ġ-", "*", "-", "ĠMode", ":", "ĠC", "++;", "Ġtab", "-", "width", ":", "Ġ8", ";", "Ġindent", "-", "tab", "s", "-", "mode", ":", "Ġnil", ";", "Ġc", "-", "basic", "-", "offset", ":", "Ġ2", "Ġ-", "*", "-", "Ġ*/", "Ċ", "/*", "Ġvim", ":", "Ġset", "Ġts", "=", "8", "Ġsts", "=", "2", "Ġet", "Ġsw", "=", "2", "Ġtw", "=", "80", ":", "Ġ*/", "Ċ", "/*", "ĠThis", "ĠSource", "ĠCode", "ĠForm", "Ġis", "Ġsubject", "Ġto", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠMozilla", "ĠPublic", "Ċ", "Ġ*", "ĠLicense", ",", "Ġv", ".", "Ġ2", ".", "0", ".", "ĠIf", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠMP", "L", "Ġwas", "Ġnot", "Ġdistributed", "Ġwith", "Ġthis", "Ċ", "Ġ*", "Ġfile", ",", "ĠYou", "Ġcan", "Ġobtain", "Ġone", "Ġat", "Ġhttp", "://", "mo", "zilla", ".", "org", "/", "M", "PL", "/", "2", ".", "0", "/.", "Ġ*/", "Ċ", "Ċ", "/*", "ĠImplement", "ations", "Ġof", "ĠFloating", "Point", "Ġfunctions", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "mo", "zilla", "/", "Flo", "ating", "Point", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġmo", "zilla", "Ġ{", "Ċ", "Ċ", "bool", "Ċ", "Is", "Float", "32", "Represent", "able", "(", "double", "Ġa", "Float", "32", ")", "Ċ", "{", "Ċ", "Ġ", "Ġfloat", "Ġas", "Float", "Ġ=", "Ġstatic", "_", "cast", "<", "float", ">(", "a", "Float", "32", ");", "Ċ", "Ġ", "Ġdouble", "Ġfloat", "As", "Double", "Ġ=", "Ġstatic", "_", "cast", "<", "double", ">(", "as", "Float", ");", "Ċ", "Ġ", "Ġreturn", "Ġfloat", "As", "Double", "Ġ==", "Ġa", "Float", "32", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ/*", "Ġnamespace", "Ġmo", "zilla", "Ġ*/", "Ċ"], "dataflow_graph": [["aFloat32", 4, "comesFrom", ["aFloat32"], [1]], ["aFloat32", 9, "comesFrom", ["aFloat32"], [1]], ["asFloat", 7, "comesFrom", ["asFloat"], [2]], ["floatAsDouble", 8, "comesFrom", ["floatAsDouble"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::720", "code": "// clang-format off\n/* ----------------------------------------------------------------------\n   LAMMPS - Large-scale Atomic/Molecular Massively Parallel Simulator\n   https://www.lammps.org/, Sandia National Laboratories\n   Steve Plimpton, sjplimp@sandia.gov\n\n   Copyright (2003) Sandia Corporation.  Under the terms of Contract\n   DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government retains\n   certain rights in this software.  This software is distributed under\n   the GNU General Public License.\n\n   See the README file in the top-level LAMMPS directory.\n------------------------------------------------------------------------- */\n\n#include \"nstencil_half_bin_2d_tri.h\"\n\nusing namespace LAMMPS_NS;\n\n/* ---------------------------------------------------------------------- */\n\nNStencilHalfBin2dTri::NStencilHalfBin2dTri(LAMMPS *lmp) :\n  NStencil(lmp) {}\n\n/* ----------------------------------------------------------------------\n   create stencil based on bin geometry and cutoff\n------------------------------------------------------------------------- */\n\nvoid NStencilHalfBin2dTri::create()\n{\n  int i,j;\n\n  nstencil = 0;\n\n  for (j = 0; j <= sy; j++)\n    for (i = -sx; i <= sx; i++)\n      if (bin_distance(i,j,0) < cutneighmaxsq)\n        stencil[nstencil++] = j*mbinx + i;\n}\n", "code_tokens": ["Ġ//", "Ġcl", "ang", "-", "format", "Ġoff", "Ċ", "/*", "Ġ----------------------------------------------------------------", "------", "Ċ", "Ġ", "Ġ", "ĠL", "AM", "M", "PS", "Ġ-", "ĠLarge", "-", "scale", "ĠAtomic", "/", "M", "ole", "cular", "ĠMass", "ively", "ĠParallel", "ĠSimulator", "Ċ", "Ġ", "Ġ", "Ġhttps", "://", "www", ".", "lamm", "ps", ".", "org", "/,", "ĠSand", "ia", "ĠNational", "ĠLaboratories", "Ċ", "Ġ", "Ġ", "ĠSteve", "ĠPl", "im", "pton", ",", "Ġs", "j", "pl", "imp", "@", "sand", "ia", ".", "gov", "ĊĊ", "Ġ", "Ġ", "ĠCopyright", "Ġ(", "2003", ")", "ĠSand", "ia", "ĠCorporation", ".", "Ġ", "ĠUnder", "Ġthe", "Ġterms", "Ġof", "ĠContract", "Ċ", "Ġ", "Ġ", "ĠDE", "-", "AC", "04", "-", "94", "AL", "85", "000", "Ġwith", "ĠSand", "ia", "ĠCorporation", ",", "Ġthe", "ĠU", ".", "S", ".", "ĠGovernment", "Ġretains", "Ċ", "Ġ", "Ġ", "Ġcertain", "Ġrights", "Ġin", "Ġthis", "Ġsoftware", ".", "Ġ", "ĠThis", "Ġsoftware", "Ġis", "Ġdistributed", "Ġunder", "Ċ", "Ġ", "Ġ", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", ".", "ĊĊ", "Ġ", "Ġ", "ĠSee", "Ġthe", "ĠREAD", "ME", "Ġfile", "Ġin", "Ġthe", "Ġtop", "-", "level", "ĠL", "AM", "M", "PS", "Ġdirectory", ".", "Ċ", "----------------------------------------------------------------", "---------", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "n", "sten", "cil", "_", "half", "_", "bin", "_", "2", "d", "_", "tri", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠL", "AM", "M", "PS", "_", "NS", ";", "Ċ", "Ċ", "/*", "Ġ----------------------------------------------------------------", "------", "Ġ*/", "Ċ", "Ċ", "N", "St", "en", "cil", "Half", "B", "in", "2", "d", "Tri", "::", "N", "St", "en", "cil", "Half", "B", "in", "2", "d", "Tri", "(", "L", "AM", "M", "PS", "Ġ*", "l", "mp", ")", "Ġ:", "Ċ", "Ġ", "ĠN", "St", "en", "cil", "(", "l", "mp", ")", "Ġ{}", "Ċ", "Ċ", "/*", "Ġ----------------------------------------------------------------", "------", "Ċ", "Ġ", "Ġ", "Ġcreate", "Ġsten", "cil", "Ġbased", "Ġon", "Ġbin", "Ġgeometry", "Ġand", "Ġcutoff", "Ċ", "----------------------------------------------------------------", "---------", "Ġ*/", "Ċ", "Ċ", "void", "ĠN", "St", "en", "cil", "Half", "B", "in", "2", "d", "Tri", "::", "create", "()", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġi", ",", "j", ";", "ĊĊ", "Ġ", "Ġn", "sten", "cil", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "j", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<=", "Ġsy", ";", "Ġj", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ-", "s", "x", ";", "Ġi", "Ġ<=", "Ġs", "x", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "bin", "_", "distance", "(", "i", ",", "j", ",", "0", ")", "Ġ<", "Ġcut", "ne", "igh", "max", "sq", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsten", "cil", "[", "n", "sten", "cil", "++", "]", "Ġ=", "Ġj", "*", "mb", "inx", "Ġ+", "Ġi", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["j", 10, "comesFrom", ["j"], [9]], ["j", 12, "comesFrom", ["j"], [9]], ["j", 20, "comesFrom", ["j"], [9]], ["j", 24, "comesFrom", ["j"], [9]], ["i", 15, "comesFrom", ["i"], [13]], ["i", 17, "comesFrom", ["i"], [13]], ["i", 19, "comesFrom", ["i"], [13]], ["i", 26, "comesFrom", ["i"], [13]], ["nstencil", 23, "comesFrom", ["nstencil"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::721", "code": "/*\n *      Copyright (C) 2005-2014 Team XBMC\n *      http://kodi.tv\n *\n *  This Program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2, or (at your option)\n *  any later version.\n *\n *  This Program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with XBMC; see the file COPYING.  If not, see\n *  <http://www.gnu.org/licenses/>.\n *\n */\n\n#include \"BlurayFile.h\"\n#include \"URL.h\"\n#include <assert.h>\n\nnamespace XFILE\n{\n\n  CBlurayFile::CBlurayFile(void)\n    : COverrideFile(false)\n  { }\n\n  CBlurayFile::~CBlurayFile(void) = default;\n\n  std::string CBlurayFile::TranslatePath(const CURL& url)\n  {\n    assert(url.IsProtocol(\"bluray\"));\n\n    std::string host = url.GetHostName();\n    std::string filename = url.GetFileName();\n    if (host.empty() || filename.empty())\n      return \"\";\n\n    return host.append(filename);\n  }\n} /* namespace XFILE */\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠCopyright", "Ġ(", "C", ")", "Ġ2005", "-", "2014", "ĠTeam", "ĠX", "B", "MC", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "k", "odi", ".", "tv", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "ĠProgram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "Ġ*", "Ġ", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠThis", "ĠProgram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġ", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "Ġ", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "ĠSee", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġ", "Ġalong", "Ġwith", "ĠX", "B", "MC", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ċ", "Ġ*", "Ġ", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Bl", "ur", "ay", "File", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "URL", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "ĠX", "FILE", "Ċ", "{", "ĊĊ", "Ġ", "ĠC", "Bl", "ur", "ay", "File", "::", "C", "Bl", "ur", "ay", "File", "(", "void", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠC", "Override", "File", "(", "false", ")", "Ċ", "Ġ", "Ġ{", "Ġ}", "ĊĊ", "Ġ", "ĠC", "Bl", "ur", "ay", "File", "::", "~", "C", "Bl", "ur", "ay", "File", "(", "void", ")", "Ġ=", "Ġdefault", ";", "ĊĊ", "Ġ", "Ġstd", "::", "string", "ĠC", "Bl", "ur", "ay", "File", "::", "Trans", "late", "Path", "(", "const", "ĠC", "URL", "&", "Ġurl", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "url", ".", "Is", "Prot", "ocol", "(\"", "bl", "ur", "ay", "\")", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġhost", "Ġ=", "Ġurl", ".", "Get", "Host", "Name", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġfilename", "Ġ=", "Ġurl", ".", "Get", "File", "Name", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "host", ".", "empty", "()", "Ġ||", "Ġfilename", ".", "empty", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ\"", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġhost", ".", "append", "(", "filename", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ġ/*", "Ġnamespace", "ĠX", "FILE", "Ġ*/", "Ċ"], "dataflow_graph": [["host", 14, "comesFrom", ["host"], [8]], ["host", 18, "comesFrom", ["host"], [8]], ["filename", 16, "comesFrom", ["filename"], [11]], ["filename", 20, "comesFrom", ["filename"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::722", "code": "// ---------------------------------------------------------------------\n//\n// Copyright (C) 2008 - 2014 by the deal.II authors\n//\n// This file is part of the deal.II library.\n//\n// The deal.II library is free software; you can use it, redistribute\n// it, and/or modify it under the terms of the GNU Lesser General\n// Public License as published by the Free Software Foundation; either\n// version 2.1 of the License, or (at your option) any later version.\n// The full text of the license can be found in the file LICENSE at\n// the top level of the deal.II distribution.\n//\n// ---------------------------------------------------------------------\n\n\n\n// check ChunkSparsityPattern::matrix_position\n\n#include \"sparsity_pattern_common.h\"\n\nint main ()\n{\n  std::ofstream logfile(\"output\");\n  logfile.setf(std::ios::fixed);\n  deallog << std::setprecision(3);\n  deallog.attach(logfile);\n  deallog.depth_console(0);\n  deallog.threshold_double(1.e-10);\n\n  const unsigned int chunk_sizes[] = { 1, 2, 4, 5, 7 };\n  for (unsigned int i=0; i<sizeof(chunk_sizes)/sizeof(chunk_sizes[0]); ++i)\n    {\n      chunk_size = chunk_sizes[i];\n      matrix_position<ChunkSparsityPattern> ();\n    }\n}\n\n\n\n", "code_tokens": ["Ġ//", "Ġ----------------------------------------------------------------", "-----", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "Ġ-", "Ġ2014", "Ġby", "Ġthe", "Ġdeal", ".", "II", "Ġauthors", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġlibrary", ".", "Ċ", "//", "Ċ", "//", "ĠThe", "Ġdeal", ".", "II", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġuse", "Ġit", ",", "Ġredist", "ribute", "Ċ", "//", "Ġit", ",", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "Ċ", "//", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "//", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "ĠThe", "Ġfull", "Ġtext", "Ġof", "Ġthe", "Ġlicense", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "ĠLIC", "ENSE", "Ġat", "Ċ", "//", "Ġthe", "Ġtop", "Ġlevel", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ----------------------------------------------------------------", "-----", "ĊĊ", "Ċ", "Ċ", "//", "Ġcheck", "ĠCh", "unk", "Sp", "arsity", "Pattern", "::", "mat", "rix", "_", "position", "Ċ", "Ċ", "#", "include", "Ġ\"", "sp", "arsity", "_", "pattern", "_", "common", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "of", "stream", "Ġlog", "file", "(\"", "output", "\");", "Ċ", "Ġ", "Ġlog", "file", ".", "set", "f", "(", "std", "::", "ios", "::", "fixed", ");", "Ċ", "Ġ", "Ġde", "all", "og", "Ġ<<", "Ġstd", "::", "set", "pre", "cision", "(", "3", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "attach", "(", "log", "file", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "depth", "_", "console", "(", "0", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "th", "reshold", "_", "double", "(", "1", ".", "e", "-", "10", ");", "ĊĊ", "Ġ", "Ġconst", "Ġunsigned", "Ġint", "Ġchunk", "_", "s", "izes", "[]", "Ġ=", "Ġ{", "Ġ1", ",", "Ġ2", ",", "Ġ4", ",", "Ġ5", ",", "Ġ7", "Ġ};", "Ċ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġint", "Ġi", "=", "0", ";", "Ġi", "<", "size", "of", "(", "ch", "unk", "_", "s", "izes", ")/", "size", "of", "(", "ch", "unk", "_", "s", "izes", "[", "0", "]);", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchunk", "_", "size", "Ġ=", "Ġchunk", "_", "s", "izes", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmatrix", "_", "position", "<", "Ch", "unk", "Sp", "arsity", "Pattern", ">", "Ġ();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["logfile", 2, "comesFrom", ["logfile"], [1]], ["logfile", 9, "comesFrom", ["logfile"], [1]], ["i", 16, "comesFrom", ["i"], [15]], ["i", 19, "comesFrom", ["i"], [15]], ["i", 22, "comesFrom", ["i"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::723", "code": "/// \\file\n/// \\ingroup tutorial_FITS\n/// \\notebook\n/// Open a FITS file whose primary array represents\n/// a spectrum table (flux vs wavelength) and dump its columns\n///\n/// \\macro_code\n/// \\macro_output\n///\n/// \\author Claudi Martinez\n\nvoid FITS_tutorial6()\n{\n   // We open a table from a FITS file\n   // and dump its columns.\n\n   TString dir = gROOT->GetTutorialDir();\n\n   //Open the table\n   TFITSHDU hdu(dir + \"/fitsio/sample4.fits[1]\");\n\n   // Show columns\n   const auto nColumns = hdu.GetTabNColumns();\n   printf(\"The table has %d columns:\\n\", nColumns);\n   for (auto i : ROOT::TSeqI(nColumns)) {\n      printf(\" - Column %d: %s\\n\", i, hdu.GetColumnName(i).Data());\n   }\n}\n", "code_tokens": ["Ġ///", "Ġ\\", "file", "Ċ", "///", "Ġ\\", "ing", "roup", "Ġtutorial", "_", "F", "ITS", "Ċ", "///", "Ġ\\", "note", "book", "Ċ", "///", "ĠOpen", "Ġa", "ĠF", "ITS", "Ġfile", "Ġwhose", "Ġprimary", "Ġarray", "Ġrepresents", "Ċ", "///", "Ġa", "Ġspectrum", "Ġtable", "Ġ(", "f", "lux", "Ġvs", "Ġwavelength", ")", "Ġand", "Ġdump", "Ġits", "Ġcolumns", "Ċ", "///", "Ċ", "///", "Ġ\\", "mac", "ro", "_", "code", "Ċ", "///", "Ġ\\", "mac", "ro", "_", "output", "Ċ", "///", "Ċ", "///", "Ġ\\", "author", "ĠCl", "audi", "ĠMartinez", "Ċ", "Ċ", "void", "ĠF", "ITS", "_", "t", "utorial", "6", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ//", "ĠWe", "Ġopen", "Ġa", "Ġtable", "Ġfrom", "Ġa", "ĠF", "ITS", "Ġfile", "Ċ", "Ġ", "Ġ", "Ġ//", "Ġand", "Ġdump", "Ġits", "Ġcolumns", ".", "ĊĊ", "Ġ", "Ġ", "ĠT", "String", "Ġdir", "Ġ=", "Ġg", "RO", "OT", "->", "Get", "T", "utorial", "Dir", "();", "ĊĊ", "Ġ", "Ġ", "Ġ//", "Open", "Ġthe", "Ġtable", "Ċ", "Ġ", "Ġ", "ĠTF", "IT", "SH", "D", "U", "Ġh", "du", "(", "dir", "Ġ+", "Ġ\"/", "fits", "io", "/", "sample", "4", ".", "fits", "[", "1", "]", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ//", "ĠShow", "Ġcolumns", "Ċ", "Ġ", "Ġ", "Ġconst", "Ġauto", "Ġn", "Column", "s", "Ġ=", "Ġh", "du", ".", "Get", "Tab", "N", "Column", "s", "();", "Ċ", "Ġ", "Ġ", "Ġprintf", "(\"", "The", "Ġtable", "Ġhas", "Ġ%", "d", "Ġcolumns", ":\\", "n", "\",", "Ġn", "Column", "s", ");", "Ċ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "Ġi", "Ġ:", "ĠRO", "OT", "::", "T", "Se", "q", "I", "(", "n", "Column", "s", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Ġ-", "ĠColumn", "Ġ%", "d", ":", "Ġ%", "s", "\\", "n", "\",", "Ġi", ",", "Ġh", "du", ".", "Get", "Column", "Name", "(", "i", ").", "Data", "());", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["dir", 5, "comesFrom", ["dir"], [1]], ["hdu", 7, "comesFrom", ["hdu"], [4]], ["hdu", 16, "comesFrom", ["hdu"], [4]], ["nColumns", 10, "comesFrom", ["nColumns"], [6]], ["nColumns", 13, "comesFrom", ["nColumns"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::724", "code": "// { dg-do compile }\n// { dg-options \"-O -fdump-tree-optimized\" }\n\nstruct pf\n{\n  inline pf(int(*x)(int)) : x(x) {}\n\n  inline int operator()(int a) const\n    {\n      return x(a);\n    }\n\n  int (*x)(int);\n};\n\ninline int g(int x) { return x/x - 1; }\n\nint main(int argc, char* argv[])\n{\n  pf f(g);\n  return f(3);\n}\n\n// { dg-final { scan-tree-dump \"return 0\" \"optimized\" } }\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"-", "O", "Ġ-", "fd", "ump", "-", "tree", "-", "optim", "ized", "\"", "Ġ}", "Ċ", "Ċ", "struct", "Ġp", "f", "Ċ", "{", "Ċ", "Ġ", "Ġinline", "Ġp", "f", "(", "int", "(*", "x", ")(", "int", "))", "Ġ:", "Ġx", "(", "x", ")", "Ġ{}", "ĊĊ", "Ġ", "Ġinline", "Ġint", "Ġoperator", "()", "(", "int", "Ġa", ")", "Ġconst", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġx", "(", "a", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġint", "Ġ(*", "x", ")(", "int", ");", "Ċ", "};", "Ċ", "Ċ", "inline", "Ġint", "Ġg", "(", "int", "Ġx", ")", "Ġ{", "Ġreturn", "Ġx", "/", "x", "Ġ-", "Ġ1", ";", "Ġ}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġp", "f", "Ġf", "(", "g", ");", "Ċ", "Ġ", "Ġreturn", "Ġf", "(", "3", ");", "Ċ", "}", "Ċ", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "final", "Ġ{", "Ġscan", "-", "tree", "-", "dump", "Ġ\"", "return", "Ġ0", "\"", "Ġ\"", "optim", "ized", "\"", "Ġ}", "Ġ}", "Ċ"], "dataflow_graph": [["x", 10, "comesFrom", ["x"], [9]], ["x", 11, "comesFrom", ["x"], [9]], ["a", 6, "comesFrom", ["a"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::725", "code": "// Copyright 2013 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"content/renderer/resizing_mode_selector.h\"\n\n#include \"content/common/view_messages.h\"\n#include \"content/renderer/render_thread_impl.h\"\n#include \"content/renderer/render_widget.h\"\n#include \"third_party/WebKit/public/platform/WebScreenInfo.h\"\n\nnamespace content {\n\nResizingModeSelector::ResizingModeSelector() : is_synchronous_mode_(false) {}\n\nbool ResizingModeSelector::NeverUsesSynchronousResize() const {\n  return !RenderThreadImpl::current() ||  // can be NULL when in unit tests\n         !RenderThreadImpl::current()->layout_test_mode();\n}\n\nbool ResizingModeSelector::ShouldAbortOnResize(\n    RenderWidget* widget,\n    const ViewMsg_Resize_Params& params) {\n  return is_synchronous_mode_ &&\n      params.is_fullscreen == widget->is_fullscreen() &&\n      params.screen_info.deviceScaleFactor ==\n        widget->screenInfo().deviceScaleFactor;\n}\n\nvoid ResizingModeSelector::set_is_synchronous_mode(bool mode) {\n  is_synchronous_mode_ = mode;\n}\n\nbool ResizingModeSelector::is_synchronous_mode() const {\n  return is_synchronous_mode_;\n}\n\n}  // namespace content\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2013", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "content", "/", "rend", "erer", "/", "res", "izing", "_", "mode", "_", "select", "or", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "content", "/", "common", "/", "view", "_", "mess", "ages", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "content", "/", "rend", "erer", "/", "render", "_", "thread", "_", "impl", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "content", "/", "rend", "erer", "/", "render", "_", "widget", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "third", "_", "party", "/", "Web", "Kit", "/", "public", "/", "platform", "/", "Web", "Screen", "Info", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġcontent", "Ġ{", "Ċ", "Ċ", "Res", "izing", "Mode", "Select", "or", "::", "Res", "izing", "Mode", "Select", "or", "()", "Ġ:", "Ġis", "_", "syn", "chron", "ous", "_", "mode", "_(", "false", ")", "Ġ{}", "Ċ", "Ċ", "bool", "ĠRes", "izing", "Mode", "Select", "or", "::", "Never", "Us", "es", "S", "ynchronous", "Res", "ize", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġ!", "Render", "Thread", "Impl", "::", "current", "()", "Ġ||", "Ġ", "Ġ//", "Ġcan", "Ġbe", "ĠNULL", "Ġwhen", "Ġin", "Ġunit", "Ġtests", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ!", "Render", "Thread", "Impl", "::", "current", "()", "->", "layout", "_", "test", "_", "mode", "();", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠRes", "izing", "Mode", "Select", "or", "::", "Should", "Ab", "ort", "On", "Res", "ize", "(", "Ċ", "Ġ", "Ġ", "Ġ", "ĠRender", "Widget", "*", "Ġwidget", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠView", "Msg", "_", "Res", "ize", "_", "Par", "ams", "&", "Ġparams", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġis", "_", "syn", "chron", "ous", "_", "mode", "_", "Ġ&&", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "is", "_", "full", "screen", "Ġ==", "Ġwidget", "->", "is", "_", "full", "screen", "()", "Ġ&&", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "screen", "_", "info", ".", "device", "Scale", "Factor", "Ġ==", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwidget", "->", "screen", "Info", "().", "device", "Scale", "Factor", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠRes", "izing", "Mode", "Select", "or", "::", "set", "_", "is", "_", "syn", "chron", "ous", "_", "mode", "(", "bool", "Ġmode", ")", "Ġ{", "Ċ", "Ġ", "Ġis", "_", "syn", "chron", "ous", "_", "mode", "_", "Ġ=", "Ġmode", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠRes", "izing", "Mode", "Select", "or", "::", "is", "_", "syn", "chron", "ous", "_", "mode", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġis", "_", "syn", "chron", "ous", "_", "mode", "_", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġcontent", "Ċ"], "dataflow_graph": [["is_synchronous_mode_", 25, "comesFrom", ["is_synchronous_mode_"], [22]], ["mode", 23, "comesFrom", ["mode"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::726", "code": "#include \"AlignedObject.h\"\n\n#include <new>\n\n#if !defined(_MSC_VER)\n#include <cstdlib>\n\n#define _aligned_malloc(size, alignment) aligned_alloc((alignment), (size))\n#define _aligned_free(ptr) free(ptr)\n#endif\n\nvoid* AlignedObject::operator new(size_t size)\n{\n\tauto storage = _aligned_malloc(size, 16);\n\tif (storage == nullptr)\n\t\tthrow std::bad_alloc();\n\n\treturn storage;\n}\n\nvoid* AlignedObject::operator new[](size_t size)\n{\n\tauto storage = _aligned_malloc(size, 16);\n\tif (storage == nullptr)\n\t\tthrow std::bad_alloc();\n\n\treturn storage;\n}\n\nvoid AlignedObject::operator delete(void* data)\n{\n\t_aligned_free(data);\n}\n\nvoid AlignedObject::operator delete[](void* data)\n{\n\t_aligned_free(data);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Al", "igned", "Object", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "new", ">", "Ċ", "Ċ", "#", "if", "Ġ!", "defined", "(_", "MS", "C", "_", "VER", ")", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "Ċ", "#", "define", "Ġ_", "aligned", "_", "m", "alloc", "(", "size", ",", "Ġalignment", ")", "Ġaligned", "_", "alloc", "((", "al", "ignment", "),", "Ġ(", "size", "))", "Ċ", "#", "define", "Ġ_", "aligned", "_", "free", "(", "ptr", ")", "Ġfree", "(", "ptr", ")", "Ċ", "#", "endif", "Ċ", "Ċ", "void", "*", "ĠAl", "igned", "Object", "::", "operator", "Ġnew", "(", "size", "_", "t", "Ġsize", ")", "Ċ", "{", "Ċ", "ĉ", "auto", "Ġstorage", "Ġ=", "Ġ_", "aligned", "_", "m", "alloc", "(", "size", ",", "Ġ16", ");", "Ċ", "ĉ", "if", "Ġ(", "storage", "Ġ==", "Ġnull", "ptr", ")", "Ċ", "ĉ", "ĉ", "throw", "Ġstd", "::", "bad", "_", "alloc", "();", "ĊĊ", "ĉ", "return", "Ġstorage", ";", "Ċ", "}", "Ċ", "Ċ", "void", "*", "ĠAl", "igned", "Object", "::", "operator", "Ġnew", "[", "](", "size", "_", "t", "Ġsize", ")", "Ċ", "{", "Ċ", "ĉ", "auto", "Ġstorage", "Ġ=", "Ġ_", "aligned", "_", "m", "alloc", "(", "size", ",", "Ġ16", ");", "Ċ", "ĉ", "if", "Ġ(", "storage", "Ġ==", "Ġnull", "ptr", ")", "Ċ", "ĉ", "ĉ", "throw", "Ġstd", "::", "bad", "_", "alloc", "();", "ĊĊ", "ĉ", "return", "Ġstorage", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAl", "igned", "Object", "::", "operator", "Ġdelete", "(", "void", "*", "Ġdata", ")", "Ċ", "{", "Ċ", "ĉ", "_", "aligned", "_", "free", "(", "data", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAl", "igned", "Object", "::", "operator", "Ġdelete", "[", "](", "void", "*", "Ġdata", ")", "Ċ", "{", "Ċ", "ĉ", "_", "aligned", "_", "free", "(", "data", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["size", 9, "comesFrom", ["size"], [6]], ["size", 16, "comesFrom", ["size"], [13]], ["storage", 10, "comesFrom", ["storage"], [7]], ["storage", 12, "comesFrom", ["storage"], [7]], ["storage", 17, "comesFrom", ["storage"], [14]], ["storage", 19, "comesFrom", ["storage"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::727", "code": "#pragma once\n\n#include <boost/optional/optional.hpp>\n\n#include <utility>\n\ntemplate< typename A, typename F >\nauto optional_apply( A&& val, F func ) -> decltype( boost::make_optional( func( *std::forward< A >( val ) ) ) )\n{\n  if( val )\n  {\n    return boost::make_optional( func( *std::forward< A >( val ) ) );\n  }\n  else\n  {\n    return{};\n  }\n}\n", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "optional", "/", "optional", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "template", "<", "Ġtyp", "ename", "ĠA", ",", "Ġtyp", "ename", "ĠF", "Ġ>", "Ċ", "auto", "Ġoptional", "_", "apply", "(", "ĠA", "&&", "Ġval", ",", "ĠF", "Ġfunc", "Ġ)", "Ġ->", "Ġdecl", "type", "(", "Ġboost", "::", "make", "_", "optional", "(", "Ġfunc", "(", "Ġ*", "std", "::", "forward", "<", "ĠA", "Ġ>", "(", "Ġval", "Ġ)", "Ġ)", "Ġ)", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġif", "(", "Ġval", "Ġ)", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġboost", "::", "make", "_", "optional", "(", "Ġfunc", "(", "Ġ*", "std", "::", "forward", "<", "ĠA", "Ġ>", "(", "Ġval", "Ġ)", "Ġ)", "Ġ);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "{", "};", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["func", 4, "comesFrom", ["func"], [2]], ["func", 9, "comesFrom", ["func"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::728", "code": "#include \"Nebuleuse.h\"\n\nnamespace Neb{\n\tint Nebuleuse::GetUserStats(std::string name){\n\t\tfor (size_t i = 0; i < _UserStats.size(); i++) {\n\t\t\tif (_UserStats[i].Name == name)\n\t\t\t\treturn _UserStats[i].Value;\n\t\t}\n\t\treturn 0;\n\t}\n\tvoid Nebuleuse::SetUserStats(std::string name, int value){\n\t\tfor (size_t i = 0; i < _UserStats.size(); i++) {\n\t\t\tif (_UserStats[i].Name == name){\n\t\t\t\tif(_UserStats[i].Value != value){\n\t\t\t\t\t_UserStats[i].Value = value;\n\t\t\t\t\tSendStats();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tvoid Nebuleuse::SendStats(){\n\t\tif (IsUnavailable())\n\t\t\treturn;\n\n\t\tstd::string msg = Parse_CreateChangedStatsJson();\n\t\tTalk_SendStatsUpdate(msg);\n\t}\n\n\tvoid Nebuleuse::AddComplexStat(ComplexStat stat){\n\t\t_CStats.push_back(stat);\n\t}\n\n\tvoid Nebuleuse::SendComplexStats(){\n\t\tif (IsUnavailable())\n\t\t\treturn;\n\n\t\tstd::string Msg;\n\t\tMsg = Parse_CreateComplexStatJson();\n\t\tTalk_SendComplexStats(Msg);\n\t}\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "N", "eb", "ule", "use", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠNeb", "{", "Ċ", "ĉ", "int", "ĠNeb", "ule", "use", "::", "Get", "User", "Stats", "(", "std", "::", "string", "Ġname", "){", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ_", "User", "Stats", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(_", "User", "Stats", "[", "i", "].", "Name", "Ġ==", "Ġname", ")", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "return", "Ġ_", "User", "Stats", "[", "i", "].", "Value", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "void", "ĠNeb", "ule", "use", "::", "Set", "User", "Stats", "(", "std", "::", "string", "Ġname", ",", "Ġint", "Ġvalue", "){", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ_", "User", "Stats", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(_", "User", "Stats", "[", "i", "].", "Name", "Ġ==", "Ġname", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "(_", "User", "Stats", "[", "i", "].", "Value", "Ġ!=", "Ġvalue", "){", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "_", "User", "Stats", "[", "i", "].", "Value", "Ġ=", "Ġvalue", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Send", "Stats", "();", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "return", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "void", "ĠNeb", "ule", "use", "::", "Send", "Stats", "(){", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "Is", "Un", "available", "())", "Ċ", "ĉ", "ĉ", "ĉ", "return", ";", "ĊĊ", "ĉ", "ĉ", "std", "::", "string", "Ġmsg", "Ġ=", "ĠPar", "se", "_", "Create", "Changed", "Stats", "J", "son", "();", "Ċ", "ĉ", "ĉ", "Talk", "_", "Send", "Stats", "Update", "(", "msg", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠNeb", "ule", "use", "::", "Add", "Com", "plex", "Stat", "(", "Com", "plex", "Stat", "Ġstat", "){", "Ċ", "ĉ", "ĉ", "_", "C", "Stats", ".", "push", "_", "back", "(", "stat", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠNeb", "ule", "use", "::", "Send", "Com", "plex", "Stats", "(){", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "Is", "Un", "available", "())", "Ċ", "ĉ", "ĉ", "ĉ", "return", ";", "ĊĊ", "ĉ", "ĉ", "std", "::", "string", "ĠMs", "g", ";", "Ċ", "ĉ", "ĉ", "Msg", "Ġ=", "ĠPar", "se", "_", "Create", "Com", "plex", "Stat", "J", "son", "();", "Ċ", "ĉ", "ĉ", "Talk", "_", "Send", "Com", "plex", "Stats", "(", "Msg", ");", "Ċ", "ĉ", "}", "Ċ", "}"], "dataflow_graph": [["i", 3, "comesFrom", ["i"], [2]], ["i", 6, "comesFrom", ["i"], [2]], ["i", 8, "comesFrom", ["i"], [2]], ["i", 12, "comesFrom", ["i"], [2]], ["i", 18, "comesFrom", ["i"], [17]], ["i", 21, "comesFrom", ["i"], [17]], ["i", 23, "comesFrom", ["i"], [17]], ["i", 27, "comesFrom", ["i"], [17]], ["i", 31, "comesFrom", ["i"], [17]], ["name", 10, "comesFrom", ["name"], [1]], ["name", 25, "comesFrom", ["name"], [15]], ["value", 29, "comesFrom", ["value"], [16]], ["value", 33, "comesFrom", ["value"], [16]], ["msg", 40, "comesFrom", ["msg"], [37]], ["stat", 45, "comesFrom", ["stat"], [42]], ["Msg", 52, "comesFrom", ["Msg"], [49]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::729", "code": "/* SSD1306Ascii - Text only Arduino Library for SSD1306 OLED displays */\n#include \"Display.h\"\n#include <Wire.h>\n#include \"SSD1306Ascii.h\"\n#include \"SSD1306AsciiWire.h\"\n\nSSD1306AsciiWire oled;\n\n\nvoid setup_display(void)\n{\n  Wire.begin();\n  oled.begin(&Adafruit128x64, I2C_ADDRESS);\n  oled.setFont(TomThumbs3x6);\n  oled.setScroll(true);\n  oled.clear();\n}\n\nvoid display_write(char c)\n{\n  oled.write(c);\n}\n\nvoid display_print(const char *s)\n{\n  oled.print(s);\n}\n\nvoid display_print(int i)\n{\n  oled.print(i);\n}\n\nvoid display_println(const char *s)\n{\n  oled.println(s);\n}\n\nvoid handle_backspace(void)\n{\n  oled.setCol(oled.col() - (oled.fontWidth() + 1));\n  oled.clearToEOL();\n}\n", "code_tokens": ["Ġ/*", "ĠSSD", "130", "6", "As", "ci", "i", "Ġ-", "ĠText", "Ġonly", "ĠArduino", "ĠLibrary", "Ġfor", "ĠSSD", "130", "6", "ĠOLED", "Ġdisplays", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "Display", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Wire", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "SS", "D", "130", "6", "As", "ci", "i", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "SS", "D", "130", "6", "As", "ci", "i", "Wire", ".", "h", "\"", "Ċ", "Ċ", "SS", "D", "130", "6", "As", "ci", "i", "Wire", "Ġo", "led", ";", "ĊĊ", "Ċ", "void", "Ġsetup", "_", "display", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "ĠWire", ".", "begin", "();", "Ċ", "Ġ", "Ġo", "led", ".", "begin", "(&", "Ad", "af", "ruit", "128", "x", "64", ",", "ĠI", "2", "C", "_", "AD", "DR", "ESS", ");", "Ċ", "Ġ", "Ġo", "led", ".", "set", "Font", "(", "Tom", "Th", "umbs", "3", "x", "6", ");", "Ċ", "Ġ", "Ġo", "led", ".", "set", "Scroll", "(", "true", ");", "Ċ", "Ġ", "Ġo", "led", ".", "clear", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdisplay", "_", "write", "(", "char", "Ġc", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "led", ".", "write", "(", "c", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdisplay", "_", "print", "(", "const", "Ġchar", "Ġ*", "s", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "led", ".", "print", "(", "s", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdisplay", "_", "print", "(", "int", "Ġi", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "led", ".", "print", "(", "i", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġdisplay", "_", "println", "(", "const", "Ġchar", "Ġ*", "s", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "led", ".", "println", "(", "s", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġhandle", "_", "back", "space", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġo", "led", ".", "set", "Col", "(", "oled", ".", "col", "()", "Ġ-", "Ġ(", "oled", ".", "font", "Width", "()", "Ġ+", "Ġ1", "));", "Ċ", "Ġ", "Ġo", "led", ".", "clear", "To", "E", "OL", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["oled", 4, "comesFrom", ["oled"], [0]], ["oled", 8, "comesFrom", ["oled"], [0]], ["oled", 11, "comesFrom", ["oled"], [0]], ["oled", 13, "comesFrom", ["oled"], [0]], ["oled", 17, "comesFrom", ["oled"], [0]], ["oled", 22, "comesFrom", ["oled"], [0]], ["oled", 27, "comesFrom", ["oled"], [0]], ["oled", 32, "comesFrom", ["oled"], [0]], ["oled", 36, "comesFrom", ["oled"], [0]], ["oled", 38, "comesFrom", ["oled"], [0]], ["oled", 40, "comesFrom", ["oled"], [0]], ["oled", 42, "comesFrom", ["oled"], [0]], ["c", 19, "comesFrom", ["c"], [16]], ["i", 29, "comesFrom", ["i"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::730", "code": "#include <string>\nusing namespace std;\n\n#include <gtest/gtest.h>\n\n#include \"../util/util_common.h\"\n\n#include \"partition_list.h\"\n\nnamespace {\n  TEST(PartitionListTest, Case1) {\n    PartitionList solution;\n\n    EXPECT_EQ(NULL, solution.partition(NULL, 0));\n  }\n\n  TEST(PartitionListTest, Case2) {\n    string list_data = \"1,4,3,2,5,2\";\n    auto head = build_linked_list(list_data);\n    int x = 3;\n\n    PartitionList solution;\n    auto partitioned_head = solution.partition(head, x);\n    string partitioned_list_data = output_linked_list(partitioned_head);\n    string expected_data = \"1,2,2,4,3,5\";\n\n    EXPECT_EQ(expected_data, partitioned_list_data);\n\n    destroy_linked_list(partitioned_head);\n  }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "util", "/", "util", "_", "common", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "part", "ition", "_", "list", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ġ", "ĠTEST", "(", "Part", "ition", "List", "Test", ",", "ĠCase", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPart", "ition", "List", "Ġsolution", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "NULL", ",", "Ġsolution", ".", "part", "ition", "(", "NULL", ",", "Ġ0", "));", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "ĠTEST", "(", "Part", "ition", "List", "Test", ",", "ĠCase", "2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġlist", "_", "data", "Ġ=", "Ġ\"", "1", ",", "4", ",", "3", ",", "2", ",", "5", ",", "2", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġhead", "Ġ=", "Ġbuild", "_", "linked", "_", "list", "(", "list", "_", "data", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġx", "Ġ=", "Ġ3", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠPart", "ition", "List", "Ġsolution", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġpartition", "ed", "_", "head", "Ġ=", "Ġsolution", ".", "part", "ition", "(", "head", ",", "Ġx", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġpartition", "ed", "_", "list", "_", "data", "Ġ=", "Ġoutput", "_", "linked", "_", "list", "(", "part", "ition", "ed", "_", "head", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġexpected", "_", "data", "Ġ=", "Ġ\"", "1", ",", "2", ",", "2", ",", "4", ",", "3", ",", "5", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "expected", "_", "data", ",", "Ġpartition", "ed", "_", "list", "_", "data", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġdestroy", "_", "linked", "_", "list", "(", "part", "ition", "ed", "_", "head", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["solution", 4, "comesFrom", ["solution"], [2]], ["solution", 14, "comesFrom", ["solution"], [12]], ["list_data", 10, "comesFrom", ["list_data"], [7]], ["head", 16, "comesFrom", ["head"], [8]], ["x", 17, "comesFrom", ["x"], [11]], ["partitioned_head", 20, "comesFrom", ["partitioned_head"], [13]], ["partitioned_head", 26, "comesFrom", ["partitioned_head"], [13]], ["expected_data", 23, "comesFrom", ["expected_data"], [21]], ["partitioned_list_data", 24, "comesFrom", ["partitioned_list_data"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::731", "code": "#include <slim/Template.hpp>\n#include \"Vector2.hpp\"\n#include <fstream>\n\nint main()\n{\n    auto model = slim::create_view_model();\n    model->add_constant(\"Vector2\", slim::create_object<slim::SimpleClass<Vector2>>());\n    model->set_attr(\"pos\", slim::create_object<Vector2>(50, 30));\n    model->set_attr(\"move\", slim::create_object<Vector2>(5,5));\n\n    auto tpl = slim::parse_template_file(\"view.html.slim\");\n    auto html = tpl.render(model);\n\n    std::fstream fs(\"output.html\", std::ios::out | std::ios::binary);\n    fs.write(html.data(), html.size());\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "s", "lim", "/", "Template", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ\"", "Vector", "2", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġmodel", "Ġ=", "Ġslim", "::", "create", "_", "view", "_", "model", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmodel", "->", "add", "_", "const", "ant", "(\"", "Vector", "2", "\",", "Ġslim", "::", "create", "_", "object", "<", "s", "lim", "::", "Simple", "Class", "<", "Vector", "2", ">>", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmodel", "->", "set", "_", "attr", "(\"", "pos", "\",", "Ġslim", "::", "create", "_", "object", "<", "Vector", "2", ">(", "50", ",", "Ġ30", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmodel", "->", "set", "_", "attr", "(\"", "move", "\",", "Ġslim", "::", "create", "_", "object", "<", "Vector", "2", ">(", "5", ",", "5", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġt", "pl", "Ġ=", "Ġslim", "::", "parse", "_", "template", "_", "file", "(\"", "view", ".", "html", ".", "s", "lim", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġhtml", "Ġ=", "Ġt", "pl", ".", "render", "(", "model", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "f", "stream", "Ġfs", "(\"", "output", ".", "html", "\",", "Ġstd", "::", "ios", "::", "out", "Ġ|", "Ġstd", "::", "ios", "::", "binary", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfs", ".", "write", "(", "html", ".", "data", "(),", "Ġhtml", ".", "size", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["model", 3, "comesFrom", ["model"], [1]], ["model", 6, "comesFrom", ["model"], [1]], ["model", 9, "comesFrom", ["model"], [1]], ["model", 17, "comesFrom", ["model"], [1]], ["tpl", 15, "comesFrom", ["tpl"], [12]], ["fs", 21, "comesFrom", ["fs"], [18]], ["html", 23, "comesFrom", ["html"], [14]], ["html", 25, "comesFrom", ["html"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::732", "code": "#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nint main(int argc, char* argv[])\n{\n\t//Create 3 output file stream buffers\n\tofstream coutFile;\n\tcoutFile.open(\"cout.log\");\n\tofstream cerrFile;\n\tcerrFile.open(\"cerr.log\");\n\tofstream clogFile;\n\tclogFile.open(\"clog.log\");\n\n\t//Store current buffers so we can reasign them when program ends it's execution\n\tstreambuf* backupCout = cout.rdbuf();\n\tstreambuf* backupCerr = cerr.rdbuf();\n\tstreambuf* backupClog = clog.rdbuf();\n\n\t//Replace cout,cerr,clog buffers with our custom stream buffers\n\tcout.rdbuf(coutFile.rdbuf());\n\tcerr.rdbuf(cerrFile.rdbuf());\n\tclog.rdbuf(clogFile.rdbuf());\n\n\t//Write something into our files\n\tcout << \"This will be printed into cout.log file\" << endl;\n\tcerr << \"This will be printed into cerr.log file\" << endl;\n\tclog << \"This will be printed into clog.log file\" << endl;\n\n\t//Restore previous buffers\n\t//NOTE!: It's important to do this, otherwise \"segmentation fault\" error will be generated\n\tcout.rdbuf(backupCout);\n\tcerr.rdbuf(backupCerr);\n\tclog.rdbuf(backupClog);\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "//", "Create", "Ġ3", "Ġoutput", "Ġfile", "Ġstream", "Ġbuffers", "Ċ", "ĉ", "of", "stream", "Ġcout", "File", ";", "Ċ", "ĉ", "c", "out", "File", ".", "open", "(\"", "c", "out", ".", "log", "\");", "Ċ", "ĉ", "of", "stream", "Ġc", "err", "File", ";", "Ċ", "ĉ", "cer", "r", "File", ".", "open", "(\"", "cer", "r", ".", "log", "\");", "Ċ", "ĉ", "of", "stream", "Ġcl", "og", "File", ";", "Ċ", "ĉ", "cl", "og", "File", ".", "open", "(\"", "cl", "og", ".", "log", "\");", "ĊĊ", "ĉ", "//", "Store", "Ġcurrent", "Ġbuffers", "Ġso", "Ġwe", "Ġcan", "Ġre", "as", "ign", "Ġthem", "Ġwhen", "Ġprogram", "Ġends", "Ġit", "'s", "Ġexecution", "Ċ", "ĉ", "stream", "buf", "*", "Ġbackup", "C", "out", "Ġ=", "Ġcout", ".", "rd", "buf", "();", "Ċ", "ĉ", "stream", "buf", "*", "Ġbackup", "C", "err", "Ġ=", "Ġc", "err", ".", "rd", "buf", "();", "Ċ", "ĉ", "stream", "buf", "*", "Ġbackup", "Cl", "og", "Ġ=", "Ġcl", "og", ".", "rd", "buf", "();", "ĊĊ", "ĉ", "//", "Re", "place", "Ġcout", ",", "cer", "r", ",", "cl", "og", "Ġbuffers", "Ġwith", "Ġour", "Ġcustom", "Ġstream", "Ġbuffers", "Ċ", "ĉ", "c", "out", ".", "rd", "buf", "(", "c", "out", "File", ".", "rd", "buf", "());", "Ċ", "ĉ", "cer", "r", ".", "rd", "buf", "(", "cer", "r", "File", ".", "rd", "buf", "());", "Ċ", "ĉ", "cl", "og", ".", "rd", "buf", "(", "cl", "og", "File", ".", "rd", "buf", "());", "ĊĊ", "ĉ", "//", "Write", "Ġsomething", "Ġinto", "Ġour", "Ġfiles", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "This", "Ġwill", "Ġbe", "Ġprinted", "Ġinto", "Ġcout", ".", "log", "Ġfile", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "cer", "r", "Ġ<<", "Ġ\"", "This", "Ġwill", "Ġbe", "Ġprinted", "Ġinto", "Ġc", "err", ".", "log", "Ġfile", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "cl", "og", "Ġ<<", "Ġ\"", "This", "Ġwill", "Ġbe", "Ġprinted", "Ġinto", "Ġcl", "og", ".", "log", "Ġfile", "\"", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "//", "Rest", "ore", "Ġprevious", "Ġbuffers", "Ċ", "ĉ", "//", "NOTE", "!:", "ĠIt", "'s", "Ġimportant", "Ġto", "Ġdo", "Ġthis", ",", "Ġotherwise", "Ġ\"", "se", "gment", "ation", "Ġfault", "\"", "Ġerror", "Ġwill", "Ġbe", "Ġgenerated", "Ċ", "ĉ", "c", "out", ".", "rd", "buf", "(", "back", "up", "C", "out", ");", "Ċ", "ĉ", "cer", "r", ".", "rd", "buf", "(", "back", "up", "C", "err", ");", "Ċ", "ĉ", "cl", "og", ".", "rd", "buf", "(", "back", "up", "Cl", "og", ");", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["coutFile", 5, "comesFrom", ["coutFile"], [4]], ["coutFile", 24, "comesFrom", ["coutFile"], [4]], ["cerrFile", 8, "comesFrom", ["cerrFile"], [7]], ["cerrFile", 28, "comesFrom", ["cerrFile"], [7]], ["clogFile", 11, "comesFrom", ["clogFile"], [10]], ["clogFile", 32, "comesFrom", ["clogFile"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::733", "code": "#include \"ptnk.h\"\n\n#include <stdio.h>\n\nusing namespace ptnk;\n\nint\nmain(int argc, char* argv[])\n{\n\tif(argc < 2)\n\t{\n\t\tprintf(\"Usage: %s [ptnkdb]\\n\", argv[0]);\t\n\t\treturn 1;\n\t}\n\n\ttry\n\t{\n\t\tptnk::DB db(argv[1], OWRITER | OPARTITIONED);\n\t\tdb.compactFast();\n\t}\n\tcatch(std::exception& e)\n\t{\n\t\tstd::cerr << e.what() << std::endl;\t\n\t}\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "pt", "n", "k", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġp", "tn", "k", ";", "Ċ", "Ċ", "int", "Ċ", "main", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "if", "(", "arg", "c", "Ġ<", "Ġ2", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "printf", "(\"", "Usage", ":", "Ġ%", "s", "Ġ[", "pt", "n", "k", "db", "]", "\\", "n", "\",", "Ġarg", "v", "[", "0", "]);", "ĉ", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "try", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "pt", "n", "k", "::", "DB", "Ġdb", "(", "arg", "v", "[", "1", "],", "ĠO", "WR", "IT", "ER", "Ġ|", "ĠOP", "ART", "ITION", "ED", ");", "Ċ", "ĉ", "ĉ", "db", ".", "comp", "act", "Fast", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "catch", "(", "std", "::", "ex", "ception", "&", "Ġe", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "std", "::", "cer", "r", "Ġ<<", "Ġe", ".", "what", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĉ", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 4, "comesFrom", ["argc"], [2]], ["db", 11, "comesFrom", ["db"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::734", "code": "#include \"gamelib/json/json-resources.hpp\"\n#include \"gamelib/core/res/ResourceManager.hpp\"\n#include <boost/filesystem.hpp>\n\nnamespace gamelib\n{\n    void writeToJson(Json::Value& node, const BaseResourceHandle& handle, const ResourceManager* resmgr)\n    {\n        if (handle)\n            node = handle.getResource()->getPath();\n        else\n            node = \"\";\n    }\n\n    bool loadFromJson(const Json::Value& node, BaseResourceHandle* handle, ResourceManager* resmgr)\n    {\n        if (!node.isString())\n        {\n            LOG_ERROR(\"Wrong resource config format\");\n            return false;\n        }\n\n        handle->reset();\n\n        auto fname = node.asString();\n        if (!fname.empty())\n        {\n            resmgr = resmgr ? resmgr : getSubsystem<ResourceManager>();\n            if (resmgr)\n                *handle = resmgr->get(fname);\n        }\n\n        return true;\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "g", "amel", "ib", "/", "json", "/", "json", "-", "resources", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "g", "amel", "ib", "/", "core", "/", "res", "/", "Resource", "Manager", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "boost", "/", "files", "ystem", ".", "h", "pp", ">", "Ċ", "Ċ", "names", "pace", "Ġgam", "el", "ib", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġwrite", "To", "J", "son", "(", "J", "son", "::", "Value", "&", "Ġnode", ",", "Ġconst", "ĠBase", "Resource", "Handle", "&", "Ġhandle", ",", "Ġconst", "ĠResource", "Manager", "*", "Ġres", "m", "gr", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "handle", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnode", "Ġ=", "Ġhandle", ".", "get", "Resource", "()", "->", "get", "Path", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnode", "Ġ=", "Ġ\"", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġload", "From", "J", "son", "(", "const", "ĠJ", "son", "::", "Value", "&", "Ġnode", ",", "ĠBase", "Resource", "Handle", "*", "Ġhandle", ",", "ĠResource", "Manager", "*", "Ġres", "m", "gr", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "node", ".", "is", "String", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠLOG", "_", "ERROR", "(\"", "Wr", "ong", "Ġresource", "Ġconfig", "Ġformat", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhandle", "->", "reset", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġf", "name", "Ġ=", "Ġnode", ".", "as", "String", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "f", "name", ".", "empty", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġres", "m", "gr", "Ġ=", "Ġres", "m", "gr", "Ġ?", "Ġres", "m", "gr", "Ġ:", "Ġget", "Sub", "system", "<", "Resource", "Manager", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "res", "m", "gr", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "handle", "Ġ=", "Ġres", "m", "gr", "->", "get", "(", "f", "name", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["node", 11, "comesFrom", ["node"], [9]], ["node", 14, "comesFrom", ["node"], [9]], ["node", 20, "comesFrom", ["node"], [9]], ["resmgr", 25, "comesFrom", ["resmgr"], [24]], ["resmgr", 26, "comesFrom", ["resmgr"], [24]], ["resmgr", 28, "comesFrom", ["resmgr"], [24]], ["resmgr", 30, "comesFrom", ["resmgr"], [24]], ["fname", 22, "comesFrom", ["fname"], [19]], ["fname", 32, "comesFrom", ["fname"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::735", "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define endl \"\\n\"\n\nint main(){\n    ios_base::sync_with_stdio(0); cin.tie(0);\n    long long n, l, a=0;\n\n    string s;\n    cin >> s >> n;\n    \n    l = s.length();\n\n    for (long long i=0;i<l;i++)\n        if (s[i] == 'a') a++;\n\n    a *= n/l;\n\n    for (long long i=0;i<n%l;i++)\n        if (s[i] == 'a') a++;\n\n    cout << a << endl;\n\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "define", "Ġend", "l", "Ġ\"\\", "n", "\"", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġi", "os", "_", "base", "::", "sync", "_", "with", "_", "std", "io", "(", "0", ");", "Ġc", "in", ".", "tie", "(", "0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġlong", "Ġn", ",", "Ġl", ",", "Ġa", "=", "0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġs", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġl", "Ġ=", "Ġs", ".", "length", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "long", "Ġlong", "Ġi", "=", "0", ";", "i", "<", "l", ";", "i", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "[", "i", "]", "Ġ==", "Ġ'", "a", "')", "Ġa", "++;", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġa", "Ġ*", "=", "Ġn", "/", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "long", "Ġlong", "Ġi", "=", "0", ";", "i", "<", "n", "%", "l", ";", "i", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "[", "i", "]", "Ġ==", "Ġ'", "a", "')", "Ġa", "++;", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġa", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["s", 11, "comesFrom", ["s"], [9]], ["s", 14, "comesFrom", ["s"], [9]], ["s", 20, "comesFrom", ["s"], [9]], ["s", 31, "comesFrom", ["s"], [9]], ["n", 12, "comesFrom", ["n"], [6]], ["n", 24, "comesFrom", ["n"], [6]], ["n", 28, "comesFrom", ["n"], [6]], ["i", 17, "comesFrom", ["i"], [16]], ["i", 19, "comesFrom", ["i"], [16]], ["i", 21, "comesFrom", ["i"], [16]], ["i", 27, "comesFrom", ["i"], [26]], ["i", 30, "comesFrom", ["i"], [26]], ["i", 32, "comesFrom", ["i"], [26]], ["l", 18, "comesFrom", ["l"], [13]], ["l", 25, "comesFrom", ["l"], [13]], ["l", 29, "comesFrom", ["l"], [13]], ["a", 22, "comesFrom", ["a"], [8]], ["a", 33, "comesFrom", ["a"], [23]], ["a", 35, "comesFrom", ["a"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::736", "code": "#include \"tools.hh\"\n\nTools::CTimer::CTimer() : m_lastProbed(std::chrono::high_resolution_clock::now())\n{\n\n}\n\nTools::CTimer::~CTimer()\n{\n}\n\nvoid Tools::CTimer::probeTime()\n{\n    m_lastProbed = std::chrono::high_resolution_clock::now();\n}\n\nvoid Tools::CTimer::printElapsed() const\n{\n    std::chrono::duration<double> time_span = std::chrono::duration_cast<std::chrono::duration<double>>(std::chrono::high_resolution_clock::now() - m_lastProbed);\n    std::cout << time_span.count() << \"s.\" << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "tools", ".", "hh", "\"", "Ċ", "Ċ", "Tools", "::", "CT", "imer", "::", "CT", "imer", "()", "Ġ:", "Ġm", "_", "last", "Pro", "bed", "(", "std", "::", "chron", "o", "::", "high", "_", "resolution", "_", "clock", "::", "now", "())", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "Tools", "::", "CT", "imer", "::", "~", "CT", "imer", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTools", "::", "CT", "imer", "::", "pro", "be", "Time", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "last", "Pro", "bed", "Ġ=", "Ġstd", "::", "chron", "o", "::", "high", "_", "resolution", "_", "clock", "::", "now", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTools", "::", "CT", "imer", "::", "print", "El", "apsed", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "chron", "o", "::", "duration", "<", "double", ">", "Ġtime", "_", "span", "Ġ=", "Ġstd", "::", "chron", "o", "::", "duration", "_", "cast", "<", "std", "::", "chron", "o", "::", "duration", "<", "double", ">>", "(", "std", "::", "chron", "o", "::", "high", "_", "resolution", "_", "clock", "::", "now", "()", "Ġ-", "Ġm", "_", "last", "Pro", "bed", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġtime", "_", "span", ".", "count", "()", "Ġ<<", "Ġ\"", "s", ".\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["m_lastProbed", 11, "comesFrom", ["m_lastProbed"], [5]], ["time_span", 13, "comesFrom", ["time_span"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::737", "code": "class Solution {\npublic:\n    int rob(vector<int>& nums) {\n        if (nums.empty()) return 0;\n        else if (nums.size() == 1) return nums[0];\n        else if (nums.size() == 2) return max(nums[0], nums[1]);\n        vector<int> dp(nums.size() + 1, 0);\n        dp[1] = nums[0];\n        for (int i = 1; i < nums.size() - 1; ++i) {\n            dp[i + 1] = max(dp[i], dp[i - 1] + nums[i]);\n        }\n        int res = dp[nums.size() - 1];\n        fill(dp.begin(), dp.end(), 0);\n        dp[1] = nums[1];\n        for (int i = 2; i < nums.size(); ++i) {\n            dp[i] = max(dp[i - 1], dp[i - 2] + nums[i]);\n        }\n        return max(res, dp[nums.size() - 1]);\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġrob", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "ums", ".", "empty", "())", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "n", "ums", ".", "size", "()", "Ġ==", "Ġ1", ")", "Ġreturn", "Ġnum", "s", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "n", "ums", ".", "size", "()", "Ġ==", "Ġ2", ")", "Ġreturn", "Ġmax", "(", "n", "ums", "[", "0", "],", "Ġnum", "s", "[", "1", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġd", "p", "(", "n", "ums", ".", "size", "()", "Ġ+", "Ġ1", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "1", "]", "Ġ=", "Ġnum", "s", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġnum", "s", ".", "size", "()", "Ġ-", "Ġ1", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "i", "Ġ+", "Ġ1", "]", "Ġ=", "Ġmax", "(", "dp", "[", "i", "],", "Ġd", "p", "[", "i", "Ġ-", "Ġ1", "]", "Ġ+", "Ġnum", "s", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġres", "Ġ=", "Ġd", "p", "[", "n", "ums", ".", "size", "()", "Ġ-", "Ġ1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfill", "(", "dp", ".", "begin", "(),", "Ġd", "p", ".", "end", "(),", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "1", "]", "Ġ=", "Ġnum", "s", "[", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<", "Ġnum", "s", ".", "size", "();", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "i", "]", "Ġ=", "Ġmax", "(", "dp", "[", "i", "Ġ-", "Ġ1", "],", "Ġd", "p", "[", "i", "Ġ-", "Ġ2", "]", "Ġ+", "Ġnum", "s", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmax", "(", "res", ",", "Ġd", "p", "[", "n", "ums", ".", "size", "()", "Ġ-", "Ġ1", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["dp", 15, "comesFrom", ["dp"], [12]], ["dp", 22, "comesFrom", ["dp"], [12]], ["dp", 25, "comesFrom", ["dp"], [12]], ["dp", 27, "comesFrom", ["dp"], [12]], ["dp", 32, "comesFrom", ["dp"], [12]], ["dp", 36, "comesFrom", ["dp"], [12]], ["dp", 38, "comesFrom", ["dp"], [12]], ["dp", 40, "comesFrom", ["dp"], [12]], ["dp", 47, "comesFrom", ["dp"], [12]], ["dp", 50, "comesFrom", ["dp"], [12]], ["dp", 52, "comesFrom", ["dp"], [12]], ["dp", 58, "comesFrom", ["dp"], [12]], ["i", 18, "comesFrom", ["i"], [17]], ["i", 21, "comesFrom", ["i"], [17]], ["i", 23, "comesFrom", ["i"], [17]], ["i", 26, "comesFrom", ["i"], [17]], ["i", 28, "comesFrom", ["i"], [17]], ["i", 30, "comesFrom", ["i"], [17]], ["i", 43, "comesFrom", ["i"], [42]], ["i", 46, "comesFrom", ["i"], [42]], ["i", 48, "comesFrom", ["i"], [42]], ["i", 51, "comesFrom", ["i"], [42]], ["i", 53, "comesFrom", ["i"], [42]], ["i", 55, "comesFrom", ["i"], [42]], ["res", 57, "comesFrom", ["res"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::738", "code": "#include<iostream>\n#include<iomanip>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n\n// Debug stuff\n#define beacon cout << \"OK\" << endl\n#define printvec(v) for(auto x : v) cout << x << \" \"\n\n// Type less stuff\n#define forn(n) for(int mute_idx=0; mute_idx<n; mute_idx++)\n#define forin(i,n) for(int i=0; i<n; i++)\n#define forimn(i,m,n) for(int i=m; i<n; i++)\n\nusing namespace std;\n\nint main() {\n\tchar c;\n\twhile(cin >> c) {\n\t\tif(c<97) c += 32;\n\t\tswitch(c) {\n\t\t\tcase 'a':\n\t\t\tcase 'e':\n\t\t\tcase 'i':\n\t\t\tcase 'o':\n\t\t\tcase 'u':\n\t\t\tcase 'y':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcout << '.' << c;\n\t\t}\n\t}\n\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "<", "i", "ost", "ream", ">", "Ċ", "#", "include", "<", "i", "oman", "ip", ">", "Ċ", "#", "include", "<", "string", ">", "Ċ", "#", "include", "<", "vector", ">", "Ċ", "#", "include", "<", "al", "gorithm", ">", "Ċ", "#", "include", "<", "c", "std", "io", ">", "Ċ", "#", "include", "<", "c", "math", ">", "Ċ", "Ċ", "//", "ĠDebug", "Ġstuff", "Ċ", "#", "define", "Ġbeacon", "Ġcout", "Ġ<<", "Ġ\"", "OK", "\"", "Ġ<<", "Ġend", "l", "Ċ", "#", "define", "Ġprint", "vec", "(", "v", ")", "Ġfor", "(", "auto", "Ġx", "Ġ:", "Ġv", ")", "Ġcout", "Ġ<<", "Ġx", "Ġ<<", "Ġ\"", "Ġ\"", "Ċ", "Ċ", "//", "ĠType", "Ġless", "Ġstuff", "Ċ", "#", "define", "Ġfor", "n", "(", "n", ")", "Ġfor", "(", "int", "Ġmute", "_", "id", "x", "=", "0", ";", "Ġmute", "_", "id", "x", "<", "n", ";", "Ġmute", "_", "id", "x", "++)", "Ċ", "#", "define", "Ġfor", "in", "(", "i", ",", "n", ")", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ċ", "#", "define", "Ġfor", "im", "n", "(", "i", ",", "m", ",", "n", ")", "Ġfor", "(", "int", "Ġi", "=", "m", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "char", "Ġc", ";", "Ċ", "ĉ", "while", "(", "cin", "Ġ>>", "Ġc", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "(", "c", "<", "97", ")", "Ġc", "Ġ+=", "Ġ32", ";", "Ċ", "ĉ", "ĉ", "switch", "(", "c", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "case", "Ġ'", "a", "':", "Ċ", "ĉ", "ĉ", "ĉ", "case", "Ġ'", "e", "':", "Ċ", "ĉ", "ĉ", "ĉ", "case", "Ġ'", "i", "':", "Ċ", "ĉ", "ĉ", "ĉ", "case", "Ġ'", "o", "':", "Ċ", "ĉ", "ĉ", "ĉ", "case", "Ġ'", "u", "':", "Ċ", "ĉ", "ĉ", "ĉ", "case", "Ġ'", "y", "':", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "default", ":", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ'", ".'", "Ġ<<", "Ġc", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["c", 16, "comesFrom", ["c"], [14]], ["c", 17, "comesFrom", ["c"], [14]], ["c", 19, "comesFrom", ["c"], [18]], ["c", 21, "comesFrom", ["c"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::739", "code": "/*\n * map_test.cc\n */\n\n#include <map>\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <cstdlib>\n\nusing namespace std;\n\nclass Total\n{\npublic:\n  Total() : total_value(0)\n  {}\n\n  Total operator +=(int a) {\n    total_value += a;\n    return (*this);\n  }\n\n  int total_value;\n};\n\nostream& operator <<(ostream& os, Total const& t)\n{\n  os << t.total_value;\n  return (os);\n}\n\nint main()\n{\n  ifstream data_file(\"canvas.dat\", ios::in);\n  char name[16];\n  int dollars;\n\n  map<string, Total, less<string> > canvassers;\n  map<string, Total, less<string> >::iterator iter;\n\n  if (!data_file) {\n    cerr << \"cannot open data file\\n\";\n    exit(1);\n  }\n\n  while ((data_file >> name >> dollars)) {\n    canvassers[name] += dollars;\n  }\n\n  for (iter = canvassers.begin(); iter != canvassers.end(); iter++) {\n    cout << (*iter).first << \", \" << (*iter).second << \"\\n\";\n  }\n\n  return 0;\n}", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġmap", "_", "test", ".", "cc", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠTotal", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "ĠTotal", "()", "Ġ:", "Ġtotal", "_", "value", "(", "0", ")", "Ċ", "Ġ", "Ġ{}", "ĊĊ", "Ġ", "ĠTotal", "Ġoperator", "Ġ+=", "(", "int", "Ġa", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtotal", "_", "value", "Ġ+=", "Ġa", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ(*", "this", ");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġint", "Ġtotal", "_", "value", ";", "Ċ", "};", "Ċ", "Ċ", "ost", "ream", "&", "Ġoperator", "Ġ<<", "(", "ost", "ream", "&", "Ġos", ",", "ĠTotal", "Ġconst", "&", "Ġt", ")", "Ċ", "{", "Ċ", "Ġ", "Ġos", "Ġ<<", "Ġt", ".", "total", "_", "value", ";", "Ċ", "Ġ", "Ġreturn", "Ġ(", "os", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġif", "stream", "Ġdata", "_", "file", "(\"", "can", "vas", ".", "dat", "\",", "Ġi", "os", "::", "in", ");", "Ċ", "Ġ", "Ġchar", "Ġname", "[", "16", "];", "Ċ", "Ġ", "Ġint", "Ġdollars", ";", "ĊĊ", "Ġ", "Ġmap", "<", "string", ",", "ĠTotal", ",", "Ġless", "<", "string", ">", "Ġ>", "Ġcanv", "ass", "ers", ";", "Ċ", "Ġ", "Ġmap", "<", "string", ",", "ĠTotal", ",", "Ġless", "<", "string", ">", "Ġ>", "::", "iterator", "Ġiter", ";", "ĊĊ", "Ġ", "Ġif", "Ġ(!", "data", "_", "file", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "err", "Ġ<<", "Ġ\"", "c", "annot", "Ġopen", "Ġdata", "Ġfile", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġexit", "(", "1", ");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġwhile", "Ġ((", "data", "_", "file", "Ġ>>", "Ġname", "Ġ>>", "Ġdollars", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcanv", "ass", "ers", "[", "name", "]", "Ġ+=", "Ġdollars", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "iter", "Ġ=", "Ġcanv", "ass", "ers", ".", "begin", "();", "Ġiter", "Ġ!=", "Ġcanv", "ass", "ers", ".", "end", "();", "Ġiter", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ(*", "iter", ").", "first", "Ġ<<", "Ġ\",", "Ġ\"", "Ġ<<", "Ġ(*", "iter", ").", "second", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["total_value", 6, "comesFrom", ["total_value"], [4]], ["total_value", 11, "comesFrom", ["total_value"], [4]], ["a", 5, "comesFrom", ["a"], [3]], ["data_file", 20, "comesFrom", ["data_file"], [14]], ["data_file", 23, "comesFrom", ["data_file"], [14]], ["dollars", 25, "comesFrom", ["dollars"], [17]], ["dollars", 28, "comesFrom", ["dollars"], [17]], ["canvassers", 26, "comesFrom", ["canvassers"], [18]], ["canvassers", 30, "comesFrom", ["canvassers"], [18]], ["canvassers", 33, "comesFrom", ["canvassers"], [18]], ["iter", 32, "comesFrom", ["iter"], [29]], ["iter", 35, "comesFrom", ["iter"], [29]], ["iter", 37, "comesFrom", ["iter"], [29]], ["iter", 39, "comesFrom", ["iter"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::740", "code": "#include \"iterations.h\"\n#include \"../common/bart_builder.h\"\n\nusing namespace dealii;\n\ntemplate <int dim>\nIterations<dim>::Iterations (const dealii::ParameterHandler &prm,\n    std::shared_ptr<FundamentalData<dim>> &dat_ptr)\n    :\n    is_eigen_problem_(prm.get_bool(\"do eigenvalue calculations\")) {\n  if (is_eigen_problem_) {\n    eig_ptr_ = bbuilders::BuildEigenItr (prm, dat_ptr);\n  } else {\n    mg_ptr_ = bbuilders::BuildMGItr (prm, dat_ptr);\n  }\n}\n\ntemplate <int dim>\nIterations<dim>::~Iterations () {}\n\ntemplate <int dim>\nvoid Iterations<dim>::DoIterations (std::unordered_map<std::string,\n    std::unique_ptr<EquationBase<dim>>> &equ_ptrs) {\n  if (is_eigen_problem_) {\n    eig_ptr_->DoIterations (equ_ptrs);\n    keff_ = eig_ptr_->GetKeff ();\n  } else {\n    mg_ptr_->DoIterations (equ_ptrs);\n  }\n}\n\ntemplate <int dim>\ndouble Iterations<dim>::GetKeff () const {\n  AssertThrow (is_eigen_problem_,\n      dealii::ExcMessage(\"Problem is not eigenvalue problem\"));\n  return keff_;\n}\n\n// explicit instantiation to avoid linking error\ntemplate class Iterations<1>;\ntemplate class Iterations<2>;\ntemplate class Iterations<3>;\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "iter", "ations", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "common", "/", "bart", "_", "builder", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġdeal", "ii", ";", "Ċ", "Ċ", "template", "Ġ<", "int", "Ġdim", ">", "Ċ", "Iter", "ations", "<", "dim", ">", "::", "Iter", "ations", "Ġ(", "const", "Ġdeal", "ii", "::", "Parameter", "Handler", "Ġ&", "pr", "m", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "Fund", "amental", "Data", "<", "dim", ">>", "Ġ&", "dat", "_", "ptr", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġis", "_", "e", "igen", "_", "problem", "_(", "pr", "m", ".", "get", "_", "bool", "(\"", "do", "Ġe", "igen", "value", "Ġcalculations", "\"))", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "is", "_", "e", "igen", "_", "problem", "_", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġe", "ig", "_", "ptr", "_", "Ġ=", "Ġb", "builders", "::", "Build", "E", "igen", "It", "r", "Ġ(", "pr", "m", ",", "Ġdat", "_", "ptr", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmg", "_", "ptr", "_", "Ġ=", "Ġb", "builders", "::", "Build", "MG", "It", "r", "Ġ(", "pr", "m", ",", "Ġdat", "_", "ptr", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "int", "Ġdim", ">", "Ċ", "Iter", "ations", "<", "dim", ">", "::", "~", "Iter", "ations", "Ġ()", "Ġ{}", "Ċ", "Ċ", "template", "Ġ<", "int", "Ġdim", ">", "Ċ", "void", "ĠIter", "ations", "<", "dim", ">", "::", "Do", "Iter", "ations", "Ġ(", "std", "::", "un", "ordered", "_", "map", "<", "std", "::", "string", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "Equ", "ation", "Base", "<", "dim", ">>>", "Ġ&", "equ", "_", "pt", "rs", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "is", "_", "e", "igen", "_", "problem", "_", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġe", "ig", "_", "ptr", "_", "->", "Do", "Iter", "ations", "Ġ(", "equ", "_", "pt", "rs", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġke", "ff", "_", "Ġ=", "Ġe", "ig", "_", "ptr", "_", "->", "Get", "Ke", "ff", "Ġ();", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmg", "_", "ptr", "_", "->", "Do", "Iter", "ations", "Ġ(", "equ", "_", "pt", "rs", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "int", "Ġdim", ">", "Ċ", "double", "ĠIter", "ations", "<", "dim", ">", "::", "Get", "Ke", "ff", "Ġ()", "Ġconst", "Ġ{", "Ċ", "Ġ", "ĠAss", "ert", "Throw", "Ġ(", "is", "_", "e", "igen", "_", "problem", "_", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdeal", "ii", "::", "Exc", "Message", "(\"", "Problem", "Ġis", "Ġnot", "Ġe", "igen", "value", "Ġproblem", "\")", ");", "Ċ", "Ġ", "Ġreturn", "Ġke", "ff", "_", ";", "Ċ", "}", "Ċ", "Ċ", "//", "Ġexplicit", "Ġinstant", "iation", "Ġto", "Ġavoid", "Ġlinking", "Ġerror", "Ċ", "template", "Ġclass", "ĠIter", "ations", "<", "1", ">", ";", "Ċ", "template", "Ġclass", "ĠIter", "ations", "<", "2", ">", ";", "Ċ", "template", "Ġclass", "ĠIter", "ations", "<", "3", ">", ";", "Ċ"], "dataflow_graph": [["eig_ptr_", 23, "comesFrom", ["eig_ptr_"], [9]], ["eig_ptr_", 27, "comesFrom", ["eig_ptr_"], [9]], ["mg_ptr_", 29, "comesFrom", ["mg_ptr_"], [13]], ["keff_", 37, "comesFrom", ["keff_"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::741", "code": "#include \"PointVisualisation.h\"\n\n#include \"../Components/BallsPoint.h\"\n#include \"../Components/AnimationStillFrame.h\"\n\n#include \"../globals.h\"\n\n#include <Polycode.h>\n\nusing namespace aunteater;\nusing namespace TeaParty;\nusing namespace System;\n\nclass NodePointCount\n{\npublic:\n    static const ArchetypeTypeSet gComponentTypes;\n};\n\nconst ArchetypeTypeSet NodePointCount::gComponentTypes =\n    { &typeid(TeaParty::Component::BallsPoint),\n      &typeid(TeaParty::Component::AnimationStillFrame) };\n\nPointVisualisation::PointVisualisation()\n{\n}\n\nvoid PointVisualisation::addedToEngine(aunteater::Engine &aEngine)\n{\n    mPointCount = &aEngine.getNodes<NodePointCount>();\n}\n\nvoid PointVisualisation::update(double time)\n{\n    for (auto & node : *mPointCount)\n    {\n    \tauto ballsPoint = &node.get<Component::BallsPoint>();\n    \tauto stillFrame = &node.get<Component::AnimationStillFrame>();\n\n    \tstillFrame->requestFrame = (int)ballsPoint->point/MAX_POINT*12;\n    }\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Point", "Visual", "isation", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "Comp", "onents", "/", "B", "alls", "Point", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "Comp", "onents", "/", "Animation", "Still", "Frame", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "gl", "ob", "als", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Poly", "code", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġa", "unte", "ater", ";", "Ċ", "using", "Ġnamespace", "ĠTea", "Party", ";", "Ċ", "using", "Ġnamespace", "ĠSystem", ";", "Ċ", "Ċ", "class", "ĠNode", "Point", "Count", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġconst", "ĠArche", "type", "Type", "Set", "Ġg", "Component", "Types", ";", "Ċ", "};", "Ċ", "Ċ", "const", "ĠArche", "type", "Type", "Set", "ĠNode", "Point", "Count", "::", "g", "Component", "Types", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġ&", "type", "id", "(", "Tea", "Party", "::", "Component", "::", "B", "alls", "Point", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ&", "type", "id", "(", "Tea", "Party", "::", "Component", "::", "Animation", "Still", "Frame", ")", "Ġ};", "Ċ", "Ċ", "Point", "Visual", "isation", "::", "Point", "Visual", "isation", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPoint", "Visual", "isation", "::", "added", "To", "Engine", "(", "aun", "te", "ater", "::", "Engine", "Ġ&", "a", "Engine", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "Point", "Count", "Ġ=", "Ġ&", "a", "Engine", ".", "get", "N", "odes", "<", "Node", "Point", "Count", ">", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPoint", "Visual", "isation", "::", "update", "(", "double", "Ġtime", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "Ġ&", "Ġnode", "Ġ:", "Ġ*", "m", "Point", "Count", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "auto", "Ġballs", "Point", "Ġ=", "Ġ&", "node", ".", "get", "<", "Component", "::", "B", "alls", "Point", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "auto", "Ġstill", "Frame", "Ġ=", "Ġ&", "node", ".", "get", "<", "Component", "::", "Animation", "Still", "Frame", ">", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "ĉ", "still", "Frame", "->", "request", "Frame", "Ġ=", "Ġ(", "int", ")", "balls", "Point", "->", "point", "/", "MAX", "_", "PO", "INT", "*", "12", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}"], "dataflow_graph": [["mPointCount", 18, "comesFrom", ["mPointCount"], [12]], ["stillFrame", 25, "comesFrom", ["stillFrame"], [22]], ["ballsPoint", 27, "comesFrom", ["ballsPoint"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::742", "code": "#include <cstring>\n#include <cstdio>\n\nint main() {\n  int a[1<<26];\n  for (int i = 0; i < 100; ++i) {\n    printf(\"%d\\n\", a[i]);\n  }\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", "[", "1", "<<", "26", "];", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ100", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġa", "[", "i", "]);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 3, "comesFrom", ["i"], [2]], ["i", 4, "comesFrom", ["i"], [2]], ["i", 7, "comesFrom", ["i"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::743", "code": "#include \"test.h\"\n#include \"lcg.h\"\n#include <cmath>\n\n// By central limit theorem (CLT),\n// U ~ [0, 1]\n// S = sum U_i for i = 1 to M\n// S ~ N(M / 2, M / 12)\n// Z = (S - M / 2) / sqrt(M / 12)\n// Z ~ N(0, 1)\n\ntemplate <class T, class RNG, int M>\nstatic inline T clt(RNG& r) {\n\tstatic T inv = 1 / std::sqrt(T(M) / 12);\n\n\tT sum = r();\n\tfor (int i = 1; i < M; i++)\n\t\tsum += r();\n\n\treturn (sum - M / T(2)) * inv;\n}\n\ntemplate <class T, int M>\nstatic void clt(T* data, size_t count) {\n\tLCG<T> r;\n\tfor (size_t i = 0; i < count; i++)\n\t\tdata[i] = clt<T, LCG<T>, M>(r);\n}\n\n#define CLT_TEST(M)\\\nstatic void normaldistf_clt##M(float* data, size_t count) {\\\n    clt<float, M>(data, count);\\\n}\\\nstatic void normaldist_clt##M(double* data, size_t count) {\\\n    clt<double, M>(data, count);\\\n}\\\nREGISTER_TEST(clt##M)\n\nCLT_TEST(4);\nCLT_TEST(8);\nCLT_TEST(16);\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "test", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "lc", "g", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "Ċ", "//", "ĠBy", "Ġcentral", "Ġlimit", "Ġtheorem", "Ġ(", "CL", "T", "),", "Ċ", "//", "ĠU", "Ġ~", "Ġ[", "0", ",", "Ġ1", "]", "Ċ", "//", "ĠS", "Ġ=", "Ġsum", "ĠU", "_", "i", "Ġfor", "Ġi", "Ġ=", "Ġ1", "Ġto", "ĠM", "Ċ", "//", "ĠS", "Ġ~", "ĠN", "(", "M", "Ġ/", "Ġ2", ",", "ĠM", "Ġ/", "Ġ12", ")", "Ċ", "//", "ĠZ", "Ġ=", "Ġ(", "S", "Ġ-", "ĠM", "Ġ/", "Ġ2", ")", "Ġ/", "Ġsq", "rt", "(", "M", "Ġ/", "Ġ12", ")", "Ċ", "//", "ĠZ", "Ġ~", "ĠN", "(", "0", ",", "Ġ1", ")", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ",", "Ġclass", "ĠR", "NG", ",", "Ġint", "ĠM", ">", "Ċ", "static", "Ġinline", "ĠT", "Ġcl", "t", "(", "R", "NG", "&", "Ġr", ")", "Ġ{", "Ċ", "ĉ", "static", "ĠT", "Ġinv", "Ġ=", "Ġ1", "Ġ/", "Ġstd", "::", "sq", "rt", "(", "T", "(", "M", ")", "Ġ/", "Ġ12", ");", "ĊĊ", "ĉ", "T", "Ġsum", "Ġ=", "Ġr", "();", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "ĠM", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "sum", "Ġ+=", "Ġr", "();", "ĊĊ", "ĉ", "return", "Ġ(", "sum", "Ġ-", "ĠM", "Ġ/", "ĠT", "(", "2", "))", "Ġ*", "Ġinv", ";", "Ċ", "}", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ",", "Ġint", "ĠM", ">", "Ċ", "static", "Ġvoid", "Ġcl", "t", "(", "T", "*", "Ġdata", ",", "Ġsize", "_", "t", "Ġcount", ")", "Ġ{", "Ċ", "ĉ", "LC", "G", "<", "T", ">", "Ġr", ";", "Ċ", "ĉ", "for", "Ġ(", "size", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġcount", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "data", "[", "i", "]", "Ġ=", "Ġcl", "t", "<", "T", ",", "ĠLC", "G", "<", "T", ">,", "ĠM", ">(", "r", ");", "Ċ", "}", "Ċ", "Ċ", "#", "define", "ĠCL", "T", "_", "T", "EST", "(", "M", ")\\", "Ċ", "static", "Ġvoid", "Ġnorm", "ald", "ist", "f", "_", "cl", "t", "##", "M", "(", "float", "*", "Ġdata", ",", "Ġsize", "_", "t", "Ġcount", ")", "Ġ{\\", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcl", "t", "<", "float", ",", "ĠM", ">(", "data", ",", "Ġcount", ");", "\\", "Ċ", "}\\", "Ċ", "static", "Ġvoid", "Ġnorm", "ald", "ist", "_", "cl", "t", "##", "M", "(", "double", "*", "Ġdata", ",", "Ġsize", "_", "t", "Ġcount", ")", "Ġ{\\", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcl", "t", "<", "double", ",", "ĠM", ">(", "data", ",", "Ġcount", ");", "\\", "Ċ", "}\\", "Ċ", "REG", "ISTER", "_", "T", "EST", "(", "cl", "t", "##", "M", ")", "Ċ", "Ċ", "CL", "T", "_", "T", "EST", "(", "4", ");", "Ċ", "CL", "T", "_", "T", "EST", "(", "8", ");", "Ċ", "CL", "T", "_", "T", "EST", "(", "16", ");", "Ċ"], "dataflow_graph": [["r", 31, "comesFrom", ["r"], [23]], ["M", 6, "comesFrom", ["M"], [0]], ["M", 11, "comesFrom", ["M"], [0]], ["M", 16, "comesFrom", ["M"], [0]], ["M", 33, "comesFrom", ["M"], [19]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 25, "comesFrom", ["i"], [24]], ["i", 27, "comesFrom", ["i"], [24]], ["i", 29, "comesFrom", ["i"], [24]], ["sum", 15, "comesFrom", ["sum"], [13]], ["inv", 18, "comesFrom", ["inv"], [3]], ["count", 26, "comesFrom", ["count"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::744", "code": "#include <iostream>\n#include <map>\n#define MAX(a,b) (a < b) ? b : a\n\nusing namespace std;\n\nmap<int, long long> h;\n\ninline long long coin(int n)\n{\n\tif(n <= 8)\n\t\treturn n;\n\tlong long r = h[n];\n\tif(!r)\n\t{\n\t\n\t\tr = MAX(n,coin(n >> 1) + coin(n / 3) + coin(n >> 2));\n\t\th[n] = r;\n\t}\n\treturn r;\n}\n\n\nint main()\n{\n\tregister long long n = 0, res = 0, i = 0;\n\t\n\tfor(i = 0; i < 10; i++)\n\t{\n\t\tcin>>n;\n\t\tif(n < 0)\n\t\t\tn *= -1;\n\t\tres = coin(n);\n\t\tif(n < res)\n\t\t\tcout<<res<<endl;\n\t\telse\n\t\t\tcout<<n<<endl;\n\t}\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "#", "define", "ĠMAX", "(", "a", ",", "b", ")", "Ġ(", "a", "Ġ<", "Ġb", ")", "Ġ?", "Ġb", "Ġ:", "Ġa", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "map", "<", "int", ",", "Ġlong", "Ġlong", ">", "Ġh", ";", "Ċ", "Ċ", "inline", "Ġlong", "Ġlong", "Ġcoin", "(", "int", "Ġn", ")", "Ċ", "{", "Ċ", "ĉ", "if", "(", "n", "Ġ<=", "Ġ8", ")", "Ċ", "ĉ", "ĉ", "return", "Ġn", ";", "Ċ", "ĉ", "long", "Ġlong", "Ġr", "Ġ=", "Ġh", "[", "n", "];", "Ċ", "ĉ", "if", "(", "!", "r", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "Ċ", "ĉ", "ĉ", "r", "Ġ=", "ĠMAX", "(", "n", ",", "coin", "(", "n", "Ġ>>", "Ġ1", ")", "Ġ+", "Ġcoin", "(", "n", "Ġ/", "Ġ3", ")", "Ġ+", "Ġcoin", "(", "n", "Ġ>>", "Ġ2", "));", "Ċ", "ĉ", "ĉ", "h", "[", "n", "]", "Ġ=", "Ġr", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġr", ";", "Ċ", "}", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "register", "Ġlong", "Ġlong", "Ġn", "Ġ=", "Ġ0", ",", "Ġres", "Ġ=", "Ġ0", ",", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "Ċ", "ĉ", "for", "(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ10", ";", "Ġi", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "cin", ">>", "n", ";", "Ċ", "ĉ", "ĉ", "if", "(", "n", "Ġ<", "Ġ0", ")", "Ċ", "ĉ", "ĉ", "ĉ", "n", "Ġ*", "=", "Ġ-", "1", ";", "Ċ", "ĉ", "ĉ", "res", "Ġ=", "Ġcoin", "(", "n", ");", "Ċ", "ĉ", "ĉ", "if", "(", "n", "Ġ<", "Ġres", ")", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "<<", "res", "<<", "end", "l", ";", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "<<", "n", "<<", "end", "l", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 7, "comesFrom", ["n"], [6]], ["n", 8, "comesFrom", ["n"], [6]], ["n", 11, "comesFrom", ["n"], [6]], ["n", 15, "comesFrom", ["n"], [6]], ["n", 17, "comesFrom", ["n"], [6]], ["n", 19, "comesFrom", ["n"], [6]], ["n", 21, "comesFrom", ["n"], [6]], ["n", 23, "comesFrom", ["n"], [6]], ["n", 34, "comesFrom", ["n"], [27]], ["n", 35, "comesFrom", ["n"], [27]], ["n", 39, "comesFrom", ["n"], [36]], ["n", 40, "comesFrom", ["n"], [36]], ["n", 46, "comesFrom", ["n"], [36]], ["h", 10, "comesFrom", ["h"], [4]], ["h", 22, "comesFrom", ["h"], [4]], ["r", 12, "comesFrom", ["r"], [9]], ["r", 24, "comesFrom", ["r"], [13]], ["r", 25, "comesFrom", ["r"], [13]], ["i", 31, "comesFrom", ["i"], [30]], ["i", 32, "comesFrom", ["i"], [30]], ["res", 41, "comesFrom", ["res"], [37]], ["res", 43, "comesFrom", ["res"], [37]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::745", "code": "#pragma once\n\n#include <string>\n#include \"../../../common.hpp\"\n#include \"../IParsable.hpp\"\n#include \"../MSExcel.common.hpp\"\n\nnamespace oless {\n\tnamespace excel {\n\t\tnamespace structures {\n\n            // see: https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/0bb7dda6-29a3-440d-b2be-a793540b3f16\n\t\t\tclass RefU : public IParseable {\n\t\t\tpublic:\n\t\t\t\tvirtual void Parse(unsigned char* buffer, std::size_t max, unsigned int offset) override {\n\t\t\t\t\tunsigned int index = offset;\n\n                    this->bytesRead = index - offset;\n                }\n            };\n        }\n    }\n}\n", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "../", "../", "../", "common", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "../", "IP", "ars", "able", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "../", "MS", "Ex", "cel", ".", "common", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġo", "less", "Ġ{", "Ċ", "ĉ", "names", "pace", "Ġexcel", "Ġ{", "Ċ", "ĉ", "ĉ", "names", "pace", "Ġstructures", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġsee", ":", "Ġhttps", "://", "docs", ".", "microsoft", ".", "com", "/", "en", "-", "us", "/", "opens", "pe", "cs", "/", "office", "_", "file", "_", "form", "ats", "/", "ms", "-", "x", "ls", "/", "0", "bb", "7", "dd", "a", "6", "-", "29", "a", "3", "-", "440", "d", "-", "b", "2", "be", "-", "a", "79", "35", "40", "b", "3", "f", "16", "Ċ", "ĉ", "ĉ", "ĉ", "class", "ĠRef", "U", "Ġ:", "Ġpublic", "ĠIP", "arse", "able", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "virtual", "Ġvoid", "ĠPar", "se", "(", "unsigned", "Ġchar", "*", "Ġbuffer", ",", "Ġstd", "::", "size", "_", "t", "Ġmax", ",", "Ġunsigned", "Ġint", "Ġoffset", ")", "Ġoverride", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "unsigned", "Ġint", "Ġindex", "Ġ=", "Ġoffset", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "bytes", "Read", "Ġ=", "Ġindex", "Ġ-", "Ġoffset", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["index", 7, "comesFrom", ["index"], [4]], ["offset", 8, "comesFrom", ["offset"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::746", "code": "//Language: GNU C++11\n\n\n#include <cstdio>\r\n#include <cstring>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n  int n;\r\n  int u[105][105];\r\n  vector< pair<int, int> > v;\r\n  scanf(\"%d\", &n);\r\n  memset(u, 0, sizeof u);\r\n  for (int i = 1; i <= n; i += 2)\r\n    for (int j = i+1; j <= n; j += 2)\r\n      v.push_back(make_pair(i, j));\r\n  for (int i = 2; i <= n; i += 2)\r\n    for (int j = i+1; j <= n; j += 2)\r\n      v.push_back(make_pair(i, j));\r\n  printf(\"%d\\n\", n = v.size());\r\n  for (int i = 0; i < n; ++i)\r\n    printf(\"%d %d\\n\", v[i].first, v[i].second);\r\n}", "code_tokens": ["Ġ//", "Language", ":", "ĠGNU", "ĠC", "++", "11", "ĊĊ", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "vector", ">", "č", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġint", "Ġn", ";", "č", "Ċ", "Ġ", "Ġint", "Ġu", "[", "105", "][", "105", "];", "č", "Ċ", "Ġ", "Ġvector", "<", "Ġpair", "<", "int", ",", "Ġint", ">", "Ġ>", "Ġv", ";", "č", "Ċ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "č", "Ċ", "Ġ", "Ġmem", "set", "(", "u", ",", "Ġ0", ",", "Ġsizeof", "Ġu", ");", "č", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "Ġ+=", "Ġ2", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġi", "+", "1", ";", "Ġj", "Ġ<=", "Ġn", ";", "Ġj", "Ġ+=", "Ġ2", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġv", ".", "push", "_", "back", "(", "make", "_", "pair", "(", "i", ",", "Ġj", "));", "č", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġi", "Ġ+=", "Ġ2", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġi", "+", "1", ";", "Ġj", "Ġ<=", "Ġn", ";", "Ġj", "Ġ+=", "Ġ2", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġv", ".", "push", "_", "back", "(", "make", "_", "pair", "(", "i", ",", "Ġj", "));", "č", "Ċ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġn", "Ġ=", "Ġv", ".", "size", "());", "č", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġ++", "i", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "Ġ%", "d", "\\", "n", "\",", "Ġv", "[", "i", "].", "first", ",", "Ġv", "[", "i", "].", "second", ");", "č", "Ċ", "}"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [2]], ["n", 12, "comesFrom", ["n"], [2]], ["n", 17, "comesFrom", ["n"], [2]], ["n", 26, "comesFrom", ["n"], [2]], ["n", 31, "comesFrom", ["n"], [2]], ["n", 44, "comesFrom", ["n"], [39]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 15, "comesFrom", ["i"], [13]], ["i", 22, "comesFrom", ["i"], [13]], ["i", 25, "comesFrom", ["i"], [24]], ["i", 29, "comesFrom", ["i"], [27]], ["i", 36, "comesFrom", ["i"], [27]], ["i", 43, "comesFrom", ["i"], [42]], ["i", 45, "comesFrom", ["i"], [42]], ["i", 48, "comesFrom", ["i"], [42]], ["i", 51, "comesFrom", ["i"], [42]], ["j", 16, "comesFrom", ["j"], [14]], ["j", 23, "comesFrom", ["j"], [18]], ["j", 30, "comesFrom", ["j"], [28]], ["j", 37, "comesFrom", ["j"], [32]], ["v", 19, "comesFrom", ["v"], [4]], ["v", 33, "comesFrom", ["v"], [4]], ["v", 40, "comesFrom", ["v"], [4]], ["v", 47, "comesFrom", ["v"], [4]], ["v", 50, "comesFrom", ["v"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::747", "code": "// { dg-do assemble }\n// { dg-xfail-if \"\" { xstormy16-*-* } { \"*\" } { \"\" } }\n// { dg-options \"\" }\n\n#ifdef __ia16__\n#define MAX 16\n#else\n#define MAX 256\n#endif\n\nextern \"C\" void qsort(void *base, __SIZE_TYPE__ nmemb, __SIZE_TYPE__ size,\n              int (*compar)(const void *, const void *));\n\nstruct R {\n  int count;\n  int state1;\n  int state2;\n};\n\nint cmp_d(const R* a, const R* b) {\n  return a->count > b->count;\n}\n\nnamespace CXX {\n  template<class T, int i1, int i2>\n    inline void qsort (T b[i1][i2], int (*cmp)(const T*, const T*)) {\n    ::qsort ((void*)b, i1*i2, sizeof(T), (int (*)(const void *, const void *))cmp);\n  }\n}\n\nusing namespace CXX;\n\nvoid sort_machine() {\n  struct R d[MAX][MAX];\n  qsort<R,MAX> (d, cmp_d);\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġassemble", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "xf", "ail", "-", "if", "Ġ\"\"", "Ġ{", "Ġx", "storm", "y", "16", "-", "*", "-", "*", "Ġ}", "Ġ{", "Ġ\"", "*", "\"", "Ġ}", "Ġ{", "Ġ\"\"", "Ġ}", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "options", "Ġ\"\"", "Ġ}", "Ċ", "Ċ", "#", "if", "def", "Ġ__", "ia", "16", "__", "Ċ", "#", "define", "ĠMAX", "Ġ16", "Ċ", "#", "else", "Ċ", "#", "define", "ĠMAX", "Ġ256", "Ċ", "#", "endif", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġvoid", "Ġq", "sort", "(", "void", "Ġ*", "base", ",", "Ġ__", "SIZE", "_", "TYPE", "__", "Ġn", "mem", "b", ",", "Ġ__", "SIZE", "_", "TYPE", "__", "Ġsize", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġ(*", "com", "par", ")(", "const", "Ġvoid", "Ġ*", ",", "Ġconst", "Ġvoid", "Ġ*", "));", "Ċ", "Ċ", "struct", "ĠR", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġcount", ";", "Ċ", "Ġ", "Ġint", "Ġstate", "1", ";", "Ċ", "Ġ", "Ġint", "Ġstate", "2", ";", "Ċ", "};", "Ċ", "Ċ", "int", "Ġc", "mp", "_", "d", "(", "const", "ĠR", "*", "Ġa", ",", "Ġconst", "ĠR", "*", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġa", "->", "count", "Ġ>", "Ġb", "->", "count", ";", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "ĠC", "XX", "Ġ{", "Ċ", "Ġ", "Ġtemplate", "<", "class", "ĠT", ",", "Ġint", "Ġi", "1", ",", "Ġint", "Ġi", "2", ">", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinline", "Ġvoid", "Ġq", "sort", "Ġ(", "T", "Ġb", "[", "i", "1", "][", "i", "2", "],", "Ġint", "Ġ(*", "cmp", ")(", "const", "ĠT", "*,", "Ġconst", "ĠT", "*", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ::", "q", "sort", "Ġ((", "void", "*)", "b", ",", "Ġi", "1", "*", "i", "2", ",", "Ġsizeof", "(", "T", "),", "Ġ(", "int", "Ġ(*", ")(", "const", "Ġvoid", "Ġ*", ",", "Ġconst", "Ġvoid", "Ġ*", "))", "cmp", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "using", "Ġnamespace", "ĠC", "XX", ";", "Ċ", "Ċ", "void", "Ġsort", "_", "machine", "()", "Ġ{", "Ċ", "Ġ", "Ġstruct", "ĠR", "Ġd", "[", "MAX", "][", "MAX", "];", "Ċ", "Ġ", "Ġq", "sort", "<", "R", ",", "MAX", ">", "Ġ(", "d", ",", "Ġc", "mp", "_", "d", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["i1", 22, "comesFrom", ["i1"], [18]], ["i1", 27, "comesFrom", ["i1"], [18]], ["i2", 23, "comesFrom", ["i2"], [19]], ["i2", 28, "comesFrom", ["i2"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::748", "code": "#include <iostream>\n#include <algorithm>\n#include <cstdio>\n\nusing namespace std;\n\nconst int MAXN = 50005;\n\nint v[MAXN];\n\nint main ()\n{\n    int N;\n    scanf(\"%d\",&N);\n    for (int i = 1; i <= N; i++)\n        scanf(\"%d\",&v[i]);\n    int max_ate_agora = 0;\n    int max_terminado_aqui = 0;\n    for (int i = 1; i <= N+1; i++)\n    {\n        max_terminado_aqui = max(0,max_terminado_aqui+v[i-1]);\n        max_ate_agora = max(max_terminado_aqui,max_ate_agora);\n    }\n    printf(\"%d\\n\",max_ate_agora);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "const", "Ġint", "ĠMAX", "N", "Ġ=", "Ġ5000", "5", ";", "Ċ", "Ċ", "int", "Ġv", "[", "MAX", "N", "];", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "ĠN", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "N", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "ĠN", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "&", "v", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġmax", "_", "ate", "_", "ag", "ora", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġmax", "_", "termin", "ado", "_", "aqu", "i", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "ĠN", "+", "1", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmax", "_", "termin", "ado", "_", "aqu", "i", "Ġ=", "Ġmax", "(", "0", ",", "max", "_", "termin", "ado", "_", "aqu", "i", "+", "v", "[", "i", "-", "1", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmax", "_", "ate", "_", "ag", "ora", "Ġ=", "Ġmax", "(", "max", "_", "termin", "ado", "_", "aqu", "i", ",", "max", "_", "ate", "_", "ag", "ora", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "max", "_", "ate", "_", "ag", "ora", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["MAXN", 3, "comesFrom", ["MAXN"], [1]], ["N", 7, "comesFrom", ["N"], [5]], ["N", 10, "comesFrom", ["N"], [5]], ["N", 19, "comesFrom", ["N"], [5]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 11, "comesFrom", ["i"], [8]], ["i", 14, "comesFrom", ["i"], [8]], ["i", 18, "comesFrom", ["i"], [17]], ["i", 20, "comesFrom", ["i"], [17]], ["i", 25, "comesFrom", ["i"], [17]], ["max_terminado_aqui", 23, "comesFrom", ["max_terminado_aqui"], [21]], ["max_terminado_aqui", 28, "comesFrom", ["max_terminado_aqui"], [21]], ["max_ate_agora", 29, "comesFrom", ["max_ate_agora"], [26]], ["max_ate_agora", 31, "comesFrom", ["max_ate_agora"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::749", "code": "#ifndef SERIALIZERNG_HPP\n#define SERIALIZERNG_HPP\n\n#include <random>\n#include <sstream>\n\n// MS compatible compilers support #pragma once\n#if defined(_MSC_VER) && (_MSC_VER >= 1020)\n#pragma once\n#endif\n#include <boost/config.hpp>\n#include <boost/filesystem/path.hpp>\n#include <boost/serialization/level.hpp>\nBOOST_CLASS_IMPLEMENTATION(std::mt19937, boost::serialization::object_serializable)\nnamespace boost { namespace serialization {\ntemplate<class Archive, class String, class Traits>\nvoid serialize(Archive& ar, std::mt19937& rng,\n                const unsigned int version)\n{\n\n     std::string s;\n     if(Archive::is_saving::value)\n     {\n         std::stringstream ss;\n         s << rng;\n         ss = s.str();\n     }\n\n     ar & boost::serialization::make_nvp(\"rng_string_rep\", s);\n\n     if(Archive::is_loading::value)\n     {\n         std::stringstream ss(s);\n         ss >> rng;\n     }\n}\n}}\n\n\n\n#endif // SERIALIZERNG_HPP\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠSER", "IAL", "IZ", "ER", "NG", "_", "H", "PP", "Ċ", "#", "define", "ĠSER", "IAL", "IZ", "ER", "NG", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ<", "random", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "Ċ", "//", "ĠMS", "Ġcompatible", "Ġcomp", "ilers", "Ġsupport", "Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "#", "if", "Ġdefined", "(_", "MS", "C", "_", "VER", ")", "Ġ&&", "Ġ(_", "MS", "C", "_", "VER", "Ġ>=", "Ġ10", "20", ")", "Ċ", "#", "pr", "ag", "ma", "Ġonce", "Ċ", "#", "endif", "Ċ", "#", "include", "Ġ<", "boost", "/", "config", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "files", "ystem", "/", "path", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "serial", "ization", "/", "level", ".", "h", "pp", ">", "Ċ", "B", "OO", "ST", "_", "CLASS", "_", "IM", "PLE", "MENT", "ATION", "(", "std", "::", "mt", "199", "37", ",", "Ġboost", "::", "serial", "ization", "::", "object", "_", "serial", "izable", ")", "Ċ", "names", "pace", "Ġboost", "Ġ{", "Ġnamespace", "Ġserial", "ization", "Ġ{", "Ċ", "template", "<", "class", "ĠArchive", ",", "Ġclass", "ĠString", ",", "Ġclass", "ĠTra", "its", ">", "Ċ", "void", "Ġserial", "ize", "(", "Arch", "ive", "&", "Ġar", ",", "Ġstd", "::", "mt", "199", "37", "&", "Ġr", "ng", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġunsigned", "Ġint", "Ġversion", ")", "Ċ", "{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "Arch", "ive", "::", "is", "_", "saving", "::", "value", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "stream", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "Ġ<<", "Ġr", "ng", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ=", "Ġs", ".", "str", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġar", "Ġ&", "Ġboost", "::", "serial", "ization", "::", "make", "_", "n", "vp", "(\"", "r", "ng", "_", "string", "_", "rep", "\",", "Ġs", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "Arch", "ive", "::", "is", "_", "loading", "::", "value", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "stream", "Ġss", "(", "s", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ>>", "Ġr", "ng", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "}}", "ĊĊ", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠSER", "IAL", "IZ", "ER", "NG", "_", "H", "PP", "Ċ"], "dataflow_graph": [["s", 14, "comesFrom", ["s"], [11]], ["s", 17, "comesFrom", ["s"], [11]], ["s", 21, "comesFrom", ["s"], [11]], ["ss", 23, "comesFrom", ["ss"], [16]], ["ss", 24, "comesFrom", ["ss"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::750", "code": "#include <hlog/include/file_commiter.hpp>\n\n#include <iostream>\n#include <fstream>\n\nnamespace haf\n{\nstd::ofstream *f{nullptr};\n\nvoid FileCommiter::init()\n{\n    f = new std::ofstream(\"log.txt\");\n}\n\nvoid FileCommiter::finish()\n{\n    (*f).flush();\n    (*f).close();\n    delete f;\n    f = nullptr;\n}\n\nvoid FileCommiter::commitlog(const char* const log_stream)\n{\n    (*f) << log_stream << std::endl;\n}\n\n}  // namespace haf\n", "code_tokens": ["Ġ#", "include", "Ġ<", "h", "log", "/", "include", "/", "file", "_", "comm", "iter", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "Ċ", "names", "pace", "Ġha", "f", "Ċ", "{", "Ċ", "std", "::", "of", "stream", "Ġ*", "f", "{", "null", "ptr", "};", "Ċ", "Ċ", "void", "ĠFile", "Comm", "iter", "::", "init", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġf", "Ġ=", "Ġnew", "Ġstd", "::", "of", "stream", "(\"", "log", ".", "txt", "\");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFile", "Comm", "iter", "::", "fin", "ish", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(*", "f", ").", "flush", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(*", "f", ").", "close", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġf", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġf", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFile", "Comm", "iter", "::", "commit", "log", "(", "const", "Ġchar", "*", "Ġconst", "Ġlog", "_", "stream", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(*", "f", ")", "Ġ<<", "Ġlog", "_", "stream", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġha", "f", "Ċ"], "dataflow_graph": [["f", 4, "comesFrom", ["f"], [2]], ["f", 6, "comesFrom", ["f"], [2]], ["f", 8, "comesFrom", ["f"], [2]], ["f", 12, "comesFrom", ["f"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::751", "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nint arr[1000];\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    for(int i=0; i<n; i++) {\n        scanf(\"%d\", &arr[i]);\n    }\n    sort(arr, arr+n);\n    for(int i=0; i<n; i++) {\n        printf(\"%d\\n\", arr[i]);\n    }\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġarr", "[", "1000", "];", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "arr", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsort", "(", "arr", ",", "Ġarr", "+", "n", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "n", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġarr", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [3]], ["n", 8, "comesFrom", ["n"], [3]], ["n", 16, "comesFrom", ["n"], [3]], ["n", 19, "comesFrom", ["n"], [3]], ["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 12, "comesFrom", ["i"], [6]], ["i", 18, "comesFrom", ["i"], [17]], ["i", 20, "comesFrom", ["i"], [17]], ["i", 23, "comesFrom", ["i"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::752", "code": "#include \"remorque.hpp\"\n\n// initialisation des variables statiques a l'exterieur de toute methode\nint Remorque::last_id = 0;\n\nstring Remorque::classname() {\n    return \"Remorque\";\n}\n\n// // les \"friend\" en premier (si nécessaire)\n// ostream& operator<<(ostream& os, const Remorque  &remorque) {\n//     return os << remorque.name;\n// }\n\nRemorque::Remorque(Instance* inst, string name, int x, int y, int capa)\n        : Site::Site(inst, name, x, y) {\n\n    this->id = Remorque::last_id++;\n    this->capa = capa;\n}\nRemorque::~Remorque() {\n}\n\nstring Remorque::to_s() {\n    // TODO : passer par super\n    stringstream buf;\n    buf << \"remorque \" << setw(4) << name\n        << setw(5) << x << setw(4) << y\n        << setw(5) << capa ;\n    return buf.str();\n}\nstring Remorque::to_s_long() {\n    stringstream buf;\n    buf << Site::to_s_long() << \" id=\" << id << \" capa=\" << capa;\n    return buf.str();\n}\n\n\n//./\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "rem", "or", "que", ".", "h", "pp", "\"", "Ċ", "Ċ", "//", "Ġinitial", "isation", "Ġdes", "Ġvariables", "Ġstat", "iques", "Ġa", "Ġl", "'", "ex", "ter", "ie", "ur", "Ġde", "Ġt", "oute", "Ġmeth", "ode", "Ċ", "int", "ĠRem", "or", "que", "::", "last", "_", "id", "Ġ=", "Ġ0", ";", "Ċ", "Ċ", "string", "ĠRem", "or", "que", "::", "class", "name", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ\"", "Rem", "or", "que", "\";", "Ċ", "}", "Ċ", "Ċ", "//", "Ġ//", "Ġles", "Ġ\"", "friend", "\"", "Ġen", "Ġpremier", "Ġ(", "si", "Ġn", "Ã©", "cess", "aire", ")", "Ċ", "//", "Ġo", "stream", "&", "Ġoperator", "<<", "(", "ost", "ream", "&", "Ġos", ",", "Ġconst", "ĠRem", "or", "que", "Ġ", "Ġ&", "rem", "or", "que", ")", "Ġ{", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġos", "Ġ<<", "Ġrem", "or", "que", ".", "name", ";", "Ċ", "//", "Ġ}", "Ċ", "Ċ", "Rem", "or", "que", "::", "Rem", "or", "que", "(", "Instance", "*", "Ġinst", ",", "Ġstring", "Ġname", ",", "Ġint", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġcap", "a", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠSite", "::", "Site", "(", "inst", ",", "Ġname", ",", "Ġx", ",", "Ġy", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "id", "Ġ=", "ĠRem", "or", "que", "::", "last", "_", "id", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "cap", "a", "Ġ=", "Ġcap", "a", ";", "Ċ", "}", "Ċ", "Rem", "or", "que", "::", "~", "Rem", "or", "que", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "string", "ĠRem", "or", "que", "::", "to", "_", "s", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠTOD", "O", "Ġ:", "Ġpasser", "Ġpar", "Ġsuper", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "stream", "Ġbuf", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbuf", "Ġ<<", "Ġ\"", "rem", "or", "que", "Ġ\"", "Ġ<<", "Ġset", "w", "(", "4", ")", "Ġ<<", "Ġname", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġset", "w", "(", "5", ")", "Ġ<<", "Ġx", "Ġ<<", "Ġset", "w", "(", "4", ")", "Ġ<<", "Ġy", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġset", "w", "(", "5", ")", "Ġ<<", "Ġcap", "a", "Ġ;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġbuf", ".", "str", "();", "Ċ", "}", "Ċ", "string", "ĠRem", "or", "que", "::", "to", "_", "s", "_", "long", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "stream", "Ġbuf", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbuf", "Ġ<<", "ĠSite", "::", "to", "_", "s", "_", "long", "()", "Ġ<<", "Ġ\"", "Ġid", "=\"", "Ġ<<", "Ġid", "Ġ<<", "Ġ\"", "Ġcap", "a", "=\"", "Ġ<<", "Ġcap", "a", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġbuf", ".", "str", "();", "Ċ", "}", "ĊĊ", "Ċ", "//", "./", "Ċ"], "dataflow_graph": [["name", 10, "comesFrom", ["name"], [4]], ["name", 22, "comesFrom", ["name"], [4]], ["x", 11, "comesFrom", ["x"], [5]], ["x", 24, "comesFrom", ["x"], [5]], ["y", 12, "comesFrom", ["y"], [6]], ["y", 26, "comesFrom", ["y"], [6]], ["capa", 15, "comesFrom", ["capa"], [7]], ["capa", 16, "comesFrom", ["capa"], [7]], ["capa", 28, "comesFrom", ["capa"], [7]], ["capa", 36, "comesFrom", ["capa"], [7]], ["buf", 20, "comesFrom", ["buf"], [19]], ["buf", 29, "comesFrom", ["buf"], [19]], ["buf", 33, "comesFrom", ["buf"], [32]], ["buf", 37, "comesFrom", ["buf"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::753", "code": "/*\n * RunningStats.cpp\n *\n *  Created on: Nov 10, 2011\n *      Author: Martin Uhrin\n */\n\n#include \"spl/math/RunningStats.h\"\n\n#include <limits>\n#include <cmath>\n\nnamespace spl {\nnamespace math {\n\nRunningStats::RunningStats():\nmyNum(0),\nmySum(0.0),\nmySqSum(0.0),\nmyMin(::std::numeric_limits<double>::max()),\nmyMax(-::std::numeric_limits<double>::max())\n{}\n\nvoid RunningStats::insert(const double x)\n{\n  ++myNum;\n  mySum += x;\n  mySqSum += x * x;\n  myMin = ::std::min(myMin, x);\n  myMax = ::std::max(myMax, x);\n}\n\nunsigned int RunningStats::num() const\n{\n  return myNum;\n}\n\ndouble RunningStats::min() const\n{\n  return myMin;\n}\n\ndouble RunningStats::max() const\n{\n  return myMax;\n}\n\ndouble RunningStats::mean() const\n{\n  return mySum / static_cast<double>(myNum);\n}\n\ndouble RunningStats::sum() const\n{\n  return mySum;\n}\n\ndouble RunningStats::sqSum() const\n{\n  return mySqSum;\n}\n\ndouble RunningStats::rms() const\n{\n  return ::std::sqrt(mySqSum / static_cast<double>(myNum));\n}\n\n}\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠRunning", "Stats", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠNov", "Ġ10", ",", "Ġ2011", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "ĠMartin", "ĠU", "hr", "in", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "spl", "/", "math", "/", "Running", "Stats", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "limits", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "Ċ", "names", "pace", "Ġspl", "Ġ{", "Ċ", "names", "pace", "Ġmath", "Ġ{", "Ċ", "Ċ", "Running", "Stats", "::", "Running", "Stats", "():", "Ċ", "my", "Num", "(", "0", "),", "Ċ", "my", "Sum", "(", "0", ".", "0", "),", "Ċ", "my", "S", "q", "Sum", "(", "0", ".", "0", "),", "Ċ", "my", "Min", "(", "::", "std", "::", "n", "umeric", "_", "limits", "<", "double", ">", "::", "max", "()", "),", "Ċ", "my", "Max", "(-", "::", "std", "::", "n", "umeric", "_", "limits", "<", "double", ">", "::", "max", "())", "Ċ", "{", "}", "Ċ", "Ċ", "void", "ĠRunning", "Stats", "::", "insert", "(", "const", "Ġdouble", "Ġx", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ++", "my", "Num", ";", "Ċ", "Ġ", "Ġmy", "Sum", "Ġ+=", "Ġx", ";", "Ċ", "Ġ", "Ġmy", "S", "q", "Sum", "Ġ+=", "Ġx", "Ġ*", "Ġx", ";", "Ċ", "Ġ", "Ġmy", "Min", "Ġ=", "Ġ::", "std", "::", "min", "(", "my", "Min", ",", "Ġx", ");", "Ċ", "Ġ", "Ġmy", "Max", "Ġ=", "Ġ::", "std", "::", "max", "(", "my", "Max", ",", "Ġx", ");", "Ċ", "}", "Ċ", "Ċ", "unsigned", "Ġint", "ĠRunning", "Stats", "::", "num", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmy", "Num", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠRunning", "Stats", "::", "min", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmy", "Min", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠRunning", "Stats", "::", "max", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmy", "Max", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠRunning", "Stats", "::", "mean", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmy", "Sum", "Ġ/", "Ġstatic", "_", "cast", "<", "double", ">(", "my", "Num", ");", "Ċ", "}", "Ċ", "Ċ", "double", "ĠRunning", "Stats", "::", "sum", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmy", "Sum", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠRunning", "Stats", "::", "sq", "Sum", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġmy", "S", "q", "Sum", ";", "Ċ", "}", "Ċ", "Ċ", "double", "ĠRunning", "Stats", "::", "r", "ms", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ::", "std", "::", "sq", "rt", "(", "my", "S", "q", "Sum", "Ġ/", "Ġstatic", "_", "cast", "<", "double", ">(", "my", "Num", "));", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["mySum", 31, "comesFrom", ["mySum"], [11]], ["mySum", 35, "comesFrom", ["mySum"], [11]], ["mySqSum", 37, "comesFrom", ["mySqSum"], [13]], ["mySqSum", 40, "comesFrom", ["mySqSum"], [13]], ["myMin", 18, "comesFrom", ["myMin"], [16]], ["myMin", 27, "comesFrom", ["myMin"], [16]], ["myMax", 22, "comesFrom", ["myMax"], [20]], ["myMax", 29, "comesFrom", ["myMax"], [20]], ["x", 12, "comesFrom", ["x"], [9]], ["x", 14, "comesFrom", ["x"], [9]], ["x", 15, "comesFrom", ["x"], [9]], ["x", 19, "comesFrom", ["x"], [9]], ["x", 23, "comesFrom", ["x"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::754", "code": "// unique_lock::operator= example\n#include <iostream>       // std::cout\n#include <thread>         // std::thread\n#include <mutex>          // std::mutex, std::unique_lock\n\nstd::mutex mtx;           // mutex for critical section\n\nvoid print_fifty (char c) {\n  std::unique_lock<std::mutex> lck;         // default-constructed\n  lck = std::unique_lock<std::mutex>(mtx);  // move-assigned\n  for (int i=0; i<50; ++i) { std::cout << c; }\n  std::cout << '\\n';\n}\n\nint main ()\n{\n  std::thread th1 (print_fifty,'*');\n  std::thread th2 (print_fifty,'$');\n\n  th1.join();\n  th2.join();\n\n  return 0;\n}", "code_tokens": ["Ġ//", "Ġunique", "_", "lock", "::", "operator", "=", "Ġexample", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġstd", "::", "c", "out", "Ċ", "#", "include", "Ġ<", "thread", ">", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġstd", "::", "thread", "Ċ", "#", "include", "Ġ<", "mut", "ex", ">", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġstd", "::", "mut", "ex", ",", "Ġstd", "::", "unique", "_", "lock", "Ċ", "Ċ", "std", "::", "mut", "ex", "Ġm", "tx", ";", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġmut", "ex", "Ġfor", "Ġcritical", "Ġsection", "Ċ", "Ċ", "void", "Ġprint", "_", "f", "ifty", "Ġ(", "char", "Ġc", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mut", "ex", ">", "Ġl", "ck", ";", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġdefault", "-", "con", "structed", "Ċ", "Ġ", "Ġl", "ck", "Ġ=", "Ġstd", "::", "unique", "_", "lock", "<", "std", "::", "mut", "ex", ">(", "mt", "x", ");", "Ġ", "Ġ//", "Ġmove", "-", "ass", "igned", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "<", "50", ";", "Ġ++", "i", ")", "Ġ{", "Ġstd", "::", "c", "out", "Ġ<<", "Ġc", ";", "Ġ}", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "thread", "Ġth", "1", "Ġ(", "print", "_", "f", "ifty", ",'", "*", "');", "Ċ", "Ġ", "Ġstd", "::", "thread", "Ġth", "2", "Ġ(", "print", "_", "f", "ifty", ",'", "$", "');", "ĊĊ", "Ġ", "Ġth", "1", ".", "join", "();", "Ċ", "Ġ", "Ġth", "2", ".", "join", "();", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["mtx", 6, "comesFrom", ["mtx"], [0]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 9, "comesFrom", ["i"], [7]], ["c", 11, "comesFrom", ["c"], [2]], ["th1", 18, "comesFrom", ["th1"], [14]], ["th2", 20, "comesFrom", ["th2"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::755", "code": "#include \"file_a.h\"\n#include <iostream>\n\nusing namespace std;\n\nFile_A::File_A(int a) : _a(a)\n{\n    cout << \"In File_A(int a): _a = \" << a << endl;\n}\n\nFile_A file(5);\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "file", "_", "a", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "File", "_", "A", "::", "File", "_", "A", "(", "int", "Ġa", ")", "Ġ:", "Ġ_", "a", "(", "a", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "In", "ĠFile", "_", "A", "(", "int", "Ġa", "):", "Ġ_", "a", "Ġ=", "Ġ\"", "Ġ<<", "Ġa", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ", "Ċ", "File", "_", "A", "Ġfile", "(", "5", ");", "Ċ"], "dataflow_graph": [["a", 4, "comesFrom", ["a"], [2]], ["a", 6, "comesFrom", ["a"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::756", "code": "#include \"TextRibbon.h\"\n#include <vector>\n\nTextRibbon::TextRibbon(int x, int y, std::string text, int fgColor, int bgColor) : Entity(x, y)\n{\n\tint length = text.length();\n\tPixel** pixelMap = new Pixel*[1];\n\tpixelMap[0] = new Pixel[length];\n\n\tfor (int index = 0; index < length; index++)\n\t{\n\t\tpixelMap[0][index].value = text[index];\n\t\tpixelMap[0][index].fgColor = fgColor;\n\t\tpixelMap[0][index].bgColor = bgColor;\n\t}\n\n\tthis->sprite = new Sprite(pixelMap, text.length(), 1);\n}\n\nTextRibbon::~TextRibbon()\n{\n\n}\n\nvoid TextRibbon::update(long delta)\n{\n\tBehaves::update(delta);\n}\n\nvoid TextRibbon::paint()\n{\n\tif (!centered) {\n\t\treturn Entity::paint();\n\t}\n\n\tConsoleBuffer::getInstance().writeCentered(sprite);\n}\n\nvoid TextRibbon::behaviorFinished(Behavior* behavior)\n{\n\t//\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Text", "R", "ib", "bon", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "Text", "R", "ib", "bon", "::", "Text", "R", "ib", "bon", "(", "int", "Ġx", ",", "Ġint", "Ġy", ",", "Ġstd", "::", "string", "Ġtext", ",", "Ġint", "Ġf", "g", "Color", ",", "Ġint", "Ġb", "g", "Color", ")", "Ġ:", "ĠEntity", "(", "x", ",", "Ġy", ")", "Ċ", "{", "Ċ", "ĉ", "int", "Ġlength", "Ġ=", "Ġtext", ".", "length", "();", "Ċ", "ĉ", "Pixel", "**", "Ġpixel", "Map", "Ġ=", "Ġnew", "ĠPixel", "*", "[", "1", "];", "Ċ", "ĉ", "pixel", "Map", "[", "0", "]", "Ġ=", "Ġnew", "ĠPixel", "[", "length", "];", "ĊĊ", "ĉ", "for", "Ġ(", "int", "Ġindex", "Ġ=", "Ġ0", ";", "Ġindex", "Ġ<", "Ġlength", ";", "Ġindex", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "pixel", "Map", "[", "0", "][", "index", "].", "value", "Ġ=", "Ġtext", "[", "index", "];", "Ċ", "ĉ", "ĉ", "pixel", "Map", "[", "0", "][", "index", "].", "fg", "Color", "Ġ=", "Ġf", "g", "Color", ";", "Ċ", "ĉ", "ĉ", "pixel", "Map", "[", "0", "][", "index", "].", "bg", "Color", "Ġ=", "Ġb", "g", "Color", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "this", "->", "spr", "ite", "Ġ=", "Ġnew", "ĠSprite", "(", "pixel", "Map", ",", "Ġtext", ".", "length", "(),", "Ġ1", ");", "Ċ", "}", "Ċ", "Ċ", "Text", "R", "ib", "bon", "::", "~", "Text", "R", "ib", "bon", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠText", "R", "ib", "bon", "::", "update", "(", "long", "Ġdelta", ")", "Ċ", "{", "Ċ", "ĉ", "Beh", "aves", "::", "update", "(", "d", "elta", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠText", "R", "ib", "bon", "::", "p", "aint", "()", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(!", "centered", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "ĠEntity", "::", "p", "aint", "();", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "Console", "Buffer", "::", "get", "Instance", "().", "write", "Cent", "ered", "(", "spr", "ite", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠText", "R", "ib", "bon", "::", "behavior", "Fin", "ished", "(", "Beh", "avior", "*", "Ġbehavior", ")", "Ċ", "{", "Ċ", "ĉ", "//", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 7, "comesFrom", ["x"], [1]], ["y", 8, "comesFrom", ["y"], [2]], ["text", 10, "comesFrom", ["text"], [3]], ["text", 22, "comesFrom", ["text"], [3]], ["text", 34, "comesFrom", ["text"], [3]], ["length", 11, "comesFrom", ["length"], [9]], ["length", 14, "comesFrom", ["length"], [9]], ["length", 17, "comesFrom", ["length"], [9]], ["length", 35, "comesFrom", ["length"], [9]], ["index", 16, "comesFrom", ["index"], [15]], ["index", 18, "comesFrom", ["index"], [15]], ["index", 20, "comesFrom", ["index"], [15]], ["index", 23, "comesFrom", ["index"], [15]], ["index", 25, "comesFrom", ["index"], [15]], ["index", 29, "comesFrom", ["index"], [15]], ["fgColor", 26, "comesFrom", ["fgColor"], [4]], ["fgColor", 27, "comesFrom", ["fgColor"], [4]], ["bgColor", 30, "comesFrom", ["bgColor"], [5]], ["bgColor", 31, "comesFrom", ["bgColor"], [5]], ["delta", 40, "comesFrom", ["delta"], [38]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::757", "code": "\n#include <editor/editorimage.hh>\n#include <cobalt/graphics/csimage.hh>\n\nEditorImage::EditorImage(cs::Image *image)\n{\n  CS_CLASS_GEN_CONSTR;\n  SetImage(image);\n}\n\nEditorImage::~EditorImage()\n{\n}\n\nvoid editor_image_clean_up(void *data)\n{\n\n\n  unsigned char *imageBuffer = reinterpret_cast<unsigned char*>(data);\n  printf(\"Cleanupat: %p\\n\", imageBuffer);\n  delete[] imageBuffer;\n}\n\nvoid EditorImage::SetImage(cs::Image *image)\n{\n  if (!image)\n  {\n    m_image = QImage();\n  }\n  else\n  {\n    size_t size = image->GetSize();\n    unsigned char *buffer = new unsigned char [size];\n    memcpy(buffer, image->GetData(), size);\n\n    QImage::Format format;\n    switch (image->GetPixelFormat())\n    {\n    case cs::ePF_R8G8B8A8U:\n      format = QImage::Format_RGBA8888;\n      break;\n    case cs::ePF_R8G8B8U:\n      format = QImage::Format_RGB888;\n      break;\n    }\n    printf(\"Buffer at: %p\\n\", buffer);\n    m_image = QImage((const uchar *)buffer, image->GetWidth(), image->GetHeight(), format, editor_image_clean_up, buffer);\n  }\n}", "code_tokens": ["Ċ", "#", "include", "Ġ<", "editor", "/", "editor", "image", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "c", "ob", "alt", "/", "g", "raphics", "/", "cs", "image", ".", "hh", ">", "Ċ", "Ċ", "Editor", "Image", "::", "Editor", "Image", "(", "cs", "::", "Image", "Ġ*", "image", ")", "Ċ", "{", "Ċ", "Ġ", "ĠCS", "_", "CLASS", "_", "GEN", "_", "CON", "STR", ";", "Ċ", "Ġ", "ĠSet", "Image", "(", "image", ");", "Ċ", "}", "Ċ", "Ċ", "Editor", "Image", "::", "~", "Editor", "Image", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "Ġeditor", "_", "image", "_", "clean", "_", "up", "(", "void", "Ġ*", "data", ")", "Ċ", "{", "ĊĊ", "Ċ", "Ġ", "Ġunsigned", "Ġchar", "Ġ*", "image", "Buffer", "Ġ=", "Ġre", "interpret", "_", "cast", "<", "unsigned", "Ġchar", "*", ">(", "data", ");", "Ċ", "Ġ", "Ġprintf", "(\"", "Clean", "up", "at", ":", "Ġ%", "p", "\\", "n", "\",", "Ġimage", "Buffer", ");", "Ċ", "Ġ", "Ġdelete", "[]", "Ġimage", "Buffer", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠEditor", "Image", "::", "Set", "Image", "(", "cs", "::", "Image", "Ġ*", "image", ")", "Ċ", "{", "Ċ", "Ġ", "Ġif", "Ġ(!", "image", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "image", "Ġ=", "ĠQ", "Image", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsize", "_", "t", "Ġsize", "Ġ=", "Ġimage", "->", "Get", "Size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġchar", "Ġ*", "buffer", "Ġ=", "Ġnew", "Ġunsigned", "Ġchar", "Ġ[", "size", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmem", "c", "py", "(", "buffer", ",", "Ġimage", "->", "Get", "Data", "(),", "Ġsize", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "Image", "::", "Format", "Ġformat", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġswitch", "Ġ(", "image", "->", "Get", "Pixel", "Format", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "Ġcs", "::", "e", "PF", "_", "R", "8", "G", "8", "B", "8", "A", "8", "U", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġformat", "Ġ=", "ĠQ", "Image", "::", "Format", "_", "RG", "BA", "88", "88", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "Ġcs", "::", "e", "PF", "_", "R", "8", "G", "8", "B", "8", "U", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġformat", "Ġ=", "ĠQ", "Image", "::", "Format", "_", "RGB", "888", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Buffer", "Ġat", ":", "Ġ%", "p", "\\", "n", "\",", "Ġbuffer", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "image", "Ġ=", "ĠQ", "Image", "((", "const", "Ġu", "char", "Ġ*)", "buffer", ",", "Ġimage", "->", "Get", "Width", "(),", "Ġimage", "->", "Get", "Height", "(),", "Ġformat", ",", "Ġeditor", "_", "image", "_", "clean", "_", "up", ",", "Ġbuffer", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}"], "dataflow_graph": [["size", 23, "comesFrom", ["size"], [19]], ["size", 28, "comesFrom", ["size"], [19]], ["format", 47, "comesFrom", ["format"], [36]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::758", "code": "\n/**\n * C++ : STL中的队列(queue)的演示程序。\n *\n * @author liangjisheng\n * @date 2017/10/09\n*/\n\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\nint main()\n{\n\tint tmp = 0;\n\tqueue<int> iqueue;\n\n\tiqueue.push(10);\n\tiqueue.push(20);\n\tiqueue.push(30);\n\n\tiqueue.pop();\n\n\ttmp = iqueue.front();\n\tcout << \"tmp = \" << tmp << endl;\n\n\tiqueue.push(40);\n\n\tcout << \"empty() = \" << iqueue.empty() << endl;\n\tcout << \"size() = \" << iqueue.size() << endl;\n\n\twhile(!iqueue.empty())\n\t{\n\t\ttmp = iqueue.front();\n\t\tcout << tmp << endl;\n\t\tiqueue.pop();\n\t}\n\n\tsystem(\"pause\");\n\treturn 0;\n}", "code_tokens": ["Ċ", "/**", "Ċ", "Ġ*", "ĠC", "++", "Ġ:", "ĠSTL", "ä¸Ń", "çļĦ", "é", "ĺ", "Ł", "åĪ", "Ĺ", "(", "queue", ")", "çļĦ", "æ", "¼", "Ķ", "ç", "¤", "º", "ç", "¨", "ĭ", "åº", "ı", "ãĢĤ", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ@", "author", "Ġli", "ang", "j", "is", "heng", "Ċ", "Ġ*", "Ġ@", "date", "Ġ2017", "/", "10", "/", "09", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "queue", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġtmp", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "queue", "<", "int", ">", "Ġi", "queue", ";", "ĊĊ", "ĉ", "ique", "ue", ".", "push", "(", "10", ");", "Ċ", "ĉ", "ique", "ue", ".", "push", "(", "20", ");", "Ċ", "ĉ", "ique", "ue", ".", "push", "(", "30", ");", "ĊĊ", "ĉ", "ique", "ue", ".", "pop", "();", "ĊĊ", "ĉ", "tmp", "Ġ=", "Ġi", "queue", ".", "front", "();", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "tmp", "Ġ=", "Ġ\"", "Ġ<<", "Ġtmp", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "ique", "ue", ".", "push", "(", "40", ");", "ĊĊ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "empty", "()", "Ġ=", "Ġ\"", "Ġ<<", "Ġi", "queue", ".", "empty", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "size", "()", "Ġ=", "Ġ\"", "Ġ<<", "Ġi", "queue", ".", "size", "()", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "while", "(", "!", "ique", "ue", ".", "empty", "())", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "tmp", "Ġ=", "Ġi", "queue", ".", "front", "();", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġtmp", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "ique", "ue", ".", "pop", "();", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "system", "(\"", "pause", "\");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["iqueue", 4, "comesFrom", ["iqueue"], [3]], ["iqueue", 6, "comesFrom", ["iqueue"], [3]], ["iqueue", 8, "comesFrom", ["iqueue"], [3]], ["iqueue", 10, "comesFrom", ["iqueue"], [3]], ["iqueue", 13, "comesFrom", ["iqueue"], [3]], ["iqueue", 18, "comesFrom", ["iqueue"], [3]], ["iqueue", 21, "comesFrom", ["iqueue"], [3]], ["iqueue", 25, "comesFrom", ["iqueue"], [3]], ["iqueue", 28, "comesFrom", ["iqueue"], [3]], ["iqueue", 31, "comesFrom", ["iqueue"], [3]], ["iqueue", 36, "comesFrom", ["iqueue"], [3]], ["tmp", 16, "comesFrom", ["tmp"], [12]], ["tmp", 34, "comesFrom", ["tmp"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::759", "code": "#include \"sqldatatypeitemdelegate.h\"\n\n#include <QComboBox>\n#include <QLineEdit>\n#include <QStringList>\n\nSqlDataTypeItemDelegate::SqlDataTypeItemDelegate(QObject *parent) :\n    QStyledItemDelegate(parent)\n{\n}\n\nQWidget *SqlDataTypeItemDelegate::createEditor(QWidget *parent, const QStyleOptionViewItem &option, const QModelIndex &index) const\n{\n    QStringList types;\n    types << \"INTEGER\" << \"REAL\" << \"TEXT\" << \"BOLB\" << \"vchar()\";\n\n    QComboBox *comboBox = new QComboBox(parent);\n    comboBox->setEditable(true);\n    comboBox->addItems(types);\n    //connect(comboBox, SIGNAL(currentTextChanged(QString)), S)\n    return comboBox;\n}\n\nvoid SqlDataTypeItemDelegate::setEditorData(QWidget *editor, const QModelIndex &index) const\n{\n    QComboBox *comboBox = static_cast<QComboBox *>(editor);\n    comboBox->lineEdit()->setText(index.data(Qt::EditRole).toString());\n}\n\nvoid SqlDataTypeItemDelegate::setModelData(QWidget *editor, QAbstractItemModel *model, const QModelIndex &index) const\n{\n    QComboBox *comboBox = static_cast<QComboBox *>(editor);\n    model->setData(index, comboBox->lineEdit()->text());\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "sq", "ld", "at", "at", "ype", "item", "de", "legate", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "Q", "Com", "bo", "Box", ">", "Ċ", "#", "include", "Ġ<", "QL", "ine", "Edit", ">", "Ċ", "#", "include", "Ġ<", "Q", "String", "List", ">", "Ċ", "Ċ", "S", "ql", "Data", "Type", "Item", "De", "legate", "::", "S", "ql", "Data", "Type", "Item", "De", "legate", "(", "Q", "Object", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Sty", "led", "Item", "De", "legate", "(", "parent", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Q", "Widget", "Ġ*", "S", "ql", "Data", "Type", "Item", "De", "legate", "::", "create", "Editor", "(", "Q", "Widget", "Ġ*", "parent", ",", "Ġconst", "ĠQ", "Style", "Option", "View", "Item", "Ġ&", "option", ",", "Ġconst", "ĠQ", "Model", "Index", "Ġ&", "index", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "String", "List", "Ġtypes", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtypes", "Ġ<<", "Ġ\"", "INT", "EG", "ER", "\"", "Ġ<<", "Ġ\"", "RE", "AL", "\"", "Ġ<<", "Ġ\"", "TEXT", "\"", "Ġ<<", "Ġ\"", "B", "OL", "B", "\"", "Ġ<<", "Ġ\"", "v", "char", "()", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "Com", "bo", "Box", "Ġ*", "com", "bo", "Box", "Ġ=", "Ġnew", "ĠQ", "Com", "bo", "Box", "(", "parent", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcombo", "Box", "->", "set", "Ed", "itable", "(", "true", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcombo", "Box", "->", "add", "Items", "(", "types", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "connect", "(", "com", "bo", "Box", ",", "ĠSIGN", "AL", "(", "current", "Text", "Changed", "(", "Q", "String", ")),", "ĠS", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcombo", "Box", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠS", "ql", "Data", "Type", "Item", "De", "legate", "::", "set", "Editor", "Data", "(", "Q", "Widget", "Ġ*", "editor", ",", "Ġconst", "ĠQ", "Model", "Index", "Ġ&", "index", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Com", "bo", "Box", "Ġ*", "com", "bo", "Box", "Ġ=", "Ġstatic", "_", "cast", "<", "Q", "Com", "bo", "Box", "Ġ*", ">(", "editor", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcombo", "Box", "->", "line", "Edit", "()", "->", "set", "Text", "(", "index", ".", "data", "(", "Q", "t", "::", "Edit", "Role", ").", "to", "String", "());", "Ċ", "}", "Ċ", "Ċ", "void", "ĠS", "ql", "Data", "Type", "Item", "De", "legate", "::", "set", "Model", "Data", "(", "Q", "Widget", "Ġ*", "editor", ",", "ĠQ", "Abstract", "Item", "Model", "Ġ*", "model", ",", "Ġconst", "ĠQ", "Model", "Index", "Ġ&", "index", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Com", "bo", "Box", "Ġ*", "com", "bo", "Box", "Ġ=", "Ġstatic", "_", "cast", "<", "Q", "Com", "bo", "Box", "Ġ*", ">(", "editor", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmodel", "->", "set", "Data", "(", "index", ",", "Ġcombo", "Box", "->", "line", "Edit", "()", "->", "text", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["types", 9, "comesFrom", ["types"], [8]], ["types", 16, "comesFrom", ["types"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::760", "code": "#include <iostream>\n#include <X11Window.hpp>\n\nint main( int p_Argc, char **p_ppArgv )\n{\n\tImageBuilder::X11Window TestWindow;\n\tImageBuilder::WINDOW_RECT WindowRect;\n\n\tWindowRect.X = 0;\n\tWindowRect.Y = 0;\n\tWindowRect.Width = 1024;\n\tWindowRect.Height = 768;\n\t\n\tTestWindow.Initialise( WindowRect );\n\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "X", "11", "Window", ".", "h", "pp", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "Ġint", "Ġp", "_", "Arg", "c", ",", "Ġchar", "Ġ**", "p", "_", "pp", "Arg", "v", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "Image", "Builder", "::", "X", "11", "Window", "ĠTest", "Window", ";", "Ċ", "ĉ", "Image", "Builder", "::", "WIND", "OW", "_", "RECT", "ĠWindow", "Rect", ";", "ĊĊ", "ĉ", "Window", "Rect", ".", "X", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "Window", "Rect", ".", "Y", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "Window", "Rect", ".", "Width", "Ġ=", "Ġ1024", ";", "Ċ", "ĉ", "Window", "Rect", ".", "Height", "Ġ=", "Ġ768", ";", "Ċ", "ĉ", "Ċ", "ĉ", "Test", "Window", ".", "Initial", "ise", "(", "ĠWindow", "Rect", "Ġ);", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["WindowRect", 5, "comesFrom", ["WindowRect"], [4]], ["WindowRect", 7, "comesFrom", ["WindowRect"], [4]], ["WindowRect", 9, "comesFrom", ["WindowRect"], [4]], ["WindowRect", 11, "comesFrom", ["WindowRect"], [4]], ["WindowRect", 15, "comesFrom", ["WindowRect"], [4]], ["TestWindow", 13, "comesFrom", ["TestWindow"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::761", "code": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tchar s[4],ch[260],s2[260],s3[260];\n\tint i,len,j,k,m;\n\tgets(s);\n\tgets(ch);\n\tlen=strlen(ch);\n\tif(ch[0]>='A'&&ch[0]<='Z')\n\t\tch[0]+=32;\n\tprintf(\"%s\",s);\n\tfor(i=0;i<=len;i++)\n\t{\n\t\tif(ch[i]=='s'&&ch[i-1]=='i'&&ch[i+1]==' ')\n\t\t{\n\t\t\tfor(j=i+1;j<=len-2;j++)\n\t\t\t\tprintf(\"%c\",ch[j]);\n\t\t\tprintf(\" \");\n\t\t\tfor(j=0;j<=i;j++)\n\t\t\t\tprintf(\"%c\",ch[j]);\n\t\t\tprintf(\"!\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "char", "Ġs", "[", "4", "],", "ch", "[", "260", "],", "s", "2", "[", "260", "],", "s", "3", "[", "260", "];", "Ċ", "ĉ", "int", "Ġi", ",", "len", ",", "j", ",", "k", ",", "m", ";", "Ċ", "ĉ", "gets", "(", "s", ");", "Ċ", "ĉ", "gets", "(", "ch", ");", "Ċ", "ĉ", "len", "=", "str", "len", "(", "ch", ");", "Ċ", "ĉ", "if", "(", "ch", "[", "0", "]", ">", "='", "A", "'", "&&", "ch", "[", "0", "]", "<", "='", "Z", "')", "Ċ", "ĉ", "ĉ", "ch", "[", "0", "]", "+=", "32", ";", "Ċ", "ĉ", "printf", "(\"", "%", "s", "\",", "s", ");", "Ċ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "=", "len", ";", "i", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "(", "ch", "[", "i", "]", "==", "'", "s", "'", "&&", "ch", "[", "i", "-", "1", "]", "==", "'", "i", "'", "&&", "ch", "[", "i", "+", "1", "]", "==", "'", "Ġ'", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "for", "(", "j", "=", "i", "+", "1", ";", "j", "<", "=", "len", "-", "2", ";", "j", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "%", "c", "\",", "ch", "[", "j", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "Ġ\"", ");", "Ċ", "ĉ", "ĉ", "ĉ", "for", "(", "j", "=", "0", ";", "j", "<", "=", "i", ";", "j", "++)", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "%", "c", "\",", "ch", "[", "j", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "!\"", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 23, "comesFrom", ["i"], [22]], ["i", 25, "comesFrom", ["i"], [22]], ["i", 27, "comesFrom", ["i"], [22]], ["i", 29, "comesFrom", ["i"], [22]], ["i", 31, "comesFrom", ["i"], [22]], ["i", 33, "comesFrom", ["i"], [22]], ["i", 43, "comesFrom", ["i"], [22]], ["len", 24, "comesFrom", ["len"], [14]], ["len", 35, "comesFrom", ["len"], [14]], ["j", 34, "comesFrom", ["j"], [32]], ["j", 36, "comesFrom", ["j"], [32]], ["j", 39, "comesFrom", ["j"], [32]], ["j", 42, "comesFrom", ["j"], [41]], ["j", 44, "comesFrom", ["j"], [41]], ["j", 47, "comesFrom", ["j"], [41]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::762", "code": "#include \"../include/console.h\"\r\n#include <QScrollBar>\r\n#include <QtCore/QDebug>\r\n\r\nConsole::Console(QWidget *parent)\r\n    : QPlainTextEdit(parent){\r\n\r\n    document()->setMaximumBlockCount(100);\r\n    QPalette p = palette();\r\n    p.setColor(QPalette::Base, Qt::black);\r\n    p.setColor(QPalette::Text, Qt::white);\r\n    setPalette(p);\r\n\r\n}\r\n\r\nvoid Console::putData(const QByteArray &data){\r\n\r\n    insertPlainText(QString(data));\r\n    insertPlainText(\"\\n\");\r\n\r\n    QScrollBar *bar = verticalScrollBar();\r\n    bar->setValue(bar->maximum());\r\n}\r\n\r\nvoid Console::keyPressEvent(QKeyEvent *e){\r\n\r\n    switch (e->key()) {\r\n    case Qt::Key_Backspace:\r\n    case Qt::Key_Left:\r\n    case Qt::Key_Right:\r\n    case Qt::Key_Up:\r\n    case Qt::Key_Down:\r\n        break;\r\n    default:\r\n        emit getData(e->text().toLocal8Bit());\r\n    }\r\n}\r\n\r\nvoid Console::mousePressEvent(QMouseEvent *e){\r\n\r\n    Q_UNUSED(e)\r\n    setFocus();\r\n}\r\n\r\n\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "../", "include", "/", "console", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "Q", "Scroll", "Bar", ">", "č", "Ċ", "#", "include", "Ġ<", "Q", "t", "Core", "/", "Q", "Debug", ">", "č", "Ċ", "č", "Ċ", "Console", "::", "Console", "(", "Q", "Widget", "Ġ*", "parent", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠQ", "Pl", "ain", "Text", "Edit", "(", "parent", "){", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdocument", "()", "->", "set", "Maximum", "Block", "Count", "(", "100", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Pal", "ette", "Ġp", "Ġ=", "Ġpalette", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", ".", "set", "Color", "(", "Q", "Pal", "ette", "::", "Base", ",", "ĠQt", "::", "black", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", ".", "set", "Color", "(", "Q", "Pal", "ette", "::", "Text", ",", "ĠQt", "::", "white", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Pal", "ette", "(", "p", ");", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠConsole", "::", "put", "Data", "(", "const", "ĠQ", "Byte", "Array", "Ġ&", "data", "){", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinsert", "Pl", "ain", "Text", "(", "Q", "String", "(", "data", "));", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinsert", "Pl", "ain", "Text", "(\"", "\\", "n", "\");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Scroll", "Bar", "Ġ*", "bar", "Ġ=", "Ġvertical", "Scroll", "Bar", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbar", "->", "set", "Value", "(", "bar", "->", "maximum", "());", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠConsole", "::", "key", "Press", "Event", "(", "Q", "Key", "Event", "Ġ*", "e", "){", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġswitch", "Ġ(", "e", "->", "key", "())", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠQt", "::", "Key", "_", "Back", "space", ":", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠQt", "::", "Key", "_", "Left", ":", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠQt", "::", "Key", "_", "Right", ":", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠQt", "::", "Key", "_", "Up", ":", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcase", "ĠQt", "::", "Key", "_", "Down", ":", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdefault", ":", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġemit", "Ġget", "Data", "(", "e", "->", "text", "().", "to", "Local", "8", "Bit", "());", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠConsole", "::", "mouse", "Press", "Event", "(", "Q", "Mouse", "Event", "Ġ*", "e", "){", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "UN", "US", "ED", "(", "e", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġset", "Focus", "();", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "č", "Ċ"], "dataflow_graph": [["p", 8, "comesFrom", ["p"], [6]], ["p", 12, "comesFrom", ["p"], [6]], ["p", 17, "comesFrom", ["p"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::763", "code": "#include <iostream>\r\n#include \"clparser.hpp\"\r\n\r\nusing std::cout;\r\nusing std::endl;\r\nusing std::string;\r\n\nstruct Employee\n{\n  string name;\n  int    age;\n  double salary;\n};\n\nconst char *argp_program_version = \"1.0\";\nconst char *argp_program_bug_address = \"<apostol.faliagas@gmail.com>\";\n\nint main(int argc, char *argv[])\r\n{\r\n  Employee employee = {\"noname\", 0, 0.};\n\n  try\n  {\n    CmdLineArgs cl(argc, argv);\n    cl.set_doc(\"Clparser argp example 6.4 -- Integer, string and FP options.\");\n    cl.option(\"name\", \"employee name\", &employee.name);\n    cl.option(\"age\", \"employee age\", &employee.age);\n    cl.option(\"salary\", \"employee salary\", &employee.salary);\n    cl.parse();\n  }\n  catch (string& error_msg)\n  {\n    cout << \"error: \" << error_msg << endl;\n    return 1;\n  }\n\n  cout << \"Employee data:\" << endl\n       << \"  name:   \" << employee.name   << endl\n       << \"  age:    \" << employee.age    << endl\n       << \"  salary: \" << employee.salary << endl;\n\r\n  return 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "Ġ\"", "cl", "parser", ".", "h", "pp", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "č", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "č", "Ċ", "using", "Ġstd", "::", "string", ";", "č", "Ċ", "Ċ", "struct", "ĠEmployee", "Ċ", "{", "Ċ", "Ġ", "Ġstring", "Ġname", ";", "Ċ", "Ġ", "Ġint", "Ġ", "Ġ", "Ġ", "Ġage", ";", "Ċ", "Ġ", "Ġdouble", "Ġsalary", ";", "Ċ", "};", "Ċ", "Ċ", "const", "Ġchar", "Ġ*", "arg", "p", "_", "program", "_", "version", "Ġ=", "Ġ\"", "1", ".", "0", "\";", "Ċ", "const", "Ġchar", "Ġ*", "arg", "p", "_", "program", "_", "bug", "_", "address", "Ġ=", "Ġ\"<", "ap", "ost", "ol", ".", "f", "ali", "ag", "as", "@", "gmail", ".", "com", ">", "\";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "č", "Ċ", "{", "č", "Ċ", "Ġ", "ĠEmployee", "Ġemployee", "Ġ=", "Ġ{\"", "non", "ame", "\",", "Ġ0", ",", "Ġ0", ".", "};", "ĊĊ", "Ġ", "Ġtry", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠC", "md", "Line", "Args", "Ġcl", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcl", ".", "set", "_", "doc", "(\"", "Cl", "parser", "Ġarg", "p", "Ġexample", "Ġ6", ".", "4", "Ġ--", "ĠInteger", ",", "Ġstring", "Ġand", "ĠFP", "Ġoptions", ".\"", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcl", ".", "option", "(\"", "name", "\",", "Ġ\"", "employ", "ee", "Ġname", "\",", "Ġ&", "employ", "ee", ".", "name", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcl", ".", "option", "(\"", "age", "\",", "Ġ\"", "employ", "ee", "Ġage", "\",", "Ġ&", "employ", "ee", ".", "age", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcl", ".", "option", "(\"", "sal", "ary", "\",", "Ġ\"", "employ", "ee", "Ġsalary", "\",", "Ġ&", "employ", "ee", ".", "sal", "ary", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcl", ".", "parse", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġcatch", "Ġ(", "string", "&", "Ġerror", "_", "msg", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "error", ":", "Ġ\"", "Ġ<<", "Ġerror", "_", "msg", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ1", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Employ", "ee", "Ġdata", ":\"", "Ġ<<", "Ġend", "l", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\"", "Ġ", "Ġname", ":", "Ġ", "Ġ", "Ġ\"", "Ġ<<", "Ġemployee", ".", "name", "Ġ", "Ġ", "Ġ<<", "Ġend", "l", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\"", "Ġ", "Ġage", ":", "Ġ", "Ġ", "Ġ", "Ġ\"", "Ġ<<", "Ġemployee", ".", "age", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġend", "l", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\"", "Ġ", "Ġsalary", ":", "Ġ\"", "Ġ<<", "Ġemployee", ".", "sal", "ary", "Ġ<<", "Ġend", "l", ";", "Ċ", "č", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["employee", 17, "comesFrom", ["employee"], [11]], ["employee", 21, "comesFrom", ["employee"], [11]], ["employee", 25, "comesFrom", ["employee"], [11]], ["employee", 35, "comesFrom", ["employee"], [11]], ["employee", 38, "comesFrom", ["employee"], [11]], ["employee", 41, "comesFrom", ["employee"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::764", "code": "\n#include <string>\n#include \"util/misc.h\"\n#include \"cunf/global.h\"\n#include \"cna/cunfsat.hh\"\n#include \"cna/speccheck.hh\"\n\nnamespace cna {\n\n/*\n * parsing some file\n */\nvoid test1 ()\n{\n\tSpeccheck v;\n\t\n\tv.load_spec (\"input\");\n\tv.verify ();\n}\n\n/*\n * understanding references\n */\nvoid test2 ()\n{\n\tint a, b;\n\n\ta = 1;\n\tb = 2;\n\n\tSHOW (a, \"d\");\n\tSHOW (b, \"d\");\n\tint & r = a;;\n\tr = 7;\n\tSHOW (a, \"d\");\n\tSHOW (b, \"d\");\n\tr = b;\n\tSHOW (a, \"d\");\n\tSHOW (b, \"d\");\n\tr = 8;\n\tSHOW (a, \"d\");\n\tSHOW (b, \"d\");\n}\n\n/*\n * ensure that std::hash(ptr) is just ptr!\n */\nvoid test3 ()\n{\n\tstd::hash<struct event *> h;\n\t// std::hash<struct event> hp; <-- std::hash is not specialized for this\n\tsize_t val;\n\n\tstruct event e1;\n\tstruct event e2;\n\n\tSHOW (h (0), \"lx\");\n\tSHOW (val = h (&e1), \"lx\");\n\tSHOW (h (&e1), \"lx\");\n\tSHOW (h (&e2), \"lx\");\n\tSHOW (&e1, \"p\");\n\tSHOW (&e2, \"p\");\n}\n\nvoid test ()\n{\n\ttest1 ();\n\t//test2 ();\n\t//test3 ();\n}\n\n} // namespace cna\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "util", "/", "misc", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "c", "un", "f", "/", "global", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "c", "na", "/", "c", "un", "fs", "at", ".", "hh", "\"", "Ċ", "#", "include", "Ġ\"", "c", "na", "/", "spe", "cc", "he", "ck", ".", "hh", "\"", "Ċ", "Ċ", "names", "pace", "Ġc", "na", "Ġ{", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ġparsing", "Ġsome", "Ġfile", "Ċ", "Ġ*/", "Ċ", "void", "Ġtest", "1", "Ġ()", "Ċ", "{", "Ċ", "ĉ", "Spe", "cc", "he", "ck", "Ġv", ";", "Ċ", "ĉ", "Ċ", "ĉ", "v", ".", "load", "_", "spec", "Ġ(\"", "input", "\");", "Ċ", "ĉ", "v", ".", "ver", "ify", "Ġ();", "Ċ", "}", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ġunderstanding", "Ġreferences", "Ċ", "Ġ*/", "Ċ", "void", "Ġtest", "2", "Ġ()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġa", ",", "Ġb", ";", "ĊĊ", "ĉ", "a", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "b", "Ġ=", "Ġ2", ";", "ĊĊ", "ĉ", "SH", "OW", "Ġ(", "a", ",", "Ġ\"", "d", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(", "b", ",", "Ġ\"", "d", "\");", "Ċ", "ĉ", "int", "Ġ&", "Ġr", "Ġ=", "Ġa", ";;", "Ċ", "ĉ", "r", "Ġ=", "Ġ7", ";", "Ċ", "ĉ", "SH", "OW", "Ġ(", "a", ",", "Ġ\"", "d", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(", "b", ",", "Ġ\"", "d", "\");", "Ċ", "ĉ", "r", "Ġ=", "Ġb", ";", "Ċ", "ĉ", "SH", "OW", "Ġ(", "a", ",", "Ġ\"", "d", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(", "b", ",", "Ġ\"", "d", "\");", "Ċ", "ĉ", "r", "Ġ=", "Ġ8", ";", "Ċ", "ĉ", "SH", "OW", "Ġ(", "a", ",", "Ġ\"", "d", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(", "b", ",", "Ġ\"", "d", "\");", "Ċ", "}", "Ċ", "Ċ", "/*", "Ċ", "Ġ*", "Ġensure", "Ġthat", "Ġstd", "::", "hash", "(", "ptr", ")", "Ġis", "Ġjust", "Ġptr", "!", "Ċ", "Ġ*/", "Ċ", "void", "Ġtest", "3", "Ġ()", "Ċ", "{", "Ċ", "ĉ", "std", "::", "hash", "<", "struct", "Ġevent", "Ġ*", ">", "Ġh", ";", "Ċ", "ĉ", "//", "Ġstd", "::", "hash", "<", "struct", "Ġevent", ">", "Ġhp", ";", "Ġ<", "--", "Ġstd", "::", "hash", "Ġis", "Ġnot", "Ġspecialized", "Ġfor", "Ġthis", "Ċ", "ĉ", "size", "_", "t", "Ġval", ";", "ĊĊ", "ĉ", "struct", "Ġevent", "Ġe", "1", ";", "Ċ", "ĉ", "struct", "Ġevent", "Ġe", "2", ";", "ĊĊ", "ĉ", "SH", "OW", "Ġ(", "h", "Ġ(", "0", "),", "Ġ\"", "l", "x", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(", "val", "Ġ=", "Ġh", "Ġ(&", "e", "1", "),", "Ġ\"", "l", "x", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(", "h", "Ġ(&", "e", "1", "),", "Ġ\"", "l", "x", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(", "h", "Ġ(&", "e", "2", "),", "Ġ\"", "l", "x", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(&", "e", "1", ",", "Ġ\"", "p", "\");", "Ċ", "ĉ", "SH", "OW", "Ġ(&", "e", "2", ",", "Ġ\"", "p", "\");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġtest", "Ġ()", "Ċ", "{", "Ċ", "ĉ", "test", "1", "Ġ();", "Ċ", "ĉ", "//", "test", "2", "Ġ();", "Ċ", "ĉ", "//", "test", "3", "Ġ();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġc", "na", "Ċ"], "dataflow_graph": [["v", 2, "comesFrom", ["v"], [1]], ["v", 4, "comesFrom", ["v"], [1]], ["a", 12, "comesFrom", ["a"], [9]], ["a", 19, "comesFrom", ["a"], [16]], ["a", 25, "comesFrom", ["a"], [16]], ["a", 30, "comesFrom", ["a"], [16]], ["b", 14, "comesFrom", ["b"], [10]], ["b", 21, "comesFrom", ["b"], [10]], ["b", 23, "comesFrom", ["b"], [10]], ["b", 27, "comesFrom", ["b"], [10]], ["b", 32, "comesFrom", ["b"], [10]], ["h", 39, "comesFrom", ["h"], [34]], ["h", 42, "comesFrom", ["h"], [34]], ["h", 45, "comesFrom", ["h"], [34]], ["h", 48, "comesFrom", ["h"], [34]], ["e1", 43, "comesFrom", ["e1"], [36]], ["e1", 46, "comesFrom", ["e1"], [36]], ["e1", 51, "comesFrom", ["e1"], [36]], ["e2", 49, "comesFrom", ["e2"], [37]], ["e2", 53, "comesFrom", ["e2"], [37]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::765", "code": "/* ---------------------------------------------------------------------------\n * Programa: busca_nombre\n * Entradas: Un nombre de persona sin espacios en blanco\n * Salidas:  Se indica si el nombre se encuentra entre una serie de nombres\n *           prefijados\n * --------------------------------------------------------------------------- */\n\n#include <iostream>\n#include <string>\n\nint main ()\n{\n\tconst std::string nombres[5] = { \"Julia\", \"Alfredo\", \"Mariano\", \"Pedro\", \"Ana\" };\n\tstd::string nombre;\n\tstd::cout << \"Introduce un nombre (sin espacios en blanco): \";\n\tstd::cin >> nombre;\n\tbool encontrado = false;\n\tfor (int i = 0; i < 5 && !encontrado; i++) {\n\t\tif (nombres[i] == nombre) {\n\t\t\tencontrado = true;\n\t\t}\n\t}\n\tif (encontrado)\n\t\tstd::cout << \"El nombre se encuentra entre los elementos del vector\\n\";\n\telse\n\t\tstd::cout << \"El nombre no se encuentra entre los elementos del vector\\n\";\n\treturn 0;\n}\n", "code_tokens": ["Ġ/*", "Ġ----------------------------------------------------------------", "-----------", "Ċ", "Ġ*", "ĠProgram", "a", ":", "Ġbus", "ca", "_", "n", "omb", "re", "Ċ", "Ġ*", "ĠEnt", "rad", "as", ":", "ĠUn", "Ġn", "omb", "re", "Ġde", "Ġpersona", "Ġsin", "Ġesp", "ac", "ios", "Ġen", "Ġbl", "anco", "Ċ", "Ġ*", "ĠSal", "idas", ":", "Ġ", "ĠSe", "Ġindic", "a", "Ġsi", "Ġel", "Ġn", "omb", "re", "Ġse", "Ġenc", "u", "ent", "ra", "Ġent", "re", "Ġun", "a", "Ġser", "ie", "Ġde", "Ġn", "omb", "res", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpref", "ij", "ados", "Ċ", "Ġ*", "Ġ----------------------------------------------------------------", "-----------", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "ĉ", "const", "Ġstd", "::", "string", "Ġn", "omb", "res", "[", "5", "]", "Ġ=", "Ġ{", "Ġ\"", "Jul", "ia", "\",", "Ġ\"", "A", "lf", "redo", "\",", "Ġ\"", "M", "arian", "o", "\",", "Ġ\"", "Ped", "ro", "\",", "Ġ\"", "An", "a", "\"", "Ġ};", "Ċ", "ĉ", "std", "::", "string", "Ġn", "omb", "re", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Introdu", "ce", "Ġun", "Ġn", "omb", "re", "Ġ(", "sin", "Ġesp", "ac", "ios", "Ġen", "Ġbl", "anco", "):", "Ġ\"", ";", "Ċ", "ĉ", "std", "::", "cin", "Ġ>>", "Ġn", "omb", "re", ";", "Ċ", "ĉ", "bool", "Ġenc", "ont", "r", "ado", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ5", "Ġ&&", "Ġ!", "en", "cont", "r", "ado", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "n", "omb", "res", "[", "i", "]", "Ġ==", "Ġn", "omb", "re", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "en", "cont", "r", "ado", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "if", "Ġ(", "en", "cont", "r", "ado", ")", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "El", "Ġn", "omb", "re", "Ġse", "Ġenc", "u", "ent", "ra", "Ġent", "re", "Ġlos", "Ġelement", "os", "Ġdel", "Ġvector", "\\", "n", "\";", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "El", "Ġn", "omb", "re", "Ġno", "Ġse", "Ġenc", "u", "ent", "ra", "Ġent", "re", "Ġlos", "Ġelement", "os", "Ġdel", "Ġvector", "\\", "n", "\";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["nombre", 5, "comesFrom", ["nombre"], [2]], ["nombre", 13, "comesFrom", ["nombre"], [2]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["i", 12, "comesFrom", ["i"], [7]], ["encontrado", 9, "comesFrom", ["encontrado"], [6]], ["encontrado", 15, "comesFrom", ["encontrado"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::766", "code": "#include \"SamplePlugin.h\"\n#include \"Fresnel.h\"\n\nusing namespace Ogre;\nusing namespace OgreBites;\n\n#ifndef OGRE_STATIC_LIB\n\nstatic SamplePlugin* sp;\nstatic Sample* s;\n\nextern \"C\" void _OgreSampleExport dllStartPlugin(void);\nextern \"C\" void _OgreSampleExport dllStopPlugin(void);\n\nextern \"C\" _OgreSampleExport void dllStartPlugin()\n{\n    s = new Sample_Fresnel;\n    sp = OGRE_NEW SamplePlugin(s->getInfo()[\"Title\"] + \" Sample\");\n    sp->addSample(s);\n    Root::getSingleton().installPlugin(sp);\n}\n\nextern \"C\" _OgreSampleExport void dllStopPlugin()\n{\n    Root::getSingleton().uninstallPlugin(sp); \n    OGRE_DELETE sp;\n    delete s;\n}\n\n#endif\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Sample", "Plugin", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "F", "res", "nel", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠOgre", ";", "Ċ", "using", "Ġnamespace", "ĠOgre", "B", "ites", ";", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠO", "GRE", "_", "STAT", "IC", "_", "LIB", "Ċ", "Ċ", "static", "ĠSample", "Plugin", "*", "Ġsp", ";", "Ċ", "static", "ĠSample", "*", "Ġs", ";", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġvoid", "Ġ_", "O", "gre", "Sample", "Export", "Ġd", "ll", "Start", "Plugin", "(", "void", ");", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġvoid", "Ġ_", "O", "gre", "Sample", "Export", "Ġd", "ll", "Stop", "Plugin", "(", "void", ");", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġ_", "O", "gre", "Sample", "Export", "Ġvoid", "Ġd", "ll", "Start", "Plugin", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", "Ġ=", "Ġnew", "ĠSample", "_", "F", "res", "nel", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsp", "Ġ=", "ĠO", "GRE", "_", "NEW", "ĠSample", "Plugin", "(", "s", "->", "get", "Info", "()", "[\"", "Title", "\"]", "Ġ+", "Ġ\"", "ĠSample", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsp", "->", "add", "Sample", "(", "s", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠRoot", "::", "get", "Sing", "leton", "().", "install", "Plugin", "(", "sp", ");", "Ċ", "}", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġ_", "O", "gre", "Sample", "Export", "Ġvoid", "Ġd", "ll", "Stop", "Plugin", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠRoot", "::", "get", "Sing", "leton", "().", "un", "install", "Plugin", "(", "sp", ");", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠO", "GRE", "_", "DE", "LE", "TE", "Ġsp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġs", ";", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["sp", 15, "comesFrom", ["sp"], [10]], ["sp", 20, "comesFrom", ["sp"], [10]], ["sp", 25, "comesFrom", ["sp"], [10]], ["s", 13, "comesFrom", ["s"], [9]], ["s", 17, "comesFrom", ["s"], [9]], ["s", 27, "comesFrom", ["s"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::767", "code": "#include \"DrawHelper.hpp\"\n#include \"Global.hpp\"\n\nvoid DrawThr::start()\n{\n\tbr = false;\n\tQThread::start();\n}\nvoid DrawThr::stop()\n{\n\tdrawHelper.drawMutex.lock();\n\tbr = true;\n\tdrawHelper.drawCond.wakeOne();\n\tdrawHelper.drawMutex.unlock();\n\twait();\n}\n\nvoid DrawThr::run()\n{\n\tqint64 t1 = Global::gettime();\n\tqint32 period = Global::getPeriod() * 1000000;\n\tdrawHelper.drawMutex.lock();\n\twhile ( !br )\n\t{\n\t\tif ( !br && !drawHelper.bufferReady )\n\t\t\tdrawHelper.drawCond.wait( &drawHelper.drawMutex );\n\t\tif ( !br )\n\t\t{\n\t\t\tqint64 t2 = Global::gettime();\n\t\t\tif ( ( t2 - t1 ) / 1000 >= period )\n\t\t\t{\n\t\t\t\tdrawHelper.draw();\n\t\t\t\tt1 = t2;\n\t\t\t}\n\t\t\tdrawHelper.bufferReady = false;\n\t\t}\n\t}\n\tdrawHelper.drawMutex.unlock();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Draw", "Helper", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Global", ".", "h", "pp", "\"", "Ċ", "Ċ", "void", "ĠDraw", "Th", "r", "::", "start", "()", "Ċ", "{", "Ċ", "ĉ", "br", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "Q", "Thread", "::", "start", "();", "Ċ", "}", "Ċ", "void", "ĠDraw", "Th", "r", "::", "stop", "()", "Ċ", "{", "Ċ", "ĉ", "draw", "Helper", ".", "draw", "Mut", "ex", ".", "lock", "();", "Ċ", "ĉ", "br", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "draw", "Helper", ".", "draw", "Cond", ".", "wake", "One", "();", "Ċ", "ĉ", "draw", "Helper", ".", "draw", "Mut", "ex", ".", "un", "lock", "();", "Ċ", "ĉ", "wait", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDraw", "Th", "r", "::", "run", "()", "Ċ", "{", "Ċ", "ĉ", "q", "int", "64", "Ġt", "1", "Ġ=", "ĠGlobal", "::", "get", "time", "();", "Ċ", "ĉ", "q", "int", "32", "Ġperiod", "Ġ=", "ĠGlobal", "::", "get", "Per", "iod", "()", "Ġ*", "Ġ100", "0000", ";", "Ċ", "ĉ", "draw", "Helper", ".", "draw", "Mut", "ex", ".", "lock", "();", "Ċ", "ĉ", "while", "Ġ(", "Ġ!", "br", "Ġ)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "Ġ!", "br", "Ġ&&", "Ġ!", "draw", "Helper", ".", "buffer", "Ready", "Ġ)", "Ċ", "ĉ", "ĉ", "ĉ", "draw", "Helper", ".", "draw", "Cond", ".", "wait", "(", "Ġ&", "draw", "Helper", ".", "draw", "Mut", "ex", "Ġ);", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "Ġ!", "br", "Ġ)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "q", "int", "64", "Ġt", "2", "Ġ=", "ĠGlobal", "::", "get", "time", "();", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "Ġ(", "Ġt", "2", "Ġ-", "Ġt", "1", "Ġ)", "Ġ/", "Ġ1000", "Ġ>=", "Ġperiod", "Ġ)", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "draw", "Helper", ".", "draw", "();", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "t", "1", "Ġ=", "Ġt", "2", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "draw", "Helper", ".", "buffer", "Ready", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "draw", "Helper", ".", "draw", "Mut", "ex", ".", "un", "lock", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["br", 23, "comesFrom", ["br"], [7]], ["br", 24, "comesFrom", ["br"], [7]], ["br", 32, "comesFrom", ["br"], [7]], ["t2", 35, "comesFrom", ["t2"], [33]], ["t2", 41, "comesFrom", ["t2"], [33]], ["t1", 36, "comesFrom", ["t1"], [16]], ["period", 37, "comesFrom", ["period"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::768", "code": "/*\n * OSS-Fuzz target for libfwnt LZX decompress function\n *\n * Copyright (C) 2009-2022, Joachim Metz <joachim.metz@gmail.com>\n *\n * Refer to AUTHORS for acknowledgements.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n#include <stddef.h>\n#include <stdint.h>\n\n/* Note that some of the OSS-Fuzz engines use C++\n */\nextern \"C\" {\n\n#include \"ossfuzz_libfwnt.h\"\n\nint LLVMFuzzerTestOneInput(\n     const uint8_t *data,\n     size_t size )\n{\n\tuint8_t uncompressed_data[ 64 * 1024 ];\n\n\tsize_t uncompressed_data_size = 64 * 1024;\n\n\tlibfwnt_lzx_decompress(\n\t data,\n\t size,\n\t uncompressed_data,\n\t &uncompressed_data_size,\n\t NULL );\n\n\treturn( 0 );\n}\n\n} /* extern \"C\" */\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠO", "SS", "-", "F", "uzz", "Ġtarget", "Ġfor", "Ġlib", "fw", "nt", "ĠL", "ZX", "Ġdecomp", "ress", "Ġfunction", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2009", "-", "20", "22", ",", "ĠJo", "ach", "im", "ĠMet", "z", "Ġ<", "jo", "ach", "im", ".", "met", "z", "@", "gmail", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠRefer", "Ġto", "ĠAUTH", "ORS", "Ġfor", "Ġacknowled", "gements", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "https", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "st", "dd", "ef", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "Ċ", "/*", "ĠNote", "Ġthat", "Ġsome", "Ġof", "Ġthe", "ĠO", "SS", "-", "F", "uzz", "Ġengines", "Ġuse", "ĠC", "++", "Ċ", "Ġ*/", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġ{", "Ċ", "Ċ", "#", "include", "Ġ\"", "oss", "f", "uzz", "_", "lib", "fw", "nt", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠLL", "VM", "F", "uzz", "er", "Test", "One", "Input", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġuint", "8", "_", "t", "Ġ*", "data", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsize", "_", "t", "Ġsize", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "uint", "8", "_", "t", "Ġuncomp", "ressed", "_", "data", "[", "Ġ64", "Ġ*", "Ġ1024", "Ġ];", "ĊĊ", "ĉ", "size", "_", "t", "Ġuncomp", "ressed", "_", "data", "_", "size", "Ġ=", "Ġ64", "Ġ*", "Ġ1024", ";", "ĊĊ", "ĉ", "lib", "fw", "nt", "_", "l", "zx", "_", "dec", "omp", "ress", "(", "Ċ", "ĉ", "Ġdata", ",", "Ċ", "ĉ", "Ġsize", ",", "Ċ", "ĉ", "Ġuncomp", "ressed", "_", "data", ",", "Ċ", "ĉ", "Ġ&", "un", "comp", "ressed", "_", "data", "_", "size", ",", "Ċ", "ĉ", "ĠNULL", "Ġ);", "ĊĊ", "ĉ", "return", "(", "Ġ0", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ/*", "Ġex", "tern", "Ġ\"", "C", "\"", "Ġ*/", "ĊĊ"], "dataflow_graph": [["size", 7, "comesFrom", ["size"], [2]], ["uncompressed_data_size", 9, "comesFrom", ["uncompressed_data_size"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::769", "code": "/**\n * @file transformer.cc\n * @brief Transformer implementation\n *\n * @date 2010-11-03\n * @authors Fabio R. Panettieri\n */\n\n#include \"../constants/constants.h\"\n#include \"../core/bounds.h\"\n#include \"../core/configuration.h\"\n#include \"../core/point.h\"\n#include \"../core/pixel.h\"\n#include \"./transformer.h\"\n\nnamespace acid_maps {\n\n/**\n * @ todo Store pixel positions in int*\n */\nvoid Transformer::transform(Bounds* bounds, Size* tile_size, Point dataset[],\n  int dataset_size, Pixel transformed_dataset[]) {\n\n  float bounds_width = bounds->max_x - bounds->min_x;\n  float bounds_height = bounds->max_y - bounds->min_y;\n\n  float horizontal_resolution = bounds_width / tile_size->width;\n  float vertical_resolution = bounds_height / tile_size->height;\n  \n  Pixel* pixel;\n  Point* point;\n  for (int i = 0; i < dataset_size; i++) {\n    point = dataset + i;\n    pixel = transformed_dataset + i;\n    \n    pixel->x = (int)((point->x - bounds->min_x) / horizontal_resolution);\n    pixel->y = (int)((bounds->max_y - point->y) / vertical_resolution);\n    pixel->value = point->value;\n  }\n}\n\n};  // namespace acid_maps\n\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "file", "Ġtransformer", ".", "cc", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĠTrans", "former", "Ġimplementation", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ@", "date", "Ġ2010", "-", "11", "-", "03", "Ċ", "Ġ*", "Ġ@", "authors", "ĠFab", "io", "ĠR", ".", "ĠPan", "ett", "ieri", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "const", "ants", "/", "const", "ants", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "core", "/", "b", "ounds", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "core", "/", "config", "uration", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "core", "/", "point", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "core", "/", "pixel", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "./", "trans", "former", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġacid", "_", "maps", "Ġ{", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "Ġ@", "Ġto", "do", "ĠStore", "Ġpixel", "Ġpositions", "Ġin", "Ġint", "*", "Ċ", "Ġ*/", "Ċ", "void", "ĠTrans", "former", "::", "transform", "(", "B", "ounds", "*", "Ġbounds", ",", "ĠSize", "*", "Ġtile", "_", "size", ",", "ĠPoint", "Ġdataset", "[", "],", "Ċ", "Ġ", "Ġint", "Ġdataset", "_", "size", ",", "ĠPixel", "Ġtransformed", "_", "dat", "as", "et", "[", "])", "Ġ{", "ĊĊ", "Ġ", "Ġfloat", "Ġbounds", "_", "width", "Ġ=", "Ġbounds", "->", "max", "_", "x", "Ġ-", "Ġbounds", "->", "min", "_", "x", ";", "Ċ", "Ġ", "Ġfloat", "Ġbounds", "_", "height", "Ġ=", "Ġbounds", "->", "max", "_", "y", "Ġ-", "Ġbounds", "->", "min", "_", "y", ";", "ĊĊ", "Ġ", "Ġfloat", "Ġhorizontal", "_", "resolution", "Ġ=", "Ġbounds", "_", "width", "Ġ/", "Ġtile", "_", "size", "->", "width", ";", "Ċ", "Ġ", "Ġfloat", "Ġvertical", "_", "resolution", "Ġ=", "Ġbounds", "_", "height", "Ġ/", "Ġtile", "_", "size", "->", "height", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "ĠPixel", "*", "Ġpixel", ";", "Ċ", "Ġ", "ĠPoint", "*", "Ġpoint", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġdataset", "_", "size", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpoint", "Ġ=", "Ġdataset", "Ġ+", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpixel", "Ġ=", "Ġtransformed", "_", "dat", "as", "et", "Ġ+", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpixel", "->", "x", "Ġ=", "Ġ(", "int", ")(", "(", "point", "->", "x", "Ġ-", "Ġbounds", "->", "min", "_", "x", ")", "Ġ/", "Ġhorizontal", "_", "resolution", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpixel", "->", "y", "Ġ=", "Ġ(", "int", ")(", "(", "b", "ounds", "->", "max", "_", "y", "Ġ-", "Ġpoint", "->", "y", ")", "Ġ/", "Ġvertical", "_", "resolution", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpixel", "->", "value", "Ġ=", "Ġpoint", "->", "value", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "};", "Ġ", "Ġ//", "Ġnamespace", "Ġacid", "_", "maps", "ĊĊ"], "dataflow_graph": [["bounds_width", 17, "comesFrom", ["bounds_width"], [6]], ["bounds_height", 21, "comesFrom", ["bounds_height"], [11]], ["pixel", 36, "comesFrom", ["pixel"], [33]], ["pixel", 43, "comesFrom", ["pixel"], [33]], ["pixel", 50, "comesFrom", ["pixel"], [33]], ["point", 38, "comesFrom", ["point"], [30]], ["point", 47, "comesFrom", ["point"], [30]], ["point", 52, "comesFrom", ["point"], [30]], ["i", 27, "comesFrom", ["i"], [26]], ["i", 29, "comesFrom", ["i"], [26]], ["i", 32, "comesFrom", ["i"], [26]], ["i", 35, "comesFrom", ["i"], [26]], ["dataset_size", 28, "comesFrom", ["dataset_size"], [4]], ["horizontal_resolution", 42, "comesFrom", ["horizontal_resolution"], [16]], ["vertical_resolution", 49, "comesFrom", ["vertical_resolution"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::770", "code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n   string inputString; // declare a variable to hold our input\n   getline(cin, inputString); // get a line of input from cin and save it to our variable\n  \n   // Your first line of output goes here\n   cout << \"Hello, World.\" << endl;\n\n   // Write the second line of output\n   cout << inputString << endl;\n\n   return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġstring", "Ġinput", "String", ";", "Ġ//", "Ġdeclare", "Ġa", "Ġvariable", "Ġto", "Ġhold", "Ġour", "Ġinput", "Ċ", "Ġ", "Ġ", "Ġget", "line", "(", "cin", ",", "Ġinput", "String", ");", "Ġ//", "Ġget", "Ġa", "Ġline", "Ġof", "Ġinput", "Ġfrom", "Ġc", "in", "Ġand", "Ġsave", "Ġit", "Ġto", "Ġour", "Ġvariable", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ//", "ĠYour", "Ġfirst", "Ġline", "Ġof", "Ġoutput", "Ġgoes", "Ġhere", "Ċ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Hello", ",", "ĠWorld", ".\"", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ//", "ĠWrite", "Ġthe", "Ġsecond", "Ġline", "Ġof", "Ġoutput", "Ċ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġinput", "String", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["inputString", 5, "comesFrom", ["inputString"], [2]], ["inputString", 9, "comesFrom", ["inputString"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::771", "code": "// collisions will be between positive asteroid followed by negative\n\nclass Solution {\npublic:\n    vector<int> asteroidCollision(vector<int>& asteroids) {\n        bool right_found; // found first asteroid going right (positive sign)\n        vector<int> ret;\n        for (a : asteroids) {\n            if (a < 0 && !right_found) {\n                ret.push_back(a);\n            }\n            else if (a >)\n        }\n    }\n};\n", "code_tokens": ["Ġ//", "Ġcollisions", "Ġwill", "Ġbe", "Ġbetween", "Ġpositive", "Ġasteroid", "Ġfollowed", "Ġby", "Ġnegative", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġasteroid", "Coll", "ision", "(", "vector", "<", "int", ">", "&", "Ġasteroids", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġright", "_", "found", ";", "Ġ//", "Ġfound", "Ġfirst", "Ġasteroid", "Ġgoing", "Ġright", "Ġ(", "positive", "Ġsign", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġret", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "a", "Ġ:", "Ġasteroids", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "Ġ<", "Ġ0", "Ġ&&", "Ġ!", "right", "_", "found", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġret", ".", "push", "_", "back", "(", "a", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "a", "Ġ>", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["right_found", 7, "comesFrom", ["right_found"], [2]], ["ret", 8, "comesFrom", ["ret"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::772", "code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\ntypedef unsigned long int ulint;\n\nint maxor(int L, int R) {\n\tint max = 0;\n\tfor(int i = L; i <= R; i++) {\n\t\tfor(int j = L; j <= R; j++) {\n\t\t\tif(max < (i ^ j)) {\n\t\t\t\tmax = i ^ j;\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nint main() {\n\tint L, R;\n\tcin>>L>>R;\n\t\n\tcout<<maxor(L, R) << endl;\n  \n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "ty", "ped", "ef", "Ġunsigned", "Ġlong", "Ġint", "Ġul", "int", ";", "Ċ", "Ċ", "int", "Ġmax", "or", "(", "int", "ĠL", ",", "Ġint", "ĠR", ")", "Ġ{", "Ċ", "ĉ", "int", "Ġmax", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "ĠL", ";", "Ġi", "Ġ<=", "ĠR", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "for", "(", "int", "Ġj", "Ġ=", "ĠL", ";", "Ġj", "Ġ<=", "ĠR", ";", "Ġj", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "max", "Ġ<", "Ġ(", "i", "Ġ^", "Ġj", "))", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "max", "Ġ=", "Ġi", "Ġ^", "Ġj", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġmax", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "int", "ĠL", ",", "ĠR", ";", "Ċ", "ĉ", "cin", ">>", "L", ">>", "R", ";", "Ċ", "ĉ", "Ċ", "ĉ", "c", "out", "<<", "max", "or", "(", "L", ",", "ĠR", ")", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [5]], ["i", 9, "comesFrom", ["i"], [5]], ["i", 16, "comesFrom", ["i"], [5]], ["i", 19, "comesFrom", ["i"], [5]], ["R", 8, "comesFrom", ["R"], [3]], ["R", 13, "comesFrom", ["R"], [3]], ["R", 27, "comesFrom", ["R"], [24]], ["R", 31, "comesFrom", ["R"], [24]], ["j", 12, "comesFrom", ["j"], [10]], ["j", 14, "comesFrom", ["j"], [10]], ["j", 17, "comesFrom", ["j"], [10]], ["j", 20, "comesFrom", ["j"], [10]], ["max", 15, "comesFrom", ["max"], [4]], ["max", 21, "comesFrom", ["max"], [18]], ["L", 26, "comesFrom", ["L"], [23]], ["L", 30, "comesFrom", ["L"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::773", "code": "/*编写名为compareIsbn的函数，比较两个Sales_data对象的isbn()成员。\n\t使用这个函数排序一个保存Sales_data对象的vector\n*/\n#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include\"Sales_data.h\"\n\nusing namespace std;\n\nbool compareIsbn(const Sales_data &sd1, const Sales_data &sd2)\n{\n\treturn sd1.isbn().size() < sd2.isbn().size();\n}\n\nint main()\n{\n\tSales_data d1(\"123\"), d2(\"12\"), d3(\"1234\"), d4(\"543\"), d5(\"12345\");\n\tvector<Sales_data> sd{ d1,d2,d3,d4,d5 };\n\tsort(sd.begin(), sd.end(), compareIsbn);\n\tfor (const auto &x : sd)\n\t\tcout << x.isbn() << \" \";\n\tcout << endl;\n\n\treturn 0;\n}", "code_tokens": ["Ġ/*", "ç", "¼", "ĸ", "åĨ", "Ļ", "åĲ", "į", "ä¸", "º", "comp", "are", "Is", "bn", "çļĦ", "åĩ", "½", "æķ", "°", "ï", "¼", "Į", "æ", "¯", "Ķ", "è", "¾", "ĥ", "ä¸", "¤", "ä¸", "ª", "Sales", "_", "data", "å¯", "¹", "è", "±", "¡", "çļĦ", "is", "bn", "()", "æĪ", "Ĳ", "åĳ", "ĺ", "ãĢĤ", "Ċ", "ĉ", "ä½¿", "çĶ", "¨", "è¿", "Ļ", "ä¸", "ª", "åĩ", "½", "æķ", "°", "æ", "İ", "Ĵ", "åº", "ı", "ä¸Ģ", "ä¸", "ª", "ä¿", "Ŀ", "åŃ", "ĺ", "Sales", "_", "data", "å¯", "¹", "è", "±", "¡", "çļĦ", "vector", "Ċ", "*/", "Ċ", "#", "include", "<", "i", "ost", "ream", ">", "Ċ", "#", "include", "<", "vector", ">", "Ċ", "#", "include", "<", "string", ">", "Ċ", "#", "include", "<", "al", "gorithm", ">", "Ċ", "#", "include", "\"", "Sales", "_", "data", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "bool", "Ġcompare", "Is", "bn", "(", "const", "ĠSales", "_", "data", "Ġ&", "sd", "1", ",", "Ġconst", "ĠSales", "_", "data", "Ġ&", "sd", "2", ")", "Ċ", "{", "Ċ", "ĉ", "return", "Ġsd", "1", ".", "is", "bn", "().", "size", "()", "Ġ<", "Ġsd", "2", ".", "is", "bn", "().", "size", "();", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "Sales", "_", "data", "Ġd", "1", "(\"", "123", "\"),", "Ġd", "2", "(\"", "12", "\"),", "Ġd", "3", "(\"", "12", "34", "\"),", "Ġd", "4", "(\"", "5", "43", "\"),", "Ġd", "5", "(\"", "123", "45", "\");", "Ċ", "ĉ", "vector", "<", "Sales", "_", "data", ">", "Ġsd", "{", "Ġd", "1", ",", "d", "2", ",", "d", "3", ",", "d", "4", ",", "d", "5", "Ġ};", "Ċ", "ĉ", "sort", "(", "sd", ".", "begin", "(),", "Ġsd", ".", "end", "(),", "Ġcompare", "Is", "bn", ");", "Ċ", "ĉ", "for", "Ġ(", "const", "Ġauto", "Ġ&", "x", "Ġ:", "Ġsd", ")", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġx", ".", "is", "bn", "()", "Ġ<<", "Ġ\"", "Ġ\"", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["d1", 17, "comesFrom", ["d1"], [11]], ["d2", 18, "comesFrom", ["d2"], [12]], ["d3", 19, "comesFrom", ["d3"], [13]], ["d4", 20, "comesFrom", ["d4"], [14]], ["d5", 21, "comesFrom", ["d5"], [15]], ["sd", 23, "comesFrom", ["sd"], [16]], ["sd", 25, "comesFrom", ["sd"], [16]], ["sd", 29, "comesFrom", ["sd"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::774", "code": "/******************************************************************************\n * Copyright 2017 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n\n#include \"modules/localization/msf/local_map/lossless_map/lossless_map_pool.h\"\n\nnamespace apollo {\nnamespace localization {\nnamespace msf {\n\nLosslessMapNodePool::LosslessMapNodePool(unsigned int pool_size,\n                                         unsigned int thread_size)\n    : BaseMapNodePool(pool_size, thread_size) {}\n\nBaseMapNode* LosslessMapNodePool::AllocNewMapNode() {\n  return new LosslessMapNode();\n}\n\n}  // namespace msf\n}  // namespace localization\n}  // namespace apollo\n", "code_tokens": ["Ġ/", "********************************", "********************************", "************", "**", "Ċ", "Ġ*", "ĠCopyright", "Ġ2017", "ĠThe", "ĠApollo", "ĠAuthors", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ********************************", "********************************", "************", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "modules", "/", "local", "ization", "/", "ms", "f", "/", "local", "_", "map", "/", "loss", "less", "_", "map", "/", "loss", "less", "_", "map", "_", "pool", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġap", "ollo", "Ġ{", "Ċ", "names", "pace", "Ġlocalization", "Ġ{", "Ċ", "names", "pace", "Ġms", "f", "Ġ{", "Ċ", "Ċ", "L", "oss", "less", "Map", "Node", "Pool", "::", "L", "oss", "less", "Map", "Node", "Pool", "(", "unsigned", "Ġint", "Ġpool", "_", "size", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġint", "Ġthread", "_", "size", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠBase", "Map", "Node", "Pool", "(", "pool", "_", "size", ",", "Ġthread", "_", "size", ")", "Ġ{}", "Ċ", "Ċ", "Base", "Map", "Node", "*", "ĠLoss", "less", "Map", "Node", "Pool", "::", "All", "oc", "New", "Map", "Node", "()", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġnew", "ĠLoss", "less", "Map", "Node", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġms", "f", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġlocalization", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġap", "ollo", "Ċ"], "dataflow_graph": [["pool_size", 4, "comesFrom", ["pool_size"], [1]], ["thread_size", 5, "comesFrom", ["thread_size"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::775", "code": "#include \"distanceRBCode.h\"\n\nvoid DistanceRBCode::startup() {\n\taddMessageEventFunc(BROADCAST_MSG,_myBROADCAST_MSGFunc);\n\tconsole << \"start \" << hostBlock->blockId << \"\\n\";\n\tif (hostBlock->blockId==1) { // master id is 1\n\t\tdistance=0;\n\t\thostBlock->setColor(RED);\n\t\tsendMessageToAllNeighbors(\"broadcast\",new MessageOf<uint16_t>(BROADCAST_MSG,0),2000,100,0);\n\t} else {\n\t\tdistance = UINT16_MAX;\n\t\thostBlock->setColor(LIGHTGREY);\n\t}\n}\n\nvoid DistanceRBCode::myBROADCAST_MSGFunc(const MessageOf<uint16_t>*msg, P2PNetworkInterface*sender) {\n\tuint16_t d = *(msg->getData())+1;\n\tconsole << \"rec.\" << d << \" from \" << sender->getConnectedBlockId() << \"\\n\";\n\tif (distance>d) {\n\t\tdistance=d;\n\t\thostBlock->setColor(Colors[distance%9]);\n\t\tsendMessageToAllNeighbors(\"broadcast\",new MessageOf<uint16_t>(BROADCAST_MSG,distance),2000,100,1,sender);\n\t}\n};\n\nvoid _myBROADCAST_MSGFunc(BlockCode *codebloc,MessagePtr msg, P2PNetworkInterface*sender) {\n\tDistanceRBCode *cb = (DistanceRBCode*)codebloc;\n\tMessageOf<uint16_t>*msgType = (MessageOf<uint16_t>*)msg.get();\n\tcb->myBROADCAST_MSGFunc(msgType,sender);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "distance", "R", "BC", "ode", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠDistance", "R", "BC", "ode", "::", "start", "up", "()", "Ġ{", "Ċ", "ĉ", "add", "Message", "Event", "F", "unc", "(", "BR", "OAD", "CAST", "_", "MS", "G", ",", "_", "my", "BR", "OAD", "CAST", "_", "MS", "GF", "unc", ");", "Ċ", "ĉ", "console", "Ġ<<", "Ġ\"", "start", "Ġ\"", "Ġ<<", "Ġhost", "Block", "->", "block", "Id", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĉ", "if", "Ġ(", "host", "Block", "->", "block", "Id", "==", "1", ")", "Ġ{", "Ġ//", "Ġmaster", "Ġid", "Ġis", "Ġ1", "Ċ", "ĉ", "ĉ", "distance", "=", "0", ";", "Ċ", "ĉ", "ĉ", "host", "Block", "->", "set", "Color", "(", "RED", ");", "Ċ", "ĉ", "ĉ", "send", "Message", "To", "All", "Neigh", "bors", "(\"", "broad", "cast", "\",", "new", "ĠMessage", "Of", "<", "uint", "16", "_", "t", ">(", "BR", "OAD", "CAST", "_", "MS", "G", ",", "0", "),", "2000", ",", "100", ",", "0", ");", "Ċ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "distance", "Ġ=", "ĠU", "INT", "16", "_", "MAX", ";", "Ċ", "ĉ", "ĉ", "host", "Block", "->", "set", "Color", "(", "L", "IGHT", "GRE", "Y", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠDistance", "R", "BC", "ode", "::", "my", "BR", "OAD", "CAST", "_", "MS", "GF", "unc", "(", "const", "ĠMessage", "Of", "<", "uint", "16", "_", "t", ">", "*", "msg", ",", "ĠP", "2", "P", "Network", "Interface", "*", "s", "ender", ")", "Ġ{", "Ċ", "ĉ", "uint", "16", "_", "t", "Ġd", "Ġ=", "Ġ*", "(", "msg", "->", "get", "Data", "())", "+", "1", ";", "Ċ", "ĉ", "console", "Ġ<<", "Ġ\"", "rec", ".\"", "Ġ<<", "Ġd", "Ġ<<", "Ġ\"", "Ġfrom", "Ġ\"", "Ġ<<", "Ġsender", "->", "get", "Connect", "ed", "Block", "Id", "()", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĉ", "if", "Ġ(", "distance", ">", "d", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "distance", "=", "d", ";", "Ċ", "ĉ", "ĉ", "host", "Block", "->", "set", "Color", "(", "Col", "ors", "[", "distance", "%", "9", "]);", "Ċ", "ĉ", "ĉ", "send", "Message", "To", "All", "Neigh", "bors", "(\"", "broad", "cast", "\",", "new", "ĠMessage", "Of", "<", "uint", "16", "_", "t", ">(", "BR", "OAD", "CAST", "_", "MS", "G", ",", "distance", "),", "2000", ",", "100", ",", "1", ",", "s", "ender", ");", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "void", "Ġ_", "my", "BR", "OAD", "CAST", "_", "MS", "GF", "unc", "(", "Block", "Code", "Ġ*", "code", "bl", "oc", ",", "Message", "Ptr", "Ġmsg", ",", "ĠP", "2", "P", "Network", "Interface", "*", "s", "ender", ")", "Ġ{", "Ċ", "ĉ", "Distance", "R", "BC", "ode", "Ġ*", "cb", "Ġ=", "Ġ(", "Distance", "R", "BC", "ode", "*)", "code", "bl", "oc", ";", "Ċ", "ĉ", "Message", "Of", "<", "uint", "16", "_", "t", ">", "*", "msg", "Type", "Ġ=", "Ġ(", "Message", "Of", "<", "uint", "16", "_", "t", ">", "*)", "msg", ".", "get", "();", "Ċ", "ĉ", "cb", "->", "my", "BR", "OAD", "CAST", "_", "MS", "GF", "unc", "(", "msg", "Type", ",", "s", "ender", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["msg", 49, "comesFrom", ["msg"], [44]], ["d", 27, "comesFrom", ["d"], [23]], ["d", 31, "comesFrom", ["d"], [23]], ["d", 33, "comesFrom", ["d"], [23]], ["distance", 30, "comesFrom", ["distance"], [15]], ["distance", 37, "comesFrom", ["distance"], [32]], ["distance", 40, "comesFrom", ["distance"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::776", "code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n  int n;\n  float pos = 0;\n  int nPos = 0;\n  float neg = 0;\n  int nNeg = 0;\n  float zer = 0;\n  int nZer = 0;\n  cin >> n;\n  vector<int> arr(n);\n  for (int arr_i = 0; arr_i < n; arr_i++) {\n    cin >> arr[arr_i];\n    if (arr[arr_i] > 0) {\n       nPos++; \n    } else if (arr[arr_i] < 0) {\n       nNeg++; \n    } else {\n       nZer++;\n    }\n  }\n  pos = nPos / float(n);\n  neg = nNeg / float(n);\n  zer = nZer / float(n);\n  cout << pos << endl;\n  cout << neg << endl;\n  cout << zer << endl;\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġfloat", "Ġpos", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġint", "Ġn", "Pos", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġfloat", "Ġneg", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġint", "Ġn", "Neg", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġfloat", "Ġz", "er", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġint", "Ġn", "Z", "er", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġvector", "<", "int", ">", "Ġarr", "(", "n", ");", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġarr", "_", "i", "Ġ=", "Ġ0", ";", "Ġarr", "_", "i", "Ġ<", "Ġn", ";", "Ġarr", "_", "i", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġarr", "[", "arr", "_", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "arr", "[", "arr", "_", "i", "]", "Ġ>", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Pos", "++;", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġif", "Ġ(", "arr", "[", "arr", "_", "i", "]", "Ġ<", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Neg", "++;", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Z", "er", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġpos", "Ġ=", "Ġn", "Pos", "Ġ/", "Ġfloat", "(", "n", ");", "Ċ", "Ġ", "Ġneg", "Ġ=", "Ġn", "Neg", "Ġ/", "Ġfloat", "(", "n", ");", "Ċ", "Ġ", "Ġz", "er", "Ġ=", "Ġn", "Z", "er", "Ġ/", "Ġfloat", "(", "n", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġpos", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġneg", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġz", "er", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 10, "comesFrom", ["n"], [2]], ["n", 14, "comesFrom", ["n"], [2]], ["n", 28, "comesFrom", ["n"], [2]], ["n", 31, "comesFrom", ["n"], [2]], ["n", 34, "comesFrom", ["n"], [2]], ["arr_i", 13, "comesFrom", ["arr_i"], [12]], ["arr_i", 15, "comesFrom", ["arr_i"], [12]], ["arr_i", 18, "comesFrom", ["arr_i"], [12]], ["arr_i", 20, "comesFrom", ["arr_i"], [12]], ["arr_i", 23, "comesFrom", ["arr_i"], [12]], ["nPos", 21, "comesFrom", ["nPos"], [4]], ["nPos", 27, "comesFrom", ["nPos"], [4]], ["nNeg", 24, "comesFrom", ["nNeg"], [6]], ["nNeg", 30, "comesFrom", ["nNeg"], [6]], ["nZer", 25, "comesFrom", ["nZer"], [8]], ["nZer", 33, "comesFrom", ["nZer"], [8]], ["pos", 36, "comesFrom", ["pos"], [26]], ["neg", 39, "comesFrom", ["neg"], [29]], ["zer", 42, "comesFrom", ["zer"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::777", "code": "#include <iostream>\n#include <fstream>\n#include \"stack-vm.h\"\n\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n\tif (argc < 2) {\n\t\tcout << \"Usage: \" << argv[0] << \" <filename>\" << endl;\n\t\treturn 0;\n\t}\n\n\tifstream r(argv[1], ios::binary);\n\ti32 i;\n\tvector<i32> prog;\n\n\twhile (r.read((char*)&i, sizeof(i))) {\n\t\tprog.push_back(i);\n\t}\n\n\tStackVM vm;\n\tvm.loadProgram(prog);\n\tvm.run();\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ\"", "stack", "-", "vm", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ġ{", "Ċ", "ĉ", "if", "Ġ(", "arg", "c", "Ġ<", "Ġ2", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Usage", ":", "Ġ\"", "Ġ<<", "Ġarg", "v", "[", "0", "]", "Ġ<<", "Ġ\"", "Ġ<", "filename", ">\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "if", "stream", "Ġr", "(", "arg", "v", "[", "1", "],", "Ġi", "os", "::", "binary", ");", "Ċ", "ĉ", "i", "32", "Ġi", ";", "Ċ", "ĉ", "vector", "<", "i", "32", ">", "Ġprog", ";", "ĊĊ", "ĉ", "while", "Ġ(", "r", ".", "read", "((", "char", "*)", "&", "i", ",", "Ġsizeof", "(", "i", ")))", "Ġ{", "Ċ", "ĉ", "ĉ", "pro", "g", ".", "push", "_", "back", "(", "i", ");", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "Stack", "VM", "Ġvm", ";", "Ċ", "ĉ", "vm", ".", "load", "Program", "(", "pro", "g", ");", "Ċ", "ĉ", "vm", ".", "run", "();", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 4, "comesFrom", ["argc"], [2]], ["i", 13, "comesFrom", ["i"], [9]], ["i", 14, "comesFrom", ["i"], [9]], ["i", 17, "comesFrom", ["i"], [9]], ["prog", 15, "comesFrom", ["prog"], [10]], ["prog", 21, "comesFrom", ["prog"], [10]], ["vm", 19, "comesFrom", ["vm"], [18]], ["vm", 22, "comesFrom", ["vm"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::778", "code": "//---------------------------------------------------------------------------//\n//!\n//! \\file   MonteCarlo_ParticleEnteringCellEventDispatcher.cpp\n//! \\author Alex Robinson\n//! \\brief  Particle entering cell event dispatcher declaration.\n//!\n//---------------------------------------------------------------------------//\n\n// FRENSIE Includes\n#include \"MonteCarlo_ParticleEnteringCellEventDispatcher.hpp\"\n#include \"Utility_ContractException.hpp\"\n\nnamespace MonteCarlo{\n\n// Constructor\nParticleEnteringCellEventDispatcher::ParticleEnteringCellEventDispatcher(\n\t\t     const Geometry::ModuleTraits::InternalCellHandle cell_id )\n  : ParticleEventDispatcher<Geometry::ModuleTraits::InternalCellHandle,\n\t\t\t    ParticleEnteringCellEventObserver>( cell_id )\n{ /* ... */ }\n\n// Dispatch the new event to the observers\nvoid ParticleEnteringCellEventDispatcher::dispatchParticleEnteringCellEvent(\n\t       const ParticleState& particle,\n\t       const Geometry::ModuleTraits::InternalCellHandle cell_entering )\n{\n  // Make sure the cell being entered is valid\n  testPrecondition( cell_entering == this->getId() );\n\n  ObserverIdMap::iterator it = observer_id_map().begin();\n\n  while( it != observer_id_map().end() )\n  {\n    it->second->updateFromParticleEnteringCellEvent( particle, cell_entering );\n\n    ++it;\n  }\n}\n\n} // end MonteCarlo namespace\n\n//---------------------------------------------------------------------------//\n// end MonteCarlo_ParticleEnteringCellEventDispatcher.cpp\n//---------------------------------------------------------------------------//\n", "code_tokens": ["Ġ//", "----------------------------------------------------------------", "-----------", "//", "Ċ", "//", "!", "Ċ", "//", "!", "Ġ\\", "file", "Ġ", "Ġ", "ĠMonte", "Car", "lo", "_", "Part", "icle", "Enter", "ing", "Cell", "Event", "Dis", "pat", "cher", ".", "cpp", "Ċ", "//", "!", "Ġ\\", "author", "ĠAlex", "ĠRobinson", "Ċ", "//", "!", "Ġ\\", "b", "rief", "Ġ", "ĠPart", "icle", "Ġentering", "Ġcell", "Ġevent", "Ġdispatcher", "Ġdeclaration", ".", "Ċ", "//", "!", "Ċ", "//", "----------------------------------------------------------------", "-----------", "//", "Ċ", "Ċ", "//", "ĠFR", "ENS", "IE", "ĠIncludes", "Ċ", "#", "include", "Ġ\"", "Mon", "te", "Car", "lo", "_", "Part", "icle", "Enter", "ing", "Cell", "Event", "Dis", "pat", "cher", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Ut", "ility", "_", "Contract", "Exception", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "ĠMonte", "Car", "lo", "{", "Ċ", "Ċ", "//", "ĠConstruct", "or", "Ċ", "Part", "icle", "Enter", "ing", "Cell", "Event", "Dis", "pat", "cher", "::", "Part", "icle", "Enter", "ing", "Cell", "Event", "Dis", "pat", "cher", "(", "Ċ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠGe", "ometry", "::", "Module", "Tra", "its", "::", "Internal", "Cell", "Handle", "Ġcell", "_", "id", "Ġ)", "Ċ", "Ġ", "Ġ:", "ĠPart", "icle", "Event", "Dis", "pat", "cher", "<", "Ge", "ometry", "::", "Module", "Tra", "its", "::", "Internal", "Cell", "Handle", ",", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "ĠPart", "icle", "Enter", "ing", "Cell", "Event", "Obs", "erver", ">(", "Ġcell", "_", "id", "Ġ)", "Ċ", "{", "Ġ/*", "Ġ...", "Ġ*/", "Ġ}", "Ċ", "Ċ", "//", "ĠDispatch", "Ġthe", "Ġnew", "Ġevent", "Ġto", "Ġthe", "Ġobservers", "Ċ", "void", "ĠPart", "icle", "Enter", "ing", "Cell", "Event", "Dis", "pat", "cher", "::", "dis", "patch", "Part", "icle", "Enter", "ing", "Cell", "Event", "(", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠPart", "icle", "State", "&", "Ġparticle", ",", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠGe", "ometry", "::", "Module", "Tra", "its", "::", "Internal", "Cell", "Handle", "Ġcell", "_", "ent", "ering", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "ĠMake", "Ġsure", "Ġthe", "Ġcell", "Ġbeing", "Ġentered", "Ġis", "Ġvalid", "Ċ", "Ġ", "Ġtest", "Pre", "condition", "(", "Ġcell", "_", "ent", "ering", "Ġ==", "Ġthis", "->", "get", "Id", "()", "Ġ);", "ĊĊ", "Ġ", "ĠObserver", "Id", "Map", "::", "iterator", "Ġit", "Ġ=", "Ġobserver", "_", "id", "_", "map", "().", "begin", "();", "ĊĊ", "Ġ", "Ġwhile", "(", "Ġit", "Ġ!=", "Ġobserver", "_", "id", "_", "map", "().", "end", "()", "Ġ)", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġit", "->", "second", "->", "update", "From", "Part", "icle", "Enter", "ing", "Cell", "Event", "(", "Ġparticle", ",", "Ġcell", "_", "ent", "ering", "Ġ);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ++", "it", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġend", "ĠMonte", "Car", "lo", "Ġnamespace", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "-----------", "//", "Ċ", "//", "Ġend", "ĠMonte", "Car", "lo", "_", "Part", "icle", "Enter", "ing", "Cell", "Event", "Dis", "pat", "cher", ".", "cpp", "Ċ", "//", "----------------------------------------------------------------", "-----------", "//", "Ċ"], "dataflow_graph": [["cell_id", 3, "comesFrom", ["cell_id"], [1]], ["cell_entering", 8, "comesFrom", ["cell_entering"], [6]], ["cell_entering", 20, "comesFrom", ["cell_entering"], [6]], ["it", 13, "comesFrom", ["it"], [10]], ["it", 16, "comesFrom", ["it"], [10]], ["it", 21, "comesFrom", ["it"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::779", "code": "// Copyright (c) 2015, Samvel Khalatyan. All rights reserved.\n\n#include <iostream>\n#include <locale>\n\n#include \"ch3/s4/separate_chaining_st.h\"\n\nusing std::cout;\nusing std::endl;\n\nnamespace {\n\nstruct Hash {\n    int32_t operator()(char ch) const {\n        return 11 * (ch - 'a');\n    }\n};\n\n}  // namespace\n\nint main(int, char*[]) {\n    algo::SeparateChainingST<char, bool, Hash> hash {5};\n    for (char ch : \"easyqution\") {\n        if (isalpha(ch)) {\n            ch = tolower(ch);\n            hash.Insert(ch, true);\n        }\n    }\n    hash.Print(cout);\n    cout << endl;\n    return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", ",", "ĠSam", "vel", "ĠKhal", "at", "yan", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "loc", "ale", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "ch", "3", "/", "s", "4", "/", "separ", "ate", "_", "ch", "aining", "_", "st", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġstd", "::", "c", "out", ";", "Ċ", "using", "Ġstd", "::", "end", "l", ";", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "struct", "ĠHash", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "32", "_", "t", "Ġoperator", "()", "(", "char", "Ġch", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ11", "Ġ*", "Ġ(", "ch", "Ġ-", "Ġ'", "a", "');", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "*", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġal", "go", "::", "Sep", "arate", "Ch", "aining", "ST", "<", "char", ",", "Ġbool", ",", "ĠHash", ">", "Ġhash", "Ġ{", "5", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "char", "Ġch", "Ġ:", "Ġ\"", "easy", "q", "ution", "\")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "is", "alpha", "(", "ch", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġch", "Ġ=", "Ġto", "lower", "(", "ch", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhash", ".", "Insert", "(", "ch", ",", "Ġtrue", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġhash", ".", "Print", "(", "c", "out", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["ch", 3, "comesFrom", ["ch"], [2]], ["ch", 6, "comesFrom", ["ch"], [2]], ["ch", 8, "comesFrom", ["ch"], [2]], ["ch", 11, "comesFrom", ["ch"], [9]], ["ch", 14, "comesFrom", ["ch"], [9]], ["hash", 12, "comesFrom", ["hash"], [5]], ["hash", 15, "comesFrom", ["hash"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::780", "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nmap <char, int> mp;\nint main ()\n{\n   int n;\n   string s;\n   cin >> n >> s;\n   int res = 0, temp = 0;\n   for (int i = 0; i < s.size(); i++) {\n      if (mp.find(s[i]) == mp.end()) {\n         mp[s[i]] = 1;\n      }\n      else res++;\n   }\n   for (char i = 'a'; i <= 'z'; i++) {\n      if (mp.find(i) == mp.end()) temp++;\n   }\n  // cout << res << \" \" << temp << endl;\n   if (temp < res) cout << \"-1\" << endl;\n   else cout << res << endl;\n   return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "ĠLL", ";", "Ċ", "map", "Ġ<", "char", ",", "Ġint", ">", "Ġmp", ";", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġstring", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġn", "Ġ>>", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġint", "Ġres", "Ġ=", "Ġ0", ",", "Ġtemp", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġs", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "mp", ".", "find", "(", "s", "[", "i", "])", "Ġ==", "Ġmp", ".", "end", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmp", "[", "s", "[", "i", "]]", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġres", "++;", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġfor", "Ġ(", "char", "Ġi", "Ġ=", "Ġ'", "a", "';", "Ġi", "Ġ<=", "Ġ'", "z", "';", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "mp", ".", "find", "(", "i", ")", "Ġ==", "Ġmp", ".", "end", "())", "Ġtemp", "++;", "Ċ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ//", "Ġcout", "Ġ<<", "Ġres", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġtemp", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġif", "Ġ(", "temp", "Ġ<", "Ġres", ")", "Ġcout", "Ġ<<", "Ġ\"-", "1", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġelse", "Ġcout", "Ġ<<", "Ġres", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [3]], ["s", 7, "comesFrom", ["s"], [4]], ["s", 12, "comesFrom", ["s"], [4]], ["s", 17, "comesFrom", ["s"], [4]], ["s", 22, "comesFrom", ["s"], [4]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 14, "comesFrom", ["i"], [10]], ["i", 18, "comesFrom", ["i"], [10]], ["i", 23, "comesFrom", ["i"], [10]], ["i", 26, "comesFrom", ["i"], [25]], ["i", 27, "comesFrom", ["i"], [25]], ["i", 30, "comesFrom", ["i"], [25]], ["mp", 15, "comesFrom", ["mp"], [1]], ["mp", 19, "comesFrom", ["mp"], [1]], ["mp", 21, "comesFrom", ["mp"], [1]], ["mp", 28, "comesFrom", ["mp"], [1]], ["mp", 31, "comesFrom", ["mp"], [1]], ["res", 24, "comesFrom", ["res"], [8]], ["res", 35, "comesFrom", ["res"], [8]], ["res", 39, "comesFrom", ["res"], [8]], ["temp", 33, "comesFrom", ["temp"], [9]], ["temp", 34, "comesFrom", ["temp"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::781", "code": "// https://stackoverflow.com/questions/35199079/fuzzy-regex-match-using-tre\n// Example by Wiktor Stribi\\u017cew \n\n#include <stdio.h>\n#include \"tre/tre.h\"\n\nint main() {\n    regex_t rx;\n    tre_regcomp(&rx, \"(January|February)\", REG_EXTENDED | REG_APPROX_MATCHER);\n\n    regaparams_t params;\n    params.cost_ins = 1;\n    params.cost_del = 1;\n    params.cost_subst = 1;\n    params.max_cost = 2;\n    params.max_del = 2;\n    params.max_ins = 2;\n    params.max_subst = 2;\n    params.max_err = 2;\n\n    regamatch_t match;\n    match.nmatch = 0;\n    match.pmatch = 0;\n\n    if (!tre_regaexec(&rx, \"Janvary\", &match, params, REG_NOTBOL | REG_NOTEOL)) {\n        printf(\"Levenshtein distance: %d\\n\", match.cost);\n\tif (match.cost != 1)\n\t{\n\t\tprintf( \"Edit distance mismatch in match\\n\");\n\t\treturn 2;\n\t}\n    } else {\n        printf(\"Failed to match\\n\");\n\treturn 1;\n    }\n    return 0;\n}\n", "code_tokens": ["Ġ//", "Ġhttps", "://", "stack", "over", "flow", ".", "com", "/", "quest", "ions", "/", "35", "199", "07", "9", "/", "f", "uzz", "y", "-", "re", "gex", "-", "match", "-", "using", "-", "tre", "Ċ", "//", "ĠExample", "Ġby", "ĠWik", "tor", "ĠSt", "rib", "i", "\\", "u", "017", "ce", "w", "Ġ", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "tre", "/", "tre", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġregex", "_", "t", "Ġr", "x", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtre", "_", "reg", "comp", "(&", "rx", ",", "Ġ\"(", "January", "|", "February", ")\",", "ĠREG", "_", "EXT", "ENDED", "Ġ|", "ĠREG", "_", "AP", "PRO", "X", "_", "M", "ATCH", "ER", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreg", "ap", "ar", "ams", "_", "t", "Ġparams", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "cost", "_", "ins", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "cost", "_", "del", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "cost", "_", "sub", "st", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "max", "_", "cost", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "max", "_", "del", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "max", "_", "ins", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "max", "_", "sub", "st", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġparams", ".", "max", "_", "err", "Ġ=", "Ġ2", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreg", "am", "atch", "_", "t", "Ġmatch", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmatch", ".", "n", "match", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmatch", ".", "pm", "atch", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "tre", "_", "reg", "a", "exec", "(&", "rx", ",", "Ġ\"", "Jan", "v", "ary", "\",", "Ġ&", "match", ",", "Ġparams", ",", "ĠREG", "_", "NOT", "B", "OL", "Ġ|", "ĠREG", "_", "NOTE", "OL", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Le", "ven", "sh", "tein", "Ġdistance", ":", "Ġ%", "d", "\\", "n", "\",", "Ġmatch", ".", "cost", ");", "Ċ", "ĉ", "if", "Ġ(", "match", ".", "cost", "Ġ!=", "Ġ1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "printf", "(", "Ġ\"", "Edit", "Ġdistance", "Ġmismatch", "Ġin", "Ġmatch", "\\", "n", "\");", "Ċ", "ĉ", "ĉ", "return", "Ġ2", ";", "Ċ", "ĉ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "F", "ailed", "Ġto", "Ġmatch", "\\", "n", "\");", "Ċ", "ĉ", "return", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["rx", 3, "comesFrom", ["rx"], [1]], ["rx", 29, "comesFrom", ["rx"], [1]], ["params", 7, "comesFrom", ["params"], [6]], ["params", 9, "comesFrom", ["params"], [6]], ["params", 11, "comesFrom", ["params"], [6]], ["params", 13, "comesFrom", ["params"], [6]], ["params", 15, "comesFrom", ["params"], [6]], ["params", 17, "comesFrom", ["params"], [6]], ["params", 19, "comesFrom", ["params"], [6]], ["params", 21, "comesFrom", ["params"], [6]], ["params", 31, "comesFrom", ["params"], [6]], ["match", 24, "comesFrom", ["match"], [23]], ["match", 26, "comesFrom", ["match"], [23]], ["match", 30, "comesFrom", ["match"], [23]], ["match", 35, "comesFrom", ["match"], [23]], ["match", 37, "comesFrom", ["match"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::782", "code": "#pragma once\n\n#include \"indexer/mwm_set.hpp\"\n\n#include \"platform/country_file.hpp\"\n#include \"platform/local_country_file.hpp\"\n#include \"platform/mwm_version.hpp\"\n\n#include \"geometry/rect2d.hpp\"\n\n#include <memory>\n\nusing platform::CountryFile;\nusing platform::LocalCountryFile;\n\nnamespace tests\n{\n\nclass TestMwmSet : public MwmSet\n{\nprotected:\n  /// @name MwmSet overrides\n  //@{\n  std::unique_ptr<MwmInfo> CreateInfo(platform::LocalCountryFile const & localFile) const override\n  {\n    int const n = localFile.GetCountryName()[0] - '0';\n    std::unique_ptr<MwmInfo> info(new MwmInfo());\n    info->m_maxScale = n;\n    info->m_bordersRect = m2::RectD(0, 0, 1, 1);\n    info->m_version.SetFormat(version::Format::lastFormat);\n    return info;\n  }\n\n  std::unique_ptr<MwmValue> CreateValue(MwmInfo & info) const override\n  {\n    return std::make_unique<MwmValue>(info.GetLocalFile());\n  }\n  //@}\n};\n\n}  // namespace\n", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "index", "er", "/", "m", "wm", "_", "set", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "platform", "/", "country", "_", "file", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "platform", "/", "local", "_", "country", "_", "file", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "platform", "/", "m", "wm", "_", "version", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "ge", "ometry", "/", "rect", "2", "d", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "using", "Ġplatform", "::", "Country", "File", ";", "Ċ", "using", "Ġplatform", "::", "Local", "Country", "File", ";", "Ċ", "Ċ", "names", "pace", "Ġtests", "Ċ", "{", "Ċ", "Ċ", "class", "ĠTest", "M", "wm", "Set", "Ġ:", "Ġpublic", "ĠM", "wm", "Set", "Ċ", "{", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġ///", "Ġ@", "name", "ĠM", "wm", "Set", "Ġoverr", "ides", "Ċ", "Ġ", "Ġ//", "@", "{", "Ċ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "M", "wm", "Info", ">", "ĠCreate", "Info", "(", "platform", "::", "Local", "Country", "File", "Ġconst", "Ġ&", "Ġlocal", "File", ")", "Ġconst", "Ġoverride", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġconst", "Ġn", "Ġ=", "Ġlocal", "File", ".", "Get", "Country", "Name", "()", "[", "0", "]", "Ġ-", "Ġ'", "0", "';", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "M", "wm", "Info", ">", "Ġinfo", "(", "new", "ĠM", "wm", "Info", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinfo", "->", "m", "_", "max", "Scale", "Ġ=", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinfo", "->", "m", "_", "b", "orders", "Rect", "Ġ=", "Ġm", "2", "::", "Rect", "D", "(", "0", ",", "Ġ0", ",", "Ġ1", ",", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinfo", "->", "m", "_", "version", ".", "Set", "Format", "(", "version", "::", "Format", "::", "last", "Format", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġinfo", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "M", "wm", "Value", ">", "ĠCreate", "Value", "(", "M", "wm", "Info", "Ġ&", "Ġinfo", ")", "Ġconst", "Ġoverride", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstd", "::", "make", "_", "unique", "<", "M", "wm", "Value", ">(", "info", ".", "Get", "Local", "File", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ//", "@", "}", "Ċ", "};", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ"], "dataflow_graph": [["info", 8, "comesFrom", ["info"], [7]], ["info", 11, "comesFrom", ["info"], [7]], ["info", 14, "comesFrom", ["info"], [7]], ["info", 18, "comesFrom", ["info"], [7]], ["info", 20, "comesFrom", ["info"], [7]], ["info", 22, "comesFrom", ["info"], [7]], ["n", 10, "comesFrom", ["n"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::783", "code": "#include \"GLMainRenderer.h\"\r\n#include \"../Display/DunoDisplayInfo.h\"\r\n#include <glm/gtc/matrix_transform.hpp>\r\n\r\n/* Renderer All */\r\nvoid GLMainRenderer::renderScene()\r\n{\r\n\t/* Deal with world lights */\r\n\tif (m_dirty_lights)\r\n\t{\r\n\t\tfor (GLRenderer* renderer : m_renderers)\r\n\t\t{\r\n\t\t\trenderer->updateLights(m_light_manager);\r\n\t\t}\r\n\t\tm_dirty_lights = false;\r\n\t}\r\n\r\n\t/* Render the scene */\r\n\tglClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\r\n\tfor (GLRenderer* renderer : m_renderers)\r\n\t{\r\n\t\trenderer->render(m_active_camera);\r\n\t}\r\n}\r\n\r\n/* Set Up All Projection Matrices */\r\nvoid GLMainRenderer::updateProjectionMatrix()\r\n{\r\n\tfloat aspect = (float)DunoDisplayInfo::getWidth() / (float)DunoDisplayInfo::getHeight();\r\n\tglm::mat4 projectionMatrix = glm::perspective(70.0F, aspect, 0.1F, 1000.0F);\r\n\tfor (GLRenderer* renderer : m_renderers)\r\n\t{\r\n\t\trenderer->setProjectionMatrix(projectionMatrix);\r\n\t}\r\n}\r\n\r\n/* Set Uses Depth Test */\r\nvoid GLMainRenderer::setEnableDepthTest(bool flag)\r\n{\r\n\tif (flag) glEnable(GL_DEPTH_TEST);\r\n\telse      glDisable(GL_DEPTH_TEST);\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "GL", "Main", "R", "end", "erer", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "../", "Display", "/", "Dun", "o", "Display", "Info", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "gl", "m", "/", "gt", "c", "/", "mat", "rix", "_", "transform", ".", "h", "pp", ">", "č", "Ċ", "č", "Ċ", "/*", "ĠRend", "erer", "ĠAll", "Ġ*/", "č", "Ċ", "void", "ĠGL", "Main", "R", "end", "erer", "::", "render", "Scene", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "/*", "ĠDeal", "Ġwith", "Ġworld", "Ġlights", "Ġ*/", "č", "Ċ", "ĉ", "if", "Ġ(", "m", "_", "dirty", "_", "lights", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "GL", "R", "end", "erer", "*", "Ġrend", "erer", "Ġ:", "Ġm", "_", "rend", "erers", ")", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "rend", "erer", "->", "update", "L", "ights", "(", "m", "_", "light", "_", "manager", ");", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "ĉ", "m", "_", "dirty", "_", "lights", "Ġ=", "Ġfalse", ";", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "/*", "ĠRender", "Ġthe", "Ġscene", "Ġ*/", "č", "Ċ", "ĉ", "gl", "Clear", "(", "GL", "_", "COLOR", "_", "BU", "FFER", "_", "BIT", "Ġ|", "ĠGL", "_", "DEP", "TH", "_", "BU", "FFER", "_", "BIT", ");", "č", "Ċ", "ĉ", "for", "Ġ(", "GL", "R", "end", "erer", "*", "Ġrend", "erer", "Ġ:", "Ġm", "_", "rend", "erers", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "rend", "erer", "->", "render", "(", "m", "_", "active", "_", "camera", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "/*", "ĠSet", "ĠUp", "ĠAll", "ĠProject", "ion", "ĠMat", "rices", "Ġ*/", "č", "Ċ", "void", "ĠGL", "Main", "R", "end", "erer", "::", "update", "Project", "ion", "Matrix", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "float", "Ġaspect", "Ġ=", "Ġ(", "float", ")", "Dun", "o", "Display", "Info", "::", "get", "Width", "()", "Ġ/", "Ġ(", "float", ")", "Dun", "o", "Display", "Info", "::", "get", "Height", "();", "č", "Ċ", "ĉ", "gl", "m", "::", "mat", "4", "Ġprojection", "Matrix", "Ġ=", "Ġgl", "m", "::", "pers", "pect", "ive", "(", "70", ".", "0", "F", ",", "Ġaspect", ",", "Ġ0", ".", "1", "F", ",", "Ġ1000", ".", "0", "F", ");", "č", "Ċ", "ĉ", "for", "Ġ(", "GL", "R", "end", "erer", "*", "Ġrend", "erer", "Ġ:", "Ġm", "_", "rend", "erers", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "rend", "erer", "->", "set", "Project", "ion", "Matrix", "(", "project", "ion", "Matrix", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "/*", "ĠSet", "ĠUses", "ĠDepth", "ĠTest", "Ġ*/", "č", "Ċ", "void", "ĠGL", "Main", "R", "end", "erer", "::", "set", "Enable", "Depth", "Test", "(", "bool", "Ġflag", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "if", "Ġ(", "flag", ")", "Ġgl", "Enable", "(", "GL", "_", "DEP", "TH", "_", "T", "EST", ");", "č", "Ċ", "ĉ", "else", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġgl", "Disable", "(", "GL", "_", "DEP", "TH", "_", "T", "EST", ");", "č", "Ċ", "}"], "dataflow_graph": [["aspect", 22, "comesFrom", ["aspect"], [17]], ["projectionMatrix", 27, "comesFrom", ["projectionMatrix"], [20]], ["flag", 30, "comesFrom", ["flag"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::784", "code": "//\n// ogles_gpgpu project - GPGPU for mobile devices and embedded systems using OpenGL ES 2.0 \n//\n// Author: Markus Konrad <post@mkonrad.net>, Winter 2014/2015 \n// http://www.mkonrad.net\n//\n// See LICENSE file in project repository root for the license.\n//\n\n#include \"og_pipeline.h\"\n\nstatic ogles_gpgpu::GrayscaleProc grayscaleProc;\nstatic ogles_gpgpu::AdaptThreshProc adaptThreshProc;\n\nvoid ogPipelineSetup(ogles_gpgpu::Core *core) {\n\tcore->setUseMipmaps(false);\n\n\t// set up grayscale processor\n\tgrayscaleProc.setOutputSize(0.5f);\n\n\t// set up adaptive thresholding processor\n\t// (nothing to set up here ...)\n\n\t// add the processors to the processing pipeline\n\tcore->addProcToPipeline(&grayscaleProc);\n\tcore->addProcToPipeline(&adaptThreshProc);\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġo", "g", "les", "_", "g", "pg", "pu", "Ġproject", "Ġ-", "ĠG", "PG", "PU", "Ġfor", "Ġmobile", "Ġdevices", "Ġand", "Ġembedded", "Ġsystems", "Ġusing", "ĠOpenGL", "ĠES", "Ġ2", ".", "0", "Ġ", "Ċ", "//", "Ċ", "//", "ĠAuthor", ":", "ĠMarkus", "ĠKon", "rad", "Ġ<", "post", "@", "mk", "on", "rad", ".", "net", ">,", "ĠWinter", "Ġ2014", "/", "2015", "Ġ", "Ċ", "//", "Ġhttp", "://", "www", ".", "mk", "on", "rad", ".", "net", "Ċ", "//", "Ċ", "//", "ĠSee", "ĠLIC", "ENSE", "Ġfile", "Ġin", "Ġproject", "Ġrepository", "Ġroot", "Ġfor", "Ġthe", "Ġlicense", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "og", "_", "p", "ip", "eline", ".", "h", "\"", "Ċ", "Ċ", "static", "Ġo", "g", "les", "_", "g", "pg", "pu", "::", "Gr", "ays", "cale", "Pro", "c", "Ġgr", "ays", "cale", "Pro", "c", ";", "Ċ", "static", "Ġo", "g", "les", "_", "g", "pg", "pu", "::", "Adapt", "Th", "resh", "Pro", "c", "Ġadapt", "Th", "resh", "Pro", "c", ";", "Ċ", "Ċ", "void", "Ġo", "g", "P", "ip", "eline", "Setup", "(", "og", "les", "_", "g", "pg", "pu", "::", "Core", "Ġ*", "core", ")", "Ġ{", "Ċ", "ĉ", "core", "->", "set", "Use", "M", "ip", "maps", "(", "false", ");", "ĊĊ", "ĉ", "//", "Ġset", "Ġup", "Ġgr", "ays", "cale", "Ġprocessor", "Ċ", "ĉ", "gr", "ays", "cale", "Pro", "c", ".", "set", "Output", "Size", "(", "0", ".", "5", "f", ");", "ĊĊ", "ĉ", "//", "Ġset", "Ġup", "Ġadaptive", "Ġthreshold", "ing", "Ġprocessor", "Ċ", "ĉ", "//", "Ġ(", "nothing", "Ġto", "Ġset", "Ġup", "Ġhere", "Ġ...", ")", "ĊĊ", "ĉ", "//", "Ġadd", "Ġthe", "Ġprocessors", "Ġto", "Ġthe", "Ġprocessing", "Ġpipeline", "Ċ", "ĉ", "core", "->", "add", "Pro", "c", "To", "P", "ip", "eline", "(&", "gr", "ays", "cale", "Pro", "c", ");", "Ċ", "ĉ", "core", "->", "add", "Pro", "c", "To", "P", "ip", "eline", "(&", "adapt", "Th", "resh", "Pro", "c", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["grayscaleProc", 6, "comesFrom", ["grayscaleProc"], [0]], ["grayscaleProc", 10, "comesFrom", ["grayscaleProc"], [0]], ["adaptThreshProc", 13, "comesFrom", ["adaptThreshProc"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::785", "code": "// C++ Libraries\n#include <stdio.h>\n#include <iostream>\n#include <string>\n\n// OpenCV Libraries\n#include <opencv/cxcore.h>\n#include \"opencv2/highgui/highgui.hpp\"\n\n// OpenARK Libraries\n#include \"PMDCamera.h\"\n#include \"Visualizer.h\"\n#include \"Hand.h\"\n#include \"Plane.h\"\n#include \"Util.h\"\n\nint main() {\n\tDepthCamera* pmd = new PMDCamera(false);\n\tint frame = 0;\n\n\twhile (true)\n\t{\n\t\t// Load in the debug data\n\t\tstd::string filename = \"..//OpenARK_Datasets//HandDataSet1//img\" + std::to_string(frame) + \".yml\";\n\t\tif (!pmd->readImage(filename))\n\t\t\tbreak;\n\n\t\t// Remove noise on the frame\n\t\tpmd->removeNoise();\n\t\tcv::imshow(\"XYZ Map\", Visualizer::visualizeXYZMap(pmd->getXYZMap()));\n\n\t\t// Find the right hand\n\t\tHand right_hand = Hand(pmd->getClusters());\n\n\t\t// Show the hand\n\t\tcv::imshow(\"Hand\", Visualizer::visualizeHand(pmd->getXYZMap(), right_hand.pointer_finger_ij, right_hand.shape_centroid_ij));\n\n\n\t\t/**** Start: Loop Break Condition ****/\n\t\tint c = cvWaitKey(1);\n\t\tif (c == 'q' || c == 'Q' || c == 27) {\n\t\t\tbreak;\n\t\t}\n\t\t/**** End: Loop Break Condition ****/\n\n\t\tframe++;\n\t}\n\n\tpmd->destroyInstance();\n\treturn 0;\n}", "code_tokens": ["Ġ//", "ĠC", "++", "ĠLibraries", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "//", "ĠOpen", "CV", "ĠLibraries", "Ċ", "#", "include", "Ġ<", "open", "cv", "/", "c", "x", "core", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "open", "cv", "2", "/", "high", "gui", "/", "high", "gui", ".", "h", "pp", "\"", "Ċ", "Ċ", "//", "ĠOpen", "ARK", "ĠLibraries", "Ċ", "#", "include", "Ġ\"", "PM", "DC", "amera", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Visual", "izer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Hand", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Pl", "ane", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Ut", "il", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "Depth", "Camera", "*", "Ġpm", "d", "Ġ=", "Ġnew", "ĠPM", "DC", "amera", "(", "false", ");", "Ċ", "ĉ", "int", "Ġframe", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "while", "Ġ(", "true", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "ĠLoad", "Ġin", "Ġthe", "Ġdebug", "Ġdata", "Ċ", "ĉ", "ĉ", "std", "::", "string", "Ġfilename", "Ġ=", "Ġ\"", "..", "//", "Open", "ARK", "_", "Dat", "as", "ets", "//", "Hand", "Data", "Set", "1", "//", "img", "\"", "Ġ+", "Ġstd", "::", "to", "_", "string", "(", "frame", ")", "Ġ+", "Ġ\".", "y", "ml", "\";", "Ċ", "ĉ", "ĉ", "if", "Ġ(!", "pm", "d", "->", "read", "Image", "(", "filename", "))", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "ĊĊ", "ĉ", "ĉ", "//", "ĠRemove", "Ġnoise", "Ġon", "Ġthe", "Ġframe", "Ċ", "ĉ", "ĉ", "pm", "d", "->", "remove", "No", "ise", "();", "Ċ", "ĉ", "ĉ", "cv", "::", "im", "show", "(\"", "XY", "Z", "ĠMap", "\",", "ĠVisual", "izer", "::", "visual", "ize", "XY", "Z", "Map", "(", "pm", "d", "->", "get", "XY", "Z", "Map", "()", "));", "ĊĊ", "ĉ", "ĉ", "//", "ĠFind", "Ġthe", "Ġright", "Ġhand", "Ċ", "ĉ", "ĉ", "Hand", "Ġright", "_", "hand", "Ġ=", "ĠHand", "(", "pm", "d", "->", "get", "Cl", "usters", "());", "ĊĊ", "ĉ", "ĉ", "//", "ĠShow", "Ġthe", "Ġhand", "Ċ", "ĉ", "ĉ", "cv", "::", "im", "show", "(\"", "Hand", "\",", "ĠVisual", "izer", "::", "visual", "ize", "Hand", "(", "pm", "d", "->", "get", "XY", "Z", "Map", "(),", "Ġright", "_", "hand", ".", "pointer", "_", "finger", "_", "ij", ",", "Ġright", "_", "hand", ".", "shape", "_", "cent", "roid", "_", "ij", "));", "ĊĊ", "Ċ", "ĉ", "ĉ", "/", "****", "ĠStart", ":", "ĠLoop", "ĠBreak", "ĠCondition", "Ġ****", "/", "Ċ", "ĉ", "ĉ", "int", "Ġc", "Ġ=", "Ġc", "v", "Wait", "Key", "(", "1", ");", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "c", "Ġ==", "Ġ'", "q", "'", "Ġ||", "Ġc", "Ġ==", "Ġ'", "Q", "'", "Ġ||", "Ġc", "Ġ==", "Ġ27", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "/", "****", "ĠEnd", ":", "ĠLoop", "ĠBreak", "ĠCondition", "Ġ****", "/", "ĊĊ", "ĉ", "ĉ", "frame", "++;", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "pm", "d", "->", "destroy", "Instance", "();", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["frame", 5, "comesFrom", ["frame"], [2]], ["frame", 32, "comesFrom", ["frame"], [2]], ["filename", 8, "comesFrom", ["filename"], [3]], ["right_hand", 23, "comesFrom", ["right_hand"], [15]], ["right_hand", 25, "comesFrom", ["right_hand"], [15]], ["c", 29, "comesFrom", ["c"], [27]], ["c", 30, "comesFrom", ["c"], [27]], ["c", 31, "comesFrom", ["c"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::786", "code": "// Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file\n// for details. All rights reserved. Use of this source code is governed by a\n// BSD-style license that can be found in the LICENSE file.\n\n#include \"platform/globals.h\"\n#if defined(DART_HOST_OS_MACOS)\n\n#include <errno.h>  // NOLINT\n#include <fcntl.h>  // NOLINT\n\n#include \"bin/crypto.h\"\n#include \"bin/fdutils.h\"\n#include \"platform/signal_blocker.h\"\n\nnamespace dart {\nnamespace bin {\n\nbool Crypto::GetRandomBytes(intptr_t count, uint8_t* buffer) {\n  intptr_t fd = TEMP_FAILURE_RETRY(open(\"/dev/urandom\", O_RDONLY | O_CLOEXEC));\n  if (fd < 0) {\n    return false;\n  }\n  intptr_t bytes_read = 0;\n  do {\n    int res =\n        TEMP_FAILURE_RETRY(read(fd, buffer + bytes_read, count - bytes_read));\n    if (res < 0) {\n      int err = errno;\n      close(fd);\n      errno = err;\n      return false;\n    }\n    bytes_read += res;\n  } while (bytes_read < count);\n  close(fd);\n  return true;\n}\n\n}  // namespace bin\n}  // namespace dart\n\n#endif  // defined(DART_HOST_OS_MACOS)\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2012", ",", "Ġthe", "ĠDart", "Ġproject", "Ġauthors", ".", "Ġ", "ĠPlease", "Ġsee", "Ġthe", "ĠAUTH", "ORS", "Ġfile", "Ċ", "//", "Ġfor", "Ġdetails", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "Ċ", "//", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "platform", "/", "gl", "ob", "als", ".", "h", "\"", "Ċ", "#", "if", "Ġdefined", "(", "D", "ART", "_", "H", "OST", "_", "OS", "_", "MAC", "OS", ")", "Ċ", "Ċ", "#", "include", "Ġ<", "err", "no", ".", "h", ">", "Ġ", "Ġ//", "ĠN", "OL", "INT", "Ċ", "#", "include", "Ġ<", "fc", "nt", "l", ".", "h", ">", "Ġ", "Ġ//", "ĠN", "OL", "INT", "Ċ", "Ċ", "#", "include", "Ġ\"", "bin", "/", "crypt", "o", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "bin", "/", "fd", "utils", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "platform", "/", "sign", "al", "_", "block", "er", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġdart", "Ġ{", "Ċ", "names", "pace", "Ġbin", "Ġ{", "Ċ", "Ċ", "bool", "ĠCrypto", "::", "Get", "Random", "Bytes", "(", "int", "ptr", "_", "t", "Ġcount", ",", "Ġuint", "8", "_", "t", "*", "Ġbuffer", ")", "Ġ{", "Ċ", "Ġ", "Ġint", "ptr", "_", "t", "Ġf", "d", "Ġ=", "ĠT", "EMP", "_", "FA", "IL", "URE", "_", "RE", "TRY", "(", "open", "(\"", "/", "dev", "/", "ur", "andom", "\",", "ĠO", "_", "RD", "ON", "LY", "Ġ|", "ĠO", "_", "CL", "O", "EX", "EC", "));", "Ċ", "Ġ", "Ġif", "Ġ(", "fd", "Ġ<", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġint", "ptr", "_", "t", "Ġbytes", "_", "read", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġdo", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġres", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠT", "EMP", "_", "FA", "IL", "URE", "_", "RE", "TRY", "(", "read", "(", "fd", ",", "Ġbuffer", "Ġ+", "Ġbytes", "_", "read", ",", "Ġcount", "Ġ-", "Ġbytes", "_", "read", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "res", "Ġ<", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġerr", "Ġ=", "Ġerr", "no", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġclose", "(", "fd", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġerr", "no", "Ġ=", "Ġerr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbytes", "_", "read", "Ġ+=", "Ġres", ";", "Ċ", "Ġ", "Ġ}", "Ġwhile", "Ġ(", "bytes", "_", "read", "Ġ<", "Ġcount", ");", "Ċ", "Ġ", "Ġclose", "(", "fd", ");", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġbin", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġdart", "Ċ", "Ċ", "#", "endif", "Ġ", "Ġ//", "Ġdefined", "(", "D", "ART", "_", "H", "OST", "_", "OS", "_", "MAC", "OS", ")", "Ċ"], "dataflow_graph": [["fd", 9, "comesFrom", ["fd"], [4]], ["fd", 14, "comesFrom", ["fd"], [4]], ["fd", 23, "comesFrom", ["fd"], [4]], ["fd", 31, "comesFrom", ["fd"], [4]], ["bytes_read", 16, "comesFrom", ["bytes_read"], [10]], ["bytes_read", 18, "comesFrom", ["bytes_read"], [10]], ["bytes_read", 28, "comesFrom", ["bytes_read"], [26]], ["count", 17, "comesFrom", ["count"], [2]], ["count", 29, "comesFrom", ["count"], [2]], ["res", 19, "comesFrom", ["res"], [11]], ["res", 27, "comesFrom", ["res"], [11]], ["err", 25, "comesFrom", ["err"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::787", "code": "#include \"main.h\"\n#include \"SimulatorWin.h\"\n#include <shellapi.h>\n\nint WINAPI _tWinMain(HINSTANCE hInstance,\n\tHINSTANCE hPrevInstance,\n\tLPTSTR    lpCmdLine,\n\tint       nCmdShow)\n{\n\tUNREFERENCED_PARAMETER(hPrevInstance);\n\tUNREFERENCED_PARAMETER(lpCmdLine);\n    auto simulator = SimulatorWin::getInstance();\n    return simulator->run();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "main", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Sim", "ulator", "Win", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "shell", "api", ".", "h", ">", "Ċ", "Ċ", "int", "ĠWIN", "API", "Ġ_", "t", "Win", "Main", "(", "H", "INST", "ANCE", "Ġh", "Instance", ",", "Ċ", "ĉ", "H", "INST", "ANCE", "Ġh", "Prev", "Instance", ",", "Ċ", "ĉ", "L", "PT", "STR", "Ġ", "Ġ", "Ġ", "Ġl", "p", "Cmd", "Line", ",", "Ċ", "ĉ", "int", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Cmd", "Show", ")", "Ċ", "{", "Ċ", "ĉ", "UN", "RE", "FER", "ENC", "ED", "_", "PAR", "AM", "ET", "ER", "(", "h", "Prev", "Instance", ");", "Ċ", "ĉ", "UN", "RE", "FER", "ENC", "ED", "_", "PAR", "AM", "ET", "ER", "(", "lp", "Cmd", "Line", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġsimulator", "Ġ=", "ĠSimulator", "Win", "::", "get", "Instance", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġsimulator", "->", "run", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["hPrevInstance", 7, "comesFrom", ["hPrevInstance"], [3]], ["lpCmdLine", 9, "comesFrom", ["lpCmdLine"], [4]], ["simulator", 12, "comesFrom", ["simulator"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::788", "code": "// Warning suppression for Dune includes.\n#include <opm/common/utility/platform_dependent/disable_warnings.h>\n#include <dune/grid/io/file/vtk/vtkwriter.hh>\n#include <opm/common/utility/platform_dependent/reenable_warnings.h>\n\n#include <stdio.h>\n\ntemplate<class G, class V>\nvoid vtkout (const G& grid, const V& c, const char* name, int k, double time=0.0, int rank=0)\n{\n  Dune::VTKWriter<typename G::LeafGridView> vtkwriter(grid.leafGridView());\n  char fname[128];\n  char sername[128];\n  sprintf(fname,\"%s-%05d\",name,k);\n  sprintf(sername,\"%s.series\",name);\n  vtkwriter.addCellData(c,\"celldata\");\n  vtkwriter.write(fname,Dune::VTK::ascii);\n  if ( rank == 0)\n  {\n    std::ofstream serstream(sername, (k==0 ? std::ios_base::out : std::ios_base::app));\n    serstream << k << \" \" << fname << \".vtu \" << time << std::endl;\n    serstream.close();\n  }\n}\n", "code_tokens": ["Ġ//", "ĠWarning", "Ġsuppression", "Ġfor", "ĠD", "une", "Ġincludes", ".", "Ċ", "#", "include", "Ġ<", "op", "m", "/", "common", "/", "ut", "ility", "/", "platform", "_", "dependent", "/", "disable", "_", "warn", "ings", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "d", "une", "/", "grid", "/", "io", "/", "file", "/", "v", "tk", "/", "v", "tk", "writer", ".", "hh", ">", "Ċ", "#", "include", "Ġ<", "op", "m", "/", "common", "/", "ut", "ility", "/", "platform", "_", "dependent", "/", "reen", "able", "_", "warn", "ings", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "template", "<", "class", "ĠG", ",", "Ġclass", "ĠV", ">", "Ċ", "void", "Ġv", "tk", "out", "Ġ(", "const", "ĠG", "&", "Ġgrid", ",", "Ġconst", "ĠV", "&", "Ġc", ",", "Ġconst", "Ġchar", "*", "Ġname", ",", "Ġint", "Ġk", ",", "Ġdouble", "Ġtime", "=", "0", ".", "0", ",", "Ġint", "Ġrank", "=", "0", ")", "Ċ", "{", "Ċ", "Ġ", "ĠD", "une", "::", "VT", "K", "Writer", "<", "ty", "pen", "ame", "ĠG", "::", "Le", "af", "Grid", "View", ">", "Ġv", "tk", "writer", "(", "grid", ".", "leaf", "Grid", "View", "());", "Ċ", "Ġ", "Ġchar", "Ġf", "name", "[", "128", "];", "Ċ", "Ġ", "Ġchar", "Ġser", "name", "[", "128", "];", "Ċ", "Ġ", "Ġsprint", "f", "(", "f", "name", ",\"", "%", "s", "-", "%", "05", "d", "\",", "name", ",", "k", ");", "Ċ", "Ġ", "Ġsprint", "f", "(", "s", "ername", ",\"", "%", "s", ".", "series", "\",", "name", ");", "Ċ", "Ġ", "Ġv", "tk", "writer", ".", "add", "Cell", "Data", "(", "c", ",\"", "cell", "data", "\");", "Ċ", "Ġ", "Ġv", "tk", "writer", ".", "write", "(", "f", "name", ",", "D", "une", "::", "VT", "K", "::", "as", "ci", "i", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "Ġrank", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "of", "stream", "Ġser", "stream", "(", "s", "ername", ",", "Ġ(", "k", "==", "0", "Ġ?", "Ġstd", "::", "ios", "_", "base", "::", "out", "Ġ:", "Ġstd", "::", "ios", "_", "base", "::", "app", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġser", "stream", "Ġ<<", "Ġk", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġf", "name", "Ġ<<", "Ġ\".", "v", "tu", "Ġ\"", "Ġ<<", "Ġtime", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġser", "stream", ".", "close", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["k", 15, "comesFrom", ["k"], [4]], ["k", 29, "comesFrom", ["k"], [4]], ["k", 33, "comesFrom", ["k"], [4]], ["vtkwriter", 19, "comesFrom", ["vtkwriter"], [7]], ["vtkwriter", 22, "comesFrom", ["vtkwriter"], [7]], ["serstream", 32, "comesFrom", ["serstream"], [27]], ["serstream", 37, "comesFrom", ["serstream"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::789", "code": "﻿/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n#include <aws/es/model/ListDomainsForPackageRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n#include <aws/core/http/URI.h>\n#include <aws/core/utils/memory/stl/AWSStringStream.h>\n\n#include <utility>\n\nusing namespace Aws::ElasticsearchService::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\nusing namespace Aws::Http;\n\nListDomainsForPackageRequest::ListDomainsForPackageRequest() : \n    m_packageIDHasBeenSet(false),\n    m_maxResults(0),\n    m_maxResultsHasBeenSet(false),\n    m_nextTokenHasBeenSet(false)\n{\n}\n\nAws::String ListDomainsForPackageRequest::SerializePayload() const\n{\n  return {};\n}\n\nvoid ListDomainsForPackageRequest::AddQueryStringParameters(URI& uri) const\n{\n    Aws::StringStream ss;\n    if(m_maxResultsHasBeenSet)\n    {\n      ss << m_maxResults;\n      uri.AddQueryStringParameter(\"maxResults\", ss.str());\n      ss.str(\"\");\n    }\n\n    if(m_nextTokenHasBeenSet)\n    {\n      ss << m_nextToken;\n      uri.AddQueryStringParameter(\"nextToken\", ss.str());\n      ss.str(\"\");\n    }\n\n}\n\n\n\n", "code_tokens": ["Ġï", "»", "¿", "/**", "Ċ", "Ġ*", "ĠCopyright", "ĠAmazon", ".", "com", ",", "ĠInc", ".", "Ġor", "Ġits", "Ġaffiliates", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ġ*", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "aws", "/", "es", "/", "model", "/", "List", "Dom", "ains", "For", "Package", "Request", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "json", "/", "J", "son", "Serial", "izer", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "http", "/", "URI", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "aws", "/", "core", "/", "utils", "/", "memory", "/", "st", "l", "/", "AW", "S", "String", "Stream", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "Ċ", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "El", "astic", "search", "Service", "::", "Model", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", "::", "J", "son", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Ut", "ils", ";", "Ċ", "using", "Ġnamespace", "ĠAw", "s", "::", "Http", ";", "Ċ", "Ċ", "List", "Dom", "ains", "For", "Package", "Request", "::", "List", "Dom", "ains", "For", "Package", "Request", "()", "Ġ:", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "package", "ID", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "max", "Results", "(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "max", "Results", "Has", "Be", "en", "Set", "(", "false", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "next", "Token", "Has", "Be", "en", "Set", "(", "false", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "A", "ws", "::", "String", "ĠList", "Dom", "ains", "For", "Package", "Request", "::", "Serial", "ize", "Pay", "load", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ{", "};", "Ċ", "}", "Ċ", "Ċ", "void", "ĠList", "Dom", "ains", "For", "Package", "Request", "::", "Add", "Query", "String", "Parameters", "(", "URI", "&", "Ġur", "i", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAw", "s", "::", "String", "Stream", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "_", "max", "Results", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġm", "_", "max", "Results", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġur", "i", ".", "Add", "Query", "String", "Parameter", "(\"", "max", "Results", "\",", "Ġss", ".", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", ".", "str", "(\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "m", "_", "next", "Token", "Has", "Be", "en", "Set", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġm", "_", "next", "Token", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġur", "i", ".", "Add", "Query", "String", "Parameter", "(\"", "next", "Token", "\",", "Ġss", ".", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", ".", "str", "(\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["ss", 14, "comesFrom", ["ss"], [12]], ["ss", 18, "comesFrom", ["ss"], [12]], ["ss", 20, "comesFrom", ["ss"], [12]], ["ss", 23, "comesFrom", ["ss"], [12]], ["ss", 27, "comesFrom", ["ss"], [12]], ["ss", 29, "comesFrom", ["ss"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::790", "code": "#pragma once\n\n#include \"Control.hpp\"\n#include <memory>\n\nnamespace ctrl\n{\n\nclass StatusBar: public Control\n{\npublic:\n    StatusBar( HWND hwnd = NULL )\n        : Control( hwnd )  {  }\n\n    void SetParts( const std::initializer_list<int>& coords )\n    {\n        int i = 0;\n        std::unique_ptr<int[]> coordArray( new int[coords.size()]() );\n        for (auto& item : coords)\n        {\n            coordArray[i] = item;\n            i++;\n        }\n\n        SendMessage( _hwnd, SB_SETPARTS, i, (LPARAM)coordArray.get() );\n    }\n\n    void SetText( int index, const std::wstring& text )\n    {\n        SendMessage( _hwnd, SB_SETTEXT, MAKEWORD( index, SBT_NOBORDERS ), (LPARAM)text.c_str() );\n    }\n};\n\n}", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "Control", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "names", "pace", "Ġc", "trl", "Ċ", "{", "Ċ", "Ċ", "class", "ĠStatus", "Bar", ":", "Ġpublic", "ĠControl", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠStatus", "Bar", "(", "ĠHW", "ND", "Ġh", "w", "nd", "Ġ=", "ĠNULL", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠControl", "(", "Ġh", "w", "nd", "Ġ)", "Ġ", "Ġ{", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠSet", "Parts", "(", "Ġconst", "Ġstd", "::", "initial", "izer", "_", "list", "<", "int", ">", "&", "Ġco", "ords", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "int", "[]", ">", "Ġcoord", "Array", "(", "Ġnew", "Ġint", "[", "co", "ords", ".", "size", "()", "]", "()", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "&", "Ġitem", "Ġ:", "Ġco", "ords", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcoord", "Array", "[", "i", "]", "Ġ=", "Ġitem", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSend", "Message", "(", "Ġ_", "hw", "nd", ",", "ĠSB", "_", "SET", "PAR", "TS", ",", "Ġi", ",", "Ġ(", "LP", "AR", "AM", ")", "coord", "Array", ".", "get", "()", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠSet", "Text", "(", "Ġint", "Ġindex", ",", "Ġconst", "Ġstd", "::", "w", "string", "&", "Ġtext", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠSend", "Message", "(", "Ġ_", "hw", "nd", ",", "ĠSB", "_", "SET", "TEXT", ",", "ĠMA", "K", "EW", "ORD", "(", "Ġindex", ",", "ĠSB", "T", "_", "N", "OB", "ORD", "ERS", "Ġ),", "Ġ(", "LP", "AR", "AM", ")", "text", ".", "c", "_", "str", "()", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "}"], "dataflow_graph": [["coordArray", 12, "comesFrom", ["coordArray"], [7]], ["coordArray", 20, "comesFrom", ["coordArray"], [7]], ["i", 13, "comesFrom", ["i"], [6]], ["i", 15, "comesFrom", ["i"], [6]], ["i", 19, "comesFrom", ["i"], [6]], ["index", 29, "comesFrom", ["index"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::791", "code": "//===----------------------------------------------------------------------===//\n//\n// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n//\n//===----------------------------------------------------------------------===//\n\n// UNSUPPORTED: c++98, c++03\n// UNSUPPORTED: windows\n\n// MODULES_DEFINES: _LIBCPP_DEBUG=0\n\n// <filesystem>\n\n// class path\n\n#define _LIBCPP_DEBUG 0\n#include \"filesystem_include.h\"\n#include <iterator>\n#include <type_traits>\n#include <cassert>\n\n#include \"test_macros.h\"\n#include \"filesystem_test_helper.h\"\n#include \"debug_mode_helper.h\"\n\nint main(int, char**) {\n  using namespace fs;\n  // Test incrementing/decrementing a singular iterator\n  {\n    path::iterator singular;\n    EXPECT_DEATH( ++singular );\n    EXPECT_DEATH( --singular );\n  }\n  // Test decrementing the begin iterator\n  {\n    path p(\"foo/bar\");\n    auto it = p.begin();\n    ++it;\n    ++it;\n    EXPECT_DEATH( ++it );\n  }\n  // Test incrementing the end iterator\n  {\n    path p(\"foo/bar\");\n    auto it = p.end();\n    EXPECT_DEATH( ++it );\n    --it;\n    --it;\n    EXPECT_DEATH( --it );\n  }\n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "//", "Ċ", "//", "ĠPart", "Ġof", "Ġthe", "ĠLL", "VM", "ĠProject", ",", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", "Ġv", "2", ".", "0", "Ġwith", "ĠLL", "VM", "ĠEx", "ceptions", ".", "Ċ", "//", "ĠSee", "Ġhttps", "://", "ll", "vm", ".", "org", "/", "L", "IC", "ENSE", ".", "txt", "Ġfor", "Ġlicense", "Ġinformation", ".", "Ċ", "//", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĠApache", "-", "2", ".", "0", "ĠWITH", "ĠLL", "VM", "-", "ex", "ception", "Ċ", "//", "Ċ", "//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "Ċ", "//", "ĠUN", "SUP", "PORT", "ED", ":", "Ġc", "++", "98", ",", "Ġc", "++", "03", "Ċ", "//", "ĠUN", "SUP", "PORT", "ED", ":", "Ġwindows", "Ċ", "Ċ", "//", "ĠMOD", "UL", "ES", "_", "DE", "FIN", "ES", ":", "Ġ_", "LI", "BC", "PP", "_", "DEBUG", "=", "0", "Ċ", "Ċ", "//", "Ġ<", "files", "ystem", ">", "Ċ", "Ċ", "//", "Ġclass", "Ġpath", "Ċ", "Ċ", "#", "define", "Ġ_", "LI", "BC", "PP", "_", "DEBUG", "Ġ0", "Ċ", "#", "include", "Ġ\"", "files", "ystem", "_", "include", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "#", "include", "Ġ<", "type", "_", "tra", "its", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "_", "mac", "ros", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "files", "ystem", "_", "test", "_", "hel", "per", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "debug", "_", "mode", "_", "hel", "per", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "**", ")", "Ġ{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġfs", ";", "Ċ", "Ġ", "Ġ//", "ĠTest", "Ġincrement", "ing", "/", "dec", "re", "ment", "ing", "Ġa", "Ġsingular", "Ġiterator", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpath", "::", "iterator", "Ġsingular", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "DE", "ATH", "(", "Ġ++", "sing", "ular", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "DE", "ATH", "(", "Ġ--", "sing", "ular", "Ġ);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ//", "ĠTest", "Ġdecre", "ment", "ing", "Ġthe", "Ġbegin", "Ġiterator", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpath", "Ġp", "(\"", "foo", "/", "bar", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġit", "Ġ=", "Ġp", ".", "begin", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ++", "it", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ++", "it", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "DE", "ATH", "(", "Ġ++", "it", "Ġ);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ//", "ĠTest", "Ġincrement", "ing", "Ġthe", "Ġend", "Ġiterator", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpath", "Ġp", "(\"", "foo", "/", "bar", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġit", "Ġ=", "Ġp", ".", "end", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "DE", "ATH", "(", "Ġ++", "it", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ--", "it", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ--", "it", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "DE", "ATH", "(", "Ġ--", "it", "Ġ);", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["singular", 5, "comesFrom", ["singular"], [3]], ["singular", 7, "comesFrom", ["singular"], [3]], ["p", 10, "comesFrom", ["p"], [8]], ["p", 18, "comesFrom", ["p"], [16]], ["it", 12, "comesFrom", ["it"], [9]], ["it", 13, "comesFrom", ["it"], [9]], ["it", 15, "comesFrom", ["it"], [9]], ["it", 21, "comesFrom", ["it"], [17]], ["it", 22, "comesFrom", ["it"], [17]], ["it", 23, "comesFrom", ["it"], [17]], ["it", 25, "comesFrom", ["it"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::792", "code": "//=============================================================================\n//\n// Adventure Game Studio (AGS)\n//\n// Copyright (C) 1999-2011 Chris Jones and 2011-20xx others\n// The full list of copyright holders can be found in the Copyright.txt\n// file, which is part of this source code distribution.\n//\n// The AGS source code is provided under the Artistic License 2.0.\n// A copy of this license can be found in the file License.txt and at\n// http://www.opensource.org/licenses/artistic-license-2.0.php\n//\n//=============================================================================\n\n#include \"gui/animatingguibutton.h\"\n#include \"util/stream.h\"\n\nusing AGS::Common::Stream;\n\nvoid AnimatingGUIButton::ReadFromFile(Stream *in)\n{\n    buttonid = in->ReadInt16();\n    ongui = in->ReadInt16();\n    onguibut = in->ReadInt16();\n    view = in->ReadInt16();\n    loop = in->ReadInt16();\n    frame = in->ReadInt16();\n    speed = in->ReadInt16();\n    repeat = in->ReadInt16();\n    wait = in->ReadInt16();\n}\n\nvoid AnimatingGUIButton::WriteToFile(Stream *out)\n{\n    out->WriteInt16(buttonid);\n    out->WriteInt16(ongui);\n    out->WriteInt16(onguibut);\n    out->WriteInt16(view);\n    out->WriteInt16(loop);\n    out->WriteInt16(frame);\n    out->WriteInt16(speed);\n    out->WriteInt16(repeat);\n    out->WriteInt16(wait);\n}\n", "code_tokens": ["Ġ//", "================================================================", "============", "=", "Ċ", "//", "Ċ", "//", "ĠAdventure", "ĠGame", "ĠStudio", "Ġ(", "AG", "S", ")", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ1999", "-", "2011", "ĠChris", "ĠJones", "Ġand", "Ġ2011", "-", "20", "xx", "Ġothers", "Ċ", "//", "ĠThe", "Ġfull", "Ġlist", "Ġof", "Ġcopyright", "Ġholders", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠCopyright", ".", "txt", "Ċ", "//", "Ġfile", ",", "Ġwhich", "Ġis", "Ġpart", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "ĠThe", "ĠAG", "S", "Ġsource", "Ġcode", "Ġis", "Ġprovided", "Ġunder", "Ġthe", "ĠArt", "istic", "ĠLicense", "Ġ2", ".", "0", ".", "Ċ", "//", "ĠA", "Ġcopy", "Ġof", "Ġthis", "Ġlicense", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "ĠLicense", ".", "txt", "Ġand", "Ġat", "Ċ", "//", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "art", "istic", "-", "license", "-", "2", ".", "0", ".", "php", "Ċ", "//", "Ċ", "//", "================================================================", "============", "=", "Ċ", "Ċ", "#", "include", "Ġ\"", "gui", "/", "anim", "ating", "gu", "ib", "utton", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "util", "/", "stream", ".", "h", "\"", "Ċ", "Ċ", "using", "ĠAG", "S", "::", "Common", "::", "Stream", ";", "Ċ", "Ċ", "void", "ĠAnim", "ating", "GUI", "Button", "::", "Read", "From", "File", "(", "Stream", "Ġ*", "in", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbutton", "id", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġon", "gui", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġon", "gu", "ib", "ut", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġview", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġloop", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġframe", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġspeed", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġrepeat", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwait", "Ġ=", "Ġin", "->", "Read", "Int", "16", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAnim", "ating", "GUI", "Button", "::", "Write", "To", "File", "(", "Stream", "Ġ*", "out", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "button", "id", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "ong", "ui", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "ong", "u", "ib", "ut", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "view", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "loop", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "frame", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "speed", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "repeat", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "Write", "Int", "16", "(", "wait", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["buttonid", 34, "comesFrom", ["buttonid"], [3]], ["ongui", 37, "comesFrom", ["ongui"], [6]], ["onguibut", 40, "comesFrom", ["onguibut"], [9]], ["view", 43, "comesFrom", ["view"], [12]], ["loop", 46, "comesFrom", ["loop"], [15]], ["frame", 49, "comesFrom", ["frame"], [18]], ["speed", 52, "comesFrom", ["speed"], [21]], ["repeat", 55, "comesFrom", ["repeat"], [24]], ["wait", 58, "comesFrom", ["wait"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::793", "code": "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"chrome/updater/win/net/network.h\"\n\n#include \"base/memory/ref_counted.h\"\n#include \"base/run_loop.h\"\n#include \"base/test/task_environment.h\"\n#include \"chrome/updater/policy/manager.h\"\n#include \"chrome/updater/policy/service.h\"\n#include \"chrome/updater/win/net/network_fetcher.h\"\n#include \"testing/gtest/include/gtest/gtest.h\"\n\nnamespace updater {\n\nTEST(UpdaterTestNetwork, NetworkFetcherWinHTTPFactory) {\n  base::test::SingleThreadTaskEnvironment task_environment(\n      base::test::SingleThreadTaskEnvironment::MainThreadType::UI);\n\n  PolicyService::PolicyManagerVector managers;\n  managers.push_back(GetPolicyManager());\n  auto policy_service =\n      base::MakeRefCounted<PolicyService>(std::move(managers));\n\n  auto fetcher =\n      base::MakeRefCounted<NetworkFetcherFactory>(policy_service)->Create();\n  EXPECT_NE(nullptr, fetcher.get());\n}\n\n}  // namespace updater\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2019", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "up", "d", "ater", "/", "win", "/", "net", "/", "network", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "memory", "/", "ref", "_", "count", "ed", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "run", "_", "loop", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "test", "/", "task", "_", "environment", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "up", "d", "ater", "/", "policy", "/", "manager", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "up", "d", "ater", "/", "policy", "/", "service", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "up", "d", "ater", "/", "win", "/", "net", "/", "network", "_", "fet", "cher", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "testing", "/", "g", "test", "/", "include", "/", "g", "test", "/", "g", "test", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġupd", "ater", "Ġ{", "Ċ", "Ċ", "T", "EST", "(", "Up", "d", "ater", "Test", "Network", ",", "ĠNetwork", "F", "et", "cher", "Win", "HTTP", "Factory", ")", "Ġ{", "Ċ", "Ġ", "Ġbase", "::", "test", "::", "Single", "Thread", "Task", "Environment", "Ġtask", "_", "environment", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbase", "::", "test", "::", "Single", "Thread", "Task", "Environment", "::", "Main", "Thread", "Type", "::", "UI", ");", "ĊĊ", "Ġ", "ĠPolicy", "Service", "::", "Policy", "Manager", "Vector", "Ġmanagers", ";", "Ċ", "Ġ", "Ġmanagers", ".", "push", "_", "back", "(", "Get", "Policy", "Manager", "());", "Ċ", "Ġ", "Ġauto", "Ġpolicy", "_", "service", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbase", "::", "Make", "Ref", "Count", "ed", "<", "Policy", "Service", ">(", "std", "::", "move", "(", "man", "agers", "));", "ĊĊ", "Ġ", "Ġauto", "Ġfet", "cher", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbase", "::", "Make", "Ref", "Count", "ed", "<", "Network", "F", "et", "cher", "Factory", ">(", "policy", "_", "service", ")", "->", "Create", "();", "Ċ", "Ġ", "ĠEXP", "ECT", "_", "NE", "(", "null", "ptr", ",", "Ġfet", "cher", ".", "get", "());", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġupd", "ater", "Ċ"], "dataflow_graph": [["managers", 3, "comesFrom", ["managers"], [2]], ["managers", 9, "comesFrom", ["managers"], [2]], ["policy_service", 12, "comesFrom", ["policy_service"], [6]], ["fetcher", 15, "comesFrom", ["fetcher"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::794", "code": "// PR c++/94074 - wrong modifying const object error for COMPONENT_REF.\n// { dg-do compile { target c++14 } }\n\ntypedef decltype (sizeof (0)) size_t;\n\ntemplate <typename E, size_t N>\nstruct array\n{\n  constexpr const E &operator[](size_t n) const noexcept { return elems[n]; }\n  E elems[N];\n};\n\ntemplate <typename T>\nstruct S {\n  using U = array<T, 4>;\n  U m;\n  constexpr S(int) : m{}\n  {\n    const_cast<int &>(const_cast<const U &>(m)[0]) = 42;\n  }\n};\n\nconstexpr S<int> p = { 10 };\n", "code_tokens": ["Ġ//", "ĠPR", "Ġc", "++", "/", "940", "74", "Ġ-", "Ġwrong", "Ġmodifying", "Ġconst", "Ġobject", "Ġerror", "Ġfor", "ĠCOMP", "ON", "ENT", "_", "REF", ".", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "14", "Ġ}", "Ġ}", "Ċ", "Ċ", "ty", "ped", "ef", "Ġdecl", "type", "Ġ(", "size", "of", "Ġ(", "0", "))", "Ġsize", "_", "t", ";", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠE", ",", "Ġsize", "_", "t", "ĠN", ">", "Ċ", "struct", "Ġarray", "Ċ", "{", "Ċ", "Ġ", "Ġconst", "expr", "Ġconst", "ĠE", "Ġ&", "operator", "[", "](", "size", "_", "t", "Ġn", ")", "Ġconst", "Ġno", "except", "Ġ{", "Ġreturn", "Ġele", "ms", "[", "n", "];", "Ġ}", "Ċ", "Ġ", "ĠE", "Ġele", "ms", "[", "N", "];", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "struct", "ĠS", "Ġ{", "Ċ", "Ġ", "Ġusing", "ĠU", "Ġ=", "Ġarray", "<", "T", ",", "Ġ4", ">", ";", "Ċ", "Ġ", "ĠU", "Ġm", ";", "Ċ", "Ġ", "Ġconst", "expr", "ĠS", "(", "int", ")", "Ġ:", "Ġm", "{", "}", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "_", "cast", "<", "int", "Ġ&", ">(", "const", "_", "cast", "<", "const", "ĠU", "Ġ&", ">(", "m", ")[", "0", "])", "Ġ=", "Ġ42", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "const", "expr", "ĠS", "<", "int", ">", "Ġp", "Ġ=", "Ġ{", "Ġ10", "Ġ};", "Ċ"], "dataflow_graph": [["n", 3, "comesFrom", ["n"], [1]], ["N", 5, "comesFrom", ["N"], [0]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::795", "code": "/* Copyright 2007-2015 QReal Research Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License. */\n\n#include \"textElider.h\"\n\nusing namespace utils;\n\nTextElider::TextElider(QWidget *widget, Qt::TextElideMode mode)\n\t: QObject(widget)\n\t, mWidget(widget)\n\t, mMode(mode)\n{\n\tconnect(this, SIGNAL(textChanged(QString)), mWidget, SLOT(setText(QString)));\n}\n\nvoid TextElider::setText(const QString &text)\n{\n\tif (mWidget) {\n\t\tint width = 0;\n\t\tif (mWidget->isVisible()) {\n\t\t\twidth = mWidget->contentsRect().width();\n\t\t} else {\n\t\t\tint left, top, right, bottom;\n\t\t\tmWidget->getContentsMargins(&left, &top, &right, &bottom);\n\t\t\twidth = mWidget->sizeHint().width() - left - right;\n\t\t}\n\n\t\tconst QString &elidedText = mWidget->fontMetrics().elidedText(text, mMode, width);\n\t\temit textChanged(elidedText);\n\t}\n}\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ2007", "-", "2015", "ĠQ", "Real", "ĠResearch", "ĠGroup", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "text", "El", "ider", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġut", "ils", ";", "Ċ", "Ċ", "Text", "El", "ider", "::", "Text", "El", "ider", "(", "Q", "Widget", "Ġ*", "widget", ",", "ĠQt", "::", "Text", "El", "ide", "Mode", "Ġmode", ")", "Ċ", "ĉ", ":", "ĠQ", "Object", "(", "widget", ")", "Ċ", "ĉ", ",", "Ġm", "Widget", "(", "widget", ")", "Ċ", "ĉ", ",", "Ġm", "Mode", "(", "mode", ")", "Ċ", "{", "Ċ", "ĉ", "connect", "(", "this", ",", "ĠSIGN", "AL", "(", "text", "Changed", "(", "Q", "String", ")),", "Ġm", "Widget", ",", "ĠSL", "OT", "(", "set", "Text", "(", "Q", "String", "))", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠText", "El", "ider", "::", "set", "Text", "(", "const", "ĠQ", "String", "Ġ&", "text", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "m", "Widget", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "int", "Ġwidth", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "m", "Widget", "->", "is", "V", "isible", "())", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "width", "Ġ=", "Ġm", "Widget", "->", "cont", "ents", "Rect", "().", "width", "();", "Ċ", "ĉ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "int", "Ġleft", ",", "Ġtop", ",", "Ġright", ",", "Ġbottom", ";", "Ċ", "ĉ", "ĉ", "ĉ", "m", "Widget", "->", "get", "Contents", "Marg", "ins", "(&", "left", ",", "Ġ&", "top", ",", "Ġ&", "right", ",", "Ġ&", "bottom", ");", "Ċ", "ĉ", "ĉ", "ĉ", "width", "Ġ=", "Ġm", "Widget", "->", "size", "H", "int", "().", "width", "()", "Ġ-", "Ġleft", "Ġ-", "Ġright", ";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "const", "ĠQ", "String", "Ġ&", "el", "ided", "Text", "Ġ=", "Ġm", "Widget", "->", "font", "Met", "rics", "().", "el", "ided", "Text", "(", "text", ",", "Ġm", "Mode", ",", "Ġwidth", ");", "Ċ", "ĉ", "ĉ", "em", "it", "Ġtext", "Changed", "(", "el", "ided", "Text", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["mode", 9, "comesFrom", ["mode"], [3]], ["width", 27, "comesFrom", ["width"], [24]], ["width", 41, "comesFrom", ["width"], [38]], ["width", 50, "comesFrom", ["width"], [38]], ["left", 34, "comesFrom", ["left"], [28]], ["left", 42, "comesFrom", ["left"], [28]], ["top", 35, "comesFrom", ["top"], [29]], ["right", 36, "comesFrom", ["right"], [30]], ["right", 43, "comesFrom", ["right"], [30]], ["bottom", 37, "comesFrom", ["bottom"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::796", "code": "// Copyright (C) 2003, 2009 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// { dg-require-fileio \"\" }\n\n#include <iostream>\n#include <cstdio>\n#include <testsuite_hooks.h>\n\nvoid\ntest01()\n{\n  VERIFY( std::freopen(\"cin_unget-1.txt\", \"r\", stdin) );\n\n  char buf[2];\n  VERIFY( std::cin.rdbuf()->sgetn(buf, 2) == 2 );\n  int c1 = std::cin.rdbuf()->sungetc();\n  int c2 = std::fgetc(stdin);\n  VERIFY( c1 == std::char_traits<char>::to_int_type(buf[1]) );\n  VERIFY( c2 == c1 );\n}\n\nint main(void)\n{\n  test01();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2003", ",", "Ġ2009", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "file", "io", "Ġ\"\"", "Ġ}", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "void", "Ċ", "test", "01", "()", "Ċ", "{", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġstd", "::", "fre", "open", "(\"", "cin", "_", "un", "get", "-", "1", ".", "txt", "\",", "Ġ\"", "r", "\",", "Ġstd", "in", ")", "Ġ);", "ĊĊ", "Ġ", "Ġchar", "Ġbuf", "[", "2", "];", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġstd", "::", "cin", ".", "rd", "buf", "()", "->", "s", "get", "n", "(", "buf", ",", "Ġ2", ")", "Ġ==", "Ġ2", "Ġ);", "Ċ", "Ġ", "Ġint", "Ġc", "1", "Ġ=", "Ġstd", "::", "cin", ".", "rd", "buf", "()", "->", "sun", "get", "c", "();", "Ċ", "Ġ", "Ġint", "Ġc", "2", "Ġ=", "Ġstd", "::", "f", "get", "c", "(", "std", "in", ");", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġc", "1", "Ġ==", "Ġstd", "::", "char", "_", "tra", "its", "<", "char", ">", "::", "to", "_", "int", "_", "type", "(", "buf", "[", "1", "])", "Ġ);", "Ċ", "Ġ", "ĠVER", "IF", "Y", "(", "Ġc", "2", "Ġ==", "Ġc", "1", "Ġ);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "Ċ", "Ġ", "Ġtest", "01", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["c1", 18, "comesFrom", ["c1"], [10]], ["c1", 23, "comesFrom", ["c1"], [10]], ["c2", 22, "comesFrom", ["c2"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::797", "code": "// Boost.Range library\n//\n//  Copyright Neil Groves 2011. Use, modification and\n//  distribution is subject to the Boost Software License, Version\n//  1.0. (See accompanying file LICENSE_1_0.txt or copy at\n//  http://www.boost.org/LICENSE_1_0.txt)\n//\n//\n// For more information, see http://www.boost.org/libs/range/\n//\n#include <boost/algorithm/string/join.hpp>\n#include <boost/range/join.hpp>\n\n#include <boost/test/test_tools.hpp>\n#include <boost/test/unit_test.hpp>\n\n#include <vector>\n\nnamespace boost\n{\n    namespace\n    {\n   \n        // Ticket 5547 - boost::join ambiguous with algorithm::join\n        void test_ticket_5547()\n        {\n            std::vector<int> x;\n            boost::range::join(x,x);\n        }\n    }\n}\n\nboost::unit_test::test_suite*\ninit_unit_test_suite(int argc, char* argv[])\n{\n    boost::unit_test::test_suite* test\n        = BOOST_TEST_SUITE( \"RangeTestSuite.ticket_5547\" );\n\n    test->add( BOOST_TEST_CASE( &boost::test_ticket_5547 ) );\n\n    return test;\n}\n", "code_tokens": ["Ġ//", "ĠBoost", ".", "Range", "Ġlibrary", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCopyright", "ĠNeil", "ĠGro", "ves", "Ġ2011", ".", "ĠUse", ",", "Ġmodification", "Ġand", "Ċ", "//", "Ġ", "Ġdistribution", "Ġis", "Ġsubject", "Ġto", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ċ", "//", "Ġ", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġaccompanying", "Ġfile", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "//", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "//", "Ċ", "//", "Ċ", "//", "ĠFor", "Ġmore", "Ġinformation", ",", "Ġsee", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "lib", "s", "/", "range", "/", "Ċ", "//", "Ċ", "#", "include", "Ġ<", "boost", "/", "al", "gorithm", "/", "string", "/", "join", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "range", "/", "join", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "test", "_", "tools", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "test", "/", "unit", "_", "test", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "names", "pace", "Ġboost", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnamespace", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠTicket", "Ġ55", "47", "Ġ-", "Ġboost", "::", "join", "Ġambiguous", "Ġwith", "Ġalgorithm", "::", "join", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġtest", "_", "ticket", "_", "55", "47", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġboost", "::", "range", "::", "join", "(", "x", ",", "x", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "boost", "::", "unit", "_", "test", "::", "test", "_", "su", "ite", "*", "Ċ", "init", "_", "unit", "_", "test", "_", "su", "ite", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġboost", "::", "unit", "_", "test", "::", "test", "_", "su", "ite", "*", "Ġtest", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ=", "ĠB", "OO", "ST", "_", "T", "EST", "_", "SU", "ITE", "(", "Ġ\"", "Range", "Test", "Su", "ite", ".", "ticket", "_", "55", "47", "\"", "Ġ);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġtest", "->", "add", "(", "ĠB", "OO", "ST", "_", "T", "EST", "_", "C", "ASE", "(", "Ġ&", "boost", "::", "test", "_", "ticket", "_", "55", "47", "Ġ)", "Ġ);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtest", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 3, "comesFrom", ["x"], [1]], ["x", 4, "comesFrom", ["x"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::798", "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n\tstring name;\n\tint a, b;\n\n\tcout << \"Hello, World!\" << endl;\n\tcout << \"What is your name? \";\n\tgetline(cin, name);\n\tcout << \"Hello, \" << name << \"!\" << endl;\n\tcout << endl << \"We'll start the calculations :)\" << endl;\n\tcout << \"Enter the first number: \";\n\tcin >> a;\n\tcout << \"Enter the second number: \";\n\tcin >> b;\n\tcout << \"Sum: \" << a + b << endl;\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "string", "Ġname", ";", "Ċ", "ĉ", "int", "Ġa", ",", "Ġb", ";", "ĊĊ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Hello", ",", "ĠWorld", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "What", "Ġis", "Ġyour", "Ġname", "?", "Ġ\"", ";", "Ċ", "ĉ", "get", "line", "(", "cin", ",", "Ġname", ");", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Hello", ",", "Ġ\"", "Ġ<<", "Ġname", "Ġ<<", "Ġ\"", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġend", "l", "Ġ<<", "Ġ\"", "We", "'ll", "Ġstart", "Ġthe", "Ġcalculations", "Ġ:)", "\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Enter", "Ġthe", "Ġfirst", "Ġnumber", ":", "Ġ\"", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġa", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Enter", "Ġthe", "Ġsecond", "Ġnumber", ":", "Ġ\"", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġb", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Sum", ":", "Ġ\"", "Ġ<<", "Ġa", "Ġ+", "Ġb", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["name", 10, "comesFrom", ["name"], [2]], ["name", 12, "comesFrom", ["name"], [2]], ["a", 19, "comesFrom", ["a"], [3]], ["a", 24, "comesFrom", ["a"], [3]], ["b", 22, "comesFrom", ["b"], [4]], ["b", 25, "comesFrom", ["b"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::799", "code": "#include <algorithm> // std::swap\n#include <assert.h>  // assert\n#include <cstring>   // std::memmove\n#include <dlfcn.h>   // dlsym\n#include <iostream>  // std::cout\n\nnamespace {\ninline bool intervalsIntersect(size_t a, size_t b, size_t count) {\n    if (a > b) {\n        std::swap(a, b);\n    }\n    assert(a <= b);\n    return (count > 0) && (b < a + count); // a --- b --- a+count\n}\n\ntypedef void*(*memcpy_t)(void*, const void*, size_t);\nmemcpy_t cp = (memcpy_t)dlsym(RTLD_NEXT, \"memcpy\");\n}\n\nextern \"C\" {\nvoid* memcpy(void* dest, const void* src, size_t count) {\n    if (!intervalsIntersect((size_t)dest, (size_t)src, count)) {\n        return cp(dest, src, count);\n    } else {\n        std::cerr << \"Copy of intersected intervals \"\n            \"(\" << (size_t)src << \";\" << (size_t)(src) + count << \"[ -> \"\n            \"(\" << (size_t)dest << \";\" << (size_t)(dest) + count << \"[!\\t\"\n            \"Using memmove()!\\n\";\n        return std::memmove(dest, src, count);\n    }\n}\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "al", "gorithm", ">", "Ġ//", "Ġstd", "::", "sw", "ap", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ġ", "Ġ//", "Ġassert", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ġ", "Ġ", "Ġ//", "Ġstd", "::", "mem", "move", "Ċ", "#", "include", "Ġ<", "d", "lf", "cn", ".", "h", ">", "Ġ", "Ġ", "Ġ//", "Ġd", "l", "sym", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ġ", "Ġ//", "Ġstd", "::", "c", "out", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "inline", "Ġbool", "Ġintervals", "Inter", "sect", "(", "size", "_", "t", "Ġa", ",", "Ġsize", "_", "t", "Ġb", ",", "Ġsize", "_", "t", "Ġcount", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "Ġ>", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "sw", "ap", "(", "a", ",", "Ġb", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "a", "Ġ<=", "Ġb", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ(", "count", "Ġ>", "Ġ0", ")", "Ġ&&", "Ġ(", "b", "Ġ<", "Ġa", "Ġ+", "Ġcount", ");", "Ġ//", "Ġa", "Ġ---", "Ġb", "Ġ---", "Ġa", "+", "count", "Ċ", "}", "Ċ", "Ċ", "ty", "ped", "ef", "Ġvoid", "*", "(*", "mem", "c", "py", "_", "t", ")(", "void", "*,", "Ġconst", "Ġvoid", "*,", "Ġsize", "_", "t", ");", "Ċ", "mem", "c", "py", "_", "t", "Ġcp", "Ġ=", "Ġ(", "mem", "c", "py", "_", "t", ")", "dl", "sym", "(", "RT", "LD", "_", "N", "EXT", ",", "Ġ\"", "mem", "c", "py", "\");", "Ċ", "}", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġ{", "Ċ", "void", "*", "Ġmem", "c", "py", "(", "void", "*", "Ġdest", ",", "Ġconst", "Ġvoid", "*", "Ġsrc", ",", "Ġsize", "_", "t", "Ġcount", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "inter", "vals", "Inter", "sect", "((", "size", "_", "t", ")", "dest", ",", "Ġ(", "size", "_", "t", ")", "src", ",", "Ġcount", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġcp", "(", "dest", ",", "Ġsrc", ",", "Ġcount", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġ\"", "Copy", "Ġof", "Ġintersect", "ed", "Ġintervals", "Ġ\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "(\"", "Ġ<<", "Ġ(", "size", "_", "t", ")", "src", "Ġ<<", "Ġ\"", ";\"", "Ġ<<", "Ġ(", "size", "_", "t", ")(", "src", ")", "Ġ+", "Ġcount", "Ġ<<", "Ġ\"[", "Ġ->", "Ġ\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "(\"", "Ġ<<", "Ġ(", "size", "_", "t", ")", "dest", "Ġ<<", "Ġ\"", ";\"", "Ġ<<", "Ġ(", "size", "_", "t", ")(", "dest", ")", "Ġ+", "Ġcount", "Ġ<<", "Ġ\"[", "!", "\\", "t", "\"", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\"", "Using", "Ġmem", "move", "()", "!", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstd", "::", "mem", "move", "(", "dest", ",", "Ġsrc", ",", "Ġcount", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "}"], "dataflow_graph": [["a", 4, "comesFrom", ["a"], [1]], ["a", 7, "comesFrom", ["a"], [1]], ["a", 10, "comesFrom", ["a"], [1]], ["a", 14, "comesFrom", ["a"], [1]], ["b", 5, "comesFrom", ["b"], [2]], ["b", 8, "comesFrom", ["b"], [2]], ["b", 11, "comesFrom", ["b"], [2]], ["b", 13, "comesFrom", ["b"], [2]], ["count", 12, "comesFrom", ["count"], [3]], ["count", 15, "comesFrom", ["count"], [3]], ["count", 26, "comesFrom", ["count"], [22]], ["count", 30, "comesFrom", ["count"], [22]], ["count", 34, "comesFrom", ["count"], [22]], ["count", 37, "comesFrom", ["count"], [22]], ["count", 41, "comesFrom", ["count"], [22]], ["cp", 27, "comesFrom", ["cp"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::800", "code": "//@ practics : use Union to change \"0x12345678\" to \"56781234\"\n//@ note     : another way is use pointer directly\n\n#include <iostream>\n\nusing namespace std;\nunion test\n{\n\tint i;\n\t/*char s[4];*/\n\tshort t[2];\n};\nint main() {\n\tunion test temp = { 0x12345678 };\n\t// short =2 bytes\n\tshort *p = (short *)&temp;\n\t//swop\n\tshort temp2 = p[1];\n\tp[1] = p[0];\n\tp[0] = temp2;\n\n\tprintf(\"%x\", temp.i); //output：56781234　\n\tgetchar();\n\treturn 0;\n}", "code_tokens": ["Ġ//", "@", "Ġpract", "ics", "Ġ:", "Ġuse", "ĠUnion", "Ġto", "Ġchange", "Ġ\"", "0", "x", "123", "45", "678", "\"", "Ġto", "Ġ\"", "5", "678", "12", "34", "\"", "Ċ", "//", "@", "Ġnote", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġanother", "Ġway", "Ġis", "Ġuse", "Ġpointer", "Ġdirectly", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "union", "Ġtest", "Ċ", "{", "Ċ", "ĉ", "int", "Ġi", ";", "Ċ", "ĉ", "/*", "char", "Ġs", "[", "4", "];", "*/", "Ċ", "ĉ", "short", "Ġt", "[", "2", "];", "Ċ", "};", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "union", "Ġtest", "Ġtemp", "Ġ=", "Ġ{", "Ġ0", "x", "123", "45", "678", "Ġ};", "Ċ", "ĉ", "//", "Ġshort", "Ġ=", "2", "Ġbytes", "Ċ", "ĉ", "short", "Ġ*", "p", "Ġ=", "Ġ(", "short", "Ġ*)", "&", "temp", ";", "Ċ", "ĉ", "//", "sw", "op", "Ċ", "ĉ", "short", "Ġtemp", "2", "Ġ=", "Ġp", "[", "1", "];", "Ċ", "ĉ", "p", "[", "1", "]", "Ġ=", "Ġp", "[", "0", "];", "Ċ", "ĉ", "p", "[", "0", "]", "Ġ=", "Ġtemp", "2", ";", "ĊĊ", "ĉ", "printf", "(\"", "%", "x", "\",", "Ġtemp", ".", "i", ");", "Ġ//", "output", "ï", "¼", "ļ", "5", "678", "12", "34", "ãĢ", "Ģ", "Ċ", "ĉ", "get", "char", "();", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["temp", 6, "comesFrom", ["temp"], [4]], ["temp", 14, "comesFrom", ["temp"], [4]], ["temp2", 12, "comesFrom", ["temp2"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::801", "code": "#include \"Bullet.h\"\n\nusing namespace BF;\nusing namespace BF::Graphics;\nusing namespace BF::Graphics::Renderers;\nusing namespace BF::Math;\nusing namespace BF::Input;\n\nBullet::Bullet(SpriteRenderer& spriteRenderer) :\n\tspriteRenderer(spriteRenderer), speed(10.0f)\n{\n}\n\nBullet::~Bullet()\n{\n}\n\nvoid Bullet::Initialize()\n{\n\tbullet = RegularPolygon(Math::Rectangle(0, 0, 8, 8), 0, Color(0.5f, 0.0f, 0.0f, 1.0f));\n}\n\nvoid Bullet::Load()\n{\n}\n\nvoid Bullet::Update()\n{\n\tposition += direction * speed;\n\tbullet.SetPosition(position);\n}\n\nvoid Bullet::Render()\n{\n\tspriteRenderer.Render(bullet);\n}\n\nBullet& Bullet::operator=(const Bullet& b)\n{\n\tthis->spriteRenderer = b.spriteRenderer;\n\tthis->bullet = b.bullet;\n\tthis->speed = b.speed;\n\tthis->position = b.position;\n\tthis->direction = b.direction;\n\n\treturn *this;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Bul", "let", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "ĠBF", ";", "Ċ", "using", "Ġnamespace", "ĠBF", "::", "Graphics", ";", "Ċ", "using", "Ġnamespace", "ĠBF", "::", "Graphics", "::", "R", "end", "erers", ";", "Ċ", "using", "Ġnamespace", "ĠBF", "::", "Math", ";", "Ċ", "using", "Ġnamespace", "ĠBF", "::", "Input", ";", "Ċ", "Ċ", "Bul", "let", "::", "Bul", "let", "(", "Spr", "ite", "R", "end", "erer", "&", "Ġsprite", "R", "end", "erer", ")", "Ġ:", "Ċ", "ĉ", "spr", "ite", "R", "end", "erer", "(", "spr", "ite", "R", "end", "erer", "),", "Ġspeed", "(", "10", ".", "0", "f", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Bul", "let", "::", "~", "Bul", "let", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBullet", "::", "Initial", "ize", "()", "Ċ", "{", "Ċ", "ĉ", "bul", "let", "Ġ=", "ĠRegular", "Poly", "gon", "(", "Math", "::", "Rect", "angle", "(", "0", ",", "Ġ0", ",", "Ġ8", ",", "Ġ8", "),", "Ġ0", ",", "ĠColor", "(", "0", ".", "5", "f", ",", "Ġ0", ".", "0", "f", ",", "Ġ0", ".", "0", "f", ",", "Ġ1", ".", "0", "f", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBullet", "::", "Load", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBullet", "::", "Update", "()", "Ċ", "{", "Ċ", "ĉ", "position", "Ġ+=", "Ġdirection", "Ġ*", "Ġspeed", ";", "Ċ", "ĉ", "bul", "let", ".", "Set", "Position", "(", "position", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBullet", "::", "Render", "()", "Ċ", "{", "Ċ", "ĉ", "spr", "ite", "R", "end", "erer", ".", "Render", "(", "bul", "let", ");", "Ċ", "}", "Ċ", "Ċ", "Bul", "let", "&", "ĠBullet", "::", "operator", "=(", "const", "ĠBullet", "&", "Ġb", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "spr", "ite", "R", "end", "erer", "Ġ=", "Ġb", ".", "spr", "ite", "R", "end", "erer", ";", "Ċ", "ĉ", "this", "->", "bul", "let", "Ġ=", "Ġb", ".", "bul", "let", ";", "Ċ", "ĉ", "this", "->", "speed", "Ġ=", "Ġb", ".", "speed", ";", "Ċ", "ĉ", "this", "->", "position", "Ġ=", "Ġb", ".", "position", ";", "Ċ", "ĉ", "this", "->", "direction", "Ġ=", "Ġb", ".", "direction", ";", "ĊĊ", "ĉ", "return", "Ġ*", "this", ";", "Ċ", "}"], "dataflow_graph": [["bullet", 21, "comesFrom", ["bullet"], [12]], ["bullet", 27, "comesFrom", ["bullet"], [12]], ["bullet", 32, "comesFrom", ["bullet"], [12]], ["bullet", 34, "comesFrom", ["bullet"], [12]], ["position", 23, "comesFrom", ["position"], [18]], ["position", 38, "comesFrom", ["position"], [18]], ["position", 40, "comesFrom", ["position"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::802", "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    bool searchMatrix(vector< vector<int> > &matrix, int target) {\n        if (matrix.size() == 0) {\n            return false;\n        }\n        int rows = matrix.size();\n        int cols = matrix[0].size();\n        int i = 0;\n        int j = cols - 1;\n        while (i < rows && j >= 0) {\n            if (target == matrix[i][j]) {\n                return true;\n            }\n            else if (target < matrix[i][j]) {\n                j--;\n            }\n            else {\n                i++;\n            }\n        }\n        return false;\n    }\n};\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġsearch", "Matrix", "(", "vector", "<", "Ġvector", "<", "int", ">", "Ġ>", "Ġ&", "mat", "rix", ",", "Ġint", "Ġtarget", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "mat", "rix", ".", "size", "()", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġrows", "Ġ=", "Ġmatrix", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġcol", "s", "Ġ=", "Ġmatrix", "[", "0", "].", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġj", "Ġ=", "Ġcol", "s", "Ġ-", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "i", "Ġ<", "Ġrows", "Ġ&&", "Ġj", "Ġ>=", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "target", "Ġ==", "Ġmatrix", "[", "i", "][", "j", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "target", "Ġ<", "Ġmatrix", "[", "i", "][", "j", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġj", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġi", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["cols", 14, "comesFrom", ["cols"], [9]], ["i", 15, "comesFrom", ["i"], [12]], ["i", 20, "comesFrom", ["i"], [12]], ["i", 24, "comesFrom", ["i"], [12]], ["i", 27, "comesFrom", ["i"], [12]], ["rows", 16, "comesFrom", ["rows"], [6]], ["j", 17, "comesFrom", ["j"], [13]], ["j", 21, "comesFrom", ["j"], [13]], ["j", 25, "comesFrom", ["j"], [13]], ["j", 26, "comesFrom", ["j"], [13]], ["target", 18, "comesFrom", ["target"], [3]], ["target", 22, "comesFrom", ["target"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::803", "code": "#include <algorithm>\n#include <cstddef>\nusing std::min;\nusing std::max;\n\n#include \"trapping_rain_water.h\"\n\nint TrappingRainWater::trap(int A[], int n) {\n  if (A == NULL || n <= 0) return 0;\n\n  int trap_sum = 0, max_left_height = 0, max_right_height = 0;\n\n  // For any given bar i/j, the volume of trapping water depends on the maximum le\n  // -ft bar within [0, i] and maxium right bar within [j, n), the shorter one w\n  // -ill decide the final trapping volume.\n  // In order to simplify the problem, we define below rules:\n  //  1. Only do calculation for bar i if max_left_height <= max_right_height.\n  //  2. If 1 is not satisfied, let's do it for bar j.\n  // Above condition can guarantee, no matter what happens between (i, j) in the\n  // future, the trapping water on bar i/j is always correct, aka, the correct s\n  // -horter one.\n  for (int i = 0, j = n - 1; i <= j;) {\n    max_left_height = max(max_left_height, A[i]);\n    max_right_height = max(max_right_height, A[j]);\n\n    if (max_left_height <= max_right_height) {\n      trap_sum += (max_left_height - A[i]);\n      ++i;\n    } else {\n      trap_sum += (max_right_height - A[j]);\n      --j;\n    }\n  }\n\n  return trap_sum;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "c", "st", "dd", "ef", ">", "Ċ", "using", "Ġstd", "::", "min", ";", "Ċ", "using", "Ġstd", "::", "max", ";", "Ċ", "Ċ", "#", "include", "Ġ\"", "tra", "pping", "_", "rain", "_", "water", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠTra", "pping", "Rain", "Water", "::", "trap", "(", "int", "ĠA", "[", "],", "Ġint", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "A", "Ġ==", "ĠNULL", "Ġ||", "Ġn", "Ġ<=", "Ġ0", ")", "Ġreturn", "Ġ0", ";", "ĊĊ", "Ġ", "Ġint", "Ġtrap", "_", "sum", "Ġ=", "Ġ0", ",", "Ġmax", "_", "left", "_", "height", "Ġ=", "Ġ0", ",", "Ġmax", "_", "right", "_", "height", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ//", "ĠFor", "Ġany", "Ġgiven", "Ġbar", "Ġi", "/", "j", ",", "Ġthe", "Ġvolume", "Ġof", "Ġtrapping", "Ġwater", "Ġdepends", "Ġon", "Ġthe", "Ġmaximum", "Ġle", "Ċ", "Ġ", "Ġ//", "Ġ-", "ft", "Ġbar", "Ġwithin", "Ġ[", "0", ",", "Ġi", "]", "Ġand", "Ġmax", "ium", "Ġright", "Ġbar", "Ġwithin", "Ġ[", "j", ",", "Ġn", "),", "Ġthe", "Ġshorter", "Ġone", "Ġw", "Ċ", "Ġ", "Ġ//", "Ġ-", "ill", "Ġdecide", "Ġthe", "Ġfinal", "Ġtrapping", "Ġvolume", ".", "Ċ", "Ġ", "Ġ//", "ĠIn", "Ġorder", "Ġto", "Ġsimplify", "Ġthe", "Ġproblem", ",", "Ġwe", "Ġdefine", "Ġbelow", "Ġrules", ":", "Ċ", "Ġ", "Ġ//", "Ġ", "Ġ1", ".", "ĠOnly", "Ġdo", "Ġcalculation", "Ġfor", "Ġbar", "Ġi", "Ġif", "Ġmax", "_", "left", "_", "height", "Ġ<=", "Ġmax", "_", "right", "_", "height", ".", "Ċ", "Ġ", "Ġ//", "Ġ", "Ġ2", ".", "ĠIf", "Ġ1", "Ġis", "Ġnot", "Ġsatisfied", ",", "Ġlet", "'s", "Ġdo", "Ġit", "Ġfor", "Ġbar", "Ġj", ".", "Ċ", "Ġ", "Ġ//", "ĠAbove", "Ġcondition", "Ġcan", "Ġguarantee", ",", "Ġno", "Ġmatter", "Ġwhat", "Ġhappens", "Ġbetween", "Ġ(", "i", ",", "Ġj", ")", "Ġin", "Ġthe", "Ċ", "Ġ", "Ġ//", "Ġfuture", ",", "Ġthe", "Ġtrapping", "Ġwater", "Ġon", "Ġbar", "Ġi", "/", "j", "Ġis", "Ġalways", "Ġcorrect", ",", "Ġaka", ",", "Ġthe", "Ġcorrect", "Ġs", "Ċ", "Ġ", "Ġ//", "Ġ-", "h", "orter", "Ġone", ".", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ",", "Ġj", "Ġ=", "Ġn", "Ġ-", "Ġ1", ";", "Ġi", "Ġ<=", "Ġj", ";", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmax", "_", "left", "_", "height", "Ġ=", "Ġmax", "(", "max", "_", "left", "_", "height", ",", "ĠA", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmax", "_", "right", "_", "height", "Ġ=", "Ġmax", "(", "max", "_", "right", "_", "height", ",", "ĠA", "[", "j", "]);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "max", "_", "left", "_", "height", "Ġ<=", "Ġmax", "_", "right", "_", "height", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtrap", "_", "sum", "Ġ+=", "Ġ(", "max", "_", "left", "_", "height", "Ġ-", "ĠA", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "i", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtrap", "_", "sum", "Ġ+=", "Ġ(", "max", "_", "right", "_", "height", "Ġ-", "ĠA", "[", "j", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ--", "j", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġtrap", "_", "sum", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 6, "comesFrom", ["n"], [4]], ["n", 12, "comesFrom", ["n"], [4]], ["i", 13, "comesFrom", ["i"], [10]], ["i", 19, "comesFrom", ["i"], [10]], ["i", 30, "comesFrom", ["i"], [10]], ["i", 31, "comesFrom", ["i"], [10]], ["j", 14, "comesFrom", ["j"], [11]], ["j", 24, "comesFrom", ["j"], [11]], ["j", 35, "comesFrom", ["j"], [11]], ["j", 36, "comesFrom", ["j"], [11]], ["max_left_height", 17, "comesFrom", ["max_left_height"], [15]], ["max_left_height", 25, "comesFrom", ["max_left_height"], [15]], ["max_left_height", 28, "comesFrom", ["max_left_height"], [15]], ["max_right_height", 22, "comesFrom", ["max_right_height"], [20]], ["max_right_height", 26, "comesFrom", ["max_right_height"], [20]], ["max_right_height", 33, "comesFrom", ["max_right_height"], [20]], ["trap_sum", 37, "comesFrom", ["trap_sum"], [32]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::804", "code": "#include <SDKDDKVer.h>\n\n// Disable Error C4996 that occur when using Boost.Signals2.\n#ifdef _DEBUG\n#define _SCL_SECURE_NO_WARNINGS\n#endif\n\n#include \"KinectGrabber.h\"\n#include <pcl/visualization/cloud_viewer.h>\n\n#include <iostream>\n\n//int _tmain( int argc, _TCHAR* argv[] )\nint main(int argc, char* argv[])\n{\n\t// Create Cloud Viewer\n\tpcl::visualization::CloudViewer viewer(\"Point Cloud Viewer\");\n\n\t// Callback Function to be called when Updating Data\n\tboost::function<void(const pcl::PointCloud<pcl::PointXYZRGB>::ConstPtr&)> function =\n\t\t[&viewer](const pcl::PointCloud<pcl::PointXYZRGB>::ConstPtr &cloud)\n\t{\n\t\tif (!viewer.wasStopped()){\n\t\t\tviewer.showCloud(cloud);\n\t\t}\n\t};\n\n\t// Create KinectGrabber\n\tpcl::Grabber* grabber = new pcl::KinectGrabber();\n\n\t// Regist Callback Function\n\tgrabber->registerCallback(function);\n\n\t// Start Retrieve Data\n\tgrabber->start();\n\n\twhile (!viewer.wasStopped())\n\t{\n\t\t// Input Key ( Exit ESC key )\n\t\tif (GetKeyState(VK_ESCAPE) < 0){\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Stop Retrieve Data\n\tgrabber->stop();\n\n\treturn EXIT_SUCCESS;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "SD", "K", "DD", "K", "Ver", ".", "h", ">", "Ċ", "Ċ", "//", "ĠDisable", "ĠError", "ĠC", "499", "6", "Ġthat", "Ġoccur", "Ġwhen", "Ġusing", "ĠBoost", ".", "Sign", "als", "2", ".", "Ċ", "#", "if", "def", "Ġ_", "DEBUG", "Ċ", "#", "define", "Ġ_", "S", "CL", "_", "SEC", "URE", "_", "NO", "_", "WARNING", "S", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "include", "Ġ\"", "Kin", "ect", "Grab", "ber", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "p", "cl", "/", "visual", "ization", "/", "cloud", "_", "view", "er", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "//", "int", "Ġ_", "t", "main", "(", "Ġint", "Ġarg", "c", ",", "Ġ_", "T", "CHAR", "*", "Ġarg", "v", "[]", "Ġ)", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "//", "ĠCreate", "ĠCloud", "ĠView", "er", "Ċ", "ĉ", "p", "cl", "::", "visual", "ization", "::", "Cloud", "View", "er", "Ġviewer", "(\"", "Point", "ĠCloud", "ĠView", "er", "\");", "ĊĊ", "ĉ", "//", "ĠCall", "back", "ĠFunction", "Ġto", "Ġbe", "Ġcalled", "Ġwhen", "ĠUp", "dating", "ĠData", "Ċ", "ĉ", "boost", "::", "function", "<", "void", "(", "const", "Ġp", "cl", "::", "Point", "Cloud", "<", "p", "cl", "::", "Point", "XY", "Z", "RGB", ">", "::", "Const", "Ptr", "&", ")", ">", "Ġfunction", "Ġ=", "Ċ", "ĉ", "ĉ", "[", "&", "view", "er", "](", "const", "Ġp", "cl", "::", "Point", "Cloud", "<", "p", "cl", "::", "Point", "XY", "Z", "RGB", ">", "::", "Const", "Ptr", "Ġ&", "cloud", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(!", "view", "er", ".", "was", "St", "opped", "()", "){", "Ċ", "ĉ", "ĉ", "ĉ", "view", "er", ".", "show", "Cloud", "(", "cloud", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "};", "ĊĊ", "ĉ", "//", "ĠCreate", "ĠKinect", "Grab", "ber", "Ċ", "ĉ", "p", "cl", "::", "Grab", "ber", "*", "Ġgrab", "ber", "Ġ=", "Ġnew", "Ġp", "cl", "::", "Kin", "ect", "Grab", "ber", "();", "ĊĊ", "ĉ", "//", "ĠRegist", "ĠCall", "back", "ĠFunction", "Ċ", "ĉ", "grab", "ber", "->", "register", "Callback", "(", "function", ");", "ĊĊ", "ĉ", "//", "ĠStart", "ĠRet", "rieve", "ĠData", "Ċ", "ĉ", "grab", "ber", "->", "start", "();", "ĊĊ", "ĉ", "while", "Ġ(!", "view", "er", ".", "was", "St", "opped", "())", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "//", "ĠInput", "ĠKey", "Ġ(", "ĠExit", "ĠESC", "Ġkey", "Ġ)", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "Get", "Key", "State", "(", "VK", "_", "ES", "CAP", "E", ")", "Ġ<", "Ġ0", "){", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "//", "ĠStop", "ĠRet", "rieve", "ĠData", "Ċ", "ĉ", "grab", "ber", "->", "stop", "();", "ĊĊ", "ĉ", "return", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "}"], "dataflow_graph": [["viewer", 7, "comesFrom", ["viewer"], [5]], ["viewer", 9, "comesFrom", ["viewer"], [5]], ["viewer", 11, "comesFrom", ["viewer"], [5]], ["viewer", 20, "comesFrom", ["viewer"], [5]], ["function", 17, "comesFrom", ["function"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::805", "code": "class Solution {\npublic:\n    string reverseVowels(string s) {\n        string vowels = \"aeiouAEIOU\";\n        string str = \"\";\n        vector<int> v;\n\n        for (int i = 0; i < s.size(); i++) {\n            for (int j = 0; j < vowels.size(); j++) {\n                if (s[i] == vowels[j]) {\n                    v.push_back(i);\n                    str += s[i];\n                }\n            }\n        }\n\n        reverse(str.begin(), str.end());\n\n        for (int i = 0; i < v.size(); i++) {\n            s[v[i]] = str[i];\n        }\n        \n        return s;\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġreverse", "V", "ow", "els", "(", "string", "Ġs", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġvow", "els", "Ġ=", "Ġ\"", "ae", "i", "ou", "AE", "I", "OU", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġstr", "Ġ=", "Ġ\"", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġv", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġs", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġvow", "els", ".", "size", "();", "Ġj", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "[", "i", "]", "Ġ==", "Ġvow", "els", "[", "j", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġv", ".", "push", "_", "back", "(", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstr", "Ġ+=", "Ġs", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreverse", "(", "str", ".", "begin", "(),", "Ġstr", ".", "end", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġv", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "[", "v", "[", "i", "]]", "Ġ=", "Ġstr", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["i", 6, "comesFrom", ["i"], [5]], ["i", 9, "comesFrom", ["i"], [5]], ["i", 16, "comesFrom", ["i"], [5]], ["i", 21, "comesFrom", ["i"], [5]], ["i", 24, "comesFrom", ["i"], [5]], ["i", 31, "comesFrom", ["i"], [30]], ["i", 34, "comesFrom", ["i"], [30]], ["i", 37, "comesFrom", ["i"], [30]], ["i", 39, "comesFrom", ["i"], [30]], ["s", 7, "comesFrom", ["s"], [1]], ["s", 15, "comesFrom", ["s"], [1]], ["s", 23, "comesFrom", ["s"], [1]], ["s", 35, "comesFrom", ["s"], [1]], ["s", 40, "comesFrom", ["s"], [1]], ["j", 11, "comesFrom", ["j"], [10]], ["j", 14, "comesFrom", ["j"], [10]], ["j", 18, "comesFrom", ["j"], [10]], ["vowels", 12, "comesFrom", ["vowels"], [2]], ["vowels", 17, "comesFrom", ["vowels"], [2]], ["v", 19, "comesFrom", ["v"], [4]], ["v", 32, "comesFrom", ["v"], [4]], ["v", 36, "comesFrom", ["v"], [4]], ["str", 26, "comesFrom", ["str"], [22]], ["str", 28, "comesFrom", ["str"], [22]], ["str", 38, "comesFrom", ["str"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::806", "code": "\n#include \"RenderTarget.h\"\n#include \"Texture.h\"\n\nnamespace three {\n\n  RenderTarget::RenderTarget(int width_, int height_,\n                             Format colorFormat,\n                             Type colorType,\n                             bool depthBuffer)\n    : width(width_),\n      height(height_),\n      colorTexture(0),\n      depthTexture(0),\n      __renderTarget(0)\n  {\n    colorTexture = new Texture();\n    colorTexture->width = width;\n    colorTexture->height = height;\n    colorTexture->type = Texture2D;\n    colorTexture->format = colorFormat;\n    colorTexture->imageDataType = colorType;\n    colorTexture->generateMipmaps = false;\n\n    if (depthBuffer)\n    {\n      depthTexture = new Texture();\n      depthTexture->width = width;\n      depthTexture->height = height;\n      depthTexture->type = Texture2D;\n      depthTexture->format = DepthFormat;\n      depthTexture->imageDataType = FloatType;\n      depthTexture->generateMipmaps = false;\n    }\n  }\n\n  RenderTarget::~RenderTarget()\n  {\n  }\n\n}", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "Render", "Target", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Texture", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġthree", "Ġ{", "ĊĊ", "Ġ", "ĠRender", "Target", "::", "Render", "Target", "(", "int", "Ġwidth", "_", ",", "Ġint", "Ġheight", "_", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠFormat", "Ġcolor", "Format", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠType", "Ġcolor", "Type", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġdepth", "Buffer", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġwidth", "(", "width", "_", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġheight", "(", "height", "_", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcolor", "Texture", "(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdepth", "Texture", "(", "0", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ__", "render", "Target", "(", "0", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcolor", "Texture", "Ġ=", "Ġnew", "ĠTexture", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcolor", "Texture", "->", "width", "Ġ=", "Ġwidth", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcolor", "Texture", "->", "height", "Ġ=", "Ġheight", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcolor", "Texture", "->", "type", "Ġ=", "ĠTexture", "2", "D", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcolor", "Texture", "->", "format", "Ġ=", "Ġcolor", "Format", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcolor", "Texture", "->", "image", "Data", "Type", "Ġ=", "Ġcolor", "Type", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcolor", "Texture", "->", "gener", "ate", "M", "ip", "maps", "Ġ=", "Ġfalse", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "depth", "Buffer", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdepth", "Texture", "Ġ=", "Ġnew", "ĠTexture", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdepth", "Texture", "->", "width", "Ġ=", "Ġwidth", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdepth", "Texture", "->", "height", "Ġ=", "Ġheight", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdepth", "Texture", "->", "type", "Ġ=", "ĠTexture", "2", "D", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdepth", "Texture", "->", "format", "Ġ=", "ĠDepth", "Format", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdepth", "Texture", "->", "image", "Data", "Type", "Ġ=", "ĠFloat", "Type", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdepth", "Texture", "->", "gener", "ate", "M", "ip", "maps", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "ĠRender", "Target", "::", "~", "Render", "Target", "()", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "}"], "dataflow_graph": [["width_", 7, "comesFrom", ["width_"], [1]], ["height_", 9, "comesFrom", ["height_"], [2]], ["colorTexture", 14, "comesFrom", ["colorTexture"], [13]], ["colorTexture", 17, "comesFrom", ["colorTexture"], [13]], ["colorTexture", 20, "comesFrom", ["colorTexture"], [13]], ["colorTexture", 23, "comesFrom", ["colorTexture"], [13]], ["colorTexture", 26, "comesFrom", ["colorTexture"], [13]], ["colorTexture", 29, "comesFrom", ["colorTexture"], [13]], ["depthTexture", 33, "comesFrom", ["depthTexture"], [32]], ["depthTexture", 36, "comesFrom", ["depthTexture"], [32]], ["depthTexture", 39, "comesFrom", ["depthTexture"], [32]], ["depthTexture", 42, "comesFrom", ["depthTexture"], [32]], ["depthTexture", 45, "comesFrom", ["depthTexture"], [32]], ["depthTexture", 48, "comesFrom", ["depthTexture"], [32]], ["colorFormat", 25, "comesFrom", ["colorFormat"], [3]], ["colorType", 28, "comesFrom", ["colorType"], [4]], ["depthBuffer", 31, "comesFrom", ["depthBuffer"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::807", "code": "#include \"ProjectEuler.h\"\n#include \"Utility.h\"\n\nlong long Problem_4_Largest_Palindrome_Product()\n{\n    std::vector<long long> palindromes;\n    for (int i = 999; i > 99; i--)\n    {\n        for (int j = 999; j > 99; j--)\n        {\n            long long value = i * j;\n            std::string valueStr = std::to_string(value);\n            std::string reverseStr = valueStr;\n            std::reverse(std::begin(reverseStr), std::end(reverseStr));\n            if (valueStr.compare(reverseStr) == 0)\n            {\n                palindromes.push_back(value);\n            }\n        }\n    }\n    return *std::max_element(std::begin(palindromes), std::end(palindromes));\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Project", "E", "uler", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Ut", "ility", ".", "h", "\"", "Ċ", "Ċ", "long", "Ġlong", "ĠProblem", "_", "4", "_", "L", "arg", "est", "_", "Pal", "ind", "rome", "_", "Product", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "long", "Ġlong", ">", "Ġpal", "ind", "rom", "es", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ999", ";", "Ġi", "Ġ>", "Ġ99", ";", "Ġi", "--", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ999", ";", "Ġj", "Ġ>", "Ġ99", ";", "Ġj", "--", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġlong", "Ġvalue", "Ġ=", "Ġi", "Ġ*", "Ġj", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġvalue", "Str", "Ġ=", "Ġstd", "::", "to", "_", "string", "(", "value", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġreverse", "Str", "Ġ=", "Ġvalue", "Str", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "reverse", "(", "std", "::", "begin", "(", "reverse", "Str", "),", "Ġstd", "::", "end", "(", "reverse", "Str", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "value", "Str", ".", "comp", "are", "(", "reverse", "Str", ")", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpal", "ind", "rom", "es", ".", "push", "_", "back", "(", "value", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ*", "std", "::", "max", "_", "element", "(", "std", "::", "begin", "(", "pal", "ind", "rom", "es", "),", "Ġstd", "::", "end", "(", "pal", "ind", "rom", "es", "));", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 3, "comesFrom", ["i"], [2]], ["i", 4, "comesFrom", ["i"], [2]], ["i", 9, "comesFrom", ["i"], [2]], ["j", 6, "comesFrom", ["j"], [5]], ["j", 7, "comesFrom", ["j"], [5]], ["j", 10, "comesFrom", ["j"], [5]], ["value", 13, "comesFrom", ["value"], [8]], ["value", 26, "comesFrom", ["value"], [8]], ["reverseStr", 18, "comesFrom", ["reverseStr"], [14]], ["reverseStr", 20, "comesFrom", ["reverseStr"], [14]], ["reverseStr", 23, "comesFrom", ["reverseStr"], [14]], ["valueStr", 21, "comesFrom", ["valueStr"], [15]], ["palindromes", 24, "comesFrom", ["palindromes"], [1]], ["palindromes", 29, "comesFrom", ["palindromes"], [1]], ["palindromes", 31, "comesFrom", ["palindromes"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::808", "code": "// UWOTM8 Engine - 2014 Mitchell Andrews\n#include \"Logger.h\"\n\nLogger::Logger() {\n}\n\nLogger::~Logger() {\n}\n\nvoid Logger::SetLogFile(std::string filename) {\n\tmLogFileLocation = filename;\n}\n\nvoid Logger::SetLogPriority(LogType priority) {\n\tmPriority = priority;\n}\n\nbool Logger::Log(LogType priority, std::string message) {\n\tif (mPriority == NONE) return false;\n\tif (priority < mPriority)\n\t\treturn false;\n\n\tmLogFile.open(mLogFileLocation, std::ios_base::app);\n\n\tchar* type;\n\tswitch (priority) {\n\tcase INFO:\n\t\ttype = \"[Info]: \";\n\t\tbreak;\n\tcase TRACE:\n\t\ttype = \"[Trace]: \";\n\t\tbreak;\n\tcase DEBUG:\n\t\ttype = \"[Debug]: \";\n\t\tbreak;\n\tcase WARN:\n\t\ttype = \"[Warning]: \";\n\t\tbreak;\n\tcase ERR:\n\t\ttype = \"[Error]: \";\n\t\tbreak;\n\tdefault:\n\t\ttype = \"[Unknown]: \";\n\t\tbreak;\n\t}\n\tmLogFile << type << message.c_str() << std::endl;\n\tmLogFile.close();\n\treturn true;\n}", "code_tokens": ["Ġ//", "ĠUW", "OT", "M", "8", "ĠEngine", "Ġ-", "Ġ2014", "ĠMitchell", "ĠAndrews", "Ċ", "#", "include", "Ġ\"", "Log", "ger", ".", "h", "\"", "Ċ", "Ċ", "Log", "ger", "::", "Log", "ger", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Log", "ger", "::", "~", "Log", "ger", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLog", "ger", "::", "Set", "Log", "File", "(", "std", "::", "string", "Ġfilename", ")", "Ġ{", "Ċ", "ĉ", "m", "Log", "File", "Location", "Ġ=", "Ġfilename", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLog", "ger", "::", "Set", "Log", "Prior", "ity", "(", "Log", "Type", "Ġpriority", ")", "Ġ{", "Ċ", "ĉ", "m", "Prior", "ity", "Ġ=", "Ġpriority", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠLog", "ger", "::", "Log", "(", "Log", "Type", "Ġpriority", ",", "Ġstd", "::", "string", "Ġmessage", ")", "Ġ{", "Ċ", "ĉ", "if", "Ġ(", "m", "Prior", "ity", "Ġ==", "ĠN", "ONE", ")", "Ġreturn", "Ġfalse", ";", "Ċ", "ĉ", "if", "Ġ(", "priority", "Ġ<", "Ġm", "Prior", "ity", ")", "Ċ", "ĉ", "ĉ", "return", "Ġfalse", ";", "ĊĊ", "ĉ", "m", "Log", "File", ".", "open", "(", "m", "Log", "File", "Location", ",", "Ġstd", "::", "ios", "_", "base", "::", "app", ");", "ĊĊ", "ĉ", "char", "*", "Ġtype", ";", "Ċ", "ĉ", "switch", "Ġ(", "priority", ")", "Ġ{", "Ċ", "ĉ", "case", "ĠINFO", ":", "Ċ", "ĉ", "ĉ", "type", "Ġ=", "Ġ\"[", "Info", "]:", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "case", "ĠTR", "ACE", ":", "Ċ", "ĉ", "ĉ", "type", "Ġ=", "Ġ\"[", "Tr", "ace", "]:", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "case", "ĠDEBUG", ":", "Ċ", "ĉ", "ĉ", "type", "Ġ=", "Ġ\"[", "Debug", "]:", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "case", "ĠWARN", ":", "Ċ", "ĉ", "ĉ", "type", "Ġ=", "Ġ\"[", "Warning", "]:", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "case", "ĠER", "R", ":", "Ċ", "ĉ", "ĉ", "type", "Ġ=", "Ġ\"[", "Error", "]:", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "default", ":", "Ċ", "ĉ", "ĉ", "type", "Ġ=", "Ġ\"[", "Unknown", "]:", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "m", "Log", "File", "Ġ<<", "Ġtype", "Ġ<<", "Ġmessage", ".", "c", "_", "str", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "m", "Log", "File", ".", "close", "();", "Ċ", "ĉ", "return", "Ġtrue", ";", "Ċ", "}"], "dataflow_graph": [["filename", 5, "comesFrom", ["filename"], [3]], ["priority", 9, "comesFrom", ["priority"], [7]], ["priority", 15, "comesFrom", ["priority"], [11]], ["priority", 22, "comesFrom", ["priority"], [11]], ["mPriority", 13, "comesFrom", ["mPriority"], [8]], ["mPriority", 16, "comesFrom", ["mPriority"], [8]], ["mLogFileLocation", 19, "comesFrom", ["mLogFileLocation"], [4]], ["type", 35, "comesFrom", ["type"], [33]], ["message", 36, "comesFrom", ["message"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::809", "code": "#include \"pin/lightmodel.h\"\n\n// source includes\n#include \"pin/pin.h\"\n#include \"core/position.h\"\n#include \"core/direction.h\"\n\n// library includes\n#include <QPainter>\n\nLightModel::LightModel(QImage *images[2], Pin *pin, Position *pos, Direction dir):\n    position(pos),\n    light(pin),\n    imageOn(images[0]),\n    imageOff(images[1]) {\n\n    QTransform transform;\n    QImage *tempImageOff = imageOff;\n    QImage *tempImageOn = imageOn;\n\n    transform.rotate(dir.degrees() - 90);\n    imageOff = new QImage(imageOff->transformed(transform));\n    imageOn = new QImage(imageOn->transformed(transform));\n\n    delete tempImageOff;\n    delete tempImageOn;\n}\n\nvoid LightModel::draw() {\n    QPainter painter(paintDevice);\n    QImage *image = (light->getState()) ? (imageOn) : (imageOff);\n\n    painter.drawImage(position->getX(), position->getY(), *image);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "pin", "/", "light", "model", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġsource", "Ġincludes", "Ċ", "#", "include", "Ġ\"", "pin", "/", "pin", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "position", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "core", "/", "direction", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġlibrary", "Ġincludes", "Ċ", "#", "include", "Ġ<", "Q", "Pain", "ter", ">", "Ċ", "Ċ", "Light", "Model", "::", "Light", "Model", "(", "Q", "Image", "Ġ*", "images", "[", "2", "],", "ĠPin", "Ġ*", "pin", ",", "ĠPosition", "Ġ*", "pos", ",", "ĠDirection", "Ġdir", "):", "Ċ", "Ġ", "Ġ", "Ġ", "Ġposition", "(", "pos", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlight", "(", "pin", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġimage", "On", "(", "images", "[", "0", "]),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġimage", "Off", "(", "images", "[", "1", "])", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "Transform", "Ġtransform", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Image", "Ġ*", "temp", "Image", "Off", "Ġ=", "Ġimage", "Off", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Image", "Ġ*", "temp", "Image", "On", "Ġ=", "Ġimage", "On", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġtransform", ".", "rot", "ate", "(", "dir", ".", "deg", "rees", "()", "Ġ-", "Ġ90", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġimage", "Off", "Ġ=", "Ġnew", "ĠQ", "Image", "(", "image", "Off", "->", "trans", "formed", "(", "transform", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġimage", "On", "Ġ=", "Ġnew", "ĠQ", "Image", "(", "image", "On", "->", "trans", "formed", "(", "transform", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġtemp", "Image", "Off", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġtemp", "Image", "On", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLight", "Model", "::", "draw", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Pain", "ter", "Ġpainter", "(", "p", "aint", "Device", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Image", "Ġ*", "image", "Ġ=", "Ġ(", "light", "->", "get", "State", "())", "Ġ?", "Ġ(", "image", "On", ")", "Ġ:", "Ġ(", "image", "Off", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġpainter", ".", "draw", "Image", "(", "position", "->", "get", "X", "(),", "Ġposition", "->", "get", "Y", "(),", "Ġ*", "image", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["imageOn", 27, "comesFrom", ["imageOn"], [26]], ["imageOn", 37, "comesFrom", ["imageOn"], [26]], ["imageOff", 23, "comesFrom", ["imageOff"], [22]], ["imageOff", 38, "comesFrom", ["imageOff"], [22]], ["transform", 18, "comesFrom", ["transform"], [13]], ["transform", 25, "comesFrom", ["transform"], [13]], ["transform", 29, "comesFrom", ["transform"], [13]], ["dir", 20, "comesFrom", ["dir"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::810", "code": "#include <cstdlib>\n#include <algorithm>\n#include <array>\n#include <iostream>\n\nstatic const int N_CARDS = 6;\nstatic const int MOD = 5;\n\n\nint\nmain()\n{\n  std::cin.tie(nullptr);\n  std::ios::sync_with_stdio(false);\n\n  int n;\n  std::cin >> n;\n  std::array<int, N_CARDS> cards{1, 2, 3, 4, 5, 6};\n  n %= N_CARDS * MOD;\n  for (int i = 0; i < n; i++) {\n    int idx1 = i % MOD;\n    int idx2 = i % MOD + 1;\n    std::swap(cards[idx1], cards[idx2]);\n  }\n  for (const auto& card : cards) {\n    std::cout << card;\n  }\n  std::cout << std::endl;\n\n  return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "array", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "static", "Ġconst", "Ġint", "ĠN", "_", "CAR", "DS", "Ġ=", "Ġ6", ";", "Ċ", "static", "Ġconst", "Ġint", "ĠMOD", "Ġ=", "Ġ5", ";", "ĊĊ", "Ċ", "int", "Ċ", "main", "()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "cin", ".", "tie", "(", "null", "ptr", ");", "Ċ", "Ġ", "Ġstd", "::", "ios", "::", "sync", "_", "with", "_", "std", "io", "(", "false", ");", "ĊĊ", "Ġ", "Ġint", "Ġn", ";", "Ċ", "Ġ", "Ġstd", "::", "cin", "Ġ>>", "Ġn", ";", "Ċ", "Ġ", "Ġstd", "::", "array", "<", "int", ",", "ĠN", "_", "CAR", "DS", ">", "Ġcards", "{", "1", ",", "Ġ2", ",", "Ġ3", ",", "Ġ4", ",", "Ġ5", ",", "Ġ6", "};", "Ċ", "Ġ", "Ġn", "Ġ%", "=", "ĠN", "_", "CAR", "DS", "Ġ*", "ĠMOD", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġid", "x", "1", "Ġ=", "Ġi", "Ġ%", "ĠMOD", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġid", "x", "2", "Ġ=", "Ġi", "Ġ%", "ĠMOD", "Ġ+", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "sw", "ap", "(", "cards", "[", "id", "x", "1", "],", "Ġcards", "[", "id", "x", "2", "]);", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġfor", "Ġ(", "const", "Ġauto", "&", "Ġcard", "Ġ:", "Ġcards", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġcard", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["n", 8, "comesFrom", ["n"], [6]], ["n", 15, "comesFrom", ["n"], [10]], ["N_CARDS", 11, "comesFrom", ["N_CARDS"], [0]], ["MOD", 12, "comesFrom", ["MOD"], [1]], ["MOD", 19, "comesFrom", ["MOD"], [1]], ["MOD", 22, "comesFrom", ["MOD"], [1]], ["i", 14, "comesFrom", ["i"], [13]], ["i", 16, "comesFrom", ["i"], [13]], ["i", 18, "comesFrom", ["i"], [13]], ["i", 21, "comesFrom", ["i"], [13]], ["cards", 24, "comesFrom", ["cards"], [9]], ["cards", 26, "comesFrom", ["cards"], [9]], ["cards", 29, "comesFrom", ["cards"], [9]], ["idx1", 25, "comesFrom", ["idx1"], [17]], ["idx2", 27, "comesFrom", ["idx2"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::811", "code": "//\n// Created by sunguoyan on 16/7/27.\n//\n\n#include<iostream>\nusing namespace std;\n\nint main(){\n    string S1,S2;\n    int i;\n    int tmp[128]={0};\n    char t;\n    int k;\n//    tmp[128]={0};   一开始错在这里了，在这里赋予0值只会给数组的第129元素赋予0值，越界了\n\n    getline(cin,S1);\n    getline(cin,S2);\n\n    for(i = 0;i<S2.length();i++){\n        t = S2[i];\n        k = (int)t;\n\n        tmp[k] = 1;\n    }\n    for(i = 0;i<S1.length();i++){\n        t = S1[i];\n        k = (int)t;\n\n        if(tmp[k]==0){\n            cout<<t;\n        }\n    }\n    cout<<endl;\n    return 0;\n}", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "Ġsung", "u", "oy", "an", "Ġon", "Ġ16", "/", "7", "/", "27", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "ĠS", "1", ",", "S", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtmp", "[", "128", "]=", "{", "0", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġt", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġk", ";", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġtmp", "[", "128", "]=", "{", "0", "};", "Ġ", "Ġ", "Ġ", "ä¸Ģ", "å¼", "Ģ", "å§", "ĭ", "é", "Ķ", "Ļ", "åľ", "¨", "è¿", "Ļ", "éĩ", "Į", "äº", "Ĩ", "ï", "¼", "Į", "åľ", "¨", "è¿", "Ļ", "éĩ", "Į", "è", "µ", "ĭ", "äº", "Ī", "0", "å", "Ģ", "¼", "åı", "ª", "ä¼", "ļ", "ç", "»", "Ļ", "æķ", "°", "ç", "»", "Ħ", "çļĦ", "ç", "¬", "¬", "129", "åħ", "ĥ", "ç", "´", "ł", "è", "µ", "ĭ", "äº", "Ī", "0", "å", "Ģ", "¼", "ï", "¼", "Į", "è", "¶", "Ĭ", "çķ", "Į", "äº", "Ĩ", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġget", "line", "(", "cin", ",", "S", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġget", "line", "(", "cin", ",", "S", "2", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "i", "Ġ=", "Ġ0", ";", "i", "<", "S", "2", ".", "length", "();", "i", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġt", "Ġ=", "ĠS", "2", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġk", "Ġ=", "Ġ(", "int", ")", "t", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtmp", "[", "k", "]", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "i", "Ġ=", "Ġ0", ";", "i", "<", "S", "1", ".", "length", "();", "i", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġt", "Ġ=", "ĠS", "1", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġk", "Ġ=", "Ġ(", "int", ")", "t", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "tmp", "[", "k", "]", "==", "0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "t", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["S1", 10, "comesFrom", ["S1"], [2]], ["S1", 28, "comesFrom", ["S1"], [2]], ["S1", 32, "comesFrom", ["S1"], [2]], ["S2", 13, "comesFrom", ["S2"], [3]], ["S2", 16, "comesFrom", ["S2"], [3]], ["S2", 20, "comesFrom", ["S2"], [3]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 18, "comesFrom", ["i"], [14]], ["i", 21, "comesFrom", ["i"], [14]], ["i", 27, "comesFrom", ["i"], [26]], ["i", 30, "comesFrom", ["i"], [26]], ["i", 33, "comesFrom", ["i"], [26]], ["t", 23, "comesFrom", ["t"], [19]], ["t", 35, "comesFrom", ["t"], [31]], ["t", 39, "comesFrom", ["t"], [31]], ["k", 25, "comesFrom", ["k"], [22]], ["k", 37, "comesFrom", ["k"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::812", "code": "#ifndef _3FENGINE_SRC_EVENT_SYSTEM_LISTENERS_F_EVENT_LISTENER_HPP_\n#define _3FENGINE_SRC_EVENT_SYSTEM_LISTENERS_F_EVENT_LISTENER_HPP_\n\n#include <event_system/events/f_events_enums.hpp>\n\nnamespace fengine\n{\n\tclass FEventListener\n\t{\n\tpublic:\n\t\tFEventListener() = default;\n\n\t\tvirtual ~FEventListener() = default;\n\n\t\tbool IsListenableSource(fevents::EventSourceType type) const { return source_types_.IsSet(type); }\n\n\t\tconst fevents::EventSourceTypes& source_types() const noexcept { return source_types_; }\n\n\tprotected:\n\t\tvoid SetListenableSource(fevents::EventSourceType type) noexcept { this->source_types_.SetFlag(type); }\n\n\tprivate:\n\t\tfevents::EventSourceTypes source_types_;\n\t};\n}\n#endif // _3FENGINE_SRC_EVENT_SYSTEM_LISTENERS_F_EVENT_LISTENER_HPP_", "code_tokens": ["Ġ#", "if", "nd", "ef", "Ġ_", "3", "F", "ENG", "INE", "_", "S", "RC", "_", "EV", "ENT", "_", "SY", "STEM", "_", "LIST", "EN", "ERS", "_", "F", "_", "EV", "ENT", "_", "LIST", "EN", "ER", "_", "H", "PP", "_", "Ċ", "#", "define", "Ġ_", "3", "F", "ENG", "INE", "_", "S", "RC", "_", "EV", "ENT", "_", "SY", "STEM", "_", "LIST", "EN", "ERS", "_", "F", "_", "EV", "ENT", "_", "LIST", "EN", "ER", "_", "H", "PP", "_", "Ċ", "Ċ", "#", "include", "Ġ<", "event", "_", "system", "/", "events", "/", "f", "_", "events", "_", "en", "ums", ".", "h", "pp", ">", "Ċ", "Ċ", "names", "pace", "Ġf", "engine", "Ċ", "{", "Ċ", "ĉ", "class", "ĠF", "Event", "Listener", "Ċ", "ĉ", "{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "F", "Event", "Listener", "()", "Ġ=", "Ġdefault", ";", "ĊĊ", "ĉ", "ĉ", "virtual", "Ġ~", "F", "Event", "Listener", "()", "Ġ=", "Ġdefault", ";", "ĊĊ", "ĉ", "ĉ", "bool", "ĠIs", "List", "enable", "Source", "(", "f", "events", "::", "Event", "Source", "Type", "Ġtype", ")", "Ġconst", "Ġ{", "Ġreturn", "Ġsource", "_", "types", "_.", "Is", "Set", "(", "type", ");", "Ġ}", "ĊĊ", "ĉ", "ĉ", "const", "Ġfe", "v", "ents", "::", "Event", "Source", "Types", "&", "Ġsource", "_", "types", "()", "Ġconst", "Ġno", "except", "Ġ{", "Ġreturn", "Ġsource", "_", "types", "_", ";", "Ġ}", "ĊĊ", "ĉ", "protected", ":", "Ċ", "ĉ", "ĉ", "void", "ĠSet", "List", "enable", "Source", "(", "f", "events", "::", "Event", "Source", "Type", "Ġtype", ")", "Ġno", "except", "Ġ{", "Ġthis", "->", "source", "_", "types", "_.", "Set", "Flag", "(", "type", ");", "Ġ}", "ĊĊ", "ĉ", "private", ":", "Ċ", "ĉ", "ĉ", "f", "events", "::", "Event", "Source", "Types", "Ġsource", "_", "types", "_", ";", "Ċ", "ĉ", "};", "Ċ", "}", "Ċ", "#", "endif", "Ġ//", "Ġ_", "3", "F", "ENG", "INE", "_", "S", "RC", "_", "EV", "ENT", "_", "SY", "STEM", "_", "LIST", "EN", "ERS", "_", "F", "_", "EV", "ENT", "_", "LIST", "EN", "ER", "_", "H", "PP", "_"], "dataflow_graph": [["type", 8, "comesFrom", ["type"], [5]], ["type", 15, "comesFrom", ["type"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::813", "code": "/*\n * Officer.cpp\n * Author: suyashd95\n */\n\n#include \"Officer.h\"\n\nOfficer::Officer(): Staff(), Education(), grade('\\0') {}\n\nOfficer::Officer(int code, std::string name, int genQual, std::string profQual, char grade):\n\t\tStaff(code, name), Education(genQual, profQual),\n\t\tgrade(grade) {};\n\nvoid Officer::input() {\n\n\tStaff::input();\n\tEducation::input();\n\tstd::cout << \"Enter the grade: \" << std::flush;\n\tstd::cin >> grade;\n}\n\nvoid Officer::display() {\n\n\tStaff::display();\n\tEducation::display();\n\tstd::cout << \"Grade: \" << grade << std::endl;\n}\n\nchar Officer::getGrade() const {\n\n\treturn grade;\n}\n\nvoid Officer::setGrade(const char grade) {\n\n\tthis->grade = grade;\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠOfficer", ".", "cpp", "Ċ", "Ġ*", "ĠAuthor", ":", "Ġsu", "y", "ash", "d", "95", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Offic", "er", ".", "h", "\"", "Ċ", "Ċ", "Offic", "er", "::", "Offic", "er", "():", "ĠStaff", "(),", "ĠEducation", "(),", "Ġgrade", "('", "\\", "0", "')", "Ġ{}", "Ċ", "Ċ", "Offic", "er", "::", "Offic", "er", "(", "int", "Ġcode", ",", "Ġstd", "::", "string", "Ġname", ",", "Ġint", "Ġgen", "Qual", ",", "Ġstd", "::", "string", "Ġprof", "Qual", ",", "Ġchar", "Ġgrade", "):", "Ċ", "ĉ", "ĉ", "Staff", "(", "code", ",", "Ġname", "),", "ĠEducation", "(", "gen", "Qual", ",", "Ġprof", "Qual", "),", "Ċ", "ĉ", "ĉ", "grade", "(", "grade", ")", "Ġ{", "};", "Ċ", "Ċ", "void", "ĠOfficer", "::", "input", "()", "Ġ{", "ĊĊ", "ĉ", "Staff", "::", "input", "();", "Ċ", "ĉ", "Education", "::", "input", "();", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Enter", "Ġthe", "Ġgrade", ":", "Ġ\"", "Ġ<<", "Ġstd", "::", "flush", ";", "Ċ", "ĉ", "std", "::", "cin", "Ġ>>", "Ġgrade", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOfficer", "::", "display", "()", "Ġ{", "ĊĊ", "ĉ", "Staff", "::", "display", "();", "Ċ", "ĉ", "Education", "::", "display", "();", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Grade", ":", "Ġ\"", "Ġ<<", "Ġgrade", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ", "Ċ", "char", "ĠOfficer", "::", "get", "Grade", "()", "Ġconst", "Ġ{", "ĊĊ", "ĉ", "return", "Ġgrade", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠOfficer", "::", "set", "Grade", "(", "const", "Ġchar", "Ġgrade", ")", "Ġ{", "ĊĊ", "ĉ", "this", "->", "grade", "Ġ=", "Ġgrade", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["grade", 16, "comesFrom", ["grade"], [9]], ["grade", 17, "comesFrom", ["grade"], [9]], ["grade", 24, "comesFrom", ["grade"], [9]], ["grade", 29, "comesFrom", ["grade"], [9]], ["grade", 32, "comesFrom", ["grade"], [9]], ["grade", 35, "comesFrom", ["grade"], [34]], ["grade", 36, "comesFrom", ["grade"], [34]], ["code", 11, "comesFrom", ["code"], [5]], ["name", 12, "comesFrom", ["name"], [6]], ["genQual", 14, "comesFrom", ["genQual"], [7]], ["profQual", 15, "comesFrom", ["profQual"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::814", "code": "#include <sys/socket.h>\n#include <sys/types.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <iostream>\n#include <stdio.h>\n#include <error.h>\n#include <string>\n#include <string.h>\n\nusing namespace std;\n\n\n\nint main()\n{\n\tint socket1 = socket(AF_INET, SOCK_STREAM, 0);\n\tif(socket1 == -1)\n\t{\n\t\tperror(\"socket create failed: \");\n\t\tclose(socket1);\n\t\treturn 0;\n\t}\n\tprintf(\"socket created: %d\\n\", socket1);\n\n\tsockaddr_in addr;\n\taddr.sin_family = AF_INET;\n\taddr.sin_port = htons(5039);\n\tinet_pton(AF_INET, \"192.168.1.106\", &addr.sin_addr);\n\n\tif(connect(socket1, (sockaddr*)&addr, sizeof(addr)) == -1)\n\t{\n\t\tperror(\"connect failed: \");\n\t\tclose(socket1);\n\t\treturn 0;\n\t}\n\tprintf(\"connection established.\\n\");\n\n\tchar input[200];\n\n\twhile(1)\n\t{\n\t\tprintf(\"enter words: \");\n\t\tgets(input);\n\t\tif(!strcmp(input, \"exit\"))\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\twrite(socket1, input, strlen(input)+1);\n\t\t\tread(socket1, input, 200);\n\t\t\tprintf(\"msg return: %s\\n\", input);\n\t\t}\n\t}\n\n\tclose(socket1);\n\n\treturn 1;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "sys", "/", "socket", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "types", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "net", "inet", "/", "in", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "arp", "a", "/", "inet", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "error", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "string", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġsocket", "1", "Ġ=", "Ġsocket", "(", "AF", "_", "IN", "ET", ",", "ĠS", "OCK", "_", "ST", "REAM", ",", "Ġ0", ");", "Ċ", "ĉ", "if", "(", "socket", "1", "Ġ==", "Ġ-", "1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "per", "ror", "(\"", "socket", "Ġcreate", "Ġfailed", ":", "Ġ\"", ");", "Ċ", "ĉ", "ĉ", "close", "(", "socket", "1", ");", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "printf", "(\"", "socket", "Ġcreated", ":", "Ġ%", "d", "\\", "n", "\",", "Ġsocket", "1", ");", "ĊĊ", "ĉ", "s", "ock", "addr", "_", "in", "Ġaddr", ";", "Ċ", "ĉ", "addr", ".", "sin", "_", "family", "Ġ=", "ĠAF", "_", "IN", "ET", ";", "Ċ", "ĉ", "addr", ".", "sin", "_", "port", "Ġ=", "Ġh", "tons", "(", "50", "39", ");", "Ċ", "ĉ", "inet", "_", "pton", "(", "AF", "_", "IN", "ET", ",", "Ġ\"", "192", ".", "168", ".", "1", ".", "106", "\",", "Ġ&", "addr", ".", "sin", "_", "addr", ");", "ĊĊ", "ĉ", "if", "(", "connect", "(", "socket", "1", ",", "Ġ(", "s", "ock", "addr", "*)", "&", "addr", ",", "Ġsizeof", "(", "addr", "))", "Ġ==", "Ġ-", "1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "per", "ror", "(\"", "connect", "Ġfailed", ":", "Ġ\"", ");", "Ċ", "ĉ", "ĉ", "close", "(", "socket", "1", ");", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "printf", "(\"", "connection", "Ġestablished", ".", "\\", "n", "\");", "ĊĊ", "ĉ", "char", "Ġinput", "[", "200", "];", "ĊĊ", "ĉ", "while", "(", "1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "printf", "(\"", "enter", "Ġwords", ":", "Ġ\"", ");", "Ċ", "ĉ", "ĉ", "gets", "(", "input", ");", "Ċ", "ĉ", "ĉ", "if", "(", "!", "str", "cmp", "(", "input", ",", "Ġ\"", "exit", "\"))", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "write", "(", "socket", "1", ",", "Ġinput", ",", "Ġstr", "len", "(", "input", ")+", "1", ");", "Ċ", "ĉ", "ĉ", "ĉ", "read", "(", "socket", "1", ",", "Ġinput", ",", "Ġ200", ");", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "msg", "Ġreturn", ":", "Ġ%", "s", "\\", "n", "\",", "Ġinput", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "close", "(", "socket", "1", ");", "ĊĊ", "ĉ", "return", "Ġ1", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["socket1", 6, "comesFrom", ["socket1"], [2]], ["socket1", 9, "comesFrom", ["socket1"], [2]], ["socket1", 11, "comesFrom", ["socket1"], [2]], ["socket1", 24, "comesFrom", ["socket1"], [2]], ["socket1", 29, "comesFrom", ["socket1"], [2]], ["socket1", 38, "comesFrom", ["socket1"], [2]], ["socket1", 43, "comesFrom", ["socket1"], [2]], ["socket1", 48, "comesFrom", ["socket1"], [2]], ["addr", 13, "comesFrom", ["addr"], [12]], ["addr", 16, "comesFrom", ["addr"], [12]], ["addr", 21, "comesFrom", ["addr"], [12]], ["addr", 25, "comesFrom", ["addr"], [12]], ["addr", 26, "comesFrom", ["addr"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::815", "code": "////////////////////////////////////////////////////////////////////////////////\n// Name:      marker.cpp\n// Purpose:   Implementation of class wex::marker\n// Author:    Anton van Wezenbeek\n// Copyright: (c) 2019 Anton van Wezenbeek\n////////////////////////////////////////////////////////////////////////////////\n\n#include <wex/marker.h>\n\nwex::marker::marker(const pugi::xml_node& node)\n  : presentation(MARKER, node)\n{\n}\n\nwex::marker::marker(int no, int symbol)\n  : presentation(MARKER, no, symbol)\n{\n}\n", "code_tokens": ["Ġ//", "////////////////////////////////", "////////////////////////////////", "////////", "////", "//", "Ċ", "//", "ĠName", ":", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmarker", ".", "cpp", "Ċ", "//", "ĠPurpose", ":", "Ġ", "Ġ", "ĠImplementation", "Ġof", "Ġclass", "Ġwe", "x", "::", "mark", "er", "Ċ", "//", "ĠAuthor", ":", "Ġ", "Ġ", "Ġ", "ĠAnton", "Ġvan", "ĠWe", "zen", "be", "ek", "Ċ", "//", "ĠCopyright", ":", "Ġ(", "c", ")", "Ġ2019", "ĠAnton", "Ġvan", "ĠWe", "zen", "be", "ek", "Ċ", "////////////////////////////////", "////////////////////////////////", "////////////////", "Ċ", "Ċ", "#", "include", "Ġ<", "we", "x", "/", "mark", "er", ".", "h", ">", "Ċ", "Ċ", "we", "x", "::", "mark", "er", "::", "mark", "er", "(", "const", "Ġp", "ugi", "::", "xml", "_", "node", "&", "Ġnode", ")", "Ċ", "Ġ", "Ġ:", "Ġpresentation", "(", "M", "ARK", "ER", ",", "Ġnode", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "we", "x", "::", "mark", "er", "::", "mark", "er", "(", "int", "Ġno", ",", "Ġint", "Ġsymbol", ")", "Ċ", "Ġ", "Ġ:", "Ġpresentation", "(", "M", "ARK", "ER", ",", "Ġno", ",", "Ġsymbol", ")", "Ċ", "{", "Ċ", "}", "Ċ"], "dataflow_graph": [["no", 10, "comesFrom", ["no"], [6]], ["symbol", 11, "comesFrom", ["symbol"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::816", "code": "#include \"types.hpp\"\n#include \"softmax.hpp\"\n#include \"xtensor/xio.hpp\"\n#include <iostream>\n\nint main() {\n  array_t<double> a = {1010, 1000, 990};\n  std::cout << softmax(a) << std::endl;\n\n  array_t<double> x = {0.3, 2.9, 4.0};\n  auto y = softmax(x);\n  std::cout << y << std::endl;\n  std::cout << xt::sum(y) << std::endl;\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "types", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "soft", "max", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "xt", "ensor", "/", "x", "io", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġarray", "_", "t", "<", "double", ">", "Ġa", "Ġ=", "Ġ{", "101", "0", ",", "Ġ1000", ",", "Ġ9", "90", "};", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġsoft", "max", "(", "a", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġarray", "_", "t", "<", "double", ">", "Ġx", "Ġ=", "Ġ{", "0", ".", "3", ",", "Ġ2", ".", "9", ",", "Ġ4", ".", "0", "};", "Ċ", "Ġ", "Ġauto", "Ġy", "Ġ=", "Ġsoft", "max", "(", "x", ");", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġy", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ", "xt", "::", "sum", "(", "y", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 4, "comesFrom", ["a"], [1]], ["x", 9, "comesFrom", ["x"], [6]], ["y", 11, "comesFrom", ["y"], [7]], ["y", 15, "comesFrom", ["y"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::817", "code": "// system includes\n#include <iostream>\n\n// marathon includes\n#include \"marathon/matching/enumerate.h\"\n#include \"marathon/binary_matrix/fixed_margin/enumerate.h\"\n#include \"marathon/binary_matrix/interval_margin/enumerate.h\"\n\n// auxiliary functions\n#include \"helper.h\"\n\nint main(int argc, char **argv) {\n\n    // parse command line arguments\n    if (!parse_arguments(argc, argv)) {\n        print_help_message();\n        return -1;\n    }\n\n    // create enumerator object\n    marathon::binary_matrix::interval_margin::Enumerator enm(inst);\n\n    // enumerate states\n    size_t num_states = 0;\n    enm.enumerate([&](const marathon::State &s) {\n\n        // convert state to binary matrix\n        const auto &x = static_cast<const marathon::binary_matrix::BinaryMatrix &> (s);\n\n        // output binary matrix\n        std::stringstream ss(\"A\");\n        ss << \"A\" << ++num_states << \" = \\n\\n\";\n        std::cout << ss.str() << x.fancyString() << std::endl;\n\n    });\n\n    std::cout << \"Enumerated \" << num_states << \" matrices.\" << std::endl;\n\n    return 0;\n}\n", "code_tokens": ["Ġ//", "Ġsystem", "Ġincludes", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "//", "Ġmarathon", "Ġincludes", "Ċ", "#", "include", "Ġ\"", "mar", "athon", "/", "match", "ing", "/", "en", "umer", "ate", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mar", "athon", "/", "binary", "_", "mat", "rix", "/", "fixed", "_", "margin", "/", "en", "umer", "ate", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mar", "athon", "/", "binary", "_", "mat", "rix", "/", "inter", "val", "_", "margin", "/", "en", "umer", "ate", ".", "h", "\"", "Ċ", "Ċ", "//", "Ġauxiliary", "Ġfunctions", "Ċ", "#", "include", "Ġ\"", "hel", "per", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġparse", "Ġcommand", "Ġline", "Ġarguments", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "parse", "_", "arg", "uments", "(", "arg", "c", ",", "Ġarg", "v", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprint", "_", "help", "_", "message", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġcreate", "Ġenumer", "ator", "Ġobject", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmarathon", "::", "binary", "_", "mat", "rix", "::", "inter", "val", "_", "margin", "::", "En", "umer", "ator", "Ġen", "m", "(", "inst", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġenumer", "ate", "Ġstates", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsize", "_", "t", "Ġnum", "_", "states", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġen", "m", ".", "en", "umer", "ate", "([", "&", "](", "const", "Ġmarathon", "::", "State", "Ġ&", "s", ")", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġconvert", "Ġstate", "Ġto", "Ġbinary", "Ġmatrix", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġauto", "Ġ&", "x", "Ġ=", "Ġstatic", "_", "cast", "<", "const", "Ġmarathon", "::", "binary", "_", "mat", "rix", "::", "B", "inary", "Matrix", "Ġ&", ">", "Ġ(", "s", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġoutput", "Ġbinary", "Ġmatrix", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "stream", "Ġss", "(\"", "A", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġss", "Ġ<<", "Ġ\"", "A", "\"", "Ġ<<", "Ġ++", "num", "_", "states", "Ġ<<", "Ġ\"", "Ġ=", "Ġ\\", "n", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġss", ".", "str", "()", "Ġ<<", "Ġx", ".", "f", "ancy", "String", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ});", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "En", "umer", "ated", "Ġ\"", "Ġ<<", "Ġnum", "_", "states", "Ġ<<", "Ġ\"", "Ġmat", "rices", ".\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 4, "comesFrom", ["argc"], [1]], ["ss", 16, "comesFrom", ["ss"], [15]], ["ss", 19, "comesFrom", ["ss"], [15]], ["num_states", 17, "comesFrom", ["num_states"], [8]], ["num_states", 25, "comesFrom", ["num_states"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::818", "code": "#include \"keyboard-layout-observer.h\"\n\nusing namespace v8;\n\nvoid KeyboardLayoutObserver::Init(Handle<Object> target) {\n  NanScope();\n  Local<FunctionTemplate> newTemplate = NanNew<FunctionTemplate>(KeyboardLayoutObserver::New);\n  newTemplate->SetClassName(NanNew<String>(\"KeyboardLayoutObserver\"));\n  newTemplate->InstanceTemplate()->SetInternalFieldCount(1);\n  Local<ObjectTemplate> proto = newTemplate->PrototypeTemplate();\n  NODE_SET_METHOD(proto, \"getCurrentKeyboardLayout\", KeyboardLayoutObserver::GetCurrentKeyboardLayout);\n  target->Set(NanNew<String>(\"KeyboardLayoutObserver\"), newTemplate->GetFunction());\n}\n\nNODE_MODULE(keyboard_layout_observer, KeyboardLayoutObserver::Init)\n\nNAN_METHOD(KeyboardLayoutObserver::New) {\n  NanScope();\n\n  Local<Function> callbackHandle = args[0].As<Function>();\n  NanCallback *callback = new NanCallback(callbackHandle);\n\n  KeyboardLayoutObserver *observer = new KeyboardLayoutObserver(callback);\n  observer->Wrap(args.This());\n  NanReturnUndefined();\n}\n\nKeyboardLayoutObserver::KeyboardLayoutObserver(NanCallback *callback) : callback(callback) {\n}\n\nKeyboardLayoutObserver::~KeyboardLayoutObserver() {\n  delete callback;\n};\n\nvoid KeyboardLayoutObserver::HandleKeyboardLayoutChanged() {\n}\n\nNAN_METHOD(KeyboardLayoutObserver::GetCurrentKeyboardLayout) {\n  NanScope();\n  NanReturnValue(NanUndefined());\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "key", "board", "-", "layout", "-", "ob", "server", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġv", "8", ";", "Ċ", "Ċ", "void", "ĠKeyboard", "Layout", "Obs", "erver", "::", "Init", "(", "Handle", "<", "Object", ">", "Ġtarget", ")", "Ġ{", "Ċ", "Ġ", "ĠNan", "Scope", "();", "Ċ", "Ġ", "ĠLocal", "<", "Function", "Template", ">", "Ġnew", "Template", "Ġ=", "ĠNan", "New", "<", "Function", "Template", ">(", "Key", "board", "Layout", "Obs", "erver", "::", "New", ");", "Ċ", "Ġ", "Ġnew", "Template", "->", "Set", "Class", "Name", "(", "N", "an", "New", "<", "String", ">", "(\"", "Key", "board", "Layout", "Obs", "erver", "\")", ");", "Ċ", "Ġ", "Ġnew", "Template", "->", "Instance", "Template", "()", "->", "Set", "Internal", "Field", "Count", "(", "1", ");", "Ċ", "Ġ", "ĠLocal", "<", "Object", "Template", ">", "Ġproto", "Ġ=", "Ġnew", "Template", "->", "Prot", "otype", "Template", "();", "Ċ", "Ġ", "ĠN", "ODE", "_", "SET", "_", "METHOD", "(", "pro", "to", ",", "Ġ\"", "get", "Current", "Key", "board", "Layout", "\",", "ĠKeyboard", "Layout", "Obs", "erver", "::", "Get", "Current", "Key", "board", "Layout", ");", "Ċ", "Ġ", "Ġtarget", "->", "Set", "(", "N", "an", "New", "<", "String", ">", "(\"", "Key", "board", "Layout", "Obs", "erver", "\"),", "Ġnew", "Template", "->", "Get", "Function", "());", "Ċ", "}", "Ċ", "Ċ", "N", "ODE", "_", "MOD", "ULE", "(", "key", "board", "_", "layout", "_", "ob", "server", ",", "ĠKeyboard", "Layout", "Obs", "erver", "::", "Init", ")", "Ċ", "Ċ", "N", "AN", "_", "METHOD", "(", "Key", "board", "Layout", "Obs", "erver", "::", "New", ")", "Ġ{", "Ċ", "Ġ", "ĠNan", "Scope", "();", "ĊĊ", "Ġ", "ĠLocal", "<", "Function", ">", "Ġcallback", "Handle", "Ġ=", "Ġargs", "[", "0", "].", "As", "<", "Function", ">", "();", "Ċ", "Ġ", "ĠNan", "Callback", "Ġ*", "callback", "Ġ=", "Ġnew", "ĠNan", "Callback", "(", "callback", "Handle", ");", "ĊĊ", "Ġ", "ĠKeyboard", "Layout", "Obs", "erver", "Ġ*", "ob", "server", "Ġ=", "Ġnew", "ĠKeyboard", "Layout", "Obs", "erver", "(", "callback", ");", "Ċ", "Ġ", "Ġobserver", "->", "W", "rap", "(", "args", ".", "This", "());", "Ċ", "Ġ", "ĠNan", "Return", "Und", "efined", "();", "Ċ", "}", "Ċ", "Ċ", "Key", "board", "Layout", "Obs", "erver", "::", "Key", "board", "Layout", "Obs", "erver", "(", "N", "an", "Callback", "Ġ*", "callback", ")", "Ġ:", "Ġcallback", "(", "callback", ")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "Key", "board", "Layout", "Obs", "erver", "::", "~", "Key", "board", "Layout", "Obs", "erver", "()", "Ġ{", "Ċ", "Ġ", "Ġdelete", "Ġcallback", ";", "Ċ", "};", "Ċ", "Ċ", "void", "ĠKeyboard", "Layout", "Obs", "erver", "::", "Handle", "Key", "board", "Layout", "Changed", "()", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "N", "AN", "_", "METHOD", "(", "Key", "board", "Layout", "Obs", "erver", "::", "Get", "Current", "Key", "board", "Layout", ")", "Ġ{", "Ċ", "Ġ", "ĠNan", "Scope", "();", "Ċ", "Ġ", "ĠNan", "Return", "Value", "(", "N", "an", "Und", "efined", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["newTemplate", 7, "comesFrom", ["newTemplate"], [4]], ["newTemplate", 10, "comesFrom", ["newTemplate"], [4]], ["newTemplate", 14, "comesFrom", ["newTemplate"], [4]], ["newTemplate", 22, "comesFrom", ["newTemplate"], [4]], ["proto", 17, "comesFrom", ["proto"], [13]], ["target", 19, "comesFrom", ["target"], [2]], ["callbackHandle", 33, "comesFrom", ["callbackHandle"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::819", "code": "/*\n * (C) 2003-2016 Anope Team\n * Contact us at team@anope.org\n *\n * Please read COPYING and README for further details.\n */\n\n#include \"../../webcpanel.h\"\n\nnamespace\n{\n\tbool ChannelSort(ChannelInfo *ci1, ChannelInfo *ci2)\n\t{\n\t\treturn ci::less()(ci1->name, ci2->name);\n\t}\n}\n\nnamespace WebCPanel\n{\n\nnamespace ChanServ\n{\n\nvoid BuildChanList(NickAlias *na, TemplateFileServer::Replacements &replacements)\n{\n\tstd::deque<ChannelInfo *> queue;\n\tna->nc->GetChannelReferences(queue);\n\tstd::sort(queue.begin(), queue.end(), ChannelSort);\n\n\tfor (unsigned i = 0; i < queue.size(); ++i)\n\t{\n\t\tChannelInfo *ci = queue[i];\n\n\t\tif (na->nc != ci->GetFounder() && ci->AccessFor(na->nc).empty())\n\t\t\tcontinue;\n\n\t\treplacements[\"CHANNEL_NAMES\"] = ci->name;\n\t\treplacements[\"ESCAPED_CHANNEL_NAMES\"] = HTTPUtils::URLEncode(ci->name);\n\t}\n}\n\n}\n\n}\n\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "Ġ(", "C", ")", "Ġ2003", "-", "2016", "ĠAn", "ope", "ĠTeam", "Ċ", "Ġ*", "ĠContact", "Ġus", "Ġat", "Ġteam", "@", "an", "ope", ".", "org", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠPlease", "Ġread", "ĠCOP", "YING", "Ġand", "ĠREAD", "ME", "Ġfor", "Ġfurther", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "../", "web", "c", "panel", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ċ", "{", "Ċ", "ĉ", "bool", "ĠChannel", "Sort", "(", "Channel", "Info", "Ġ*", "ci", "1", ",", "ĠChannel", "Info", "Ġ*", "ci", "2", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "return", "Ġc", "i", "::", "less", "()", "(", "ci", "1", "->", "name", ",", "Ġc", "i", "2", "->", "name", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "ĠWeb", "CP", "an", "el", "Ċ", "{", "Ċ", "Ċ", "names", "pace", "ĠChan", "Serv", "Ċ", "{", "Ċ", "Ċ", "void", "ĠBuild", "Chan", "List", "(", "Nick", "Alias", "Ġ*", "na", ",", "ĠTemplate", "File", "Server", "::", "Repl", "acements", "Ġ&", "repl", "acements", ")", "Ċ", "{", "Ċ", "ĉ", "std", "::", "de", "que", "<", "Channel", "Info", "Ġ*", ">", "Ġqueue", ";", "Ċ", "ĉ", "na", "->", "nc", "->", "Get", "Channel", "References", "(", "queue", ");", "Ċ", "ĉ", "std", "::", "sort", "(", "queue", ".", "begin", "(),", "Ġqueue", ".", "end", "(),", "ĠChannel", "Sort", ");", "ĊĊ", "ĉ", "for", "Ġ(", "unsigned", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġqueue", ".", "size", "();", "Ġ++", "i", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "Channel", "Info", "Ġ*", "ci", "Ġ=", "Ġqueue", "[", "i", "];", "ĊĊ", "ĉ", "ĉ", "if", "Ġ(", "na", "->", "nc", "Ġ!=", "Ġc", "i", "->", "Get", "Found", "er", "()", "Ġ&&", "Ġc", "i", "->", "Access", "For", "(", "na", "->", "nc", ").", "empty", "())", "Ċ", "ĉ", "ĉ", "ĉ", "continue", ";", "ĊĊ", "ĉ", "ĉ", "repl", "acements", "[\"", "CH", "ANN", "EL", "_", "N", "AMES", "\"]", "Ġ=", "Ġc", "i", "->", "name", ";", "Ċ", "ĉ", "ĉ", "repl", "acements", "[\"", "ES", "CAP", "ED", "_", "CH", "ANN", "EL", "_", "N", "AMES", "\"]", "Ġ=", "ĠHT", "T", "PU", "t", "ils", "::", "UR", "LE", "n", "code", "(", "ci", "->", "name", ");", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "}", "Ċ", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["queue", 15, "comesFrom", ["queue"], [11]], ["queue", 17, "comesFrom", ["queue"], [11]], ["queue", 19, "comesFrom", ["queue"], [11]], ["queue", 24, "comesFrom", ["queue"], [11]], ["queue", 28, "comesFrom", ["queue"], [11]], ["i", 23, "comesFrom", ["i"], [22]], ["i", 26, "comesFrom", ["i"], [22]], ["i", 29, "comesFrom", ["i"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::820", "code": "#include <string>\n#include <cstdlib>\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n    // Invoke the Java program with the passed arguments.\n    string cmd = \"java -cp OthelloFramework.jar TestGame\";    \n    argv++;\n    while (--argc) {\n        cmd += \" \";\n        cmd += *(argv++);\n    }\n    system(cmd.c_str());\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠInv", "oke", "Ġthe", "ĠJava", "Ġprogram", "Ġwith", "Ġthe", "Ġpassed", "Ġarguments", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġcmd", "Ġ=", "Ġ\"", "java", "Ġ-", "cp", "ĠO", "the", "llo", "Fram", "ework", ".", "jar", "ĠTest", "Game", "\";", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġarg", "v", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "--", "arg", "c", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcmd", "Ġ+=", "Ġ\"", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcmd", "Ġ+=", "Ġ*", "(", "arg", "v", "++", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsystem", "(", "cmd", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 6, "comesFrom", ["argc"], [2]], ["cmd", 11, "comesFrom", ["cmd"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::821", "code": "// Copyright (c) 2011-2013 The Bitcoin developers\n// Distributed under the MIT/X11 software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#include \"bitcoin_coincontroltreewidget.h\"\n#include \"bitcoin_coincontroldialog.h\"\n\nBitcoin_CoinControlTreeWidget::Bitcoin_CoinControlTreeWidget(QWidget *parent) :\n    QTreeWidget(parent)\n{\n\n}\n\nvoid Bitcoin_CoinControlTreeWidget::keyPressEvent(QKeyEvent *event)\n{\n    if (event->key() == Qt::Key_Space) // press spacebar -> select checkbox\n    {\n        event->ignore();\n        int COLUMN_CHECKBOX = 0;\n        this->currentItem()->setCheckState(COLUMN_CHECKBOX, ((this->currentItem()->checkState(COLUMN_CHECKBOX) == Qt::Checked) ? Qt::Unchecked : Qt::Checked));\n    }\n    else if (event->key() == Qt::Key_Escape) // press esc -> close dialog\n    {\n        event->ignore();\n        Bitcoin_CoinControlDialog *coinControlDialog = (Bitcoin_CoinControlDialog*)this->parentWidget();\n        coinControlDialog->done(QDialog::Accepted);\n    }\n    else\n    {\n        this->QTreeWidget::keyPressEvent(event);\n    }\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "-", "2013", "ĠThe", "ĠBitcoin", "Ġdevelopers", "Ċ", "//", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠMIT", "/", "X", "11", "Ġsoftware", "Ġlicense", ",", "Ġsee", "Ġthe", "Ġaccompanying", "Ċ", "//", "Ġfile", "ĠCOP", "YING", "Ġor", "Ġhttp", "://", "www", ".", "opens", "ource", ".", "org", "/", "lic", "enses", "/", "mit", "-", "license", ".", "php", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "bitcoin", "_", "co", "inc", "ont", "ro", "lt", "re", "ew", "idget", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "bitcoin", "_", "co", "inc", "ont", "ro", "ld", "ial", "og", ".", "h", "\"", "Ċ", "Ċ", "Bitcoin", "_", "Coin", "Control", "Tree", "Widget", "::", "Bitcoin", "_", "Coin", "Control", "Tree", "Widget", "(", "Q", "Widget", "Ġ*", "parent", ")", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Tree", "Widget", "(", "parent", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBitcoin", "_", "Coin", "Control", "Tree", "Widget", "::", "key", "Press", "Event", "(", "Q", "Key", "Event", "Ġ*", "event", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "event", "->", "key", "()", "Ġ==", "ĠQt", "::", "Key", "_", "Space", ")", "Ġ//", "Ġpress", "Ġspace", "bar", "Ġ->", "Ġselect", "Ġcheck", "box", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġevent", "->", "ignore", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "ĠCOL", "UM", "N", "_", "CHECK", "BOX", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "current", "Item", "()", "->", "set", "Check", "State", "(", "COL", "UM", "N", "_", "CHECK", "BOX", ",", "Ġ((", "this", "->", "current", "Item", "()", "->", "check", "State", "(", "COL", "UM", "N", "_", "CHECK", "BOX", ")", "Ġ==", "ĠQt", "::", "Check", "ed", ")", "Ġ?", "ĠQt", "::", "Un", "checked", "Ġ:", "ĠQt", "::", "Check", "ed", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "event", "->", "key", "()", "Ġ==", "ĠQt", "::", "Key", "_", "E", "scape", ")", "Ġ//", "Ġpress", "Ġesc", "Ġ->", "Ġclose", "Ġdialog", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġevent", "->", "ignore", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠBitcoin", "_", "Coin", "Control", "Dialog", "Ġ*", "coin", "Control", "Dialog", "Ġ=", "Ġ(", "Bitcoin", "_", "Coin", "Control", "Dialog", "*)", "this", "->", "parent", "Widget", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcoin", "Control", "Dialog", "->", "done", "(", "Q", "Dialog", "::", "Accept", "ed", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "Q", "Tree", "Widget", "::", "key", "Press", "Event", "(", "event", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["COLUMN_CHECKBOX", 14, "comesFrom", ["COLUMN_CHECKBOX"], [11]], ["COLUMN_CHECKBOX", 17, "comesFrom", ["COLUMN_CHECKBOX"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::822", "code": "class Solution {\npublic:\n    bool isMajorityElement(vector<int>& nums, int target) {\n        auto it1 = lower_bound(nums.begin(), nums.end(), target);\n        if (it1 == nums.end() || *it1 != target) {\n            return false;\n        }\n        int index2 = it1 - nums.begin() + nums.size() / 2;\n        return index2 < nums.size() && nums[index2] == target;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġis", "Major", "ity", "Element", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ",", "Ġint", "Ġtarget", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġit", "1", "Ġ=", "Ġlower", "_", "bound", "(", "n", "ums", ".", "begin", "(),", "Ġnum", "s", ".", "end", "(),", "Ġtarget", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "it", "1", "Ġ==", "Ġnum", "s", ".", "end", "()", "Ġ||", "Ġ*", "it", "1", "Ġ!=", "Ġtarget", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġindex", "2", "Ġ=", "Ġit", "1", "Ġ-", "Ġnum", "s", ".", "begin", "()", "Ġ+", "Ġnum", "s", ".", "size", "()", "Ġ/", "Ġ2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġindex", "2", "Ġ<", "Ġnum", "s", ".", "size", "()", "Ġ&&", "Ġnum", "s", "[", "index", "2", "]", "Ġ==", "Ġtarget", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["target", 9, "comesFrom", ["target"], [2]], ["target", 14, "comesFrom", ["target"], [2]], ["target", 26, "comesFrom", ["target"], [2]], ["it1", 10, "comesFrom", ["it1"], [3]], ["it1", 13, "comesFrom", ["it1"], [3]], ["it1", 16, "comesFrom", ["it1"], [3]], ["index2", 21, "comesFrom", ["index2"], [15]], ["index2", 25, "comesFrom", ["index2"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::823", "code": "#include \"KalmanFilter1D.hpp\"\n\nKalmanFilter1D::KalmanFilter1D(double x0, double P, double R, double Q)\n{\n    this->x = x0;\n    this->P = P;\n    this->R = R;\n    this->Q = Q;\n}\n\nKalmanFilter1D::~KalmanFilter1D()\n{\n}\n\nvoid KalmanFilter1D::update(double z)\n{\n    x = (P*z + x*R) / (P + R);\n    P = 1. / (1./P + 1./R);\n}\n\nvoid KalmanFilter1D::predict(double u)\n{\n    x += u;\n    P += Q;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Kal", "man", "Filter", "1", "D", ".", "h", "pp", "\"", "Ċ", "Ċ", "Kal", "man", "Filter", "1", "D", "::", "Kal", "man", "Filter", "1", "D", "(", "double", "Ġx", "0", ",", "Ġdouble", "ĠP", ",", "Ġdouble", "ĠR", ",", "Ġdouble", "ĠQ", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "x", "Ġ=", "Ġx", "0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "P", "Ġ=", "ĠP", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "R", "Ġ=", "ĠR", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "Q", "Ġ=", "ĠQ", ";", "Ċ", "}", "Ċ", "Ċ", "Kal", "man", "Filter", "1", "D", "::", "~", "Kal", "man", "Filter", "1", "D", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠKal", "man", "Filter", "1", "D", "::", "update", "(", "double", "Ġz", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġ(", "P", "*", "z", "Ġ+", "Ġx", "*", "R", ")", "Ġ/", "Ġ(", "P", "Ġ+", "ĠR", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠP", "Ġ=", "Ġ1", ".", "Ġ/", "Ġ(", "1", "./", "P", "Ġ+", "Ġ1", "./", "R", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠKal", "man", "Filter", "1", "D", "::", "p", "redict", "(", "double", "Ġu", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ+=", "Ġu", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠP", "Ġ+=", "ĠQ", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 19, "comesFrom", ["x"], [16]], ["x0", 6, "comesFrom", ["x0"], [1]], ["P", 7, "comesFrom", ["P"], [2]], ["P", 8, "comesFrom", ["P"], [2]], ["P", 17, "comesFrom", ["P"], [2]], ["P", 21, "comesFrom", ["P"], [2]], ["P", 24, "comesFrom", ["P"], [23]], ["R", 9, "comesFrom", ["R"], [3]], ["R", 10, "comesFrom", ["R"], [3]], ["R", 20, "comesFrom", ["R"], [3]], ["R", 22, "comesFrom", ["R"], [3]], ["R", 25, "comesFrom", ["R"], [3]], ["Q", 11, "comesFrom", ["Q"], [4]], ["Q", 12, "comesFrom", ["Q"], [4]], ["Q", 31, "comesFrom", ["Q"], [4]], ["z", 18, "comesFrom", ["z"], [15]], ["u", 29, "comesFrom", ["u"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::824", "code": "#include \"logger.h\"\n\n\n\nLogger::Logger (const std::string & directoryName)\n            : currentDirectoryName {directoryName}\n            , logFileName  {currentDirectoryName + \"/lpslcd.log\"}\n            , datFileName  {currentDirectoryName + \"/lpslcd.dat\"}\n{\n}\n\n\n\nvoid Logger::LogMessage (const std::string & message)\n{\n    logFile.open (logFileName, std::fstream::out | std::fstream::app);\n    logFile << message;\n    logFile.close ();\n}\n\n\n\nvoid Logger::LogCode (const int_t length, const std::string & code)\n{\n    std::string codeString;\n\n    codeString  = std::to_string (length);\n    codeString += \":\\t\";\n    for (int i = 0; i < length; ++i) {\n        codeString += code [i] == '0' ? \"+\" : \"-\";\n    }\n    codeString += \"\\n\";\n\n    datFile.open (datFileName, std::fstream::out | std::fstream::app);\n    datFile << codeString;\n    datFile.close ();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "log", "ger", ".", "h", "\"", "ĊĊ", "Ċ", "Ċ", "Log", "ger", "::", "Log", "ger", "Ġ(", "const", "Ġstd", "::", "string", "Ġ&", "Ġdirectory", "Name", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġcurrent", "Directory", "Name", "Ġ{", "directory", "Name", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ,", "Ġlog", "File", "Name", "Ġ", "Ġ{", "current", "Directory", "Name", "Ġ+", "Ġ\"/", "l", "ps", "l", "cd", ".", "log", "\"}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ,", "Ġdat", "File", "Name", "Ġ", "Ġ{", "current", "Directory", "Name", "Ġ+", "Ġ\"/", "l", "ps", "l", "cd", ".", "dat", "\"}", "Ċ", "{", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "void", "ĠLog", "ger", "::", "Log", "Message", "Ġ(", "const", "Ġstd", "::", "string", "Ġ&", "Ġmessage", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlog", "File", ".", "open", "Ġ(", "log", "File", "Name", ",", "Ġstd", "::", "f", "stream", "::", "out", "Ġ|", "Ġstd", "::", "f", "stream", "::", "app", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlog", "File", "Ġ<<", "Ġmessage", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlog", "File", ".", "close", "Ġ();", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "void", "ĠLog", "ger", "::", "Log", "Code", "Ġ(", "const", "Ġint", "_", "t", "Ġlength", ",", "Ġconst", "Ġstd", "::", "string", "Ġ&", "Ġcode", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġcode", "String", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcode", "String", "Ġ", "Ġ=", "Ġstd", "::", "to", "_", "string", "Ġ(", "length", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcode", "String", "Ġ+=", "Ġ\"", ":\\", "t", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlength", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcode", "String", "Ġ+=", "Ġcode", "Ġ[", "i", "]", "Ġ==", "Ġ'", "0", "'", "Ġ?", "Ġ\"+", "\"", "Ġ:", "Ġ\"-", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcode", "String", "Ġ+=", "Ġ\"\\", "n", "\";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġdat", "File", ".", "open", "Ġ(", "dat", "File", "Name", ",", "Ġstd", "::", "f", "stream", "::", "out", "Ġ|", "Ġstd", "::", "f", "stream", "::", "app", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdat", "File", "Ġ<<", "Ġcode", "String", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdat", "File", ".", "close", "Ġ();", "Ċ", "}", "Ċ"], "dataflow_graph": [["length", 25, "comesFrom", ["length"], [20]], ["length", 29, "comesFrom", ["length"], [20]], ["i", 28, "comesFrom", ["i"], [27]], ["i", 30, "comesFrom", ["i"], [27]], ["i", 33, "comesFrom", ["i"], [27]], ["codeString", 41, "comesFrom", ["codeString"], [34]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::825", "code": "#include <benchmark/benchmark.h>\n#include <gameboycore/gameboycore.h>\n\n#include <fstream>\n#include <string>\n#include <vector>\n\nusing namespace gb;\n\nstatic std::vector<uint8_t> loadRom(const std::string& rom_path)\n{\n    std::vector<uint8_t> data;\n\n    std::ifstream file{ rom_path, std::ios::binary | std::ios::ate };\n    if (file.is_open())\n    {\n        auto length = file.tellg();\n        data.resize((std::size_t)length);\n\n        file.seekg(0, std::ios::beg);\n        file.read((char*)&data[0], length);\n    }\n    else\n    {\n        throw std::runtime_error(\"Could not open file specified\");\n    }\n\n    return data;\n}\n\nstatic void BM_EmulateFrame(benchmark::State& state)\n{\n    auto rom = loadRom(\"test_runner/test_roms/cpu_instrs/cpu_instrs.gb\");\n\n    GameboyCore core;\n    core.loadROM(&rom[0], rom.size());\n\n    for (auto _ : state)\n        core.emulateFrame();\n}\n\nBENCHMARK(BM_EmulateFrame);\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bench", "mark", "/", "bench", "mark", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "game", "boy", "core", "/", "game", "boy", "core", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġg", "b", ";", "Ċ", "Ċ", "static", "Ġstd", "::", "vector", "<", "uint", "8", "_", "t", ">", "Ġload", "Rom", "(", "const", "Ġstd", "::", "string", "&", "Ġrom", "_", "path", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "uint", "8", "_", "t", ">", "Ġdata", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "if", "stream", "Ġfile", "{", "Ġrom", "_", "path", ",", "Ġstd", "::", "ios", "::", "binary", "Ġ|", "Ġstd", "::", "ios", "::", "ate", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "file", ".", "is", "_", "open", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġlength", "Ġ=", "Ġfile", ".", "tell", "g", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdata", ".", "res", "ize", "((", "std", "::", "size", "_", "t", ")", "length", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfile", ".", "seek", "g", "(", "0", ",", "Ġstd", "::", "ios", "::", "be", "g", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfile", ".", "read", "((", "char", "*)", "&", "data", "[", "0", "],", "Ġlength", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "Could", "Ġnot", "Ġopen", "Ġfile", "Ġspecified", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġdata", ";", "Ċ", "}", "Ċ", "Ċ", "static", "Ġvoid", "ĠBM", "_", "Em", "ulate", "Frame", "(", "bench", "mark", "::", "State", "&", "Ġstate", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġrom", "Ġ=", "Ġload", "Rom", "(\"", "test", "_", "runner", "/", "test", "_", "rom", "s", "/", "cpu", "_", "in", "str", "s", "/", "cpu", "_", "in", "str", "s", ".", "gb", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠGame", "boy", "Core", "Ġcore", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcore", ".", "load", "ROM", "(&", "rom", "[", "0", "],", "Ġrom", ".", "size", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "auto", "Ġ_", "Ġ:", "Ġstate", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcore", ".", "em", "ulate", "Frame", "();", "Ċ", "}", "Ċ", "Ċ", "B", "EN", "CH", "M", "ARK", "(", "BM", "_", "Em", "ulate", "Frame", ");", "Ċ"], "dataflow_graph": [["file", 8, "comesFrom", ["file"], [4]], ["file", 11, "comesFrom", ["file"], [4]], ["file", 16, "comesFrom", ["file"], [4]], ["file", 19, "comesFrom", ["file"], [4]], ["data", 13, "comesFrom", ["data"], [3]], ["data", 21, "comesFrom", ["data"], [3]], ["data", 24, "comesFrom", ["data"], [3]], ["length", 15, "comesFrom", ["length"], [10]], ["length", 22, "comesFrom", ["length"], [10]], ["core", 30, "comesFrom", ["core"], [29]], ["core", 37, "comesFrom", ["core"], [29]], ["rom", 32, "comesFrom", ["rom"], [27]], ["rom", 33, "comesFrom", ["rom"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::826", "code": "#include \"base/CotTime.h\"\n\nnamespace Cot\n{\n\tTime::Time()\n\t\t: _lastTime(std::chrono::high_resolution_clock::now())\n\t\t, _timeScale(1.0f)\n\t\t, _deltaTime(0.0f)\n\t{\t}\n\n\tTime::~Time()\n\t{\t}\n\n\tvoid Time::Tick()\n\t{\n\t\t_currentTime = std::chrono::high_resolution_clock::now();\n\t\t_deltaTime = std::chrono::duration_cast<std::chrono::nanoseconds>(_currentTime - _lastTime).count();\n\t\t_deltaTime /= 1000000000;\n\t\t_lastTime = _currentTime;\n\t}\n\n\tvoid Time::SetTimeScale(const float scale)\n\t{\n\t\t_timeScale = scale;\n\t}\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "base", "/", "C", "ot", "Time", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠCot", "Ċ", "{", "Ċ", "ĉ", "Time", "::", "Time", "()", "Ċ", "ĉ", "ĉ", ":", "Ġ_", "last", "Time", "(", "std", "::", "chron", "o", "::", "high", "_", "resolution", "_", "clock", "::", "now", "())", "Ċ", "ĉ", "ĉ", ",", "Ġ_", "time", "Scale", "(", "1", ".", "0", "f", ")", "Ċ", "ĉ", "ĉ", ",", "Ġ_", "d", "elta", "Time", "(", "0", ".", "0", "f", ")", "Ċ", "ĉ", "{", "ĉ", "}", "ĊĊ", "ĉ", "Time", "::", "~", "Time", "()", "Ċ", "ĉ", "{", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠTime", "::", "T", "ick", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "_", "current", "Time", "Ġ=", "Ġstd", "::", "chron", "o", "::", "high", "_", "resolution", "_", "clock", "::", "now", "();", "Ċ", "ĉ", "ĉ", "_", "d", "elta", "Time", "Ġ=", "Ġstd", "::", "chron", "o", "::", "duration", "_", "cast", "<", "std", "::", "chron", "o", "::", "nan", "ose", "cond", "s", ">", "(_", "current", "Time", "Ġ-", "Ġ_", "last", "Time", ").", "count", "();", "Ċ", "ĉ", "ĉ", "_", "d", "elta", "Time", "Ġ/", "=", "Ġ100", "0000000", ";", "Ċ", "ĉ", "ĉ", "_", "last", "Time", "Ġ=", "Ġ_", "current", "Time", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠTime", "::", "Set", "Time", "Scale", "(", "const", "Ġfloat", "Ġscale", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "_", "time", "Scale", "Ġ=", "Ġscale", ";", "Ċ", "ĉ", "}", "Ċ", "}"], "dataflow_graph": [["_currentTime", 11, "comesFrom", ["_currentTime"], [7]], ["_currentTime", 16, "comesFrom", ["_currentTime"], [7]], ["scale", 20, "comesFrom", ["scale"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::827", "code": "#ifndef TRIAL_DIVISION_HPP__\n#define TRIAL_DIVISION_HPP__\n\n#include <cmath>\n#include <iterator>\n#include \"prime_sieve.hpp\"\n\nusing namespace std;\n\ntemplate<typename T, typename OutputIterator>\nvoid trial_division(T n, OutputIterator result)\n{\n  vector<T> primes;\n  prime_sieve(static_cast<T>(pow(n, 0.5) + 1), back_inserter(primes));\n\n  for (const T& p : primes)\n  {\n    if (p * p > n) break;\n\n    while (n % p == 0)\n    {\n      *result = p;\n      ++result;\n      n /= p;\n    }\n  }\n\n  if (n > 1)\n  {\n    *result = n;\n    ++result;\n  }\n}\n\n#endif\n\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠTRI", "AL", "_", "DIV", "ISION", "_", "H", "PP", "__", "Ċ", "#", "define", "ĠTRI", "AL", "_", "DIV", "ISION", "_", "H", "PP", "__", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "iterator", ">", "Ċ", "#", "include", "Ġ\"", "prime", "_", "s", "ieve", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ",", "Ġtyp", "ename", "ĠOutput", "Iterator", ">", "Ċ", "void", "Ġtrial", "_", "division", "(", "T", "Ġn", ",", "ĠOutput", "Iterator", "Ġresult", ")", "Ċ", "{", "Ċ", "Ġ", "Ġvector", "<", "T", ">", "Ġpr", "imes", ";", "Ċ", "Ġ", "Ġprime", "_", "s", "ieve", "(", "static", "_", "cast", "<", "T", ">(", "p", "ow", "(", "n", ",", "Ġ0", ".", "5", ")", "Ġ+", "Ġ1", "),", "Ġback", "_", "ins", "er", "ter", "(", "pr", "imes", "));", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "const", "ĠT", "&", "Ġp", "Ġ:", "Ġpr", "imes", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "p", "Ġ*", "Ġp", "Ġ>", "Ġn", ")", "Ġbreak", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "n", "Ġ%", "Ġp", "Ġ==", "Ġ0", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "result", "Ġ=", "Ġp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "result", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġn", "Ġ/", "=", "Ġp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġif", "Ġ(", "n", "Ġ>", "Ġ1", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ*", "result", "Ġ=", "Ġn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ++", "result", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "ĊĊ"], "dataflow_graph": [["n", 10, "comesFrom", ["n"], [4]], ["n", 17, "comesFrom", ["n"], [4]], ["n", 18, "comesFrom", ["n"], [4]], ["n", 25, "comesFrom", ["n"], [23]], ["n", 27, "comesFrom", ["n"], [23]], ["primes", 12, "comesFrom", ["primes"], [6]], ["primes", 14, "comesFrom", ["primes"], [6]], ["result", 20, "comesFrom", ["result"], [5]], ["result", 22, "comesFrom", ["result"], [5]], ["result", 26, "comesFrom", ["result"], [5]], ["result", 28, "comesFrom", ["result"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::828", "code": "//\n// Created by Yijie Ma on 1/29/17.\n//\n\n#include \"view.h\"\n\n#include <iostream>\n\nView::View(std::string name) : name_(name) {}\n\nvoid View::update(int message) {\n    std::cout << \"view: \" << name_ << \" receives message: \" << message << std::endl;\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠCreated", "Ġby", "ĠY", "ij", "ie", "ĠMa", "Ġon", "Ġ1", "/", "29", "/", "17", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "view", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "View", "::", "View", "(", "std", "::", "string", "Ġname", ")", "Ġ:", "Ġname", "_(", "name", ")", "Ġ{}", "Ċ", "Ċ", "void", "ĠView", "::", "update", "(", "int", "Ġmessage", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "view", ":", "Ġ\"", "Ġ<<", "Ġname", "_", "Ġ<<", "Ġ\"", "Ġreceives", "Ġmessage", ":", "Ġ\"", "Ġ<<", "Ġmessage", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["name", 3, "comesFrom", ["name"], [1]], ["message", 8, "comesFrom", ["message"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::829", "code": "\n#include <QApplication>\n#include <iostream>\n#include <QGraphicsScene>\n#include <QGraphicsItem>\n#include <QGraphicsView>\n#include <QObject>\n#include <QDebug>\n#include <QDesktopWidget>\n#include <QKeyEvent>\n#include <wheretoplay.h>\nusing namespace std;\nvoid Menu()\n    {\n\n\n    QDesktopWidget widget;\n    QRect rec = widget.availableGeometry(widget.primaryScreen());\n    int height = rec.height();\n    int width = rec.width();\n    QGraphicsScene *Background=new QGraphicsScene();\n\n    QGraphicsView *Window=new QGraphicsView(Background);\n\n    WhereToPlay *donde= new WhereToPlay();\n\n    donde->setRect(0,0,100,100);\n    donde->setFlag(QGraphicsItem::ItemIsFocusable);\n    donde->setFocus();\n    Background->addItem(donde);\n    /*\n    Window->setAlignment(Qt::AlignBaseline);\n    Window->setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n    Window->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n    Window->setBaseSize(width,height-30);\n    Window->resize(width,height-30);\n    */\n    Window->show();\n    //Background->setSceneRect(0,0,Window->width(),Window->height());\n\n    }\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    Menu();\n    return a.exec();\n}\n", "code_tokens": ["Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "Q", "Graphics", "Scene", ">", "Ċ", "#", "include", "Ġ<", "Q", "Graphics", "Item", ">", "Ċ", "#", "include", "Ġ<", "Q", "Graphics", "View", ">", "Ċ", "#", "include", "Ġ<", "Q", "Object", ">", "Ċ", "#", "include", "Ġ<", "Q", "Debug", ">", "Ċ", "#", "include", "Ġ<", "Q", "Desktop", "Widget", ">", "Ċ", "#", "include", "Ġ<", "Q", "Key", "Event", ">", "Ċ", "#", "include", "Ġ<", "whe", "ret", "op", "lay", ".", "h", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "void", "ĠMenu", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Desktop", "Widget", "Ġwidget", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQR", "ect", "Ġrec", "Ġ=", "Ġwidget", ".", "available", "Ge", "ometry", "(", "widget", ".", "primary", "Screen", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġheight", "Ġ=", "Ġrec", ".", "height", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġwidth", "Ġ=", "Ġrec", ".", "width", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Graphics", "Scene", "Ġ*", "Background", "=", "new", "ĠQ", "Graphics", "Scene", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "Graphics", "View", "Ġ*", "Window", "=", "new", "ĠQ", "Graphics", "View", "(", "Background", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠWhere", "To", "Play", "Ġ*", "d", "onde", "=", "Ġnew", "ĠWhere", "To", "Play", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġd", "onde", "->", "set", "Rect", "(", "0", ",", "0", ",", "100", ",", "100", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "onde", "->", "set", "Flag", "(", "Q", "Graphics", "Item", "::", "Item", "Is", "Focus", "able", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "onde", "->", "set", "Focus", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠBackground", "->", "add", "Item", "(", "d", "onde", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ/*", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWindow", "->", "set", "Al", "ignment", "(", "Q", "t", "::", "Al", "ign", "Bas", "eline", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWindow", "->", "set", "Vert", "ical", "Scroll", "Bar", "Policy", "(", "Q", "t", "::", "Scroll", "Bar", "Always", "Off", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWindow", "->", "set", "Hor", "izontal", "Scroll", "Bar", "Policy", "(", "Q", "t", "::", "Scroll", "Bar", "Always", "Off", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWindow", "->", "set", "Base", "Size", "(", "width", ",", "height", "-", "30", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWindow", "->", "res", "ize", "(", "width", ",", "height", "-", "30", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ*/", "Ċ", "Ġ", "Ġ", "Ġ", "ĠWindow", "->", "show", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Background", "->", "set", "Scene", "Rect", "(", "0", ",", "0", ",", "Window", "->", "width", "(),", "Window", "->", "height", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Application", "Ġa", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMenu", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["widget", 4, "comesFrom", ["widget"], [2]], ["widget", 6, "comesFrom", ["widget"], [2]], ["rec", 9, "comesFrom", ["rec"], [3]], ["rec", 12, "comesFrom", ["rec"], [3]], ["height", 10, "comesFrom", ["height"], [8]], ["width", 13, "comesFrom", ["width"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::830", "code": "#include \"LengthOfLastWord.hpp\"\n\nint LengthOfLastWord::lengthOfLastWord(string s) {\n    int len = 0;\n\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ')\n            len++;\n        else if (i + 1 < s.size() && s[i + 1] != ' ')\n            len = 0;\n    }\n\n    return len;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Length", "Of", "Last", "Word", ".", "h", "pp", "\"", "Ċ", "Ċ", "int", "ĠLength", "Of", "Last", "Word", "::", "length", "Of", "Last", "Word", "(", "string", "Ġs", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġs", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "[", "i", "]", "Ġ!=", "Ġ'", "Ġ'", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlen", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "i", "Ġ+", "Ġ1", "Ġ<", "Ġs", ".", "size", "()", "Ġ&&", "Ġs", "[", "i", "Ġ+", "Ġ1", "]", "Ġ!=", "Ġ'", "Ġ'", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlen", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġlen", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 4, "comesFrom", ["i"], [3]], ["i", 7, "comesFrom", ["i"], [3]], ["i", 9, "comesFrom", ["i"], [3]], ["i", 11, "comesFrom", ["i"], [3]], ["i", 15, "comesFrom", ["i"], [3]], ["s", 5, "comesFrom", ["s"], [1]], ["s", 8, "comesFrom", ["s"], [1]], ["s", 12, "comesFrom", ["s"], [1]], ["s", 14, "comesFrom", ["s"], [1]], ["len", 10, "comesFrom", ["len"], [2]], ["len", 17, "comesFrom", ["len"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::831", "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char *argv[]){\n\n    int opciones[][2] = { \n\t{1, 51},\n\t{2, 52},\n\t{3, 53},\n\t{4, 54},\n\t{5, 55},\n\t{6, 56}\n    };\n\n    for (int fila=0; fila<6; fila++){\n\tfor(int col=0; col<2; col++)\n\t    printf(\"%2i \", opciones[fila][col]);\n\tprintf(\"\\n\");\n    }\n\n    printf(\"\\n\");\n\n    return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġop", "c", "ion", "es", "[", "][", "2", "]", "Ġ=", "Ġ{", "Ġ", "Ċ", "ĉ", "{", "1", ",", "Ġ51", "},", "Ċ", "ĉ", "{", "2", ",", "Ġ52", "},", "Ċ", "ĉ", "{", "3", ",", "Ġ53", "},", "Ċ", "ĉ", "{", "4", ",", "Ġ54", "},", "Ċ", "ĉ", "{", "5", ",", "Ġ55", "},", "Ċ", "ĉ", "{", "6", ",", "Ġ56", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ};", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġfil", "a", "=", "0", ";", "Ġfil", "a", "<", "6", ";", "Ġfil", "a", "++", "){", "Ċ", "ĉ", "for", "(", "int", "Ġcol", "=", "0", ";", "Ġcol", "<", "2", ";", "Ġcol", "++)", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "2", "i", "Ġ\",", "Ġop", "c", "ion", "es", "[", "f", "ila", "][", "col", "]);", "Ċ", "ĉ", "printf", "(\"", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "\\", "n", "\");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["fila", 5, "comesFrom", ["fila"], [4]], ["fila", 6, "comesFrom", ["fila"], [4]], ["fila", 12, "comesFrom", ["fila"], [4]], ["col", 8, "comesFrom", ["col"], [7]], ["col", 9, "comesFrom", ["col"], [7]], ["col", 13, "comesFrom", ["col"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::832", "code": "class Solution {\npublic:\n    int minCut(string s) {\n        int len = s.size();\n        int D[len + 1];\n        bool P[len][len];\n        //the worst case is cutting by each char\n        for (int i = 0; i <= len; i++)\n            D[i] = len - i;\n        for (int i = 0; i < len; i++)\n            for (int j = 0; j < len; j++)\n                P[i][j] = false;\n        for (int i = len - 1; i >= 0; i--) {\n            for (int j = i; j < len; j++) {\n                if (s[i] == s[j] && (j - i < 2 || P[i + 1][j - 1])) {\n                    P[i][j] = true;\n                    D[i] = min(D[i], D[j + 1] + 1);\n                }\n            }\n        }\n        return D[0] - 1;\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġmin", "Cut", "(", "string", "Ġs", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "Ġ=", "Ġs", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "ĠD", "[", "len", "Ġ+", "Ġ1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "ĠP", "[", "len", "][", "len", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "the", "Ġworst", "Ġcase", "Ġis", "Ġcutting", "Ġby", "Ġeach", "Ġchar", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġlen", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠD", "[", "i", "]", "Ġ=", "Ġlen", "Ġ-", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġlen", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġlen", ";", "Ġj", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠP", "[", "i", "][", "j", "]", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġlen", "Ġ-", "Ġ1", ";", "Ġi", "Ġ>=", "Ġ0", ";", "Ġi", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġi", ";", "Ġj", "Ġ<", "Ġlen", ";", "Ġj", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "[", "i", "]", "Ġ==", "Ġs", "[", "j", "]", "Ġ&&", "Ġ(", "j", "Ġ-", "Ġi", "Ġ<", "Ġ2", "Ġ||", "ĠP", "[", "i", "Ġ+", "Ġ1", "][", "j", "Ġ-", "Ġ1", "]", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠP", "[", "i", "][", "j", "]", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠD", "[", "i", "]", "Ġ=", "Ġmin", "(", "D", "[", "i", "],", "ĠD", "[", "j", "Ġ+", "Ġ1", "]", "Ġ+", "Ġ1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠD", "[", "0", "]", "Ġ-", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["s", 3, "comesFrom", ["s"], [1]], ["s", 38, "comesFrom", ["s"], [1]], ["s", 40, "comesFrom", ["s"], [1]], ["len", 6, "comesFrom", ["len"], [2]], ["len", 8, "comesFrom", ["len"], [2]], ["len", 9, "comesFrom", ["len"], [2]], ["len", 12, "comesFrom", ["len"], [2]], ["len", 16, "comesFrom", ["len"], [2]], ["len", 20, "comesFrom", ["len"], [2]], ["len", 24, "comesFrom", ["len"], [2]], ["len", 30, "comesFrom", ["len"], [2]], ["len", 36, "comesFrom", ["len"], [2]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 13, "comesFrom", ["i"], [10]], ["i", 15, "comesFrom", ["i"], [10]], ["i", 17, "comesFrom", ["i"], [10]], ["i", 19, "comesFrom", ["i"], [18]], ["i", 21, "comesFrom", ["i"], [18]], ["i", 27, "comesFrom", ["i"], [18]], ["i", 31, "comesFrom", ["i"], [29]], ["i", 32, "comesFrom", ["i"], [29]], ["i", 39, "comesFrom", ["i"], [34]], ["i", 43, "comesFrom", ["i"], [34]], ["i", 45, "comesFrom", ["i"], [34]], ["i", 48, "comesFrom", ["i"], [34]], ["i", 51, "comesFrom", ["i"], [34]], ["i", 54, "comesFrom", ["i"], [34]], ["j", 23, "comesFrom", ["j"], [22]], ["j", 25, "comesFrom", ["j"], [22]], ["j", 28, "comesFrom", ["j"], [22]], ["j", 35, "comesFrom", ["j"], [33]], ["j", 37, "comesFrom", ["j"], [33]], ["j", 41, "comesFrom", ["j"], [33]], ["j", 42, "comesFrom", ["j"], [33]], ["j", 46, "comesFrom", ["j"], [33]], ["j", 49, "comesFrom", ["j"], [33]], ["j", 56, "comesFrom", ["j"], [33]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::833", "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n\tcout << \"The sine of 100 radians is \" << sin(100.0) << endl;\n\tcout << \"e^100 is \" << exp(100.0) << endl;\n\n\tcout << rand() << \" is a pseduo-random number.\" << endl;\n\t\n\tcout << \"Now we set the RNG's seed using the timer.\" << endl;\n//\tcout << srand( time(NULL) ) << endl; //If you comment this line, this program will generate the same series each run.\n\n\n\tcout << \"Here are some more pseudo-random numbers:\" << endl;\n\tfor(int i = 0; i < 5; i++)\n\t\tcout << rand() << endl;\n\n\tprintf(\"And finally, this is a string output by printf.\\n\");\n\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "#", "include", "Ġ<", "ct", "ime", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "The", "Ġs", "ine", "Ġof", "Ġ100", "Ġrad", "ians", "Ġis", "Ġ\"", "Ġ<<", "Ġsin", "(", "100", ".", "0", ")", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "e", "^", "100", "Ġis", "Ġ\"", "Ġ<<", "Ġexp", "(", "100", ".", "0", ")", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "c", "out", "Ġ<<", "Ġrand", "()", "Ġ<<", "Ġ\"", "Ġis", "Ġa", "Ġps", "edu", "o", "-", "random", "Ġnumber", ".\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Now", "Ġwe", "Ġset", "Ġthe", "ĠR", "NG", "'s", "Ġseed", "Ġusing", "Ġthe", "Ġtimer", ".\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "//", "ĉ", "c", "out", "Ġ<<", "Ġsr", "and", "(", "Ġtime", "(", "NULL", ")", "Ġ)", "Ġ<<", "Ġend", "l", ";", "Ġ//", "If", "Ġyou", "Ġcomment", "Ġthis", "Ġline", ",", "Ġthis", "Ġprogram", "Ġwill", "Ġgenerate", "Ġthe", "Ġsame", "Ġseries", "Ġeach", "Ġrun", ".", "ĊĊ", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Here", "Ġare", "Ġsome", "Ġmore", "Ġpseudo", "-", "random", "Ġnumbers", ":\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "for", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ5", ";", "Ġi", "++)", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġrand", "()", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "printf", "(\"", "And", "Ġfinally", ",", "Ġthis", "Ġis", "Ġa", "Ġstring", "Ġoutput", "Ġby", "Ġprintf", ".", "\\", "n", "\");", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 16, "comesFrom", ["i"], [15]], ["i", 17, "comesFrom", ["i"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::834", "code": "#include<cairo.h>\n#include<iostream>\n#include<string>\n\nusing std::string;\nusing namespace std;\n\n\nint main(int argc, char* argv[])\n{\n  int x,y,width,height;\n  float size_font;\n  \n  x = 20;\n  y = 20;\n  width = 200;\n  height = 40;\n  size_font=20.0;\n  string file_path(argv[1]);\n  \n  \n  cairo_surface_t *surface;\n  cairo_t *cr;\n\n  \n  surface = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, width, height);\n  cr = cairo_create (surface);\n  \n  cairo_text_extents_t te;\n  cairo_set_source_rgb (cr, 0.0, 0.0, 0.0);\n  cairo_select_font_face (cr, \"Georgia\",\n\t\t\t  CAIRO_FONT_SLANT_NORMAL, CAIRO_FONT_WEIGHT_BOLD);\n  cairo_set_font_size (cr, size_font);\n  cairo_text_extents (cr, \"hello world!\", &te);\n  cairo_move_to (cr, x ,y);\n  cairo_show_text (cr, \"hello world!\");\n  cairo_fill(cr);\n  cairo_surface_write_to_png(surface , file_path.c_str());\n\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "<", "c", "airo", ".", "h", ">", "Ċ", "#", "include", "<", "i", "ost", "ream", ">", "Ċ", "#", "include", "<", "string", ">", "Ċ", "Ċ", "using", "Ġstd", "::", "string", ";", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġx", ",", "y", ",", "width", ",", "height", ";", "Ċ", "Ġ", "Ġfloat", "Ġsize", "_", "font", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġx", "Ġ=", "Ġ20", ";", "Ċ", "Ġ", "Ġy", "Ġ=", "Ġ20", ";", "Ċ", "Ġ", "Ġwidth", "Ġ=", "Ġ200", ";", "Ċ", "Ġ", "Ġheight", "Ġ=", "Ġ40", ";", "Ċ", "Ġ", "Ġsize", "_", "font", "=", "20", ".", "0", ";", "Ċ", "Ġ", "Ġstring", "Ġfile", "_", "path", "(", "arg", "v", "[", "1", "]);", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġca", "iro", "_", "surface", "_", "t", "Ġ*", "surface", ";", "Ċ", "Ġ", "Ġca", "iro", "_", "t", "Ġ*", "cr", ";", "ĊĊ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġsurface", "Ġ=", "Ġca", "iro", "_", "image", "_", "surface", "_", "create", "Ġ(", "CA", "IRO", "_", "FORM", "AT", "_", "AR", "GB", "32", ",", "Ġwidth", ",", "Ġheight", ");", "Ċ", "Ġ", "Ġcr", "Ġ=", "Ġca", "iro", "_", "create", "Ġ(", "surface", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġca", "iro", "_", "text", "_", "ext", "ents", "_", "t", "Ġte", ";", "Ċ", "Ġ", "Ġca", "iro", "_", "set", "_", "source", "_", "r", "gb", "Ġ(", "cr", ",", "Ġ0", ".", "0", ",", "Ġ0", ".", "0", ",", "Ġ0", ".", "0", ");", "Ċ", "Ġ", "Ġca", "iro", "_", "select", "_", "font", "_", "face", "Ġ(", "cr", ",", "Ġ\"", "Georgia", "\",", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "ĠCA", "IRO", "_", "F", "ONT", "_", "SL", "ANT", "_", "NOR", "MAL", ",", "ĠCA", "IRO", "_", "F", "ONT", "_", "WE", "IGHT", "_", "B", "OLD", ");", "Ċ", "Ġ", "Ġca", "iro", "_", "set", "_", "font", "_", "size", "Ġ(", "cr", ",", "Ġsize", "_", "font", ");", "Ċ", "Ġ", "Ġca", "iro", "_", "text", "_", "ext", "ents", "Ġ(", "cr", ",", "Ġ\"", "hello", "Ġworld", "!\",", "Ġ&", "te", ");", "Ċ", "Ġ", "Ġca", "iro", "_", "move", "_", "to", "Ġ(", "cr", ",", "Ġx", "Ġ,", "y", ");", "Ċ", "Ġ", "Ġca", "iro", "_", "show", "_", "text", "Ġ(", "cr", ",", "Ġ\"", "hello", "Ġworld", "!\"", ");", "Ċ", "Ġ", "Ġca", "iro", "_", "fill", "(", "cr", ");", "Ċ", "Ġ", "Ġca", "iro", "_", "surface", "_", "write", "_", "to", "_", "png", "(", "surface", "Ġ,", "Ġfile", "_", "path", ".", "c", "_", "str", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["surface", 25, "comesFrom", ["surface"], [18]], ["surface", 48, "comesFrom", ["surface"], [18]], ["cr", 28, "comesFrom", ["cr"], [23]], ["cr", 30, "comesFrom", ["cr"], [23]], ["cr", 34, "comesFrom", ["cr"], [23]], ["cr", 37, "comesFrom", ["cr"], [23]], ["cr", 40, "comesFrom", ["cr"], [23]], ["cr", 44, "comesFrom", ["cr"], [23]], ["cr", 46, "comesFrom", ["cr"], [23]], ["width", 21, "comesFrom", ["width"], [12]], ["height", 22, "comesFrom", ["height"], [13]], ["size_font", 35, "comesFrom", ["size_font"], [14]], ["te", 38, "comesFrom", ["te"], [26]], ["x", 41, "comesFrom", ["x"], [10]], ["y", 42, "comesFrom", ["y"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::835", "code": "class Solution {\npublic:\n  /**\n   * @param costs n x 3 cost matrix\n   * @return an integer, the minimum cost to paint all houses\n   */\n  int minCost(vector<vector<int>> &costs) {\n    int houseCount = costs.size();\n    if (houseCount == 0) {\n      return 0;\n    }\n\n    vector<int> paintCost(3, 0);\n    paintCost[0] = costs[0][0];\n    paintCost[1] = costs[0][1];\n    paintCost[2] = costs[0][2];\n\n    vector<int> preCost(3, 0);\n\n    for (int i = 1; i < houseCount; i++) {\n      for (int j = 0; j < 3; j++) {\n        preCost[j] = paintCost[j];\n      }\n\n      for (int j = 0; j < 3; j++) {\n        paintCost[j] =\n            costs[i][j] + min(preCost[(j + 1) % 3], preCost[(j + 2) % 3]);\n      }\n    }\n\n    return min(paintCost[0], min(paintCost[1], paintCost[2]));\n  }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ/**", "Ċ", "Ġ", "Ġ", "Ġ*", "Ġ@", "param", "Ġcosts", "Ġn", "Ġx", "Ġ3", "Ġcost", "Ġmatrix", "Ċ", "Ġ", "Ġ", "Ġ*", "Ġ@", "return", "Ġan", "Ġinteger", ",", "Ġthe", "Ġminimum", "Ġcost", "Ġto", "Ġpaint", "Ġall", "Ġhouses", "Ċ", "Ġ", "Ġ", "Ġ*/", "Ċ", "Ġ", "Ġint", "Ġmin", "Cost", "(", "vector", "<", "vector", "<", "int", ">>", "Ġ&", "cost", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġhouse", "Count", "Ġ=", "Ġcosts", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "house", "Count", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġpaint", "Cost", "(", "3", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpaint", "Cost", "[", "0", "]", "Ġ=", "Ġcosts", "[", "0", "][", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpaint", "Cost", "[", "1", "]", "Ġ=", "Ġcosts", "[", "0", "][", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpaint", "Cost", "[", "2", "]", "Ġ=", "Ġcosts", "[", "0", "][", "2", "];", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġpre", "Cost", "(", "3", ",", "Ġ0", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġhouse", "Count", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġ3", ";", "Ġj", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpre", "Cost", "[", "j", "]", "Ġ=", "Ġpaint", "Cost", "[", "j", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġ3", ";", "Ġj", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpaint", "Cost", "[", "j", "]", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcosts", "[", "i", "][", "j", "]", "Ġ+", "Ġmin", "(", "pre", "Cost", "[", "(", "j", "Ġ+", "Ġ1", ")", "Ġ%", "Ġ3", "],", "Ġpre", "Cost", "[", "(", "j", "Ġ+", "Ġ2", ")", "Ġ%", "Ġ3", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmin", "(", "p", "aint", "Cost", "[", "0", "],", "Ġmin", "(", "p", "aint", "Cost", "[", "1", "],", "Ġpaint", "Cost", "[", "2", "])", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["houseCount", 5, "comesFrom", ["houseCount"], [2]], ["houseCount", 16, "comesFrom", ["houseCount"], [2]], ["paintCost", 7, "comesFrom", ["paintCost"], [6]], ["paintCost", 9, "comesFrom", ["paintCost"], [6]], ["paintCost", 11, "comesFrom", ["paintCost"], [6]], ["paintCost", 23, "comesFrom", ["paintCost"], [6]], ["paintCost", 28, "comesFrom", ["paintCost"], [6]], ["paintCost", 39, "comesFrom", ["paintCost"], [6]], ["paintCost", 41, "comesFrom", ["paintCost"], [6]], ["paintCost", 42, "comesFrom", ["paintCost"], [6]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 17, "comesFrom", ["i"], [14]], ["i", 31, "comesFrom", ["i"], [14]], ["j", 19, "comesFrom", ["j"], [18]], ["j", 20, "comesFrom", ["j"], [18]], ["j", 22, "comesFrom", ["j"], [18]], ["j", 24, "comesFrom", ["j"], [18]], ["j", 26, "comesFrom", ["j"], [25]], ["j", 27, "comesFrom", ["j"], [25]], ["j", 29, "comesFrom", ["j"], [25]], ["j", 32, "comesFrom", ["j"], [25]], ["j", 35, "comesFrom", ["j"], [25]], ["j", 37, "comesFrom", ["j"], [25]], ["preCost", 21, "comesFrom", ["preCost"], [13]], ["preCost", 34, "comesFrom", ["preCost"], [13]], ["preCost", 36, "comesFrom", ["preCost"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::836", "code": "#include \"image_button.h\"\n\nnamespace gcn\n{\nDImageButton::DImageButton(gcn::Image *image1, gcn::Image *image2):\n\tButton()\n\t{\n\tmImage1=image1;\n\tmImage2=image2;\n\tsetHeight(image1->getHeight());\n\tsetWidth(image1->getWidth());\n\tclick=true;\n\tmKeyPressed = false;\n\tmMousePressed = false;\n\t}\nDImageButton::~DImageButton()\n\t{\n\tdelete mImage1;\n\tdelete mImage2;\n\t}\nvoid DImageButton::draw(Graphics* graphics)\n\t{\n\tif (mHasMouse)\n\t\tgraphics->drawImage(mImage2, 0, 0);\n\telse\n\t\tgraphics->drawImage(mImage1, 0, 0);\n\t}\nvoid DImageButton::drawFrame(Graphics* graphics)\n\t{\n\t}\nbool DImageButton::isClick()\n\t{\n\tif(isPressed()&&click)\n\t\t{\n\t\tclick=false;\n\t\treturn true;\n\t\t}\n\tif(!isPressed())\n\t\t{\n\t\tclick=true;\n\t\tmKeyPressed = false;\n\t\tmMousePressed = false;\n\t\t}\n\treturn false;\n\t}\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "image", "_", "button", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġg", "cn", "Ċ", "{", "Ċ", "D", "Image", "Button", "::", "D", "Image", "Button", "(", "g", "cn", "::", "Image", "Ġ*", "image", "1", ",", "Ġg", "cn", "::", "Image", "Ġ*", "image", "2", "):", "Ċ", "ĉ", "Button", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "m", "Image", "1", "=", "image", "1", ";", "Ċ", "ĉ", "m", "Image", "2", "=", "image", "2", ";", "Ċ", "ĉ", "set", "Height", "(", "image", "1", "->", "get", "Height", "());", "Ċ", "ĉ", "set", "Width", "(", "image", "1", "->", "get", "Width", "());", "Ċ", "ĉ", "click", "=", "true", ";", "Ċ", "ĉ", "m", "Key", "P", "ressed", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "m", "Mouse", "P", "ressed", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "}", "Ċ", "D", "Image", "Button", "::", "~", "D", "Image", "Button", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "delete", "Ġm", "Image", "1", ";", "Ċ", "ĉ", "delete", "Ġm", "Image", "2", ";", "Ċ", "ĉ", "}", "Ċ", "void", "ĠD", "Image", "Button", "::", "draw", "(", "Graphics", "*", "Ġgraphics", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "if", "Ġ(", "m", "Has", "Mouse", ")", "Ċ", "ĉ", "ĉ", "g", "raphics", "->", "draw", "Image", "(", "m", "Image", "2", ",", "Ġ0", ",", "Ġ0", ");", "Ċ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "g", "raphics", "->", "draw", "Image", "(", "m", "Image", "1", ",", "Ġ0", ",", "Ġ0", ");", "Ċ", "ĉ", "}", "Ċ", "void", "ĠD", "Image", "Button", "::", "draw", "Frame", "(", "Graphics", "*", "Ġgraphics", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "}", "Ċ", "bool", "ĠD", "Image", "Button", "::", "is", "Click", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "if", "(", "is", "P", "ressed", "()", "&&", "click", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "click", "=", "false", ";", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "if", "(", "!", "is", "P", "ressed", "())", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "click", "=", "true", ";", "Ċ", "ĉ", "ĉ", "m", "Key", "P", "ressed", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "m", "Mouse", "P", "ressed", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġfalse", ";", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["mImage1", 18, "comesFrom", ["mImage1"], [4]], ["mImage1", 28, "comesFrom", ["mImage1"], [4]], ["mImage2", 19, "comesFrom", ["mImage2"], [6]], ["mImage2", 25, "comesFrom", ["mImage2"], [6]], ["click", 33, "comesFrom", ["click"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::837", "code": "#include<iostream>\n\nusing namespace std;\n\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasPathSum(TreeNode* root, int sum) {\n        return visit(root, sum, 0);\n    }\n\n    bool visit(TreeNode* node, int target, int cur_sum) {\n        if (node == NULL) return false;\n        cur_sum += node->val;\n        if (node->left == NULL && node->right == NULL && cur_sum == target) return true;\n        bool ok1 = visit(node->left, target, cur_sum);\n        if (ok1) return ok1;\n        bool ok2 = visit(node->right, target, cur_sum);\n        if (ok2) return ok2;\n        return false;\n    }\n};\n\nint main() {\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠDefinition", "Ġfor", "Ġa", "Ġbinary", "Ġtree", "Ġnode", ".", "Ċ", "Ġ*", "Ġstruct", "ĠTree", "Node", "Ġ{", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġ*", "left", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġ*", "right", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "()", "Ġ:", "Ġval", "(", "0", "),", "Ġleft", "(", "null", "ptr", "),", "Ġright", "(", "null", "ptr", ")", "Ġ{}", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġleft", "(", "null", "ptr", "),", "Ġright", "(", "null", "ptr", ")", "Ġ{}", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "(", "int", "Ġx", ",", "ĠTree", "Node", "Ġ*", "left", ",", "ĠTree", "Node", "Ġ*", "right", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġleft", "(", "left", "),", "Ġright", "(", "right", ")", "Ġ{}", "Ċ", "Ġ*", "Ġ};", "Ċ", "Ġ*/", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġhas", "Path", "Sum", "(", "Tree", "Node", "*", "Ġroot", ",", "Ġint", "Ġsum", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġvisit", "(", "root", ",", "Ġsum", ",", "Ġ0", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġvisit", "(", "Tree", "Node", "*", "Ġnode", ",", "Ġint", "Ġtarget", ",", "Ġint", "Ġcur", "_", "sum", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "node", "Ġ==", "ĠNULL", ")", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcur", "_", "sum", "Ġ+=", "Ġnode", "->", "val", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "node", "->", "left", "Ġ==", "ĠNULL", "Ġ&&", "Ġnode", "->", "right", "Ġ==", "ĠNULL", "Ġ&&", "Ġcur", "_", "sum", "Ġ==", "Ġtarget", ")", "Ġreturn", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġok", "1", "Ġ=", "Ġvisit", "(", "node", "->", "left", ",", "Ġtarget", ",", "Ġcur", "_", "sum", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "ok", "1", ")", "Ġreturn", "Ġok", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġok", "2", "Ġ=", "Ġvisit", "(", "node", "->", "right", ",", "Ġtarget", ",", "Ġcur", "_", "sum", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "ok", "2", ")", "Ġreturn", "Ġok", "2", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["sum", 6, "comesFrom", ["sum"], [3]], ["cur_sum", 19, "comesFrom", ["cur_sum"], [12]], ["cur_sum", 26, "comesFrom", ["cur_sum"], [12]], ["cur_sum", 34, "comesFrom", ["cur_sum"], [12]], ["target", 20, "comesFrom", ["target"], [9]], ["target", 25, "comesFrom", ["target"], [9]], ["target", 33, "comesFrom", ["target"], [9]], ["ok1", 27, "comesFrom", ["ok1"], [21]], ["ok1", 28, "comesFrom", ["ok1"], [21]], ["ok2", 35, "comesFrom", ["ok2"], [29]], ["ok2", 36, "comesFrom", ["ok2"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::838", "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\nint main()\r\n{\r\n    double s, p, c, t, u;\r\n    cin >> s >> p >> c;\r\n    t = s/(p+c+(c-p)/(c+p)*p);\r\n    u = (c*t-p*t)/(c+p);\r\n    cout << setiosflags(ios::fixed) << setprecision(2) << 2*t+u;\r\n    return 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "Ġ<", "i", "oman", "ip", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġs", ",", "Ġp", ",", "Ġc", ",", "Ġt", ",", "Ġu", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġs", "Ġ>>", "Ġp", "Ġ>>", "Ġc", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", "Ġ=", "Ġs", "/(", "p", "+", "c", "+(", "c", "-", "p", ")/", "(", "c", "+", "p", ")*", "p", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġu", "Ġ=", "Ġ(", "c", "*", "t", "-", "p", "*", "t", ")/", "(", "c", "+", "p", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġset", "ios", "flags", "(", "ios", "::", "fixed", ")", "Ġ<<", "Ġset", "pre", "cision", "(", "2", ")", "Ġ<<", "Ġ2", "*", "t", "+", "u", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["s", 8, "comesFrom", ["s"], [2]], ["s", 12, "comesFrom", ["s"], [2]], ["p", 9, "comesFrom", ["p"], [3]], ["p", 13, "comesFrom", ["p"], [3]], ["p", 16, "comesFrom", ["p"], [3]], ["p", 18, "comesFrom", ["p"], [3]], ["p", 19, "comesFrom", ["p"], [3]], ["p", 23, "comesFrom", ["p"], [3]], ["p", 26, "comesFrom", ["p"], [3]], ["c", 10, "comesFrom", ["c"], [4]], ["c", 14, "comesFrom", ["c"], [4]], ["c", 15, "comesFrom", ["c"], [4]], ["c", 17, "comesFrom", ["c"], [4]], ["c", 21, "comesFrom", ["c"], [4]], ["c", 25, "comesFrom", ["c"], [4]], ["t", 22, "comesFrom", ["t"], [11]], ["t", 24, "comesFrom", ["t"], [11]], ["t", 31, "comesFrom", ["t"], [11]], ["u", 32, "comesFrom", ["u"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::839", "code": "#include \"gear.h\"\r\n\r\nusing namespace std;\r\n\r\nGear::Gear() {}\r\n\r\nGear::Gear(const int &q, const string &i)\r\n{\r\n  quantity = q;\r\n  item_name = i;\r\n}\r\n\r\nGear::Gear(const string &i)\r\n{\r\n  quantity = 1;\r\n  item_name = i;\r\n}\r\n\r\nvoid Gear::showItem() const\r\n{\r\n  cout << quantity << \" \" << item_name << endl;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "gear", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "Gear", "::", "Gear", "()", "Ġ{}", "č", "Ċ", "č", "Ċ", "Gear", "::", "Gear", "(", "const", "Ġint", "Ġ&", "q", ",", "Ġconst", "Ġstring", "Ġ&", "i", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġquantity", "Ġ=", "Ġq", ";", "č", "Ċ", "Ġ", "Ġitem", "_", "name", "Ġ=", "Ġi", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Gear", "::", "Gear", "(", "const", "Ġstring", "Ġ&", "i", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġquantity", "Ġ=", "Ġ1", ";", "č", "Ċ", "Ġ", "Ġitem", "_", "name", "Ġ=", "Ġi", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠGear", "::", "show", "Item", "()", "Ġconst", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġquantity", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġitem", "_", "name", "Ġ<<", "Ġend", "l", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["quantity", 16, "comesFrom", ["quantity"], [11]], ["item_name", 17, "comesFrom", ["item_name"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::840", "code": "/**\n * @file main.cpp\n * @brief Main function for Qt\n */\n#include \"mainwindow.h\"\n#include \"qfile.h\"\n#include \"qtextstream.h\"\n#include <QApplication>\n\n\nint main(int argc, char *argv[])\n{\n    Q_INIT_RESOURCE (resource);\n\n    QApplication program(argc, argv);\n\n    QFile styleFile(\":/project/Stylesheet/darkorange.stylesheet.qss\");\n        if(styleFile.open(QIODevice::ReadOnly))\n        {\n            QTextStream textStream(&styleFile);\n            QString styleSheet = textStream.readAll();\n            styleFile.close();\n            program.setStyleSheet(styleSheet);\n        }\n\n    MainWindow mw;\n    mw.setWindowIcon(QIcon(\":/project/Images/favicon.png\"));\n    mw.show();\n\n    return program.exec();\n}\n\n\n", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "file", "Ġmain", ".", "cpp", "Ċ", "Ġ*", "Ġ@", "b", "rief", "ĠMain", "Ġfunction", "Ġfor", "ĠQt", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ\"", "main", "window", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "q", "file", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "q", "text", "stream", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "ĊĊ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "_", "IN", "IT", "_", "RES", "OURCE", "Ġ(", "resource", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "Application", "Ġprogram", "(", "arg", "c", ",", "Ġarg", "v", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "File", "Ġstyle", "File", "(", "\":", "/", "project", "/", "Sty", "les", "heet", "/", "dark", "orange", ".", "styles", "heet", ".", "q", "ss", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "style", "File", ".", "open", "(", "Q", "I", "OD", "ev", "ice", "::", "Read", "Only", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "Text", "Stream", "Ġtext", "Stream", "(&", "style", "File", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠQ", "String", "Ġstyle", "She", "et", "Ġ=", "Ġtext", "Stream", ".", "read", "All", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstyle", "File", ".", "close", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprogram", ".", "set", "Style", "She", "et", "(", "style", "She", "et", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠMain", "Window", "Ġm", "w", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "w", ".", "set", "Window", "Icon", "(", "Q", "Icon", "(", "\":", "/", "project", "/", "Images", "/", "f", "av", "icon", ".", "png", "\")", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "w", ".", "show", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġprogram", ".", "exec", "();", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["styleFile", 7, "comesFrom", ["styleFile"], [6]], ["styleFile", 11, "comesFrom", ["styleFile"], [6]], ["styleFile", 15, "comesFrom", ["styleFile"], [6]], ["textStream", 13, "comesFrom", ["textStream"], [10]], ["styleSheet", 19, "comesFrom", ["styleSheet"], [12]], ["mw", 21, "comesFrom", ["mw"], [20]], ["mw", 24, "comesFrom", ["mw"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::841", "code": "#include <cstdio>\nconst int maxn = 225;\nconst int maxr = 135;\nint T, n, r;\ndouble p[maxn], d[maxn];\ndouble prob[maxn][maxr];\ndouble e[maxn][maxr];\nint main() {\n\tfor (scanf(\"%d\", &T); T--; ) {\n\t\tscanf(\"%d%d\", &n, &r);\n\t\tfor (int i = 1; i <= n; ++i) scanf(\"%lf%lf\", p + i, d + i);\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tprob[i][0] = 0.0;\n\t\t\tfor (int j = 1; j <= r; ++j) prob[i][j] = 1.0 - (1.0 - prob[i][j - 1]) * (1.0 - p[i]);\n\t\t}\n\t\tfor (int i = n; i >= 1; --i) for (int j = r; j >= 0; --j) e[i][j] = prob[i][j] * (e[i + 1][j - 1] + d[i]) + (1.0 - prob[i][j]) * e[i + 1][j];\n\t\tprintf(\"%0.10lf\\n\", e[1][r]);\n\t}\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "const", "Ġint", "Ġmax", "n", "Ġ=", "Ġ225", ";", "Ċ", "const", "Ġint", "Ġmax", "r", "Ġ=", "Ġ135", ";", "Ċ", "int", "ĠT", ",", "Ġn", ",", "Ġr", ";", "Ċ", "double", "Ġp", "[", "max", "n", "],", "Ġd", "[", "max", "n", "];", "Ċ", "double", "Ġprob", "[", "max", "n", "][", "max", "r", "];", "Ċ", "double", "Ġe", "[", "max", "n", "][", "max", "r", "];", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "T", ");", "ĠT", "--", ";", "Ġ)", "Ġ{", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "%", "d", "\",", "Ġ&", "n", ",", "Ġ&", "r", ");", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġ++", "i", ")", "Ġscan", "f", "(\"", "%", "lf", "%", "lf", "\",", "Ġp", "Ġ+", "Ġi", ",", "Ġd", "Ġ+", "Ġi", ");", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġn", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "pro", "b", "[", "i", "][", "0", "]", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ1", ";", "Ġj", "Ġ<=", "Ġr", ";", "Ġ++", "j", ")", "Ġprob", "[", "i", "][", "j", "]", "Ġ=", "Ġ1", ".", "0", "Ġ-", "Ġ(", "1", ".", "0", "Ġ-", "Ġprob", "[", "i", "][", "j", "Ġ-", "Ġ1", "])", "Ġ*", "Ġ(", "1", ".", "0", "Ġ-", "Ġp", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġn", ";", "Ġi", "Ġ>=", "Ġ1", ";", "Ġ--", "i", ")", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġr", ";", "Ġj", "Ġ>=", "Ġ0", ";", "Ġ--", "j", ")", "Ġe", "[", "i", "][", "j", "]", "Ġ=", "Ġprob", "[", "i", "][", "j", "]", "Ġ*", "Ġ(", "e", "[", "i", "Ġ+", "Ġ1", "][", "j", "Ġ-", "Ġ1", "]", "Ġ+", "Ġd", "[", "i", "])", "Ġ+", "Ġ(", "1", ".", "0", "Ġ-", "Ġprob", "[", "i", "][", "j", "])", "Ġ*", "Ġe", "[", "i", "Ġ+", "Ġ1", "][", "j", "];", "Ċ", "ĉ", "ĉ", "printf", "(\"", "%", "0", ".", "10", "lf", "\\", "n", "\",", "Ġe", "[", "1", "][", "r", "]);", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["maxn", 6, "comesFrom", ["maxn"], [0]], ["maxn", 8, "comesFrom", ["maxn"], [0]], ["maxn", 10, "comesFrom", ["maxn"], [0]], ["maxn", 13, "comesFrom", ["maxn"], [0]], ["maxr", 11, "comesFrom", ["maxr"], [1]], ["maxr", 14, "comesFrom", ["maxr"], [1]], ["T", 17, "comesFrom", ["T"], [2]], ["T", 18, "comesFrom", ["T"], [2]], ["n", 20, "comesFrom", ["n"], [3]], ["n", 24, "comesFrom", ["n"], [3]], ["n", 33, "comesFrom", ["n"], [3]], ["r", 21, "comesFrom", ["r"], [4]], ["r", 39, "comesFrom", ["r"], [4]], ["r", 76, "comesFrom", ["r"], [54]], ["i", 23, "comesFrom", ["i"], [22]], ["i", 25, "comesFrom", ["i"], [22]], ["i", 28, "comesFrom", ["i"], [22]], ["i", 30, "comesFrom", ["i"], [22]], ["i", 32, "comesFrom", ["i"], [31]], ["i", 34, "comesFrom", ["i"], [31]], ["i", 36, "comesFrom", ["i"], [31]], ["i", 42, "comesFrom", ["i"], [31]], ["i", 45, "comesFrom", ["i"], [31]], ["i", 48, "comesFrom", ["i"], [31]], ["i", 51, "comesFrom", ["i"], [49]], ["i", 52, "comesFrom", ["i"], [49]], ["i", 58, "comesFrom", ["i"], [49]], ["i", 61, "comesFrom", ["i"], [49]], ["i", 64, "comesFrom", ["i"], [49]], ["i", 67, "comesFrom", ["i"], [49]], ["i", 69, "comesFrom", ["i"], [49]], ["i", 72, "comesFrom", ["i"], [49]], ["j", 38, "comesFrom", ["j"], [37]], ["j", 40, "comesFrom", ["j"], [37]], ["j", 43, "comesFrom", ["j"], [37]], ["j", 46, "comesFrom", ["j"], [37]], ["j", 55, "comesFrom", ["j"], [53]], ["j", 56, "comesFrom", ["j"], [53]], ["j", 59, "comesFrom", ["j"], [53]], ["j", 62, "comesFrom", ["j"], [53]], ["j", 65, "comesFrom", ["j"], [53]], ["j", 70, "comesFrom", ["j"], [53]], ["j", 73, "comesFrom", ["j"], [53]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::842", "code": "#include <algorithm>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <iostream>\r\n#define N 1000\r\nusing namespace std;\r\n\r\nint a[N];\r\n\r\nint main(void)\r\n{\r\n    int n, m;\r\n    int i;\r\n    int s;\r\n\r\n    scanf(\"%d\", &n);\r\n    scanf(\"%d\", &m);\r\n    for(i = 0; i < n; i ++)\r\n        scanf(\"%d\", &a[i]);\r\n\r\n    sort(a, a + n, greater<int>());\r\n    for(i = s = 0; i < n && s < m; i ++)\r\n        s += a[i];\r\n\r\n    printf(\"%d\\n\", i);\r\n\r\n    return 0;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "al", "gorithm", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "define", "ĠN", "Ġ1000", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "č", "Ċ", "int", "Ġa", "[", "N", "];", "č", "Ċ", "č", "Ċ", "int", "Ġmain", "(", "void", ")", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġn", ",", "Ġm", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġs", ";", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "m", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "Ġ++", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "a", "[", "i", "]);", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsort", "(", "a", ",", "Ġa", "Ġ+", "Ġn", ",", "Ġgreater", "<", "int", ">", "());", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "i", "Ġ=", "Ġs", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", "Ġ&&", "Ġs", "Ġ<", "Ġm", ";", "Ġi", "Ġ++", ")", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġs", "Ġ+=", "Ġa", "[", "i", "];", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġi", ");", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}"], "dataflow_graph": [["n", 10, "comesFrom", ["n"], [5]], ["n", 15, "comesFrom", ["n"], [5]], ["n", 23, "comesFrom", ["n"], [5]], ["n", 28, "comesFrom", ["n"], [5]], ["m", 12, "comesFrom", ["m"], [6]], ["m", 30, "comesFrom", ["m"], [6]], ["i", 14, "comesFrom", ["i"], [13]], ["i", 16, "comesFrom", ["i"], [13]], ["i", 19, "comesFrom", ["i"], [13]], ["i", 27, "comesFrom", ["i"], [25]], ["i", 31, "comesFrom", ["i"], [25]], ["i", 34, "comesFrom", ["i"], [25]], ["i", 36, "comesFrom", ["i"], [25]], ["s", 29, "comesFrom", ["s"], [26]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::843", "code": "//\n//  BulletInterface.cpp\n//  MarXsCube\n//\n//  Created by SeconDatke on 2/18/15.\n//  Copyright (c) 2015 MarXsCube Staff. All rights reserved.\n//\n\n#include \"Config.h\"\n#include \"Generic.h\"\n#include \"BulletDebugDraw.h\"\n#include \"BulletInterface.h\"\n\nvoid BulletDebug_DrawLine(const CoordStruct& pt1, const CoordStruct& pt2) {\n\tBulletDebugDrawer *drawer = reinterpret_cast<BulletDebugDrawer *>(Generic::PhysicsGeneral()->dynaWorld->getDebugDrawer());\n\t\n\tbtVector3 from = btVector3(btScalar(pt1.x*PHY_SCALE), btScalar(pt1.y*PHY_SCALE), btScalar(pt1.z*PHY_SCALE));\n\tbtVector3 to = btVector3(btScalar(pt2.x*PHY_SCALE), btScalar(pt2.y*PHY_SCALE), btScalar(pt2.z*PHY_SCALE));\n\tdrawer->push_task([from, to] (BulletDebugDrawer * d) {\n\t\td->drawLine(from, to, btVector3(1.0, 1.0, 1.0)); });\n}\n\nvoid LuaInterface::RegisterInterface_Bullet(LuaStatus& L) {\n\tluabridge::getGlobalNamespace(L).\n\tbeginNamespace(\"Bullet\").\n\t\tbeginNamespace(\"DebugDrawer\").\n\t\t\taddFunction(\"draw_line\", BulletDebug_DrawLine).\n\t\tendNamespace().\n\tendNamespace();\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠBullet", "Interface", ".", "cpp", "Ċ", "//", "Ġ", "ĠMar", "X", "s", "Cube", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠSec", "on", "Dat", "ke", "Ġon", "Ġ2", "/", "18", "/", "15", ".", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "ĠMar", "X", "s", "Cube", "ĠStaff", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "Config", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Generic", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Bul", "let", "Debug", "Draw", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Bul", "let", "Interface", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠBullet", "Debug", "_", "Draw", "Line", "(", "const", "ĠCoord", "Struct", "&", "Ġpt", "1", ",", "Ġconst", "ĠCoord", "Struct", "&", "Ġpt", "2", ")", "Ġ{", "Ċ", "ĉ", "Bul", "let", "Debug", "Draw", "er", "Ġ*", "draw", "er", "Ġ=", "Ġre", "interpret", "_", "cast", "<", "Bul", "let", "Debug", "Draw", "er", "Ġ*", ">(", "Generic", "::", "Ph", "ysics", "General", "()", "->", "d", "yna", "World", "->", "get", "Debug", "Draw", "er", "());", "Ċ", "ĉ", "Ċ", "ĉ", "bt", "Vector", "3", "Ġfrom", "Ġ=", "Ġb", "t", "Vector", "3", "(", "bt", "Sc", "al", "ar", "(", "pt", "1", ".", "x", "*", "PH", "Y", "_", "SC", "ALE", "),", "Ġb", "t", "Sc", "al", "ar", "(", "pt", "1", ".", "y", "*", "PH", "Y", "_", "SC", "ALE", "),", "Ġb", "t", "Sc", "al", "ar", "(", "pt", "1", ".", "z", "*", "PH", "Y", "_", "SC", "ALE", "));", "Ċ", "ĉ", "bt", "Vector", "3", "Ġto", "Ġ=", "Ġb", "t", "Vector", "3", "(", "bt", "Sc", "al", "ar", "(", "pt", "2", ".", "x", "*", "PH", "Y", "_", "SC", "ALE", "),", "Ġb", "t", "Sc", "al", "ar", "(", "pt", "2", ".", "y", "*", "PH", "Y", "_", "SC", "ALE", "),", "Ġb", "t", "Sc", "al", "ar", "(", "pt", "2", ".", "z", "*", "PH", "Y", "_", "SC", "ALE", "));", "Ċ", "ĉ", "draw", "er", "->", "push", "_", "task", "([", "from", ",", "Ġto", "]", "Ġ(", "Bul", "let", "Debug", "Draw", "er", "Ġ*", "Ġd", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "d", "->", "draw", "Line", "(", "from", ",", "Ġto", ",", "Ġb", "t", "Vector", "3", "(", "1", ".", "0", ",", "Ġ1", ".", "0", ",", "Ġ1", ".", "0", "));", "Ġ});", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLua", "Interface", "::", "Register", "Interface", "_", "Bul", "let", "(", "Lua", "Status", "&", "ĠL", ")", "Ġ{", "Ċ", "ĉ", "lu", "ab", "ridge", "::", "get", "Global", "Names", "pace", "(", "L", ").", "Ċ", "ĉ", "begin", "Names", "pace", "(\"", "Bul", "let", "\").", "Ċ", "ĉ", "ĉ", "begin", "Names", "pace", "(\"", "Debug", "Draw", "er", "\").", "Ċ", "ĉ", "ĉ", "ĉ", "add", "Function", "(\"", "draw", "_", "line", "\",", "ĠBullet", "Debug", "_", "Draw", "Line", ").", "Ċ", "ĉ", "ĉ", "end", "Names", "pace", "().", "Ċ", "ĉ", "end", "Names", "pace", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["from", 38, "comesFrom", ["from"], [8]], ["from", 43, "comesFrom", ["from"], [8]], ["to", 39, "comesFrom", ["to"], [22]], ["to", 44, "comesFrom", ["to"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::844", "code": "#include <iostream>\n#include <stdlib.h>\n\nusing namespace std;\nint ottienidimensione(void);\nvoid stampa(char vet[], int dim);\n\nint main(){\n    char v[10];        // dichiarazione di un vettore di 10 interi\n    int numelementi;  // numero di elementio dell'array v\n    numelementi=ottienidimensione();\n    for (int i=0; i < numelementi; i++) {\n        cout << \"Inserisci il \" << i+1 << \" elemento: \";\n        cin >> v[i];\n    }\n    cout << \"Ecco l'indirizzo di partenza dell' array : \" << v << endl;\n    stampa(v, numelementi);\n    system(\"PAUSE\");\n    return 0;\n}\n\nint ottienidimensione(){\n    int dim;\n    do {\n        cout << \"Inserisci il numero di elementi: \";\n        cin >> dim;\n    } while (dim <= 0 || dim > 10);\n    return dim;\n}\n\nvoid stampa(char vet[], int dim){\n    for (int i=0; i < dim; i++) {\n        cout << \"Ecco il \" << i+1 << \" elemento: \" << vet[i] << endl;\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġo", "tt", "ien", "id", "im", "ension", "e", "(", "void", ");", "Ċ", "void", "Ġst", "ampa", "(", "char", "Ġvet", "[", "],", "Ġint", "Ġdim", ");", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġv", "[", "10", "];", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġdich", "iar", "az", "ione", "Ġdi", "Ġun", "Ġve", "tt", "ore", "Ġdi", "Ġ10", "Ġinter", "i", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġnum", "element", "i", ";", "Ġ", "Ġ//", "Ġnum", "ero", "Ġdi", "Ġelement", "io", "Ġde", "ll", "'", "array", "Ġv", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnum", "element", "i", "=", "ott", "ien", "id", "im", "ension", "e", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "Ġnum", "element", "i", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "In", "ser", "is", "ci", "Ġil", "Ġ\"", "Ġ<<", "Ġi", "+", "1", "Ġ<<", "Ġ\"", "Ġelement", "o", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġv", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "E", "cc", "o", "Ġl", "'", "ind", "ir", "izz", "o", "Ġdi", "Ġpart", "enza", "Ġde", "ll", "'", "Ġarray", "Ġ:", "Ġ\"", "Ġ<<", "Ġv", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġst", "ampa", "(", "v", ",", "Ġnum", "element", "i", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsystem", "(\"", "PA", "USE", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġo", "tt", "ien", "id", "im", "ension", "e", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġdim", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdo", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "In", "ser", "is", "ci", "Ġil", "Ġnum", "ero", "Ġdi", "Ġelement", "i", ":", "Ġ\"", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġdim", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġwhile", "Ġ(", "dim", "Ġ<=", "Ġ0", "Ġ||", "Ġdim", "Ġ>", "Ġ10", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġdim", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġst", "ampa", "(", "char", "Ġvet", "[", "],", "Ġint", "Ġdim", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "Ġdim", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "E", "cc", "o", "Ġil", "Ġ\"", "Ġ<<", "Ġi", "+", "1", "Ġ<<", "Ġ\"", "Ġelement", "o", ":", "Ġ\"", "Ġ<<", "Ġvet", "[", "i", "]", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 11, "comesFrom", ["i"], [10]], ["i", 13, "comesFrom", ["i"], [10]], ["i", 15, "comesFrom", ["i"], [10]], ["i", 18, "comesFrom", ["i"], [10]], ["i", 38, "comesFrom", ["i"], [37]], ["i", 40, "comesFrom", ["i"], [37]], ["i", 42, "comesFrom", ["i"], [37]], ["i", 44, "comesFrom", ["i"], [37]], ["numelementi", 12, "comesFrom", ["numelementi"], [8]], ["numelementi", 24, "comesFrom", ["numelementi"], [8]], ["dim", 30, "comesFrom", ["dim"], [27]], ["dim", 31, "comesFrom", ["dim"], [27]], ["dim", 32, "comesFrom", ["dim"], [27]], ["dim", 33, "comesFrom", ["dim"], [27]], ["dim", 39, "comesFrom", ["dim"], [36]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::845", "code": "// Generated by APIGenerator 1.0\n// DO NOT EDIT!!!\n\n#include \"accountdaysttl.h\"\n\n\nAccountDaysTTL::AccountDaysTTL(QObject* parent) : TelegramObject(parent)\n{\n\tthis->_days = 0;\n\tthis->_constructorid = AccountDaysTTL::CtorAccountDaysTTL;\n}\n\nvoid AccountDaysTTL::read(MTProtoStream* mtstream) \n{\n\tthis->_constructorid = mtstream->readTLConstructor();\n\t\n\tQ_ASSERT((this->_constructorid == AccountDaysTTL::CtorAccountDaysTTL));\n\t\n\tif(this->_constructorid == AccountDaysTTL::CtorAccountDaysTTL)\n\t\tthis->_days = mtstream->readTLInt();\n}\n\nvoid AccountDaysTTL::write(MTProtoStream* mtstream) \n{\n\tQ_ASSERT((this->_constructorid == AccountDaysTTL::CtorAccountDaysTTL));\n\t\n\tthis->compileFlags();\n\tmtstream->writeTLConstructor(this->_constructorid);\n\t\n\tif(this->_constructorid == AccountDaysTTL::CtorAccountDaysTTL)\n\t\tmtstream->writeTLInt(this->_days);\n}\n\nvoid AccountDaysTTL::compileFlags() \n{\n\t\n}\n\nTLInt AccountDaysTTL::days() const\n{\n\treturn this->_days;\n}\n\nvoid AccountDaysTTL::setDays(TLInt days) \n{\n\tif(this->_days == days)\n\t\treturn;\n\n\tthis->_days = days;\n\temit daysChanged();\n}\n\n", "code_tokens": ["Ġ//", "ĠGener", "ated", "Ġby", "ĠAP", "IG", "ener", "ator", "Ġ1", ".", "0", "Ċ", "//", "ĠDO", "ĠNOT", "ĠEDIT", "!!!", "Ċ", "Ċ", "#", "include", "Ġ\"", "account", "day", "st", "tl", ".", "h", "\"", "ĊĊ", "Ċ", "Account", "Days", "T", "TL", "::", "Account", "Days", "T", "TL", "(", "Q", "Object", "*", "Ġparent", ")", "Ġ:", "ĠTelegram", "Object", "(", "parent", ")", "Ċ", "{", "Ċ", "ĉ", "this", "->", "_", "days", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "this", "->", "_", "construct", "or", "id", "Ġ=", "ĠAccount", "Days", "T", "TL", "::", "C", "tor", "Account", "Days", "T", "TL", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAccount", "Days", "T", "TL", "::", "read", "(", "MT", "Pro", "to", "Stream", "*", "Ġmt", "stream", ")", "Ġ", "Ċ", "{", "Ċ", "ĉ", "this", "->", "_", "construct", "or", "id", "Ġ=", "Ġmt", "stream", "->", "read", "TL", "Construct", "or", "();", "Ċ", "ĉ", "Ċ", "ĉ", "Q", "_", "ASS", "ERT", "((", "this", "->", "_", "construct", "or", "id", "Ġ==", "ĠAccount", "Days", "T", "TL", "::", "C", "tor", "Account", "Days", "T", "TL", "));", "Ċ", "ĉ", "Ċ", "ĉ", "if", "(", "this", "->", "_", "construct", "or", "id", "Ġ==", "ĠAccount", "Days", "T", "TL", "::", "C", "tor", "Account", "Days", "T", "TL", ")", "Ċ", "ĉ", "ĉ", "this", "->", "_", "days", "Ġ=", "Ġmt", "stream", "->", "read", "TL", "Int", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAccount", "Days", "T", "TL", "::", "write", "(", "MT", "Pro", "to", "Stream", "*", "Ġmt", "stream", ")", "Ġ", "Ċ", "{", "Ċ", "ĉ", "Q", "_", "ASS", "ERT", "((", "this", "->", "_", "construct", "or", "id", "Ġ==", "ĠAccount", "Days", "T", "TL", "::", "C", "tor", "Account", "Days", "T", "TL", "));", "Ċ", "ĉ", "Ċ", "ĉ", "this", "->", "comp", "ile", "Flags", "();", "Ċ", "ĉ", "mt", "stream", "->", "write", "TL", "Construct", "or", "(", "this", "->", "_", "construct", "or", "id", ");", "Ċ", "ĉ", "Ċ", "ĉ", "if", "(", "this", "->", "_", "construct", "or", "id", "Ġ==", "ĠAccount", "Days", "T", "TL", "::", "C", "tor", "Account", "Days", "T", "TL", ")", "Ċ", "ĉ", "ĉ", "mt", "stream", "->", "write", "TL", "Int", "(", "this", "->", "_", "days", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAccount", "Days", "T", "TL", "::", "comp", "ile", "Flags", "()", "Ġ", "Ċ", "{", "Ċ", "ĉ", "Ċ", "}", "Ċ", "Ċ", "TL", "Int", "ĠAccount", "Days", "T", "TL", "::", "days", "()", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "return", "Ġthis", "->", "_", "days", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠAccount", "Days", "T", "TL", "::", "set", "Days", "(", "TL", "Int", "Ġdays", ")", "Ġ", "Ċ", "{", "Ċ", "ĉ", "if", "(", "this", "->", "_", "days", "Ġ==", "Ġdays", ")", "Ċ", "ĉ", "ĉ", "return", ";", "ĊĊ", "ĉ", "this", "->", "_", "days", "Ġ=", "Ġdays", ";", "Ċ", "ĉ", "em", "it", "Ġdays", "Changed", "();", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["days", 40, "comesFrom", ["days"], [38]], ["days", 42, "comesFrom", ["days"], [38]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::846", "code": "//The Open Computer Forensics Library\n//Copyright (C) KLPD 2003..2006  <ocfa@dnpa.nl>\n//\n//This library is free software; you can redistribute it and/or\n//modify it under the terms of the GNU Lesser General Public\n//License as published by the Free Software Foundation; either\n//version 2.1 of the License, or (at your option) any later version.\n//\n//This library is distributed in the hope that it will be useful,\n//but WITHOUT ANY WARRANTY; without even the implied warranty of\n//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n//Lesser General Public License for more details.\n//\n//You should have received a copy of the GNU Lesser General Public\n//License along with this library; if not, write to the Free Software\n//Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA\n\t\t\t\t\t\t\n#ifndef __ASCIIEXCEPTION_HPP__\n#define __ASCIIEXCEPTION_HPP__\n#include \"ScalarException.hpp\"\n\n\nnamespace ocfa { \n  namespace misc {\n    /**** CLASS AsciiException *********************************************/\n    class AsciiException: public ScalarException {\n    public:\n      AsciiException(string msgstr, const OcfaObject * throwmaster):ScalarException(msgstr,throwmaster){}\n      AsciiException(string msgstr):ScalarException(msgstr){}\n    }; /* end class AsciiException*/\n  } /*end ocfa namespace*/\n}\n#endif\n  \n", "code_tokens": ["Ġ//", "The", "ĠOpen", "ĠComputer", "ĠFore", "nsics", "ĠLibrary", "Ċ", "//", "Copyright", "Ġ(", "C", ")", "ĠKL", "PD", "Ġ2003", "..", "2006", "Ġ", "Ġ<", "oc", "fa", "@", "dn", "pa", ".", "nl", ">", "Ċ", "//", "Ċ", "//", "This", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "//", "mod", "ify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "//", "License", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "//", "version", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "This", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "but", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "MER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "//", "Less", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "Ċ", "//", "License", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "//", "Found", "ation", ",", "ĠInc", ".,", "Ġ59", "ĠTemple", "ĠPlace", ",", "ĠSuite", "Ġ330", ",", "ĠBoston", ",", "ĠMA", "Ġ02", "111", "-", "130", "7", "Ġ", "ĠUSA", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Ċ", "#", "if", "nd", "ef", "Ġ__", "ASC", "II", "EX", "CEPT", "ION", "_", "H", "PP", "__", "Ċ", "#", "define", "Ġ__", "ASC", "II", "EX", "CEPT", "ION", "_", "H", "PP", "__", "Ċ", "#", "include", "Ġ\"", "Sc", "al", "ar", "Exception", ".", "h", "pp", "\"", "ĊĊ", "Ċ", "names", "pace", "Ġo", "cf", "a", "Ġ{", "Ġ", "Ċ", "Ġ", "Ġnamespace", "Ġmisc", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ/", "****", "ĠCLASS", "ĠAs", "ci", "i", "Exception", "Ġ********************************", "************", "*/", "Ċ", "Ġ", "Ġ", "Ġ", "Ġclass", "ĠAs", "ci", "i", "Exception", ":", "Ġpublic", "ĠScal", "ar", "Exception", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAs", "ci", "i", "Exception", "(", "string", "Ġmsg", "str", ",", "Ġconst", "ĠO", "cf", "a", "Object", "Ġ*", "Ġthrow", "master", "):", "Sc", "al", "ar", "Exception", "(", "msg", "str", ",", "throw", "master", "){", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAs", "ci", "i", "Exception", "(", "string", "Ġmsg", "str", "):", "Sc", "al", "ar", "Exception", "(", "msg", "str", "){", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ġ/*", "Ġend", "Ġclass", "ĠAs", "ci", "i", "Exception", "*/", "Ċ", "Ġ", "Ġ}", "Ġ/*", "end", "Ġo", "cf", "a", "Ġnamespace", "*/", "Ċ", "}", "Ċ", "#", "endif", "Ċ", "Ġ", "Ġ", "Ċ"], "dataflow_graph": [["msgstr", 6, "comesFrom", ["msgstr"], [3]], ["msgstr", 11, "comesFrom", ["msgstr"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::847", "code": "#include <vector>\n#include <string>\n#include <iostream>\n#include <functional>\n#include <map>\nusing namespace std;\n\nclass Foo{\npublic:\n    int a, b;\n    Foo(){}\n    Foo(int a_, int b_){\n        a = a_;\n        b = b_;\n    }\n};\n\ntemplate <typename T>\nvoid fun(std::function<T()> f) {\n    cout << f() << endl;\n}\n\nint main(){\n    std::function<int()> f = []() { return 3; };\n    fun(f);\n    //fun([]()->int{return 3;});\n    //std::vector<int> v(1, 2);\n    //for (auto x : v) { cout << x << endl; }\n\n    //std::map<std::string, Foo> myMap = { {\"1\", Foo(10,5)}, {\"2\", Foo(5,10)} };\n    //int b  = myMap[\"1\"].b;    // it tries to call private constructor of Foo.\n    //cout << b << endl;\n    //return 0;\n}\n\n//int fun(const vector<string>& x) {\n//  return x.size();\n//}\n//int main() {\n//  cout << fun({\"1\", \"2\"}) << endl;\n//  return 0;\n//}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "functional", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠFoo", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFoo", "(){", "}", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFoo", "(", "int", "Ġa", "_", ",", "Ġint", "Ġb", "_", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġa", "Ġ=", "Ġa", "_", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġb", "Ġ=", "Ġb", "_", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "void", "Ġfun", "(", "std", "::", "function", "<", "T", "()", ">", "Ġf", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġf", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "function", "<", "int", "()", ">", "Ġf", "Ġ=", "Ġ[]", "()", "Ġ{", "Ġreturn", "Ġ3", ";", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfun", "(", "f", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "fun", "(", "[]", "()", "->", "int", "{", "return", "Ġ3", ";", "});", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "std", "::", "vector", "<", "int", ">", "Ġv", "(", "1", ",", "Ġ2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "for", "Ġ(", "auto", "Ġx", "Ġ:", "Ġv", ")", "Ġ{", "Ġcout", "Ġ<<", "Ġx", "Ġ<<", "Ġend", "l", ";", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "std", "::", "map", "<", "std", "::", "string", ",", "ĠFoo", ">", "Ġmy", "Map", "Ġ=", "Ġ{", "Ġ{\"", "1", "\",", "ĠFoo", "(", "10", ",", "5", ")", "},", "Ġ{\"", "2", "\",", "ĠFoo", "(", "5", ",", "10", ")}", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "int", "Ġb", "Ġ", "Ġ=", "Ġmy", "Map", "[\"", "1", "\"", "].", "b", ";", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġit", "Ġtries", "Ġto", "Ġcall", "Ġprivate", "Ġconstructor", "Ġof", "ĠFoo", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "c", "out", "Ġ<<", "Ġb", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "//", "int", "Ġfun", "(", "const", "Ġvector", "<", "string", ">", "&", "Ġx", ")", "Ġ{", "Ċ", "//", "Ġ", "Ġreturn", "Ġx", ".", "size", "();", "Ċ", "//", "}", "Ċ", "//", "int", "Ġmain", "()", "Ġ{", "Ċ", "//", "Ġ", "Ġcout", "Ġ<<", "Ġfun", "(", "{\"", "1", "\",", "Ġ\"", "2", "\"}", ")", "Ġ<<", "Ġend", "l", ";", "Ċ", "//", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "//", "}", "Ċ"], "dataflow_graph": [["a_", 8, "comesFrom", ["a_"], [5]], ["b_", 10, "comesFrom", ["b_"], [6]], ["f", 14, "comesFrom", ["f"], [12]], ["f", 19, "comesFrom", ["f"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::848", "code": "﻿// duplicates.cpp: Definiert den Einstiegspunkt für die Anwendung.\n//\n\n#include \"duplicates.h\"\n\n\nvoid test_for_each_adjacent_range() {\n\tauto bla = std::initializer_list<std::pair<int, char>>{ {1, 'A'}, {2, 'A'}, {3, 'B'}, {4, 'C'}, {5, 'C'}, {6, 'C'} };\n\tfor_each_adjacent_range(std::begin(bla), std::end(bla)\n\t\t, [](std::pair<int, char> const& e) { return e.second; }\n\t\t, [](auto const& start, auto const& end, auto const& v) {\n\t\t\tstd::cout << \"Wert: \" << v << \" \" << std::distance(start, end) << \" Elemente.\\n\";\n\t\t});\n}\n\nint main(int argn, char* argv[]) {\n\ttest_for_each_adjacent_range();\n}", "code_tokens": ["Ġï", "»", "¿", "//", "Ġdupl", "icates", ".", "cpp", ":", "ĠDef", "ini", "ert", "Ġden", "ĠE", "inst", "ieg", "sp", "unk", "t", "Ġf", "Ã¼r", "Ġdie", "ĠAn", "w", "end", "ung", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "du", "pl", "icates", ".", "h", "\"", "ĊĊ", "Ċ", "void", "Ġtest", "_", "for", "_", "each", "_", "adj", "acent", "_", "range", "()", "Ġ{", "Ċ", "ĉ", "auto", "Ġbl", "a", "Ġ=", "Ġstd", "::", "initial", "izer", "_", "list", "<", "std", "::", "pair", "<", "int", ",", "Ġchar", ">>", "{", "Ġ{", "1", ",", "Ġ'", "A", "'", "},", "Ġ{", "2", ",", "Ġ'", "A", "'", "},", "Ġ{", "3", ",", "Ġ'", "B", "'", "},", "Ġ{", "4", ",", "Ġ'", "C", "'", "},", "Ġ{", "5", ",", "Ġ'", "C", "'", "},", "Ġ{", "6", ",", "Ġ'", "C", "'", "}", "Ġ};", "Ċ", "ĉ", "for", "_", "each", "_", "adj", "acent", "_", "range", "(", "std", "::", "begin", "(", "bl", "a", "),", "Ġstd", "::", "end", "(", "bl", "a", ")", "Ċ", "ĉ", "ĉ", ",", "Ġ[", "](", "std", "::", "pair", "<", "int", ",", "Ġchar", ">", "Ġconst", "&", "Ġe", ")", "Ġ{", "Ġreturn", "Ġe", ".", "second", ";", "Ġ}", "Ċ", "ĉ", "ĉ", ",", "Ġ[", "](", "auto", "Ġconst", "&", "Ġstart", ",", "Ġauto", "Ġconst", "&", "Ġend", ",", "Ġauto", "Ġconst", "&", "Ġv", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "W", "ert", ":", "Ġ\"", "Ġ<<", "Ġv", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġstd", "::", "distance", "(", "start", ",", "Ġend", ")", "Ġ<<", "Ġ\"", "ĠElement", "e", ".", "\\", "n", "\";", "Ċ", "ĉ", "ĉ", "});", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "n", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ġ{", "Ċ", "ĉ", "test", "_", "for", "_", "each", "_", "adj", "acent", "_", "range", "();", "Ċ", "}"], "dataflow_graph": [["bla", 4, "comesFrom", ["bla"], [1]], ["bla", 6, "comesFrom", ["bla"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::849", "code": "/*\n * IO.cpp\n *\n *  Created on: Nov 27, 2014\n *      Author: asseylum\n */\n\n#include \"../ServerClasses/Utils.h\"\n\nusing namespace std;\n\nconst string Utils::currentDateTime() {\n\t    time_t     now = time(0);\n\t    struct tm  tstruct;\n\t    char       buf[80];\n\t    tstruct = *localtime(&now);\n\t    strftime(buf, sizeof(buf), \"[%Y-%m-%d %X]\", &tstruct);\n\n\t    return buf;\n}\n\nconst string Utils::dateTime(const time_t time) {\n\tchar buf[80];\n\tstrftime(buf, sizeof(buf), \"[%Y-%m-%d %X]\", localtime(&time));\n\n\treturn buf;\n}\n\nvoid Utils::writeServerLog(string message) {\n\tlogFileMutex.lock();\n\tcout << Utils::currentDateTime() << \" \" << message << endl;\n\n\tofstream outfile;\n\toutfile.open(\"log.txt\", ios::app);\n\toutfile << Utils::currentDateTime() << \" \" << message << endl;\n\toutfile.close();\n\tlogFileMutex.unlock();\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠIO", ".", "cpp", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠCreated", "Ġon", ":", "ĠNov", "Ġ27", ",", "Ġ2014", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠAuthor", ":", "Ġas", "se", "ylum", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "Server", "Class", "es", "/", "Ut", "ils", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "const", "Ġstring", "ĠUt", "ils", "::", "current", "Date", "Time", "()", "Ġ{", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġtime", "_", "t", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnow", "Ġ=", "Ġtime", "(", "0", ");", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġstruct", "Ġt", "m", "Ġ", "Ġt", "struct", ";", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbuf", "[", "80", "];", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġt", "struct", "Ġ=", "Ġ*", "local", "time", "(&", "now", ");", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġstr", "ftime", "(", "buf", ",", "Ġsizeof", "(", "buf", "),", "Ġ\"[", "%", "Y", "-", "%", "m", "-", "%", "d", "Ġ%", "X", "]", "\",", "Ġ&", "t", "struct", ");", "ĊĊ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġbuf", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstring", "ĠUt", "ils", "::", "date", "Time", "(", "const", "Ġtime", "_", "t", "Ġtime", ")", "Ġ{", "Ċ", "ĉ", "char", "Ġbuf", "[", "80", "];", "Ċ", "ĉ", "str", "ftime", "(", "buf", ",", "Ġsizeof", "(", "buf", "),", "Ġ\"[", "%", "Y", "-", "%", "m", "-", "%", "d", "Ġ%", "X", "]", "\",", "Ġlocal", "time", "(&", "time", "));", "ĊĊ", "ĉ", "return", "Ġbuf", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠUt", "ils", "::", "write", "Server", "Log", "(", "string", "Ġmessage", ")", "Ġ{", "Ċ", "ĉ", "log", "File", "Mut", "ex", ".", "lock", "();", "Ċ", "ĉ", "c", "out", "Ġ<<", "ĠUt", "ils", "::", "current", "Date", "Time", "()", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġmessage", "Ġ<<", "Ġend", "l", ";", "ĊĊ", "ĉ", "of", "stream", "Ġout", "file", ";", "Ċ", "ĉ", "out", "file", ".", "open", "(\"", "log", ".", "txt", "\",", "Ġi", "os", "::", "app", ");", "Ċ", "ĉ", "out", "file", "Ġ<<", "ĠUt", "ils", "::", "current", "Date", "Time", "()", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġmessage", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "out", "file", ".", "close", "();", "Ċ", "ĉ", "log", "File", "Mut", "ex", ".", "un", "lock", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["time", 21, "comesFrom", ["time"], [15]], ["now", 8, "comesFrom", ["now"], [2]], ["tstruct", 12, "comesFrom", ["tstruct"], [6]], ["message", 29, "comesFrom", ["message"], [24]], ["message", 37, "comesFrom", ["message"], [24]], ["outfile", 32, "comesFrom", ["outfile"], [31]], ["outfile", 35, "comesFrom", ["outfile"], [31]], ["outfile", 39, "comesFrom", ["outfile"], [31]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::850", "code": "/*\n * Copyright (c) 2015 Samsung Electronics Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n// CLASS HEADER\n#include <dali/public-api/events/touch-point.h>\n\nnamespace Dali\n{\n\nTouchPoint::TouchPoint(int id, State state, float screenX, float screenY)\n: deviceId(id),\n  state(state),\n  local(screenX, screenY),\n  screen(screenX, screenY)\n{\n}\n\nTouchPoint::TouchPoint(int id, State state, float screenX, float screenY, float localX, float localY)\n: deviceId(id),\n  state(state),\n  local(localX, localY),\n  screen(screenX, screenY)\n{\n}\n\nTouchPoint::~TouchPoint()\n{\n}\n\n} // namespace Dali\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "ĠSamsung", "ĠElectronics", "ĠCo", ".,", "ĠLtd", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "Ġ*", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "Ġ*", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "Ġ*", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "Ġ*", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "Ġ*", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "//", "ĠCLASS", "ĠHEAD", "ER", "Ċ", "#", "include", "Ġ<", "d", "ali", "/", "public", "-", "api", "/", "events", "/", "touch", "-", "point", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "ĠD", "ali", "Ċ", "{", "Ċ", "Ċ", "Touch", "Point", "::", "Touch", "Point", "(", "int", "Ġid", ",", "ĠState", "Ġstate", ",", "Ġfloat", "Ġscreen", "X", ",", "Ġfloat", "Ġscreen", "Y", ")", "Ċ", ":", "Ġdevice", "Id", "(", "id", "),", "Ċ", "Ġ", "Ġstate", "(", "state", "),", "Ċ", "Ġ", "Ġlocal", "(", "screen", "X", ",", "Ġscreen", "Y", "),", "Ċ", "Ġ", "Ġscreen", "(", "screen", "X", ",", "Ġscreen", "Y", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Touch", "Point", "::", "Touch", "Point", "(", "int", "Ġid", ",", "ĠState", "Ġstate", ",", "Ġfloat", "Ġscreen", "X", ",", "Ġfloat", "Ġscreen", "Y", ",", "Ġfloat", "Ġlocal", "X", ",", "Ġfloat", "Ġlocal", "Y", ")", "Ċ", ":", "Ġdevice", "Id", "(", "id", "),", "Ċ", "Ġ", "Ġstate", "(", "state", "),", "Ċ", "Ġ", "Ġlocal", "(", "local", "X", ",", "Ġlocal", "Y", "),", "Ċ", "Ġ", "Ġscreen", "(", "screen", "X", ",", "Ġscreen", "Y", ")", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Touch", "Point", "::", "~", "Touch", "Point", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠD", "ali", "Ċ"], "dataflow_graph": [["id", 6, "comesFrom", ["id"], [1]], ["id", 23, "comesFrom", ["id"], [16]], ["state", 7, "comesFrom", ["state"], [2]], ["state", 8, "comesFrom", ["state"], [2]], ["state", 24, "comesFrom", ["state"], [17]], ["state", 25, "comesFrom", ["state"], [17]], ["screenX", 10, "comesFrom", ["screenX"], [3]], ["screenX", 13, "comesFrom", ["screenX"], [3]], ["screenX", 30, "comesFrom", ["screenX"], [18]], ["screenY", 11, "comesFrom", ["screenY"], [4]], ["screenY", 14, "comesFrom", ["screenY"], [4]], ["screenY", 31, "comesFrom", ["screenY"], [19]], ["localX", 27, "comesFrom", ["localX"], [20]], ["localY", 28, "comesFrom", ["localY"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::851", "code": "#include <bits/stdc++.h>\n\ntemplate<typename T> T gcd(T a, T b) {\n    if(!b) return a;\n    return gcd(b, a % b);\n}\ntemplate<typename T> T lcm(T a, T b) {\n    return a * b / gcd(a, b);\n}\n\ntemplate<typename T> void chmin(T& a, T b) { a = (a > b) ? b : a; }\ntemplate<typename T> void chmax(T& a, T b) { a = (a < b) ? b : a; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef unsigned uint;\n\nchar buff[110];\n\nint main(void) {\n\tfor (int i = 1; i <= 40; i++) {\n\t\tbool ok = false;\n\t\tint l = 0, r = 0;\n\t\tfor (int j = 1; j <= 1000; j++) {\n\t\t\tfor (int k = 0; k <= j; k++) {\n\t\t\t\tif (i == j * j - k * k) {\n\t\t\t\t\tr = j;\n\t\t\t\t\tl = k;\n\t\t\t\t\tok = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ok) {\n\t\t\tcout << i << \" - \" << r << \" \" << l << \"\\n\";\n\t\t}\n\n\t\t\n\t}\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "ĠT", "Ġg", "cd", "(", "T", "Ġa", ",", "ĠT", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "b", ")", "Ġreturn", "Ġa", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġg", "cd", "(", "b", ",", "Ġa", "Ġ%", "Ġb", ");", "Ċ", "}", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "ĠT", "Ġl", "cm", "(", "T", "Ġa", ",", "ĠT", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", "Ġ*", "Ġb", "Ġ/", "Ġg", "cd", "(", "a", ",", "Ġb", ");", "Ċ", "}", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ġvoid", "Ġch", "min", "(", "T", "&", "Ġa", ",", "ĠT", "Ġb", ")", "Ġ{", "Ġa", "Ġ=", "Ġ(", "a", "Ġ>", "Ġb", ")", "Ġ?", "Ġb", "Ġ:", "Ġa", ";", "Ġ}", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ġvoid", "Ġch", "max", "(", "T", "&", "Ġa", ",", "ĠT", "Ġb", ")", "Ġ{", "Ġa", "Ġ=", "Ġ(", "a", "Ġ<", "Ġb", ")", "Ġ?", "Ġb", "Ġ:", "Ġa", ";", "Ġ}", "Ċ", "int", "Ġin", "()", "Ġ{", "Ġint", "Ġx", ";", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "x", ");", "Ġreturn", "Ġx", ";", "Ġ}", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "ĠInt", ";", "Ċ", "ty", "ped", "ef", "Ġunsigned", "Ġuint", ";", "Ċ", "Ċ", "char", "Ġbuff", "[", "110", "];", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ġ{", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<=", "Ġ40", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "bool", "Ġok", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "int", "Ġl", "Ġ=", "Ġ0", ",", "Ġr", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ1", ";", "Ġj", "Ġ<=", "Ġ1000", ";", "Ġj", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġk", "Ġ=", "Ġ0", ";", "Ġk", "Ġ<=", "Ġj", ";", "Ġk", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "i", "Ġ==", "Ġj", "Ġ*", "Ġj", "Ġ-", "Ġk", "Ġ*", "Ġk", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "r", "Ġ=", "Ġj", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "l", "Ġ=", "Ġk", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ok", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "ok", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġi", "Ġ<<", "Ġ\"", "Ġ-", "Ġ\"", "Ġ<<", "Ġr", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġl", "Ġ<<", "Ġ\"\\", "n", "\";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "Ċ", "ĉ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["b", 3, "comesFrom", ["b"], [2]], ["b", 6, "comesFrom", ["b"], [2]], ["b", 8, "comesFrom", ["b"], [2]], ["b", 13, "comesFrom", ["b"], [11]], ["b", 16, "comesFrom", ["b"], [11]], ["b", 22, "comesFrom", ["b"], [19]], ["b", 23, "comesFrom", ["b"], [19]], ["b", 30, "comesFrom", ["b"], [27]], ["b", 31, "comesFrom", ["b"], [27]], ["a", 4, "comesFrom", ["a"], [1]], ["a", 7, "comesFrom", ["a"], [1]], ["a", 12, "comesFrom", ["a"], [10]], ["a", 15, "comesFrom", ["a"], [10]], ["a", 18, "comesFrom", ["a"], [10]], ["a", 21, "comesFrom", ["a"], [20]], ["a", 24, "comesFrom", ["a"], [20]], ["a", 26, "comesFrom", ["a"], [20]], ["a", 29, "comesFrom", ["a"], [28]], ["a", 32, "comesFrom", ["a"], [28]], ["x", 36, "comesFrom", ["x"], [34]], ["x", 37, "comesFrom", ["x"], [34]], ["i", 42, "comesFrom", ["i"], [41]], ["i", 43, "comesFrom", ["i"], [41]], ["i", 54, "comesFrom", ["i"], [41]], ["i", 66, "comesFrom", ["i"], [41]], ["j", 48, "comesFrom", ["j"], [47]], ["j", 49, "comesFrom", ["j"], [47]], ["j", 52, "comesFrom", ["j"], [47]], ["j", 55, "comesFrom", ["j"], [47]], ["j", 56, "comesFrom", ["j"], [47]], ["j", 60, "comesFrom", ["j"], [47]], ["k", 51, "comesFrom", ["k"], [50]], ["k", 53, "comesFrom", ["k"], [50]], ["k", 57, "comesFrom", ["k"], [50]], ["k", 58, "comesFrom", ["k"], [50]], ["k", 62, "comesFrom", ["k"], [50]], ["ok", 64, "comesFrom", ["ok"], [63]], ["r", 67, "comesFrom", ["r"], [59]], ["l", 68, "comesFrom", ["l"], [61]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::852", "code": "#include <stdio.h>\n#include <vector>\nusing namespace std;\n\nint N, m, maxSum;\nint CD[25];\nvector<int> ans, tmp;\n\nvoid findTrack(int id, int sum) {\n  if (sum > maxSum) {\n    maxSum = sum;\n    ans = tmp;\n  }\n\n  for (int i = id; i < m; i++) {\n    if (sum + CD[i] <= N) {\n      tmp.push_back(CD[i]);\n      findTrack(i+1, sum+CD[i]);\n      tmp.pop_back();\n    }\n  }\n  return ;\n}\n\nint main(void)\n{\n\n  while (EOF != scanf(\"%d\", &N)) {\n    scanf(\"%d\", &m);\n\n    for (int i = 0; i < m; i++)\n      scanf(\"%d\", &CD[i]);\n\n    maxSum = 0;\n    tmp.clear();\n    ans.clear();\n\n    findTrack(0, 0); // findTrack(id, sum)\n\n    vector<int>::iterator it;\n    for (it = ans.begin(); it != ans.end(); it++)\n      printf(\"%d \", *it);\n    printf(\"sum:%d\\n\", maxSum);\n  }\n\n  return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "ĠN", ",", "Ġm", ",", "Ġmax", "Sum", ";", "Ċ", "int", "ĠCD", "[", "25", "];", "Ċ", "vector", "<", "int", ">", "Ġans", ",", "Ġtmp", ";", "Ċ", "Ċ", "void", "Ġfind", "Track", "(", "int", "Ġid", ",", "Ġint", "Ġsum", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "sum", "Ġ>", "Ġmax", "Sum", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmax", "Sum", "Ġ=", "Ġsum", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ=", "Ġtmp", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġid", ";", "Ġi", "Ġ<", "Ġm", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "sum", "Ġ+", "ĠCD", "[", "i", "]", "Ġ<=", "ĠN", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtmp", ".", "push", "_", "back", "(", "CD", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfind", "Track", "(", "i", "+", "1", ",", "Ġsum", "+", "CD", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtmp", ".", "pop", "_", "back", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ;", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ċ", "{", "ĊĊ", "Ġ", "Ġwhile", "Ġ(", "EO", "F", "Ġ!=", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "N", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "m", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġm", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "CD", "[", "i", "]);", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġmax", "Sum", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtmp", ".", "clear", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġans", ".", "clear", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfind", "Track", "(", "0", ",", "Ġ0", ");", "Ġ//", "Ġfind", "Track", "(", "id", ",", "Ġsum", ")", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "::", "iterator", "Ġit", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "it", "Ġ=", "Ġans", ".", "begin", "();", "Ġit", "Ġ!=", "Ġans", ".", "end", "();", "Ġit", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "Ġ\",", "Ġ*", "it", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "sum", ":", "%", "d", "\\", "n", "\",", "Ġmax", "Sum", ");", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["sum", 10, "comesFrom", ["sum"], [9]], ["sum", 13, "comesFrom", ["sum"], [9]], ["sum", 21, "comesFrom", ["sum"], [9]], ["sum", 31, "comesFrom", ["sum"], [9]], ["maxSum", 11, "comesFrom", ["maxSum"], [3]], ["maxSum", 66, "comesFrom", ["maxSum"], [49]], ["tmp", 15, "comesFrom", ["tmp"], [6]], ["tmp", 25, "comesFrom", ["tmp"], [6]], ["tmp", 34, "comesFrom", ["tmp"], [6]], ["tmp", 50, "comesFrom", ["tmp"], [6]], ["i", 18, "comesFrom", ["i"], [16]], ["i", 20, "comesFrom", ["i"], [16]], ["i", 23, "comesFrom", ["i"], [16]], ["i", 28, "comesFrom", ["i"], [16]], ["i", 30, "comesFrom", ["i"], [16]], ["i", 33, "comesFrom", ["i"], [16]], ["i", 43, "comesFrom", ["i"], [42]], ["i", 45, "comesFrom", ["i"], [42]], ["i", 48, "comesFrom", ["i"], [42]], ["m", 19, "comesFrom", ["m"], [2]], ["m", 41, "comesFrom", ["m"], [2]], ["m", 44, "comesFrom", ["m"], [2]], ["N", 24, "comesFrom", ["N"], [1]], ["N", 39, "comesFrom", ["N"], [1]], ["ans", 52, "comesFrom", ["ans"], [14]], ["ans", 57, "comesFrom", ["ans"], [14]], ["ans", 60, "comesFrom", ["ans"], [14]], ["it", 59, "comesFrom", ["it"], [56]], ["it", 62, "comesFrom", ["it"], [56]], ["it", 64, "comesFrom", ["it"], [56]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::853", "code": "#include \"gtest/gtest.h\"\n\n#include <memory>\n\n#include \"ZBE/core/tools/containers/Ticket.h\"\n\n#include \"ZBE/events/handlers/time/TicketEraser.h\"\n\n#include \"testutils/DummyTicket.h\"\n\nnamespace TicketEraserTest {\n\nTEST(TicketEraser, run) {\n  std::shared_ptr<zbe::Ticket> ticket = std::make_shared<zbetest::DummyTicket>();\n\n  zbe::TicketEraser te(ticket);\n\n  EXPECT_TRUE(ticket->isACTIVE()) << \"Initially ticket is active.\";\n\n  te.run(1);\n\n  EXPECT_FALSE(ticket->isACTIVE()) << \"Ticket is no longer active.\";\n  EXPECT_TRUE(ticket->isERASED()) << \"Ticket is ERASED.\";\n}\n\n}  // namespace TicketEraserTest\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "g", "test", "/", "g", "test", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Z", "BE", "/", "core", "/", "tools", "/", "cont", "ainers", "/", "T", "icket", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Z", "BE", "/", "events", "/", "hand", "lers", "/", "time", "/", "T", "icket", "Er", "aser", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "test", "utils", "/", "D", "ummy", "T", "icket", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠTicket", "Er", "aser", "Test", "Ġ{", "Ċ", "Ċ", "T", "EST", "(", "T", "icket", "Er", "aser", ",", "Ġrun", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "shared", "_", "ptr", "<", "z", "be", "::", "T", "icket", ">", "Ġticket", "Ġ=", "Ġstd", "::", "make", "_", "shared", "<", "z", "bet", "est", "::", "D", "ummy", "T", "icket", ">", "();", "ĊĊ", "Ġ", "Ġz", "be", "::", "T", "icket", "Er", "aser", "Ġte", "(", "ticket", ");", "ĊĊ", "Ġ", "ĠEXP", "ECT", "_", "TR", "UE", "(", "ticket", "->", "is", "ACT", "IVE", "())", "Ġ<<", "Ġ\"", "Initially", "Ġticket", "Ġis", "Ġactive", ".\"", ";", "ĊĊ", "Ġ", "Ġte", ".", "run", "(", "1", ");", "ĊĊ", "Ġ", "ĠEXP", "ECT", "_", "F", "ALSE", "(", "ticket", "->", "is", "ACT", "IVE", "())", "Ġ<<", "Ġ\"", "T", "icket", "Ġis", "Ġno", "Ġlonger", "Ġactive", ".\"", ";", "Ċ", "Ġ", "ĠEXP", "ECT", "_", "TR", "UE", "(", "ticket", "->", "is", "ER", "ASED", "())", "Ġ<<", "Ġ\"", "T", "icket", "Ġis", "ĠER", "ASED", ".\"", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "ĠTicket", "Er", "aser", "Test", "Ċ"], "dataflow_graph": [["ticket", 5, "comesFrom", ["ticket"], [1]], ["ticket", 10, "comesFrom", ["ticket"], [1]], ["ticket", 13, "comesFrom", ["ticket"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::854", "code": "#include \"product_manager.h\"\n\n#include <stdexcept>\n#include \"datetime.h\"\n\nnamespace te\n{\n\nvoid product_manager::load_from_file(const std::string & xml_filename)\n{\n    TiXmlDocument doc(xml_filename.c_str());\n    if(!doc.LoadFile())\n        throw std::runtime_error(\"Error while loading file \" + xml_filename + \" : \" + doc.ErrorDesc());\n\n    INFO(\"product_manager\", \"laoding file \" + xml_filename);\n\n    TiXmlElement* root = doc.FirstChildElement( \"te\" );\n    if(!root) throw std::runtime_error(\"No 'te' root node in file \" + xml_filename);\n\n    TiXmlElement* products = root->FirstChildElement( \"products\" );\n    if(!products) throw std::runtime_error(\"No 'products' node in file \" + xml_filename);\n\n    TiXmlElement* productXml = products->FirstChildElement( \"product\" );\n    if(!productXml) return;\n    do\n    {\n        m_products.push_back(new product(productXml));\n    }\n    while( (productXml = productXml->NextSiblingElement(\"product\")) != NULL);\n\n}\nconst product * product_manager::get_first_of( predicate< const product*> P)\n{\n    for(const product * p : m_products)\n        if(P(p))\n            return p;\n    return std::nullptr;\n}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "product", "_", "manager", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "#", "include", "Ġ\"", "dat", "etime", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġte", "Ċ", "{", "Ċ", "Ċ", "void", "Ġproduct", "_", "manager", "::", "load", "_", "from", "_", "file", "(", "const", "Ġstd", "::", "string", "Ġ&", "Ġxml", "_", "filename", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTi", "X", "ml", "Document", "Ġdoc", "(", "xml", "_", "filename", ".", "c", "_", "str", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "doc", ".", "Load", "File", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "Error", "Ġwhile", "Ġloading", "Ġfile", "Ġ\"", "Ġ+", "Ġxml", "_", "filename", "Ġ+", "Ġ\"", "Ġ:", "Ġ\"", "Ġ+", "Ġdoc", ".", "Error", "Desc", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠINFO", "(\"", "product", "_", "manager", "\",", "Ġ\"", "la", "oding", "Ġfile", "Ġ\"", "Ġ+", "Ġxml", "_", "filename", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠTi", "X", "ml", "Element", "*", "Ġroot", "Ġ=", "Ġdoc", ".", "First", "Child", "Element", "(", "Ġ\"", "te", "\"", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "root", ")", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "No", "Ġ'", "te", "'", "Ġroot", "Ġnode", "Ġin", "Ġfile", "Ġ\"", "Ġ+", "Ġxml", "_", "filename", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠTi", "X", "ml", "Element", "*", "Ġproducts", "Ġ=", "Ġroot", "->", "First", "Child", "Element", "(", "Ġ\"", "products", "\"", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "products", ")", "Ġthrow", "Ġstd", "::", "runtime", "_", "error", "(\"", "No", "Ġ'", "products", "'", "Ġnode", "Ġin", "Ġfile", "Ġ\"", "Ġ+", "Ġxml", "_", "filename", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠTi", "X", "ml", "Element", "*", "Ġproduct", "X", "ml", "Ġ=", "Ġproducts", "->", "First", "Child", "Element", "(", "Ġ\"", "product", "\"", "Ġ);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "product", "X", "ml", ")", "Ġreturn", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdo", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "products", ".", "push", "_", "back", "(", "new", "Ġproduct", "(", "product", "X", "ml", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "Ġ(", "product", "X", "ml", "Ġ=", "Ġproduct", "X", "ml", "->", "Next", "S", "ibling", "Element", "(\"", "product", "\"))", "Ġ!=", "ĠNULL", ");", "Ċ", "Ċ", "}", "Ċ", "const", "Ġproduct", "Ġ*", "Ġproduct", "_", "manager", "::", "get", "_", "first", "_", "of", "(", "Ġpredicate", "<", "Ġconst", "Ġproduct", "*", ">", "ĠP", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "const", "Ġproduct", "Ġ*", "Ġp", "Ġ:", "Ġm", "_", "products", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "P", "(", "p", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstd", "::", "null", "ptr", ";", "Ċ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["doc", 5, "comesFrom", ["doc"], [2]], ["doc", 9, "comesFrom", ["doc"], [2]], ["doc", 14, "comesFrom", ["doc"], [2]], ["productXml", 33, "comesFrom", ["productXml"], [32]], ["P", 39, "comesFrom", ["P"], [36]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::855", "code": "/**\n * @author Daniel Escoz Solana\n */\n#ifndef __ELLIPSE_OBSTACLE__H__\n#define __ELLIPSE_OBSTACLE__H__\n\n#include \"skel/skel.h\"\n#include \"Obstacle.hpp\"\n\nclass EllipseObstacle : public Obstacle {\n  private:\n    Vect _center;\n    Vect::Component _rx, _ry;\n    Vect::Component _ang;\n  \n  public:\n    EllipseObstacle (Vect center, Vect::Component rx, Vect::Component ry, Vect::Component ang)\n      : _center(center), _rx(rx), _ry(ry), _ang(ang)\n    {\n      auto mr = std::max(rx, ry);\n\n      bb_clear();\n      bb_add_point(Vect(center.x() - mr, center.y() - mr, 1.f));\n      bb_add_point(Vect(center.x() + mr, center.y() + mr, 1.f));\n    }\n\n    void draw ();\n    bool performCollide (\n      Vect pos, Vect::Component rad, Vect spd, float delta,\n      Vect& outPos, Vect& outSpd, float& outDelta, Vect& norm);\n};\n\n#endif", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "Ġ@", "author", "ĠDaniel", "ĠEs", "co", "z", "ĠSol", "ana", "Ċ", "Ġ*/", "Ċ", "#", "if", "nd", "ef", "Ġ__", "ELL", "IPS", "E", "_", "OB", "ST", "AC", "LE", "__", "H", "__", "Ċ", "#", "define", "Ġ__", "ELL", "IPS", "E", "_", "OB", "ST", "AC", "LE", "__", "H", "__", "Ċ", "Ċ", "#", "include", "Ġ\"", "s", "kel", "/", "s", "kel", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Ob", "st", "acle", ".", "h", "pp", "\"", "Ċ", "Ċ", "class", "ĠEll", "ip", "se", "Ob", "st", "acle", "Ġ:", "Ġpublic", "ĠObst", "acle", "Ġ{", "Ċ", "Ġ", "Ġprivate", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠV", "ect", "Ġ_", "center", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠV", "ect", "::", "Component", "Ġ_", "rx", ",", "Ġ_", "ry", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠV", "ect", "::", "Component", "Ġ_", "ang", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEll", "ip", "se", "Ob", "st", "acle", "Ġ(", "V", "ect", "Ġcenter", ",", "ĠV", "ect", "::", "Component", "Ġr", "x", ",", "ĠV", "ect", "::", "Component", "Ġr", "y", ",", "ĠV", "ect", "::", "Component", "Ġang", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġ_", "center", "(", "center", "),", "Ġ_", "rx", "(", "rx", "),", "Ġ_", "ry", "(", "ry", "),", "Ġ_", "ang", "(", "ang", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġm", "r", "Ġ=", "Ġstd", "::", "max", "(", "rx", ",", "Ġr", "y", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġb", "b", "_", "clear", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġb", "b", "_", "add", "_", "point", "(", "V", "ect", "(", "center", ".", "x", "()", "Ġ-", "Ġm", "r", ",", "Ġcenter", ".", "y", "()", "Ġ-", "Ġm", "r", ",", "Ġ1", ".", "f", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġb", "b", "_", "add", "_", "point", "(", "V", "ect", "(", "center", ".", "x", "()", "Ġ+", "Ġm", "r", ",", "Ġcenter", ".", "y", "()", "Ġ+", "Ġm", "r", ",", "Ġ1", ".", "f", "));", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġdraw", "Ġ();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbool", "Ġperform", "Coll", "ide", "Ġ(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠV", "ect", "Ġpos", ",", "ĠV", "ect", "::", "Component", "Ġrad", ",", "ĠV", "ect", "Ġsp", "d", ",", "Ġfloat", "Ġdelta", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠV", "ect", "&", "Ġout", "Pos", ",", "ĠV", "ect", "&", "Ġout", "Sp", "d", ",", "Ġfloat", "&", "Ġout", "Delta", ",", "ĠV", "ect", "&", "Ġnorm", ");", "Ċ", "};", "Ċ", "Ċ", "#", "endif"], "dataflow_graph": [["center", 12, "comesFrom", ["center"], [7]], ["center", 26, "comesFrom", ["center"], [7]], ["center", 29, "comesFrom", ["center"], [7]], ["center", 34, "comesFrom", ["center"], [7]], ["center", 37, "comesFrom", ["center"], [7]], ["rx", 14, "comesFrom", ["rx"], [8]], ["rx", 21, "comesFrom", ["rx"], [8]], ["ry", 16, "comesFrom", ["ry"], [9]], ["ry", 22, "comesFrom", ["ry"], [9]], ["ang", 18, "comesFrom", ["ang"], [10]], ["mr", 28, "comesFrom", ["mr"], [19]], ["mr", 31, "comesFrom", ["mr"], [19]], ["mr", 36, "comesFrom", ["mr"], [19]], ["mr", 39, "comesFrom", ["mr"], [19]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::856", "code": "int threeSumClosest(vector<int>& nums, int target) {\n    sort(nums.begin(), nums.end());\n    int res = nums[0] + nums[1] + nums[2];\n    for (unsigned int i=0; i<nums.size(); i++) {\n        int l = i+1, r= nums.size()-1;\n        while (l < r) {\n            int s = nums[i]+nums[l]+nums[r];\n            if (abs(res-target) > abs(s-target))\n                res = s;\n            if (s > target) \n                r--;\n            else if (s < target)\n                l++;\n            else \n                return s;\n        }\n    }\n    return res;\n}\n", "code_tokens": ["Ġint", "Ġthree", "Sum", "Cl", "os", "est", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ",", "Ġint", "Ġtarget", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsort", "(", "n", "ums", ".", "begin", "(),", "Ġnum", "s", ".", "end", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġres", "Ġ=", "Ġnum", "s", "[", "0", "]", "Ġ+", "Ġnum", "s", "[", "1", "]", "Ġ+", "Ġnum", "s", "[", "2", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġint", "Ġi", "=", "0", ";", "Ġi", "<", "n", "ums", ".", "size", "();", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġl", "Ġ=", "Ġi", "+", "1", ",", "Ġr", "=", "Ġnum", "s", ".", "size", "()", "-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "l", "Ġ<", "Ġr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġs", "Ġ=", "Ġnum", "s", "[", "i", "]+", "n", "ums", "[", "l", "]+", "n", "ums", "[", "r", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "abs", "(", "res", "-", "target", ")", "Ġ>", "Ġabs", "(", "s", "-", "target", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġres", "Ġ=", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "s", "Ġ>", "Ġtarget", ")", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġr", "--", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "s", "Ġ<", "Ġtarget", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġl", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġs", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġres", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 13, "comesFrom", ["i"], [12]], ["i", 16, "comesFrom", ["i"], [12]], ["i", 18, "comesFrom", ["i"], [12]], ["i", 26, "comesFrom", ["i"], [12]], ["l", 22, "comesFrom", ["l"], [17]], ["l", 28, "comesFrom", ["l"], [17]], ["l", 44, "comesFrom", ["l"], [17]], ["r", 23, "comesFrom", ["r"], [19]], ["r", 30, "comesFrom", ["r"], [19]], ["r", 41, "comesFrom", ["r"], [19]], ["res", 32, "comesFrom", ["res"], [8]], ["res", 46, "comesFrom", ["res"], [37]], ["target", 33, "comesFrom", ["target"], [2]], ["target", 36, "comesFrom", ["target"], [2]], ["target", 40, "comesFrom", ["target"], [2]], ["target", 43, "comesFrom", ["target"], [2]], ["s", 35, "comesFrom", ["s"], [24]], ["s", 38, "comesFrom", ["s"], [24]], ["s", 39, "comesFrom", ["s"], [24]], ["s", 42, "comesFrom", ["s"], [24]], ["s", 45, "comesFrom", ["s"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::857", "code": "#include <CtrlLib/CtrlLib.h>\r\n\r\ntemplate <class T, class S>\r\nstruct ATesting : public Moveable<S> {\r\n\tvoid Assign(const ATesting& s);\r\n\tvoid Assign(const T *s, int len);\r\n\tvoid DeepAssign(const ATesting& s);\r\n};\r\n\r\nclass Testing : public ATesting<char, Testing> {\r\n\ttypedef ATesting<char, Testing> B;\r\n\r\n\tTesting(Data *data)                         { ptr = CreateEmpty(data); }\r\n\tTesting(int, char *p) : B(0, p)             {}\r\n\r\n\tTesting Mid(int pos, int length) const      { return Testing(0, B::Mid(pos, length)); }\r\n};\r\n\r\nGUI_APP_MAIN\r\n{\r\n\tMyHello().Run();\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Ctrl", "Lib", "/", "Ctrl", "Lib", ".", "h", ">", "č", "Ċ", "č", "Ċ", "template", "Ġ<", "class", "ĠT", ",", "Ġclass", "ĠS", ">", "č", "Ċ", "struct", "ĠAT", "esting", "Ġ:", "Ġpublic", "ĠMove", "able", "<", "S", ">", "Ġ{", "č", "Ċ", "ĉ", "void", "ĠAss", "ign", "(", "const", "ĠAT", "esting", "&", "Ġs", ");", "č", "Ċ", "ĉ", "void", "ĠAss", "ign", "(", "const", "ĠT", "Ġ*", "s", ",", "Ġint", "Ġlen", ");", "č", "Ċ", "ĉ", "void", "ĠDeep", "Ass", "ign", "(", "const", "ĠAT", "esting", "&", "Ġs", ");", "č", "Ċ", "};", "č", "Ċ", "č", "Ċ", "class", "ĠTesting", "Ġ:", "Ġpublic", "ĠAT", "esting", "<", "char", ",", "ĠTesting", ">", "Ġ{", "č", "Ċ", "ĉ", "ty", "ped", "ef", "ĠAT", "esting", "<", "char", ",", "ĠTesting", ">", "ĠB", ";", "č", "Ċ", "č", "Ċ", "ĉ", "Testing", "(", "Data", "Ġ*", "data", ")", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġptr", "Ġ=", "ĠCreate", "Empty", "(", "data", ");", "Ġ}", "č", "Ċ", "ĉ", "Testing", "(", "int", ",", "Ġchar", "Ġ*", "p", ")", "Ġ:", "ĠB", "(", "0", ",", "Ġp", ")", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{}", "č", "Ċ", "č", "Ċ", "ĉ", "Testing", "ĠMid", "(", "int", "Ġpos", ",", "Ġint", "Ġlength", ")", "Ġconst", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġreturn", "ĠTesting", "(", "0", ",", "ĠB", "::", "Mid", "(", "pos", ",", "Ġlength", "));", "Ġ}", "č", "Ċ", "};", "č", "Ċ", "č", "Ċ", "GUI", "_", "APP", "_", "MA", "IN", "č", "Ċ", "{", "č", "Ċ", "ĉ", "My", "Hello", "().", "Run", "();", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["pos", 21, "comesFrom", ["pos"], [17]], ["length", 22, "comesFrom", ["length"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::858", "code": "#include \"moveable.h\"\n\nMoveable::Moveable(float _x, float _y)\n{\n    Posx = _x;\n    Posy = _y;\n}\nvoid Moveable::addDisplacement (float _x, float _y)\n{\n    Posx += _x;\n    Posy += _y;\n}\n\nvoid Moveable::printPos()\n{\n    cout<<\"(\"<<Posx<<\",\"<<Posy<<\")\"<<endl;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "move", "able", ".", "h", "\"", "Ċ", "Ċ", "Move", "able", "::", "Move", "able", "(", "float", "Ġ_", "x", ",", "Ġfloat", "Ġ_", "y", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPos", "x", "Ġ=", "Ġ_", "x", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPos", "y", "Ġ=", "Ġ_", "y", ";", "Ċ", "}", "Ċ", "void", "ĠMove", "able", "::", "add", "Dis", "pl", "acement", "Ġ(", "float", "Ġ_", "x", ",", "Ġfloat", "Ġ_", "y", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPos", "x", "Ġ+=", "Ġ_", "x", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPos", "y", "Ġ+=", "Ġ_", "y", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMove", "able", "::", "print", "Pos", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "\"", "(\"", "<<", "Pos", "x", "<<", "\",\"", "<<", "Pos", "y", "<<", "\")", "\"", "<<", "end", "l", ";", "Ċ", "}"], "dataflow_graph": [["_x", 4, "comesFrom", ["_x"], [1]], ["_x", 11, "comesFrom", ["_x"], [8]], ["_y", 6, "comesFrom", ["_y"], [2]], ["_y", 13, "comesFrom", ["_y"], [9]], ["Posx", 16, "comesFrom", ["Posx"], [10]], ["Posy", 17, "comesFrom", ["Posy"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::859", "code": "// Tests when the projection itself becomes zero\n\n#include \"optizelle/optizelle.h\"\n#include \"optizelle/vspaces.h\"\n#include \"augsys.h\"\n#include \"spaces.h\"\n\nint main(int argc,char* argv[]){\n\n    // Generate an initial guess\n    auto x = std::vector <Real> { 0., 0.};\n    auto y = std::vector <Real> { 0. };\n\n    // Setup the test\n    auto setup = Unit <Real>::NSP(x,y);\n    setup.g.reset(new Unit <Real>::Constraint::Linear);\n    setup.dx.reset(new std::vector <Real> {0.5,0.5});\n\n    // Set the targets\n    setup.P_dx_star.reset(new std::vector <Real> {0.0,0.0});\n\n    // Set what tests we want\n    setup.check_sol = true;\n    setup.check_null = true;\n    setup.check_augsys = true;\n    setup.check_augsys_exit = true;\n\n    // Run the test\n    Unit <Real>::run_and_verify(setup);\n\n    // Declare success\n    return EXIT_SUCCESS;\n}\n", "code_tokens": ["Ġ//", "ĠTests", "Ġwhen", "Ġthe", "Ġprojection", "Ġitself", "Ġbecomes", "Ġzero", "Ċ", "Ċ", "#", "include", "Ġ\"", "opt", "iz", "elle", "/", "opt", "iz", "elle", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "opt", "iz", "elle", "/", "v", "sp", "aces", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "aug", "sys", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sp", "aces", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "char", "*", "Ġarg", "v", "[", "])", "{", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠGener", "ate", "Ġan", "Ġinitial", "Ġguess", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġx", "Ġ=", "Ġstd", "::", "vector", "Ġ<", "Real", ">", "Ġ{", "Ġ0", ".,", "Ġ0", ".", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġy", "Ġ=", "Ġstd", "::", "vector", "Ġ<", "Real", ">", "Ġ{", "Ġ0", ".", "Ġ};", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠSetup", "Ġthe", "Ġtest", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġsetup", "Ġ=", "ĠUnit", "Ġ<", "Real", ">", "::", "N", "SP", "(", "x", ",", "y", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "g", ".", "reset", "(", "new", "ĠUnit", "Ġ<", "Real", ">", "::", "Con", "str", "aint", "::", "Lin", "ear", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "dx", ".", "reset", "(", "new", "Ġstd", "::", "vector", "Ġ<", "Real", ">", "Ġ{", "0", ".", "5", ",", "0", ".", "5", "});", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠSet", "Ġthe", "Ġtargets", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "P", "_", "dx", "_", "star", ".", "reset", "(", "new", "Ġstd", "::", "vector", "Ġ<", "Real", ">", "Ġ{", "0", ".", "0", ",", "0", ".", "0", "});", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠSet", "Ġwhat", "Ġtests", "Ġwe", "Ġwant", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "check", "_", "sol", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "check", "_", "null", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "check", "_", "aug", "sys", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsetup", ".", "check", "_", "aug", "sys", "_", "exit", "Ġ=", "Ġtrue", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠRun", "Ġthe", "Ġtest", "Ċ", "Ġ", "Ġ", "Ġ", "ĠUnit", "Ġ<", "Real", ">", "::", "run", "_", "and", "_", "ver", "ify", "(", "setup", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠDecl", "are", "Ġsuccess", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 7, "comesFrom", ["x"], [3]], ["y", 8, "comesFrom", ["y"], [4]], ["setup", 9, "comesFrom", ["setup"], [5]], ["setup", 12, "comesFrom", ["setup"], [5]], ["setup", 15, "comesFrom", ["setup"], [5]], ["setup", 18, "comesFrom", ["setup"], [5]], ["setup", 20, "comesFrom", ["setup"], [5]], ["setup", 22, "comesFrom", ["setup"], [5]], ["setup", 24, "comesFrom", ["setup"], [5]], ["setup", 27, "comesFrom", ["setup"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::860", "code": "#include \"PlotCtrl.h\"\n\nLegendCtrl::LegendCtrl(Plot& p):Legend(p){\n\tIgnoreMouse();\n\tTransparent();\n}\n\nvoid LegendCtrl::Paint(Draw& w){\n\tLegend::SetSize(Ctrl::GetSize());\n\tif(hash!=Legend::GetHashValue()){\n\t\timg=GetLegend();\n\t\tif(img.IsEmpty()){\n\t\t\tRefresh();\n\t\t\tSync();\n\t\t\treturn;\n\t\t}else{\n\t\t\thash=Legend::GetHashValue();\n\t\t\tWhenSync();\n\t\t}\n\t}\n\tw.DrawImage(0,0,img);\n}\n\nSize LegendCtrl::GetSize()const{\n\treturn Ctrl::GetSize();\n}\nvoid LegendCtrl::SetSize(const Size& sz){\n\tRect r=GetRect();\n\tr.SetSize(sz);\n\tSetRect(r);\n\t//Legend::SetSize(sz);\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Plot", "Ctrl", ".", "h", "\"", "Ċ", "Ċ", "Legend", "Ctrl", "::", "Legend", "Ctrl", "(", "Plot", "&", "Ġp", "):", "Legend", "(", "p", "){", "Ċ", "ĉ", "Ign", "ore", "Mouse", "();", "Ċ", "ĉ", "Trans", "parent", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠLegend", "Ctrl", "::", "P", "aint", "(", "Draw", "&", "Ġw", "){", "Ċ", "ĉ", "Legend", "::", "Set", "Size", "(", "Ctrl", "::", "Get", "Size", "());", "Ċ", "ĉ", "if", "(", "hash", "!", "=", "Legend", "::", "Get", "Hash", "Value", "()", "){", "Ċ", "ĉ", "ĉ", "img", "=", "Get", "Legend", "();", "Ċ", "ĉ", "ĉ", "if", "(", "img", ".", "Is", "Empty", "()", "){", "Ċ", "ĉ", "ĉ", "ĉ", "Ref", "resh", "();", "Ċ", "ĉ", "ĉ", "ĉ", "Sync", "();", "Ċ", "ĉ", "ĉ", "ĉ", "return", ";", "Ċ", "ĉ", "ĉ", "}", "else", "{", "Ċ", "ĉ", "ĉ", "ĉ", "hash", "=", "Legend", "::", "Get", "Hash", "Value", "();", "Ċ", "ĉ", "ĉ", "ĉ", "When", "Sync", "();", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "w", ".", "Draw", "Image", "(", "0", ",", "0", ",", "img", ");", "Ċ", "}", "Ċ", "Ċ", "Size", "ĠLegend", "Ctrl", "::", "Get", "Size", "()", "const", "{", "Ċ", "ĉ", "return", "ĠCtrl", "::", "Get", "Size", "();", "Ċ", "}", "Ċ", "void", "ĠLegend", "Ctrl", "::", "Set", "Size", "(", "const", "ĠSize", "&", "Ġs", "z", "){", "Ċ", "ĉ", "Rect", "Ġr", "=", "Get", "Rect", "();", "Ċ", "ĉ", "r", ".", "Set", "Size", "(", "s", "z", ");", "Ċ", "ĉ", "Set", "Rect", "(", "r", ");", "Ċ", "ĉ", "//", "Legend", "::", "Set", "Size", "(", "s", "z", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["img", 14, "comesFrom", ["img"], [12]], ["img", 23, "comesFrom", ["img"], [12]], ["r", 30, "comesFrom", ["r"], [28]], ["r", 34, "comesFrom", ["r"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::861", "code": "#include \"Font.h\"\n\n#include \"io/FileLoader.h\"\n#include \"graphics/Window.h\"\n\n#include \"graphics/Drawer.h\"\n\n#include <memory>\n\n\n\nint Font::textSize() const\n{\n    return m_textSize;\n}\n\nFont::Font() :\n    iAsset(AS_FONT)\n{\n    \n}\n\n\nshared_ptr<Texture> Font::getTexture(std::string text, Color color, Uint32 lineWrap)\n{\n    SDL_Surface *surface = TTF_RenderUTF8_Blended_Wrapped\n            (m_font,text.c_str(),color.toSDLColor(),lineWrap);\n    SDL_Texture *tex = SDL_CreateTextureFromSurface\n            (Window::getActiveRenderer(),surface);\n    auto m_tex = shared_ptr<Texture>(new Texture(tex));\n    SDL_FreeSurface(surface);\n    return m_tex;\n}\n\n\n\nFont::~Font()\n{\n    TTF_CloseFont(m_font);\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Font", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "io", "/", "File", "Loader", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "g", "raphics", "/", "Window", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "g", "raphics", "/", "Draw", "er", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "memory", ">", "ĊĊ", "Ċ", "Ċ", "int", "ĠFont", "::", "text", "Size", "()", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġm", "_", "text", "Size", ";", "Ċ", "}", "Ċ", "Ċ", "Font", "::", "Font", "()", "Ġ:", "Ċ", "Ġ", "Ġ", "Ġ", "Ġi", "Asset", "(", "AS", "_", "F", "ONT", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "}", "ĊĊ", "Ċ", "shared", "_", "ptr", "<", "Texture", ">", "ĠFont", "::", "get", "Texture", "(", "std", "::", "string", "Ġtext", ",", "ĠColor", "Ġcolor", ",", "ĠU", "int", "32", "Ġline", "W", "rap", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Sur", "face", "Ġ*", "surface", "Ġ=", "ĠT", "TF", "_", "Render", "UTF", "8", "_", "Bl", "ended", "_", "Wra", "pped", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "m", "_", "font", ",", "text", ".", "c", "_", "str", "(),", "color", ".", "to", "SD", "L", "Color", "(),", "line", "W", "rap", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Texture", "Ġ*", "tex", "Ġ=", "ĠSDL", "_", "Create", "Texture", "From", "Sur", "face", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "Window", "::", "get", "Active", "R", "end", "erer", "(),", "surface", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġm", "_", "tex", "Ġ=", "Ġshared", "_", "ptr", "<", "Texture", ">(", "new", "ĠTexture", "(", "tex", "));", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSDL", "_", "Free", "Sur", "face", "(", "surface", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġm", "_", "tex", ";", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "Font", "::", "~", "Font", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠT", "TF", "_", "Close", "Font", "(", "m", "_", "font", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["text", 12, "comesFrom", ["text"], [6]], ["color", 14, "comesFrom", ["color"], [7]], ["lineWrap", 16, "comesFrom", ["lineWrap"], [8]], ["m_tex", 26, "comesFrom", ["m_tex"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::862", "code": "#include <string>\n#include <stdio.h>\n\nvoid * readMatrixData(std::string name, std::string component) {\n  std::string matricesBase = \"/home/maltanar/seyrek/matrices\";\n  std::string fileName = matricesBase + \"/\" + name + \"/\" + name + \"-\" + component + \".bin\";\n  FILE *f = fopen(fileName.c_str(), \"rb\");\n  if(!f) throw (std::string(\"Could not open file: \") + fileName).c_str();\n  fseek(f, 0, SEEK_END);\n  unsigned int fsize = ftell(f);\n  fseek(f, 0, SEEK_SET);\n\n  void * buf = new char[fsize];\n  unsigned int r = fread(buf, 1, fsize, f);\n\n  if(r != fsize) throw \"Read error\";\n\n  fclose(f);\n\n  return buf;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "void", "Ġ*", "Ġread", "Matrix", "Data", "(", "std", "::", "string", "Ġname", ",", "Ġstd", "::", "string", "Ġcomponent", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġmat", "rices", "Base", "Ġ=", "Ġ\"/", "home", "/", "m", "alt", "an", "ar", "/", "sey", "rek", "/", "mat", "rices", "\";", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġfile", "Name", "Ġ=", "Ġmat", "rices", "Base", "Ġ+", "Ġ\"/", "\"", "Ġ+", "Ġname", "Ġ+", "Ġ\"/", "\"", "Ġ+", "Ġname", "Ġ+", "Ġ\"", "-\"", "Ġ+", "Ġcomponent", "Ġ+", "Ġ\".", "bin", "\";", "Ċ", "Ġ", "ĠFILE", "Ġ*", "f", "Ġ=", "Ġf", "open", "(", "file", "Name", ".", "c", "_", "str", "(),", "Ġ\"", "rb", "\");", "Ċ", "Ġ", "Ġif", "(", "!", "f", ")", "Ġthrow", "Ġ(", "std", "::", "string", "(\"", "Could", "Ġnot", "Ġopen", "Ġfile", ":", "Ġ\"", ")", "Ġ+", "Ġfile", "Name", ").", "c", "_", "str", "();", "Ċ", "Ġ", "Ġf", "seek", "(", "f", ",", "Ġ0", ",", "ĠSEE", "K", "_", "END", ");", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġf", "size", "Ġ=", "Ġf", "tell", "(", "f", ");", "Ċ", "Ġ", "Ġf", "seek", "(", "f", ",", "Ġ0", ",", "ĠSEE", "K", "_", "SET", ");", "ĊĊ", "Ġ", "Ġvoid", "Ġ*", "Ġbuf", "Ġ=", "Ġnew", "Ġchar", "[", "f", "size", "];", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġr", "Ġ=", "Ġf", "read", "(", "buf", ",", "Ġ1", ",", "Ġf", "size", ",", "Ġf", ");", "ĊĊ", "Ġ", "Ġif", "(", "r", "Ġ!=", "Ġf", "size", ")", "Ġthrow", "Ġ\"", "Read", "Ġerror", "\";", "ĊĊ", "Ġ", "Ġf", "close", "(", "f", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġbuf", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["matricesBase", 5, "comesFrom", ["matricesBase"], [3]], ["name", 6, "comesFrom", ["name"], [1]], ["name", 7, "comesFrom", ["name"], [1]], ["component", 8, "comesFrom", ["component"], [2]], ["fileName", 11, "comesFrom", ["fileName"], [4]], ["fileName", 15, "comesFrom", ["fileName"], [4]], ["fsize", 27, "comesFrom", ["fsize"], [20]], ["fsize", 31, "comesFrom", ["fsize"], [20]], ["fsize", 34, "comesFrom", ["fsize"], [20]], ["r", 33, "comesFrom", ["r"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::863", "code": "// Copyright 2015 The Cobalt Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#include \"starboard/common/string.h\"\n\n#include \"starboard/common/log.h\"\n#include \"starboard/memory.h\"\n\nchar* SbStringDuplicate(const char* source) {\n  size_t length = strlen(source);\n  char* result = static_cast<char*>(SbMemoryAllocate(length + 1));\n  SB_DCHECK(length < kSbInt32Max);\n  int int_length = static_cast<int>(length + 1);\n  starboard::strlcpy(result, source, int_length);\n\n  return result;\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2015", "ĠThe", "ĠCob", "alt", "ĠAuthors", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "//", "Ċ", "//", "ĠLicensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "//", "Ġyou", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "//", "ĠYou", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "Ċ", "//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "//", "Ċ", "//", "ĠUnless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "//", "Ġdistributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "//", "ĠWITHOUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "//", "ĠSee", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "//", "Ġlimitations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "star", "board", "/", "common", "/", "string", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "star", "board", "/", "common", "/", "log", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "star", "board", "/", "memory", ".", "h", "\"", "Ċ", "Ċ", "char", "*", "ĠS", "b", "String", "Du", "pl", "icate", "(", "const", "Ġchar", "*", "Ġsource", ")", "Ġ{", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġlength", "Ġ=", "Ġstr", "len", "(", "source", ");", "Ċ", "Ġ", "Ġchar", "*", "Ġresult", "Ġ=", "Ġstatic", "_", "cast", "<", "char", "*", ">(", "S", "b", "Memory", "All", "ocate", "(", "length", "Ġ+", "Ġ1", "));", "Ċ", "Ġ", "ĠSB", "_", "D", "CHECK", "(", "length", "Ġ<", "Ġk", "S", "b", "Int", "32", "Max", ");", "Ċ", "Ġ", "Ġint", "Ġint", "_", "length", "Ġ=", "Ġstatic", "_", "cast", "<", "int", ">(", "length", "Ġ+", "Ġ1", ");", "Ċ", "Ġ", "Ġstar", "board", "::", "str", "lc", "py", "(", "result", ",", "Ġsource", ",", "Ġint", "_", "length", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["length", 8, "comesFrom", ["length"], [2]], ["length", 10, "comesFrom", ["length"], [2]], ["length", 14, "comesFrom", ["length"], [2]], ["int_length", 18, "comesFrom", ["int_length"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::864", "code": "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"sky/shell/testing/test_runner.h\"\n\n#include <iostream>\n\n#include \"base/bind.h\"\n#include \"base/message_loop/message_loop.h\"\n#include \"base/strings/string_util.h\"\n#include \"sky/shell/platform_view.h\"\n#include \"sky/shell/shell.h\"\n#include \"sky/shell/shell_view.h\"\n\nnamespace sky {\nnamespace shell {\nnamespace {\n\nstatic TestRunner* g_test_runner = nullptr;\n\n}  // namespace\n\nTestRunner::TestRunner()\n    : shell_view_(new ShellView(Shell::Shared())), weak_ptr_factory_(this) {\n  CHECK(!g_test_runner) << \"Only create one TestRunner.\";\n\n  shell_view_->view()->ConnectToEngine(GetProxy(&sky_engine_));\n  ViewportMetricsPtr metrics = ViewportMetrics::New();\n  metrics->physical_width = 800;\n  metrics->physical_height = 600;\n  sky_engine_->OnViewportMetricsChanged(metrics.Pass());\n}\n\nTestRunner::~TestRunner() {}\n\nTestRunner& TestRunner::Shared() {\n  if (!g_test_runner)\n    g_test_runner = new TestRunner();\n  return *g_test_runner;\n}\n\nvoid TestRunner::Run(const TestDescriptor& test) {\n  sky_engine_->RunFromFile(test.path, test.package_root, \"\");\n}\n\n}  // namespace shell\n}  // namespace sky\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2014", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "sky", "/", "shell", "/", "testing", "/", "test", "_", "runner", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "bind", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "message", "_", "loop", "/", "message", "_", "loop", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "strings", "/", "string", "_", "util", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sky", "/", "shell", "/", "platform", "_", "view", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sky", "/", "shell", "/", "shell", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sky", "/", "shell", "/", "shell", "_", "view", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġsky", "Ġ{", "Ċ", "names", "pace", "Ġshell", "Ġ{", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "static", "ĠTest", "Runner", "*", "Ġg", "_", "test", "_", "runner", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "Test", "Runner", "::", "Test", "Runner", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġshell", "_", "view", "_(", "new", "ĠShell", "View", "(", "Shell", "::", "Sh", "ared", "())", "),", "Ġweak", "_", "ptr", "_", "f", "actory", "_(", "this", ")", "Ġ{", "Ċ", "Ġ", "ĠCH", "ECK", "(", "!", "g", "_", "test", "_", "runner", ")", "Ġ<<", "Ġ\"", "Only", "Ġcreate", "Ġone", "ĠTest", "Runner", ".\"", ";", "ĊĊ", "Ġ", "Ġshell", "_", "view", "_", "->", "view", "()", "->", "Connect", "To", "Engine", "(", "Get", "Proxy", "(&", "sky", "_", "engine", "_", "));", "Ċ", "Ġ", "ĠView", "port", "Met", "rics", "Ptr", "Ġmetrics", "Ġ=", "ĠView", "port", "Met", "rics", "::", "New", "();", "Ċ", "Ġ", "Ġmetrics", "->", "physical", "_", "width", "Ġ=", "Ġ800", ";", "Ċ", "Ġ", "Ġmetrics", "->", "physical", "_", "height", "Ġ=", "Ġ600", ";", "Ċ", "Ġ", "Ġsky", "_", "engine", "_", "->", "On", "View", "port", "Met", "rics", "Changed", "(", "met", "rics", ".", "Pass", "());", "Ċ", "}", "Ċ", "Ċ", "Test", "Runner", "::", "~", "Test", "Runner", "()", "Ġ{}", "Ċ", "Ċ", "Test", "Runner", "&", "ĠTest", "Runner", "::", "Sh", "ared", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "g", "_", "test", "_", "runner", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġg", "_", "test", "_", "runner", "Ġ=", "Ġnew", "ĠTest", "Runner", "();", "Ċ", "Ġ", "Ġreturn", "Ġ*", "g", "_", "test", "_", "runner", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠTest", "Runner", "::", "Run", "(", "const", "ĠTest", "Desc", "ript", "or", "&", "Ġtest", ")", "Ġ{", "Ċ", "Ġ", "Ġsky", "_", "engine", "_", "->", "Run", "From", "File", "(", "test", ".", "path", ",", "Ġtest", ".", "package", "_", "root", ",", "Ġ\"\"", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġshell", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġsky", "Ċ"], "dataflow_graph": [["g_test_runner", 26, "comesFrom", ["g_test_runner"], [25]], ["metrics", 14, "comesFrom", ["metrics"], [12]], ["metrics", 16, "comesFrom", ["metrics"], [12]], ["metrics", 20, "comesFrom", ["metrics"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::865", "code": "// Copyright (c) 2018-2020 Vivaldi Technologies AS. All rights reserved\n\n#include \"content/browser/renderer_host/render_view_host_impl.h\"\n\nnamespace content {\n\nvoid RenderViewHostImpl::LoadImageAt(int x, int y) {\n  GetWidget()->GetAssociatedFrameWidget()->LoadImageAt(gfx::Point(x, y));\n}\n\n}  // namespace content\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2018", "-", "2020", "ĠViv", "aldi", "ĠTechnologies", "ĠAS", ".", "ĠAll", "Ġrights", "Ġreserved", "Ċ", "Ċ", "#", "include", "Ġ\"", "content", "/", "browser", "/", "rend", "erer", "_", "host", "/", "render", "_", "view", "_", "host", "_", "impl", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġcontent", "Ġ{", "Ċ", "Ċ", "void", "ĠRender", "View", "Host", "Impl", "::", "Load", "Image", "At", "(", "int", "Ġx", ",", "Ġint", "Ġy", ")", "Ġ{", "Ċ", "Ġ", "ĠGet", "Widget", "()", "->", "Get", "Associated", "Frame", "Widget", "()", "->", "Load", "Image", "At", "(", "g", "fx", "::", "Point", "(", "x", ",", "Ġy", "));", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġcontent", "Ċ"], "dataflow_graph": [["x", 7, "comesFrom", ["x"], [1]], ["y", 8, "comesFrom", ["y"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::866", "code": "#include \"SneakEnforcer.h\"\n\n#include <mclib/util/Utility.h>\n\nnamespace example {\n\nSneakEnforcer::SneakEnforcer(mc::core::Client* client)\n    : m_Client(client),\n    m_PlayerManager(client->GetPlayerManager()),\n    m_Connection(client->GetConnection()),\n    m_StartTime(mc::util::GetTime())\n{\n    m_PlayerManager->RegisterListener(this);\n    m_Client->RegisterListener(this);\n}\n\nSneakEnforcer::~SneakEnforcer() {\n    m_PlayerManager->UnregisterListener(this);\n    m_Client->UnregisterListener(this);\n}\n\nvoid SneakEnforcer::OnTick() {\n    s64 ticks = mc::util::GetTime() - m_StartTime;\n    float pitch = (((float)std::sin(ticks * 3 * 3.14 / 1000) * 0.5f + 0.5f) * 360.0f) - 180.0f;\n    pitch = (pitch / 5.5f) + 130.0f;\n\n    m_Client->GetPlayerController()->SetPitch(pitch);\n}\n\nvoid SneakEnforcer::OnClientSpawn(mc::core::PlayerPtr player) {\n    using namespace mc::protocol::packets::out;\n    EntityActionPacket::Action action = EntityActionPacket::Action::StartSneak;\n\n    EntityActionPacket packet(player->GetEntity()->GetEntityId(), action);\n    m_Connection->SendPacket(&packet);\n}\n\n} // ns example\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "S", "ne", "ak", "En", "forcer", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "m", "cl", "ib", "/", "util", "/", "Ut", "ility", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "Ġexample", "Ġ{", "Ċ", "Ċ", "S", "ne", "ak", "En", "forcer", "::", "S", "ne", "ak", "En", "forcer", "(", "mc", "::", "core", "::", "Client", "*", "Ġclient", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġm", "_", "Client", "(", "client", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Player", "Manager", "(", "client", "->", "Get", "Player", "Manager", "()", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Connection", "(", "client", "->", "Get", "Connection", "()", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Start", "Time", "(", "mc", "::", "util", "::", "Get", "Time", "())", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Player", "Manager", "->", "Register", "Listener", "(", "this", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Client", "->", "Register", "Listener", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "S", "ne", "ak", "En", "forcer", "::", "~", "S", "ne", "ak", "En", "forcer", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Player", "Manager", "->", "Un", "register", "Listener", "(", "this", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Client", "->", "Un", "register", "Listener", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSneak", "En", "forcer", "::", "On", "T", "ick", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġs", "64", "Ġticks", "Ġ=", "Ġmc", "::", "util", "::", "Get", "Time", "()", "Ġ-", "Ġm", "_", "Start", "Time", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġpitch", "Ġ=", "Ġ((", "(", "float", ")", "std", "::", "sin", "(", "t", "icks", "Ġ*", "Ġ3", "Ġ*", "Ġ3", ".", "14", "Ġ/", "Ġ1000", ")", "Ġ*", "Ġ0", ".", "5", "f", "Ġ+", "Ġ0", ".", "5", "f", ")", "Ġ*", "Ġ360", ".", "0", "f", ")", "Ġ-", "Ġ180", ".", "0", "f", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpitch", "Ġ=", "Ġ(", "p", "itch", "Ġ/", "Ġ5", ".", "5", "f", ")", "Ġ+", "Ġ130", ".", "0", "f", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Client", "->", "Get", "Player", "Controller", "()", "->", "Set", "P", "itch", "(", "p", "itch", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠSneak", "En", "forcer", "::", "On", "Client", "Spawn", "(", "mc", "::", "core", "::", "Player", "Ptr", "Ġplayer", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġusing", "Ġnamespace", "Ġmc", "::", "prot", "ocol", "::", "pack", "ets", "::", "out", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEntity", "Action", "P", "acket", "::", "Action", "Ġaction", "Ġ=", "ĠEntity", "Action", "P", "acket", "::", "Action", "::", "Start", "S", "ne", "ak", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠEntity", "Action", "P", "acket", "Ġpacket", "(", "player", "->", "Get", "Entity", "()", "->", "Get", "Entity", "Id", "(),", "Ġaction", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "Connection", "->", "Send", "P", "acket", "(&", "pack", "et", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġns", "Ġexample", "Ċ"], "dataflow_graph": [["ticks", 27, "comesFrom", ["ticks"], [22]], ["pitch", 29, "comesFrom", ["pitch"], [28]], ["pitch", 33, "comesFrom", ["pitch"], [28]], ["player", 40, "comesFrom", ["player"], [35]], ["action", 43, "comesFrom", ["action"], [37]], ["packet", 46, "comesFrom", ["packet"], [39]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::867", "code": "class RecentCounter {\npublic:\n    queue<int> q;\n\n    RecentCounter() { }\n\n    int ping(int t) {\n        while (!q.empty() && q.front() < t-3000)\n            q.pop();\n    \n        q.push(t);\n        return q.size();\n    }\n};\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * RecentCounter* obj = new RecentCounter();\n * int param_1 = obj->ping(t);\n */\n", "code_tokens": ["Ġclass", "ĠRecent", "Counter", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġqueue", "<", "int", ">", "Ġq", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠRecent", "Counter", "()", "Ġ{", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġping", "(", "int", "Ġt", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(!", "q", ".", "empty", "()", "Ġ&&", "Ġq", ".", "front", "()", "Ġ<", "Ġt", "-", "3000", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", ".", "pop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġq", ".", "push", "(", "t", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġq", ".", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠYour", "ĠRecent", "Counter", "Ġobject", "Ġwill", "Ġbe", "Ġinstant", "iated", "Ġand", "Ġcalled", "Ġas", "Ġsuch", ":", "Ċ", "Ġ*", "ĠRecent", "Counter", "*", "Ġobj", "Ġ=", "Ġnew", "ĠRecent", "Counter", "();", "Ċ", "Ġ*", "Ġint", "Ġparam", "_", "1", "Ġ=", "Ġobj", "->", "ping", "(", "t", ");", "Ċ", "Ġ*/", "Ċ"], "dataflow_graph": [["t", 8, "comesFrom", ["t"], [3]], ["t", 13, "comesFrom", ["t"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::868", "code": "// truth.C -- PB23 objective function treated as a black box.\n\n#include <iostream>\n#include <fstream>\n#include <cmath>\nusing namespace std;\n\nconst double evaluate(const double coord[]);\n\nint main()\n{\n  unsigned int dimension = 2;\n  double coord[2];\n  ifstream input(\"input.txt\");\n  for (unsigned int i = 0; i < dimension; i++)\n    input >> coord[i];\n  input.close();\n\n  double value = evaluate(coord);\n  cout << value;\n\n  return 0;\n}\n\nconst double evaluate(const double coord[])\n{\n  return (pow(coord[0], 2) + pow(coord[1], 2) );\n}\n", "code_tokens": ["Ġ//", "Ġtruth", ".", "C", "Ġ--", "ĠPB", "23", "Ġobjective", "Ġfunction", "Ġtreated", "Ġas", "Ġa", "Ġblack", "Ġbox", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "const", "Ġdouble", "Ġevaluate", "(", "const", "Ġdouble", "Ġcoord", "[]", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġunsigned", "Ġint", "Ġdimension", "Ġ=", "Ġ2", ";", "Ċ", "Ġ", "Ġdouble", "Ġcoord", "[", "2", "];", "Ċ", "Ġ", "Ġif", "stream", "Ġinput", "(\"", "input", ".", "txt", "\");", "Ċ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġdimension", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġinput", "Ġ>>", "Ġcoord", "[", "i", "];", "Ċ", "Ġ", "Ġinput", ".", "close", "();", "ĊĊ", "Ġ", "Ġdouble", "Ġvalue", "Ġ=", "Ġevaluate", "(", "coord", ");", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġvalue", ";", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "const", "Ġdouble", "Ġevaluate", "(", "const", "Ġdouble", "Ġcoord", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġreturn", "Ġ(", "p", "ow", "(", "coord", "[", "0", "],", "Ġ2", ")", "Ġ+", "Ġpow", "(", "coord", "[", "1", "],", "Ġ2", ")", "Ġ);", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["i", 13, "comesFrom", ["i"], [7]], ["dimension", 9, "comesFrom", ["dimension"], [4]], ["input", 11, "comesFrom", ["input"], [6]], ["input", 14, "comesFrom", ["input"], [6]], ["value", 20, "comesFrom", ["value"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::869", "code": "/*\n * Copyright (c) 2000, Red Hat, Inc.\n *\n *     This program is free software; you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation; either version 2 of the License, or\n *     (at your option) any later version.\n *\n *     A copy of the GNU General Public License can be found at\n *     http://www.gnu.org/\n *\n * Written by DJ Delorie <dj@cygnus.com>\n *\n */\n\n/* The purpose of this file is to hide the mess needed just to figure\n   out how full a given disk is.  There is an old API that can't\n   handle disks bigger than 2G, and a new API that isn't always\n   available. */\n\n#include \"win32.h\"\n#include \"filemanip.h\"\n#include \"diskfull.h\"\n\nint\ndiskfull (const std::string& path)\n{\n  ULARGE_INTEGER avail, total, free;\n  size_t len = path.size () + 7;\n  WCHAR wpath[len];\n\n  mklongpath (wpath, path.c_str (), len);\n  if (GetDiskFreeSpaceExW (wpath, &avail, &total, &free))\n    {\n      int perc = avail.QuadPart * 100 / total.QuadPart;\n      return 100 - perc;\n    }\n  return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2000", ",", "ĠRed", "ĠHat", ",", "ĠInc", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠA", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġcan", "Ġbe", "Ġfound", "Ġat", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "gnu", ".", "org", "/", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠWritten", "Ġby", "ĠDJ", "ĠDel", "orie", "Ġ<", "dj", "@", "cy", "gn", "us", ".", "com", ">", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "/*", "ĠThe", "Ġpurpose", "Ġof", "Ġthis", "Ġfile", "Ġis", "Ġto", "Ġhide", "Ġthe", "Ġmess", "Ġneeded", "Ġjust", "Ġto", "Ġfigure", "Ċ", "Ġ", "Ġ", "Ġout", "Ġhow", "Ġfull", "Ġa", "Ġgiven", "Ġdisk", "Ġis", ".", "Ġ", "ĠThere", "Ġis", "Ġan", "Ġold", "ĠAPI", "Ġthat", "Ġcan", "'t", "Ċ", "Ġ", "Ġ", "Ġhandle", "Ġdisks", "Ġbigger", "Ġthan", "Ġ2", "G", ",", "Ġand", "Ġa", "Ġnew", "ĠAPI", "Ġthat", "Ġisn", "'t", "Ġalways", "Ċ", "Ġ", "Ġ", "Ġavailable", ".", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "win", "32", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "file", "man", "ip", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "disk", "full", ".", "h", "\"", "Ċ", "Ċ", "int", "Ċ", "disk", "full", "Ġ(", "const", "Ġstd", "::", "string", "&", "Ġpath", ")", "Ċ", "{", "Ċ", "Ġ", "ĠUL", "AR", "GE", "_", "INT", "EG", "ER", "Ġavail", ",", "Ġtotal", ",", "Ġfree", ";", "Ċ", "Ġ", "Ġsize", "_", "t", "Ġlen", "Ġ=", "Ġpath", ".", "size", "Ġ()", "Ġ+", "Ġ7", ";", "Ċ", "Ġ", "ĠW", "CHAR", "Ġw", "path", "[", "len", "];", "ĊĊ", "Ġ", "Ġmk", "long", "path", "Ġ(", "w", "path", ",", "Ġpath", ".", "c", "_", "str", "Ġ(),", "Ġlen", ");", "Ċ", "Ġ", "Ġif", "Ġ(", "Get", "Disk", "Free", "Space", "Ex", "W", "Ġ(", "w", "path", ",", "Ġ&", "av", "ail", ",", "Ġ&", "total", ",", "Ġ&", "free", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġper", "c", "Ġ=", "Ġavail", ".", "Qu", "ad", "Part", "Ġ*", "Ġ100", "Ġ/", "Ġtotal", ".", "Qu", "ad", "Part", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ100", "Ġ-", "Ġper", "c", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["len", 9, "comesFrom", ["len"], [5]], ["len", 14, "comesFrom", ["len"], [5]], ["avail", 17, "comesFrom", ["avail"], [2]], ["avail", 21, "comesFrom", ["avail"], [2]], ["total", 18, "comesFrom", ["total"], [3]], ["total", 23, "comesFrom", ["total"], [3]], ["free", 19, "comesFrom", ["free"], [4]], ["perc", 25, "comesFrom", ["perc"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::870", "code": "// 2009-10-29\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nint main()\n{\n\tchar s[1000],t[1000];\n\tbool print=false;\n\tdouble X,Y,x,y,dist=0;\n\tfor (;;)\n\t{\n\t\ts[0]=0;\n\t\tgets(s);\n\t\tint l=strlen(s);\n\t\tif (!*s) return 0;\n\t\treverse(s,s+l);\n\t\tsscanf(s,\".)%[^(](\",&t);\n\t\tl=strlen(t);\n\t\treverse(t,t+l);\n\t\tsscanf(t,\"%lf ,%lf\",&x,&y);\n\t\tif (print)\n\t\t{\n\t\t\tdist+=hypot(X-x,Y-y);\n\t\t\tprintf(\"The salesman has traveled a total of %.3f kilometers.\\n\",dist);\n\t\t}\n\t\telse\n\t\t\tprint=true;\n\t\tX=x; Y=y;\n\t}\n}\n", "code_tokens": ["Ġ//", "Ġ2009", "-", "10", "-", "29", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "char", "Ġs", "[", "1000", "],", "t", "[", "1000", "];", "Ċ", "ĉ", "bool", "Ġprint", "=", "false", ";", "Ċ", "ĉ", "double", "ĠX", ",", "Y", ",", "x", ",", "y", ",", "dist", "=", "0", ";", "Ċ", "ĉ", "for", "Ġ(", ";;", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "s", "[", "0", "]=", "0", ";", "Ċ", "ĉ", "ĉ", "gets", "(", "s", ");", "Ċ", "ĉ", "ĉ", "int", "Ġl", "=", "str", "len", "(", "s", ");", "Ċ", "ĉ", "ĉ", "if", "Ġ(!", "*", "s", ")", "Ġreturn", "Ġ0", ";", "Ċ", "ĉ", "ĉ", "reverse", "(", "s", ",", "s", "+", "l", ");", "Ċ", "ĉ", "ĉ", "ss", "can", "f", "(", "s", ",\"", ".)", "%", "[", "^", "(", "](", "\",", "&", "t", ");", "Ċ", "ĉ", "ĉ", "l", "=", "str", "len", "(", "t", ");", "Ċ", "ĉ", "ĉ", "reverse", "(", "t", ",", "t", "+", "l", ");", "Ċ", "ĉ", "ĉ", "ss", "can", "f", "(", "t", ",\"", "%", "lf", "Ġ,", "%", "lf", "\",", "&", "x", ",", "&", "y", ");", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "print", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "dist", "+=", "hyp", "ot", "(", "X", "-", "x", ",", "Y", "-", "y", ");", "Ċ", "ĉ", "ĉ", "ĉ", "printf", "(\"", "The", "Ġsalesman", "Ġhas", "Ġtraveled", "Ġa", "Ġtotal", "Ġof", "Ġ%", ".", "3", "f", "Ġkilometers", ".", "\\", "n", "\",", "dist", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "ĉ", "print", "=", "true", ";", "Ċ", "ĉ", "ĉ", "X", "=", "x", ";", "ĠY", "=", "y", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["l", 20, "comesFrom", ["l"], [13]], ["l", 30, "comesFrom", ["l"], [24]], ["x", 33, "comesFrom", ["x"], [7]], ["x", 39, "comesFrom", ["x"], [7]], ["x", 46, "comesFrom", ["x"], [7]], ["y", 34, "comesFrom", ["y"], [8]], ["y", 41, "comesFrom", ["y"], [8]], ["y", 48, "comesFrom", ["y"], [8]], ["print", 35, "comesFrom", ["print"], [4]], ["X", 38, "comesFrom", ["X"], [5]], ["Y", 40, "comesFrom", ["Y"], [6]], ["dist", 43, "comesFrom", ["dist"], [36]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::871", "code": "/*!\n * \\author Umut A. Acar\n * \\author Arthur Chargueraud\n * \\author Mike Rainey\n * \\date 2013-2018\n * \\copyright 2014 Umut A. Acar, Arthur Chargueraud, Mike Rainey\n *\n * \\brief Example use of the chunked sequence\n * \\file map_1.cpp\n * \\example map_1.cpp\n * \\ingroup chunkedseq\n * \\ingroup cached_measurement\n *\n */\n\n//! [map_example]\n// accessing mapped values\n#include <iostream>\n#include <string>\n\n#include \"../../chunkedseq/examples/map.hpp\"\n\nint main () {\n  pasl::data::map::map<char,std::string> mymap;\n  \n  mymap['a']=\"an element\";\n  mymap['b']=\"another element\";\n  mymap['c']=mymap['b'];\n  \n  std::cout << \"mymap['a'] is \" << mymap['a'] << '\\n';\n  std::cout << \"mymap['b'] is \" << mymap['b'] << '\\n';\n  std::cout << \"mymap['c'] is \" << mymap['c'] << '\\n';\n  std::cout << \"mymap['d'] is \" << mymap['d'] << '\\n';\n  \n  std::cout << \"mymap now contains \" << mymap.size() << \" elements.\\n\";\n  \n  return 0;\n}\n//! [map_example]", "code_tokens": ["Ġ/*", "!", "Ċ", "Ġ*", "Ġ\\", "author", "ĠUm", "ut", "ĠA", ".", "ĠAc", "ar", "Ċ", "Ġ*", "Ġ\\", "author", "ĠArthur", "ĠCharg", "uer", "aud", "Ċ", "Ġ*", "Ġ\\", "author", "ĠMike", "ĠRain", "ey", "Ċ", "Ġ*", "Ġ\\", "date", "Ġ2013", "-", "2018", "Ċ", "Ġ*", "Ġ\\", "cop", "yright", "Ġ2014", "ĠUm", "ut", "ĠA", ".", "ĠAc", "ar", ",", "ĠArthur", "ĠCharg", "uer", "aud", ",", "ĠMike", "ĠRain", "ey", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ\\", "b", "rief", "ĠExample", "Ġuse", "Ġof", "Ġthe", "Ġchunk", "ed", "Ġsequence", "Ċ", "Ġ*", "Ġ\\", "file", "Ġmap", "_", "1", ".", "cpp", "Ċ", "Ġ*", "Ġ\\", "example", "Ġmap", "_", "1", ".", "cpp", "Ċ", "Ġ*", "Ġ\\", "ing", "roup", "Ġchunk", "ed", "seq", "Ċ", "Ġ*", "Ġ\\", "ing", "roup", "Ġcached", "_", "me", "asure", "ment", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "//", "!", "Ġ[", "map", "_", "example", "]", "Ċ", "//", "Ġaccessing", "Ġmapped", "Ġvalues", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "../", "ch", "unk", "ed", "seq", "/", "ex", "amples", "/", "map", ".", "h", "pp", "\"", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ġ{", "Ċ", "Ġ", "Ġpas", "l", "::", "data", "::", "map", "::", "map", "<", "char", ",", "std", "::", "string", ">", "Ġmy", "map", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġmy", "map", "['", "a", "']", "=\"", "an", "Ġelement", "\";", "Ċ", "Ġ", "Ġmy", "map", "['", "b", "']", "=\"", "another", "Ġelement", "\";", "Ċ", "Ġ", "Ġmy", "map", "['", "c", "']", "=", "my", "map", "['", "b", "'", "];", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "my", "map", "['", "a", "']", "Ġis", "Ġ\"", "Ġ<<", "Ġmy", "map", "['", "a", "']", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "my", "map", "['", "b", "']", "Ġis", "Ġ\"", "Ġ<<", "Ġmy", "map", "['", "b", "']", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "my", "map", "['", "c", "']", "Ġis", "Ġ\"", "Ġ<<", "Ġmy", "map", "['", "c", "']", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "my", "map", "['", "d", "']", "Ġis", "Ġ\"", "Ġ<<", "Ġmy", "map", "['", "d", "']", "Ġ<<", "Ġ'", "\\", "n", "';", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "my", "map", "Ġnow", "Ġcontains", "Ġ\"", "Ġ<<", "Ġmy", "map", ".", "size", "()", "Ġ<<", "Ġ\"", "Ġelements", ".", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ", "//", "!", "Ġ[", "map", "_", "example", "]"], "dataflow_graph": [["mymap", 2, "comesFrom", ["mymap"], [1]], ["mymap", 3, "comesFrom", ["mymap"], [1]], ["mymap", 4, "comesFrom", ["mymap"], [1]], ["mymap", 5, "comesFrom", ["mymap"], [1]], ["mymap", 7, "comesFrom", ["mymap"], [1]], ["mymap", 9, "comesFrom", ["mymap"], [1]], ["mymap", 11, "comesFrom", ["mymap"], [1]], ["mymap", 13, "comesFrom", ["mymap"], [1]], ["mymap", 15, "comesFrom", ["mymap"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::872", "code": "// Copyright (c) 2015, Baidu.com, Inc. All Rights Reserved\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"util/thread.h\"\n\nnamespace leveldb {\n\nThread::Thread() : started_(false), id_(0) {}\n\nThread::~Thread() {\n  Cancel();\n  Join();\n}\n\nbool Thread::Start() {\n  {\n    MutexLock lock(&mutex_);\n    if (!started_) {\n      started_ = true;\n    } else {\n      return false;\n    }\n  }\n\n  if (0 != pthread_create(&id_, NULL, StartRunner, this)) {\n    started_ = false;\n    return false;\n  }\n\n  return true;\n}\n\nvoid Thread::Join() {\n  if (started_) {\n    pthread_join(id_, NULL);\n  }\n}\n\nvoid Thread::Cancel() {\n  if (started_) {\n    pthread_cancel(id_);\n  }\n}\n\nvoid Thread::Stop() {\n  MutexLock lock(&mutex_);\n  started_ = false;\n}\n\nvoid* Thread::StartRunner(void* params) {\n  Thread* runner = static_cast<Thread*>(params);\n  runner->Run(params);\n  runner->Stop();\n  return NULL;\n}\n\n}  // namespace leveldb\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", ",", "ĠB", "aid", "u", ".", "com", ",", "ĠInc", ".", "ĠAll", "ĠRights", "ĠReserved", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "util", "/", "thread", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġleve", "ld", "b", "Ġ{", "Ċ", "Ċ", "Thread", "::", "Thread", "()", "Ġ:", "Ġstarted", "_(", "false", "),", "Ġid", "_(", "0", ")", "Ġ{}", "Ċ", "Ċ", "Thread", "::", "~", "Thread", "()", "Ġ{", "Ċ", "Ġ", "ĠCancel", "();", "Ċ", "Ġ", "ĠJoin", "();", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠThread", "::", "Start", "()", "Ġ{", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMut", "ex", "Lock", "Ġlock", "(&", "mut", "ex", "_", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "started", "_", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstarted", "_", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġif", "Ġ(", "0", "Ġ!=", "Ġp", "thread", "_", "create", "(&", "id", "_", ",", "ĠNULL", ",", "ĠStart", "Runner", ",", "Ġthis", "))", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstarted", "_", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠThread", "::", "Join", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "started", "_", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "thread", "_", "join", "(", "id", "_", ",", "ĠNULL", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠThread", "::", "C", "ancel", "()", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "started", "_", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "thread", "_", "c", "ancel", "(", "id", "_", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠThread", "::", "Stop", "()", "Ġ{", "Ċ", "Ġ", "ĠMut", "ex", "Lock", "Ġlock", "(&", "mut", "ex", "_", ");", "Ċ", "Ġ", "Ġstarted", "_", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ", "Ċ", "void", "*", "ĠThread", "::", "Start", "Runner", "(", "void", "*", "Ġparams", ")", "Ġ{", "Ċ", "Ġ", "ĠThread", "*", "Ġrunner", "Ġ=", "Ġstatic", "_", "cast", "<", "Thread", "*", ">(", "params", ");", "Ċ", "Ġ", "Ġrunner", "->", "Run", "(", "params", ");", "Ċ", "Ġ", "Ġrunner", "->", "Stop", "();", "Ċ", "Ġ", "Ġreturn", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġleve", "ld", "b", "Ċ"], "dataflow_graph": [["started_", 16, "comesFrom", ["started_"], [14]], ["started_", 20, "comesFrom", ["started_"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::873", "code": "// Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"base/basictypes.h\"\n#include \"base/file_path.h\"\n#include \"base/platform_thread.h\"\n#include \"chrome/test/ui/ui_test.h\"\n\nclass ImagesTest : public UITest {\n protected:\n  ImagesTest() : UITest() {\n    FilePath path(test_data_directory_);\n    path = path.AppendASCII(\"animated-gifs.html\");\n    launch_arguments_ = CommandLine(L\"\");\n    launch_arguments_.AppendLooseValue(path.ToWStringHack());\n  }\n};\n\nTEST_F(ImagesTest, AnimatedGIFs) {\n  std::wstring page_title = L\"animated gif test\";\n\n  // Let the GIFs fully animate.\n  for (int i = 0; i < 10; ++i) {\n    PlatformThread::Sleep(sleep_timeout_ms());\n    if (page_title == GetActiveTabTitle())\n      break;\n  }\n\n  // Make sure the navigation succeeded.\n  EXPECT_EQ(page_title, GetActiveTabTitle());\n\n  // Tau will check if this crashed.\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2006", "-", "2008", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "bas", "ict", "ypes", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "file", "_", "path", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "platform", "_", "thread", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "chrome", "/", "test", "/", "ui", "/", "ui", "_", "test", ".", "h", "\"", "Ċ", "Ċ", "class", "ĠImages", "Test", "Ġ:", "Ġpublic", "ĠU", "IT", "est", "Ġ{", "Ċ", "Ġprotected", ":", "Ċ", "Ġ", "ĠImages", "Test", "()", "Ġ:", "ĠU", "IT", "est", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFile", "Path", "Ġpath", "(", "test", "_", "data", "_", "directory", "_", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpath", "Ġ=", "Ġpath", ".", "App", "end", "ASC", "II", "(\"", "anim", "ated", "-", "gif", "s", ".", "html", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlaunch", "_", "arg", "uments", "_", "Ġ=", "ĠCommand", "Line", "(", "L", "\"", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlaunch", "_", "arg", "uments", "_.", "App", "end", "Lo", "ose", "Value", "(", "path", ".", "To", "W", "String", "Hack", "());", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "Images", "Test", ",", "ĠAnimated", "G", "IF", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġstd", "::", "w", "string", "Ġpage", "_", "title", "Ġ=", "ĠL", "\"", "anim", "ated", "Ġgif", "Ġtest", "\";", "ĊĊ", "Ġ", "Ġ//", "ĠLet", "Ġthe", "ĠGIF", "s", "Ġfully", "Ġanimate", ".", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ10", ";", "Ġ++", "i", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPlatform", "Thread", "::", "Sleep", "(", "sleep", "_", "timeout", "_", "ms", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "page", "_", "title", "Ġ==", "ĠGet", "Active", "Tab", "Title", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ//", "ĠMake", "Ġsure", "Ġthe", "Ġnavigation", "Ġsucceeded", ".", "Ċ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "page", "_", "title", ",", "ĠGet", "Active", "Tab", "Title", "());", "ĊĊ", "Ġ", "Ġ//", "ĠTau", "Ġwill", "Ġcheck", "Ġif", "Ġthis", "Ġcrashed", ".", "Ċ", "}", "Ċ"], "dataflow_graph": [["path", 4, "comesFrom", ["path"], [3]], ["path", 10, "comesFrom", ["path"], [3]], ["launch_arguments_", 8, "comesFrom", ["launch_arguments_"], [6]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 16, "comesFrom", ["i"], [14]], ["page_title", 19, "comesFrom", ["page_title"], [13]], ["page_title", 22, "comesFrom", ["page_title"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::874", "code": "#pragma once\n#include \"learning/learning_method.hpp\"\n\nnamespace Convolutional::Learning {\n\n\ttemplate<typename Classification>\n\tclass Backpropagation : public ILearningMethod<Classification> {\n\tpublic:\n\t\tusing parent_t = ILearningMethod<Classification>;\n\t\tusing parent_t::ILearningMethod;\n\n\t\tauto IsFinished() const -> bool override { \n\t\t\tstatic int runs = 2;\n\t\t\treturn !runs--; \n\t\t\t// TODO mfi: overwrite all of this, \n\t\t\t// it's only a testing hack until real logic gets written\n\t\t}\n\n\t\tauto BeginEpoch(typename parent_t::networks_t::iterator network) -> void override {}\n\t\tauto EvaluateSet(typename parent_t::networks_t::iterator network, typename TrainingData<Classification>::const_iterator set) -> void override {network->GetOutputsUsingMatrix(set->multiMatrix);}\n\t\tauto EndEpoch(typename parent_t::networks_t::iterator network) -> void override {}\n\n\t\tauto GetChamp() const -> typename parent_t::network_t override { return parent_t::neuralNetworks.front(); }\n\t};\n\n}\n", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "#", "include", "Ġ\"", "learning", "/", "learning", "_", "method", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "ĠConv", "olution", "al", "::", "Learning", "Ġ{", "ĊĊ", "ĉ", "template", "<", "ty", "pen", "ame", "ĠClassification", ">", "Ċ", "ĉ", "class", "ĠBack", "prop", "ag", "ation", "Ġ:", "Ġpublic", "ĠIL", "ear", "ning", "Method", "<", "Class", "ification", ">", "Ġ{", "Ċ", "ĉ", "public", ":", "Ċ", "ĉ", "ĉ", "using", "Ġparent", "_", "t", "Ġ=", "ĠIL", "ear", "ning", "Method", "<", "Class", "ification", ">", ";", "Ċ", "ĉ", "ĉ", "using", "Ġparent", "_", "t", "::", "IL", "ear", "ning", "Method", ";", "ĊĊ", "ĉ", "ĉ", "auto", "ĠIs", "Fin", "ished", "()", "Ġconst", "Ġ->", "Ġbool", "Ġoverride", "Ġ{", "Ġ", "Ċ", "ĉ", "ĉ", "ĉ", "static", "Ġint", "Ġruns", "Ġ=", "Ġ2", ";", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġ!", "runs", "--", ";", "Ġ", "Ċ", "ĉ", "ĉ", "ĉ", "//", "ĠTOD", "O", "Ġm", "fi", ":", "Ġoverwrite", "Ġall", "Ġof", "Ġthis", ",", "Ġ", "Ċ", "ĉ", "ĉ", "ĉ", "//", "Ġit", "'s", "Ġonly", "Ġa", "Ġtesting", "Ġhack", "Ġuntil", "Ġreal", "Ġlogic", "Ġgets", "Ġwritten", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "auto", "ĠBegin", "Ep", "och", "(", "ty", "pen", "ame", "Ġparent", "_", "t", "::", "net", "works", "_", "t", "::", "iterator", "Ġnetwork", ")", "Ġ->", "Ġvoid", "Ġoverride", "Ġ{}", "Ċ", "ĉ", "ĉ", "auto", "ĠEval", "uate", "Set", "(", "ty", "pen", "ame", "Ġparent", "_", "t", "::", "net", "works", "_", "t", "::", "iterator", "Ġnetwork", ",", "Ġtyp", "ename", "ĠTraining", "Data", "<", "Class", "ification", ">", "::", "const", "_", "iterator", "Ġset", ")", "Ġ->", "Ġvoid", "Ġoverride", "Ġ{", "network", "->", "Get", "Output", "s", "Using", "Matrix", "(", "set", "->", "multi", "Matrix", ");", "}", "Ċ", "ĉ", "ĉ", "auto", "ĠEnd", "Ep", "och", "(", "ty", "pen", "ame", "Ġparent", "_", "t", "::", "net", "works", "_", "t", "::", "iterator", "Ġnetwork", ")", "Ġ->", "Ġvoid", "Ġoverride", "Ġ{}", "ĊĊ", "ĉ", "ĉ", "auto", "ĠGet", "Champ", "()", "Ġconst", "Ġ->", "Ġtyp", "ename", "Ġparent", "_", "t", "::", "network", "_", "t", "Ġoverride", "Ġ{", "Ġreturn", "Ġparent", "_", "t", "::", "ne", "ural", "Net", "works", ".", "front", "();", "Ġ}", "Ċ", "ĉ", "};", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["runs", 3, "comesFrom", ["runs"], [2]], ["network", 9, "comesFrom", ["network"], [7]], ["set", 11, "comesFrom", ["set"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::875", "code": "// { dg-require-namedlocale \"de_DE.ISO8859-15\" }\n// { dg-require-namedlocale \"ja_JP.eucJP\" }\n\n// 2001-08-15 Benjamin Kosnik  <bkoz@redhat.com>\n\n// Copyright (C) 2001-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 22.2.4.1.1 collate members\n\n#include <testsuite_hooks.h>\n\n#define main discard_main_1\n#include \"1.cc\"\n#undef main \n\n#define main discard_main_2\n#include \"2.cc\"\n#undef main \n\nint main()\n{\n  using namespace __gnu_test;\n  func_callback two;\n  two.push_back(&test01);\n  two.push_back(&test02);\n  run_tests_wrapped_locale(\"ja_JP.eucJP\", two);\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "require", "-", "named", "loc", "ale", "Ġ\"", "de", "_", "DE", ".", "ISO", "88", "59", "-", "15", "\"", "Ġ}", "Ċ", "//", "Ġ{", "Ġd", "g", "-", "require", "-", "named", "loc", "ale", "Ġ\"", "ja", "_", "JP", ".", "e", "uc", "JP", "\"", "Ġ}", "Ċ", "Ċ", "//", "Ġ2001", "-", "08", "-", "15", "ĠBenjamin", "ĠKos", "nik", "Ġ", "Ġ<", "b", "ko", "z", "@", "red", "hat", ".", "com", ">", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2001", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ22", ".", "2", ".", "4", ".", "1", ".", "1", "Ġcoll", "ate", "Ġmembers", "Ċ", "Ċ", "#", "include", "Ġ<", "test", "su", "ite", "_", "hook", "s", ".", "h", ">", "Ċ", "Ċ", "#", "define", "Ġmain", "Ġdiscard", "_", "main", "_", "1", "Ċ", "#", "include", "Ġ\"", "1", ".", "cc", "\"", "Ċ", "#", "und", "ef", "Ġmain", "Ġ", "Ċ", "Ċ", "#", "define", "Ġmain", "Ġdiscard", "_", "main", "_", "2", "Ċ", "#", "include", "Ġ\"", "2", ".", "cc", "\"", "Ċ", "#", "und", "ef", "Ġmain", "Ġ", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġusing", "Ġnamespace", "Ġ__", "gnu", "_", "test", ";", "Ċ", "Ġ", "Ġfunc", "_", "callback", "Ġtwo", ";", "Ċ", "Ġ", "Ġtwo", ".", "push", "_", "back", "(&", "test", "01", ");", "Ċ", "Ġ", "Ġtwo", ".", "push", "_", "back", "(&", "test", "02", ");", "Ċ", "Ġ", "Ġrun", "_", "tests", "_", "wra", "pped", "_", "loc", "ale", "(\"", "ja", "_", "JP", ".", "e", "uc", "JP", "\",", "Ġtwo", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["two", 5, "comesFrom", ["two"], [4]], ["two", 8, "comesFrom", ["two"], [4]], ["two", 12, "comesFrom", ["two"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::876", "code": "#include <glm/ext/matrix_int3x3_sized.hpp>\n\n#if GLM_HAS_STATIC_ASSERT\nstatic_assert(sizeof(glm::i8mat3x3) == 9, \"int8 size isn't 1 byte on this platform\");\nstatic_assert(sizeof(glm::i16mat3x3) == 18, \"int16 size isn't 2 bytes on this platform\");\nstatic_assert(sizeof(glm::i32mat3x3) == 36, \"int32 size isn't 4 bytes on this platform\");\nstatic_assert(sizeof(glm::i64mat3x3) == 72, \"int64 size isn't 8 bytes on this platform\");\n#endif\n\nstatic int test_comp()\n{\n\tint Error = 0;\n\n\tError += sizeof(glm::i8mat3x3) < sizeof(glm::i16mat3x3) ? 0 : 1;\n\tError += sizeof(glm::i16mat3x3) < sizeof(glm::i32mat3x3) ? 0 : 1;\n\tError += sizeof(glm::i32mat3x3) < sizeof(glm::i64mat3x3) ? 0 : 1;\n\n\treturn Error;\n}\n\nint main()\n{\n\tint Error = 0;\n\n\tError += test_comp();\n\n\treturn Error;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "gl", "m", "/", "ext", "/", "mat", "rix", "_", "int", "3", "x", "3", "_", "sized", ".", "h", "pp", ">", "Ċ", "Ċ", "#", "if", "ĠGL", "M", "_", "H", "AS", "_", "STAT", "IC", "_", "ASS", "ERT", "Ċ", "static", "_", "assert", "(", "size", "of", "(", "gl", "m", "::", "i", "8", "mat", "3", "x", "3", ")", "Ġ==", "Ġ9", ",", "Ġ\"", "int", "8", "Ġsize", "Ġisn", "'t", "Ġ1", "Ġbyte", "Ġon", "Ġthis", "Ġplatform", "\");", "Ċ", "static", "_", "assert", "(", "size", "of", "(", "gl", "m", "::", "i", "16", "mat", "3", "x", "3", ")", "Ġ==", "Ġ18", ",", "Ġ\"", "int", "16", "Ġsize", "Ġisn", "'t", "Ġ2", "Ġbytes", "Ġon", "Ġthis", "Ġplatform", "\");", "Ċ", "static", "_", "assert", "(", "size", "of", "(", "gl", "m", "::", "i", "32", "mat", "3", "x", "3", ")", "Ġ==", "Ġ36", ",", "Ġ\"", "int", "32", "Ġsize", "Ġisn", "'t", "Ġ4", "Ġbytes", "Ġon", "Ġthis", "Ġplatform", "\");", "Ċ", "static", "_", "assert", "(", "size", "of", "(", "gl", "m", "::", "i", "64", "mat", "3", "x", "3", ")", "Ġ==", "Ġ72", ",", "Ġ\"", "int", "64", "Ġsize", "Ġisn", "'t", "Ġ8", "Ġbytes", "Ġon", "Ġthis", "Ġplatform", "\");", "Ċ", "#", "endif", "Ċ", "Ċ", "static", "Ġint", "Ġtest", "_", "comp", "()", "Ċ", "{", "Ċ", "ĉ", "int", "ĠError", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "Error", "Ġ+=", "Ġsizeof", "(", "gl", "m", "::", "i", "8", "mat", "3", "x", "3", ")", "Ġ<", "Ġsizeof", "(", "gl", "m", "::", "i", "16", "mat", "3", "x", "3", ")", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "ĉ", "Error", "Ġ+=", "Ġsizeof", "(", "gl", "m", "::", "i", "16", "mat", "3", "x", "3", ")", "Ġ<", "Ġsizeof", "(", "gl", "m", "::", "i", "32", "mat", "3", "x", "3", ")", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "ĉ", "Error", "Ġ+=", "Ġsizeof", "(", "gl", "m", "::", "i", "32", "mat", "3", "x", "3", ")", "Ġ<", "Ġsizeof", "(", "gl", "m", "::", "i", "64", "mat", "3", "x", "3", ")", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "ĊĊ", "ĉ", "return", "ĠError", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "ĠError", "Ġ=", "Ġ0", ";", "ĊĊ", "ĉ", "Error", "Ġ+=", "Ġtest", "_", "comp", "();", "ĊĊ", "ĉ", "return", "ĠError", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["Error", 6, "comesFrom", ["Error"], [5]], ["Error", 11, "comesFrom", ["Error"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::877", "code": "// RUN: %clangxx_msan -std=c++11 -O0 -g %s -o %t && %run %t\n\n#include <assert.h>\n#include <sanitizer/msan_interface.h>\n#include <signal.h>\n#include <sys/time.h>\n#include <unistd.h>\n\nvoid test_sigwait() {\n  sigset_t s;\n  sigemptyset(&s);\n  sigaddset(&s, SIGUSR1);\n  sigprocmask(SIG_BLOCK, &s, 0);\n\n  if (pid_t pid = fork()) {\n    kill(pid, SIGUSR1);\n    _exit(0);\n  } else {\n    int sig;\n    int res = sigwait(&s, &sig);\n    assert(!res);\n    // The following checks that sig is initialized.\n    assert(sig == SIGUSR1);\n  }\n}\n\nint main(void) {\n  test_sigwait();\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "cl", "ang", "xx", "_", "ms", "an", "Ġ-", "std", "=", "c", "++", "11", "Ġ-", "O", "0", "Ġ-", "g", "Ġ%", "s", "Ġ-", "o", "Ġ%", "t", "Ġ&&", "Ġ%", "run", "Ġ%", "t", "Ċ", "Ċ", "#", "include", "Ġ<", "assert", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "san", "itiz", "er", "/", "ms", "an", "_", "interface", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sign", "al", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "sys", "/", "time", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "un", "ist", "d", ".", "h", ">", "Ċ", "Ċ", "void", "Ġtest", "_", "s", "ig", "wait", "()", "Ġ{", "Ċ", "Ġ", "Ġsig", "set", "_", "t", "Ġs", ";", "Ċ", "Ġ", "Ġsig", "empt", "ys", "et", "(&", "s", ");", "Ċ", "Ġ", "Ġsig", "add", "set", "(&", "s", ",", "ĠSIG", "US", "R", "1", ");", "Ċ", "Ġ", "Ġsig", "pro", "cm", "ask", "(", "S", "IG", "_", "BL", "OCK", ",", "Ġ&", "s", ",", "Ġ0", ");", "ĊĊ", "Ġ", "Ġif", "Ġ(", "pid", "_", "t", "Ġpid", "Ġ=", "Ġfork", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġkill", "(", "pid", ",", "ĠSIG", "US", "R", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "exit", "(", "0", ");", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġsig", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġres", "Ġ=", "Ġsig", "wait", "(&", "s", ",", "Ġ&", "s", "ig", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "!", "res", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠThe", "Ġfollowing", "Ġchecks", "Ġthat", "Ġsig", "Ġis", "Ġinitialized", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "s", "ig", "Ġ==", "ĠSIG", "US", "R", "1", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "void", ")", "Ġ{", "Ċ", "Ġ", "Ġtest", "_", "s", "ig", "wait", "();", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["s", 3, "comesFrom", ["s"], [1]], ["s", 5, "comesFrom", ["s"], [1]], ["s", 9, "comesFrom", ["s"], [1]], ["s", 19, "comesFrom", ["s"], [1]], ["pid", 13, "comesFrom", ["pid"], [10]], ["sig", 20, "comesFrom", ["sig"], [16]], ["sig", 24, "comesFrom", ["sig"], [16]], ["res", 22, "comesFrom", ["res"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::878", "code": "// Copyright 2019 Google LLC.\n// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n#include \"tools/fiddle/examples.h\"\n// HASH=8512ea2176f36e8f1aeef311ff228790\nREG_FIDDLE(Paint_getColor4f, 256, 256, true, 0) {\nvoid draw(SkCanvas* canvas) {\n    SkPaint paint;\n    paint.setColor(SK_ColorYELLOW);\n    SkColor4f y = paint.getColor4f();\n    SkDebugf(\"Yellow is %d%% red, %d%% green, and %d%% blue.\\n\", (int) (y.fR * 100),\n            (int) (y.fG * 100), (int) (y.fB * 100));\n}\n}  // END FIDDLE\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2019", "ĠGoogle", "ĠLLC", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "#", "include", "Ġ\"", "tools", "/", "f", "iddle", "/", "ex", "amples", ".", "h", "\"", "Ċ", "//", "ĠH", "ASH", "=", "85", "12", "ea", "2", "176", "f", "36", "e", "8", "f", "1", "ae", "ef", "311", "ff", "228", "790", "Ċ", "REG", "_", "F", "ID", "D", "LE", "(", "P", "aint", "_", "get", "Color", "4", "f", ",", "Ġ256", ",", "Ġ256", ",", "Ġtrue", ",", "Ġ0", ")", "Ġ{", "Ċ", "void", "Ġdraw", "(", "Sk", "Can", "vas", "*", "Ġcanvas", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "P", "aint", "Ġpaint", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpaint", ".", "set", "Color", "(", "SK", "_", "Color", "Y", "ELL", "OW", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "Color", "4", "f", "Ġy", "Ġ=", "Ġpaint", ".", "get", "Color", "4", "f", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠSk", "Debug", "f", "(\"", "Yellow", "Ġis", "Ġ%", "d", "%%", "Ġred", ",", "Ġ%", "d", "%%", "Ġgreen", ",", "Ġand", "Ġ%", "d", "%%", "Ġblue", ".", "\\", "n", "\",", "Ġ(", "int", ")", "Ġ(", "y", ".", "f", "R", "Ġ*", "Ġ100", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "int", ")", "Ġ(", "y", ".", "f", "G", "Ġ*", "Ġ100", "),", "Ġ(", "int", ")", "Ġ(", "y", ".", "f", "B", "Ġ*", "Ġ100", "));", "Ċ", "}", "Ċ", "}", "Ġ", "Ġ//", "ĠEND", "ĠF", "ID", "D", "LE", "Ċ"], "dataflow_graph": [["paint", 5, "comesFrom", ["paint"], [4]], ["paint", 9, "comesFrom", ["paint"], [4]], ["y", 12, "comesFrom", ["y"], [8]], ["y", 14, "comesFrom", ["y"], [8]], ["y", 16, "comesFrom", ["y"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::879", "code": "// Exhaustive test for destructors of simple types.\n// PRMS Id: 2744, 3308\n// Build don't link:\n\ntemplate <class T> class A {\n  T q;\npublic:\n  ~A() {\n    q.T::~T();\n    q.~T();\n    (&q)->T::~T();\n    (&q)->~T();\n  }\n};\n\ntypedef char * cp;\n\nint main ()\n{\n  A<int> a;\n  A<cp> b;\n  int i;\n  cp c;\n\n  i.~int();\n  i.int::~int();\n  (&i)->~int();\n  (&i)->int::~int();\n  c.~cp();\n  c.cp::~cp();\n  (&c)->~cp();\n  (&c)->cp::~cp();\n}\n", "code_tokens": ["Ġ//", "ĠEx", "haust", "ive", "Ġtest", "Ġfor", "Ġdestruct", "ors", "Ġof", "Ġsimple", "Ġtypes", ".", "Ċ", "//", "ĠPR", "MS", "ĠId", ":", "Ġ27", "44", ",", "Ġ3", "308", "Ċ", "//", "ĠBuild", "Ġdon", "'t", "Ġlink", ":", "Ċ", "Ċ", "template", "Ġ<", "class", "ĠT", ">", "Ġclass", "ĠA", "Ġ{", "Ċ", "Ġ", "ĠT", "Ġq", ";", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ~", "A", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", ".", "T", "::", "~", "T", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġq", ".", "~", "T", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(&", "q", ")", "->", "T", "::", "~", "T", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(&", "q", ")", "->", "~", "T", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "ty", "ped", "ef", "Ġchar", "Ġ*", "Ġcp", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "ĠA", "<", "int", ">", "Ġa", ";", "Ċ", "Ġ", "ĠA", "<", "cp", ">", "Ġb", ";", "Ċ", "Ġ", "Ġint", "Ġi", ";", "Ċ", "Ġ", "Ġcp", "Ġc", ";", "ĊĊ", "Ġ", "Ġi", ".", "~", "int", "();", "Ċ", "Ġ", "Ġi", ".", "int", "::", "~", "int", "();", "Ċ", "Ġ", "Ġ(&", "i", ")", "->", "~", "int", "();", "Ċ", "Ġ", "Ġ(&", "i", ")", "->", "int", "::", "~", "int", "();", "Ċ", "Ġ", "Ġc", ".", "~", "cp", "();", "Ċ", "Ġ", "Ġc", ".", "cp", "::", "~", "cp", "();", "Ċ", "Ġ", "Ġ(&", "c", ")", "->", "~", "cp", "();", "Ċ", "Ġ", "Ġ(&", "c", ")", "->", "cp", "::", "~", "cp", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 15, "comesFrom", ["i"], [13]], ["i", 17, "comesFrom", ["i"], [13]], ["i", 19, "comesFrom", ["i"], [13]], ["i", 21, "comesFrom", ["i"], [13]], ["c", 23, "comesFrom", ["c"], [14]], ["c", 25, "comesFrom", ["c"], [14]], ["c", 27, "comesFrom", ["c"], [14]], ["c", 29, "comesFrom", ["c"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::880", "code": "// ---------------------------------------------------------------------\n//\n// Copyright (C) 2006 - 2014 by the deal.II authors\n//\n// This file is part of the deal.II library.\n//\n// The deal.II library is free software; you can use it, redistribute\n// it, and/or modify it under the terms of the GNU Lesser General\n// Public License as published by the Free Software Foundation; either\n// version 2.1 of the License, or (at your option) any later version.\n// The full text of the license can be found in the file LICENSE at\n// the top level of the deal.II distribution.\n//\n// ---------------------------------------------------------------------\n\n\n\n// check that VectorTools::project works for QHierarchical elements correctly\n\nchar logname[] = \"output\";\n\n\n#include \"project_common.h\"\n\n\ntemplate <int dim>\nvoid test ()\n{\n  for (unsigned int p=1; p<6-dim; ++p)\n    test_with_2d_deformed_mesh (FE_Q_Hierarchical<dim>(p), p);\n}\n", "code_tokens": ["Ġ//", "Ġ----------------------------------------------------------------", "-----", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2006", "Ġ-", "Ġ2014", "Ġby", "Ġthe", "Ġdeal", ".", "II", "Ġauthors", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġlibrary", ".", "Ċ", "//", "Ċ", "//", "ĠThe", "Ġdeal", ".", "II", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġuse", "Ġit", ",", "Ġredist", "ribute", "Ċ", "//", "Ġit", ",", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "Ċ", "//", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "//", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "ĠThe", "Ġfull", "Ġtext", "Ġof", "Ġthe", "Ġlicense", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "ĠLIC", "ENSE", "Ġat", "Ċ", "//", "Ġthe", "Ġtop", "Ġlevel", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ----------------------------------------------------------------", "-----", "ĊĊ", "Ċ", "Ċ", "//", "Ġcheck", "Ġthat", "ĠVector", "Tools", "::", "project", "Ġworks", "Ġfor", "ĠQ", "H", "ier", "arch", "ical", "Ġelements", "Ġcorrectly", "Ċ", "Ċ", "char", "Ġl", "ogn", "ame", "[]", "Ġ=", "Ġ\"", "output", "\";", "ĊĊ", "Ċ", "#", "include", "Ġ\"", "project", "_", "common", ".", "h", "\"", "ĊĊ", "Ċ", "template", "Ġ<", "int", "Ġdim", ">", "Ċ", "void", "Ġtest", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġint", "Ġp", "=", "1", ";", "Ġp", "<", "6", "-", "dim", ";", "Ġ++", "p", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtest", "_", "with", "_", "2", "d", "_", "de", "formed", "_", "m", "esh", "Ġ(", "FE", "_", "Q", "_", "H", "ier", "arch", "ical", "<", "dim", ">(", "p", "),", "Ġp", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["p", 4, "comesFrom", ["p"], [3]], ["p", 6, "comesFrom", ["p"], [3]], ["p", 9, "comesFrom", ["p"], [3]], ["p", 10, "comesFrom", ["p"], [3]], ["dim", 5, "comesFrom", ["dim"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::881", "code": "//\n// WinCEDriver.cpp\n//\n// $Id: //poco/1.4/Net/testsuite/src/WinCEDriver.cpp#1 $\n//\n// Console-based test driver for Windows CE.\n//\n// Copyright (c) 2004-2010, Applied Informatics Software Engineering GmbH.\n// and Contributors.\n//\n// SPDX-License-Identifier:\tBSL-1.0\n//\n\n\n#include \"CppUnit/TestRunner.h\"\n#include \"NetTestSuite.h\"\n#include <cstdlib>\n\n\nint wmain(int argc, wchar_t* argv[])\n{\n\tstd::vector<std::string> args;\n\tfor (int i = 0; i < argc; ++i)\n\t{\n\t\tchar buffer[1024];\n\t\tstd::wcstombs(buffer, argv[i], sizeof(buffer));\n\t\targs.push_back(std::string(buffer));\n\t}\n\tCppUnit::TestRunner runner;\t\n\trunner.addTest(\"NetTestSuite\", NetTestSuite::suite());\n\treturn runner.run(args) ? 0 : 1;\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "ĠWin", "C", "ED", "river", ".", "cpp", "Ċ", "//", "Ċ", "//", "Ġ$", "Id", ":", "Ġ//", "p", "oco", "/", "1", ".", "4", "/", "Net", "/", "test", "su", "ite", "/", "src", "/", "Win", "C", "ED", "river", ".", "cpp", "#", "1", "Ġ$", "Ċ", "//", "Ċ", "//", "ĠConsole", "-", "based", "Ġtest", "Ġdriver", "Ġfor", "ĠWindows", "ĠCE", ".", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2004", "-", "2010", ",", "ĠApplied", "ĠIn", "format", "ics", "ĠSoftware", "ĠEngineering", "ĠG", "mb", "H", ".", "Ċ", "//", "Ġand", "ĠContribut", "ors", ".", "Ċ", "//", "Ċ", "//", "ĠSPD", "X", "-", "License", "-", "Ident", "ifier", ":", "ĉ", "BS", "L", "-", "1", ".", "0", "Ċ", "//", "ĊĊ", "Ċ", "#", "include", "Ġ\"", "C", "pp", "Unit", "/", "Test", "Runner", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Net", "Test", "Su", "ite", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "ĊĊ", "Ċ", "int", "Ġw", "main", "(", "int", "Ġarg", "c", ",", "Ġw", "char", "_", "t", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "std", "::", "vector", "<", "std", "::", "string", ">", "Ġargs", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġarg", "c", ";", "Ġ++", "i", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "char", "Ġbuffer", "[", "1024", "];", "Ċ", "ĉ", "ĉ", "std", "::", "w", "c", "st", "ombs", "(", "buffer", ",", "Ġarg", "v", "[", "i", "],", "Ġsizeof", "(", "buffer", "));", "Ċ", "ĉ", "ĉ", "args", ".", "push", "_", "back", "(", "std", "::", "string", "(", "buffer", "));", "Ċ", "ĉ", "}", "Ċ", "ĉ", "C", "pp", "Unit", "::", "Test", "Runner", "Ġrunner", ";", "ĉ", "Ċ", "ĉ", "runner", ".", "add", "Test", "(\"", "Net", "Test", "Su", "ite", "\",", "ĠNet", "Test", "Su", "ite", "::", "su", "ite", "());", "Ċ", "ĉ", "return", "Ġrunner", ".", "run", "(", "args", ")", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 7, "comesFrom", ["i"], [4]], ["i", 12, "comesFrom", ["i"], [4]], ["argc", 6, "comesFrom", ["argc"], [1]], ["args", 14, "comesFrom", ["args"], [3]], ["args", 24, "comesFrom", ["args"], [3]], ["runner", 19, "comesFrom", ["runner"], [18]], ["runner", 22, "comesFrom", ["runner"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::882", "code": "#include \"urdf_parser/urdf_parser.h\"\n#include <fstream>\n#include <iostream>\n\nint main(int argc, char** argv){\n  while (true){\n    std::string xml_string;\n    std::fstream xml_file(argv[1], std::fstream::in);\n    while ( xml_file.good() )\n    {\n      std::string line;\n      std::getline( xml_file, line);\n      xml_string += (line + \"\\n\");\n    }\n    xml_file.close();\n\n\n    urdf::parseURDF(xml_string);\n  }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "urd", "f", "_", "parser", "/", "urd", "f", "_", "parser", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", "){", "Ċ", "Ġ", "Ġwhile", "Ġ(", "true", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġxml", "_", "string", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "f", "stream", "Ġxml", "_", "file", "(", "arg", "v", "[", "1", "],", "Ġstd", "::", "f", "stream", "::", "in", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "Ġxml", "_", "file", ".", "good", "()", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġline", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "get", "line", "(", "Ġxml", "_", "file", ",", "Ġline", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġxml", "_", "string", "Ġ+=", "Ġ(", "line", "Ġ+", "Ġ\"\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġxml", "_", "file", ".", "close", "();", "ĊĊ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "urd", "f", "::", "parse", "UR", "DF", "(", "xml", "_", "string", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["line", 10, "comesFrom", ["line"], [7]], ["line", 12, "comesFrom", ["line"], [7]], ["xml_string", 16, "comesFrom", ["xml_string"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::883", "code": "// RUN: %clang_cc1 -fsyntax-only -verify %s\n// expected-no-diagnostics\n\nnamespace PR6382 {\n  int foo()\n  {\n    goto error;\n    {\n      struct BitPacker {\n        BitPacker() {}\n      };\n      BitPacker packer;\n    }\n\n  error:\n    return -1;\n  }\n}\n\nnamespace PR6383 {\n  void test (bool gross)\n  {\n    struct compare_and_set\n    {\n      void operator() (const bool inner, const bool gross = false)\n      {\n        // the code\n      }\n    } compare_and_set2;\n\n    compare_and_set2 (false, gross);\n  }\n}\n\nnamespace Templates {\n  template<int Value>\n  void f() {\n    struct Inner {\n      static int getValue() { return Value; }\n    };\n  }\n}\n", "code_tokens": ["Ġ//", "ĠRUN", ":", "Ġ%", "cl", "ang", "_", "cc", "1", "Ġ-", "f", "sy", "ntax", "-", "only", "Ġ-", "ver", "ify", "Ġ%", "s", "Ċ", "//", "Ġexpected", "-", "no", "-", "diagn", "ostics", "Ċ", "Ċ", "names", "pace", "ĠPR", "6", "382", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġfoo", "()", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgoto", "Ġerror", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstruct", "ĠBit", "P", "acker", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠBit", "P", "acker", "()", "Ġ{}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠBit", "P", "acker", "Ġpack", "er", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġerror", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "ĠPR", "6", "383", "Ġ{", "Ċ", "Ġ", "Ġvoid", "Ġtest", "Ġ(", "bool", "Ġgross", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstruct", "Ġcompare", "_", "and", "_", "set", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġoperator", "()", "Ġ(", "const", "Ġbool", "Ġinner", ",", "Ġconst", "Ġbool", "Ġgross", "Ġ=", "Ġfalse", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġthe", "Ġcode", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġcompare", "_", "and", "_", "set", "2", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġcompare", "_", "and", "_", "set", "2", "Ġ(", "false", ",", "Ġgross", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "ĠTem", "plates", "Ġ{", "Ċ", "Ġ", "Ġtemplate", "<", "int", "ĠValue", ">", "Ċ", "Ġ", "Ġvoid", "Ġf", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstruct", "ĠInner", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġint", "Ġget", "Value", "()", "Ġ{", "Ġreturn", "ĠValue", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ};", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["gross", 6, "comesFrom", ["gross"], [4]], ["gross", 9, "comesFrom", ["gross"], [4]], ["compare_and_set2", 8, "comesFrom", ["compare_and_set2"], [7]], ["Value", 13, "comesFrom", ["Value"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::884", "code": "//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n\n// <complex>\n\n// template<> class complex<float>\n// {\n// public:\n//     explicit constexpr complex(const complex<long double>&);\n// };\n\n#include <complex>\n#include <cassert>\n\nint main()\n{\n    const std::complex<long double> cd(2.5, 3.5);\n    std::complex<float> cf = cd;\n    assert(cf.real() == cd.real());\n    assert(cf.imag() == cd.imag());\n}\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠThe", "ĠLL", "VM", "ĠComp", "iler", "ĠInfrastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUniversity", "Ġof", "ĠIllinois", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLIC", "ENSE", ".", "T", "XT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "Ċ", "//", "Ġ<", "complex", ">", "Ċ", "Ċ", "//", "Ġtemplate", "<", ">", "Ġclass", "Ġcomplex", "<", "float", ">", "Ċ", "//", "Ġ{", "Ċ", "//", "Ġpublic", ":", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġexplicit", "Ġconst", "expr", "Ġcomplex", "(", "const", "Ġcomplex", "<", "long", "Ġdouble", ">", "&", ");", "Ċ", "//", "Ġ};", "Ċ", "Ċ", "#", "include", "Ġ<", "complex", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġstd", "::", "complex", "<", "long", "Ġdouble", ">", "Ġcd", "(", "2", ".", "5", ",", "Ġ3", ".", "5", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "complex", "<", "float", ">", "Ġcf", "Ġ=", "Ġcd", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "cf", ".", "real", "()", "Ġ==", "Ġcd", ".", "real", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġassert", "(", "cf", ".", "imag", "()", "Ġ==", "Ġcd", ".", "imag", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["cf", 5, "comesFrom", ["cf"], [2]], ["cf", 10, "comesFrom", ["cf"], [2]], ["cd", 7, "comesFrom", ["cd"], [3]], ["cd", 12, "comesFrom", ["cd"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::885", "code": "/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\n#include <Box2D/Common/b2Settings.h>\r\n#include <cstdlib>\r\n#include <cstdio>\r\n#include <cstdarg>\r\n\r\nb2Version b2_version = {2, 2, 1};\r\n\r\n// Memory allocators. Modify these to use your own allocator.\r\nvoid* b2Alloc(int32 size)\r\n{\r\n\treturn malloc(size);\r\n}\r\n\r\nvoid b2Free(void* mem)\r\n{\r\n\tfree(mem);\r\n}\r\n\r\n// You can modify this to use your logging facility.\r\nvoid b2Log(const char* string, ...)\r\n{\r\n\tva_list args;\r\n\tva_start(args, string);\r\n\tvprintf(string, args);\r\n\tva_end(args);\r\n}", "code_tokens": ["Ġ/*", "č", "Ċ", "*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2006", "-", "2009", "ĠErin", "ĠC", "atto", "Ġhttp", "://", "www", ".", "box", "2", "d", ".", "org", "č", "Ċ", "*", "č", "Ċ", "*", "ĠThis", "Ġsoftware", "Ġis", "Ġprovided", "Ġ'", "as", "-", "is", "',", "Ġwithout", "Ġany", "Ġexpress", "Ġor", "Ġimplied", "č", "Ċ", "*", "Ġwarranty", ".", "Ġ", "ĠIn", "Ġno", "Ġevent", "Ġwill", "Ġthe", "Ġauthors", "Ġbe", "Ġheld", "Ġliable", "Ġfor", "Ġany", "Ġdamages", "č", "Ċ", "*", "Ġarising", "Ġfrom", "Ġthe", "Ġuse", "Ġof", "Ġthis", "Ġsoftware", ".", "č", "Ċ", "*", "ĠPer", "mission", "Ġis", "Ġgranted", "Ġto", "Ġanyone", "Ġto", "Ġuse", "Ġthis", "Ġsoftware", "Ġfor", "Ġany", "Ġpurpose", ",", "č", "Ċ", "*", "Ġincluding", "Ġcommercial", "Ġapplications", ",", "Ġand", "Ġto", "Ġalter", "Ġit", "Ġand", "Ġredist", "ribute", "Ġit", "č", "Ċ", "*", "Ġfreely", ",", "Ġsubject", "Ġto", "Ġthe", "Ġfollowing", "Ġrestrictions", ":", "č", "Ċ", "*", "Ġ1", ".", "ĠThe", "Ġorigin", "Ġof", "Ġthis", "Ġsoftware", "Ġmust", "Ġnot", "Ġbe", "Ġmisrepresent", "ed", ";", "Ġyou", "Ġmust", "Ġnot", "č", "Ċ", "*", "Ġclaim", "Ġthat", "Ġyou", "Ġwrote", "Ġthe", "Ġoriginal", "Ġsoftware", ".", "ĠIf", "Ġyou", "Ġuse", "Ġthis", "Ġsoftware", "č", "Ċ", "*", "Ġin", "Ġa", "Ġproduct", ",", "Ġan", "Ġacknowledgment", "Ġin", "Ġthe", "Ġproduct", "Ġdocumentation", "Ġwould", "Ġbe", "č", "Ċ", "*", "Ġappreciated", "Ġbut", "Ġis", "Ġnot", "Ġrequired", ".", "č", "Ċ", "*", "Ġ2", ".", "ĠAl", "tered", "Ġsource", "Ġversions", "Ġmust", "Ġbe", "Ġplainly", "Ġmarked", "Ġas", "Ġsuch", ",", "Ġand", "Ġmust", "Ġnot", "Ġbe", "č", "Ċ", "*", "Ġmisrepresent", "ed", "Ġas", "Ġbeing", "Ġthe", "Ġoriginal", "Ġsoftware", ".", "č", "Ċ", "*", "Ġ3", ".", "ĠThis", "Ġnotice", "Ġmay", "Ġnot", "Ġbe", "Ġremoved", "Ġor", "Ġaltered", "Ġfrom", "Ġany", "Ġsource", "Ġdistribution", ".", "č", "Ċ", "*/", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "Box", "2", "D", "/", "Common", "/", "b", "2", "Settings", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "arg", ">", "č", "Ċ", "č", "Ċ", "b", "2", "Version", "Ġb", "2", "_", "version", "Ġ=", "Ġ{", "2", ",", "Ġ2", ",", "Ġ1", "};", "č", "Ċ", "č", "Ċ", "//", "ĠMemory", "Ġalloc", "ators", ".", "ĠMod", "ify", "Ġthese", "Ġto", "Ġuse", "Ġyour", "Ġown", "Ġalloc", "ator", ".", "č", "Ċ", "void", "*", "Ġb", "2", "All", "oc", "(", "int", "32", "Ġsize", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġmall", "oc", "(", "size", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "Ġb", "2", "Free", "(", "void", "*", "Ġmem", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "free", "(", "mem", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "//", "ĠYou", "Ġcan", "Ġmodify", "Ġthis", "Ġto", "Ġuse", "Ġyour", "Ġlogging", "Ġfacility", ".", "č", "Ċ", "void", "Ġb", "2", "Log", "(", "const", "Ġchar", "*", "Ġstring", ",", "Ġ...", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "va", "_", "list", "Ġargs", ";", "č", "Ċ", "ĉ", "va", "_", "start", "(", "args", ",", "Ġstring", ");", "č", "Ċ", "ĉ", "v", "printf", "(", "string", ",", "Ġargs", ");", "č", "Ċ", "ĉ", "va", "_", "end", "(", "args", ");", "č", "Ċ", "}"], "dataflow_graph": [["size", 4, "comesFrom", ["size"], [2]], ["args", 13, "comesFrom", ["args"], [11]], ["args", 17, "comesFrom", ["args"], [11]], ["args", 19, "comesFrom", ["args"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::886", "code": "#include <vector>\n#include <map>\n\nusing namespace std;\n\n\nclass Solution {\npublic:\n    unordered_map<int,int> counter;\n\n    int firstMissingPositive(vector<int>& nums) {\n        for(int i = 0; i < (int) nums.size(); i++){\n            counter[nums[i]] = 1;\n        }\n        int limit = nums.size() + 30;\n        for(int i = 1; i < limit; i++){\n            if (counter.count(i) == 0){\n                return i;\n            }\n        }\n    }\n};", "code_tokens": ["Ġ#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "map", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "ĊĊ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġun", "ordered", "_", "map", "<", "int", ",", "int", ">", "Ġcounter", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġfirst", "Missing", "Pos", "itive", "(", "vector", "<", "int", ">", "&", "Ġnum", "s", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ(", "int", ")", "Ġnum", "s", ".", "size", "();", "Ġi", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcounter", "[", "n", "ums", "[", "i", "]]", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlimit", "Ġ=", "Ġnum", "s", ".", "size", "()", "Ġ+", "Ġ30", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ1", ";", "Ġi", "Ġ<", "Ġlimit", ";", "Ġi", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "counter", ".", "count", "(", "i", ")", "Ġ==", "Ġ0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 8, "comesFrom", ["i"], [4]], ["i", 11, "comesFrom", ["i"], [4]], ["i", 16, "comesFrom", ["i"], [15]], ["i", 18, "comesFrom", ["i"], [15]], ["i", 21, "comesFrom", ["i"], [15]], ["i", 22, "comesFrom", ["i"], [15]], ["limit", 17, "comesFrom", ["limit"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::887", "code": "#include <limits.h>\n#include <vector>\n\nusing namespace std;\n\nclass Solution {\n public:\n  int calculateMinimumHP(vector<vector<int>>& dungeon) {\n    if (dungeon.empty()) {\n      return -1;\n    }\n    int m = dungeon.size(), n = dungeon[0].size();\n    vector<int> dp(n + 1, INT_MAX);\n    dp[n - 1] = 1;\n    for (int i = m - 1; i >= 0; i--) {\n      for (int j = n - 1; j >= 0; j--) {\n        dp[j] = max(1, min(dp[j], dp[j + 1]) - dungeon[i][j]);\n      }\n    }\n    return dp[0];\n  }\n};\n", "code_tokens": ["Ġ#", "include", "Ġ<", "limits", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "Ġpublic", ":", "Ċ", "Ġ", "Ġint", "Ġcalculate", "Minimum", "HP", "(", "vector", "<", "vector", "<", "int", ">>", "&", "Ġdungeon", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "d", "un", "geon", ".", "empty", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", "Ġ=", "Ġdungeon", ".", "size", "(),", "Ġn", "Ġ=", "Ġdungeon", "[", "0", "].", "size", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġd", "p", "(", "n", "Ġ+", "Ġ1", ",", "ĠINT", "_", "MAX", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "n", "Ġ-", "Ġ1", "]", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġm", "Ġ-", "Ġ1", ";", "Ġi", "Ġ>=", "Ġ0", ";", "Ġi", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġn", "Ġ-", "Ġ1", ";", "Ġj", "Ġ>=", "Ġ0", ";", "Ġj", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", "[", "j", "]", "Ġ=", "Ġmax", "(", "1", ",", "Ġmin", "(", "dp", "[", "j", "],", "Ġd", "p", "[", "j", "Ġ+", "Ġ1", "])", "Ġ-", "Ġdungeon", "[", "i", "][", "j", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġd", "p", "[", "0", "];", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["n", 12, "comesFrom", ["n"], [8]], ["n", 15, "comesFrom", ["n"], [8]], ["n", 21, "comesFrom", ["n"], [8]], ["dp", 14, "comesFrom", ["dp"], [11]], ["dp", 24, "comesFrom", ["dp"], [11]], ["dp", 28, "comesFrom", ["dp"], [11]], ["dp", 30, "comesFrom", ["dp"], [11]], ["dp", 35, "comesFrom", ["dp"], [11]], ["m", 17, "comesFrom", ["m"], [5]], ["i", 18, "comesFrom", ["i"], [16]], ["i", 19, "comesFrom", ["i"], [16]], ["i", 33, "comesFrom", ["i"], [16]], ["j", 22, "comesFrom", ["j"], [20]], ["j", 23, "comesFrom", ["j"], [20]], ["j", 25, "comesFrom", ["j"], [20]], ["j", 29, "comesFrom", ["j"], [20]], ["j", 31, "comesFrom", ["j"], [20]], ["j", 34, "comesFrom", ["j"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::888", "code": "#include \"Index.h\"\n\n#include \"IndexManager.h\"\n\n#include <stdio.h>\n#include \"constants.h\"\n\nvoid Index::init()\n{\n    m_indexManager = 0;\n    m_countIterators = 0;\n}\n\nvoid Index::clear()\n{\n    for (int i = 0; i<m_countIterators; ++i)\n        m_indexManager->closeIterator(m_iterators[i], false, true);\n    m_countIterators = 0;\n}\n\nErrorCode Index::addIterator(Iterator* it)\n{\n    if (m_countIterators == MAX_IT_IDX)\n    {\n        printf(\"beyond max number of iterators per index handle\\n\");\n        fflush(stdout);\n        return kErrorOutOfMemory;\n    }\n\n    m_iterators[m_countIterators] = it;\n    m_countIterators++;\n\n    return kOk;\n}\n\nvoid Index::removeIterator(Iterator* it)\n{\n    int i = 0;\n    while (i<m_countIterators && m_iterators[i]!=it) i++;\n    for (int j = i; j< m_countIterators-1;++j) m_iterators[j] = m_iterators[j+1];\n    m_countIterators --;\n}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Index", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Index", "Manager", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "const", "ants", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠIndex", "::", "init", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "index", "Manager", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "count", "Iter", "ators", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠIndex", "::", "clear", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "<", "m", "_", "count", "Iter", "ators", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "index", "Manager", "->", "close", "Iterator", "(", "m", "_", "iter", "ators", "[", "i", "],", "Ġfalse", ",", "Ġtrue", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "count", "Iter", "ators", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Error", "Code", "ĠIndex", "::", "add", "Iterator", "(", "Iterator", "*", "Ġit", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "m", "_", "count", "Iter", "ators", "Ġ==", "ĠMAX", "_", "IT", "_", "ID", "X", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "be", "yond", "Ġmax", "Ġnumber", "Ġof", "Ġiter", "ators", "Ġper", "Ġindex", "Ġhandle", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġf", "flush", "(", "std", "out", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġk", "Error", "Out", "Of", "Memory", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "iter", "ators", "[", "m", "_", "count", "Iter", "ators", "]", "Ġ=", "Ġit", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "count", "Iter", "ators", "++;", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġk", "Ok", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠIndex", "::", "remove", "Iterator", "(", "Iterator", "*", "Ġit", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "i", "<", "m", "_", "count", "Iter", "ators", "Ġ&&", "Ġm", "_", "iter", "ators", "[", "i", "]", "!", "=", "it", ")", "Ġi", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġj", "Ġ=", "Ġi", ";", "Ġj", "<", "Ġm", "_", "count", "Iter", "ators", "-", "1", ";", "++", "j", ")", "Ġm", "_", "iter", "ators", "[", "j", "]", "Ġ=", "Ġm", "_", "iter", "ators", "[", "j", "+", "1", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "count", "Iter", "ators", "Ġ--", ";", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 7, "comesFrom", ["i"], [4]], ["i", 11, "comesFrom", ["i"], [4]], ["i", 29, "comesFrom", ["i"], [28]], ["i", 32, "comesFrom", ["i"], [28]], ["i", 34, "comesFrom", ["i"], [28]], ["m_countIterators", 6, "comesFrom", ["m_countIterators"], [2]], ["m_countIterators", 15, "comesFrom", ["m_countIterators"], [12]], ["m_countIterators", 22, "comesFrom", ["m_countIterators"], [12]], ["m_countIterators", 24, "comesFrom", ["m_countIterators"], [12]], ["m_countIterators", 30, "comesFrom", ["m_countIterators"], [12]], ["m_countIterators", 38, "comesFrom", ["m_countIterators"], [12]], ["m_countIterators", 44, "comesFrom", ["m_countIterators"], [12]], ["m_indexManager", 8, "comesFrom", ["m_indexManager"], [1]], ["j", 37, "comesFrom", ["j"], [35]], ["j", 39, "comesFrom", ["j"], [35]], ["j", 41, "comesFrom", ["j"], [35]], ["j", 43, "comesFrom", ["j"], [35]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::889", "code": "#include <iostream>\n#include <vector>\n#include <climits>\nusing namespace std;\n\nstruct Solution {\n    int myAtoi(string str) {\n      if (str.size() < 1) return 0;\n      size_t i = 0;\n      while(str[i] == ' ') ++i;\n\n      int sgn = 1;\n      if (str[i] == '-') ++i, sgn = -1;\n      else if (str[i] == '+') ++i;\n\n      long ret = 0;\n      while (i < str.size()) {\n        char v = str[i];\n        if (v < '0' || v > '9') return ret;\n        v -= '0';\n        ret = ret * 10 + sgn * v;\n        if (ret != (int)ret) return sgn == 1 ? INT_MAX : INT_MIN;\n        ++i;\n      }\n\n      return ret;\n    }\n};\n\nint main(int argc, char *argv[]) {\n  Solution s;\n  printf(\"%d\\n\", s.myAtoi(\"    10522545459\"));\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "cl", "im", "its", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "struct", "ĠSolution", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġmy", "A", "to", "i", "(", "string", "Ġstr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "str", ".", "size", "()", "Ġ<", "Ġ1", ")", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsize", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "str", "[", "i", "]", "Ġ==", "Ġ'", "Ġ'", ")", "Ġ++", "i", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġs", "gn", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "str", "[", "i", "]", "Ġ==", "Ġ'", "-", "')", "Ġ++", "i", ",", "Ġs", "gn", "Ġ=", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "str", "[", "i", "]", "Ġ==", "Ġ'", "+", "')", "Ġ++", "i", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġret", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "i", "Ġ<", "Ġstr", ".", "size", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġv", "Ġ=", "Ġstr", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "v", "Ġ<", "Ġ'", "0", "'", "Ġ||", "Ġv", "Ġ>", "Ġ'", "9", "')", "Ġreturn", "Ġret", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġv", "Ġ-=", "Ġ'", "0", "';", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġret", "Ġ=", "Ġret", "Ġ*", "Ġ10", "Ġ+", "Ġs", "gn", "Ġ*", "Ġv", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "ret", "Ġ!=", "Ġ(", "int", ")", "ret", ")", "Ġreturn", "Ġs", "gn", "Ġ==", "Ġ1", "Ġ?", "ĠINT", "_", "MAX", "Ġ:", "ĠINT", "_", "MIN", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "i", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ġ{", "Ċ", "Ġ", "ĠSolution", "Ġs", ";", "Ċ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "Ġs", ".", "my", "A", "to", "i", "(\"", "Ġ", "Ġ", "Ġ", "Ġ10", "52", "25", "45", "459", "\")", ");", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["str", 3, "comesFrom", ["str"], [2]], ["str", 6, "comesFrom", ["str"], [2]], ["str", 10, "comesFrom", ["str"], [2]], ["str", 14, "comesFrom", ["str"], [2]], ["str", 19, "comesFrom", ["str"], [2]], ["str", 22, "comesFrom", ["str"], [2]], ["i", 7, "comesFrom", ["i"], [5]], ["i", 8, "comesFrom", ["i"], [5]], ["i", 11, "comesFrom", ["i"], [5]], ["i", 12, "comesFrom", ["i"], [5]], ["i", 15, "comesFrom", ["i"], [5]], ["i", 16, "comesFrom", ["i"], [5]], ["i", 18, "comesFrom", ["i"], [5]], ["i", 23, "comesFrom", ["i"], [5]], ["i", 37, "comesFrom", ["i"], [5]], ["v", 24, "comesFrom", ["v"], [21]], ["v", 25, "comesFrom", ["v"], [21]], ["v", 31, "comesFrom", ["v"], [27]], ["ret", 26, "comesFrom", ["ret"], [17]], ["ret", 29, "comesFrom", ["ret"], [28]], ["ret", 32, "comesFrom", ["ret"], [28]], ["ret", 33, "comesFrom", ["ret"], [28]], ["ret", 38, "comesFrom", ["ret"], [28]], ["sgn", 30, "comesFrom", ["sgn"], [13]], ["sgn", 34, "comesFrom", ["sgn"], [13]], ["s", 44, "comesFrom", ["s"], [42]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::890", "code": "#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\n#include <doctest.h>\n\n#include <iostream>\n#include <sstream>\n#include <string>\n\n#include <duck/variant.h>\n\nstruct blah {};\ninline std::ostream & operator<< (std::ostream & os, const blah &) {\n\treturn os << \"blah!\";\n}\n\nstruct ToStringVisitor {\n\ttemplate <typename T> std::string operator() (const T & t) const {\n\t\tstd::ostringstream oss;\n\t\toss << t;\n\t\treturn oss.str ();\n\t}\n};\n\nTEST_CASE (\"test\") {\n\tusing Var = duck::Variant::Static<bool, int, blah, std::string>;\n\tCHECK (Var::index_for_type<bool> () == 0);\n\tCHECK (Var::index_for_type<int> () == 1);\n\tCHECK (Var::index_for_type<blah> () == 2);\n\n\tVar a{blah{}};\n\tVar b{32};\n\tVar c{duck::in_place_type_t<std::string>{}, \"hello\"};\n\tauto y = b.visit (ToStringVisitor{});\n\tCHECK (y == \"32\");\n\tauto z = c.visit (ToStringVisitor{});\n\tCHECK (z == \"hello\");\n}\n\nTEST_CASE (\"dynamic\") {\n\t// WIP\n\tusing MyVariant = duck::Variant::Dynamic<sizeof (long), alignof (long)>;\n\tMyVariant z{42};\n}\n", "code_tokens": ["Ġ#", "define", "ĠDO", "CT", "EST", "_", "CON", "FIG", "_", "IM", "PLE", "MENT", "_", "W", "ITH", "_", "MA", "IN", "Ċ", "#", "include", "Ġ<", "do", "ct", "est", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "du", "ck", "/", "vari", "ant", ".", "h", ">", "Ċ", "Ċ", "struct", "Ġblah", "Ġ{", "};", "Ċ", "inline", "Ġstd", "::", "ost", "ream", "Ġ&", "Ġoperator", "<<", "Ġ(", "std", "::", "ost", "ream", "Ġ&", "Ġos", ",", "Ġconst", "Ġblah", "Ġ&", ")", "Ġ{", "Ċ", "ĉ", "return", "Ġos", "Ġ<<", "Ġ\"", "bl", "ah", "!\"", ";", "Ċ", "}", "Ċ", "Ċ", "struct", "ĠTo", "String", "Vis", "itor", "Ġ{", "Ċ", "ĉ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ġstd", "::", "string", "Ġoperator", "()", "Ġ(", "const", "ĠT", "Ġ&", "Ġt", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "std", "::", "ost", "ring", "stream", "Ġo", "ss", ";", "Ċ", "ĉ", "ĉ", "oss", "Ġ<<", "Ġt", ";", "Ċ", "ĉ", "ĉ", "return", "Ġo", "ss", ".", "str", "Ġ();", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "C", "ASE", "Ġ(\"", "test", "\")", "Ġ{", "Ċ", "ĉ", "using", "ĠVar", "Ġ=", "Ġduck", "::", "Vari", "ant", "::", "Static", "<", "bool", ",", "Ġint", ",", "Ġblah", ",", "Ġstd", "::", "string", ">", ";", "Ċ", "ĉ", "CHECK", "Ġ(", "Var", "::", "index", "_", "for", "_", "type", "<", "bool", ">", "Ġ()", "Ġ==", "Ġ0", ");", "Ċ", "ĉ", "CHECK", "Ġ(", "Var", "::", "index", "_", "for", "_", "type", "<", "int", ">", "Ġ()", "Ġ==", "Ġ1", ");", "Ċ", "ĉ", "CHECK", "Ġ(", "Var", "::", "index", "_", "for", "_", "type", "<", "bl", "ah", ">", "Ġ()", "Ġ==", "Ġ2", ");", "ĊĊ", "ĉ", "Var", "Ġa", "{", "bl", "ah", "{", "}}", ";", "Ċ", "ĉ", "Var", "Ġb", "{", "32", "};", "Ċ", "ĉ", "Var", "Ġc", "{", "du", "ck", "::", "in", "_", "place", "_", "type", "_", "t", "<", "std", "::", "string", ">", "{", "},", "Ġ\"", "hello", "\"", "};", "Ċ", "ĉ", "auto", "Ġy", "Ġ=", "Ġb", ".", "vis", "it", "Ġ(", "To", "String", "Vis", "itor", "{", "});", "Ċ", "ĉ", "CHECK", "Ġ(", "y", "Ġ==", "Ġ\"", "32", "\");", "Ċ", "ĉ", "auto", "Ġz", "Ġ=", "Ġc", ".", "vis", "it", "Ġ(", "To", "String", "Vis", "itor", "{", "});", "Ċ", "ĉ", "CHECK", "Ġ(", "z", "Ġ==", "Ġ\"", "hello", "\");", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "_", "C", "ASE", "Ġ(\"", "d", "ynamic", "\")", "Ġ{", "Ċ", "ĉ", "//", "ĠW", "IP", "Ċ", "ĉ", "using", "ĠMy", "Vari", "ant", "Ġ=", "Ġduck", "::", "Vari", "ant", "::", "Dynamic", "<", "size", "of", "Ġ(", "long", "),", "Ġalign", "of", "Ġ(", "long", ")", ">", ";", "Ċ", "ĉ", "My", "Vari", "ant", "Ġz", "{", "42", "};", "Ċ", "}", "Ċ"], "dataflow_graph": [["oss", 5, "comesFrom", ["oss"], [4]], ["oss", 7, "comesFrom", ["oss"], [4]], ["b", 20, "comesFrom", ["b"], [17]], ["y", 23, "comesFrom", ["y"], [19]], ["c", 25, "comesFrom", ["c"], [18]], ["z", 28, "comesFrom", ["z"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::891", "code": "#include <stdio.h>\n#include  <youtube/YouTube.h>\n\nbool must_run = true;\n\nvoid sh(int signum);\n\nint main() {\n  YouTubeClientIPC yt_client(\"/tmp/nonexisting_socket\", false);\n  \n  signal(SIGINT, sh);\n\n  YouTubeVideo video;\n  video.filename = rx_to_data_path(\"test.mov\");\n  video.datapath = false;\n  video.title = \"automated\";\n  yt_client.addVideoToUploadQueue(video);\n\n  while(must_run) {\n    yt_client.update();\n  }\n\n  return EXIT_SUCCESS;\n}\n\nvoid sh(int signum) {\n  RX_VERBOSE(\"Received signal; stopping\");\n  must_run = false;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ", "Ġ<", "youtube", "/", "YouTube", ".", "h", ">", "Ċ", "Ċ", "bool", "Ġmust", "_", "run", "Ġ=", "Ġtrue", ";", "Ċ", "Ċ", "void", "Ġsh", "(", "int", "Ġsign", "um", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "ĠYouTube", "Client", "IP", "C", "Ġy", "t", "_", "client", "(\"", "/", "tmp", "/", "none", "x", "isting", "_", "socket", "\",", "Ġfalse", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġsignal", "(", "S", "IG", "INT", ",", "Ġsh", ");", "ĊĊ", "Ġ", "ĠYouTube", "Video", "Ġvideo", ";", "Ċ", "Ġ", "Ġvideo", ".", "filename", "Ġ=", "Ġr", "x", "_", "to", "_", "data", "_", "path", "(\"", "test", ".", "m", "ov", "\");", "Ċ", "Ġ", "Ġvideo", ".", "dat", "ap", "ath", "Ġ=", "Ġfalse", ";", "Ċ", "Ġ", "Ġvideo", ".", "title", "Ġ=", "Ġ\"", "aut", "om", "ated", "\";", "Ċ", "Ġ", "Ġy", "t", "_", "client", ".", "add", "Video", "To", "Upload", "Queue", "(", "video", ");", "ĊĊ", "Ġ", "Ġwhile", "(", "must", "_", "run", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġy", "t", "_", "client", ".", "update", "();", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsh", "(", "int", "Ġsign", "um", ")", "Ġ{", "Ċ", "Ġ", "ĠRX", "_", "VER", "B", "OSE", "(\"", "Re", "ceived", "Ġsignal", ";", "Ġstopping", "\");", "Ċ", "Ġ", "Ġmust", "_", "run", "Ġ=", "Ġfalse", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["video", 9, "comesFrom", ["video"], [8]], ["video", 12, "comesFrom", ["video"], [8]], ["video", 14, "comesFrom", ["video"], [8]], ["video", 18, "comesFrom", ["video"], [8]], ["yt_client", 16, "comesFrom", ["yt_client"], [4]], ["yt_client", 20, "comesFrom", ["yt_client"], [4]], ["must_run", 19, "comesFrom", ["must_run"], [0]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::892", "code": "#include \"AudioContext.h\"\n#include \"AudioDestinationNode_T3DAC.h\"\n#include <Arduino.h>\n\nAudioDestinationNode_T3DAC t3dac_destinationNode;\n\nAudioContext::AudioContext() {\n\tdestination_ptr = &t3dac_destinationNode;\t\n}\n\nAudioDestinationNode* AudioContext::destination() {\n\treturn destination_ptr;\n}\n\nint AudioContext::sample_rate() {\n\treturn \tdestination_ptr->sample_rate();\n}\n\nuint64_t AudioContext::sample_clock() {\n\treturn \tdestination_ptr->sample_clock();\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Audio", "Context", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Audio", "Dest", "ination", "Node", "_", "T", "3", "D", "AC", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Ar", "duino", ".", "h", ">", "Ċ", "Ċ", "Audio", "Dest", "ination", "Node", "_", "T", "3", "D", "AC", "Ġt", "3", "d", "ac", "_", "dest", "ination", "Node", ";", "Ċ", "Ċ", "Audio", "Context", "::", "Audio", "Context", "()", "Ġ{", "Ċ", "ĉ", "dest", "ination", "_", "ptr", "Ġ=", "Ġ&", "t", "3", "d", "ac", "_", "dest", "ination", "Node", ";", "ĉ", "Ċ", "}", "Ċ", "Ċ", "Audio", "Dest", "ination", "Node", "*", "ĠAudio", "Context", "::", "dest", "ination", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġdestination", "_", "ptr", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠAudio", "Context", "::", "sample", "_", "rate", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġ", "ĉ", "dest", "ination", "_", "ptr", "->", "sample", "_", "rate", "();", "Ċ", "}", "Ċ", "Ċ", "uint", "64", "_", "t", "ĠAudio", "Context", "::", "sample", "_", "clock", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġ", "ĉ", "dest", "ination", "_", "ptr", "->", "sample", "_", "clock", "();", "Ċ", "}"], "dataflow_graph": [["t3dac_destinationNode", 3, "comesFrom", ["t3dac_destinationNode"], [0]], ["destination_ptr", 5, "comesFrom", ["destination_ptr"], [2]], ["destination_ptr", 7, "comesFrom", ["destination_ptr"], [2]], ["destination_ptr", 10, "comesFrom", ["destination_ptr"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::893", "code": "\n\n\nDouble_t detectorResolution(Double_t *x, Double_t *par){\n\tDouble_t resval = 0.0;\n\tif (x[0]>0){\n\t\tresval\t= TMath::Sqrt( x[0] / ( 1.0 + x[0] ) );\n\t\treturn ( par[0] / resval );\n\t} else {\n\t\treturn 0.0;\n\t}\n}\n\n\nvoid detRes(){\n\n\tTFile * f = new TFile( \"qa.root\" );\n\n\tTH1D* sigma = new TH1D( \"sigma\", \"sigma 0\", 38, 0.5, 39.5 );\n\n\tfor ( int i = 0; i < 38; i++){\n\n\t\tstringstream sstr;\n\t\tsstr << \"channel\" << i;\n\t\tf->cd( sstr.str().c_str() );\n\n\t\tTF1 * g = new TF1( \"g\", \"gaus\", -1.0, 1.0 );\n\n\t\tit5cutAvgN->FitSlicesY(g, 0, -1, 10);\n\n\n\t\tTH1D* sig = (TH1D*)it5cutAvgN_2->Clone(\"sigma\");\n\t\t\n\t\tTF1 * fr = new TF1( \"fr\", detectorResolution, 0, 19, 1);\n\n\t\tsig->Fit( \"fr\", \"QR\" );\n\n\t\tsig->Draw(\"P\");\n\n\t\tcout << \"res: \" << fr->GetParameter( 0 ) << endl;\n\t\tsigma->SetBinContent( i+1, fr->GetParameter( 0 ) );\n\t}\n\n\tsigma ->Draw(\"HP\");\n\n\n\n\n\n}", "code_tokens": ["ĊĊ", "Ċ", "Double", "_", "t", "Ġdetector", "Res", "olution", "(", "Double", "_", "t", "Ġ*", "x", ",", "ĠDouble", "_", "t", "Ġ*", "par", "){", "Ċ", "ĉ", "Double", "_", "t", "Ġres", "val", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "ĉ", "if", "Ġ(", "x", "[", "0", "]", ">", "0", "){", "Ċ", "ĉ", "ĉ", "res", "val", "ĉ", "=", "ĠTM", "ath", "::", "S", "q", "rt", "(", "Ġx", "[", "0", "]", "Ġ/", "Ġ(", "Ġ1", ".", "0", "Ġ+", "Ġx", "[", "0", "]", "Ġ)", "Ġ);", "Ċ", "ĉ", "ĉ", "return", "Ġ(", "Ġpar", "[", "0", "]", "Ġ/", "Ġres", "val", "Ġ);", "Ċ", "ĉ", "}", "Ġelse", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġ0", ".", "0", ";", "Ċ", "ĉ", "}", "Ċ", "}", "ĊĊ", "Ċ", "void", "Ġdet", "Res", "(){", "ĊĊ", "ĉ", "T", "File", "Ġ*", "Ġf", "Ġ=", "Ġnew", "ĠT", "File", "(", "Ġ\"", "qa", ".", "root", "\"", "Ġ);", "ĊĊ", "ĉ", "TH", "1", "D", "*", "Ġs", "igma", "Ġ=", "Ġnew", "ĠTH", "1", "D", "(", "Ġ\"", "s", "igma", "\",", "Ġ\"", "s", "igma", "Ġ0", "\",", "Ġ38", ",", "Ġ0", ".", "5", ",", "Ġ39", ".", "5", "Ġ);", "ĊĊ", "ĉ", "for", "Ġ(", "Ġint", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġ38", ";", "Ġi", "++", "){", "ĊĊ", "ĉ", "ĉ", "string", "stream", "Ġs", "str", ";", "Ċ", "ĉ", "ĉ", "s", "str", "Ġ<<", "Ġ\"", "channel", "\"", "Ġ<<", "Ġi", ";", "Ċ", "ĉ", "ĉ", "f", "->", "cd", "(", "Ġs", "str", ".", "str", "().", "c", "_", "str", "()", "Ġ);", "ĊĊ", "ĉ", "ĉ", "TF", "1", "Ġ*", "Ġg", "Ġ=", "Ġnew", "ĠTF", "1", "(", "Ġ\"", "g", "\",", "Ġ\"", "ga", "us", "\",", "Ġ-", "1", ".", "0", ",", "Ġ1", ".", "0", "Ġ);", "ĊĊ", "ĉ", "ĉ", "it", "5", "cut", "Avg", "N", "->", "Fit", "S", "lic", "es", "Y", "(", "g", ",", "Ġ0", ",", "Ġ-", "1", ",", "Ġ10", ");", "ĊĊ", "Ċ", "ĉ", "ĉ", "TH", "1", "D", "*", "Ġsig", "Ġ=", "Ġ(", "TH", "1", "D", "*)", "it", "5", "cut", "Avg", "N", "_", "2", "->", "Cl", "one", "(\"", "s", "igma", "\");", "Ċ", "ĉ", "ĉ", "Ċ", "ĉ", "ĉ", "TF", "1", "Ġ*", "Ġfr", "Ġ=", "Ġnew", "ĠTF", "1", "(", "Ġ\"", "fr", "\",", "Ġdetector", "Res", "olution", ",", "Ġ0", ",", "Ġ19", ",", "Ġ1", ");", "ĊĊ", "ĉ", "ĉ", "s", "ig", "->", "Fit", "(", "Ġ\"", "fr", "\",", "Ġ\"", "Q", "R", "\"", "Ġ);", "ĊĊ", "ĉ", "ĉ", "s", "ig", "->", "Draw", "(\"", "P", "\");", "ĊĊ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "res", ":", "Ġ\"", "Ġ<<", "Ġfr", "->", "Get", "Parameter", "(", "Ġ0", "Ġ)", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "s", "igma", "->", "Set", "B", "in", "Content", "(", "Ġi", "+", "1", ",", "Ġfr", "->", "Get", "Parameter", "(", "Ġ0", "Ġ)", "Ġ);", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "s", "igma", "Ġ->", "Draw", "(\"", "HP", "\");", "ĊĊ", "ĊĊ", "Ċ", "Ċ", "}"], "dataflow_graph": [["resval", 10, "comesFrom", ["resval"], [5]], ["i", 15, "comesFrom", ["i"], [14]], ["i", 16, "comesFrom", ["i"], [14]], ["i", 19, "comesFrom", ["i"], [14]], ["i", 44, "comesFrom", ["i"], [14]], ["sstr", 18, "comesFrom", ["sstr"], [17]], ["sstr", 22, "comesFrom", ["sstr"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::894", "code": "#include \"Fan.h\"\n#include <iostream>\n\nnamespace restonce {\n\nvoid Fan::turnOn(int to)\n{\n    if ( m_level == 0 || to != m_level ) {\n        m_level = to;\n        std::cout << \"打开风扇 \" << to << std::endl;\n    } else {\n        std::cout << \"风扇已打开到\"<< m_level << \"，无变化 !\" << std::endl;\n    }\n}\n\nvoid Fan::turnOff()\n{\n    if ( m_level != 0 ) {\n        m_level = 0;\n        std::cout << \"关闭风扇 !\" << std::endl;\n    } else {\n        std::cout << \"风扇已关闭，无变化 !\" << std::endl;\n    }\n}\n\n} // namespace restonce\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Fan", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "names", "pace", "Ġrest", "once", "Ġ{", "Ċ", "Ċ", "void", "ĠFan", "::", "turn", "On", "(", "int", "Ġto", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "Ġm", "_", "level", "Ġ==", "Ġ0", "Ġ||", "Ġto", "Ġ!=", "Ġm", "_", "level", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "level", "Ġ=", "Ġto", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "æī", "ĵ", "å¼", "Ģ", "é£", "İ", "æī", "ĩ", "Ġ\"", "Ġ<<", "Ġto", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "é£", "İ", "æī", "ĩ", "å·", "²", "æī", "ĵ", "å¼", "Ģ", "åĪ", "°", "\"", "<<", "Ġm", "_", "level", "Ġ<<", "Ġ\"", "ï", "¼", "Į", "æĹ", "ł", "åı", "ĺ", "åĮ", "ĸ", "Ġ", "!\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFan", "::", "turn", "Off", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "Ġm", "_", "level", "Ġ!=", "Ġ0", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "level", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "åħ", "³", "éĹ", "Ń", "é£", "İ", "æī", "ĩ", "Ġ", "!\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "é£", "İ", "æī", "ĩ", "å·", "²", "åħ", "³", "éĹ", "Ń", "ï", "¼", "Į", "æĹ", "ł", "åı", "ĺ", "åĮ", "ĸ", "Ġ", "!\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġrest", "once", "Ċ"], "dataflow_graph": [["m_level", 11, "comesFrom", ["m_level"], [5]], ["m_level", 14, "comesFrom", ["m_level"], [5]], ["to", 3, "comesFrom", ["to"], [1]], ["to", 6, "comesFrom", ["to"], [1]], ["to", 8, "comesFrom", ["to"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::895", "code": "#ifndef INPUT_H\n#define INPUT_H\n\n#include <stdint.h>\n\nclass Input {\nprivate:\n\tuint8_t id;\n\tuint8_t port;\n\npublic:\n\tInput(uint8_t _id, uint8_t _port) : id(_id), port(_port) { }\n\n\tuint8_t getId() const { return id; }\n\tuint8_t getPort() const { return port; }\n};\n\n#endif\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠIN", "PUT", "_", "H", "Ċ", "#", "define", "ĠIN", "PUT", "_", "H", "Ċ", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "Ċ", "class", "ĠInput", "Ġ{", "Ċ", "private", ":", "Ċ", "ĉ", "uint", "8", "_", "t", "Ġid", ";", "Ċ", "ĉ", "uint", "8", "_", "t", "Ġport", ";", "Ċ", "Ċ", "public", ":", "Ċ", "ĉ", "Input", "(", "uint", "8", "_", "t", "Ġ_", "id", ",", "Ġuint", "8", "_", "t", "Ġ_", "port", ")", "Ġ:", "Ġid", "(_", "id", "),", "Ġport", "(_", "port", ")", "Ġ{", "Ġ}", "ĊĊ", "ĉ", "uint", "8", "_", "t", "Ġget", "Id", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġid", ";", "Ġ}", "Ċ", "ĉ", "uint", "8", "_", "t", "Ġget", "Port", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġport", ";", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["_id", 8, "comesFrom", ["_id"], [5]], ["_port", 10, "comesFrom", ["_port"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::896", "code": "#include \"Common/Common.h\"\n#include \"Common/Console.h\"\n#include \"Common/ByteBuffer.h\"\n#include \"Server/EntityFXRunner.h\"\n\nnamespace ServerGame {\n\n\tEntityFXRunner::EntityFXRunner() {\n\t\ttype = EntityType::FXRunner;\n\t\tcount = 10u;\n\t\tlife = 1000u;\n\t}\n\n\tvoid EntityFXRunner::Update( real64_t dt ) {\n\t\tEntity::Update( dt );\n\t}\n\n\tByteBuffer::Error EntityFXRunner::Serialise( ByteBuffer *buffer ) const {\n\t\tByteBuffer::Error status;\n\t\tstatus = Entity::Serialise( buffer );\n\t\tif ( status != ByteBuffer::Error::Success ) {\n\t\t\treturn status;\n\t\t}\n\n\t\tstatus = buffer->Write<uint32_t>( count );\n\t\tstatus = buffer->Write<uint32_t>( life );\n\t\tif ( status != ByteBuffer::Error::Success ) {\n\t\t\treturn status;\n\t\t}\n\n\t\treturn ByteBuffer::Error::Success;\n\t}\n\n} // namespace ServerGame\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Common", "/", "Common", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Common", "/", "Console", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Common", "/", "Byte", "Buffer", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Server", "/", "Entity", "FX", "Runner", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠServer", "Game", "Ġ{", "ĊĊ", "ĉ", "Entity", "FX", "Runner", "::", "Entity", "FX", "Runner", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "type", "Ġ=", "ĠEntity", "Type", "::", "FX", "Runner", ";", "Ċ", "ĉ", "ĉ", "count", "Ġ=", "Ġ10", "u", ";", "Ċ", "ĉ", "ĉ", "life", "Ġ=", "Ġ1000", "u", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "void", "ĠEntity", "FX", "Runner", "::", "Update", "(", "Ġreal", "64", "_", "t", "Ġd", "t", "Ġ)", "Ġ{", "Ċ", "ĉ", "ĉ", "Entity", "::", "Update", "(", "Ġd", "t", "Ġ);", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "Byte", "Buffer", "::", "Error", "ĠEntity", "FX", "Runner", "::", "Serial", "ise", "(", "ĠByte", "Buffer", "Ġ*", "buffer", "Ġ)", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "Byte", "Buffer", "::", "Error", "Ġstatus", ";", "Ċ", "ĉ", "ĉ", "status", "Ġ=", "ĠEntity", "::", "Serial", "ise", "(", "Ġbuffer", "Ġ);", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "Ġstatus", "Ġ!=", "ĠByte", "Buffer", "::", "Error", "::", "Success", "Ġ)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġstatus", ";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "status", "Ġ=", "Ġbuffer", "->", "Write", "<", "uint", "32", "_", "t", ">(", "Ġcount", "Ġ);", "Ċ", "ĉ", "ĉ", "status", "Ġ=", "Ġbuffer", "->", "Write", "<", "uint", "32", "_", "t", ">(", "Ġlife", "Ġ);", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "Ġstatus", "Ġ!=", "ĠByte", "Buffer", "::", "Error", "::", "Success", "Ġ)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġstatus", ";", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "return", "ĠByte", "Buffer", "::", "Error", "::", "Success", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠServer", "Game", "Ċ"], "dataflow_graph": [["dt", 8, "comesFrom", ["dt"], [6]], ["status", 15, "comesFrom", ["status"], [12]], ["status", 17, "comesFrom", ["status"], [12]], ["status", 26, "comesFrom", ["status"], [22]], ["status", 28, "comesFrom", ["status"], [22]], ["count", 21, "comesFrom", ["count"], [3]], ["life", 25, "comesFrom", ["life"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::897", "code": "#include <cstdint>\n#include <cstdio>\n#include <iostream>\n\nint main() {\n    int32_t x, i, a[20];\n\n    for (i = 0; i <= 19; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n\n    for (int16_t i = 0; i <= 9; i++) {\n        x = a[i];\n        a[i] = a[19 - i];\n        a[19 - i] = x;\n    }\n\n    for (i = 0; i <= 19; i++) {\n        printf(\"N[%d] = %d\\n\", i, a[i]);\n    }\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "int", ">", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "32", "_", "t", "Ġx", ",", "Ġi", ",", "Ġa", "[", "20", "];", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġ19", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "%", "d", "\",", "Ġ&", "a", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "16", "_", "t", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġ9", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġa", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġa", "[", "i", "]", "Ġ=", "Ġa", "[", "19", "Ġ-", "Ġi", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġa", "[", "19", "Ġ-", "Ġi", "]", "Ġ=", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "i", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġ19", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "N", "[", "%", "d", "]", "Ġ=", "Ġ%", "d", "\\", "n", "\",", "Ġi", ",", "Ġa", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["i", 5, "comesFrom", ["i"], [4]], ["i", 6, "comesFrom", ["i"], [4]], ["i", 9, "comesFrom", ["i"], [4]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 12, "comesFrom", ["i"], [10]], ["i", 15, "comesFrom", ["i"], [10]], ["i", 17, "comesFrom", ["i"], [10]], ["i", 19, "comesFrom", ["i"], [10]], ["i", 21, "comesFrom", ["i"], [10]], ["i", 24, "comesFrom", ["i"], [23]], ["i", 25, "comesFrom", ["i"], [23]], ["i", 27, "comesFrom", ["i"], [23]], ["i", 29, "comesFrom", ["i"], [23]], ["x", 22, "comesFrom", ["x"], [13]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::898", "code": "#include <iostream>\n#include <vector>\n\nusing std::vector;\n\nint main(int argc, char const *argv[])\n{\n    vector<int> ivec, ivec2, ivec3;\n\n    ivec(10, 42);\n    ivec2{42, 42, 42, 42, 42, 42, 42, 42, 42, 42};\n    for (int i = 0; i != 10; i++) {\n        ivec3.push_back(42);\n    }\n\n    return 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "using", "Ġstd", "::", "vector", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġconst", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġ", "ive", "c", ",", "Ġ", "ive", "c", "2", ",", "Ġ", "ive", "c", "3", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "ive", "c", "(", "10", ",", "Ġ42", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "ive", "c", "2", "{", "42", ",", "Ġ42", ",", "Ġ42", ",", "Ġ42", ",", "Ġ42", ",", "Ġ42", ",", "Ġ42", ",", "Ġ42", ",", "Ġ42", ",", "Ġ42", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ!=", "Ġ10", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ive", "c", "3", ".", "push", "_", "back", "(", "42", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["ivec", 7, "comesFrom", ["ivec"], [4]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 10, "comesFrom", ["i"], [8]], ["ivec3", 11, "comesFrom", ["ivec3"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::899", "code": "// Xiaoyan Wang 12/27/2015\n#include <iostream>\n#include <stdexcept>\nusing namespace std;\n\nint main() {\n  int a, b;\n  cout << \"Enter two integers: \" << endl;\n  while(cin >> a >> b) {\n    try {\n      if(b == 0)\n\tthrow runtime_error(\"Divisor cannot be zero.\");\n      cout << a/b << endl;\n      break;\n    } catch (runtime_error err) {\n      cout << err.what() << endl\n\t   << \"Try again? (y/n)\" << endl;\n      char c;\n      cin >> c;\n      if(!cin || c == 'n')\n\tbreak;\n    }\n  }\n\n  return 0;\n}\n", "code_tokens": ["Ġ//", "ĠXia", "oy", "an", "ĠWang", "Ġ12", "/", "27", "/", "2015", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "std", "except", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Enter", "Ġtwo", "Ġintegers", ":", "Ġ\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġwhile", "(", "cin", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtry", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "b", "Ġ==", "Ġ0", ")", "Ċ", "ĉ", "throw", "Ġruntime", "_", "error", "(\"", "Div", "is", "or", "Ġcannot", "Ġbe", "Ġzero", ".\"", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġa", "/", "b", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbreak", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġcatch", "Ġ(", "runtime", "_", "error", "Ġerr", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġerr", ".", "what", "()", "Ġ<<", "Ġend", "l", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ<<", "Ġ\"", "Try", "Ġagain", "?", "Ġ(", "y", "/", "n", ")\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "(", "!", "cin", "Ġ||", "Ġc", "Ġ==", "Ġ'", "n", "')", "Ċ", "ĉ", "break", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 7, "comesFrom", ["a"], [2]], ["a", 12, "comesFrom", ["a"], [2]], ["b", 8, "comesFrom", ["b"], [3]], ["b", 9, "comesFrom", ["b"], [3]], ["b", 13, "comesFrom", ["b"], [3]], ["err", 17, "comesFrom", ["err"], [15]], ["c", 23, "comesFrom", ["c"], [21]], ["c", 25, "comesFrom", ["c"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::900", "code": "#include <bits/stdc++.h>\n#define FOR(i,a,b)  for(int (i)=(a);(i)<(b);(i)++)\n#define REP(i,n)    FOR(i,0,n)\n#define RER(i,n)    FOR(i,0,(n+1))\n#define pb          push_back\n#define mp(a,b)     make_pair((a),(b))\n#define mset(m,v)   memset(m,v,sizeof(m))\nusing namespace std;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\ntypedef vector<pair<int, int> > vpii;\ntypedef long long ll;\ntypedef vector<ll> vl;\ntypedef pair<ll,ll> pll;\ntypedef vector<pair<ll, ll> > vpll;\ntypedef vector<string> vs;\ntypedef long double ld;\nconst double EPS    = 1e-10;\nconst int INF       = 1e+9;\nconst double PI     = acos(-1);\n\n\nauto main() -> int\n{\n    int a, b;\n    cin >> a >> b;\n    if (a > 8 || b > 8) {\n        cout << \":(\" << endl;\n    } else {\n        cout << \"Yay!\" << endl;\n    }\n    return 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "bits", "/", "st", "dc", "++", ".", "h", ">", "Ċ", "#", "define", "ĠFOR", "(", "i", ",", "a", ",", "b", ")", "Ġ", "Ġfor", "(", "int", "Ġ(", "i", ")=(", "a", ");", "(", "i", ")", "<", "(", "b", ");", "(", "i", ")", "++)", "Ċ", "#", "define", "ĠRE", "P", "(", "i", ",", "n", ")", "Ġ", "Ġ", "Ġ", "ĠFOR", "(", "i", ",", "0", ",", "n", ")", "Ċ", "#", "define", "ĠR", "ER", "(", "i", ",", "n", ")", "Ġ", "Ġ", "Ġ", "ĠFOR", "(", "i", ",", "0", ",", "(", "n", "+", "1", "))", "Ċ", "#", "define", "Ġp", "b", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpush", "_", "back", "Ċ", "#", "define", "Ġmp", "(", "a", ",", "b", ")", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmake", "_", "pair", "((", "a", "),", "(", "b", "))", "Ċ", "#", "define", "Ġm", "set", "(", "m", ",", "v", ")", "Ġ", "Ġ", "Ġmem", "set", "(", "m", ",", "v", ",", "size", "of", "(", "m", "))", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "ty", "ped", "ef", "Ġvector", "<", "int", ">", "Ġvi", ";", "Ċ", "ty", "ped", "ef", "Ġpair", "<", "int", ",", "Ġint", ">", "Ġp", "ii", ";", "Ċ", "ty", "ped", "ef", "Ġvector", "<", "pair", "<", "int", ",", "Ġint", ">", "Ġ>", "Ġv", "p", "ii", ";", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġlong", "Ġll", ";", "Ċ", "ty", "ped", "ef", "Ġvector", "<", "ll", ">", "Ġv", "l", ";", "Ċ", "ty", "ped", "ef", "Ġpair", "<", "ll", ",", "ll", ">", "Ġp", "ll", ";", "Ċ", "ty", "ped", "ef", "Ġvector", "<", "pair", "<", "ll", ",", "Ġll", ">", "Ġ>", "Ġv", "p", "ll", ";", "Ċ", "ty", "ped", "ef", "Ġvector", "<", "string", ">", "Ġvs", ";", "Ċ", "ty", "ped", "ef", "Ġlong", "Ġdouble", "Ġl", "d", ";", "Ċ", "const", "Ġdouble", "ĠEPS", "Ġ", "Ġ", "Ġ", "Ġ=", "Ġ1", "e", "-", "10", ";", "Ċ", "const", "Ġint", "ĠINF", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ=", "Ġ1", "e", "+", "9", ";", "Ċ", "const", "Ġdouble", "ĠPI", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ=", "Ġac", "os", "(-", "1", ");", "ĊĊ", "Ċ", "auto", "Ġmain", "()", "Ġ->", "Ġint", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġa", ",", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġa", "Ġ>>", "Ġb", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "a", "Ġ>", "Ġ8", "Ġ||", "Ġb", "Ġ>", "Ġ8", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", ":", "(\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Y", "ay", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["a", 26, "comesFrom", ["a"], [23]], ["a", 28, "comesFrom", ["a"], [23]], ["b", 27, "comesFrom", ["b"], [24]], ["b", 29, "comesFrom", ["b"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::901", "code": "#include <CodeAdapter\\EasyCA.h>\n#include <CodeAdapterSFML\\SFMLFactory.h>\n\n#include \"HelloScene.h\"\n\n\n\n\nint main()\n{\n\tinitializeCA<SFMLFactory>();\n\n\n\tauto window = caFactory->createWindow();\n\twindow->create(caDraw::Size(1024, 768), caUtil::String(\"Hello, World!\"), false);\n\twindow->setFramerate(60);\n\n\n\tauto sceneManager = canew<caUtil::SceneManager>();\n\tsceneManager->replaceScene(*window, canew<HelloScene>());\n\n\twindow->setSceneManager(sceneManager);\n\n\n\twhile (window->isRunning())\n\t{\n\t\tcaTouch->update();\n\t\tcaKeyboard->update(*window);\n\n\n\t\tif (sceneManager->hasScene() == false\n\t\t\t|| caKeyboard->isKeyDown(caSys::Keys::Escape))\n\t\t{\n\t\t\twindow->exit();\n\t\t}\n\n\n\t\twindow->update();\n\t\twindow->draw(caDraw::Color(230, 230, 230));\n\t}\n\n\n\treturn 0;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Code", "Adapter", "\\", "Easy", "CA", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "Code", "Adapter", "SF", "ML", "\\", "SF", "ML", "Factory", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Hello", "Scene", ".", "h", "\"", "ĊĊ", "ĊĊ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "initial", "ize", "CA", "<", "SF", "ML", "Factory", ">", "();", "ĊĊ", "Ċ", "ĉ", "auto", "Ġwindow", "Ġ=", "Ġca", "Factory", "->", "create", "Window", "();", "Ċ", "ĉ", "window", "->", "create", "(", "ca", "Draw", "::", "Size", "(", "1024", ",", "Ġ768", "),", "Ġca", "Ut", "il", "::", "String", "(\"", "Hello", ",", "ĠWorld", "!\"", "),", "Ġfalse", ");", "Ċ", "ĉ", "window", "->", "set", "Fram", "erate", "(", "60", ");", "ĊĊ", "Ċ", "ĉ", "auto", "Ġscene", "Manager", "Ġ=", "Ġcan", "ew", "<", "ca", "Ut", "il", "::", "Scene", "Manager", ">", "();", "Ċ", "ĉ", "scene", "Manager", "->", "replace", "Scene", "(*", "window", ",", "Ġcan", "ew", "<", "Hello", "Scene", ">", "());", "ĊĊ", "ĉ", "window", "->", "set", "Scene", "Manager", "(", "scene", "Manager", ");", "ĊĊ", "Ċ", "ĉ", "while", "Ġ(", "window", "->", "is", "Running", "())", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ca", "Touch", "->", "update", "();", "Ċ", "ĉ", "ĉ", "ca", "Key", "board", "->", "update", "(*", "window", ");", "ĊĊ", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "scene", "Manager", "->", "has", "Scene", "()", "Ġ==", "Ġfalse", "Ċ", "ĉ", "ĉ", "ĉ", "||", "Ġca", "Key", "board", "->", "is", "Key", "Down", "(", "ca", "Sys", "::", "Keys", "::", "E", "scape", "))", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "window", "->", "exit", "();", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "Ċ", "ĉ", "ĉ", "window", "->", "update", "();", "Ċ", "ĉ", "ĉ", "window", "->", "draw", "(", "ca", "Draw", "::", "Color", "(", "230", ",", "Ġ230", ",", "Ġ230", "));", "Ċ", "ĉ", "}", "ĊĊ", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["window", 5, "comesFrom", ["window"], [2]], ["window", 9, "comesFrom", ["window"], [2]], ["window", 15, "comesFrom", ["window"], [2]], ["window", 17, "comesFrom", ["window"], [2]], ["window", 20, "comesFrom", ["window"], [2]], ["window", 26, "comesFrom", ["window"], [2]], ["window", 32, "comesFrom", ["window"], [2]], ["window", 34, "comesFrom", ["window"], [2]], ["window", 36, "comesFrom", ["window"], [2]], ["sceneManager", 13, "comesFrom", ["sceneManager"], [11]], ["sceneManager", 19, "comesFrom", ["sceneManager"], [11]], ["sceneManager", 27, "comesFrom", ["sceneManager"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::902", "code": "//\n//  Biquad.cpp\n//  DSPLibrary\n//\n//  Created by Mayank on 9/11/12.\n//  Copyright (c) 2012 Mayank Sanganeria. All rights reserved.\n//\n\n#include \"FIR.h\"\n\nFIR::FIR(int length)\n{\n  _b = new double[length];\n  _z = new double[length];\n  _length = length;\n  for (int i=0;i<length;i++ ) {\n    _b[i] = 0;\n  }\n  _writePosition = 0;\n}\n\nFIR::~FIR()\n{\n  delete[] _b;\n  delete[] _z;\n}\n\nvoid FIR::setCoefs(double* coefs)\n{\n  for (int i=0;i<_length;i++ ) {\n    _b[i] = coefs[i];\n  }\n}\n\nvoid FIR::reset()\n{ // reset filter state\n  for (int i=0;i<_length;i++ ) {\n    _z[i] = 0;\n  }\n}\nvoid FIR::process (float input, float& output)\n{\n  _z[_writePosition] = input;\n  output = 0;\n  for (int i=0;i<_length;i++ ) {\n    output += _z[(i + _writePosition) % _length]*_b[i];\n  }\n  _writePosition = (_writePosition+1)%_length;\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠB", "iqu", "ad", ".", "cpp", "Ċ", "//", "Ġ", "ĠD", "SP", "Library", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠMay", "ank", "Ġon", "Ġ9", "/", "11", "/", "12", ".", "Ċ", "//", "Ġ", "ĠCopyright", "Ġ(", "c", ")", "Ġ2012", "ĠMay", "ank", "ĠSang", "an", "eria", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "include", "Ġ\"", "FIR", ".", "h", "\"", "Ċ", "Ċ", "FIR", "::", "FIR", "(", "int", "Ġlength", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ_", "b", "Ġ=", "Ġnew", "Ġdouble", "[", "length", "];", "Ċ", "Ġ", "Ġ_", "z", "Ġ=", "Ġnew", "Ġdouble", "[", "length", "];", "Ċ", "Ġ", "Ġ_", "length", "Ġ=", "Ġlength", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "i", "<", "length", ";", "i", "++", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "b", "[", "i", "]", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ_", "write", "Position", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "FIR", "::", "~", "FIR", "()", "Ċ", "{", "Ċ", "Ġ", "Ġdelete", "[]", "Ġ_", "b", ";", "Ċ", "Ġ", "Ġdelete", "[]", "Ġ_", "z", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFIR", "::", "set", "Co", "ef", "s", "(", "double", "*", "Ġco", "ef", "s", ")", "Ċ", "{", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "i", "<", "_", "length", ";", "i", "++", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "b", "[", "i", "]", "Ġ=", "Ġco", "ef", "s", "[", "i", "];", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFIR", "::", "reset", "()", "Ċ", "{", "Ġ//", "Ġreset", "Ġfilter", "Ġstate", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "i", "<", "_", "length", ";", "i", "++", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "z", "[", "i", "]", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "void", "ĠFIR", "::", "process", "Ġ(", "float", "Ġinput", ",", "Ġfloat", "&", "Ġoutput", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ_", "z", "[_", "write", "Position", "]", "Ġ=", "Ġinput", ";", "Ċ", "Ġ", "Ġoutput", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "0", ";", "i", "<", "_", "length", ";", "i", "++", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġoutput", "Ġ+=", "Ġ_", "z", "[", "(", "i", "Ġ+", "Ġ_", "write", "Position", ")", "Ġ%", "Ġ_", "length", "]", "*", "_", "b", "[", "i", "];", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ_", "write", "Position", "Ġ=", "Ġ(_", "write", "Position", "+", "1", ")", "%", "_", "length", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["length", 3, "comesFrom", ["length"], [1]], ["length", 5, "comesFrom", ["length"], [1]], ["length", 7, "comesFrom", ["length"], [1]], ["length", 10, "comesFrom", ["length"], [1]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 11, "comesFrom", ["i"], [8]], ["i", 13, "comesFrom", ["i"], [8]], ["i", 21, "comesFrom", ["i"], [20]], ["i", 23, "comesFrom", ["i"], [20]], ["i", 25, "comesFrom", ["i"], [20]], ["i", 27, "comesFrom", ["i"], [20]], ["i", 30, "comesFrom", ["i"], [29]], ["i", 32, "comesFrom", ["i"], [29]], ["i", 34, "comesFrom", ["i"], [29]], ["i", 43, "comesFrom", ["i"], [42]], ["i", 45, "comesFrom", ["i"], [42]], ["i", 48, "comesFrom", ["i"], [42]], ["i", 52, "comesFrom", ["i"], [42]], ["_b", 12, "comesFrom", ["_b"], [2]], ["_b", 16, "comesFrom", ["_b"], [2]], ["_b", 24, "comesFrom", ["_b"], [2]], ["_b", 51, "comesFrom", ["_b"], [2]], ["_z", 17, "comesFrom", ["_z"], [4]], ["_z", 33, "comesFrom", ["_z"], [4]], ["_z", 38, "comesFrom", ["_z"], [4]], ["_z", 47, "comesFrom", ["_z"], [4]], ["_length", 22, "comesFrom", ["_length"], [6]], ["_length", 31, "comesFrom", ["_length"], [6]], ["_length", 44, "comesFrom", ["_length"], [6]], ["_length", 50, "comesFrom", ["_length"], [6]], ["_length", 55, "comesFrom", ["_length"], [6]], ["_writePosition", 39, "comesFrom", ["_writePosition"], [14]], ["_writePosition", 49, "comesFrom", ["_writePosition"], [14]], ["_writePosition", 54, "comesFrom", ["_writePosition"], [53]], ["input", 40, "comesFrom", ["input"], [36]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::903", "code": "#include \"pch.h\"\n#include \"submarine.h\"\n\n#include \"direct3d.h\"\n#include \"light_shader.h\"\n\nsubmarine::submarine(direct3d const& d3d,\n\tstd::shared_ptr<light_shader> const &shader)\n\t: object(d3d, \"data/submarine.obj\", \"data/blue.tga\"), d3d_(d3d),\n\tshader_(shader), propeller_(std::make_shared<propeller>(d3d, shader))\n{}\n\nsubmarine::~submarine()\n{}\n\nvoid submarine::frame()\n{\n\tauto const centre = position();\n\tpropeller_->position({ centre.x, centre.y, centre.z + 1.5f });\n\tpropeller_->frame();\n}\n\nvoid submarine::render(std::shared_ptr<camera> const &camera) const\n{\n\trender_(shader_, camera);\n\tpropeller_->render(camera);\n}\n\nsubmarine::propeller::propeller(direct3d const &d3d,\n\tstd::shared_ptr<light_shader> const &shader)\n\t: object(d3d, \"data/propeller.obj\", \"data/blue.tga\"), d3d_(d3d),\n\tshader_(shader)\n{\n\tscale({ .1f, .1f, .1f });\n}\n\nsubmarine::propeller::~propeller()\n{\n}\n\nvoid submarine::propeller::frame()\n{\n\trotate_clockwise(1.f);\n}\n\nvoid submarine::propeller::render(std::shared_ptr<camera> const &camera) const\n{\n\trender_(shader_, camera);\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "p", "ch", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "sub", "marine", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "direct", "3", "d", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "light", "_", "sh", "ader", ".", "h", "\"", "Ċ", "Ċ", "sub", "marine", "::", "sub", "marine", "(", "direct", "3", "d", "Ġconst", "&", "Ġd", "3", "d", ",", "Ċ", "ĉ", "std", "::", "shared", "_", "ptr", "<", "light", "_", "sh", "ader", ">", "Ġconst", "Ġ&", "sh", "ader", ")", "Ċ", "ĉ", ":", "Ġobject", "(", "d", "3", "d", ",", "Ġ\"", "data", "/", "sub", "marine", ".", "obj", "\",", "Ġ\"", "data", "/", "blue", ".", "t", "ga", "\"),", "Ġd", "3", "d", "_(", "d", "3", "d", "),", "Ċ", "ĉ", "sh", "ader", "_(", "sh", "ader", "),", "Ġprope", "ller", "_(", "std", "::", "make", "_", "shared", "<", "pro", "pe", "ller", ">(", "d", "3", "d", ",", "Ġshader", "))", "Ċ", "{", "}", "Ċ", "Ċ", "sub", "marine", "::", "~", "sub", "marine", "()", "Ċ", "{", "}", "Ċ", "Ċ", "void", "Ġsubmarine", "::", "frame", "()", "Ċ", "{", "Ċ", "ĉ", "auto", "Ġconst", "Ġcentre", "Ġ=", "Ġposition", "();", "Ċ", "ĉ", "pro", "pe", "ller", "_", "->", "position", "({", "Ġcentre", ".", "x", ",", "Ġcentre", ".", "y", ",", "Ġcentre", ".", "z", "Ġ+", "Ġ1", ".", "5", "f", "Ġ});", "Ċ", "ĉ", "pro", "pe", "ller", "_", "->", "frame", "();", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsubmarine", "::", "render", "(", "std", "::", "shared", "_", "ptr", "<", "camera", ">", "Ġconst", "Ġ&", "camera", ")", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "render", "_(", "sh", "ader", "_", ",", "Ġcamera", ");", "Ċ", "ĉ", "pro", "pe", "ller", "_", "->", "render", "(", "camera", ");", "Ċ", "}", "Ċ", "Ċ", "sub", "marine", "::", "pro", "pe", "ller", "::", "pro", "pe", "ller", "(", "direct", "3", "d", "Ġconst", "Ġ&", "d", "3", "d", ",", "Ċ", "ĉ", "std", "::", "shared", "_", "ptr", "<", "light", "_", "sh", "ader", ">", "Ġconst", "Ġ&", "sh", "ader", ")", "Ċ", "ĉ", ":", "Ġobject", "(", "d", "3", "d", ",", "Ġ\"", "data", "/", "pro", "pe", "ller", ".", "obj", "\",", "Ġ\"", "data", "/", "blue", ".", "t", "ga", "\"),", "Ġd", "3", "d", "_(", "d", "3", "d", "),", "Ċ", "ĉ", "sh", "ader", "_(", "sh", "ader", ")", "Ċ", "{", "Ċ", "ĉ", "scale", "({", "Ġ.", "1", "f", ",", "Ġ.", "1", "f", ",", "Ġ.", "1", "f", "Ġ});", "Ċ", "}", "Ċ", "Ċ", "sub", "marine", "::", "pro", "pe", "ller", "::", "~", "pro", "pe", "ller", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsubmarine", "::", "pro", "pe", "ller", "::", "frame", "()", "Ċ", "{", "Ċ", "ĉ", "rot", "ate", "_", "clock", "wise", "(", "1", ".", "f", ");", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsubmarine", "::", "pro", "pe", "ller", "::", "render", "(", "std", "::", "shared", "_", "ptr", "<", "camera", ">", "Ġconst", "Ġ&", "camera", ")", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "render", "_(", "sh", "ader", "_", ",", "Ġcamera", ");", "Ċ", "}"], "dataflow_graph": [["centre", 19, "comesFrom", ["centre"], [15]], ["centre", 21, "comesFrom", ["centre"], [15]], ["centre", 23, "comesFrom", ["centre"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::904", "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nstd::vector<int>loadTestCases(int n){\n\tstd::vector<int>elems;\n\telems.reserve(n);\n\tfor(int i=0;i<n;i++){\n\t\tint cases;\n\t\tstd::cin >> cases;\n\t\telems.push_back(cases);\n\t}\n\treturn elems;\n}\n\nint main(){\n\tint n ,k;\n\tstd::cin >> n >> k;\n\tstd::vector<int>args = loadTestCases(n);\n\tlong long count = 0;\n\tsort(args.begin(),args.end());\n\tint l = args.size();\n\tfor(int i=0,j=l -1;i<j;i++){\n\t\twhile(j > i && args.at(i)+args.at(j) >= k){\n\t\t\tj--;\n\t\t}\n\t\tcount = count + j - i;\n\t}\n\tstd::cout << count <<std::endl;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "Ċ", "std", "::", "vector", "<", "int", ">", "load", "Test", "C", "ases", "(", "int", "Ġn", "){", "Ċ", "ĉ", "std", "::", "vector", "<", "int", ">", "ele", "ms", ";", "Ċ", "ĉ", "ele", "ms", ".", "res", "erve", "(", "n", ");", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "n", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "int", "Ġcases", ";", "Ċ", "ĉ", "ĉ", "std", "::", "cin", "Ġ>>", "Ġcases", ";", "Ċ", "ĉ", "ĉ", "ele", "ms", ".", "push", "_", "back", "(", "cases", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġele", "ms", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(){", "Ċ", "ĉ", "int", "Ġn", "Ġ,", "k", ";", "Ċ", "ĉ", "std", "::", "cin", "Ġ>>", "Ġn", "Ġ>>", "Ġk", ";", "Ċ", "ĉ", "std", "::", "vector", "<", "int", ">", "args", "Ġ=", "Ġload", "Test", "C", "ases", "(", "n", ");", "Ċ", "ĉ", "long", "Ġlong", "Ġcount", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "sort", "(", "args", ".", "begin", "(),", "args", ".", "end", "());", "Ċ", "ĉ", "int", "Ġl", "Ġ=", "Ġargs", ".", "size", "();", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ",", "j", "=", "l", "Ġ-", "1", ";", "i", "<", "j", ";", "i", "++", "){", "Ċ", "ĉ", "ĉ", "while", "(", "j", "Ġ>", "Ġi", "Ġ&&", "Ġargs", ".", "at", "(", "i", ")+", "args", ".", "at", "(", "j", ")", "Ġ>=", "Ġk", "){", "Ċ", "ĉ", "ĉ", "ĉ", "j", "--", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "count", "Ġ=", "Ġcount", "Ġ+", "Ġj", "Ġ-", "Ġi", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġcount", "Ġ<<", "std", "::", "end", "l", ";", "Ċ", "}"], "dataflow_graph": [["elems", 3, "comesFrom", ["elems"], [2]], ["elems", 13, "comesFrom", ["elems"], [2]], ["elems", 16, "comesFrom", ["elems"], [2]], ["n", 5, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 21, "comesFrom", ["n"], [18]], ["n", 25, "comesFrom", ["n"], [18]], ["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 38, "comesFrom", ["i"], [35]], ["i", 40, "comesFrom", ["i"], [35]], ["i", 42, "comesFrom", ["i"], [35]], ["i", 45, "comesFrom", ["i"], [35]], ["i", 54, "comesFrom", ["i"], [35]], ["cases", 12, "comesFrom", ["cases"], [10]], ["cases", 15, "comesFrom", ["cases"], [10]], ["k", 22, "comesFrom", ["k"], [19]], ["k", 49, "comesFrom", ["k"], [19]], ["args", 28, "comesFrom", ["args"], [23]], ["args", 30, "comesFrom", ["args"], [23]], ["args", 33, "comesFrom", ["args"], [23]], ["args", 43, "comesFrom", ["args"], [23]], ["args", 46, "comesFrom", ["args"], [23]], ["l", 37, "comesFrom", ["l"], [32]], ["j", 39, "comesFrom", ["j"], [36]], ["j", 41, "comesFrom", ["j"], [36]], ["j", 48, "comesFrom", ["j"], [36]], ["j", 50, "comesFrom", ["j"], [36]], ["j", 53, "comesFrom", ["j"], [36]], ["count", 52, "comesFrom", ["count"], [51]], ["count", 56, "comesFrom", ["count"], [51]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::905", "code": "#include \"stdafx.h\"\n#include \"FuseExpectedTestResults.h\"\n\nvoid Fuse::ExpectedTestResults::read(std::ifstream& file) {\n\tbool finished = false;\n\twhile (!file.eof()) {\n\t\tExpectedTestResult result;\n\t\tresult.read(file);\n\t\tfinished = result.finish;\n\t\tif (!finished)\n\t\t\tresults[result.description] = result;\n\t}\n}\n\nvoid Fuse::ExpectedTestResults::read(std::string path) {\n\tstd::ifstream file;\n\tfile >> std::hex;\n\tfile.open(path);\n\tread(file);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "F", "use", "Ex", "pected", "Test", "Results", ".", "h", "\"", "Ċ", "Ċ", "void", "ĠF", "use", "::", "Ex", "pected", "Test", "Results", "::", "read", "(", "std", "::", "if", "stream", "&", "Ġfile", ")", "Ġ{", "Ċ", "ĉ", "bool", "Ġfinished", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "while", "Ġ(!", "file", ".", "e", "of", "())", "Ġ{", "Ċ", "ĉ", "ĉ", "Ex", "pected", "Test", "Result", "Ġresult", ";", "Ċ", "ĉ", "ĉ", "result", ".", "read", "(", "file", ");", "Ċ", "ĉ", "ĉ", "finished", "Ġ=", "Ġresult", ".", "fin", "ish", ";", "Ċ", "ĉ", "ĉ", "if", "Ġ(!", "finished", ")", "Ċ", "ĉ", "ĉ", "ĉ", "results", "[", "result", ".", "description", "]", "Ġ=", "Ġresult", ";", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠF", "use", "::", "Ex", "pected", "Test", "Results", "::", "read", "(", "std", "::", "string", "Ġpath", ")", "Ġ{", "Ċ", "ĉ", "std", "::", "if", "stream", "Ġfile", ";", "Ċ", "ĉ", "file", "Ġ>>", "Ġstd", "::", "hex", ";", "Ċ", "ĉ", "file", ".", "open", "(", "path", ");", "Ċ", "ĉ", "read", "(", "file", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["file", 20, "comesFrom", ["file"], [19]], ["file", 22, "comesFrom", ["file"], [19]], ["file", 26, "comesFrom", ["file"], [19]], ["result", 6, "comesFrom", ["result"], [5]], ["result", 10, "comesFrom", ["result"], [5]], ["result", 14, "comesFrom", ["result"], [5]], ["result", 16, "comesFrom", ["result"], [5]], ["finished", 12, "comesFrom", ["finished"], [9]], ["path", 24, "comesFrom", ["path"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::906", "code": "#include \"game.h\"\n#include \"world.h\"\n#include \"gamestate.h\"\n#include \"input.h\"\n#include \"statemainmenu.h\"\n\n#include \"renderer.h\"\n\nGame::Game(){\n\trenderer_    = new Renderer();\n\tworld_       = new World(this);\n\tinput_       = new Input();\n\tdone_        = false;\n\tstate_stack_ = new Stack<iGameState*>;\n}\n\nGame::~Game(){\n\tif( renderer_ ) delete renderer_;\n\tif( world_ )    delete world_;\n\tif( input_ )    delete input_;\n}\n\nvoid Game::Start(){\n\tchar selection;\n\tstate_stack_->Push(new State_MainMenu());\n\twhile( !done_ ){\n\t\tstate_stack_->Top()->Render(world_, renderer_);\n\t\trenderer_->Flush();\n\t\tselection = input_->Key();\n\t\tif( selection == '#' || renderer_->isClosed()) done_ = true;\n\t\tstate_stack_->Top()->Update(state_stack_, world_, selection);\n\t}\n\tstate_stack_->Clear();\n}\n\nvoid Game::End(){\n\tdone_ = true;\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "game", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "world", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gam", "estate", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "input", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "stat", "em", "ain", "menu", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "rend", "erer", ".", "h", "\"", "Ċ", "Ċ", "Game", "::", "Game", "(){", "Ċ", "ĉ", "rend", "erer", "_", "Ġ", "Ġ", "Ġ", "Ġ=", "Ġnew", "ĠRend", "erer", "();", "Ċ", "ĉ", "world", "_", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ=", "Ġnew", "ĠWorld", "(", "this", ");", "Ċ", "ĉ", "input", "_", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ=", "Ġnew", "ĠInput", "();", "Ċ", "ĉ", "done", "_", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ=", "Ġfalse", ";", "Ċ", "ĉ", "state", "_", "stack", "_", "Ġ=", "Ġnew", "ĠStack", "<", "i", "Game", "State", "*", ">", ";", "Ċ", "}", "Ċ", "Ċ", "Game", "::", "~", "Game", "(){", "Ċ", "ĉ", "if", "(", "Ġrend", "erer", "_", "Ġ)", "Ġdelete", "Ġrend", "erer", "_", ";", "Ċ", "ĉ", "if", "(", "Ġworld", "_", "Ġ)", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġworld", "_", ";", "Ċ", "ĉ", "if", "(", "Ġinput", "_", "Ġ)", "Ġ", "Ġ", "Ġ", "Ġdelete", "Ġinput", "_", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGame", "::", "Start", "(){", "Ċ", "ĉ", "char", "Ġselection", ";", "Ċ", "ĉ", "state", "_", "stack", "_", "->", "Push", "(", "new", "ĠState", "_", "Main", "Menu", "());", "Ċ", "ĉ", "while", "(", "Ġ!", "done", "_", "Ġ)", "{", "Ċ", "ĉ", "ĉ", "state", "_", "stack", "_", "->", "Top", "()", "->", "Render", "(", "world", "_", ",", "Ġrend", "erer", "_", ");", "Ċ", "ĉ", "ĉ", "rend", "erer", "_", "->", "Fl", "ush", "();", "Ċ", "ĉ", "ĉ", "selection", "Ġ=", "Ġinput", "_", "->", "Key", "();", "Ċ", "ĉ", "ĉ", "if", "(", "Ġselection", "Ġ==", "Ġ'", "#", "'", "Ġ||", "Ġrend", "erer", "_", "->", "is", "Cl", "osed", "())", "Ġdone", "_", "Ġ=", "Ġtrue", ";", "Ċ", "ĉ", "ĉ", "state", "_", "stack", "_", "->", "Top", "()", "->", "Update", "(", "state", "_", "stack", "_", ",", "Ġworld", "_", ",", "Ġselection", ");", "Ċ", "ĉ", "}", "Ċ", "ĉ", "state", "_", "stack", "_", "->", "Clear", "();", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGame", "::", "End", "(){", "Ċ", "ĉ", "done", "_", "Ġ=", "Ġtrue", ";", "Ċ", "}"], "dataflow_graph": [["renderer_", 7, "comesFrom", ["renderer_"], [1]], ["renderer_", 8, "comesFrom", ["renderer_"], [1]], ["renderer_", 22, "comesFrom", ["renderer_"], [1]], ["renderer_", 23, "comesFrom", ["renderer_"], [1]], ["renderer_", 29, "comesFrom", ["renderer_"], [1]], ["world_", 9, "comesFrom", ["world_"], [2]], ["world_", 10, "comesFrom", ["world_"], [2]], ["world_", 21, "comesFrom", ["world_"], [2]], ["world_", 36, "comesFrom", ["world_"], [2]], ["input_", 11, "comesFrom", ["input_"], [3]], ["input_", 12, "comesFrom", ["input_"], [3]], ["input_", 26, "comesFrom", ["input_"], [3]], ["state_stack_", 15, "comesFrom", ["state_stack_"], [5]], ["state_stack_", 18, "comesFrom", ["state_stack_"], [5]], ["state_stack_", 32, "comesFrom", ["state_stack_"], [5]], ["state_stack_", 35, "comesFrom", ["state_stack_"], [5]], ["state_stack_", 38, "comesFrom", ["state_stack_"], [5]], ["done_", 17, "comesFrom", ["done_"], [4]], ["selection", 28, "comesFrom", ["selection"], [25]], ["selection", 37, "comesFrom", ["selection"], [25]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::907", "code": "#include <iostream>\n#include <string>\n#include \"regexp.h\"\n\nusing namespace std;\n\nint main()\n{\n\tstring a, t;\n\tcout << \"Enter the Regular Expression: \";\n\tcin >> a;\n\tregexp r(a);\n\n\tif(!r.isvalid())\n\t{\n\t\tcout << \"Invalid Regular Expression!!!\" << endl;\n\t\treturn -1;\n\t}\n\twhile(true)\n\t{\n\t\tcout << \"Enter the test string: \";\n\t\tcin >> t;\n\t\tif(t == \"end\")\n\t\t\tbreak;\n\t\tif(r.validate(t))\n\t\t\tcout << \"String is a valid match.\" << endl;\n\t\telse\n\t\t\tcout << \"String is an invalid match.\" << endl;\n\t}\n\n//\tr.validate(\"asfdf\");\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ\"", "re", "gex", "p", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "string", "Ġa", ",", "Ġt", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Enter", "Ġthe", "ĠRegular", "ĠExpression", ":", "Ġ\"", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġa", ";", "Ċ", "ĉ", "re", "gex", "p", "Ġr", "(", "a", ");", "ĊĊ", "ĉ", "if", "(", "!", "r", ".", "is", "valid", "())", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Invalid", "ĠRegular", "ĠExpression", "!!", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "return", "Ġ-", "1", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "while", "(", "true", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "Enter", "Ġthe", "Ġtest", "Ġstring", ":", "Ġ\"", ";", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġt", ";", "Ċ", "ĉ", "ĉ", "if", "(", "t", "Ġ==", "Ġ\"", "end", "\")", "Ċ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "if", "(", "r", ".", "valid", "ate", "(", "t", "))", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "String", "Ġis", "Ġa", "Ġvalid", "Ġmatch", ".\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "String", "Ġis", "Ġan", "Ġinvalid", "Ġmatch", ".\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "//", "ĉ", "r", ".", "valid", "ate", "(\"", "as", "f", "df", "\");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 6, "comesFrom", ["a"], [2]], ["t", 14, "comesFrom", ["t"], [3]], ["t", 15, "comesFrom", ["t"], [3]], ["t", 18, "comesFrom", ["t"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::908", "code": "\n#include \"TypeObject.h\"\n\nint TypeObject::InheritsFrom(const TypeObject::TypeInfo *Type1,\n\t\t\t     const TypeObject::TypeInfo *Type2)\n{\n    if ((Type1 == NULL) || (Type2 == NULL)) \n        return(0);\n\n    if (Type1 == Type2)   // TypeInfo's are static, so we can compare pointers.\n        return(1);\n\n    for (int i = 0; i < TYPE_INFO_MAX_TYPES; i++)\n    {\n        if (InheritsFrom(Type1->mpBaseClasses[i], Type2))\n            return(1);\n    }\n    return(0);\n}\n\n", "code_tokens": ["Ċ", "#", "include", "Ġ\"", "Type", "Object", ".", "h", "\"", "Ċ", "Ċ", "int", "ĠType", "Object", "::", "In", "her", "its", "From", "(", "const", "ĠType", "Object", "::", "Type", "Info", "Ġ*", "Type", "1", ",", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠType", "Object", "::", "Type", "Info", "Ġ*", "Type", "2", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "Type", "1", "Ġ==", "ĠNULL", ")", "Ġ||", "Ġ(", "Type", "2", "Ġ==", "ĠNULL", "))", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "(", "0", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "Type", "1", "Ġ==", "ĠType", "2", ")", "Ġ", "Ġ", "Ġ//", "ĠType", "Info", "'s", "Ġare", "Ġstatic", ",", "Ġso", "Ġwe", "Ġcan", "Ġcompare", "Ġpointers", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "(", "1", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "ĠTYPE", "_", "INFO", "_", "MAX", "_", "TY", "P", "ES", ";", "Ġi", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "In", "her", "its", "From", "(", "Type", "1", "->", "mp", "Base", "Class", "es", "[", "i", "],", "ĠType", "2", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "(", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "(", "0", ");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["i", 14, "comesFrom", ["i"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::909", "code": "#include \"Rotation.h\"\n\nRotation::Rotation(void)\n{\n\tangle = 0;\n\tcenter = Point();\n\taxis = Point();\n\tobject = NULL;\n}\n\nRotation::Rotation(double newangle, Point & newcenter, Point & newaxis, TransformableObject * newmesh){\n\tangle = newangle;\n\tcenter = newcenter;\n\taxis = newaxis;\n\tobject = newmesh;\n}\n\nRotation::~Rotation(void)\n{\n\tangle = 0;\n\tcenter.~Point();\n\taxis.~Point();\n}\n\n\nvoid Rotation::transform(void)\n{\n\tif(object!=NULL){\n\t\tglTranslated(-center.getX(),-center.getY(),-center.getZ());\n\t\t(*object).setAngle((*object).getAngle()+angle);\n\t\tglRotated((*object).getAngle()+angle, axis.getX(), axis.getY(), axis.getZ());\n\t\tglTranslated(center.getX(),center.getY(),center.getZ());\n\t}\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "R", "otation", ".", "h", "\"", "Ċ", "Ċ", "R", "otation", "::", "R", "otation", "(", "void", ")", "Ċ", "{", "Ċ", "ĉ", "angle", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "center", "Ġ=", "ĠPoint", "();", "Ċ", "ĉ", "axis", "Ġ=", "ĠPoint", "();", "Ċ", "ĉ", "object", "Ġ=", "ĠNULL", ";", "Ċ", "}", "Ċ", "Ċ", "R", "otation", "::", "R", "otation", "(", "double", "Ġnew", "angle", ",", "ĠPoint", "Ġ&", "Ġnew", "center", ",", "ĠPoint", "Ġ&", "Ġnew", "axis", ",", "ĠTransform", "able", "Object", "Ġ*", "Ġnew", "m", "esh", "){", "Ċ", "ĉ", "angle", "Ġ=", "Ġnew", "angle", ";", "Ċ", "ĉ", "center", "Ġ=", "Ġnew", "center", ";", "Ċ", "ĉ", "axis", "Ġ=", "Ġnew", "axis", ";", "Ċ", "ĉ", "object", "Ġ=", "Ġnew", "m", "esh", ";", "Ċ", "}", "Ċ", "Ċ", "R", "otation", "::", "~", "R", "otation", "(", "void", ")", "Ċ", "{", "Ċ", "ĉ", "angle", "Ġ=", "Ġ0", ";", "Ċ", "ĉ", "center", ".", "~", "Point", "();", "Ċ", "ĉ", "axis", ".", "~", "Point", "();", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠR", "otation", "::", "transform", "(", "void", ")", "Ċ", "{", "Ċ", "ĉ", "if", "(", "object", "!", "=", "NULL", "){", "Ċ", "ĉ", "ĉ", "gl", "Trans", "lated", "(-", "center", ".", "get", "X", "(),", "-", "center", ".", "get", "Y", "(),", "-", "center", ".", "get", "Z", "());", "Ċ", "ĉ", "ĉ", "(*", "object", ").", "set", "Ang", "le", "((", "*", "object", ").", "get", "Ang", "le", "()", "+", "angle", ");", "Ċ", "ĉ", "ĉ", "gl", "Rot", "ated", "((", "*", "object", ").", "get", "Ang", "le", "()", "+", "angle", ",", "Ġaxis", ".", "get", "X", "(),", "Ġaxis", ".", "get", "Y", "(),", "Ġaxis", ".", "get", "Z", "());", "Ċ", "ĉ", "ĉ", "gl", "Trans", "lated", "(", "center", ".", "get", "X", "(),", "center", ".", "get", "Y", "(),", "center", ".", "get", "Z", "());", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ"], "dataflow_graph": [["newangle", 13, "comesFrom", ["newangle"], [8]], ["center", 22, "comesFrom", ["center"], [14]], ["center", 29, "comesFrom", ["center"], [14]], ["center", 31, "comesFrom", ["center"], [14]], ["center", 33, "comesFrom", ["center"], [14]], ["center", 51, "comesFrom", ["center"], [14]], ["center", 53, "comesFrom", ["center"], [14]], ["center", 55, "comesFrom", ["center"], [14]], ["axis", 24, "comesFrom", ["axis"], [16]], ["axis", 44, "comesFrom", ["axis"], [16]], ["axis", 46, "comesFrom", ["axis"], [16]], ["axis", 48, "comesFrom", ["axis"], [16]], ["object", 27, "comesFrom", ["object"], [18]], ["object", 35, "comesFrom", ["object"], [18]], ["object", 37, "comesFrom", ["object"], [18]], ["object", 41, "comesFrom", ["object"], [18]], ["angle", 39, "comesFrom", ["angle"], [21]], ["angle", 43, "comesFrom", ["angle"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::910", "code": "#include \"Group.h\"\n\nGroup::Group()\n{\n    m_currentMember = 0;\n}\n\nGroup::~Group()\n{\n\n}\n\nvoid Group::addMember(Entity& entity)\n{\n    m_entities[entity.getName()] = entity;\n}\n\nvoid Group::deleteMember(std::string name)\n{\n    m_entities.erase(name);\n}\n\nvoid Group::printGroup()\n{\n    std::map<std::string, Entity>::const_iterator itBegin(m_entities.begin()),\n                                                  itEnd(m_entities.end());\n\n    for(;itBegin != itEnd; itBegin++)\n    {\n        std::cout << itBegin->first << std::endl;\n    }\n}\n\nvoid Group::draw(sf::RenderTarget& t, sf::RenderStates s) const\n{\n    (void)t;\n    (void)s;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Group", ".", "h", "\"", "Ċ", "Ċ", "Group", "::", "Group", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "current", "Member", "Ġ=", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "Group", "::", "~", "Group", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGroup", "::", "add", "Member", "(", "Entity", "&", "Ġentity", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "ent", "ities", "[", "entity", ".", "get", "Name", "()", "]", "Ġ=", "Ġentity", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGroup", "::", "delete", "Member", "(", "std", "::", "string", "Ġname", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "ent", "ities", ".", "er", "ase", "(", "name", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGroup", "::", "print", "Group", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "map", "<", "std", "::", "string", ",", "ĠEntity", ">", "::", "const", "_", "iterator", "Ġit", "Begin", "(", "m", "_", "ent", "ities", ".", "begin", "()", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġit", "End", "(", "m", "_", "ent", "ities", ".", "end", "());", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", ";", "it", "Begin", "Ġ!=", "Ġit", "End", ";", "Ġit", "Begin", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġit", "Begin", "->", "first", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGroup", "::", "draw", "(", "sf", "::", "Render", "Target", "&", "Ġt", ",", "Ġs", "f", "::", "Render", "States", "Ġs", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(", "void", ")", "t", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ(", "void", ")", "s", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["name", 13, "comesFrom", ["name"], [10]], ["itBegin", 21, "comesFrom", ["itBegin"], [15]], ["itBegin", 23, "comesFrom", ["itBegin"], [15]], ["itBegin", 25, "comesFrom", ["itBegin"], [15]], ["itEnd", 22, "comesFrom", ["itEnd"], [18]], ["s", 32, "comesFrom", ["s"], [30]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::911", "code": "class Solution {\npublic:\n    int minimumTotal(vector<vector<int> > &triangle) {\n        // http://discuss.leetcode.com/questions/285/triangle/477\n        int level = triangle.size();\n\n        // basically, path is the level right below the bottom of \n        // the triangle\n        std::vector<int> path(level + 1, 0);\n\n        // start from the bottom level, trace back to the top by applying\n        // dynamic programming\n        while(level-- > 0){\n            for(int i = 0; i <= level; ++i){\n                path[i] = triangle[level][i] + std::min(path[i], path[i+1]);\n            }\n        }\n\n        return path[0];\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġminimum", "Total", "(", "vector", "<", "vector", "<", "int", ">", "Ġ>", "Ġ&", "tri", "angle", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġhttp", "://", "disc", "uss", ".", "le", "et", "code", ".", "com", "/", "quest", "ions", "/", "285", "/", "tri", "angle", "/", "477", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlevel", "Ġ=", "Ġtriangle", ".", "size", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġbasically", ",", "Ġpath", "Ġis", "Ġthe", "Ġlevel", "Ġright", "Ġbelow", "Ġthe", "Ġbottom", "Ġof", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġthe", "Ġtriangle", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "int", ">", "Ġpath", "(", "level", "Ġ+", "Ġ1", ",", "Ġ0", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġstart", "Ġfrom", "Ġthe", "Ġbottom", "Ġlevel", ",", "Ġtrace", "Ġback", "Ġto", "Ġthe", "Ġtop", "Ġby", "Ġapplying", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġdynamic", "Ġprogramming", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "(", "level", "--", "Ġ>", "Ġ0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<=", "Ġlevel", ";", "Ġ++", "i", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpath", "[", "i", "]", "Ġ=", "Ġtriangle", "[", "level", "][", "i", "]", "Ġ+", "Ġstd", "::", "min", "(", "path", "[", "i", "],", "Ġpath", "[", "i", "+", "1", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġpath", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["level", 6, "comesFrom", ["level"], [2]], ["level", 7, "comesFrom", ["level"], [2]], ["level", 10, "comesFrom", ["level"], [2]], ["level", 15, "comesFrom", ["level"], [2]], ["i", 9, "comesFrom", ["i"], [8]], ["i", 11, "comesFrom", ["i"], [8]], ["i", 13, "comesFrom", ["i"], [8]], ["i", 16, "comesFrom", ["i"], [8]], ["i", 19, "comesFrom", ["i"], [8]], ["i", 21, "comesFrom", ["i"], [8]], ["path", 12, "comesFrom", ["path"], [5]], ["path", 18, "comesFrom", ["path"], [5]], ["path", 20, "comesFrom", ["path"], [5]], ["path", 22, "comesFrom", ["path"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::912", "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\ntypedef struct test\n{\n\tint e;\n\tchar a;\n\tchar b;\n\tchar c;\n\tchar d;\n} test_t;\n\nint main()\n{\n\t//string str = \"abcdefgh\";\n\tchar str[] = \"abcd\";\n\ttest_t *tt = (test_t *)malloc(sizeof(test_t));\n\tvoid * addr = tt;\n\tmemset(tt, 'x', sizeof(test_t));\n\ttt = (test_t *)str;\n\tcout << \"sizeof(test_t) = \" << sizeof(test_t) << \", str len = \" << strlen(str) << endl;\n\tcout << \"str \" << str << \"; tt:\" << hex << tt->e << \" \" << tt->a << \" \" << tt->b << \" \" << tt->c << \" \" << tt->d << endl;\n\tfree(addr);\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "ty", "ped", "ef", "Ġstruct", "Ġtest", "Ċ", "{", "Ċ", "ĉ", "int", "Ġe", ";", "Ċ", "ĉ", "char", "Ġa", ";", "Ċ", "ĉ", "char", "Ġb", ";", "Ċ", "ĉ", "char", "Ġc", ";", "Ċ", "ĉ", "char", "Ġd", ";", "Ċ", "}", "Ġtest", "_", "t", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "//", "string", "Ġstr", "Ġ=", "Ġ\"", "abc", "def", "gh", "\";", "Ċ", "ĉ", "char", "Ġstr", "[]", "Ġ=", "Ġ\"", "ab", "cd", "\";", "Ċ", "ĉ", "test", "_", "t", "Ġ*", "tt", "Ġ=", "Ġ(", "test", "_", "t", "Ġ*)", "m", "alloc", "(", "size", "of", "(", "test", "_", "t", "));", "Ċ", "ĉ", "void", "Ġ*", "Ġaddr", "Ġ=", "Ġt", "t", ";", "Ċ", "ĉ", "mem", "set", "(", "tt", ",", "Ġ'", "x", "',", "Ġsizeof", "(", "test", "_", "t", "));", "Ċ", "ĉ", "tt", "Ġ=", "Ġ(", "test", "_", "t", "Ġ*)", "str", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "size", "of", "(", "test", "_", "t", ")", "Ġ=", "Ġ\"", "Ġ<<", "Ġsizeof", "(", "test", "_", "t", ")", "Ġ<<", "Ġ\",", "Ġstr", "Ġlen", "Ġ=", "Ġ\"", "Ġ<<", "Ġstr", "len", "(", "str", ")", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġ\"", "str", "Ġ\"", "Ġ<<", "Ġstr", "Ġ<<", "Ġ\"", ";", "Ġt", "t", ":\"", "Ġ<<", "Ġhex", "Ġ<<", "Ġt", "t", "->", "e", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġt", "t", "->", "a", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġt", "t", "->", "b", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġt", "t", "->", "c", "Ġ<<", "Ġ\"", "Ġ\"", "Ġ<<", "Ġt", "t", "->", "d", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "free", "(", "addr", ");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["tt", 14, "comesFrom", ["tt"], [12]], ["tt", 26, "comesFrom", ["tt"], [16]], ["tt", 28, "comesFrom", ["tt"], [16]], ["tt", 30, "comesFrom", ["tt"], [16]], ["tt", 32, "comesFrom", ["tt"], [16]], ["tt", 34, "comesFrom", ["tt"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::913", "code": "#include\"flipflop.h\"\n#include\"driverf.h\"\n#include\"enable.h\"\n#include\"monitorf.h\"\n\n#include<systemc.h>\n\nint sc_main(int argc, char *argv[]){\n//some signals for interconnections\nsc_signal<bool> in,in1, out;\n\n//module instances\nflipflop flip(\"flipflop_instance\");\ndriver dr(\"driver\");\nenable en(\"enable_instance\");\nmonitor mn(\"monitor_instance\");\n//interconnections b2in modules\ndr.d_a(in);\nflip.a(in);\nmn.m_a(in);\n\nen.d_b(in1);\nflip.b(in1);\nmn.m_b(in1);\nflip.c(out);\nmn.m_c(out);\n\n\n\n//create a trace file with nanosecond resolution\nsc_trace_file *tf;\ntf = sc_create_vcd_trace_file(\"timing1_diagram\");\ncout<<\"dry run\"<<endl;\ntf->set_time_unit(1, SC_NS);\n//trace the signals interconnecting modules\nsc_trace(tf, in, \"binary_input\"); // signals to be traced\nsc_trace(tf, in1, \"enable\");\nsc_trace(tf, out, \"binary_output\");\n\n//run a simulation for 20 systemc nano-seconds\nif( !sc_pending_activity() )\nsc_start(100,SC_NS);\n//close the trace file\nsc_close_vcd_trace_file(tf);\nreturn 0;\n}\n\n\n", "code_tokens": ["Ġ#", "include", "\"", "fl", "ip", "fl", "op", ".", "h", "\"", "Ċ", "#", "include", "\"", "driver", "f", ".", "h", "\"", "Ċ", "#", "include", "\"", "enable", ".", "h", "\"", "Ċ", "#", "include", "\"", "monitor", "f", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "<", "system", "c", ".", "h", ">", "Ċ", "Ċ", "int", "Ġsc", "_", "main", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "{", "Ċ", "//", "some", "Ġsignals", "Ġfor", "Ġinter", "connect", "ions", "Ċ", "sc", "_", "sign", "al", "<", "bool", ">", "Ġin", ",", "in", "1", ",", "Ġout", ";", "Ċ", "Ċ", "//", "module", "Ġinstances", "Ċ", "fl", "ip", "fl", "op", "Ġflip", "(\"", "fl", "ip", "fl", "op", "_", "instance", "\");", "Ċ", "driver", "Ġdr", "(\"", "driver", "\");", "Ċ", "enable", "Ġen", "(\"", "enable", "_", "instance", "\");", "Ċ", "monitor", "Ġm", "n", "(\"", "monitor", "_", "instance", "\");", "Ċ", "//", "inter", "connect", "ions", "Ġb", "2", "in", "Ġmodules", "Ċ", "dr", ".", "d", "_", "a", "(", "in", ");", "Ċ", "fl", "ip", ".", "a", "(", "in", ");", "Ċ", "mn", ".", "m", "_", "a", "(", "in", ");", "Ċ", "Ċ", "en", ".", "d", "_", "b", "(", "in", "1", ");", "Ċ", "fl", "ip", ".", "b", "(", "in", "1", ");", "Ċ", "mn", ".", "m", "_", "b", "(", "in", "1", ");", "Ċ", "fl", "ip", ".", "c", "(", "out", ");", "Ċ", "mn", ".", "m", "_", "c", "(", "out", ");", "ĊĊ", "Ċ", "Ċ", "//", "create", "Ġa", "Ġtrace", "Ġfile", "Ġwith", "Ġnan", "ose", "cond", "Ġresolution", "Ċ", "sc", "_", "trace", "_", "file", "Ġ*", "tf", ";", "Ċ", "tf", "Ġ=", "Ġsc", "_", "create", "_", "v", "cd", "_", "trace", "_", "file", "(\"", "tim", "ing", "1", "_", "di", "agram", "\");", "Ċ", "c", "out", "<<", "\"", "dry", "Ġrun", "\"", "<<", "end", "l", ";", "Ċ", "tf", "->", "set", "_", "time", "_", "unit", "(", "1", ",", "ĠSC", "_", "NS", ");", "Ċ", "//", "trace", "Ġthe", "Ġsignals", "Ġinter", "connect", "ing", "Ġmodules", "Ċ", "sc", "_", "trace", "(", "tf", ",", "Ġin", ",", "Ġ\"", "binary", "_", "input", "\");", "Ġ//", "Ġsignals", "Ġto", "Ġbe", "Ġtraced", "Ċ", "sc", "_", "trace", "(", "tf", ",", "Ġin", "1", ",", "Ġ\"", "enable", "\");", "Ċ", "sc", "_", "trace", "(", "tf", ",", "Ġout", ",", "Ġ\"", "binary", "_", "output", "\");", "Ċ", "Ċ", "//", "run", "Ġa", "Ġsimulation", "Ġfor", "Ġ20", "Ġsystem", "c", "Ġnano", "-", "seconds", "Ċ", "if", "(", "Ġ!", "sc", "_", "p", "ending", "_", "activity", "()", "Ġ)", "Ċ", "sc", "_", "start", "(", "100", ",", "SC", "_", "NS", ");", "Ċ", "//", "close", "Ġthe", "Ġtrace", "Ġfile", "Ċ", "sc", "_", "close", "_", "v", "cd", "_", "trace", "_", "file", "(", "tf", ");", "Ċ", "return", "Ġ0", ";", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["dr", 10, "comesFrom", ["dr"], [7]], ["in", 12, "comesFrom", ["in"], [3]], ["in", 15, "comesFrom", ["in"], [3]], ["in", 18, "comesFrom", ["in"], [3]], ["in", 44, "comesFrom", ["in"], [3]], ["flip", 13, "comesFrom", ["flip"], [6]], ["flip", 22, "comesFrom", ["flip"], [6]], ["flip", 28, "comesFrom", ["flip"], [6]], ["mn", 16, "comesFrom", ["mn"], [9]], ["mn", 25, "comesFrom", ["mn"], [9]], ["mn", 31, "comesFrom", ["mn"], [9]], ["en", 19, "comesFrom", ["en"], [8]], ["in1", 21, "comesFrom", ["in1"], [4]], ["in1", 24, "comesFrom", ["in1"], [4]], ["in1", 27, "comesFrom", ["in1"], [4]], ["in1", 47, "comesFrom", ["in1"], [4]], ["out", 30, "comesFrom", ["out"], [5]], ["out", 33, "comesFrom", ["out"], [5]], ["out", 50, "comesFrom", ["out"], [5]], ["tf", 39, "comesFrom", ["tf"], [35]], ["tf", 43, "comesFrom", ["tf"], [35]], ["tf", 46, "comesFrom", ["tf"], [35]], ["tf", 49, "comesFrom", ["tf"], [35]], ["tf", 55, "comesFrom", ["tf"], [35]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::914", "code": "#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,nn,m=0;\nstruct Edge {int s,e,v;} e[10010];\nbool cmp(Edge a,Edge b) {return a.v<b.v;}\nint fat[110],ans=0;\nint father(int x) {return x==fat[x]?x:fat[x]=father(fat[x]);}\nint main()\n{\n    int i,k=0; char ch;\n\tscanf(\"%d\",&nn);\n\twhile(1)\n\t{\n\t\tif(nn==0) break;\n\t\tn=nn;\n\t\tm=0;ans=0;k=0;\n\t\twhile(scanf(\"%d\",&e[++m].s) && (ch=getchar()) && ch!='\\n') scanf(\"%d %d\",&e[m].e,&e[m].v);\n\t\tnn=e[m--].s;\n\t\tfor(i=1;i<=n;i++) fat[i]=i;\n\t\tsort(e+1,e+m+1,cmp);\n\t\tfor(i=1;i<=m;i++)\n\t\t{\n\t\t\tint x=father(e[i].s),y=father(e[i].e);\n\t\t\tif(x==y) continue;\n\t\t\telse\n\t\t\t{\n\t\t\t\tfat[x]=y;\n\t\t\t\tans+=e[i].v;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tif(k==n-1) break;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "<", "c", "std", "io", ">", "Ċ", "#", "include", "<", "c", "string", ">", "Ċ", "#", "include", "<", "al", "gorithm", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "int", "Ġn", ",", "nn", ",", "m", "=", "0", ";", "Ċ", "struct", "ĠEdge", "Ġ{", "int", "Ġs", ",", "e", ",", "v", ";}", "Ġe", "[", "100", "10", "];", "Ċ", "bool", "Ġc", "mp", "(", "Edge", "Ġa", ",", "Edge", "Ġb", ")", "Ġ{", "return", "Ġa", ".", "v", "<", "b", ".", "v", ";}", "Ċ", "int", "Ġfat", "[", "110", "],", "ans", "=", "0", ";", "Ċ", "int", "Ġfather", "(", "int", "Ġx", ")", "Ġ{", "return", "Ġx", "==", "fat", "[", "x", "]", "?", "x", ":", "fat", "[", "x", "]=", "father", "(", "fat", "[", "x", "]);", "}", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġi", ",", "k", "=", "0", ";", "Ġchar", "Ġch", ";", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "&", "nn", ");", "Ċ", "ĉ", "while", "(", "1", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "if", "(", "nn", "==", "0", ")", "Ġbreak", ";", "Ċ", "ĉ", "ĉ", "n", "=", "nn", ";", "Ċ", "ĉ", "ĉ", "m", "=", "0", ";", "ans", "=", "0", ";", "k", "=", "0", ";", "Ċ", "ĉ", "ĉ", "while", "(", "scan", "f", "(\"", "%", "d", "\",", "&", "e", "[", "++", "m", "].", "s", ")", "Ġ&&", "Ġ(", "ch", "=", "get", "char", "())", "Ġ&&", "Ġch", "!", "='", "\\", "n", "')", "Ġscan", "f", "(\"", "%", "d", "Ġ%", "d", "\",", "&", "e", "[", "m", "].", "e", ",", "&", "e", "[", "m", "].", "v", ");", "Ċ", "ĉ", "ĉ", "nn", "=", "e", "[", "m", "--", "].", "s", ";", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "++)", "Ġfat", "[", "i", "]=", "i", ";", "Ċ", "ĉ", "ĉ", "sort", "(", "e", "+", "1", ",", "e", "+", "m", "+", "1", ",", "cmp", ");", "Ċ", "ĉ", "ĉ", "for", "(", "i", "=", "1", ";", "i", "<", "=", "m", ";", "i", "++)", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "int", "Ġx", "=", "father", "(", "e", "[", "i", "].", "s", "),", "y", "=", "father", "(", "e", "[", "i", "].", "e", ");", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "x", "==", "y", ")", "Ġcontinue", ";", "Ċ", "ĉ", "ĉ", "ĉ", "else", "Ċ", "ĉ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "fat", "[", "x", "]=", "y", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ans", "+=", "e", "[", "i", "].", "v", ";", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "k", "++;", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "if", "(", "k", "==", "n", "-", "1", ")", "Ġbreak", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "printf", "(\"", "%", "d", "\\", "n", "\",", "ans", ");", "Ċ", "ĉ", "}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["a", 11, "comesFrom", ["a"], [9]], ["b", 13, "comesFrom", ["b"], [10]], ["x", 19, "comesFrom", ["x"], [18]], ["x", 21, "comesFrom", ["x"], [18]], ["x", 22, "comesFrom", ["x"], [18]], ["x", 24, "comesFrom", ["x"], [18]], ["x", 27, "comesFrom", ["x"], [18]], ["x", 84, "comesFrom", ["x"], [74]], ["x", 87, "comesFrom", ["x"], [74]], ["nn", 33, "comesFrom", ["nn"], [2]], ["nn", 34, "comesFrom", ["nn"], [2]], ["nn", 36, "comesFrom", ["nn"], [2]], ["m", 42, "comesFrom", ["m"], [37]], ["m", 49, "comesFrom", ["m"], [37]], ["m", 52, "comesFrom", ["m"], [37]], ["m", 56, "comesFrom", ["m"], [37]], ["m", 68, "comesFrom", ["m"], [37]], ["m", 72, "comesFrom", ["m"], [37]], ["ch", 46, "comesFrom", ["ch"], [44]], ["i", 59, "comesFrom", ["i"], [58]], ["i", 61, "comesFrom", ["i"], [58]], ["i", 63, "comesFrom", ["i"], [58]], ["i", 64, "comesFrom", ["i"], [58]], ["i", 71, "comesFrom", ["i"], [70]], ["i", 73, "comesFrom", ["i"], [70]], ["i", 77, "comesFrom", ["i"], [70]], ["i", 82, "comesFrom", ["i"], [70]], ["i", 91, "comesFrom", ["i"], [70]], ["n", 60, "comesFrom", ["n"], [35]], ["n", 95, "comesFrom", ["n"], [35]], ["y", 85, "comesFrom", ["y"], [79]], ["y", 88, "comesFrom", ["y"], [79]], ["k", 93, "comesFrom", ["k"], [39]], ["k", 94, "comesFrom", ["k"], [39]], ["ans", 97, "comesFrom", ["ans"], [89]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::915", "code": "#include <QtGui/QApplication>\n\n#ifndef QT_SIMULATOR\n#include <MDeclarativeCache>\n#endif\n\n#include \"qmlapplicationviewer.h\"\n\nQ_DECL_EXPORT int main(int argc, char *argv[])\n{\n#ifndef QT_SIMULATOR\n    QScopedPointer<QApplication> app(MDeclarativeCache::qApplication(argc, argv));\n#else\n    QScopedPointer<QApplication> app(new QApplication(argc, argv));\n#endif\n    QmlApplicationViewer viewer;\n    viewer.setOrientation(QmlApplicationViewer::ScreenOrientationAuto);\n    viewer.setMainQmlFile(QLatin1String(\"qml/stopwatch/main.qml\"));\n    viewer.showExpanded();\n\n    return app->exec();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Q", "t", "Gu", "i", "/", "Q", "Application", ">", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠQ", "T", "_", "SIM", "UL", "ATOR", "Ċ", "#", "include", "Ġ<", "M", "Decl", "ar", "ative", "Cache", ">", "Ċ", "#", "endif", "Ċ", "Ċ", "#", "include", "Ġ\"", "q", "ml", "application", "view", "er", ".", "h", "\"", "Ċ", "Ċ", "Q", "_", "DEC", "L", "_", "EX", "PORT", "Ġint", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "#", "if", "nd", "ef", "ĠQ", "T", "_", "SIM", "UL", "ATOR", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Sc", "oped", "Po", "inter", "<", "Q", "Application", ">", "Ġapp", "(", "M", "Decl", "ar", "ative", "Cache", "::", "q", "Application", "(", "arg", "c", ",", "Ġarg", "v", "));", "Ċ", "#", "else", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Sc", "oped", "Po", "inter", "<", "Q", "Application", ">", "Ġapp", "(", "new", "ĠQ", "Application", "(", "arg", "c", ",", "Ġarg", "v", "));", "Ċ", "#", "endif", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "ml", "Application", "View", "er", "Ġviewer", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġviewer", ".", "set", "O", "rient", "ation", "(", "Q", "ml", "Application", "View", "er", "::", "Screen", "O", "rient", "ation", "Auto", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġviewer", ".", "set", "Main", "Q", "ml", "File", "(", "QL", "atin", "1", "String", "(\"", "q", "ml", "/", "stop", "watch", "/", "main", ".", "q", "ml", "\")", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġviewer", ".", "show", "Exp", "anded", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġapp", "->", "exec", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["app", 19, "comesFrom", ["app"], [7]], ["argc", 8, "comesFrom", ["argc"], [3]], ["viewer", 11, "comesFrom", ["viewer"], [10]], ["viewer", 14, "comesFrom", ["viewer"], [10]], ["viewer", 17, "comesFrom", ["viewer"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::916", "code": "#include <list>\r\n#include <map>\r\n#include <set>\r\n#include <deque>\r\n#include <queue>\r\n#include <stack>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <cstring>\r\n#include <vector>\r\n#include <cstring>\r\n#include <cassert>\r\n#include <ctime>\r\n#include <stdbool.h>\r\n#include <utility>\r\nusing namespace std;\r\nint main()\r\n{\r\n\r\n    vector<int>n;\r\n    int m;\r\n    int l=n.size();\r\n    cin>>m;\r\n    n.resize(m);\r\n    int len=n.size();\r\n    cout<<l<<\"   \"<<len<<endl;\r\n    return 0;\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "list", ">", "č", "Ċ", "#", "include", "Ġ<", "map", ">", "č", "Ċ", "#", "include", "Ġ<", "set", ">", "č", "Ċ", "#", "include", "Ġ<", "de", "que", ">", "č", "Ċ", "#", "include", "Ġ<", "queue", ">", "č", "Ċ", "#", "include", "Ġ<", "stack", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "č", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "č", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "vector", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "string", ">", "č", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "č", "Ċ", "#", "include", "Ġ<", "ct", "ime", ">", "č", "Ċ", "#", "include", "Ġ<", "st", "db", "ool", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "ut", "ility", ">", "č", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "č", "Ċ", "int", "Ġmain", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "n", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġm", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġl", "=", "n", ".", "size", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", ">>", "m", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġn", ".", "res", "ize", "(", "m", ");", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlen", "=", "n", ".", "size", "();", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "<<", "l", "<<", "\"", "Ġ", "Ġ", "Ġ\"", "<<", "len", "<<", "end", "l", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [2]], ["n", 9, "comesFrom", ["n"], [2]], ["n", 13, "comesFrom", ["n"], [2]], ["m", 8, "comesFrom", ["m"], [3]], ["m", 11, "comesFrom", ["m"], [3]], ["l", 16, "comesFrom", ["l"], [4]], ["len", 17, "comesFrom", ["len"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::917", "code": "#include \"ofMain.h\"\n#include \"ofApp.h\"\n\n//========================================================================\nint main()\n{\n\tofGLFWWindowSettings settings;\n\tsettings.setGLVersion(4, 5);\n    settings.width = 1920;\n    settings.height = 1080;\n    ofCreateWindow(settings);\n\n    ofRunApp(new ofApp());\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "of", "Main", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "of", "App", ".", "h", "\"", "Ċ", "Ċ", "//", "================================================================", "========", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "of", "GL", "FW", "Window", "Settings", "Ġsettings", ";", "Ċ", "ĉ", "settings", ".", "set", "GL", "Version", "(", "4", ",", "Ġ5", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsettings", ".", "width", "Ġ=", "Ġ1920", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsettings", ".", "height", "Ġ=", "Ġ1080", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġof", "Create", "Window", "(", "settings", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġof", "Run", "App", "(", "new", "Ġof", "App", "());", "Ċ", "}", "Ċ"], "dataflow_graph": [["settings", 2, "comesFrom", ["settings"], [1]], ["settings", 4, "comesFrom", ["settings"], [1]], ["settings", 6, "comesFrom", ["settings"], [1]], ["settings", 9, "comesFrom", ["settings"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::918", "code": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n\tint x, n, p;\n\tcin >> x >> n;\n\n\tint total = x;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> p;\n\t\ttotal += x - p;\n\t}\n\tcout << total << endl;\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġx", ",", "Ġn", ",", "Ġp", ";", "Ċ", "ĉ", "cin", "Ġ>>", "Ġx", "Ġ>>", "Ġn", ";", "ĊĊ", "ĉ", "int", "Ġtotal", "Ġ=", "Ġx", ";", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "cin", "Ġ>>", "Ġp", ";", "Ċ", "ĉ", "ĉ", "total", "Ġ+=", "Ġx", "Ġ-", "Ġp", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "c", "out", "Ġ<<", "Ġtotal", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 6, "comesFrom", ["x"], [2]], ["x", 17, "comesFrom", ["x"], [9]], ["n", 7, "comesFrom", ["n"], [3]], ["n", 12, "comesFrom", ["n"], [3]], ["i", 11, "comesFrom", ["i"], [10]], ["i", 13, "comesFrom", ["i"], [10]], ["p", 15, "comesFrom", ["p"], [4]], ["p", 18, "comesFrom", ["p"], [4]], ["total", 20, "comesFrom", ["total"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::919", "code": "//\n//  main.cpp\n//  Assigment0\n//\n//  Created by Danilo Mendes on 1/18/16.\n//  Email: dbarrosmende2015@my.fit.edu\n//  Copyright © 2016 Danilo Mendes. All rights reserved.\n//\n\n/**\n The purpose of this exercise is to acquaint you with the C++ \n programming environment used in the course.\n **/\n\n/*\n Prompt user for number of pods\n Get number of pods\n Prompt user for number of peas in a pod\n Get number of peas in a pod\n Calculate total, total_peas = number_of_pods * peas_per_pod\n Display total\n */\n\n#include <iostream>\nusing namespace std;\n\nint main(int argc, const char * argv[]) {\n    \n    int number_of_pods, peas_per_pod, total_peas;\n    cout << \"Hello\\n\";\n    cout << \"Press return after entering a number.\\n\";\n    cout << \"Enter the number of pods:\\n\";\n    cin >> number_of_pods;\n    cout << \"Enter the number of peas in a pod:\\n\";\n    cin >> peas_per_pod;\n    total_peas = number_of_pods / peas_per_pod;\n    cout << \"If you have \"; cout << number_of_pods; cout << \" pea pods\\n\";\n    cout << \"and \"; cout << peas_per_pod; cout << \" peas in each pod, then\\n\";\n    cout << \"you have \"; cout << total_peas; cout << \" peas in all the pods.\\n\";\n    cout << \"Good Bye\\n\";\n    return 0;\n}\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "Ġmain", ".", "cpp", "Ċ", "//", "Ġ", "ĠAss", "ig", "ment", "0", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠDan", "ilo", "ĠMend", "es", "Ġon", "Ġ1", "/", "18", "/", "16", ".", "Ċ", "//", "Ġ", "ĠEmail", ":", "Ġd", "bar", "ros", "m", "ende", "2015", "@", "my", ".", "fit", ".", "edu", "Ċ", "//", "Ġ", "ĠCopyright", "ĠÂ©", "Ġ2016", "ĠDan", "ilo", "ĠMend", "es", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "/**", "Ċ", "ĠThe", "Ġpurpose", "Ġof", "Ġthis", "Ġexercise", "Ġis", "Ġto", "Ġacquaint", "Ġyou", "Ġwith", "Ġthe", "ĠC", "++", "Ġ", "Ċ", "Ġprogramming", "Ġenvironment", "Ġused", "Ġin", "Ġthe", "Ġcourse", ".", "Ċ", "Ġ**", "/", "Ċ", "Ċ", "/*", "Ċ", "ĠPrompt", "Ġuser", "Ġfor", "Ġnumber", "Ġof", "Ġpods", "Ċ", "ĠGet", "Ġnumber", "Ġof", "Ġpods", "Ċ", "ĠPrompt", "Ġuser", "Ġfor", "Ġnumber", "Ġof", "Ġpeas", "Ġin", "Ġa", "Ġpod", "Ċ", "ĠGet", "Ġnumber", "Ġof", "Ġpeas", "Ġin", "Ġa", "Ġpod", "Ċ", "ĠCalcul", "ate", "Ġtotal", ",", "Ġtotal", "_", "pe", "as", "Ġ=", "Ġnumber", "_", "of", "_", "p", "ods", "Ġ*", "Ġpeas", "_", "per", "_", "pod", "Ċ", "ĠDisplay", "Ġtotal", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġconst", "Ġchar", "Ġ*", "Ġarg", "v", "[", "])", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġnumber", "_", "of", "_", "p", "ods", ",", "Ġpeas", "_", "per", "_", "pod", ",", "Ġtotal", "_", "pe", "as", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Hello", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Press", "Ġreturn", "Ġafter", "Ġentering", "Ġa", "Ġnumber", ".", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Enter", "Ġthe", "Ġnumber", "Ġof", "Ġpods", ":\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġnumber", "_", "of", "_", "p", "ods", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Enter", "Ġthe", "Ġnumber", "Ġof", "Ġpeas", "Ġin", "Ġa", "Ġpod", ":\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġc", "in", "Ġ>>", "Ġpeas", "_", "per", "_", "pod", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtotal", "_", "pe", "as", "Ġ=", "Ġnumber", "_", "of", "_", "p", "ods", "Ġ/", "Ġpeas", "_", "per", "_", "pod", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "If", "Ġyou", "Ġhave", "Ġ\"", ";", "Ġcout", "Ġ<<", "Ġnumber", "_", "of", "_", "p", "ods", ";", "Ġcout", "Ġ<<", "Ġ\"", "Ġpe", "a", "Ġpods", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "and", "Ġ\"", ";", "Ġcout", "Ġ<<", "Ġpeas", "_", "per", "_", "pod", ";", "Ġcout", "Ġ<<", "Ġ\"", "Ġpeas", "Ġin", "Ġeach", "Ġpod", ",", "Ġthen", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "you", "Ġhave", "Ġ\"", ";", "Ġcout", "Ġ<<", "Ġtotal", "_", "pe", "as", ";", "Ġcout", "Ġ<<", "Ġ\"", "Ġpeas", "Ġin", "Ġall", "Ġthe", "Ġpods", ".", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Good", "ĠBye", "\\", "n", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["number_of_pods", 11, "comesFrom", ["number_of_pods"], [4]], ["number_of_pods", 16, "comesFrom", ["number_of_pods"], [4]], ["number_of_pods", 20, "comesFrom", ["number_of_pods"], [4]], ["peas_per_pod", 14, "comesFrom", ["peas_per_pod"], [5]], ["peas_per_pod", 17, "comesFrom", ["peas_per_pod"], [5]], ["peas_per_pod", 24, "comesFrom", ["peas_per_pod"], [5]], ["total_peas", 28, "comesFrom", ["total_peas"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::920", "code": "//libfcgicpp is boost asio based fastcgi implementation, which uses asynchronous event model and io_service per cpu design\n//Copyright (C) 2011 aladjev.andrew@gmail.com \n//This program is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. //This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\n//You should have received a copy of the GNU Lesser General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.\n#ifndef BODY_HPP\n#define\tBODY_HPP\n\n#include \"Util.hpp\"\n#include <stdint.h>\n\nnamespace fcgi {\n\n\tclass Body {\n\tprotected:\n\t\tuint16_t content_length;\n\n\tpublic:\n\n\t\tBody(uint16_t _content_length) : content_length(_content_length)\n\t\t{\n\t\t}\n\n\t\tinline size_t getContentLength()\n\t\t{\n\t\t\treturn this->content_length;\n\t\t}\n\t};\n\n\ttypedef boost::error_info<struct tag_bad_number, uint32_t> bad_number;\n\n\tstruct BodyException : public Exception {\n\n\t\tBodyException(string msg) : Exception(msg)\n\t\t{\n\t\t}\n\t};\n}\n\n#endif\t/* BODY_HPP */", "code_tokens": ["Ġ//", "lib", "fc", "g", "ic", "pp", "Ġis", "Ġboost", "Ġas", "io", "Ġbased", "Ġfast", "cgi", "Ġimplementation", ",", "Ġwhich", "Ġuses", "Ġasynchronous", "Ġevent", "Ġmodel", "Ġand", "Ġio", "_", "service", "Ġper", "Ġcpu", "Ġdesign", "Ċ", "//", "Copyright", "Ġ(", "C", ")", "Ġ2011", "Ġal", "adj", "ev", ".", "and", "rew", "@", "gmail", ".", "com", "Ġ", "Ċ", "//", "This", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ġ//", "This", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "ĠSee", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "#", "if", "nd", "ef", "ĠB", "ODY", "_", "H", "PP", "Ċ", "#", "define", "ĉ", "B", "ODY", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ\"", "Ut", "il", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ<", "std", "int", ".", "h", ">", "Ċ", "Ċ", "names", "pace", "Ġf", "cgi", "Ġ{", "ĊĊ", "ĉ", "class", "ĠBody", "Ġ{", "Ċ", "ĉ", "protected", ":", "Ċ", "ĉ", "ĉ", "uint", "16", "_", "t", "Ġcontent", "_", "length", ";", "ĊĊ", "ĉ", "public", ":", "ĊĊ", "ĉ", "ĉ", "Body", "(", "uint", "16", "_", "t", "Ġ_", "content", "_", "length", ")", "Ġ:", "Ġcontent", "_", "length", "(_", "content", "_", "length", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "inline", "Ġsize", "_", "t", "Ġget", "Content", "Length", "()", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "ĉ", "return", "Ġthis", "->", "content", "_", "length", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "};", "ĊĊ", "ĉ", "ty", "ped", "ef", "Ġboost", "::", "error", "_", "info", "<", "struct", "Ġtag", "_", "bad", "_", "number", ",", "Ġuint", "32", "_", "t", ">", "Ġbad", "_", "number", ";", "ĊĊ", "ĉ", "struct", "ĠBody", "Exception", "Ġ:", "Ġpublic", "ĠException", "Ġ{", "ĊĊ", "ĉ", "ĉ", "Body", "Exception", "(", "string", "Ġmsg", ")", "Ġ:", "ĠException", "(", "msg", ")", "Ċ", "ĉ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "ĉ", "/*", "ĠB", "ODY", "_", "H", "PP", "Ġ*/"], "dataflow_graph": [["_content_length", 6, "comesFrom", ["_content_length"], [4]], ["msg", 12, "comesFrom", ["msg"], [10]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::921", "code": "#include \"KSOS.h\"\n\nCTrack_Edit::CTrack_Edit(CBasePane* pPaneParent, CBaseGUI* pGUI)\n\t: CBasePane(pPaneParent, pGUI)\n{\n\tmpPane = NULL;\n\n}\n\nCTrack_Edit::~CTrack_Edit()\n{\n}\n\nvoid CTrack_Edit::SetInfo()\n{\n\n}\n\nvoid CTrack_Edit::Init()\n{\n\t// Create the main pane\n\tmpPane = ge::IPane::Create();\n\tmpPane->SetSize(gTrack_Edit);\n\tmpPane->SetAutomaticResize(true, ge::IControl::ResizeAbsolute);\n\tmpPane->SetBackgroundColour(ge::SRGB(240,240,240));\n\t\n\t\n\t\n\t\n}\n\n\nvoid CTrack_Edit::ConnectControls()\n{\n}\n\nvoid CTrack_Edit::EventValueChange(ge::IControl* pControl, tint32 iValueNew)\n{\n\tGetParmMan()->ControlUpdate(miPaneID, pControl->GetID(), iValueNew);\n\t\n}\n\nvoid CTrack_Edit::EventGeneric(ge::IControl* pControl, void* pEventData)\n{\n}\n\n\nvoid CTrack_Edit::HandleMsg(SMsg* pMsg)\n{\n\n}\n\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "KS", "OS", ".", "h", "\"", "Ċ", "Ċ", "C", "Track", "_", "Edit", "::", "C", "Track", "_", "Edit", "(", "C", "Base", "P", "ane", "*", "Ġp", "P", "ane", "Parent", ",", "ĠCB", "ase", "GUI", "*", "Ġp", "GUI", ")", "Ċ", "ĉ", ":", "ĠCB", "ase", "P", "ane", "(", "p", "P", "ane", "Parent", ",", "Ġp", "GUI", ")", "Ċ", "{", "Ċ", "ĉ", "mp", "P", "ane", "Ġ=", "ĠNULL", ";", "Ċ", "Ċ", "}", "Ċ", "Ċ", "C", "Track", "_", "Edit", "::", "~", "C", "Track", "_", "Edit", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Track", "_", "Edit", "::", "Set", "Info", "()", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Track", "_", "Edit", "::", "Init", "()", "Ċ", "{", "Ċ", "ĉ", "//", "ĠCreate", "Ġthe", "Ġmain", "Ġpane", "Ċ", "ĉ", "mp", "P", "ane", "Ġ=", "Ġge", "::", "IP", "ane", "::", "Create", "();", "Ċ", "ĉ", "mp", "P", "ane", "->", "Set", "Size", "(", "g", "Track", "_", "Edit", ");", "Ċ", "ĉ", "mp", "P", "ane", "->", "Set", "Aut", "omatic", "Res", "ize", "(", "true", ",", "Ġge", "::", "IC", "ont", "rol", "::", "Res", "ize", "Abs", "olute", ");", "Ċ", "ĉ", "mp", "P", "ane", "->", "Set", "Background", "Col", "our", "(", "ge", "::", "SR", "GB", "(", "240", ",", "240", ",", "240", "));", "Ċ", "ĉ", "Ċ", "ĉ", "Ċ", "ĉ", "Ċ", "ĉ", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠC", "Track", "_", "Edit", "::", "Connect", "Control", "s", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Track", "_", "Edit", "::", "Event", "Value", "Change", "(", "ge", "::", "IC", "ont", "rol", "*", "Ġp", "Control", ",", "Ġtint", "32", "Ġi", "Value", "New", ")", "Ċ", "{", "Ċ", "ĉ", "Get", "P", "arm", "Man", "()", "->", "Control", "Update", "(", "mi", "P", "ane", "ID", ",", "Ġp", "Control", "->", "Get", "ID", "(),", "Ġi", "Value", "New", ");", "Ċ", "ĉ", "Ċ", "}", "Ċ", "Ċ", "void", "ĠC", "Track", "_", "Edit", "::", "Event", "Generic", "(", "ge", "::", "IC", "ont", "rol", "*", "Ġp", "Control", ",", "Ġvoid", "*", "Ġp", "Event", "Data", ")", "Ċ", "{", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠC", "Track", "_", "Edit", "::", "Handle", "Msg", "(", "S", "Msg", "*", "Ġp", "Msg", ")", "Ċ", "{", "Ċ", "Ċ", "}", "ĊĊ", "Ċ"], "dataflow_graph": [["mpPane", 12, "comesFrom", ["mpPane"], [10]], ["mpPane", 15, "comesFrom", ["mpPane"], [10]], ["mpPane", 18, "comesFrom", ["mpPane"], [10]], ["iValueNew", 30, "comesFrom", ["iValueNew"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::922", "code": "/*\n\nsuma nr (rang) par, suma nr (rang) impar;\n\n*/\n\n#include<iostream>\n#include<stdio.h>\n\nint main()\n{\n\tint a[100], i, n, sp=0,si=0,srp=0,sri=0;\n\n\tprintf(\"Introduceti numarul de valori: \");\n\tscanf(\"%d\", &n);\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"a[%d]=\",i);\n\t\tscanf(\"%d\", &a[i]);\n\n\t\tif(i%2==0) srp+=a[i];\n\t\telse sri+=a[i];\n\n\t\tif(a[i]%2==0) sp+=a[i];\n\t\telse si+=a[i];\n\t}\n\n\tprintf(\"Suma numerelor pare: %d. Suma numerelor impare: %d.\\nSuma de pe pozitii pare: %d. Suma de pe pozitii impare: %d.\\n\",sp,si,srp,sri);\n\n\tsystem(\"pause\");\n\treturn 0;\n}", "code_tokens": ["Ġ/*", "Ċ", "Ċ", "s", "uma", "Ġn", "r", "Ġ(", "rang", ")", "Ġpar", ",", "Ġsum", "a", "Ġn", "r", "Ġ(", "rang", ")", "Ġimp", "ar", ";", "Ċ", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "<", "i", "ost", "ream", ">", "Ċ", "#", "include", "<", "std", "io", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "ĉ", "int", "Ġa", "[", "100", "],", "Ġi", ",", "Ġn", ",", "Ġsp", "=", "0", ",", "si", "=", "0", ",", "sr", "p", "=", "0", ",", "s", "ri", "=", "0", ";", "ĊĊ", "ĉ", "printf", "(\"", "Introdu", "c", "et", "i", "Ġnum", "ar", "ul", "Ġde", "Ġval", "ori", ":", "Ġ\"", ");", "Ċ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "n", ");", "ĊĊ", "ĉ", "for", "(", "i", "=", "0", ";", "i", "<", "n", ";", "i", "++)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "printf", "(\"", "a", "[", "%", "d", "]=", "\",", "i", ");", "Ċ", "ĉ", "ĉ", "scan", "f", "(\"", "%", "d", "\",", "Ġ&", "a", "[", "i", "]);", "ĊĊ", "ĉ", "ĉ", "if", "(", "i", "%", "2", "==", "0", ")", "Ġsr", "p", "+=", "a", "[", "i", "];", "Ċ", "ĉ", "ĉ", "else", "Ġs", "ri", "+=", "a", "[", "i", "];", "ĊĊ", "ĉ", "ĉ", "if", "(", "a", "[", "i", "]", "%", "2", "==", "0", ")", "Ġsp", "+=", "a", "[", "i", "];", "Ċ", "ĉ", "ĉ", "else", "Ġsi", "+=", "a", "[", "i", "];", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "printf", "(\"", "S", "uma", "Ġnum", "ere", "lor", "Ġp", "are", ":", "Ġ%", "d", ".", "ĠSum", "a", "Ġnum", "ere", "lor", "Ġimp", "are", ":", "Ġ%", "d", ".", "\\", "n", "S", "uma", "Ġde", "Ġpe", "Ġpo", "z", "it", "ii", "Ġp", "are", ":", "Ġ%", "d", ".", "ĠSum", "a", "Ġde", "Ġpe", "Ġpo", "z", "it", "ii", "Ġimp", "are", ":", "Ġ%", "d", ".", "\\", "n", "\",", "sp", ",", "si", ",", "sr", "p", ",", "s", "ri", ");", "ĊĊ", "ĉ", "system", "(\"", "pause", "\");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["n", 10, "comesFrom", ["n"], [3]], ["n", 13, "comesFrom", ["n"], [3]], ["i", 12, "comesFrom", ["i"], [11]], ["i", 14, "comesFrom", ["i"], [11]], ["i", 16, "comesFrom", ["i"], [11]], ["i", 19, "comesFrom", ["i"], [11]], ["i", 20, "comesFrom", ["i"], [11]], ["i", 23, "comesFrom", ["i"], [11]], ["i", 26, "comesFrom", ["i"], [11]], ["i", 28, "comesFrom", ["i"], [11]], ["i", 31, "comesFrom", ["i"], [11]], ["i", 34, "comesFrom", ["i"], [11]], ["sp", 36, "comesFrom", ["sp"], [29]], ["si", 37, "comesFrom", ["si"], [32]], ["srp", 38, "comesFrom", ["srp"], [21]], ["sri", 39, "comesFrom", ["sri"], [24]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::923", "code": "#include \"register.hpp\"\n\nRegister::Register(const Word initialValue)\n\t{\n\tvalue = initialValue;\n\t}\n\nWord Register::read() const\n\t{\n\treturn value;\n\t}\n\nvoid Register::write(const Word value)\n\t{\n\tthis->value = value;\n\t}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "register", ".", "h", "pp", "\"", "Ċ", "Ċ", "Register", "::", "Register", "(", "const", "ĠWord", "Ġinitial", "Value", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "value", "Ġ=", "Ġinitial", "Value", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "Word", "ĠRegister", "::", "read", "()", "Ġconst", "Ċ", "ĉ", "{", "Ċ", "ĉ", "return", "Ġvalue", ";", "Ċ", "ĉ", "}", "Ċ", "Ċ", "void", "ĠRegister", "::", "write", "(", "const", "ĠWord", "Ġvalue", ")", "Ċ", "ĉ", "{", "Ċ", "ĉ", "this", "->", "value", "Ġ=", "Ġvalue", ";", "Ċ", "ĉ", "}", "Ċ"], "dataflow_graph": [["initialValue", 3, "comesFrom", ["initialValue"], [1]], ["value", 5, "comesFrom", ["value"], [2]], ["value", 8, "comesFrom", ["value"], [7]], ["value", 9, "comesFrom", ["value"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::924", "code": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include \"Mutex.h\"\r\n\r\n#include <pthread.h>\r\n#include \"Logger.h\"\r\n\r\nMutex::Mutex()\r\n{\r\n    pthread_mutexattr_init ( &attr );\r\n    pthread_mutex_init ( &Dmutex, &attr );\r\n}\r\n\r\nint Mutex::lock()\r\n{\r\n    int waitResult = pthread_mutex_lock ( &Dmutex );\r\n    if ( waitResult != 0 )\r\n    {\r\n        LOG ( \"Wait Failed\" );\r\n    }\r\n    return ( ( int ) waitResult );\r\n}\r\n\r\nint Mutex::unlock()\r\n{\r\n    return pthread_mutex_unlock ( &Dmutex );\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ\"", "Mut", "ex", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "#", "include", "Ġ<", "p", "thread", ".", "h", ">", "č", "Ċ", "#", "include", "Ġ\"", "Log", "ger", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "Mut", "ex", "::", "Mut", "ex", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "thread", "_", "mut", "ex", "attr", "_", "init", "Ġ(", "Ġ&", "attr", "Ġ);", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġp", "thread", "_", "mut", "ex", "_", "init", "Ġ(", "Ġ&", "D", "mut", "ex", ",", "Ġ&", "attr", "Ġ);", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠMut", "ex", "::", "lock", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġwait", "Result", "Ġ=", "Ġp", "thread", "_", "mut", "ex", "_", "lock", "Ġ(", "Ġ&", "D", "mut", "ex", "Ġ);", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "Ġwait", "Result", "Ġ!=", "Ġ0", "Ġ)", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠLOG", "Ġ(", "Ġ\"", "Wait", "ĠFailed", "\"", "Ġ);", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ(", "Ġ(", "Ġint", "Ġ)", "Ġwait", "Result", "Ġ);", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "int", "ĠMut", "ex", "::", "un", "lock", "()", "č", "Ċ", "{", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġp", "thread", "_", "mut", "ex", "_", "un", "lock", "Ġ(", "Ġ&", "D", "mut", "ex", "Ġ);", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["waitResult", 10, "comesFrom", ["waitResult"], [7]], ["waitResult", 12, "comesFrom", ["waitResult"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::925", "code": "#include \"ppm.hpp\"\n#include \"texture.hpp\"\n\nunsigned int Texture2D::load(const char *file)\n{\n\tif (NImg::IO::Import::ppm_raw(file, m_map)) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nunsigned int Texture2D::load(const Pixmap &map)\n{\n\tm_map = map;\n\n\treturn 0;\n}\n\nconst ColorRGBAf &Texture2D::sample(const float s, const float t) const\n{\n\t// Restrict s,t to the [0, 1] range.\n\tfloat rs = s < 0.f ? 0.0f : (s > 1.0f ? s - ((float)((int)(s))) : s);\n\tfloat rt = s < 0.f ? 0.0f : (t > 1.0f ? t - ((float)((int)(t))) : t);\n\n\tint x = (unsigned int)(rs * (float)m_map.width());\n\tint y = (unsigned int)(rt * (float)m_map.height());\n\n\treturn m_map.pixel_ro(x, y);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "pp", "m", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "texture", ".", "h", "pp", "\"", "Ċ", "Ċ", "unsigned", "Ġint", "ĠTexture", "2", "D", "::", "load", "(", "const", "Ġchar", "Ġ*", "file", ")", "Ċ", "{", "Ċ", "ĉ", "if", "Ġ(", "N", "Im", "g", "::", "IO", "::", "Import", "::", "pp", "m", "_", "raw", "(", "file", ",", "Ġm", "_", "map", "))", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġ1", ";", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "unsigned", "Ġint", "ĠTexture", "2", "D", "::", "load", "(", "const", "ĠPix", "map", "Ġ&", "map", ")", "Ċ", "{", "Ċ", "ĉ", "m", "_", "map", "Ġ=", "Ġmap", ";", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ", "Ċ", "const", "ĠColor", "RG", "BA", "f", "Ġ&", "Texture", "2", "D", "::", "sample", "(", "const", "Ġfloat", "Ġs", ",", "Ġconst", "Ġfloat", "Ġt", ")", "Ġconst", "Ċ", "{", "Ċ", "ĉ", "//", "ĠRestrict", "Ġs", ",", "t", "Ġto", "Ġthe", "Ġ[", "0", ",", "Ġ1", "]", "Ġrange", ".", "Ċ", "ĉ", "float", "Ġrs", "Ġ=", "Ġs", "Ġ<", "Ġ0", ".", "f", "Ġ?", "Ġ0", ".", "0", "f", "Ġ:", "Ġ(", "s", "Ġ>", "Ġ1", ".", "0", "f", "Ġ?", "Ġs", "Ġ-", "Ġ((", "float", ")(", "(", "int", ")(", "s", ")))", "Ġ:", "Ġs", ");", "Ċ", "ĉ", "float", "Ġr", "t", "Ġ=", "Ġs", "Ġ<", "Ġ0", ".", "f", "Ġ?", "Ġ0", ".", "0", "f", "Ġ:", "Ġ(", "t", "Ġ>", "Ġ1", ".", "0", "f", "Ġ?", "Ġt", "Ġ-", "Ġ((", "float", ")(", "(", "int", ")(", "t", ")))", "Ġ:", "Ġt", ");", "ĊĊ", "ĉ", "int", "Ġx", "Ġ=", "Ġ(", "unsigned", "Ġint", ")(", "rs", "Ġ*", "Ġ(", "float", ")", "m", "_", "map", ".", "width", "());", "Ċ", "ĉ", "int", "Ġy", "Ġ=", "Ġ(", "unsigned", "Ġint", ")(", "rt", "Ġ*", "Ġ(", "float", ")", "m", "_", "map", ".", "height", "());", "ĊĊ", "ĉ", "return", "Ġm", "_", "map", ".", "pixel", "_", "ro", "(", "x", ",", "Ġy", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["m_map", 26, "comesFrom", ["m_map"], [7]], ["m_map", 30, "comesFrom", ["m_map"], [7]], ["m_map", 32, "comesFrom", ["m_map"], [7]], ["s", 13, "comesFrom", ["s"], [10]], ["s", 14, "comesFrom", ["s"], [10]], ["s", 15, "comesFrom", ["s"], [10]], ["s", 16, "comesFrom", ["s"], [10]], ["s", 17, "comesFrom", ["s"], [10]], ["s", 19, "comesFrom", ["s"], [10]], ["t", 20, "comesFrom", ["t"], [11]], ["t", 21, "comesFrom", ["t"], [11]], ["t", 22, "comesFrom", ["t"], [11]], ["t", 23, "comesFrom", ["t"], [11]], ["rs", 25, "comesFrom", ["rs"], [12]], ["rt", 29, "comesFrom", ["rt"], [18]], ["x", 34, "comesFrom", ["x"], [24]], ["y", 35, "comesFrom", ["y"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::926", "code": "#include \"mesh.h\"\n\n\n\nvoid getMaxMin(double *vector, int size, double &max, double &min)\n{\n    max = vector[0];\n    min = vector[0];\n\n    for(int i=1; i<size; i++){\n        max = vector[i]>max ? vector[i] : max;\n        min = vector[i]<min ? vector[i] : min;\n    }\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "m", "esh", ".", "h", "\"", "ĊĊ", "Ċ", "Ċ", "void", "Ġget", "Max", "Min", "(", "double", "Ġ*", "vector", ",", "Ġint", "Ġsize", ",", "Ġdouble", "Ġ&", "max", ",", "Ġdouble", "Ġ&", "min", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmax", "Ġ=", "Ġvector", "[", "0", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmin", "Ġ=", "Ġvector", "[", "0", "];", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "=", "1", ";", "Ġi", "<", "size", ";", "Ġi", "++", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmax", "Ġ=", "Ġvector", "[", "i", "]", ">", "max", "Ġ?", "Ġvector", "[", "i", "]", "Ġ:", "Ġmax", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmin", "Ġ=", "Ġvector", "[", "i", "]", "<", "min", "Ġ?", "Ġvector", "[", "i", "]", "Ġ:", "Ġmin", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["max", 16, "comesFrom", ["max"], [13]], ["max", 19, "comesFrom", ["max"], [13]], ["min", 23, "comesFrom", ["min"], [20]], ["min", 26, "comesFrom", ["min"], [20]], ["i", 10, "comesFrom", ["i"], [9]], ["i", 12, "comesFrom", ["i"], [9]], ["i", 15, "comesFrom", ["i"], [9]], ["i", 18, "comesFrom", ["i"], [9]], ["i", 22, "comesFrom", ["i"], [9]], ["i", 25, "comesFrom", ["i"], [9]], ["size", 11, "comesFrom", ["size"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::927", "code": "/* LibTomCrypt, modular cryptographic library -- Tom St Denis\n *\n * LibTomCrypt is a library that provides various cryptographic\n * algorithms in a highly modular and flexible manner.\n *\n * The library is free for all purposes without any express\n * guarantee it works.\n *\n * Tom St Denis, tomstdenis@gmail.com, http://libtom.org\n */\n#include <logicalaccess/plugins/crypto/tomcrypt.h>\n\n/**\n  @file crypt_find_cipher_id.c\n  Find cipher by ID, Tom St Denis\n  */\n\n/**\n   Find a cipher by ID number\n   @param ID    The ID (not same as index) of the cipher to find\n   @return >= 0 if found, -1 if not present\n   */\nint find_cipher_id(unsigned char ID)\n{\n    LTC_MUTEX_LOCK(&ltc_cipher_mutex);\n    for (int x = 0; x < TAB_SIZE; x++)\n    {\n        if (cipher_descriptor[x].ID == ID)\n        {\n            x = (cipher_descriptor[x].name == nullptr) ? -1 : x;\n            LTC_MUTEX_UNLOCK(&ltc_cipher_mutex);\n            return x;\n        }\n    }\n    LTC_MUTEX_UNLOCK(&ltc_cipher_mutex);\n    return -1;\n}\n\n/* $Source$ */\n/* $Revision$ */\n/* $Date$ */", "code_tokens": ["Ġ/*", "ĠLib", "Tom", "Crypt", ",", "Ġmodular", "Ġcryptographic", "Ġlibrary", "Ġ--", "ĠTom", "ĠSt", "ĠDenis", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠLib", "Tom", "Crypt", "Ġis", "Ġa", "Ġlibrary", "Ġthat", "Ġprovides", "Ġvarious", "Ġcryptographic", "Ċ", "Ġ*", "Ġalgorithms", "Ġin", "Ġa", "Ġhighly", "Ġmodular", "Ġand", "Ġflexible", "Ġmanner", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThe", "Ġlibrary", "Ġis", "Ġfree", "Ġfor", "Ġall", "Ġpurposes", "Ġwithout", "Ġany", "Ġexpress", "Ċ", "Ġ*", "Ġguarantee", "Ġit", "Ġworks", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠTom", "ĠSt", "ĠDenis", ",", "Ġtom", "st", "den", "is", "@", "gmail", ".", "com", ",", "Ġhttp", "://", "lib", "tom", ".", "org", "Ċ", "Ġ*/", "Ċ", "#", "include", "Ġ<", "log", "ical", "access", "/", "plugins", "/", "crypt", "o", "/", "tom", "crypt", ".", "h", ">", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ@", "file", "Ġcrypt", "_", "find", "_", "c", "ipher", "_", "id", ".", "c", "Ċ", "Ġ", "ĠFind", "Ġcipher", "Ġby", "ĠID", ",", "ĠTom", "ĠSt", "ĠDenis", "Ċ", "Ġ", "Ġ*/", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ", "ĠFind", "Ġa", "Ġcipher", "Ġby", "ĠID", "Ġnumber", "Ċ", "Ġ", "Ġ", "Ġ@", "param", "ĠID", "Ġ", "Ġ", "Ġ", "ĠThe", "ĠID", "Ġ(", "not", "Ġsame", "Ġas", "Ġindex", ")", "Ġof", "Ġthe", "Ġcipher", "Ġto", "Ġfind", "Ċ", "Ġ", "Ġ", "Ġ@", "return", "Ġ>=", "Ġ0", "Ġif", "Ġfound", ",", "Ġ-", "1", "Ġif", "Ġnot", "Ġpresent", "Ċ", "Ġ", "Ġ", "Ġ*/", "Ċ", "int", "Ġfind", "_", "c", "ipher", "_", "id", "(", "unsigned", "Ġchar", "ĠID", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠL", "TC", "_", "M", "UT", "EX", "_", "LOCK", "(&", "lt", "c", "_", "c", "ipher", "_", "mut", "ex", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġx", "Ġ=", "Ġ0", ";", "Ġx", "Ġ<", "ĠT", "AB", "_", "SIZE", ";", "Ġx", "++)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "c", "ipher", "_", "desc", "ript", "or", "[", "x", "].", "ID", "Ġ==", "ĠID", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ=", "Ġ(", "c", "ipher", "_", "desc", "ript", "or", "[", "x", "].", "name", "Ġ==", "Ġnull", "ptr", ")", "Ġ?", "Ġ-", "1", "Ġ:", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠL", "TC", "_", "M", "UT", "EX", "_", "UN", "LOCK", "(&", "lt", "c", "_", "c", "ipher", "_", "mut", "ex", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġx", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "ĠL", "TC", "_", "M", "UT", "EX", "_", "UN", "LOCK", "(&", "lt", "c", "_", "c", "ipher", "_", "mut", "ex", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "}", "Ċ", "Ċ", "/*", "Ġ$", "Source", "$", "Ġ*/", "Ċ", "/*", "Ġ$", "Rev", "ision", "$", "Ġ*/", "Ċ", "/*", "Ġ$", "Date", "$", "Ġ*/"], "dataflow_graph": [["x", 5, "comesFrom", ["x"], [4]], ["x", 7, "comesFrom", ["x"], [4]], ["x", 9, "comesFrom", ["x"], [4]], ["x", 14, "comesFrom", ["x"], [12]], ["x", 16, "comesFrom", ["x"], [12]], ["x", 19, "comesFrom", ["x"], [12]], ["ID", 10, "comesFrom", ["ID"], [1]], ["ID", 11, "comesFrom", ["ID"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::928", "code": "/* ReaPack: Package manager for REAPER\n * Copyright (C) 2015-2022  Christian Fillion\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#ifndef REAPACK_STRING_HPP\n#define REAPACK_STRING_HPP\n\n#include <sstream>\n#include <string>\n\nnamespace String {\n  namespace ImplDetail {\n    void imbueStream(std::ostream &);\n  };\n\n#ifdef __GNUC__\n  __attribute__((format(printf, 1, 2)))\n#endif\n  std::string format(const char *fmt, ...);\n\n  std::string indent(const std::string &);\n  std::string stripRtf(const std::string &);\n\n  template<typename T, typename = std::enable_if_t<std::is_arithmetic_v<T>>>\n  std::string number(const T v)\n  {\n    std::ostringstream stream;\n    ImplDetail::imbueStream(stream);\n    stream << v;\n    return stream.str();\n  };\n}\n\n#endif\n", "code_tokens": ["Ġ/*", "ĠRe", "a", "Pack", ":", "ĠPackage", "Ġmanager", "Ġfor", "ĠRE", "AP", "ER", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2015", "-", "20", "22", "Ġ", "ĠChristian", "ĠF", "illion", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠRE", "AP", "ACK", "_", "STR", "ING", "_", "H", "PP", "Ċ", "#", "define", "ĠRE", "AP", "ACK", "_", "STR", "ING", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ<", "s", "stream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "names", "pace", "ĠString", "Ġ{", "Ċ", "Ġ", "Ġnamespace", "ĠImpl", "Det", "ail", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġimb", "ue", "Stream", "(", "std", "::", "ost", "ream", "Ġ&", ");", "Ċ", "Ġ", "Ġ};", "Ċ", "Ċ", "#", "if", "def", "Ġ__", "GN", "UC", "__", "Ċ", "Ġ", "Ġ__", "attribute", "__", "((", "format", "(", "printf", ",", "Ġ1", ",", "Ġ2", ")))", "Ċ", "#", "endif", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġformat", "(", "const", "Ġchar", "Ġ*", "f", "mt", ",", "Ġ...", ");", "ĊĊ", "Ġ", "Ġstd", "::", "string", "Ġindent", "(", "const", "Ġstd", "::", "string", "Ġ&", ");", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġstrip", "R", "tf", "(", "const", "Ġstd", "::", "string", "Ġ&", ");", "ĊĊ", "Ġ", "Ġtemplate", "<", "ty", "pen", "ame", "ĠT", ",", "Ġtyp", "ename", "Ġ=", "Ġstd", "::", "enable", "_", "if", "_", "t", "<", "std", "::", "is", "_", "ar", "ithmetic", "_", "v", "<", "T", ">>>", "Ċ", "Ġ", "Ġstd", "::", "string", "Ġnumber", "(", "const", "ĠT", "Ġv", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "ost", "ring", "stream", "Ġstream", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠImpl", "Det", "ail", "::", "imb", "ue", "Stream", "(", "stream", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstream", "Ġ<<", "Ġv", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstream", ".", "str", "();", "Ċ", "Ġ", "Ġ};", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["stream", 14, "comesFrom", ["stream"], [12]], ["stream", 15, "comesFrom", ["stream"], [12]], ["stream", 17, "comesFrom", ["stream"], [12]], ["v", 16, "comesFrom", ["v"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::929", "code": "#include <gtest/gtest.h>\n#include \"solution.h\"\n\nusing namespace std;\n\nTEST(test, testcase0)\n{\n    TreeNode root(1);\n    TreeNode left_child(2);\n    TreeNode right_child(3);\n    TreeNode left_grandchild(4);\n    TreeNode right_grandchild(5);\n    root.left = &left_child;\n    root.right = &right_child;\n    right_child.left = &left_grandchild;\n    right_child.right = &right_grandchild;\n    vector<int> order = Solution().preorderTraversal(&root);\n    ASSERT_EQ(5, order.size());\n    EXPECT_EQ(1, order[0]);\n    EXPECT_EQ(2, order[1]);\n    EXPECT_EQ(3, order[2]);\n    EXPECT_EQ(4, order[3]);\n    EXPECT_EQ(5, order[4]);\n}\n\nint main(int argc, char **argv)\n{\n    ::testing::InitGoogleTest(&argc, argv);\n    return RUN_ALL_TESTS();\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "s", "olution", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "T", "EST", "(", "test", ",", "Ġtest", "case", "0", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġroot", "(", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġleft", "_", "child", "(", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġright", "_", "child", "(", "3", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġleft", "_", "grand", "child", "(", "4", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠTree", "Node", "Ġright", "_", "grand", "child", "(", "5", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġroot", ".", "left", "Ġ=", "Ġ&", "left", "_", "child", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġroot", ".", "right", "Ġ=", "Ġ&", "right", "_", "child", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġright", "_", "child", ".", "left", "Ġ=", "Ġ&", "left", "_", "grand", "child", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġright", "_", "child", ".", "right", "Ġ=", "Ġ&", "right", "_", "grand", "child", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġorder", "Ġ=", "ĠSolution", "().", "pre", "order", "Tra", "vers", "al", "(&", "root", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠASS", "ERT", "_", "E", "Q", "(", "5", ",", "Ġorder", ".", "size", "());", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "1", ",", "Ġorder", "[", "0", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "2", ",", "Ġorder", "[", "1", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "3", ",", "Ġorder", "[", "2", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "4", ",", "Ġorder", "[", "3", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(", "5", ",", "Ġorder", "[", "4", "]);", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ::", "testing", "::", "Init", "Google", "Test", "(&", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠRUN", "_", "ALL", "_", "T", "ES", "TS", "();", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["root", 7, "comesFrom", ["root"], [2]], ["root", 10, "comesFrom", ["root"], [2]], ["root", 22, "comesFrom", ["root"], [2]], ["left_child", 9, "comesFrom", ["left_child"], [3]], ["right_child", 12, "comesFrom", ["right_child"], [4]], ["right_child", 13, "comesFrom", ["right_child"], [4]], ["right_child", 16, "comesFrom", ["right_child"], [4]], ["left_grandchild", 15, "comesFrom", ["left_grandchild"], [5]], ["right_grandchild", 18, "comesFrom", ["right_grandchild"], [6]], ["order", 24, "comesFrom", ["order"], [19]], ["order", 27, "comesFrom", ["order"], [19]], ["order", 29, "comesFrom", ["order"], [19]], ["order", 31, "comesFrom", ["order"], [19]], ["order", 33, "comesFrom", ["order"], [19]], ["order", 35, "comesFrom", ["order"], [19]], ["argc", 40, "comesFrom", ["argc"], [37]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::930", "code": "// appending to string\n#include <iostream>\n#include <string>\n#include <cassert>\nusing namespace std;\n\nint main ()\n{\n  string str;\n  string str2=\"Writing \";\n  string str3=\"print 10 and then 5 more\";\n\n  str.append<int>(5,0x2E);                // \".....\"\n  assert(str == \".....\");\n  \n  cout << str << endl;\n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġapp", "ending", "Ġto", "Ġstring", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "c", "assert", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġstring", "Ġstr", ";", "Ċ", "Ġ", "Ġstring", "Ġstr", "2", "=\"", "Writing", "Ġ\"", ";", "Ċ", "Ġ", "Ġstring", "Ġstr", "3", "=\"", "print", "Ġ10", "Ġand", "Ġthen", "Ġ5", "Ġmore", "\";", "ĊĊ", "Ġ", "Ġstr", ".", "append", "<", "int", ">(", "5", ",", "0", "x", "2", "E", ");", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġ\"", "....", ".\"", "Ċ", "Ġ", "Ġassert", "(", "str", "Ġ==", "Ġ\"", "....", ".\"", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġcout", "Ġ<<", "Ġstr", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["str", 5, "comesFrom", ["str"], [2]], ["str", 8, "comesFrom", ["str"], [2]], ["str", 10, "comesFrom", ["str"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::931", "code": "#include <ros/ros.h>\n#include \"t7_package/tf_listener.h\"\n\n\nListener::Listener(){\n\n\t/*setFrame = node.advertiseService(\"/setFrame\", &Listener::SetFrame, this);\n\tframe = \"base_footprint\";*/\n\n}\n\n\nvoid Listener::run()\n{\n\n\tros::Rate rate(10.0);\n\twhile (node.ok()){\n\t\ttf::StampedTransform transform;\n\t\ttry{\n\t\t\tlistenerr.lookupTransform(\"map\", \"base_footprint\", ros::Time(0), transform);\n\t\t}\n\t\tcatch (tf::TransformException ex){\n\t\t\tROS_ERROR(\"%s\",ex.what());\n\t\t\tros::Duration(1.0).sleep();\n\t\t}\n\n\t\tROS_INFO(\"%.2f\", transform.getOrigin().z());\n\t\t//ROS_INFO(\"%.2f\",  sqrt(pow(transform.getOrigin().x(), 2) + pow(transform.getOrigin().y(), 2) + pow(transform.getOrigin().z(), 2)));\n\t\trate.sleep();\n\t}\n\tros::spin();\n\n}\n/*\nvoid Listener::SetFrame(t7_package::setFrame::Request&   req, t7_package::setFrame::Response&  res){\n\n\tframe = req.Frame;\n\treturn res.newFrame = frame;\n\n}*/\n", "code_tokens": ["Ġ#", "include", "Ġ<", "ros", "/", "ros", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "t", "7", "_", "package", "/", "tf", "_", "list", "ener", ".", "h", "\"", "ĊĊ", "Ċ", "Listener", "::", "Listener", "(){", "ĊĊ", "ĉ", "/*", "set", "Frame", "Ġ=", "Ġnode", ".", "advert", "ise", "Service", "(\"", "/", "set", "Frame", "\",", "Ġ&", "Listener", "::", "Set", "Frame", ",", "Ġthis", ");", "Ċ", "ĉ", "frame", "Ġ=", "Ġ\"", "base", "_", "foot", "print", "\";", "*/", "Ċ", "Ċ", "}", "ĊĊ", "Ċ", "void", "ĠList", "ener", "::", "run", "()", "Ċ", "{", "ĊĊ", "ĉ", "ros", "::", "Rate", "Ġrate", "(", "10", ".", "0", ");", "Ċ", "ĉ", "while", "Ġ(", "node", ".", "ok", "()", "){", "Ċ", "ĉ", "ĉ", "tf", "::", "St", "amped", "Transform", "Ġtransform", ";", "Ċ", "ĉ", "ĉ", "try", "{", "Ċ", "ĉ", "ĉ", "ĉ", "list", "ener", "r", ".", "look", "up", "Transform", "(\"", "map", "\",", "Ġ\"", "base", "_", "foot", "print", "\",", "Ġro", "s", "::", "Time", "(", "0", "),", "Ġtransform", ");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "catch", "Ġ(", "tf", "::", "Transform", "Exception", "Ġex", "){", "Ċ", "ĉ", "ĉ", "ĉ", "R", "OS", "_", "ERROR", "(\"", "%", "s", "\",", "ex", ".", "what", "());", "Ċ", "ĉ", "ĉ", "ĉ", "ros", "::", "Duration", "(", "1", ".", "0", ").", "sleep", "();", "Ċ", "ĉ", "ĉ", "}", "ĊĊ", "ĉ", "ĉ", "R", "OS", "_", "INFO", "(\"", "%.", "2", "f", "\",", "Ġtransform", ".", "get", "Origin", "().", "z", "());", "Ċ", "ĉ", "ĉ", "//", "R", "OS", "_", "INFO", "(\"", "%.", "2", "f", "\",", "Ġ", "Ġsq", "rt", "(", "p", "ow", "(", "transform", ".", "get", "Origin", "().", "x", "(),", "Ġ2", ")", "Ġ+", "Ġpow", "(", "transform", ".", "get", "Origin", "().", "y", "(),", "Ġ2", ")", "Ġ+", "Ġpow", "(", "transform", ".", "get", "Origin", "().", "z", "(),", "Ġ2", "))", ");", "Ċ", "ĉ", "ĉ", "rate", ".", "sleep", "();", "Ċ", "ĉ", "}", "Ċ", "ĉ", "ros", "::", "spin", "();", "Ċ", "Ċ", "}", "Ċ", "/*", "Ċ", "void", "ĠList", "ener", "::", "Set", "Frame", "(", "t", "7", "_", "package", "::", "set", "Frame", "::", "Request", "&", "Ġ", "Ġ", "Ġreq", ",", "Ġt", "7", "_", "package", "::", "set", "Frame", "::", "Response", "&", "Ġ", "Ġres", "){", "ĊĊ", "ĉ", "frame", "Ġ=", "Ġreq", ".", "Frame", ";", "Ċ", "ĉ", "return", "Ġres", ".", "new", "Frame", "Ġ=", "Ġframe", ";", "Ċ", "Ċ", "}", "*/", "Ċ"], "dataflow_graph": [["transform", 9, "comesFrom", ["transform"], [5]], ["transform", 17, "comesFrom", ["transform"], [5]], ["ex", 12, "comesFrom", ["ex"], [10]], ["rate", 20, "comesFrom", ["rate"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::932", "code": "#include \"stdafx.h\"\r\n#include \"CData.h\"\r\n#include <fstream>\r\n#include <iostream>\r\n//#include \"highgui.h\"\r\n\r\nCData::CData(int rows = 0, int cols = 0)\r\n{\r\n\tdataMat = cvCreateMat(rows, cols, CV_32FC1);\t//initiating the data\r\n}\r\n\r\nvoid CData::readData(float *input)\r\n{\r\n\tfor (int i = 0; i < dataMat->rows; i++)\r\n\t{\r\n\t\tfor (int j = 0; j < dataMat->cols; j++)\r\n\t\t{\r\n\t\t\t*(static_cast<float*>(static_cast<void*>(CV_MAT_ELEM_PTR(*dataMat, i, j)))) = input[i * dataMat->cols + j];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nCvMat* CData::getData()\r\n{\r\n\treturn dataMat;\r\n}\r\n\r\nCvMat *CData::getSubData(int x, int y, int w, int h)\r\n{\r\n\tCvMat *pmat = cvCreateMat(h, w, dataMat->type);\r\n\r\n\tCvMat  sub_mat;\r\n\tcvGetSubRect(dataMat, &sub_mat, cvRect(x, y, w, h));\r\n\r\n\tcvCopy(&sub_mat, pmat);\r\n\r\n\treturn pmat;\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "std", "af", "x", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ\"", "C", "Data", ".", "h", "\"", "č", "Ċ", "#", "include", "Ġ<", "f", "stream", ">", "č", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "č", "Ċ", "//", "#", "include", "Ġ\"", "high", "gui", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "C", "Data", "::", "C", "Data", "(", "int", "Ġrows", "Ġ=", "Ġ0", ",", "Ġint", "Ġcol", "s", "Ġ=", "Ġ0", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "data", "Mat", "Ġ=", "Ġc", "v", "Create", "Mat", "(", "rows", ",", "Ġcol", "s", ",", "ĠCV", "_", "32", "FC", "1", ");", "ĉ", "//", "in", "iti", "ating", "Ġthe", "Ġdata", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠCD", "ata", "::", "read", "Data", "(", "float", "Ġ*", "input", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġdata", "Mat", "->", "rows", ";", "Ġi", "++)", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġj", "Ġ=", "Ġ0", ";", "Ġj", "Ġ<", "Ġdata", "Mat", "->", "col", "s", ";", "Ġj", "++)", "č", "Ċ", "ĉ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "ĉ", "*", "(", "static", "_", "cast", "<", "float", "*", ">(", "static", "_", "cast", "<", "void", "*", ">(", "CV", "_", "MAT", "_", "E", "LE", "M", "_", "P", "TR", "(*", "data", "Mat", ",", "Ġi", ",", "Ġj", "))))", "Ġ=", "Ġinput", "[", "i", "Ġ*", "Ġdata", "Mat", "->", "col", "s", "Ġ+", "Ġj", "];", "č", "Ċ", "ĉ", "ĉ", "}", "č", "Ċ", "ĉ", "}", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "C", "v", "Mat", "*", "ĠCD", "ata", "::", "get", "Data", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "return", "Ġdata", "Mat", ";", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "C", "v", "Mat", "Ġ*", "C", "Data", "::", "get", "Sub", "Data", "(", "int", "Ġx", ",", "Ġint", "Ġy", ",", "Ġint", "Ġw", ",", "Ġint", "Ġh", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "C", "v", "Mat", "Ġ*", "pm", "at", "Ġ=", "Ġc", "v", "Create", "Mat", "(", "h", ",", "Ġw", ",", "Ġdata", "Mat", "->", "type", ");", "č", "Ċ", "č", "Ċ", "ĉ", "C", "v", "Mat", "Ġ", "Ġsub", "_", "mat", ";", "č", "Ċ", "ĉ", "cv", "Get", "Sub", "Rect", "(", "data", "Mat", ",", "Ġ&", "sub", "_", "mat", ",", "Ġc", "v", "Rect", "(", "x", ",", "Ġy", ",", "Ġw", ",", "Ġh", "));", "č", "Ċ", "č", "Ċ", "ĉ", "cv", "Copy", "(&", "sub", "_", "mat", ",", "Ġp", "mat", ");", "č", "Ċ", "č", "Ċ", "ĉ", "return", "Ġp", "mat", ";", "č", "Ċ", "}"], "dataflow_graph": [["i", 11, "comesFrom", ["i"], [10]], ["i", 14, "comesFrom", ["i"], [10]], ["i", 24, "comesFrom", ["i"], [10]], ["i", 27, "comesFrom", ["i"], [10]], ["dataMat", 12, "comesFrom", ["dataMat"], [3]], ["dataMat", 17, "comesFrom", ["dataMat"], [3]], ["dataMat", 23, "comesFrom", ["dataMat"], [3]], ["dataMat", 28, "comesFrom", ["dataMat"], [3]], ["dataMat", 32, "comesFrom", ["dataMat"], [3]], ["dataMat", 42, "comesFrom", ["dataMat"], [3]], ["dataMat", 46, "comesFrom", ["dataMat"], [3]], ["j", 16, "comesFrom", ["j"], [15]], ["j", 19, "comesFrom", ["j"], [15]], ["j", 25, "comesFrom", ["j"], [15]], ["j", 30, "comesFrom", ["j"], [15]], ["h", 40, "comesFrom", ["h"], [37]], ["h", 52, "comesFrom", ["h"], [37]], ["w", 41, "comesFrom", ["w"], [36]], ["w", 51, "comesFrom", ["w"], [36]], ["sub_mat", 47, "comesFrom", ["sub_mat"], [44]], ["sub_mat", 54, "comesFrom", ["sub_mat"], [44]], ["x", 49, "comesFrom", ["x"], [34]], ["y", 50, "comesFrom", ["y"], [35]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::933", "code": "#include \"frontg8/error.hpp\"\n#include \"frontg8/protocol/message/encrypted.h\"\n\n#include <cute/cute.h>\n#include <cute/cute_runner.h>\n#include <cute/ide_listener.h>\n#include <cute/xml_listener.h>\n\nvoid test_empty_does_not_throw()\n  {\n  fg8::error{};\n  }\n\nvoid test_does_throw_on_error()\n  {\n  ASSERT_THROWS(fg8_protocol_message_encrypted_get_content(nullptr, nullptr, fg8::error{}), std::runtime_error);\n  }\n\nint main(int argc, char * * argv)\n  {\n  auto suite = cute::suite{};\n\n  suite += CUTE(test_empty_does_not_throw);\n  suite += CUTE(test_does_throw_on_error);\n\n  cute::xml_file_opener xml{argc, argv};\n  auto listener = cute::xml_listener<cute::ide_listener<>>{xml.out};\n  auto runner = cute::makeRunner(listener, argc, argv);\n\n  return !runner(suite, \"fg8::error Suite\");\n  }\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "front", "g", "8", "/", "error", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "front", "g", "8", "/", "prot", "ocol", "/", "message", "/", "encrypted", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "ute", "/", "c", "ute", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "c", "ute", "/", "c", "ute", "_", "runner", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "c", "ute", "/", "ide", "_", "list", "ener", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "c", "ute", "/", "xml", "_", "list", "ener", ".", "h", ">", "Ċ", "Ċ", "void", "Ġtest", "_", "empty", "_", "does", "_", "not", "_", "throw", "()", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġf", "g", "8", "::", "error", "{", "};", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "void", "Ġtest", "_", "does", "_", "throw", "_", "on", "_", "error", "()", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "ĠASS", "ERT", "_", "TH", "R", "OWS", "(", "fg", "8", "_", "prot", "ocol", "_", "message", "_", "encrypted", "_", "get", "_", "content", "(", "null", "ptr", ",", "Ġnull", "ptr", ",", "Ġf", "g", "8", "::", "error", "{", "}", "),", "Ġstd", "::", "runtime", "_", "error", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "Ġ*", "Ġarg", "v", ")", "Ċ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġauto", "Ġsuite", "Ġ=", "Ġcute", "::", "su", "ite", "{", "};", "ĊĊ", "Ġ", "Ġsuite", "Ġ+=", "ĠC", "UTE", "(", "test", "_", "empty", "_", "does", "_", "not", "_", "throw", ");", "Ċ", "Ġ", "Ġsuite", "Ġ+=", "ĠC", "UTE", "(", "test", "_", "does", "_", "throw", "_", "on", "_", "error", ");", "ĊĊ", "Ġ", "Ġcute", "::", "xml", "_", "file", "_", "op", "ener", "Ġxml", "{", "arg", "c", ",", "Ġarg", "v", "};", "Ċ", "Ġ", "Ġauto", "Ġlistener", "Ġ=", "Ġcute", "::", "xml", "_", "list", "ener", "<", "c", "ute", "::", "ide", "_", "list", "ener", "<", ">>", "{", "xml", ".", "out", "};", "Ċ", "Ġ", "Ġauto", "Ġrunner", "Ġ=", "Ġcute", "::", "make", "Runner", "(", "list", "ener", ",", "Ġarg", "c", ",", "Ġarg", "v", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġ!", "runner", "(", "su", "ite", ",", "Ġ\"", "fg", "8", "::", "error", "ĠSuite", "\");", "Ċ", "Ġ", "Ġ}", "Ċ"], "dataflow_graph": [["argc", 16, "comesFrom", ["argc"], [6]], ["argc", 24, "comesFrom", ["argc"], [6]], ["xml", 19, "comesFrom", ["xml"], [15]], ["listener", 23, "comesFrom", ["listener"], [18]], ["runner", 26, "comesFrom", ["runner"], [21]], ["suite", 27, "comesFrom", ["suite"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::934", "code": "// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"net/third_party/quiche/src/quic/core/frames/quic_new_connection_id_frame.h\"\n\nnamespace quic {\n\nQuicNewConnectionIdFrame::QuicNewConnectionIdFrame(\n    QuicControlFrameId control_frame_id,\n    QuicConnectionId connection_id,\n    QuicConnectionIdSequenceNumber sequence_number,\n    const QuicUint128 stateless_reset_token,\n    uint64_t retire_prior_to)\n    : control_frame_id(control_frame_id),\n      connection_id(connection_id),\n      sequence_number(sequence_number),\n      stateless_reset_token(stateless_reset_token),\n      retire_prior_to(retire_prior_to) {\n  DCHECK(retire_prior_to <= sequence_number);\n}\n\nstd::ostream& operator<<(std::ostream& os,\n                         const QuicNewConnectionIdFrame& frame) {\n  os << \"{ control_frame_id: \" << frame.control_frame_id\n     << \", connection_id: \" << frame.connection_id\n     << \", sequence_number: \" << frame.sequence_number\n     << \", retire_prior_to: \" << frame.retire_prior_to << \" }\\n\";\n  return os;\n}\n\n}  // namespace quic\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2016", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "net", "/", "third", "_", "party", "/", "qu", "iche", "/", "src", "/", "qu", "ic", "/", "core", "/", "frames", "/", "qu", "ic", "_", "new", "_", "connection", "_", "id", "_", "frame", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġqu", "ic", "Ġ{", "Ċ", "Ċ", "Qu", "ic", "New", "Connection", "Id", "Frame", "::", "Qu", "ic", "New", "Connection", "Id", "Frame", "(", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQu", "ic", "Control", "Frame", "Id", "Ġcontrol", "_", "frame", "_", "id", ",", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQu", "ic", "Connection", "Id", "Ġconnection", "_", "id", ",", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQu", "ic", "Connection", "Id", "Sequ", "ence", "Number", "Ġsequence", "_", "number", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠQu", "ic", "U", "int", "128", "Ġstate", "less", "_", "reset", "_", "token", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġuint", "64", "_", "t", "Ġretire", "_", "pri", "or", "_", "to", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġcontrol", "_", "frame", "_", "id", "(", "control", "_", "frame", "_", "id", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconnection", "_", "id", "(", "connection", "_", "id", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġsequence", "_", "number", "(", "sequence", "_", "number", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstate", "less", "_", "reset", "_", "token", "(", "state", "less", "_", "reset", "_", "token", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġretire", "_", "pri", "or", "_", "to", "(", "ret", "ire", "_", "pri", "or", "_", "to", ")", "Ġ{", "Ċ", "Ġ", "ĠD", "CHECK", "(", "ret", "ire", "_", "pri", "or", "_", "to", "Ġ<=", "Ġsequence", "_", "number", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "ost", "ream", "&", "Ġoperator", "<<", "(", "std", "::", "ost", "ream", "&", "Ġos", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠQu", "ic", "New", "Connection", "Id", "Frame", "&", "Ġframe", ")", "Ġ{", "Ċ", "Ġ", "Ġos", "Ġ<<", "Ġ\"{", "Ġcontrol", "_", "frame", "_", "id", ":", "Ġ\"", "Ġ<<", "Ġframe", ".", "control", "_", "frame", "_", "id", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\",", "Ġconnection", "_", "id", ":", "Ġ\"", "Ġ<<", "Ġframe", ".", "connection", "_", "id", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\",", "Ġsequence", "_", "number", ":", "Ġ\"", "Ġ<<", "Ġframe", ".", "sequence", "_", "number", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ<<", "Ġ\",", "Ġretire", "_", "pri", "or", "_", "to", ":", "Ġ\"", "Ġ<<", "Ġframe", ".", "ret", "ire", "_", "pri", "or", "_", "to", "Ġ<<", "Ġ\"", "Ġ}", "\\", "n", "\";", "Ċ", "Ġ", "Ġreturn", "Ġos", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġqu", "ic", "Ċ"], "dataflow_graph": [["control_frame_id", 6, "comesFrom", ["control_frame_id"], [1]], ["control_frame_id", 7, "comesFrom", ["control_frame_id"], [1]], ["control_frame_id", 23, "comesFrom", ["control_frame_id"], [1]], ["connection_id", 8, "comesFrom", ["connection_id"], [2]], ["connection_id", 9, "comesFrom", ["connection_id"], [2]], ["connection_id", 25, "comesFrom", ["connection_id"], [2]], ["sequence_number", 10, "comesFrom", ["sequence_number"], [3]], ["sequence_number", 11, "comesFrom", ["sequence_number"], [3]], ["sequence_number", 18, "comesFrom", ["sequence_number"], [3]], ["sequence_number", 27, "comesFrom", ["sequence_number"], [3]], ["stateless_reset_token", 12, "comesFrom", ["stateless_reset_token"], [4]], ["stateless_reset_token", 13, "comesFrom", ["stateless_reset_token"], [4]], ["retire_prior_to", 14, "comesFrom", ["retire_prior_to"], [5]], ["retire_prior_to", 15, "comesFrom", ["retire_prior_to"], [5]], ["retire_prior_to", 17, "comesFrom", ["retire_prior_to"], [5]], ["retire_prior_to", 29, "comesFrom", ["retire_prior_to"], [5]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::935", "code": "#include \"concurrent/mutex.h\"\n\n#include <gtest/gtest.h>\n\n\n\nTEST(SharedMutexTest, test) {\n    std::shared_mutex mux;\n    mux.lock();\n    EXPECT_FALSE(mux.try_lock());\n    mux.unlock();\n\n    EXPECT_TRUE(mux.try_lock());\n    mux.unlock();\n\n    mux.lock_shared();\n    EXPECT_TRUE(mux.try_lock_shared());\n    mux.unlock_shared();\n    mux.unlock_shared();\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "con", "current", "/", "mut", "ex", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "ĊĊ", "Ċ", "Ċ", "T", "EST", "(", "Sh", "ared", "Mut", "ex", "Test", ",", "Ġtest", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "shared", "_", "mut", "ex", "Ġm", "ux", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ux", ".", "lock", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "F", "ALSE", "(", "m", "ux", ".", "try", "_", "lock", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ux", ".", "un", "lock", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "TR", "UE", "(", "m", "ux", ".", "try", "_", "lock", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ux", ".", "un", "lock", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġm", "ux", ".", "lock", "_", "shared", "();", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "TR", "UE", "(", "m", "ux", ".", "try", "_", "lock", "_", "shared", "());", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ux", ".", "un", "lock", "_", "shared", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "ux", ".", "un", "lock", "_", "shared", "();", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["mux", 2, "comesFrom", ["mux"], [1]], ["mux", 5, "comesFrom", ["mux"], [1]], ["mux", 7, "comesFrom", ["mux"], [1]], ["mux", 10, "comesFrom", ["mux"], [1]], ["mux", 12, "comesFrom", ["mux"], [1]], ["mux", 14, "comesFrom", ["mux"], [1]], ["mux", 17, "comesFrom", ["mux"], [1]], ["mux", 19, "comesFrom", ["mux"], [1]], ["mux", 21, "comesFrom", ["mux"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::936", "code": "//http://www.cnblogs.com/zuoyuan/p/3781453.html\n//this solution is more easier to implement\nclass Solution {\npublic:\n    int trap(int A[], int n) {\n        vector<int> leftMost;\n        int leftMostMax = 0;\n        int result = 0;\n        for (int i = 0; i < n; i ++) {\n            leftMostMax = max(leftMostMax, A[i]);\n            leftMost.push_back(leftMostMax);\n        }\n        \n        int rightMostMax = 0;\n        for (int i = n - 1; i >= 0; i --) {\n            rightMostMax = max(rightMostMax, A[i]);\n            result += min(rightMostMax, leftMost[i]) - A[i];\n        } \n        return result;\n    }\n};\n", "code_tokens": ["Ġ//", "http", "://", "www", ".", "cn", "blogs", ".", "com", "/", "zu", "oy", "uan", "/", "p", "/", "378", "14", "53", ".", "html", "Ċ", "//", "this", "Ġsolution", "Ġis", "Ġmore", "Ġeasier", "Ġto", "Ġimplement", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġtrap", "(", "int", "ĠA", "[", "],", "Ġint", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "int", ">", "Ġleft", "Most", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġleft", "Most", "Max", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġresult", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "Ġ++", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġleft", "Most", "Max", "Ġ=", "Ġmax", "(", "left", "Most", "Max", ",", "ĠA", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġleft", "Most", ".", "push", "_", "back", "(", "left", "Most", "Max", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġright", "Most", "Max", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġn", "Ġ-", "Ġ1", ";", "Ġi", "Ġ>=", "Ġ0", ";", "Ġi", "Ġ--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġright", "Most", "Max", "Ġ=", "Ġmax", "(", "right", "Most", "Max", ",", "ĠA", "[", "i", "]);", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ+=", "Ġmin", "(", "right", "Most", "Max", ",", "Ġleft", "Most", "[", "i", "])", "Ġ-", "ĠA", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 14, "comesFrom", ["i"], [6]], ["i", 21, "comesFrom", ["i"], [19]], ["i", 22, "comesFrom", ["i"], [19]], ["i", 27, "comesFrom", ["i"], [19]], ["i", 32, "comesFrom", ["i"], [19]], ["i", 34, "comesFrom", ["i"], [19]], ["n", 8, "comesFrom", ["n"], [2]], ["n", 20, "comesFrom", ["n"], [2]], ["leftMostMax", 12, "comesFrom", ["leftMostMax"], [10]], ["leftMostMax", 17, "comesFrom", ["leftMostMax"], [10]], ["leftMost", 15, "comesFrom", ["leftMost"], [3]], ["leftMost", 31, "comesFrom", ["leftMost"], [3]], ["rightMostMax", 25, "comesFrom", ["rightMostMax"], [23]], ["rightMostMax", 30, "comesFrom", ["rightMostMax"], [23]], ["result", 35, "comesFrom", ["result"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::937", "code": "class Solution {\npublic:\n    int connectSticks(vector<int>& sticks) {\n        priority_queue<int, vector<int>, std::greater<int>> myqueue;\n        for (int e : sticks) myqueue.push(e);\n        \n        int ans = 0;\n        \n        while (myqueue.size() > 1) {\n            int e1 = myqueue.top(); myqueue.pop();\n            int e2 = myqueue.top(); myqueue.pop();\n            ans += (e1 + e2);\n            myqueue.push(e1 + e2);\n        }\n        \n        return ans;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġconnect", "St", "icks", "(", "vector", "<", "int", ">", "&", "Ġsticks", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġpriority", "_", "queue", "<", "int", ",", "Ġvector", "<", "int", ">,", "Ġstd", "::", "great", "er", "<", "int", ">>", "Ġmy", "queue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġe", "Ġ:", "Ġsticks", ")", "Ġmy", "queue", ".", "push", "(", "e", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġans", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "my", "queue", ".", "size", "()", "Ġ>", "Ġ1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġe", "1", "Ġ=", "Ġmy", "queue", ".", "top", "();", "Ġmy", "queue", ".", "pop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġe", "2", "Ġ=", "Ġmy", "queue", ".", "top", "();", "Ġmy", "queue", ".", "pop", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġans", "Ġ+=", "Ġ(", "e", "1", "Ġ+", "Ġe", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmy", "queue", ".", "push", "(", "e", "1", "Ġ+", "Ġe", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġans", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["myqueue", 5, "comesFrom", ["myqueue"], [2]], ["myqueue", 9, "comesFrom", ["myqueue"], [2]], ["myqueue", 12, "comesFrom", ["myqueue"], [2]], ["myqueue", 14, "comesFrom", ["myqueue"], [2]], ["myqueue", 17, "comesFrom", ["myqueue"], [2]], ["myqueue", 19, "comesFrom", ["myqueue"], [2]], ["myqueue", 24, "comesFrom", ["myqueue"], [2]], ["e1", 22, "comesFrom", ["e1"], [11]], ["e1", 26, "comesFrom", ["e1"], [11]], ["e2", 23, "comesFrom", ["e2"], [16]], ["e2", 27, "comesFrom", ["e2"], [16]], ["ans", 28, "comesFrom", ["ans"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::938", "code": "/*\n * Website:\n *      https://github.com/wo3kie/dojo\n *\n * Author:\n *      Lukasz Czerwinski\n */\n\n#ifndef CXX_DOJO_MEAN_HPP\n#define CXX_DOJO_MEAN_HPP\n\n#include <vector>\n\ntemplate<typename Iterator>\ndouble mean(Iterator begin, Iterator const end){\n    double totalSum = 0;\n    unsigned counter = 0;\n\n    for( ; begin != end; ++begin){\n        totalSum += * begin;\n        counter += 1;\n    }\n\n    return totalSum / counter;\n}\n\ntemplate<typename T>\ndouble mean(std::vector<T> const & array){\n    return mean(array.begin(), array.end());\n}\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠWebsite", ":", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġhttps", "://", "github", ".", "com", "/", "wo", "3", "kie", "/", "do", "jo", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠAuthor", ":", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠLuk", "as", "z", "ĠC", "zer", "w", "inski", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "if", "nd", "ef", "ĠC", "XX", "_", "DO", "JO", "_", "ME", "AN", "_", "H", "PP", "Ċ", "#", "define", "ĠC", "XX", "_", "DO", "JO", "_", "ME", "AN", "_", "H", "PP", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠIter", "ator", ">", "Ċ", "double", "Ġmean", "(", "Iterator", "Ġbegin", ",", "ĠIter", "ator", "Ġconst", "Ġend", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġtotal", "Sum", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġunsigned", "Ġcounter", "Ġ=", "Ġ0", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "Ġ;", "Ġbegin", "Ġ!=", "Ġend", ";", "Ġ++", "begin", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtotal", "Sum", "Ġ+=", "Ġ*", "Ġbegin", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcounter", "Ġ+=", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġtotal", "Sum", "Ġ/", "Ġcounter", ";", "Ċ", "}", "Ċ", "Ċ", "template", "<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "double", "Ġmean", "(", "std", "::", "vector", "<", "T", ">", "Ġconst", "Ġ&", "Ġarray", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġmean", "(", "array", ".", "begin", "(),", "Ġarray", ".", "end", "());", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["begin", 7, "comesFrom", ["begin"], [3]], ["begin", 9, "comesFrom", ["begin"], [3]], ["begin", 11, "comesFrom", ["begin"], [3]], ["begin", 19, "comesFrom", ["begin"], [3]], ["end", 8, "comesFrom", ["end"], [4]], ["end", 21, "comesFrom", ["end"], [4]], ["totalSum", 13, "comesFrom", ["totalSum"], [10]], ["counter", 14, "comesFrom", ["counter"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::939", "code": "#define SOL_ALL_SAFETIES_ON 1\n#include <sol/sol.hpp>\n\n\nint main(int, char*[]) {\n\tsol::state lua;\n\tlua.open_libraries(sol::lib::base);\n\n\tlua[\"f\"] = [](int a, int b, sol::object c) {\n\t\t// sol::object can be anything here: just pass it\n\t\t// through\n\t\treturn std::make_tuple(a, b, c);\n\t};\n\n\tstd::tuple<int, int, int> result = lua[\"f\"](100, 200, 300);\n\tconst std::tuple<int, int, int> expected(100, 200, 300);\n\tsol_c_assert(result == expected);\n\n\tstd::tuple<int, int, std::string> result2;\n\tresult2 = lua[\"f\"](100, 200, \"BARK BARK BARK!\");\n\tconst std::tuple<int, int, std::string> expected2(\n\t     100, 200, \"BARK BARK BARK!\");\n\tsol_c_assert(result2 == expected2);\n\n\tint a, b;\n\tstd::string c;\n\tsol::tie(a, b, c) = lua[\"f\"](100, 200, \"bark\");\n\tsol_c_assert(a == 100);\n\tsol_c_assert(b == 200);\n\tsol_c_assert(c == \"bark\");\n\n\tlua.script(R\"(\n\t\ta, b, c = f(150, 250, \"woofbark\")\n\t\tassert(a == 150)\n\t\tassert(b == 250)\n\t\tassert(c == \"woofbark\")\n\t)\");\n\n\treturn 0;\n}\n", "code_tokens": ["Ġ#", "define", "ĠSOL", "_", "ALL", "_", "SA", "F", "ET", "IES", "_", "ON", "Ġ1", "Ċ", "#", "include", "Ġ<", "sol", "/", "sol", ".", "h", "pp", ">", "ĊĊ", "Ċ", "int", "Ġmain", "(", "int", ",", "Ġchar", "*", "[", "])", "Ġ{", "Ċ", "ĉ", "sol", "::", "state", "Ġl", "ua", ";", "Ċ", "ĉ", "lua", ".", "open", "_", "l", "ibraries", "(", "sol", "::", "lib", "::", "base", ");", "ĊĊ", "ĉ", "lua", "[\"", "f", "\"]", "Ġ=", "Ġ[", "](", "int", "Ġa", ",", "Ġint", "Ġb", ",", "Ġsol", "::", "object", "Ġc", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "//", "Ġsol", "::", "object", "Ġcan", "Ġbe", "Ġanything", "Ġhere", ":", "Ġjust", "Ġpass", "Ġit", "Ċ", "ĉ", "ĉ", "//", "Ġthrough", "Ċ", "ĉ", "ĉ", "return", "Ġstd", "::", "make", "_", "t", "uple", "(", "a", ",", "Ġb", ",", "Ġc", ");", "Ċ", "ĉ", "};", "ĊĊ", "ĉ", "std", "::", "t", "uple", "<", "int", ",", "Ġint", ",", "Ġint", ">", "Ġresult", "Ġ=", "Ġl", "ua", "[\"", "f", "\"]", "(", "100", ",", "Ġ200", ",", "Ġ300", ");", "Ċ", "ĉ", "const", "Ġstd", "::", "t", "uple", "<", "int", ",", "Ġint", ",", "Ġint", ">", "Ġexpected", "(", "100", ",", "Ġ200", ",", "Ġ300", ");", "Ċ", "ĉ", "sol", "_", "c", "_", "assert", "(", "result", "Ġ==", "Ġexpected", ");", "ĊĊ", "ĉ", "std", "::", "t", "uple", "<", "int", ",", "Ġint", ",", "Ġstd", "::", "string", ">", "Ġresult", "2", ";", "Ċ", "ĉ", "result", "2", "Ġ=", "Ġl", "ua", "[\"", "f", "\"]", "(", "100", ",", "Ġ200", ",", "Ġ\"", "B", "ARK", "ĠB", "ARK", "ĠB", "ARK", "!\"", ");", "Ċ", "ĉ", "const", "Ġstd", "::", "t", "uple", "<", "int", ",", "Ġint", ",", "Ġstd", "::", "string", ">", "Ġexpected", "2", "(", "Ċ", "ĉ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ100", ",", "Ġ200", ",", "Ġ\"", "B", "ARK", "ĠB", "ARK", "ĠB", "ARK", "!\"", ");", "Ċ", "ĉ", "sol", "_", "c", "_", "assert", "(", "result", "2", "Ġ==", "Ġexpected", "2", ");", "ĊĊ", "ĉ", "int", "Ġa", ",", "Ġb", ";", "Ċ", "ĉ", "std", "::", "string", "Ġc", ";", "Ċ", "ĉ", "sol", "::", "tie", "(", "a", ",", "Ġb", ",", "Ġc", ")", "Ġ=", "Ġl", "ua", "[\"", "f", "\"]", "(", "100", ",", "Ġ200", ",", "Ġ\"", "b", "ark", "\");", "Ċ", "ĉ", "sol", "_", "c", "_", "assert", "(", "a", "Ġ==", "Ġ100", ");", "Ċ", "ĉ", "sol", "_", "c", "_", "assert", "(", "b", "Ġ==", "Ġ200", ");", "Ċ", "ĉ", "sol", "_", "c", "_", "assert", "(", "c", "Ġ==", "Ġ\"", "b", "ark", "\");", "ĊĊ", "ĉ", "lua", ".", "script", "(", "R", "\"(", "Ċ", "ĉ", "ĉ", "a", ",", "Ġb", ",", "Ġc", "Ġ=", "Ġf", "(", "150", ",", "Ġ250", ",", "Ġ\"", "wo", "of", "b", "ark", "\")", "Ċ", "ĉ", "ĉ", "assert", "(", "a", "Ġ==", "Ġ150", ")", "Ċ", "ĉ", "ĉ", "assert", "(", "b", "Ġ==", "Ġ250", ")", "Ċ", "ĉ", "ĉ", "assert", "(", "c", "Ġ==", "Ġ\"", "wo", "of", "b", "ark", "\")", "Ċ", "ĉ", ")", "\");", "ĊĊ", "ĉ", "return", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["lua", 3, "comesFrom", ["lua"], [2]], ["lua", 6, "comesFrom", ["lua"], [2]], ["lua", 15, "comesFrom", ["lua"], [2]], ["lua", 22, "comesFrom", ["lua"], [2]], ["lua", 34, "comesFrom", ["lua"], [2]], ["lua", 41, "comesFrom", ["lua"], [2]], ["a", 11, "comesFrom", ["a"], [7]], ["a", 31, "comesFrom", ["a"], [27]], ["a", 36, "comesFrom", ["a"], [27]], ["b", 12, "comesFrom", ["b"], [8]], ["b", 32, "comesFrom", ["b"], [28]], ["b", 38, "comesFrom", ["b"], [28]], ["c", 13, "comesFrom", ["c"], [9]], ["c", 33, "comesFrom", ["c"], [29]], ["c", 40, "comesFrom", ["c"], [29]], ["result", 18, "comesFrom", ["result"], [14]], ["expected", 19, "comesFrom", ["expected"], [16]], ["result2", 25, "comesFrom", ["result2"], [21]], ["expected2", 26, "comesFrom", ["expected2"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::940", "code": "#include <tiramisu/tiramisu.h>\n\nusing namespace tiramisu;\n\nvoid gen(std::string name, int size, int val0, int val1)\n{\n    tiramisu::init(name);\n\n    tiramisu::var i(\"i\", 0, 100);\n\n    tiramisu::computation S0({i}, tiramisu::expr((uint8_t) (val0 + val1)));\n\n    tiramisu::codegen({S0.get_buffer()}, \"build/generated_fct_test_172.o\");\n}\n\nint main(int argc, char **argv)\n{\n    gen(\"func\", 10, 3, 4);\n\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "t", "ir", "am", "isu", "/", "t", "ir", "am", "isu", ".", "h", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġtir", "am", "isu", ";", "Ċ", "Ċ", "void", "Ġgen", "(", "std", "::", "string", "Ġname", ",", "Ġint", "Ġsize", ",", "Ġint", "Ġval", "0", ",", "Ġint", "Ġval", "1", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġtir", "am", "isu", "::", "init", "(", "name", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġtir", "am", "isu", "::", "var", "Ġi", "(\"", "i", "\",", "Ġ0", ",", "Ġ100", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġtir", "am", "isu", "::", "com", "put", "ation", "ĠS", "0", "({", "i", "},", "Ġtir", "am", "isu", "::", "expr", "((", "uint", "8", "_", "t", ")", "Ġ(", "val", "0", "Ġ+", "Ġval", "1", "))", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġtir", "am", "isu", "::", "code", "gen", "({", "S", "0", ".", "get", "_", "buffer", "()", "},", "Ġ\"", "build", "/", "generated", "_", "f", "ct", "_", "test", "_", "172", ".", "o", "\");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġgen", "(\"", "func", "\",", "Ġ10", ",", "Ġ3", ",", "Ġ4", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["name", 7, "comesFrom", ["name"], [2]], ["i", 10, "comesFrom", ["i"], [8]], ["val0", 12, "comesFrom", ["val0"], [4]], ["val1", 13, "comesFrom", ["val1"], [5]], ["S0", 15, "comesFrom", ["S0"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::941", "code": "//===----------------------------------------------------------------------===//\n//\n//                     The LLVM Compiler Infrastructure\n//\n// This file is dual licensed under the MIT and the University of Illinois Open\n// Source Licenses. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n\n// Copyright (C) 2011 Vicente J. Botet Escriba\n//\n//  Distributed under the Boost Software License, Version 1.0. (See accompanying\n//  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n// <boost/thread/locks.hpp>\n\n// template <class Mutex> class shared_lock;\n\n// shared_lock(mutex_type& m, adopt_lock_t);\n\n#include <boost/thread/locks.hpp>\n#include <boost/thread/shared_mutex.hpp>\n#include <boost/detail/lightweight_test.hpp>\n\nint main()\n{\n  boost::shared_mutex m;\n  m.lock();\n  boost::shared_lock<boost::shared_mutex> lk(m, boost::defer_lock);\n  BOOST_TEST(lk.mutex() == &m);\n  BOOST_TEST(lk.owns_lock() == false);\n\n  return boost::report_errors();\n}\n\n", "code_tokens": ["Ġ//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "//", "Ċ", "//", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠThe", "ĠLL", "VM", "ĠComp", "iler", "ĠInfrastructure", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġdual", "Ġlicensed", "Ġunder", "Ġthe", "ĠMIT", "Ġand", "Ġthe", "ĠUniversity", "Ġof", "ĠIllinois", "ĠOpen", "Ċ", "//", "ĠSource", "ĠLic", "enses", ".", "ĠSee", "ĠLIC", "ENSE", ".", "T", "XT", "Ġfor", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "===", "----------------------------------------------------------------", "------", "===", "//", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2011", "ĠVic", "ente", "ĠJ", ".", "ĠBot", "et", "ĠEsc", "rib", "a", "Ċ", "//", "Ċ", "//", "Ġ", "ĠDist", "ributed", "Ġunder", "Ġthe", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġaccompanying", "Ċ", "//", "Ġ", "Ġfile", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ċ", "//", "Ġ<", "boost", "/", "thread", "/", "locks", ".", "h", "pp", ">", "Ċ", "Ċ", "//", "Ġtemplate", "Ġ<", "class", "ĠMut", "ex", ">", "Ġclass", "Ġshared", "_", "lock", ";", "Ċ", "Ċ", "//", "Ġshared", "_", "lock", "(", "mut", "ex", "_", "type", "&", "Ġm", ",", "Ġadopt", "_", "lock", "_", "t", ");", "Ċ", "Ċ", "#", "include", "Ġ<", "boost", "/", "thread", "/", "locks", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "thread", "/", "shared", "_", "mut", "ex", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "detail", "/", "light", "weight", "_", "test", ".", "h", "pp", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġboost", "::", "shared", "_", "mut", "ex", "Ġm", ";", "Ċ", "Ġ", "Ġm", ".", "lock", "();", "Ċ", "Ġ", "Ġboost", "::", "shared", "_", "lock", "<", "boost", "::", "shared", "_", "mut", "ex", ">", "Ġl", "k", "(", "m", ",", "Ġboost", "::", "def", "er", "_", "lock", ");", "Ċ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "(", "l", "k", ".", "mut", "ex", "()", "Ġ==", "Ġ&", "m", ");", "Ċ", "Ġ", "ĠB", "OO", "ST", "_", "T", "EST", "(", "l", "k", ".", "own", "s", "_", "lock", "()", "Ġ==", "Ġfalse", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġboost", "::", "report", "_", "errors", "();", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["m", 2, "comesFrom", ["m"], [1]], ["m", 8, "comesFrom", ["m"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::942", "code": "#include <cxxtest/TestSuite.h>\n\n#include \"../gen/FluteMeta.h\"\n#include \"../gen/Flute.peg\"        \n      \nclass ControlPorttest : public CxxTest::TestSuite {\n    public:\n        void testInRange() {\n            for (int i = 0; i < p_n_ports -3; i++) {\n                TS_ASSERT_LESS_THAN_EQUALS(p_port_meta[i].min, p_port_meta[i].default_value);\n                TS_ASSERT_LESS_THAN_EQUALS(p_port_meta[i].default_value, p_port_meta[i].max);\n            }\n       }\n\n};\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "x", "xt", "est", "/", "Test", "Su", "ite", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "../", "gen", "/", "Fl", "ute", "Meta", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "gen", "/", "Fl", "ute", ".", "peg", "\"", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "class", "ĠControl", "Port", "test", "Ġ:", "Ġpublic", "ĠC", "xx", "Test", "::", "Test", "Su", "ite", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġtest", "In", "Range", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġp", "_", "n", "_", "ports", "Ġ-", "3", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTS", "_", "ASS", "ERT", "_", "LESS", "_", "TH", "AN", "_", "E", "QU", "ALS", "(", "p", "_", "port", "_", "meta", "[", "i", "].", "min", ",", "Ġp", "_", "port", "_", "meta", "[", "i", "].", "default", "_", "value", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTS", "_", "ASS", "ERT", "_", "LESS", "_", "TH", "AN", "_", "E", "QU", "ALS", "(", "p", "_", "port", "_", "meta", "[", "i", "].", "default", "_", "value", ",", "Ġp", "_", "port", "_", "meta", "[", "i", "].", "max", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ċ", "};", "Ċ"], "dataflow_graph": [["i", 2, "comesFrom", ["i"], [1]], ["i", 4, "comesFrom", ["i"], [1]], ["i", 7, "comesFrom", ["i"], [1]], ["i", 10, "comesFrom", ["i"], [1]], ["i", 14, "comesFrom", ["i"], [1]], ["i", 17, "comesFrom", ["i"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::943", "code": "#include <Wt/WContainerWidget.h>\n#include <Wt/WLineEdit.h>\n#include <Wt/WTextEdit.h>\n\nSAMPLE_BEGIN(TextEditors)\nauto container = std::make_unique<Wt::WContainerWidget>();\n\nWt::WLineEdit *le = container->addNew<Wt::WLineEdit>();\nle->setPlaceholderText(\"Edit me\");\n\nWt::WLineEdit *out = container->addNew<Wt::WLineEdit>();\nout->setReadOnly(true);\n\nle->keyWentUp().connect([=] {\n    out->setText(\"Line edit: key up event\");\n});\n\nle->enterPressed().connect([=] {\n    out->setText(\"Line edit: enter pressed event\");\n});\n\nSAMPLE_END(return container)\n", "code_tokens": ["Ġ#", "include", "Ġ<", "W", "t", "/", "W", "Container", "Widget", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "W", "t", "/", "W", "Line", "Edit", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "W", "t", "/", "W", "Text", "Edit", ".", "h", ">", "Ċ", "Ċ", "SAM", "PLE", "_", "B", "EGIN", "(", "Text", "Edit", "ors", ")", "Ċ", "auto", "Ġcontainer", "Ġ=", "Ġstd", "::", "make", "_", "unique", "<", "W", "t", "::", "W", "Container", "Widget", ">", "();", "Ċ", "Ċ", "W", "t", "::", "W", "Line", "Edit", "Ġ*", "le", "Ġ=", "Ġcontainer", "->", "add", "New", "<", "W", "t", "::", "W", "Line", "Edit", ">", "();", "Ċ", "le", "->", "set", "Place", "holder", "Text", "(\"", "Edit", "Ġme", "\");", "Ċ", "Ċ", "W", "t", "::", "W", "Line", "Edit", "Ġ*", "out", "Ġ=", "Ġcontainer", "->", "add", "New", "<", "W", "t", "::", "W", "Line", "Edit", ">", "();", "Ċ", "out", "->", "set", "Read", "Only", "(", "true", ");", "Ċ", "Ċ", "le", "->", "key", "W", "ent", "Up", "().", "connect", "([", "=]", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "set", "Text", "(\"", "Line", "Ġedit", ":", "Ġkey", "Ġup", "Ġevent", "\");", "Ċ", "});", "Ċ", "Ċ", "le", "->", "enter", "P", "ressed", "().", "connect", "([", "=]", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġout", "->", "set", "Text", "(\"", "Line", "Ġedit", ":", "Ġenter", "Ġpressed", "Ġevent", "\");", "Ċ", "});", "Ċ", "Ċ", "SAM", "PLE", "_", "END", "(", "return", "Ġcontainer", ")", "Ċ"], "dataflow_graph": [["container", 5, "comesFrom", ["container"], [2]], ["container", 10, "comesFrom", ["container"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::944", "code": "#include \"ZlibCompression.h\"\r\n\r\n\r\nZlibCompression::ZlibCompression(int compression_level)\r\n{\r\n\tcomp.SetDeflateLevel(compression_level);\r\n}\r\n\r\nZlibCompression::~ZlibCompression(void)\r\n{\r\n}\r\n\r\nsize_t ZlibCompression::compress(const char *input, size_t input_length, std::vector<char> *output, bool flush, size_t output_off)\r\n{\r\n\tcomp.Put((const byte*)input, input_length);\r\n\tif(flush)\r\n\t{\r\n\t\tcomp.Flush(true);\r\n\t}\r\n\tsize_t rc=(size_t)comp.MaxRetrievable();\r\n\r\n\tif(output->size()<rc+output_off)\r\n\t{\r\n\t\toutput->resize(rc+output_off);\r\n\t}\r\n\r\n\treturn comp.Get((byte*)(&(*output)[output_off]), rc);\r\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Z", "lib", "Comp", "ression", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "č", "Ċ", "Z", "lib", "Comp", "ression", "::", "Z", "lib", "Comp", "ression", "(", "int", "Ġcompression", "_", "level", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "comp", ".", "Set", "Def", "late", "Level", "(", "comp", "ression", "_", "level", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "Z", "lib", "Comp", "ression", "::", "~", "Z", "lib", "Comp", "ression", "(", "void", ")", "č", "Ċ", "{", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "size", "_", "t", "ĠZ", "lib", "Comp", "ression", "::", "comp", "ress", "(", "const", "Ġchar", "Ġ*", "input", ",", "Ġsize", "_", "t", "Ġinput", "_", "length", ",", "Ġstd", "::", "vector", "<", "char", ">", "Ġ*", "output", ",", "Ġbool", "Ġflush", ",", "Ġsize", "_", "t", "Ġoutput", "_", "off", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "comp", ".", "Put", "((", "const", "Ġbyte", "*)", "input", ",", "Ġinput", "_", "length", ");", "č", "Ċ", "ĉ", "if", "(", "flush", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "comp", ".", "Fl", "ush", "(", "true", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "ĉ", "size", "_", "t", "Ġrc", "=(", "size", "_", "t", ")", "comp", ".", "Max", "Ret", "ri", "ev", "able", "();", "č", "Ċ", "č", "Ċ", "ĉ", "if", "(", "output", "->", "size", "()", "<", "rc", "+", "output", "_", "off", ")", "č", "Ċ", "ĉ", "{", "č", "Ċ", "ĉ", "ĉ", "output", "->", "res", "ize", "(", "rc", "+", "output", "_", "off", ");", "č", "Ċ", "ĉ", "}", "č", "Ċ", "č", "Ċ", "ĉ", "return", "Ġcomp", ".", "Get", "((", "byte", "*", ")(", "&", "(*", "output", ")[", "output", "_", "off", "]),", "Ġrc", ");", "č", "Ċ", "}"], "dataflow_graph": [["compression_level", 4, "comesFrom", ["compression_level"], [1]], ["input_length", 15, "comesFrom", ["input_length"], [8]], ["flush", 16, "comesFrom", ["flush"], [10]], ["rc", 24, "comesFrom", ["rc"], [19]], ["rc", 28, "comesFrom", ["rc"], [19]], ["rc", 34, "comesFrom", ["rc"], [19]], ["output_off", 25, "comesFrom", ["output_off"], [11]], ["output_off", 29, "comesFrom", ["output_off"], [11]], ["output_off", 33, "comesFrom", ["output_off"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::945", "code": "/**\n* Entry file to framework. Should not edit this file, though to change window size, adjust parameters in creastion of new scene\n* <p>\n* {@code new MyScene(argc, argv, \"title\", (const int)width, (const int)height)}\n* @author wil\n* @date 09/02/16\n*/\n#include \"MyScene.h\"\n/**\n * Entry method, takes command line arguments and creates new Scene engine to render your G53GRA Coursework\n *\n * @see MyScene\n * @param argc,argv (number of) command line arguments passed to OpenGL windowing context\n */\nint main(int argc, char* argv[])\n{\n\t// Create new instance of MyScene - the OpenGL context on which your coursework is built\n\tMyScene *scene = NULL;\n\tscene = new MyScene(argc, argv, \"G53GRA\", (const int)600, (const int)400);\n\n\t// Begin the main GL loop\n\tscene->Run();\n\n\t// On exit, clean up and return success (0x0)\n\tdelete scene;\n\treturn 0;\n}", "code_tokens": ["Ġ/**", "Ċ", "*", "ĠEntry", "Ġfile", "Ġto", "Ġframework", ".", "ĠShould", "Ġnot", "Ġedit", "Ġthis", "Ġfile", ",", "Ġthough", "Ġto", "Ġchange", "Ġwindow", "Ġsize", ",", "Ġadjust", "Ġparameters", "Ġin", "Ġcre", "ast", "ion", "Ġof", "Ġnew", "Ġscene", "Ċ", "*", "Ġ<", "p", ">", "Ċ", "*", "Ġ{", "@", "code", "Ġnew", "ĠMy", "Scene", "(", "arg", "c", ",", "Ġarg", "v", ",", "Ġ\"", "title", "\",", "Ġ(", "const", "Ġint", ")", "width", ",", "Ġ(", "const", "Ġint", ")", "height", ")}", "Ċ", "*", "Ġ@", "author", "Ġwil", "Ċ", "*", "Ġ@", "date", "Ġ09", "/", "02", "/", "16", "Ċ", "*/", "Ċ", "#", "include", "Ġ\"", "My", "Scene", ".", "h", "\"", "Ċ", "/**", "Ċ", "Ġ*", "ĠEntry", "Ġmethod", ",", "Ġtakes", "Ġcommand", "Ġline", "Ġarguments", "Ġand", "Ġcreates", "Ġnew", "ĠScene", "Ġengine", "Ġto", "Ġrender", "Ġyour", "ĠG", "53", "G", "RA", "ĠCourse", "work", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ@", "see", "ĠMy", "Scene", "Ċ", "Ġ*", "Ġ@", "param", "Ġarg", "c", ",", "arg", "v", "Ġ(", "number", "Ġof", ")", "Ġcommand", "Ġline", "Ġarguments", "Ġpassed", "Ġto", "ĠOpenGL", "Ġwindow", "ing", "Ġcontext", "Ċ", "Ġ*/", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "*", "Ġarg", "v", "[", "])", "Ċ", "{", "Ċ", "ĉ", "//", "ĠCreate", "Ġnew", "Ġinstance", "Ġof", "ĠMy", "Scene", "Ġ-", "Ġthe", "ĠOpenGL", "Ġcontext", "Ġon", "Ġwhich", "Ġyour", "Ġcourse", "work", "Ġis", "Ġbuilt", "Ċ", "ĉ", "My", "Scene", "Ġ*", "scene", "Ġ=", "ĠNULL", ";", "Ċ", "ĉ", "scene", "Ġ=", "Ġnew", "ĠMy", "Scene", "(", "arg", "c", ",", "Ġarg", "v", ",", "Ġ\"", "G", "53", "G", "RA", "\",", "Ġ(", "const", "Ġint", ")", "600", ",", "Ġ(", "const", "Ġint", ")", "400", ");", "ĊĊ", "ĉ", "//", "ĠBegin", "Ġthe", "Ġmain", "ĠGL", "Ġloop", "Ċ", "ĉ", "scene", "->", "Run", "();", "ĊĊ", "ĉ", "//", "ĠOn", "Ġexit", ",", "Ġclean", "Ġup", "Ġand", "Ġreturn", "Ġsuccess", "Ġ(", "0", "x", "0", ")", "Ċ", "ĉ", "delete", "Ġscene", ";", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["scene", 7, "comesFrom", ["scene"], [4]], ["scene", 9, "comesFrom", ["scene"], [4]], ["argc", 5, "comesFrom", ["argc"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::946", "code": "#include \"body.h\"\n\nbody::body()\n{\n  x = y = z = 0.0;\n  vx = vy = vz = 0.0;\n  ax = ay = az = 0.0;\n}\n\nvoid body::update()\n{\n\tx += vx;\n\ty += vy;\n\tz += vz;\n\tvx += ax;\n\tvy += ay;\n\tvz += az;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "body", ".", "h", "\"", "Ċ", "Ċ", "body", "::", "body", "()", "Ċ", "{", "Ċ", "Ġ", "Ġx", "Ġ=", "Ġy", "Ġ=", "Ġz", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "Ġ", "Ġv", "x", "Ġ=", "Ġv", "y", "Ġ=", "Ġv", "z", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "Ġ", "Ġax", "Ġ=", "Ġay", "Ġ=", "Ġaz", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġbody", "::", "update", "()", "Ċ", "{", "Ċ", "ĉ", "x", "Ġ+=", "Ġv", "x", ";", "Ċ", "ĉ", "y", "Ġ+=", "Ġv", "y", ";", "Ċ", "ĉ", "z", "Ġ+=", "Ġv", "z", ";", "Ċ", "ĉ", "v", "x", "Ġ+=", "Ġax", ";", "Ċ", "ĉ", "vy", "Ġ+=", "Ġay", ";", "Ċ", "ĉ", "v", "z", "Ġ+=", "Ġaz", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["vx", 12, "comesFrom", ["vx"], [4]], ["vy", 14, "comesFrom", ["vy"], [5]], ["vz", 16, "comesFrom", ["vz"], [6]], ["ax", 18, "comesFrom", ["ax"], [7]], ["ay", 20, "comesFrom", ["ay"], [8]], ["az", 22, "comesFrom", ["az"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::947", "code": "#include <iostream>\n#include <string>\n\n#include \"Transportation.h\"\n#include \"car.h\"\n#include \"Airplane.h\"\n#include \"FlyingCar.h\"\n\nint main(int argc, char ** argv)\n{\n\t{\n\t\ttrans::transportation *herbie;\n\t\therbie = new trans::car(\"all-terrain\", 4, \"dan\");\n\t\tstd::cout << herbie->getDriver() << std::endl;\n\t\tdelete herbie;\n\t}\n\t{\n\t\ttrans::transportation *plane;\n\t\tplane = new trans::airplane(3, 3, 3, 3, \"John\");\n\t\tstd::cout << plane->getSpeed() << std::endl;\n\t\tdelete plane;\n\t}\n\t{\n\t\ttrans::transportation *pegasus = new trans::flyingCar(3, 3, 3, 3, \"Macevoy\", \"Racing\");\n\t\tstd::cout << pegasus->getDriver() << std::endl;\n\t\tpegasus->setDriver(\"W\");\n\t\tstd::cout << pegasus->getDriver() << std::endl;\n\t\tdelete pegasus;\n\t}\n\tsystem(\"pause\");\n\treturn 0;\n}", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "Trans", "portation", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "car", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Air", "plane", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Flying", "Car", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "Ġarg", "v", ")", "Ċ", "{", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "trans", "::", "trans", "portation", "Ġ*", "her", "bie", ";", "Ċ", "ĉ", "ĉ", "her", "bie", "Ġ=", "Ġnew", "Ġtrans", "::", "car", "(\"", "all", "-", "ter", "rain", "\",", "Ġ4", ",", "Ġ\"", "dan", "\");", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġher", "bie", "->", "get", "Driver", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "delete", "Ġher", "bie", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "trans", "::", "trans", "portation", "Ġ*", "plane", ";", "Ċ", "ĉ", "ĉ", "plane", "Ġ=", "Ġnew", "Ġtrans", "::", "air", "plane", "(", "3", ",", "Ġ3", ",", "Ġ3", ",", "Ġ3", ",", "Ġ\"", "John", "\");", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġplane", "->", "get", "Speed", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "delete", "Ġplane", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "trans", "::", "trans", "portation", "Ġ*", "peg", "asus", "Ġ=", "Ġnew", "Ġtrans", "::", "flying", "Car", "(", "3", ",", "Ġ3", ",", "Ġ3", ",", "Ġ3", ",", "Ġ\"", "M", "ace", "voy", "\",", "Ġ\"", "R", "acing", "\");", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġpe", "gas", "us", "->", "get", "Driver", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "peg", "asus", "->", "set", "Driver", "(\"", "W", "\");", "Ċ", "ĉ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġpe", "gas", "us", "->", "get", "Driver", "()", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "ĉ", "delete", "Ġpe", "gas", "us", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "system", "(\"", "pause", "\");", "Ċ", "ĉ", "return", "Ġ0", ";", "Ċ", "}"], "dataflow_graph": [["herbie", 6, "comesFrom", ["herbie"], [4]], ["herbie", 9, "comesFrom", ["herbie"], [4]], ["plane", 13, "comesFrom", ["plane"], [11]], ["plane", 16, "comesFrom", ["plane"], [11]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::948", "code": "// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"components/arc/session/arc_instance_mode.h\"\n\n#include <string>\n\n#include \"base/logging.h\"\n\nnamespace arc {\nnamespace {\n\nstd::string ArcInstanceModeToString(ArcInstanceMode mode) {\n#define MAP_MODE(name)        \\\n  case ArcInstanceMode::name: \\\n    return #name\n\n  switch (mode) {\n    MAP_MODE(MINI_INSTANCE);\n    MAP_MODE(FULL_INSTANCE);\n  }\n#undef MAP_MODE\n\n  // Some compilers report an error even if all values of an enum-class are\n  // covered exhaustively in a switch statement.\n  LOG(ERROR) << \"Invalid value \" << static_cast<int>(mode);\n  return std::string();\n}\n\n}  // namespace\n\nstd::ostream& operator<<(std::ostream& os, ArcInstanceMode mode) {\n  return os << ArcInstanceModeToString(mode);\n}\n\nstd::ostream& operator<<(std::ostream& os,\n                         absl::optional<ArcInstanceMode> mode) {\n  return os << (mode.has_value() ? ArcInstanceModeToString(mode.value())\n                                 : \"(nullopt)\");\n}\n\n}  // namespace arc\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ2017", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "comp", "onents", "/", "arc", "/", "session", "/", "arc", "_", "instance", "_", "mode", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "log", "ging", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġarc", "Ġ{", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "std", "::", "string", "ĠArc", "Instance", "Mode", "To", "String", "(", "Arc", "Instance", "Mode", "Ġmode", ")", "Ġ{", "Ċ", "#", "define", "ĠMAP", "_", "MODE", "(", "name", ")", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ\\", "Ċ", "Ġ", "Ġcase", "ĠArc", "Instance", "Mode", "::", "name", ":", "Ġ\\", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ#", "name", "ĊĊ", "Ġ", "Ġswitch", "Ġ(", "mode", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMAP", "_", "MODE", "(", "MIN", "I", "_", "INST", "ANCE", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMAP", "_", "MODE", "(", "F", "ULL", "_", "INST", "ANCE", ");", "Ċ", "Ġ", "Ġ}", "Ċ", "#", "und", "ef", "ĠMAP", "_", "MODE", "ĊĊ", "Ġ", "Ġ//", "ĠSome", "Ġcomp", "ilers", "Ġreport", "Ġan", "Ġerror", "Ġeven", "Ġif", "Ġall", "Ġvalues", "Ġof", "Ġan", "Ġenum", "-", "class", "Ġare", "Ċ", "Ġ", "Ġ//", "Ġcovered", "Ġexhaust", "ively", "Ġin", "Ġa", "Ġswitch", "Ġstatement", ".", "Ċ", "Ġ", "ĠLOG", "(", "ERROR", ")", "Ġ<<", "Ġ\"", "Invalid", "Ġvalue", "Ġ\"", "Ġ<<", "Ġstatic", "_", "cast", "<", "int", ">(", "mode", ");", "Ċ", "Ġ", "Ġreturn", "Ġstd", "::", "string", "();", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ċ", "Ċ", "std", "::", "ost", "ream", "&", "Ġoperator", "<<", "(", "std", "::", "ost", "ream", "&", "Ġos", ",", "ĠArc", "Instance", "Mode", "Ġmode", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġos", "Ġ<<", "ĠArc", "Instance", "Mode", "To", "String", "(", "mode", ");", "Ċ", "}", "Ċ", "Ċ", "std", "::", "ost", "ream", "&", "Ġoperator", "<<", "(", "std", "::", "ost", "ream", "&", "Ġos", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġabs", "l", "::", "optional", "<", "Arc", "Instance", "Mode", ">", "Ġmode", ")", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġos", "Ġ<<", "Ġ(", "mode", ".", "has", "_", "value", "()", "Ġ?", "ĠArc", "Instance", "Mode", "To", "String", "(", "mode", ".", "value", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġ\"(", "null", "opt", ")", "\");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġarc", "Ċ"], "dataflow_graph": [["mode", 4, "comesFrom", ["mode"], [1]], ["mode", 12, "comesFrom", ["mode"], [1]], ["mode", 18, "comesFrom", ["mode"], [15]], ["mode", 22, "comesFrom", ["mode"], [20]], ["mode", 25, "comesFrom", ["mode"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::949", "code": "// Copyright (c) 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"sync/notifier/fake_invalidation_handler.h\"\n\nnamespace syncer {\n\nFakeInvalidationHandler::FakeInvalidationHandler()\n    : state_(DEFAULT_INVALIDATION_ERROR),\n      last_source_(LOCAL_INVALIDATION),\n      invalidation_count_(0) {}\n\nFakeInvalidationHandler::~FakeInvalidationHandler() {}\n\nInvalidatorState FakeInvalidationHandler::GetInvalidatorState() const {\n  return state_;\n}\n\nconst ObjectIdInvalidationMap&\nFakeInvalidationHandler::GetLastInvalidationMap() const {\n  return last_invalidation_map_;\n}\n\nIncomingInvalidationSource\nFakeInvalidationHandler::GetLastInvalidationSource() const {\n  return last_source_;\n}\n\nint FakeInvalidationHandler::GetInvalidationCount() const {\n  return invalidation_count_;\n}\n\nvoid FakeInvalidationHandler::OnInvalidatorStateChange(InvalidatorState state) {\n  state_ = state;\n}\n\nvoid FakeInvalidationHandler::OnIncomingInvalidation(\n    const ObjectIdInvalidationMap& invalidation_map,\n    IncomingInvalidationSource source) {\n  last_invalidation_map_ = invalidation_map;\n  last_source_ = source;\n  ++invalidation_count_;\n}\n\n}  // namespace syncer\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2012", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "sync", "/", "not", "ifier", "/", "fake", "_", "in", "valid", "ation", "_", "handler", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġsyn", "cer", "Ġ{", "Ċ", "Ċ", "Fake", "Invalid", "ation", "Handler", "::", "Fake", "Invalid", "ation", "Handler", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġstate", "_(", "DE", "FAULT", "_", "IN", "VAL", "ID", "ATION", "_", "ERROR", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlast", "_", "source", "_(", "LOC", "AL", "_", "IN", "VAL", "ID", "ATION", "),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġinvalid", "ation", "_", "count", "_(", "0", ")", "Ġ{}", "Ċ", "Ċ", "Fake", "Invalid", "ation", "Handler", "::", "~", "Fake", "Invalid", "ation", "Handler", "()", "Ġ{}", "Ċ", "Ċ", "Invalid", "ator", "State", "ĠFake", "Invalid", "ation", "Handler", "::", "Get", "Invalid", "ator", "State", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġstate", "_", ";", "Ċ", "}", "Ċ", "Ċ", "const", "ĠObject", "Id", "Invalid", "ation", "Map", "&", "Ċ", "Fake", "Invalid", "ation", "Handler", "::", "Get", "Last", "Invalid", "ation", "Map", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġlast", "_", "in", "valid", "ation", "_", "map", "_", ";", "Ċ", "}", "Ċ", "Ċ", "In", "coming", "Invalid", "ation", "Source", "Ċ", "Fake", "Invalid", "ation", "Handler", "::", "Get", "Last", "Invalid", "ation", "Source", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġlast", "_", "source", "_", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠFake", "Invalid", "ation", "Handler", "::", "Get", "Invalid", "ation", "Count", "()", "Ġconst", "Ġ{", "Ċ", "Ġ", "Ġreturn", "Ġinvalid", "ation", "_", "count", "_", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFake", "Invalid", "ation", "Handler", "::", "On", "Invalid", "ator", "State", "Change", "(", "Invalid", "ator", "State", "Ġstate", ")", "Ġ{", "Ċ", "Ġ", "Ġstate", "_", "Ġ=", "Ġstate", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠFake", "Invalid", "ation", "Handler", "::", "On", "In", "coming", "Invalid", "ation", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "ĠObject", "Id", "Invalid", "ation", "Map", "&", "Ġinvalid", "ation", "_", "map", ",", "Ċ", "Ġ", "Ġ", "Ġ", "ĠIn", "coming", "Invalid", "ation", "Source", "Ġsource", ")", "Ġ{", "Ċ", "Ġ", "Ġlast", "_", "in", "valid", "ation", "_", "map", "_", "Ġ=", "Ġinvalid", "ation", "_", "map", ";", "Ċ", "Ġ", "Ġlast", "_", "source", "_", "Ġ=", "Ġsource", ";", "Ċ", "Ġ", "Ġ++", "in", "valid", "ation", "_", "count", "_", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġsyn", "cer", "Ċ"], "dataflow_graph": [["state", 18, "comesFrom", ["state"], [16]], ["source", 25, "comesFrom", ["source"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::950", "code": "// { dg-do compile { target c++14 } }\n\n// Copyright (C) 2013-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <experimental/optional>\n\nstruct value_type\n{\n  int i;\n};\n\nint main()\n{\n  constexpr std::experimental::optional<value_type> o { value_type { 51 } };\n  constexpr value_type fallback { 3 };\n  static_assert( o.value_or(fallback).i == 51, \"\" );\n  static_assert( o.value_or(fallback).i == (*o).i, \"\" );\n}\n", "code_tokens": ["Ġ//", "Ġ{", "Ġd", "g", "-", "do", "Ġcompile", "Ġ{", "Ġtarget", "Ġc", "++", "14", "Ġ}", "Ġ}", "Ċ", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2013", "-", "20", "21", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "#", "include", "Ġ<", "exper", "imental", "/", "optional", ">", "Ċ", "Ċ", "struct", "Ġvalue", "_", "type", "Ċ", "{", "Ċ", "Ġ", "Ġint", "Ġi", ";", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġconst", "expr", "Ġstd", "::", "exper", "imental", "::", "optional", "<", "value", "_", "type", ">", "Ġo", "Ġ{", "Ġvalue", "_", "type", "Ġ{", "Ġ51", "Ġ}", "Ġ};", "Ċ", "Ġ", "Ġconst", "expr", "Ġvalue", "_", "type", "Ġfall", "back", "Ġ{", "Ġ3", "Ġ};", "Ċ", "Ġ", "Ġstatic", "_", "assert", "(", "Ġo", ".", "value", "_", "or", "(", "fall", "back", ").", "i", "Ġ==", "Ġ51", ",", "Ġ\"\"", "Ġ);", "Ċ", "Ġ", "Ġstatic", "_", "assert", "(", "Ġo", ".", "value", "_", "or", "(", "fall", "back", ").", "i", "Ġ==", "Ġ(*", "o", ").", "i", ",", "Ġ\"\"", "Ġ);", "Ċ", "}", "Ċ"], "dataflow_graph": [["o", 4, "comesFrom", ["o"], [2]], ["o", 8, "comesFrom", ["o"], [2]], ["o", 12, "comesFrom", ["o"], [2]], ["fallback", 6, "comesFrom", ["fallback"], [3]], ["fallback", 10, "comesFrom", ["fallback"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::951", "code": "#ifndef NAMED_ROTAMER_SCORE_HH\n#define NAMED_ROTAMER_SCORE_HH\n\n#include <string>\n\nnamespace coot {\n\n   class named_rotamer_score {\n   public:\n      std::string name;\n      float clash_score;\n      float rotamer_probability_score;\n      std::vector<std::pair<std::string, float> > density_score_for_atoms;\n      float density_fit_score;\n      named_rotamer_score(const std::string &name_in,\n\t\t\t  float rotamer_probability_score_in,\n\t\t\t  float clash_score_in,\n\t\t\t  const std::vector<std::pair<std::string, float> > &atom_density_in,\n\t\t\t  float density_fit_score_in) {\n\t name = name_in;\n\t clash_score = clash_score_in;\n\t density_fit_score = density_fit_score_in;\n\t rotamer_probability_score = rotamer_probability_score_in;\n\t density_score_for_atoms = atom_density_in;\n      } \n   };\n} \n\n#endif // NAMED_ROTAMER_SCORE_HH\n", "code_tokens": ["Ġ#", "if", "nd", "ef", "ĠN", "AM", "ED", "_", "R", "OT", "AM", "ER", "_", "SC", "ORE", "_", "HH", "Ċ", "#", "define", "ĠN", "AM", "ED", "_", "R", "OT", "AM", "ER", "_", "SC", "ORE", "_", "HH", "Ċ", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "Ċ", "names", "pace", "Ġco", "ot", "Ġ{", "ĊĊ", "Ġ", "Ġ", "Ġclass", "Ġnamed", "_", "rot", "amer", "_", "score", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "string", "Ġname", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġclash", "_", "score", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġrot", "amer", "_", "pro", "b", "ability", "_", "score", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "pair", "<", "std", "::", "string", ",", "Ġfloat", ">", "Ġ>", "Ġdensity", "_", "score", "_", "for", "_", "at", "oms", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġdensity", "_", "fit", "_", "score", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġnamed", "_", "rot", "amer", "_", "score", "(", "const", "Ġstd", "::", "string", "Ġ&", "name", "_", "in", ",", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġfloat", "Ġrot", "amer", "_", "pro", "b", "ability", "_", "score", "_", "in", ",", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġfloat", "Ġclash", "_", "score", "_", "in", ",", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġconst", "Ġstd", "::", "vector", "<", "std", "::", "pair", "<", "std", "::", "string", ",", "Ġfloat", ">", "Ġ>", "Ġ&", "atom", "_", "density", "_", "in", ",", "Ċ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġfloat", "Ġdensity", "_", "fit", "_", "score", "_", "in", ")", "Ġ{", "Ċ", "ĉ", "Ġname", "Ġ=", "Ġname", "_", "in", ";", "Ċ", "ĉ", "Ġclash", "_", "score", "Ġ=", "Ġclash", "_", "score", "_", "in", ";", "Ċ", "ĉ", "Ġdensity", "_", "fit", "_", "score", "Ġ=", "Ġdensity", "_", "fit", "_", "score", "_", "in", ";", "Ċ", "ĉ", "Ġrot", "amer", "_", "pro", "b", "ability", "_", "score", "Ġ=", "Ġrot", "amer", "_", "pro", "b", "ability", "_", "score", "_", "in", ";", "Ċ", "ĉ", "Ġdensity", "_", "score", "_", "for", "_", "at", "oms", "Ġ=", "Ġatom", "_", "density", "_", "in", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ};", "Ċ", "}", "Ġ", "Ċ", "Ċ", "#", "endif", "Ġ//", "ĠN", "AM", "ED", "_", "R", "OT", "AM", "ER", "_", "SC", "ORE", "_", "HH", "Ċ"], "dataflow_graph": [["clash_score_in", 16, "comesFrom", ["clash_score_in"], [10]], ["density_fit_score_in", 18, "comesFrom", ["density_fit_score_in"], [12]], ["rotamer_probability_score_in", 20, "comesFrom", ["rotamer_probability_score_in"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::952", "code": "// Copyright (c) 2011 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include \"ash/test/ash_test_suite.h\"\n#include \"base/bind.h\"\n#include \"base/message_loop/message_pump_type.h\"\n#include \"base/test/launcher/unit_test_launcher.h\"\n#include \"base/threading/thread.h\"\n#include \"mojo/core/embedder/embedder.h\"\n#include \"mojo/core/embedder/scoped_ipc_support.h\"\n\nint main(int argc, char** argv) {\n  ash::AshTestSuite test_suite(argc, argv);\n\n  mojo::core::Init();\n  // The IPC thread is necessary for the window service.\n  base::Thread ipc_thread(\"IPC thread\");\n  ipc_thread.StartWithOptions(\n      base::Thread::Options(base::MessagePumpType::IO, 0));\n  mojo::core::ScopedIPCSupport ipc_support(\n      ipc_thread.task_runner(),\n      mojo::core::ScopedIPCSupport::ShutdownPolicy::CLEAN);\n\n  return base::LaunchUnitTests(\n      argc, argv,\n      base::BindOnce(&ash::AshTestSuite::Run, base::Unretained(&test_suite)));\n}\n", "code_tokens": ["Ġ//", "ĠCopyright", "Ġ(", "c", ")", "Ġ2011", "ĠThe", "ĠChrom", "ium", "ĠAuthors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "ĠUse", "Ġof", "Ġthis", "Ġsource", "Ġcode", "Ġis", "Ġgoverned", "Ġby", "Ġa", "ĠB", "SD", "-", "style", "Ġlicense", "Ġthat", "Ġcan", "Ġbe", "Ċ", "//", "Ġfound", "Ġin", "Ġthe", "ĠLIC", "ENSE", "Ġfile", ".", "Ċ", "Ċ", "#", "include", "Ġ\"", "ash", "/", "test", "/", "ash", "_", "test", "_", "su", "ite", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "bind", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "message", "_", "loop", "/", "message", "_", "p", "ump", "_", "type", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "test", "/", "laun", "cher", "/", "unit", "_", "test", "_", "laun", "cher", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "base", "/", "thread", "ing", "/", "thread", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mo", "jo", "/", "core", "/", "embed", "der", "/", "embed", "der", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "mo", "jo", "/", "core", "/", "embed", "der", "/", "sc", "oped", "_", "ip", "c", "_", "support", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġash", "::", "Ash", "Test", "Su", "ite", "Ġtest", "_", "su", "ite", "(", "arg", "c", ",", "Ġarg", "v", ");", "ĊĊ", "Ġ", "Ġmo", "jo", "::", "core", "::", "Init", "();", "Ċ", "Ġ", "Ġ//", "ĠThe", "ĠI", "PC", "Ġthread", "Ġis", "Ġnecessary", "Ġfor", "Ġthe", "Ġwindow", "Ġservice", ".", "Ċ", "Ġ", "Ġbase", "::", "Thread", "Ġip", "c", "_", "thread", "(\"", "IP", "C", "Ġthread", "\");", "Ċ", "Ġ", "Ġip", "c", "_", "thread", ".", "Start", "With", "Options", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbase", "::", "Thread", "::", "Options", "(", "base", "::", "Message", "P", "ump", "Type", "::", "IO", ",", "Ġ0", "));", "Ċ", "Ġ", "Ġmo", "jo", "::", "core", "::", "Sc", "oped", "IP", "C", "Support", "Ġip", "c", "_", "support", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġip", "c", "_", "thread", ".", "task", "_", "runner", "(),", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmo", "jo", "::", "core", "::", "Sc", "oped", "IP", "C", "Support", "::", "Shut", "down", "Policy", "::", "CLE", "AN", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġbase", "::", "Launch", "Unit", "T", "ests", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġarg", "c", ",", "Ġarg", "v", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġbase", "::", "Bind", "Once", "(&", "ash", "::", "Ash", "Test", "Su", "ite", "::", "Run", ",", "Ġbase", "::", "Un", "ret", "ained", "(&", "test", "_", "su", "ite", "))", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["ipc_thread", 6, "comesFrom", ["ipc_thread"], [5]], ["ipc_thread", 11, "comesFrom", ["ipc_thread"], [5]], ["argc", 15, "comesFrom", ["argc"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::953", "code": "/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n#include \"tensorflow/core/platform/rocm_rocdl_path.h\"\n\n#include \"tensorflow/core/lib/core/status_test_util.h\"\n#include \"tensorflow/core/lib/io/path.h\"\n#include \"tensorflow/core/platform/env.h\"\n#include \"tensorflow/core/platform/test.h\"\n\nnamespace tensorflow {\n\n#if TENSORFLOW_USE_ROCM\nTEST(RocmRocdlPathTest, ROCDLPath) {\n  VLOG(2) << \"ROCm-Deivce-Libs root = \" << RocdlRoot();\n  std::vector<string> rocdl_files;\n  TF_EXPECT_OK(Env::Default()->GetMatchingPaths(\n      io::JoinPath(RocdlRoot(), \"*.amdgcn.bc\"), &rocdl_files));\n  EXPECT_LT(0, rocdl_files.size());\n}\n#endif\n\n}  // namespace tensorflow\n", "code_tokens": ["Ġ/*", "ĠCopyright", "Ġ2018", "ĠThe", "ĠT", "ensor", "Flow", "ĠAuthors", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "Ċ", "Ċ", "Lic", "ensed", "Ġunder", "Ġthe", "ĠApache", "ĠLicense", ",", "ĠVersion", "Ġ2", ".", "0", "Ġ(", "the", "Ġ\"", "License", "\");", "Ċ", "you", "Ġmay", "Ġnot", "Ġuse", "Ġthis", "Ġfile", "Ġexcept", "Ġin", "Ġcompliance", "Ġwith", "Ġthe", "ĠLicense", ".", "Ċ", "You", "Ġmay", "Ġobtain", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠLicense", "Ġat", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġhttp", "://", "www", ".", "apache", ".", "org", "/", "lic", "enses", "/", "L", "IC", "ENSE", "-", "2", ".", "0", "Ċ", "Ċ", "Unless", "Ġrequired", "Ġby", "Ġapplicable", "Ġlaw", "Ġor", "Ġagreed", "Ġto", "Ġin", "Ġwriting", ",", "Ġsoftware", "Ċ", "dist", "ributed", "Ġunder", "Ġthe", "ĠLicense", "Ġis", "Ġdistributed", "Ġon", "Ġan", "Ġ\"", "AS", "ĠIS", "\"", "ĠBAS", "IS", ",", "Ċ", "W", "ITH", "OUT", "ĠWARRANT", "IES", "ĠOR", "ĠCON", "DIT", "IONS", "ĠOF", "ĠANY", "ĠK", "IND", ",", "Ġeither", "Ġexpress", "Ġor", "Ġimplied", ".", "Ċ", "See", "Ġthe", "ĠLicense", "Ġfor", "Ġthe", "Ġspecific", "Ġlanguage", "Ġgoverning", "Ġpermissions", "Ġand", "Ċ", "lim", "itations", "Ġunder", "Ġthe", "ĠLicense", ".", "Ċ", "================================================================", "============", "==", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "t", "ensor", "flow", "/", "core", "/", "platform", "/", "ro", "cm", "_", "ro", "cd", "l", "_", "path", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "t", "ensor", "flow", "/", "core", "/", "lib", "/", "core", "/", "status", "_", "test", "_", "util", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "t", "ensor", "flow", "/", "core", "/", "lib", "/", "io", "/", "path", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "t", "ensor", "flow", "/", "core", "/", "platform", "/", "env", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "t", "ensor", "flow", "/", "core", "/", "platform", "/", "test", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġtens", "or", "flow", "Ġ{", "Ċ", "Ċ", "#", "if", "ĠT", "ENS", "OR", "FL", "OW", "_", "USE", "_", "R", "OC", "M", "Ċ", "T", "EST", "(", "R", "oc", "m", "R", "oc", "dl", "Path", "Test", ",", "ĠR", "OC", "DL", "Path", ")", "Ġ{", "Ċ", "Ġ", "ĠV", "LOG", "(", "2", ")", "Ġ<<", "Ġ\"", "R", "OC", "m", "-", "De", "iv", "ce", "-", "Lib", "s", "Ġroot", "Ġ=", "Ġ\"", "Ġ<<", "ĠRoc", "dl", "Root", "();", "Ċ", "Ġ", "Ġstd", "::", "vector", "<", "string", ">", "Ġro", "cd", "l", "_", "files", ";", "Ċ", "Ġ", "ĠTF", "_", "EXP", "ECT", "_", "OK", "(", "En", "v", "::", "Default", "()", "->", "Get", "M", "atching", "Path", "s", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġio", "::", "Join", "Path", "(", "R", "oc", "dl", "Root", "(),", "Ġ\"", "*.", "amd", "g", "cn", ".", "bc", "\"),", "Ġ&", "ro", "cd", "l", "_", "files", "));", "Ċ", "Ġ", "ĠEXP", "ECT", "_", "LT", "(", "0", ",", "Ġro", "cd", "l", "_", "files", ".", "size", "());", "Ċ", "}", "Ċ", "#", "endif", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġnamespace", "Ġtens", "or", "flow", "Ċ"], "dataflow_graph": [["rocdl_files", 10, "comesFrom", ["rocdl_files"], [4]], ["rocdl_files", 12, "comesFrom", ["rocdl_files"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::954", "code": "#include \"win32/AcceleratorTableGenerator.h\"\r\n\r\nusing namespace Framework::Win32;\r\n\r\nCAcceleratorTableGenerator::CAcceleratorTableGenerator()\r\n{\r\n\r\n}\r\n\r\nCAcceleratorTableGenerator::~CAcceleratorTableGenerator()\r\n{\r\n\r\n}\r\n\r\nvoid CAcceleratorTableGenerator::Insert(unsigned int cmd, unsigned int key, unsigned int virt)\r\n{\r\n\tACCEL accel;\r\n    memset(&accel, 0, sizeof(ACCEL));\r\n\taccel.cmd\t= cmd;\r\n\taccel.key\t= key;\r\n\taccel.fVirt\t= virt;\r\n    m_table.push_back(accel);\r\n}\r\n\r\nHACCEL CAcceleratorTableGenerator::Create()\r\n{\r\n\tif(m_table.size() == 0) return NULL;\r\n    return CreateAcceleratorTable(&m_table[0], static_cast<int>(m_table.size()));\r\n}\r\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "win", "32", "/", "Ac", "celer", "ator", "Table", "Gener", "ator", ".", "h", "\"", "č", "Ċ", "č", "Ċ", "using", "Ġnamespace", "ĠFramework", "::", "Win", "32", ";", "č", "Ċ", "č", "Ċ", "CA", "c", "celer", "ator", "Table", "Gener", "ator", "::", "CA", "c", "celer", "ator", "Table", "Gener", "ator", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "CA", "c", "celer", "ator", "Table", "Gener", "ator", "::", "~", "CA", "c", "celer", "ator", "Table", "Gener", "ator", "()", "č", "Ċ", "{", "č", "Ċ", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "void", "ĠCA", "c", "celer", "ator", "Table", "Gener", "ator", "::", "Insert", "(", "unsigned", "Ġint", "Ġcmd", ",", "Ġunsigned", "Ġint", "Ġkey", ",", "Ġunsigned", "Ġint", "Ġvirt", ")", "č", "Ċ", "{", "č", "Ċ", "ĉ", "ACC", "EL", "Ġac", "cel", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġmem", "set", "(&", "ac", "cel", ",", "Ġ0", ",", "Ġsizeof", "(", "ACC", "EL", "));", "č", "Ċ", "ĉ", "ac", "cel", ".", "cmd", "ĉ", "=", "Ġcmd", ";", "č", "Ċ", "ĉ", "ac", "cel", ".", "key", "ĉ", "=", "Ġkey", ";", "č", "Ċ", "ĉ", "ac", "cel", ".", "f", "V", "irt", "ĉ", "=", "Ġvirt", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "table", ".", "push", "_", "back", "(", "ac", "cel", ");", "č", "Ċ", "}", "č", "Ċ", "č", "Ċ", "H", "ACC", "EL", "ĠCA", "c", "celer", "ator", "Table", "Gener", "ator", "::", "Create", "()", "č", "Ċ", "{", "č", "Ċ", "ĉ", "if", "(", "m", "_", "table", ".", "size", "()", "Ġ==", "Ġ0", ")", "Ġreturn", "ĠNULL", ";", "č", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠCreate", "Ac", "celer", "ator", "Table", "(&", "m", "_", "table", "[", "0", "],", "Ġstatic", "_", "cast", "<", "int", ">(", "m", "_", "table", ".", "size", "()", "));", "č", "Ċ", "}", "č", "Ċ"], "dataflow_graph": [["accel", 9, "comesFrom", ["accel"], [7]], ["accel", 11, "comesFrom", ["accel"], [7]], ["accel", 14, "comesFrom", ["accel"], [7]], ["accel", 17, "comesFrom", ["accel"], [7]], ["accel", 22, "comesFrom", ["accel"], [7]], ["cmd", 12, "comesFrom", ["cmd"], [4]], ["cmd", 13, "comesFrom", ["cmd"], [4]], ["key", 15, "comesFrom", ["key"], [5]], ["key", 16, "comesFrom", ["key"], [5]], ["virt", 19, "comesFrom", ["virt"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::955", "code": "#include \"node.h\"\n\nnamespace {\n\nusing v8::FunctionCallbackInfo;\nusing v8::Local;\nusing v8::Object;\nusing v8::Value;\n\nvoid GetExecutionAsyncId(const FunctionCallbackInfo<Value>& args) {\n  args.GetReturnValue().Set(\n    node::AsyncHooksGetExecutionAsyncId(args.GetIsolate()));\n}\n\nvoid GetTriggerAsyncId(const FunctionCallbackInfo<Value>& args) {\n  args.GetReturnValue().Set(\n    node::AsyncHooksGetTriggerAsyncId(args.GetIsolate()));\n}\n\nvoid Initialize(Local<Object> exports) {\n  NODE_SET_METHOD(exports, \"getExecutionAsyncId\", GetExecutionAsyncId);\n  NODE_SET_METHOD(exports, \"getTriggerAsyncId\", GetTriggerAsyncId);\n}\n\n}  // anonymous namespace\n\nNODE_MODULE(NODE_GYP_MODULE_NAME, Initialize)\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "node", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "Ġ{", "Ċ", "Ċ", "using", "Ġv", "8", "::", "Function", "Callback", "Info", ";", "Ċ", "using", "Ġv", "8", "::", "Local", ";", "Ċ", "using", "Ġv", "8", "::", "Object", ";", "Ċ", "using", "Ġv", "8", "::", "Value", ";", "Ċ", "Ċ", "void", "ĠGet", "Exec", "ution", "Async", "Id", "(", "const", "ĠFunction", "Callback", "Info", "<", "Value", ">", "&", "Ġargs", ")", "Ġ{", "Ċ", "Ġ", "Ġargs", ".", "Get", "Return", "Value", "().", "Set", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnode", "::", "Async", "H", "ooks", "Get", "Exec", "ution", "Async", "Id", "(", "args", ".", "Get", "Is", "olate", "()", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠGet", "Trigger", "Async", "Id", "(", "const", "ĠFunction", "Callback", "Info", "<", "Value", ">", "&", "Ġargs", ")", "Ġ{", "Ċ", "Ġ", "Ġargs", ".", "Get", "Return", "Value", "().", "Set", "(", "Ċ", "Ġ", "Ġ", "Ġ", "Ġnode", "::", "Async", "H", "ooks", "Get", "Trigger", "Async", "Id", "(", "args", ".", "Get", "Is", "olate", "()", "));", "Ċ", "}", "Ċ", "Ċ", "void", "ĠInitial", "ize", "(", "Local", "<", "Object", ">", "Ġexports", ")", "Ġ{", "Ċ", "Ġ", "ĠN", "ODE", "_", "SET", "_", "METHOD", "(", "ex", "ports", ",", "Ġ\"", "get", "Exec", "ution", "Async", "Id", "\",", "ĠGet", "Exec", "ution", "Async", "Id", ");", "Ċ", "Ġ", "ĠN", "ODE", "_", "SET", "_", "METHOD", "(", "ex", "ports", ",", "Ġ\"", "get", "Trigger", "Async", "Id", "\",", "ĠGet", "Trigger", "Async", "Id", ");", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ", "Ġ//", "Ġanonymous", "Ġnamespace", "Ċ", "Ċ", "N", "ODE", "_", "MOD", "ULE", "(", "N", "ODE", "_", "GY", "P", "_", "MOD", "ULE", "_", "NAME", ",", "ĠInitial", "ize", ")", "Ċ"], "dataflow_graph": [["exports", 23, "comesFrom", ["exports"], [21]], ["exports", 26, "comesFrom", ["exports"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::956", "code": "/*\n * Copyright (c) 2015 - present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nnamespace f1 {\nint val;\n\nstruct A {\n  static int v;\n};\n}\n\nnamespace f2 {\nint val;\n}\n\nstruct B {\n  static int v;\n};\n\nstruct C : public B {};\n\nint div0_namepace_res() {\n  f1::val = 1;\n  f2::val = -2;\n  return 1 / (f1::val + f2::val + 1);\n}\n\nint div0_static_field() {\n  B::v = 1;\n  f1::A::v = -2;\n  return 1 / (f1::A::v + B::v + 1);\n}\n\nint div0_static_field_member_access(f1::A* a, C* b) {\n  a->v = 1;\n  b->v = -2;\n  return 1 / (f1::A::v + B::v + 1);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2015", "Ġ-", "Ġpresent", "ĠFacebook", ",", "ĠInc", ".", "Ċ", "Ġ*", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġsource", "Ġcode", "Ġis", "Ġlicensed", "Ġunder", "Ġthe", "ĠB", "SD", "Ġstyle", "Ġlicense", "Ġfound", "Ġin", "Ġthe", "Ċ", "Ġ*", "ĠLIC", "ENSE", "Ġfile", "Ġin", "Ġthe", "Ġroot", "Ġdirectory", "Ġof", "Ġthis", "Ġsource", "Ġtree", ".", "ĠAn", "Ġadditional", "Ġgrant", "Ċ", "Ġ*", "Ġof", "Ġpatent", "Ġrights", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "ĠPAT", "ENTS", "Ġfile", "Ġin", "Ġthe", "Ġsame", "Ġdirectory", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "names", "pace", "Ġf", "1", "Ġ{", "Ċ", "int", "Ġval", ";", "Ċ", "Ċ", "struct", "ĠA", "Ġ{", "Ċ", "Ġ", "Ġstatic", "Ġint", "Ġv", ";", "Ċ", "};", "Ċ", "}", "Ċ", "Ċ", "names", "pace", "Ġf", "2", "Ġ{", "Ċ", "int", "Ġval", ";", "Ċ", "}", "Ċ", "Ċ", "struct", "ĠB", "Ġ{", "Ċ", "Ġ", "Ġstatic", "Ġint", "Ġv", ";", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠC", "Ġ:", "Ġpublic", "ĠB", "Ġ{", "};", "Ċ", "Ċ", "int", "Ġdiv", "0", "_", "name", "pace", "_", "res", "()", "Ġ{", "Ċ", "Ġ", "Ġf", "1", "::", "val", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġf", "2", "::", "val", "Ġ=", "Ġ-", "2", ";", "Ċ", "Ġ", "Ġreturn", "Ġ1", "Ġ/", "Ġ(", "f", "1", "::", "val", "Ġ+", "Ġf", "2", "::", "val", "Ġ+", "Ġ1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġdiv", "0", "_", "static", "_", "field", "()", "Ġ{", "Ċ", "Ġ", "ĠB", "::", "v", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġf", "1", "::", "A", "::", "v", "Ġ=", "Ġ-", "2", ";", "Ċ", "Ġ", "Ġreturn", "Ġ1", "Ġ/", "Ġ(", "f", "1", "::", "A", "::", "v", "Ġ+", "ĠB", "::", "v", "Ġ+", "Ġ1", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġdiv", "0", "_", "static", "_", "field", "_", "member", "_", "access", "(", "f", "1", "::", "A", "*", "Ġa", ",", "ĠC", "*", "Ġb", ")", "Ġ{", "Ċ", "Ġ", "Ġa", "->", "v", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġb", "->", "v", "Ġ=", "Ġ-", "2", ";", "Ċ", "Ġ", "Ġreturn", "Ġ1", "Ġ/", "Ġ(", "f", "1", "::", "A", "::", "v", "Ġ+", "ĠB", "::", "v", "Ġ+", "Ġ1", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["val", 5, "comesFrom", ["val"], [2]], ["val", 6, "comesFrom", ["val"], [2]], ["val", 7, "comesFrom", ["val"], [2]], ["val", 8, "comesFrom", ["val"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::957", "code": "/*\n * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.\n */\n\n#include \"bgp/extended-community/default_gateway.h\"\n\n#include \"base/logging.h\"\n#include \"testing/gunit.h\"\n\nclass DefaultGatewayTest : public ::testing::Test {\n};\n\nTEST_F(DefaultGatewayTest, ByteArray_1) {\n    DefaultGateway::bytes_type data =\n        { { 0x06, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } };\n    DefaultGateway dgw(data);\n    EXPECT_EQ(\"defaultgw:0\", dgw.ToString());\n}\n\nTEST_F(DefaultGatewayTest, ByteArray_2) {\n    DefaultGateway::bytes_type data =\n        { { 0x06, 0x0d, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06 } };\n    DefaultGateway dgw(data);\n    EXPECT_EQ(\"defaultgw:0\", dgw.ToString());\n}\n\nint main(int argc, char **argv) {\n    ::testing::InitGoogleTest(&argc, argv);\n    int result = RUN_ALL_TESTS();\n    return result;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "c", ")", "Ġ2013", "ĠJun", "iper", "ĠNetworks", ",", "ĠInc", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "b", "gp", "/", "ext", "ended", "-", "community", "/", "default", "_", "gate", "way", ".", "h", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "base", "/", "log", "ging", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "testing", "/", "gun", "it", ".", "h", "\"", "Ċ", "Ċ", "class", "ĠDefault", "Gate", "way", "Test", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ġ{", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "Default", "Gate", "way", "Test", ",", "ĠByte", "Array", "_", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDefault", "Gate", "way", "::", "bytes", "_", "type", "Ġdata", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġ{", "Ġ0", "x", "06", ",", "Ġ0", "x", "0", "d", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", ",", "Ġ0", "x", "00", "Ġ}", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDefault", "Gate", "way", "Ġd", "g", "w", "(", "data", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(\"", "default", "g", "w", ":", "0", "\",", "Ġd", "g", "w", ".", "To", "String", "());", "Ċ", "}", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "Default", "Gate", "way", "Test", ",", "ĠByte", "Array", "_", "2", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDefault", "Gate", "way", "::", "bytes", "_", "type", "Ġdata", "Ġ=", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ġ{", "Ġ0", "x", "06", ",", "Ġ0", "x", "0", "d", ",", "Ġ0", "x", "01", ",", "Ġ0", "x", "02", ",", "Ġ0", "x", "03", ",", "Ġ0", "x", "04", ",", "Ġ0", "x", "05", ",", "Ġ0", "x", "06", "Ġ}", "Ġ};", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDefault", "Gate", "way", "Ġd", "g", "w", "(", "data", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEXP", "ECT", "_", "E", "Q", "(\"", "default", "g", "w", ":", "0", "\",", "Ġd", "g", "w", ".", "To", "String", "());", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ::", "testing", "::", "Init", "Google", "Test", "(&", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġresult", "Ġ=", "ĠRUN", "_", "ALL", "_", "T", "ES", "TS", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 16, "comesFrom", ["argc"], [13]], ["result", 20, "comesFrom", ["result"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::958", "code": "// GROUPS passed code-generation\n// code-gen file\n// From: david.binderman@pmsr.philips.co.uk\n// Date:     Tue, 17 Aug 93 10:09:38 BST\n// Subject:  .* broken in 2.4.5\n// Message-ID: <9308170909.AA05509@pmsr.philips.co.uk>\n\nclass A {\npublic:\n        char c;\n};\n\ntypedef char A::*PMA;\n\nPMA pmA = &A::c;\n\nA oA;\n\nextern \"C\" int printf( const char *, ...);\n\nint main()\n{\n        oA.c = 'q';\n\n        if ( (oA .* pmA))\n                        printf( \"PASS\\n\");\n        else\n                        printf(\" FAIL\\n\");\n}\n\n", "code_tokens": ["Ġ//", "ĠGR", "OU", "PS", "Ġpassed", "Ġcode", "-", "generation", "Ċ", "//", "Ġcode", "-", "gen", "Ġfile", "Ċ", "//", "ĠFrom", ":", "Ġdavid", ".", "bind", "erman", "@", "p", "ms", "r", ".", "phil", "ips", ".", "co", ".", "uk", "Ċ", "//", "ĠDate", ":", "Ġ", "Ġ", "Ġ", "Ġ", "ĠTue", ",", "Ġ17", "ĠAug", "Ġ93", "Ġ10", ":", "09", ":", "38", "ĠBST", "Ċ", "//", "ĠSubject", ":", "Ġ", "Ġ.", "*", "Ġbroken", "Ġin", "Ġ2", ".", "4", ".", "5", "Ċ", "//", "ĠMessage", "-", "ID", ":", "Ġ<", "9", "308", "17", "09", "09", ".", "AA", "05", "509", "@", "p", "ms", "r", ".", "phil", "ips", ".", "co", ".", "uk", ">", "Ċ", "Ċ", "class", "ĠA", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchar", "Ġc", ";", "Ċ", "};", "Ċ", "Ċ", "ty", "ped", "ef", "Ġchar", "ĠA", "::", "*", "P", "MA", ";", "Ċ", "Ċ", "P", "MA", "Ġpm", "A", "Ġ=", "Ġ&", "A", "::", "c", ";", "Ċ", "Ċ", "A", "Ġo", "A", ";", "Ċ", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġint", "Ġprintf", "(", "Ġconst", "Ġchar", "Ġ*", ",", "Ġ...", ");", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġo", "A", ".", "c", "Ġ=", "Ġ'", "q", "';", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "Ġ(", "o", "A", "Ġ.", "*", "Ġpm", "A", "))", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(", "Ġ\"", "PASS", "\\", "n", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "ĠFA", "IL", "\\", "n", "\");", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["oA", 6, "comesFrom", ["oA"], [3]], ["oA", 8, "comesFrom", ["oA"], [3]], ["pmA", 9, "comesFrom", ["pmA"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::959", "code": "/*\n * Copyright (C) 1999 Antti Koivisto (koivisto@kde.org)\n * Copyright (C) 2004, 2005, 2006, 2007, 2008 Apple Inc. All rights reserved.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Library General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public License\n * along with this library; see the file COPYING.LIB.  If not, write to\n * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n * Boston, MA 02110-1301, USA.\n *\n */\n\n#include \"config.h\"\n#include \"CounterDirectives.h\"\n\nnamespace WebCore {\n\nbool operator==(const CounterDirectives& a, const CounterDirectives& b)\n{\n    return a.isIncrement() == b.isIncrement()\n      && a.incrementValue() == b.incrementValue()\n      && a.isReset() == b.isReset()\n      && a.resetValue() == b.resetValue();\n}\n\nstd::unique_ptr<CounterDirectiveMap> clone(const CounterDirectiveMap& counterDirectives)\n{\n    auto result = std::make_unique<CounterDirectiveMap>();\n    *result = counterDirectives;\n    return result;\n}\n\n} // namespace WebCore\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ1999", "ĠAnt", "ti", "ĠKo", "ivist", "o", "Ġ(", "ko", "ivist", "o", "@", "k", "de", ".", "org", ")", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2004", ",", "Ġ2005", ",", "Ġ2006", ",", "Ġ2007", ",", "Ġ2008", "ĠApple", "ĠInc", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLibrary", "ĠGeneral", "ĠPublic", "Ċ", "Ġ*", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "Ġ*", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "ĠGNU", "Ċ", "Ġ*", "ĠLibrary", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠLibrary", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", ".", "LIB", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġwrite", "Ġto", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠFranklin", "ĠStreet", ",", "ĠFifth", "ĠFloor", ",", "Ċ", "Ġ*", "ĠBoston", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "Ġ*", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "config", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Counter", "Direct", "ives", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠWeb", "Core", "Ġ{", "Ċ", "Ċ", "bool", "Ġoperator", "==", "(", "const", "ĠCounter", "Direct", "ives", "&", "Ġa", ",", "Ġconst", "ĠCounter", "Direct", "ives", "&", "Ġb", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ".", "is", "Incre", "ment", "()", "Ġ==", "Ġb", ".", "is", "Incre", "ment", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ&&", "Ġa", ".", "incre", "ment", "Value", "()", "Ġ==", "Ġb", ".", "incre", "ment", "Value", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ&&", "Ġa", ".", "is", "Res", "et", "()", "Ġ==", "Ġb", ".", "is", "Res", "et", "()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ&&", "Ġa", ".", "reset", "Value", "()", "Ġ==", "Ġb", ".", "reset", "Value", "();", "Ċ", "}", "Ċ", "Ċ", "std", "::", "unique", "_", "ptr", "<", "Counter", "Direct", "ive", "Map", ">", "Ġclone", "(", "const", "ĠCounter", "Direct", "ive", "Map", "&", "Ġcounter", "Direct", "ives", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġresult", "Ġ=", "Ġstd", "::", "make", "_", "unique", "<", "Counter", "Direct", "ive", "Map", ">", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ*", "result", "Ġ=", "Ġcounter", "Direct", "ives", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠWeb", "Core", "Ċ"], "dataflow_graph": [["result", 22, "comesFrom", ["result"], [20]], ["result", 24, "comesFrom", ["result"], [20]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::960", "code": "// ---------------------------------------------------------------------\n//\n// Copyright (C) 2008 - 2014 by the deal.II authors\n//\n// This file is part of the deal.II library.\n//\n// The deal.II library is free software; you can use it, redistribute\n// it, and/or modify it under the terms of the GNU Lesser General\n// Public License as published by the Free Software Foundation; either\n// version 2.1 of the License, or (at your option) any later version.\n// The full text of the license can be found in the file LICENSE at\n// the top level of the deal.II distribution.\n//\n// ---------------------------------------------------------------------\n\n\n\n// check ChunkSparsityPattern::copy constructor with offdiagonals\n\n#include \"sparsity_pattern_common.h\"\n\nint main ()\n{\n  std::ofstream logfile(\"output\");\n  logfile.setf(std::ios::fixed);\n  deallog << std::setprecision(3);\n  deallog.attach(logfile);\n  deallog.depth_console(0);\n  deallog.threshold_double(1.e-10);\n\n  const unsigned int chunk_sizes[] = { 1, 2, 4, 5, 7 };\n  for (unsigned int i=0; i<sizeof(chunk_sizes)/sizeof(chunk_sizes[0]); ++i)\n    {\n      chunk_size = chunk_sizes[i];\n      copy_with_offdiagonals_2<ChunkSparsityPattern> ();\n    }\n}\n\n\n\n", "code_tokens": ["Ġ//", "Ġ----------------------------------------------------------------", "-----", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2008", "Ġ-", "Ġ2014", "Ġby", "Ġthe", "Ġdeal", ".", "II", "Ġauthors", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġlibrary", ".", "Ċ", "//", "Ċ", "//", "ĠThe", "Ġdeal", ".", "II", "Ġlibrary", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġuse", "Ġit", ",", "Ġredist", "ribute", "Ċ", "//", "Ġit", ",", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠLess", "er", "ĠGeneral", "Ċ", "//", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ċ", "//", "Ġversion", "Ġ2", ".", "1", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "ĠThe", "Ġfull", "Ġtext", "Ġof", "Ġthe", "Ġlicense", "Ġcan", "Ġbe", "Ġfound", "Ġin", "Ġthe", "Ġfile", "ĠLIC", "ENSE", "Ġat", "Ċ", "//", "Ġthe", "Ġtop", "Ġlevel", "Ġof", "Ġthe", "Ġdeal", ".", "II", "Ġdistribution", ".", "Ċ", "//", "Ċ", "//", "Ġ----------------------------------------------------------------", "-----", "ĊĊ", "Ċ", "Ċ", "//", "Ġcheck", "ĠCh", "unk", "Sp", "arsity", "Pattern", "::", "copy", "Ġconstructor", "Ġwith", "Ġoff", "di", "agon", "als", "Ċ", "Ċ", "#", "include", "Ġ\"", "sp", "arsity", "_", "pattern", "_", "common", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "Ċ", "{", "Ċ", "Ġ", "Ġstd", "::", "of", "stream", "Ġlog", "file", "(\"", "output", "\");", "Ċ", "Ġ", "Ġlog", "file", ".", "set", "f", "(", "std", "::", "ios", "::", "fixed", ");", "Ċ", "Ġ", "Ġde", "all", "og", "Ġ<<", "Ġstd", "::", "set", "pre", "cision", "(", "3", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "attach", "(", "log", "file", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "depth", "_", "console", "(", "0", ");", "Ċ", "Ġ", "Ġde", "all", "og", ".", "th", "reshold", "_", "double", "(", "1", ".", "e", "-", "10", ");", "ĊĊ", "Ġ", "Ġconst", "Ġunsigned", "Ġint", "Ġchunk", "_", "s", "izes", "[]", "Ġ=", "Ġ{", "Ġ1", ",", "Ġ2", ",", "Ġ4", ",", "Ġ5", ",", "Ġ7", "Ġ};", "Ċ", "Ġ", "Ġfor", "Ġ(", "unsigned", "Ġint", "Ġi", "=", "0", ";", "Ġi", "<", "size", "of", "(", "ch", "unk", "_", "s", "izes", ")/", "size", "of", "(", "ch", "unk", "_", "s", "izes", "[", "0", "]);", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġchunk", "_", "size", "Ġ=", "Ġchunk", "_", "s", "izes", "[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcopy", "_", "with", "_", "off", "di", "agon", "als", "_", "2", "<", "Ch", "unk", "Sp", "arsity", "Pattern", ">", "Ġ();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "ĊĊ", "ĊĊ"], "dataflow_graph": [["logfile", 2, "comesFrom", ["logfile"], [1]], ["logfile", 9, "comesFrom", ["logfile"], [1]], ["i", 16, "comesFrom", ["i"], [15]], ["i", 19, "comesFrom", ["i"], [15]], ["i", 22, "comesFrom", ["i"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::961", "code": "// 2001-11-25  Phil Edwards  <pme@gcc.gnu.org>\n//\n// Copyright (C) 2001-2015 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n// 20.4.1.1 allocator members\n\n#include <cstdlib>\n#include <ext/array_allocator.h>\n#include <replacement_memory_operators.h>\n\nint main()\n{ \n  typedef unsigned int value_type;\n  typedef std::tr1::array<value_type, 15> array_type;\n  typedef __gnu_cxx::array_allocator<value_type, array_type> allocator_type;\n  array_type store;\n  allocator_type a(&store);\n  __gnu_test::check_new<allocator_type, false>(a); \n  return 0;\n}\n", "code_tokens": ["Ġ//", "Ġ2001", "-", "11", "-", "25", "Ġ", "ĠPhil", "ĠEdwards", "Ġ", "Ġ<", "p", "me", "@", "g", "cc", ".", "gnu", ".", "org", ">", "Ċ", "//", "Ċ", "//", "ĠCopyright", "Ġ(", "C", ")", "Ġ2001", "-", "2015", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "Ġthe", "ĠGNU", "ĠISO", "ĠC", "++", "ĠLibrary", ".", "Ġ", "ĠThis", "Ġlibrary", "Ġis", "Ġfree", "Ċ", "//", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ċ", "//", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ġthe", "Ċ", "//", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "//", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "//", "Ċ", "//", "ĠThis", "Ġlibrary", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "//", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "//", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "//", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "//", "Ċ", "//", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġalong", "Ċ", "//", "Ġwith", "Ġthis", "Ġlibrary", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", "3", ".", "Ġ", "ĠIf", "Ġnot", "Ġsee", "Ċ", "//", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ċ", "//", "Ġ20", ".", "4", ".", "1", ".", "1", "Ġalloc", "ator", "Ġmembers", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "#", "include", "Ġ<", "ext", "/", "array", "_", "alloc", "ator", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "repl", "acement", "_", "memory", "_", "oper", "ators", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ġ", "Ċ", "Ġ", "Ġtyped", "ef", "Ġunsigned", "Ġint", "Ġvalue", "_", "type", ";", "Ċ", "Ġ", "Ġtyped", "ef", "Ġstd", "::", "tr", "1", "::", "array", "<", "value", "_", "type", ",", "Ġ15", ">", "Ġarray", "_", "type", ";", "Ċ", "Ġ", "Ġtyped", "ef", "Ġ__", "gnu", "_", "c", "xx", "::", "array", "_", "alloc", "ator", "<", "value", "_", "type", ",", "Ġarray", "_", "type", ">", "Ġalloc", "ator", "_", "type", ";", "Ċ", "Ġ", "Ġarray", "_", "type", "Ġstore", ";", "Ċ", "Ġ", "Ġalloc", "ator", "_", "type", "Ġa", "(&", "store", ");", "Ċ", "Ġ", "Ġ__", "gnu", "_", "test", "::", "check", "_", "new", "<", "alloc", "ator", "_", "type", ",", "Ġfalse", ">(", "a", ");", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["store", 3, "comesFrom", ["store"], [1]], ["a", 5, "comesFrom", ["a"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::962", "code": "class Solution {\npublic:\n    int checkRecord(int n) {\n        if (n == 0) {\n            return 0;\n        }\n        else if (n == 1) {\n            return 3;\n        }\n        long M = 1000000007;\n        vector<long>dp{1, 1, 2};\n        for (int i = 2; i < n; i++) {\n            dp.push_back((dp[i - 2] + dp[i - 1] + dp[i]) % M);\n        }\n        long answer = (dp[n - 2] + dp[n - 1] + dp[n]) % M;\n        for (int i = 0; i < n; i++) {\n            answer += (dp[i + 1] * dp[n - i]) % M;\n            answer %= M;\n        }\n        return (int)answer;\n    }\n};", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġcheck", "Record", "(", "int", "Ġn", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "n", "Ġ==", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġif", "Ġ(", "n", "Ġ==", "Ġ1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ3", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlong", "ĠM", "Ġ=", "Ġ100", "000000", "7", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvector", "<", "long", ">", "dp", "{", "1", ",", "Ġ1", ",", "Ġ2", "};", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ2", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġd", "p", ".", "push", "_", "back", "((", "dp", "[", "i", "Ġ-", "Ġ2", "]", "Ġ+", "Ġd", "p", "[", "i", "Ġ-", "Ġ1", "]", "Ġ+", "Ġd", "p", "[", "i", "])", "Ġ%", "ĠM", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlong", "Ġanswer", "Ġ=", "Ġ(", "dp", "[", "n", "Ġ-", "Ġ2", "]", "Ġ+", "Ġd", "p", "[", "n", "Ġ-", "Ġ1", "]", "Ġ+", "Ġd", "p", "[", "n", "])", "Ġ%", "ĠM", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġn", ";", "Ġi", "++)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġanswer", "Ġ+=", "Ġ(", "dp", "[", "i", "Ġ+", "Ġ1", "]", "Ġ*", "Ġd", "p", "[", "n", "Ġ-", "Ġi", "])", "Ġ%", "ĠM", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġanswer", "Ġ%", "=", "ĠM", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ(", "int", ")", "answer", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["n", 2, "comesFrom", ["n"], [1]], ["n", 3, "comesFrom", ["n"], [1]], ["n", 8, "comesFrom", ["n"], [1]], ["n", 21, "comesFrom", ["n"], [1]], ["n", 23, "comesFrom", ["n"], [1]], ["n", 25, "comesFrom", ["n"], [1]], ["n", 29, "comesFrom", ["n"], [1]], ["n", 35, "comesFrom", ["n"], [1]], ["i", 7, "comesFrom", ["i"], [6]], ["i", 9, "comesFrom", ["i"], [6]], ["i", 13, "comesFrom", ["i"], [6]], ["i", 15, "comesFrom", ["i"], [6]], ["i", 17, "comesFrom", ["i"], [6]], ["i", 28, "comesFrom", ["i"], [27]], ["i", 30, "comesFrom", ["i"], [27]], ["i", 33, "comesFrom", ["i"], [27]], ["i", 36, "comesFrom", ["i"], [27]], ["dp", 10, "comesFrom", ["dp"], [5]], ["dp", 12, "comesFrom", ["dp"], [5]], ["dp", 14, "comesFrom", ["dp"], [5]], ["dp", 16, "comesFrom", ["dp"], [5]], ["dp", 20, "comesFrom", ["dp"], [5]], ["dp", 22, "comesFrom", ["dp"], [5]], ["dp", 24, "comesFrom", ["dp"], [5]], ["dp", 32, "comesFrom", ["dp"], [5]], ["dp", 34, "comesFrom", ["dp"], [5]], ["M", 18, "comesFrom", ["M"], [4]], ["M", 26, "comesFrom", ["M"], [4]], ["M", 37, "comesFrom", ["M"], [4]], ["M", 39, "comesFrom", ["M"], [4]], ["answer", 40, "comesFrom", ["answer"], [38]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::963", "code": "//\n//  ModulatedDelay.hpp\n//  AudioKit Core\n//\n//  Created by Shane Dunne, revision history on Github.\n//  Copyright © 2018 AudioKit. All rights reserved.\n//\n\n#ifdef __cplusplus\n#pragma once\n\n#include \"AKModulatedDelay_Typedefs.h\"\n\n#import <memory>\n\nclass AKModulatedDelay\n{\npublic:\n    AKModulatedDelay(AKModulatedDelayType type);\n    ~AKModulatedDelay();\n    \n    void init(int channelCount, double sampleRate);\n    void deinit();\n    \n    void setModFrequencyHz(float freq);\n    float getModFrequencyHz() { return modFreqHz; }\n    \n    void setModDepthFraction(float fraction) { modDepthFraction = fraction; }\n    float getModDepthFraction() { return modDepthFraction; }\n    \n    void setLeftFeedback(float feedback);\n    void setRightFeedback(float feedback);\n        \n    void Render(unsigned channelCount, unsigned sampleCount, float *inBuffers[], float *outBuffers[]);\n    \nprotected:\n    float minDelayMs, maxDelayMs, midDelayMs, delayRangeMs;\n    float modFreqHz, modDepthFraction, dryWetMix;\n    AKModulatedDelayType effectType;\n\n    struct InternalData;\n    std::unique_ptr<InternalData> data;\n};\n\n#endif\n", "code_tokens": ["Ġ//", "Ċ", "//", "Ġ", "ĠMod", "ulated", "Del", "ay", ".", "h", "pp", "Ċ", "//", "Ġ", "ĠAudio", "Kit", "ĠCore", "Ċ", "//", "Ċ", "//", "Ġ", "ĠCreated", "Ġby", "ĠShane", "ĠDun", "ne", ",", "Ġrevision", "Ġhistory", "Ġon", "ĠGithub", ".", "Ċ", "//", "Ġ", "ĠCopyright", "ĠÂ©", "Ġ2018", "ĠAudio", "Kit", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "//", "Ċ", "Ċ", "#", "if", "def", "Ġ__", "c", "plus", "plus", "Ċ", "#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "#", "include", "Ġ\"", "AK", "Mod", "ulated", "Del", "ay", "_", "Typ", "ed", "ef", "s", ".", "h", "\"", "Ċ", "Ċ", "#", "import", "Ġ<", "memory", ">", "Ċ", "Ċ", "class", "ĠAK", "Mod", "ulated", "Del", "ay", "Ċ", "{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAK", "Mod", "ulated", "Del", "ay", "(", "AK", "Mod", "ulated", "Del", "ay", "Type", "Ġtype", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ~", "AK", "Mod", "ulated", "Del", "ay", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġinit", "(", "int", "Ġchannel", "Count", ",", "Ġdouble", "Ġsample", "Rate", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġde", "init", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "Mod", "F", "requency", "Hz", "(", "float", "Ġfre", "q", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġget", "Mod", "F", "requency", "Hz", "()", "Ġ{", "Ġreturn", "Ġmod", "Fre", "q", "Hz", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "Mod", "Depth", "F", "raction", "(", "float", "Ġfraction", ")", "Ġ{", "Ġmod", "Depth", "F", "raction", "Ġ=", "Ġfraction", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġget", "Mod", "Depth", "F", "raction", "()", "Ġ{", "Ġreturn", "Ġmod", "Depth", "F", "raction", ";", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "Left", "Feed", "back", "(", "float", "Ġfeedback", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "Right", "Feed", "back", "(", "float", "Ġfeedback", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvoid", "ĠRender", "(", "unsigned", "Ġchannel", "Count", ",", "Ġunsigned", "Ġsample", "Count", ",", "Ġfloat", "Ġ*", "in", "Buff", "ers", "[", "],", "Ġfloat", "Ġ*", "out", "Buff", "ers", "[]", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġmin", "Del", "ay", "Ms", ",", "Ġmax", "Del", "ay", "Ms", ",", "Ġmid", "Del", "ay", "Ms", ",", "Ġdelay", "Range", "Ms", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfloat", "Ġmod", "Fre", "q", "Hz", ",", "Ġmod", "Depth", "F", "raction", ",", "Ġdry", "W", "et", "Mix", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠAK", "Mod", "ulated", "Del", "ay", "Type", "Ġeffect", "Type", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġstruct", "ĠInternal", "Data", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "unique", "_", "ptr", "<", "Internal", "Data", ">", "Ġdata", ";", "Ċ", "};", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["fraction", 15, "comesFrom", ["fraction"], [13]], ["modDepthFraction", 17, "comesFrom", ["modDepthFraction"], [14]], ["modDepthFraction", 32, "comesFrom", ["modDepthFraction"], [14]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::964", "code": "/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if (!head) return nullptr;\n        int listlen = 0;\n        ListNode *p = head;\n        ListNode *tail = p;\n        while (p) {\n            listlen++;\n            tail = p;\n            p = p->next;\n        }\n        k %= listlen;\n        if (k == 0) return head;\n        p = head;\n        int counter = listlen - k - 1;\n        while (counter--) {\n            p = p->next;\n        }\n        ListNode *ret = p->next;\n        p->next = nullptr;\n        tail->next = head;\n        return ret;\n    }\n};", "code_tokens": ["Ġ/**", "Ċ", "Ġ*", "ĠDefinition", "Ġfor", "Ġsing", "ly", "-", "linked", "Ġlist", ".", "Ċ", "Ġ*", "Ġstruct", "ĠList", "Node", "Ġ{", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġval", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "next", ";", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "(", "int", "Ġx", ")", "Ġ:", "Ġval", "(", "x", "),", "Ġnext", "(", "NULL", ")", "Ġ{}", "Ċ", "Ġ*", "Ġ};", "Ċ", "Ġ*/", "Ċ", "class", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "*", "Ġrotate", "Right", "(", "List", "Node", "*", "Ġhead", ",", "Ġint", "Ġk", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "head", ")", "Ġreturn", "Ġnull", "ptr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġlist", "len", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "p", "Ġ=", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "tail", "Ġ=", "Ġp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "p", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġlist", "len", "++;", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtail", "Ġ=", "Ġp", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "Ġ=", "Ġp", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġk", "Ġ%", "=", "Ġlist", "len", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "k", "Ġ==", "Ġ0", ")", "Ġreturn", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "Ġ=", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġcounter", "Ġ=", "Ġlist", "len", "Ġ-", "Ġk", "Ġ-", "Ġ1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "counter", "--", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "Ġ=", "Ġp", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠList", "Node", "Ġ*", "ret", "Ġ=", "Ġp", "->", "next", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġp", "->", "next", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġtail", "->", "next", "Ġ=", "Ġhead", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġret", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};"], "dataflow_graph": [["head", 19, "comesFrom", ["head"], [6]], ["head", 21, "comesFrom", ["head"], [6]], ["head", 36, "comesFrom", ["head"], [6]], ["p", 9, "comesFrom", ["p"], [8]], ["p", 12, "comesFrom", ["p"], [8]], ["p", 14, "comesFrom", ["p"], [13]], ["p", 27, "comesFrom", ["p"], [26]], ["p", 30, "comesFrom", ["p"], [26]], ["p", 32, "comesFrom", ["p"], [26]], ["tail", 34, "comesFrom", ["tail"], [11]], ["listlen", 10, "comesFrom", ["listlen"], [4]], ["listlen", 17, "comesFrom", ["listlen"], [4]], ["listlen", 23, "comesFrom", ["listlen"], [4]], ["k", 18, "comesFrom", ["k"], [16]], ["k", 24, "comesFrom", ["k"], [16]], ["counter", 25, "comesFrom", ["counter"], [22]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::965", "code": "class Solution {\npublic:\n    string removeDuplicates(string S) {\n        string result;\n        for (char c : S) {\n            if (result.size() && c == result.back()) {\n                result.pop_back();\n            }\n            else {\n                result += c;\n            }\n        }\n\n        return result;\n    }\n};\n", "code_tokens": ["Ġclass", "ĠSolution", "Ġ{", "Ċ", "public", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġremove", "Du", "pl", "icates", "(", "string", "ĠS", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġstring", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "char", "Ġc", "Ġ:", "ĠS", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "result", ".", "size", "()", "Ġ&&", "Ġc", "Ġ==", "Ġresult", ".", "back", "())", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", ".", "pop", "_", "back", "();", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġresult", "Ġ+=", "Ġc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġresult", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "};", "Ċ"], "dataflow_graph": [["S", 4, "comesFrom", ["S"], [1]], ["result", 5, "comesFrom", ["result"], [2]], ["result", 8, "comesFrom", ["result"], [2]], ["result", 10, "comesFrom", ["result"], [2]], ["result", 14, "comesFrom", ["result"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::966", "code": "#include \"../src/utility.h\"\n#include \"../src/HDD/HardDrive.h\"\n\nvoid unittest(){\n    const size_t emptyOff = 0x80120;\n\n    HDD::HDD first(1,true);\n    first.init();\n\n    int data[1000];\n    for(int i = 0 ; i < 1000 ; ++i){\n        data[i] = i;\n    }\n    first.writeaddr(emptyOff,&data,4*1000);\n    int res;\n    first.readaddr(emptyOff + 4 *42,&res,4);\n    printf(\"%d\\n\",res);\n    first.readaddr(emptyOff + 4 *999,&res,4);\n    printf(\"%d\\n\",res);\n    res = 45;\n    first.writeaddr(emptyOff + 4 *537,&res,4);\n    first.readaddr(emptyOff + 4 *753,&res,4);\n    printf(\"%d\\n\",res);\n    first.readaddr(emptyOff + 4 *537,&res,4);\n    printf(\"%d\\n\",res);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "../", "src", "/", "ut", "ility", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "src", "/", "HD", "D", "/", "Hard", "Drive", ".", "h", "\"", "Ċ", "Ċ", "void", "Ġun", "itt", "est", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġconst", "Ġsize", "_", "t", "Ġempty", "Off", "Ġ=", "Ġ0", "x", "801", "20", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠHDD", "::", "HD", "D", "Ġfirst", "(", "1", ",", "true", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfirst", ".", "init", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġdata", "[", "1000", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "(", "int", "Ġi", "Ġ=", "Ġ0", "Ġ;", "Ġi", "Ġ<", "Ġ1000", "Ġ;", "Ġ++", "i", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdata", "[", "i", "]", "Ġ=", "Ġi", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfirst", ".", "write", "addr", "(", "empty", "Off", ",", "&", "data", ",", "4", "*", "1000", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġres", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfirst", ".", "read", "addr", "(", "empty", "Off", "Ġ+", "Ġ4", "Ġ*", "42", ",", "&", "res", ",", "4", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "res", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfirst", ".", "read", "addr", "(", "empty", "Off", "Ġ+", "Ġ4", "Ġ*", "999", ",", "&", "res", ",", "4", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "res", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġres", "Ġ=", "Ġ45", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfirst", ".", "write", "addr", "(", "empty", "Off", "Ġ+", "Ġ4", "Ġ*", "537", ",", "&", "res", ",", "4", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfirst", ".", "read", "addr", "(", "empty", "Off", "Ġ+", "Ġ4", "Ġ*", "753", ",", "&", "res", ",", "4", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "res", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfirst", ".", "read", "addr", "(", "empty", "Off", "Ġ+", "Ġ4", "Ġ*", "537", ",", "&", "res", ",", "4", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "d", "\\", "n", "\",", "res", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["first", 3, "comesFrom", ["first"], [2]], ["first", 12, "comesFrom", ["first"], [2]], ["first", 17, "comesFrom", ["first"], [2]], ["first", 23, "comesFrom", ["first"], [2]], ["first", 30, "comesFrom", ["first"], [2]], ["first", 34, "comesFrom", ["first"], [2]], ["first", 40, "comesFrom", ["first"], [2]], ["i", 7, "comesFrom", ["i"], [6]], ["i", 8, "comesFrom", ["i"], [6]], ["i", 10, "comesFrom", ["i"], [6]], ["i", 11, "comesFrom", ["i"], [6]], ["emptyOff", 14, "comesFrom", ["emptyOff"], [1]], ["emptyOff", 19, "comesFrom", ["emptyOff"], [1]], ["emptyOff", 25, "comesFrom", ["emptyOff"], [1]], ["emptyOff", 32, "comesFrom", ["emptyOff"], [1]], ["emptyOff", 36, "comesFrom", ["emptyOff"], [1]], ["emptyOff", 42, "comesFrom", ["emptyOff"], [1]], ["res", 20, "comesFrom", ["res"], [16]], ["res", 22, "comesFrom", ["res"], [16]], ["res", 26, "comesFrom", ["res"], [16]], ["res", 28, "comesFrom", ["res"], [16]], ["res", 33, "comesFrom", ["res"], [29]], ["res", 37, "comesFrom", ["res"], [29]], ["res", 39, "comesFrom", ["res"], [29]], ["res", 43, "comesFrom", ["res"], [29]], ["res", 45, "comesFrom", ["res"], [29]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::967", "code": "//==============================================================================================================\n//PlayGameState.cpp\n//by Albert Chen Oct-19-2015.\n//==============================================================================================================\n\n#include \"PlayGameState.hpp\"\n#include \"Engine\\Input\\InputSystem.hpp\"\n#include \"Engine/Core/Time.hpp\"\n#include \"Engine\\Renderer\\Text\\TextSystem.hpp\"\n\nGameStateRegistration PlayGameState::s_PlayGameStateRegistration(\"Play\", &PlayGameState::CreateGameState);\n\n//===========================================================================================================\n///----------------------------------------------------------------------------------------------------------\n///state\n\nvoid PlayGameState::Enter(){\n\tConsolePrintf(\"Entering Play State\");\n\t\n}\n\n//-----------------------------------------------------------------------------------------------------------\n\nvoid PlayGameState::Exit(){\n\tConsolePrintf(\"Exit Play State\");\n}\n\n//-----------------------------------------------------------------------------------------------------------\n\nvoid PlayGameState::ProcessInput(double deltaSeconds){\n\tUNUSED(deltaSeconds);\n\n\tIF_INPUT_SYSTEM_EXISTS{\n\t\tif (INPUT_IS_KEY_RELEASED(KEY_BACKSPACE) ){\n\n\t\t\tSetCurrentGameState(\"MainMenu\");\n\t\t}\n\t}\n}\n\n//-----------------------------------------------------------------------------------------------------------\n\nvoid PlayGameState::Update(double deltaSeconds){\n\tUNUSED(deltaSeconds);\n\n}\n\n//-----------------------------------------------------------------------------------------------------------\n\nvoid PlayGameState::Render(OpenGLRenderer* renderer){\n\tUNUSED(renderer);\n\n\tOUTPUT_COLOR_STRING_TO_SCREEN(\"===PLAY GAME===\\nPlay game stuff here\", renderer->GetDisplayWidth() * 0.05f, renderer->GetDisplayHeight() * 0.9f, Rgba::WHITE);\n}\n\n//===========================================================================================================", "code_tokens": ["Ġ//", "================================================================", "================================", "============", "==", "Ċ", "//", "Play", "Game", "State", ".", "cpp", "Ċ", "//", "by", "ĠAlbert", "ĠChen", "ĠOct", "-", "19", "-", "2015", ".", "Ċ", "//", "================================================================", "================================", "============", "==", "Ċ", "Ċ", "#", "include", "Ġ\"", "Play", "Game", "State", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Engine", "\\", "Input", "\\", "Input", "System", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Engine", "/", "Core", "/", "Time", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Engine", "\\", "R", "end", "erer", "\\", "Text", "\\", "Text", "System", ".", "h", "pp", "\"", "Ċ", "Ċ", "Game", "State", "Registration", "ĠPlay", "Game", "State", "::", "s", "_", "Play", "Game", "State", "Registration", "(\"", "Play", "\",", "Ġ&", "Play", "Game", "State", "::", "Create", "Game", "State", ");", "Ċ", "Ċ", "//", "================================================================", "================================", "========", "===", "Ċ", "///", "----------------------------------------------------------------", "--------------------------------", "----------", "Ċ", "///", "state", "Ċ", "Ċ", "void", "ĠPlay", "Game", "State", "::", "Enter", "(){", "Ċ", "ĉ", "Console", "Print", "f", "(\"", "Enter", "ing", "ĠPlay", "ĠState", "\");", "Ċ", "ĉ", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------------------------", "-----------", "Ċ", "Ċ", "void", "ĠPlay", "Game", "State", "::", "Exit", "(){", "Ċ", "ĉ", "Console", "Print", "f", "(\"", "Exit", "ĠPlay", "ĠState", "\");", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------------------------", "-----------", "Ċ", "Ċ", "void", "ĠPlay", "Game", "State", "::", "Process", "Input", "(", "double", "Ġdelta", "Second", "s", "){", "Ċ", "ĉ", "UN", "US", "ED", "(", "d", "elta", "Second", "s", ");", "ĊĊ", "ĉ", "IF", "_", "IN", "PUT", "_", "SY", "STEM", "_", "EX", "IS", "TS", "{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "IN", "PUT", "_", "IS", "_", "KEY", "_", "RE", "LE", "ASED", "(", "KEY", "_", "BACK", "SP", "ACE", ")", "Ġ)", "{", "ĊĊ", "ĉ", "ĉ", "ĉ", "Set", "Current", "Game", "State", "(\"", "Main", "Menu", "\");", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------------------------", "-----------", "Ċ", "Ċ", "void", "ĠPlay", "Game", "State", "::", "Update", "(", "double", "Ġdelta", "Second", "s", "){", "Ċ", "ĉ", "UN", "US", "ED", "(", "d", "elta", "Second", "s", ");", "Ċ", "Ċ", "}", "Ċ", "Ċ", "//", "----------------------------------------------------------------", "--------------------------------", "-----------", "Ċ", "Ċ", "void", "ĠPlay", "Game", "State", "::", "Render", "(", "Open", "GL", "R", "end", "erer", "*", "Ġrend", "erer", "){", "Ċ", "ĉ", "UN", "US", "ED", "(", "rend", "erer", ");", "ĊĊ", "ĉ", "OU", "TP", "UT", "_", "COLOR", "_", "STR", "ING", "_", "TO", "_", "SC", "RE", "EN", "(\"", "===", "PLAY", "ĠGAME", "===", "\\", "n", "Play", "Ġgame", "Ġstuff", "Ġhere", "\",", "Ġrend", "erer", "->", "Get", "Display", "Width", "()", "Ġ*", "Ġ0", ".", "05", "f", ",", "Ġrend", "erer", "->", "Get", "Display", "Height", "()", "Ġ*", "Ġ0", ".", "9", "f", ",", "ĠR", "g", "ba", "::", "WH", "ITE", ");", "Ċ", "}", "Ċ", "Ċ", "//", "================================================================", "================================", "========", "==="], "dataflow_graph": [["deltaSeconds", 9, "comesFrom", ["deltaSeconds"], [7]], ["deltaSeconds", 17, "comesFrom", ["deltaSeconds"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::968", "code": "#include <cstdlib>\n#include <iostream>\n#include \"Msg.h\"\n\n\n\nvoid Msg::error(std::string s) {\n\n\tstd::cout << \"Error: \" << s << std::endl;\n\tstd::cout << \"Exiting program\" << std::endl;\n\tstd::exit(1);\n}\n\nvoid Msg::warning(std::string s) {\n\n\tstd::cout << \"Warning: \" << s << std::endl;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "c", "std", "lib", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ\"", "Msg", ".", "h", "\"", "ĊĊ", "Ċ", "Ċ", "void", "ĠMs", "g", "::", "error", "(", "std", "::", "string", "Ġs", ")", "Ġ{", "ĊĊ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Error", ":", "Ġ\"", "Ġ<<", "Ġs", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Ex", "iting", "Ġprogram", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "ĉ", "std", "::", "exit", "(", "1", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠMs", "g", "::", "warning", "(", "std", "::", "string", "Ġs", ")", "Ġ{", "ĊĊ", "ĉ", "std", "::", "c", "out", "Ġ<<", "Ġ\"", "Warning", ":", "Ġ\"", "Ġ<<", "Ġs", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["s", 3, "comesFrom", ["s"], [1]], ["s", 11, "comesFrom", ["s"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::969", "code": "#pragma once\n#include <memory>\nnamespace akj{\n\tclass cVertexArrayObject;\n\tclass cArrayBuffer;\n\nclass cMovingVertex2D\n{\npublic:\n\tcMovingVertex2D()\n\t{\n\t\tmemset(this, 0, sizeof(this));\n\t\tmStartTime = -1.0f;\n\t}\n\tcMovingVertex2D(float x, float y, float u, float v )\n\t{\n\t\tmemset(this, 0, sizeof(this));\n\t\tmTexCoord[0]=u;\n\t\tmTexCoord[1]=v;\n\t\tmPosition[0]=x;\n\t\tmPosition[1]=y;\n\t\tmStartTime = -1.0f;\n\t}\n\t~cMovingVertex2D();\n\tstatic void BindToVAO(cVertexArrayObject& vao, cArrayBuffer& array_buffer);\n\tstatic int ByteStride();\n\n\tfloat mTexCoord[2];\n\tfloat mPosition[2];\n\tfloat mVelocity [2];\n\tfloat mAcceleration[2];\n\tfloat mStartTime;\n\tfloat mColor[3];\n};\n}\n\n", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "#", "include", "Ġ<", "memory", ">", "Ċ", "names", "pace", "Ġa", "kj", "{", "Ċ", "ĉ", "class", "Ġc", "Ver", "tex", "Array", "Object", ";", "Ċ", "ĉ", "class", "Ġc", "Array", "Buffer", ";", "Ċ", "Ċ", "class", "Ġc", "Moving", "Ver", "tex", "2", "D", "Ċ", "{", "Ċ", "public", ":", "Ċ", "ĉ", "c", "Moving", "Ver", "tex", "2", "D", "()", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "mem", "set", "(", "this", ",", "Ġ0", ",", "Ġsizeof", "(", "this", "));", "Ċ", "ĉ", "ĉ", "m", "Start", "Time", "Ġ=", "Ġ-", "1", ".", "0", "f", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "c", "Moving", "Ver", "tex", "2", "D", "(", "float", "Ġx", ",", "Ġfloat", "Ġy", ",", "Ġfloat", "Ġu", ",", "Ġfloat", "Ġv", "Ġ)", "Ċ", "ĉ", "{", "Ċ", "ĉ", "ĉ", "mem", "set", "(", "this", ",", "Ġ0", ",", "Ġsizeof", "(", "this", "));", "Ċ", "ĉ", "ĉ", "m", "Tex", "Co", "ord", "[", "0", "]=", "u", ";", "Ċ", "ĉ", "ĉ", "m", "Tex", "Co", "ord", "[", "1", "]=", "v", ";", "Ċ", "ĉ", "ĉ", "m", "Position", "[", "0", "]=", "x", ";", "Ċ", "ĉ", "ĉ", "m", "Position", "[", "1", "]=", "y", ";", "Ċ", "ĉ", "ĉ", "m", "Start", "Time", "Ġ=", "Ġ-", "1", ".", "0", "f", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "~", "c", "Moving", "Ver", "tex", "2", "D", "();", "Ċ", "ĉ", "static", "Ġvoid", "ĠBind", "To", "VA", "O", "(", "c", "Ver", "tex", "Array", "Object", "&", "Ġv", "ao", ",", "Ġc", "Array", "Buffer", "&", "Ġarray", "_", "buffer", ");", "Ċ", "ĉ", "static", "Ġint", "ĠByte", "St", "ride", "();", "ĊĊ", "ĉ", "float", "Ġm", "Tex", "Co", "ord", "[", "2", "];", "Ċ", "ĉ", "float", "Ġm", "Position", "[", "2", "];", "Ċ", "ĉ", "float", "Ġm", "Vel", "ocity", "Ġ[", "2", "];", "Ċ", "ĉ", "float", "Ġm", "Ac", "celer", "ation", "[", "2", "];", "Ċ", "ĉ", "float", "Ġm", "Start", "Time", ";", "Ċ", "ĉ", "float", "Ġm", "Color", "[", "3", "];", "Ċ", "};", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["u", 10, "comesFrom", ["u"], [6]], ["v", 12, "comesFrom", ["v"], [7]], ["x", 14, "comesFrom", ["x"], [4]], ["y", 16, "comesFrom", ["y"], [5]], ["mStartTime", 27, "comesFrom", ["mStartTime"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::970", "code": "#include \"typecheck.hh\"\n\n#include <vector>\nusing namespace std;\n\nBlockType::BlockType(vector<Type *> ps, vector<Type *> as, vector<Type *> rs) \n: parameters(ps), arguments(as), results(rs)\n{\n\n}\n\nconst std::vector <Type *> BlockType::args() const {\n\treturn arguments;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "type", "check", ".", "hh", "\"", "Ċ", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Block", "Type", "::", "Block", "Type", "(", "vector", "<", "Type", "Ġ*", ">", "Ġps", ",", "Ġvector", "<", "Type", "Ġ*", ">", "Ġas", ",", "Ġvector", "<", "Type", "Ġ*", ">", "Ġrs", ")", "Ġ", "Ċ", ":", "Ġparameters", "(", "ps", "),", "Ġarguments", "(", "as", "),", "Ġresults", "(", "rs", ")", "Ċ", "{", "Ċ", "Ċ", "}", "Ċ", "Ċ", "const", "Ġstd", "::", "vector", "Ġ<", "Type", "Ġ*", ">", "ĠBlock", "Type", "::", "args", "()", "Ġconst", "Ġ{", "Ċ", "ĉ", "return", "Ġarguments", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["ps", 6, "comesFrom", ["ps"], [2]], ["as", 8, "comesFrom", ["as"], [3]], ["rs", 10, "comesFrom", ["rs"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::971", "code": "/*----------------------------------------------------------------------------*/\n/* Copyright (c) FIRST 2011. All Rights Reserved.\t\t\t\t\t\t\t  */\n/* Open Source Software - may be modified and shared by FRC teams. The code   */\n/* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */\n/*----------------------------------------------------------------------------*/\n\n#include \"Commands/WaitUntilCommand.h\"\n#include \"DriverStation.h\"\n#include \"Timer.h\"\n\n/**\n * A {@link WaitCommand} will wait until a certain match time before finishing.\n * This will wait until the game clock reaches some value, then continue to the\n * next command.\n * @see CommandGroup\n */\nWaitUntilCommand::WaitUntilCommand(double time) :\n\tCommand(\"WaitUntilCommand\", time)\n{\n    m_time = time;\n}\n\nWaitUntilCommand::WaitUntilCommand(const char *name, double time) :\n\tCommand(name, time)\n{\n    m_time = time;\n}\n\nvoid WaitUntilCommand::Initialize()\n{\n}\n\nvoid WaitUntilCommand::Execute()\n{\n}\n\n/**\n * Check if we've reached the actual finish time.\n */\nbool WaitUntilCommand::IsFinished()\n{\n    return DriverStation::GetInstance()->GetMatchTime() >= m_time;\n}\n\nvoid WaitUntilCommand::End()\n{\n}\n\nvoid WaitUntilCommand::Interrupted()\n{\n}\n", "code_tokens": ["Ġ/*", "----------------------------------------------------------------", "------------", "*/", "Ċ", "/*", "ĠCopyright", "Ġ(", "c", ")", "ĠFIRST", "Ġ2011", ".", "ĠAll", "ĠRights", "ĠReserved", ".", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "ĉ", "Ġ", "Ġ*/", "Ċ", "/*", "ĠOpen", "ĠSource", "ĠSoftware", "Ġ-", "Ġmay", "Ġbe", "Ġmodified", "Ġand", "Ġshared", "Ġby", "ĠF", "RC", "Ġteams", ".", "ĠThe", "Ġcode", "Ġ", "Ġ", "Ġ*/", "Ċ", "/*", "Ġmust", "Ġbe", "Ġaccompanied", "Ġby", "Ġthe", "ĠFIRST", "ĠB", "SD", "Ġlicense", "Ġfile", "Ġin", "Ġ$(", "WIND", "_", "B", "ASE", ")/", "WP", "IL", "ib", ".", "Ġ", "Ġ*/", "Ċ", "/*", "----------------------------------------------------------------", "------------", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Comm", "ands", "/", "Wait", "Until", "Command", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Driver", "Station", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "Timer", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠA", "Ġ{", "@", "link", "ĠWait", "Command", "}", "Ġwill", "Ġwait", "Ġuntil", "Ġa", "Ġcertain", "Ġmatch", "Ġtime", "Ġbefore", "Ġfinishing", ".", "Ċ", "Ġ*", "ĠThis", "Ġwill", "Ġwait", "Ġuntil", "Ġthe", "Ġgame", "Ġclock", "Ġreaches", "Ġsome", "Ġvalue", ",", "Ġthen", "Ġcontinue", "Ġto", "Ġthe", "Ċ", "Ġ*", "Ġnext", "Ġcommand", ".", "Ċ", "Ġ*", "Ġ@", "see", "ĠCommand", "Group", "Ċ", "Ġ*/", "Ċ", "Wait", "Until", "Command", "::", "Wait", "Until", "Command", "(", "double", "Ġtime", ")", "Ġ:", "Ċ", "ĉ", "Command", "(\"", "Wait", "Until", "Command", "\",", "Ġtime", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "time", "Ġ=", "Ġtime", ";", "Ċ", "}", "Ċ", "Ċ", "Wait", "Until", "Command", "::", "Wait", "Until", "Command", "(", "const", "Ġchar", "Ġ*", "name", ",", "Ġdouble", "Ġtime", ")", "Ġ:", "Ċ", "ĉ", "Command", "(", "name", ",", "Ġtime", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "time", "Ġ=", "Ġtime", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWait", "Until", "Command", "::", "Initial", "ize", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWait", "Until", "Command", "::", "Exec", "ute", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠCheck", "Ġif", "Ġwe", "'ve", "Ġreached", "Ġthe", "Ġactual", "Ġfinish", "Ġtime", ".", "Ċ", "Ġ*/", "Ċ", "bool", "ĠWait", "Until", "Command", "::", "Is", "Fin", "ished", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠDriver", "Station", "::", "Get", "Instance", "()", "->", "Get", "Match", "Time", "()", "Ġ>=", "Ġm", "_", "time", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWait", "Until", "Command", "::", "End", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠWait", "Until", "Command", "::", "Inter", "rupted", "()", "Ċ", "{", "Ċ", "}", "Ċ"], "dataflow_graph": [["time", 3, "comesFrom", ["time"], [1]], ["time", 5, "comesFrom", ["time"], [1]], ["time", 11, "comesFrom", ["time"], [8]], ["time", 13, "comesFrom", ["time"], [8]], ["m_time", 19, "comesFrom", ["m_time"], [12]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::972", "code": "/******************************************************\n** Program: polarbear.cpp\n** Author: Jimwel Aguinaldo\n** Date: 05/06/2016\n** Description: Virtual zoo that houses tigers, polar bears, penguins\n** Input: Buy animals, name, disease choice, baby choice\n** Output: User info\n******************************************************/\n#include \"polarbear.h\"\n#include <iostream>\n\n/* Constructor */\n/*********************************************************************\n** Function: Polarbear::Polarbear()\n** Description: Default Constructor\n** Parameters: none\n** Pre-Conditions: none\n** Post-Conditions: none\n*********************************************************************/ \nPolarbear::Polarbear()\n{\n\tage = 3;\n\tavg_cost = 30.00;\n\tpayoff = 250.00;\n}\n\n/*********************************************************************\n** Function: Polarbear::Polarbear(int age)\n** Description: Non-Default Constructor\n** Parameters: int age\n** Pre-Conditions: none\n** Post-Conditions: none\n*********************************************************************/ \nPolarbear::Polarbear(int age)\n{\n\tthis -> age = age;\n\tavg_cost = 60.00;\n\tpayoff = 500.00;\n}\n\n/* Accessories */\n/*********************************************************************\n** Function: Polarbear::get_avg_cost()\n** Description: get member average cost\n** Parameters: none\n** Pre-Conditions: none\n** Post-Conditions: none\n*********************************************************************/ \nfloat Polarbear::get_avg_cost()\n{\n\treturn avg_cost;\n}\n\n/*********************************************************************\n** Function: Polarbear::get_payoff()\n** Description: get member payoff\n** Parameters: none\n** Pre-Conditions: none\n** Post-Conditions: none\n*********************************************************************/ \nfloat Polarbear::get_payoff()\n{\n\treturn payoff;\n}\n", "code_tokens": ["Ġ/", "********************************", "****************", "****", "**", "Ċ", "**", "ĠProgram", ":", "Ġpolar", "bear", ".", "cpp", "Ċ", "**", "ĠAuthor", ":", "ĠJim", "w", "el", "ĠAgu", "inal", "do", "Ċ", "**", "ĠDate", ":", "Ġ05", "/", "06", "/", "2016", "Ċ", "**", "ĠDescription", ":", "ĠVirtual", "Ġzoo", "Ġthat", "Ġhouses", "Ġtigers", ",", "Ġpolar", "Ġbears", ",", "Ġpengu", "ins", "Ċ", "**", "ĠInput", ":", "ĠBuy", "Ġanimals", ",", "Ġname", ",", "Ġdisease", "Ġchoice", ",", "Ġbaby", "Ġchoice", "Ċ", "**", "ĠOutput", ":", "ĠUser", "Ġinfo", "Ċ", "********************************", "****************", "****", "**", "/", "Ċ", "#", "include", "Ġ\"", "p", "olar", "bear", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "/*", "ĠConstruct", "or", "Ġ*/", "Ċ", "/", "********************************", "********************************", "*****", "Ċ", "**", "ĠFunction", ":", "ĠPolar", "bear", "::", "P", "olar", "bear", "()", "Ċ", "**", "ĠDescription", ":", "ĠDefault", "ĠConstruct", "or", "Ċ", "**", "ĠParameters", ":", "Ġnone", "Ċ", "**", "ĠPre", "-", "Cond", "itions", ":", "Ġnone", "Ċ", "**", "ĠPost", "-", "Cond", "itions", ":", "Ġnone", "Ċ", "********************************", "********************************", "****", "*/", "Ġ", "Ċ", "P", "olar", "bear", "::", "P", "olar", "bear", "()", "Ċ", "{", "Ċ", "ĉ", "age", "Ġ=", "Ġ3", ";", "Ċ", "ĉ", "av", "g", "_", "cost", "Ġ=", "Ġ30", ".", "00", ";", "Ċ", "ĉ", "pay", "off", "Ġ=", "Ġ250", ".", "00", ";", "Ċ", "}", "Ċ", "Ċ", "/", "********************************", "********************************", "*****", "Ċ", "**", "ĠFunction", ":", "ĠPolar", "bear", "::", "P", "olar", "bear", "(", "int", "Ġage", ")", "Ċ", "**", "ĠDescription", ":", "ĠNon", "-", "Default", "ĠConstruct", "or", "Ċ", "**", "ĠParameters", ":", "Ġint", "Ġage", "Ċ", "**", "ĠPre", "-", "Cond", "itions", ":", "Ġnone", "Ċ", "**", "ĠPost", "-", "Cond", "itions", ":", "Ġnone", "Ċ", "********************************", "********************************", "****", "*/", "Ġ", "Ċ", "P", "olar", "bear", "::", "P", "olar", "bear", "(", "int", "Ġage", ")", "Ċ", "{", "Ċ", "ĉ", "this", "Ġ->", "Ġage", "Ġ=", "Ġage", ";", "Ċ", "ĉ", "av", "g", "_", "cost", "Ġ=", "Ġ60", ".", "00", ";", "Ċ", "ĉ", "pay", "off", "Ġ=", "Ġ500", ".", "00", ";", "Ċ", "}", "Ċ", "Ċ", "/*", "ĠAccessories", "Ġ*/", "Ċ", "/", "********************************", "********************************", "*****", "Ċ", "**", "ĠFunction", ":", "ĠPolar", "bear", "::", "get", "_", "av", "g", "_", "cost", "()", "Ċ", "**", "ĠDescription", ":", "Ġget", "Ġmember", "Ġaverage", "Ġcost", "Ċ", "**", "ĠParameters", ":", "Ġnone", "Ċ", "**", "ĠPre", "-", "Cond", "itions", ":", "Ġnone", "Ċ", "**", "ĠPost", "-", "Cond", "itions", ":", "Ġnone", "Ċ", "********************************", "********************************", "****", "*/", "Ġ", "Ċ", "float", "ĠPolar", "bear", "::", "get", "_", "av", "g", "_", "cost", "()", "Ċ", "{", "Ċ", "ĉ", "return", "Ġavg", "_", "cost", ";", "Ċ", "}", "Ċ", "Ċ", "/", "********************************", "********************************", "*****", "Ċ", "**", "ĠFunction", ":", "ĠPolar", "bear", "::", "get", "_", "pay", "off", "()", "Ċ", "**", "ĠDescription", ":", "Ġget", "Ġmember", "Ġpayoff", "Ċ", "**", "ĠParameters", ":", "Ġnone", "Ċ", "**", "ĠPre", "-", "Cond", "itions", ":", "Ġnone", "Ċ", "**", "ĠPost", "-", "Cond", "itions", ":", "Ġnone", "Ċ", "********************************", "********************************", "****", "*/", "Ġ", "Ċ", "float", "ĠPolar", "bear", "::", "get", "_", "pay", "off", "()", "Ċ", "{", "Ċ", "ĉ", "return", "Ġpayoff", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["age", 6, "comesFrom", ["age"], [5]], ["age", 7, "comesFrom", ["age"], [5]], ["avg_cost", 11, "comesFrom", ["avg_cost"], [8]], ["payoff", 13, "comesFrom", ["payoff"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::973", "code": "#include \"mainwindow.h\"\n#include <QApplication>\n\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    MainWindow w;\n\n    QObject::connect(&a, SIGNAL(aboutToQuit()), &w, SLOT(on_action_Quit_triggered()));\n\n    w.show();\n\n    return a.exec();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "main", "window", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "Q", "Application", ">", "ĊĊ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "arg", "v", "[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠQ", "Application", "Ġa", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠMain", "Window", "Ġw", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "ĠQ", "Object", "::", "connect", "(&", "a", ",", "ĠSIGN", "AL", "(", "about", "To", "Qu", "it", "()", "),", "Ġ&", "w", ",", "ĠSL", "OT", "(", "on", "_", "action", "_", "Qu", "it", "_", "tr", "ig", "gered", "()", "));", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġw", ".", "show", "();", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġa", ".", "exec", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["w", 9, "comesFrom", ["w"], [4]], ["w", 12, "comesFrom", ["w"], [4]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::974", "code": "#include <iostream>\n\nusing namespace std;\n\n// Generally compiler will do this for you;\n// And generally compilers are more intelligent than for you (wrt: inlining)\n// So generally you don’t need to use the `inline` keyword “at all”.\ninline int min(int x, int y) {\n    return x > y ? y : x;\n}\n\nint main() {\n    cout << \"Hello, World!\" << endl;\n    return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "//", "ĠGenerally", "Ġcompiler", "Ġwill", "Ġdo", "Ġthis", "Ġfor", "Ġyou", ";", "Ċ", "//", "ĠAnd", "Ġgenerally", "Ġcomp", "ilers", "Ġare", "Ġmore", "Ġintelligent", "Ġthan", "Ġfor", "Ġyou", "Ġ(", "w", "rt", ":", "Ġin", "lining", ")", "Ċ", "//", "ĠSo", "Ġgenerally", "Ġyou", "Ġdon", "âĢ", "Ļ", "t", "Ġneed", "Ġto", "Ġuse", "Ġthe", "Ġ`", "inline", "`", "Ġkeyword", "ĠâĢ", "ľ", "at", "Ġall", "âĢ", "Ŀ", ".", "Ċ", "inline", "Ġint", "Ġmin", "(", "int", "Ġx", ",", "Ġint", "Ġy", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġx", "Ġ>", "Ġy", "Ġ?", "Ġy", "Ġ:", "Ġx", ";", "Ċ", "}", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġcout", "Ġ<<", "Ġ\"", "Hello", ",", "ĠWorld", "!\"", "Ġ<<", "Ġend", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["x", 4, "comesFrom", ["x"], [2]], ["x", 7, "comesFrom", ["x"], [2]], ["y", 5, "comesFrom", ["y"], [3]], ["y", 6, "comesFrom", ["y"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::975", "code": "#include <tbb/parallel_for.h>\n\nint main(int argc, char** argv){\n    \n  int nr = 10;\n  int v = 10;\n  int x[10];\n  int y[10];\n\n  if (nr >= 1){\n  if (v == 0){\n    tbb::parallel_for (0,nr-1 + 1,[&](int t1) {\n            y[t1] = 5;\n    } );\n  }  tbb::parallel_for (0,nr-1 + 1,[&](int t1) {\n    if (v >= 1){\n            x[t1] = 10;\n    }    if (v <= -1){\n            x[t1] = 10;\n    }  } );\n}  \n\n\n  return 0;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "t", "bb", "/", "par", "allel", "_", "for", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "**", "Ġarg", "v", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġint", "Ġn", "r", "Ġ=", "Ġ10", ";", "Ċ", "Ġ", "Ġint", "Ġv", "Ġ=", "Ġ10", ";", "Ċ", "Ġ", "Ġint", "Ġx", "[", "10", "];", "Ċ", "Ġ", "Ġint", "Ġy", "[", "10", "];", "ĊĊ", "Ġ", "Ġif", "Ġ(", "nr", "Ġ>=", "Ġ1", "){", "Ċ", "Ġ", "Ġif", "Ġ(", "v", "Ġ==", "Ġ0", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġt", "bb", "::", "par", "allel", "_", "for", "Ġ(", "0", ",", "nr", "-", "1", "Ġ+", "Ġ1", ",[", "&", "](", "int", "Ġt", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġy", "[", "t", "1", "]", "Ġ=", "Ġ5", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġ);", "Ċ", "Ġ", "Ġ}", "Ġ", "Ġt", "bb", "::", "par", "allel", "_", "for", "Ġ(", "0", ",", "nr", "-", "1", "Ġ+", "Ġ1", ",[", "&", "](", "int", "Ġt", "1", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "v", "Ġ>=", "Ġ1", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "[", "t", "1", "]", "Ġ=", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "v", "Ġ<=", "Ġ-", "1", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġx", "[", "t", "1", "]", "Ġ=", "Ġ10", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ġ", "Ġ}", "Ġ);", "Ċ", "}", "Ġ", "Ġ", "ĊĊ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["nr", 7, "comesFrom", ["nr"], [3]], ["nr", 10, "comesFrom", ["nr"], [3]], ["nr", 15, "comesFrom", ["nr"], [3]], ["v", 8, "comesFrom", ["v"], [4]], ["v", 17, "comesFrom", ["v"], [4]], ["v", 20, "comesFrom", ["v"], [4]], ["t1", 13, "comesFrom", ["t1"], [11]], ["t1", 19, "comesFrom", ["t1"], [16]], ["t1", 22, "comesFrom", ["t1"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::976", "code": "//http://codeforces.com/problemset/problem/792/B\n// still working on it \n#include <iostream>\nusing namespace std ; \nint main(){\nint n,k ; \ncin >> n >> k ; \nint a[k],o[k]; \nint leader = 1 ;\nfor(int i=0;i<k;i++){\ncin>>a[i]; \nwhile( a[i] >1 ){ \nif(leader==n){\nleader = 1 ;\n}\nleader++;\na[i]-- ; \n}\no[i] = leader++;  \nn--;}\nfor(int i=0;i<k;i++) \ncout << o[i] << \" \";\nreturn 0 ; \n}\n\n", "code_tokens": ["Ġ//", "http", "://", "cod", "ef", "or", "ces", ".", "com", "/", "pro", "blems", "et", "/", "problem", "/", "792", "/", "B", "Ċ", "//", "Ġstill", "Ġworking", "Ġon", "Ġit", "Ġ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "using", "Ġnamespace", "Ġstd", "Ġ;", "Ġ", "Ċ", "int", "Ġmain", "(){", "Ċ", "int", "Ġn", ",", "k", "Ġ;", "Ġ", "Ċ", "cin", "Ġ>>", "Ġn", "Ġ>>", "Ġk", "Ġ;", "Ġ", "Ċ", "int", "Ġa", "[", "k", "],", "o", "[", "k", "];", "Ġ", "Ċ", "int", "Ġleader", "Ġ=", "Ġ1", "Ġ;", "Ċ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "k", ";", "i", "++", "){", "Ċ", "cin", ">>", "a", "[", "i", "];", "Ġ", "Ċ", "while", "(", "Ġa", "[", "i", "]", "Ġ>", "1", "Ġ)", "{", "Ġ", "Ċ", "if", "(", "leader", "==", "n", "){", "Ċ", "leader", "Ġ=", "Ġ1", "Ġ;", "Ċ", "}", "Ċ", "leader", "++;", "Ċ", "a", "[", "i", "]", "--", "Ġ;", "Ġ", "Ċ", "}", "Ċ", "o", "[", "i", "]", "Ġ=", "Ġleader", "++;", "Ġ", "Ġ", "Ċ", "n", "--", ";}", "Ċ", "for", "(", "int", "Ġi", "=", "0", ";", "i", "<", "k", ";", "i", "++)", "Ġ", "Ċ", "c", "out", "Ġ<<", "Ġo", "[", "i", "]", "Ġ<<", "Ġ\"", "Ġ\"", ";", "Ċ", "return", "Ġ0", "Ġ;", "Ġ", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["n", 5, "comesFrom", ["n"], [2]], ["n", 22, "comesFrom", ["n"], [2]], ["n", 30, "comesFrom", ["n"], [2]], ["k", 6, "comesFrom", ["k"], [3]], ["k", 8, "comesFrom", ["k"], [3]], ["k", 10, "comesFrom", ["k"], [3]], ["k", 14, "comesFrom", ["k"], [3]], ["k", 33, "comesFrom", ["k"], [3]], ["i", 13, "comesFrom", ["i"], [12]], ["i", 15, "comesFrom", ["i"], [12]], ["i", 18, "comesFrom", ["i"], [12]], ["i", 20, "comesFrom", ["i"], [12]], ["i", 26, "comesFrom", ["i"], [12]], ["i", 28, "comesFrom", ["i"], [12]], ["i", 32, "comesFrom", ["i"], [31]], ["i", 34, "comesFrom", ["i"], [31]], ["i", 37, "comesFrom", ["i"], [31]], ["leader", 21, "comesFrom", ["leader"], [11]], ["leader", 24, "comesFrom", ["leader"], [23]], ["leader", 29, "comesFrom", ["leader"], [23]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::977", "code": "/*\n * NativeMNZ80.cpp - An example C++ implementation of Z80 processor,\n * attempted to optimize for clarity, not speed.\n * \n * (C) 2009, Mikko Nummelin <mikko.nummelin@tkk.fi>\n * \n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n#include \"NativeMNZ80.h\"\n\n/**\n * A singleton method to initialize processor instance\n */\nNativeMNZ80 *NativeMNZ80::getProcessor() {\n\tif(processorInstance==NULL) {\n\t\tprocessorInstance=new NativeMNZ80;\n\t}\n\treturn processorInstance;\n}\n\n/**\n * Fills registers with random numbers, sets halt state to FALSE and program\n * counter to zero.\n */\nvoid NativeMNZ80::reset() {\n\tsrand(time(NULL));\n\tfor(int i=0; i < REGS_COUNT; i++) {\n\t\tregs.single[i]=(rand()<<8)/RAND_MAX;\n\t}\n\tregs.single[IM_IFF]=0x00; // Halt state is included in bit 4\n\tregs.pair[PC]=0x0000;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠNative", "M", "NZ", "80", ".", "cpp", "Ġ-", "ĠAn", "Ġexample", "ĠC", "++", "Ġimplementation", "Ġof", "ĠZ", "80", "Ġprocessor", ",", "Ċ", "Ġ*", "Ġattempted", "Ġto", "Ġoptimize", "Ġfor", "Ġclarity", ",", "Ġnot", "Ġspeed", ".", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "Ġ(", "C", ")", "Ġ2009", ",", "ĠMik", "ko", "ĠN", "umm", "elin", "Ġ<", "m", "ik", "ko", ".", "n", "umm", "elin", "@", "t", "kk", ".", "fi", ">", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "Ġthis", "Ġprogram", ";", "Ġif", "Ġnot", ",", "Ġwrite", "Ġto", "Ġthe", "ĠFree", "ĠSoftware", "Ċ", "Ġ*", "ĠFoundation", ",", "ĠInc", ".,", "Ġ59", "ĠTemple", "ĠPlace", "Ġ-", "ĠSuite", "Ġ330", ",", "Ċ", "Ġ*", "ĠBoston", ",", "ĠMA", "Ġ02", "111", "-", "130", "7", ",", "ĠUSA", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Native", "M", "NZ", "80", ".", "h", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠA", "Ġsingle", "ton", "Ġmethod", "Ġto", "Ġinitialize", "Ġprocessor", "Ġinstance", "Ċ", "Ġ*/", "Ċ", "Native", "M", "NZ", "80", "Ġ*", "Native", "M", "NZ", "80", "::", "get", "Process", "or", "()", "Ġ{", "Ċ", "ĉ", "if", "(", "processor", "Instance", "==", "NULL", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "processor", "Instance", "=", "new", "ĠNative", "M", "NZ", "80", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "return", "Ġprocessor", "Instance", ";", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠF", "ills", "Ġregisters", "Ġwith", "Ġrandom", "Ġnumbers", ",", "Ġsets", "Ġhalt", "Ġstate", "Ġto", "ĠFALSE", "Ġand", "Ġprogram", "Ċ", "Ġ*", "Ġcounter", "Ġto", "Ġzero", ".", "Ċ", "Ġ*/", "Ċ", "void", "ĠNative", "M", "NZ", "80", "::", "reset", "()", "Ġ{", "Ċ", "ĉ", "s", "rand", "(", "time", "(", "NULL", "));", "Ċ", "ĉ", "for", "(", "int", "Ġi", "=", "0", ";", "Ġi", "Ġ<", "ĠRE", "GS", "_", "C", "OUNT", ";", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "reg", "s", ".", "single", "[", "i", "]", "=(", "rand", "()", "<<", "8", ")/", "R", "AND", "_", "MAX", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "reg", "s", ".", "single", "[", "IM", "_", "IFF", "]=", "0", "x", "00", ";", "Ġ//", "ĠH", "alt", "Ġstate", "Ġis", "Ġincluded", "Ġin", "Ġbit", "Ġ4", "Ċ", "ĉ", "reg", "s", ".", "pair", "[", "PC", "]=", "0", "x", "0000", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["processorInstance", 3, "comesFrom", ["processorInstance"], [2]], ["i", 8, "comesFrom", ["i"], [7]], ["i", 10, "comesFrom", ["i"], [7]], ["i", 13, "comesFrom", ["i"], [7]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::978", "code": "#include <gtest/gtest.h>\n#include <iostream>\n\ntypedef int64_t IntegerType;\n\n#include \"groebner/Feasible.h\"\n#include \"groebner/FeasibleStream.h\"\n#include \"groebner/LatticeBasis.h\"\n#include \"groebner/VectorArray.h\"\n#include \"groebner/VectorArrayStream.h\"\n#include \"groebner/GraverComputeState.h\"\n\nusing namespace _4ti2_;\n\nclass GraverComputeStateTest : public ::testing::Test {\nprotected:\n    virtual void SetUp() {\n\tv1 = new VectorArray(3,4,0);\n\t(*v1)[0][0] = 1;\n\t(*v1)[0][1] = 1;\n\t(*v1)[1][2] = 1;\n\t(*v1)[2][3] = 1;\n\n\t// content of A.mat\n\t// 1 4\n\t// 1 2 3 4\n\tFeasible* feasible = input_Feasible(\"A\");\n\tv2 = new VectorArray(0, 4);\n\tlattice_basis (feasible->get_matrix(), *v2);\n    }\n\n    // virtual void TearDown() {}\n    VectorArray *v1;\n    VectorArray *v2;\n};\n\nTEST_F(GraverComputeStateTest, create) {\n    GraverComputeState s (*v2);\n    // s.MakeGraverBasisWithZSolve();\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "g", "test", "/", "g", "test", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "ty", "ped", "ef", "Ġint", "64", "_", "t", "ĠInteger", "Type", ";", "Ċ", "Ċ", "#", "include", "Ġ\"", "gro", "eb", "ner", "/", "Fe", "as", "ible", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gro", "eb", "ner", "/", "Fe", "as", "ible", "Stream", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gro", "eb", "ner", "/", "L", "att", "ice", "Bas", "is", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gro", "eb", "ner", "/", "Vector", "Array", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gro", "eb", "ner", "/", "Vector", "Array", "Stream", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "gro", "eb", "ner", "/", "Gra", "ver", "Comp", "ute", "State", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġ_", "4", "ti", "2", "_", ";", "Ċ", "Ċ", "class", "ĠGra", "ver", "Comp", "ute", "State", "Test", "Ġ:", "Ġpublic", "Ġ::", "testing", "::", "Test", "Ġ{", "Ċ", "protected", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġvirtual", "Ġvoid", "ĠSet", "Up", "()", "Ġ{", "Ċ", "ĉ", "v", "1", "Ġ=", "Ġnew", "ĠVector", "Array", "(", "3", ",", "4", ",", "0", ");", "Ċ", "ĉ", "(*", "v", "1", ")[", "0", "][", "0", "]", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "(*", "v", "1", ")[", "0", "][", "1", "]", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "(*", "v", "1", ")[", "1", "][", "2", "]", "Ġ=", "Ġ1", ";", "Ċ", "ĉ", "(*", "v", "1", ")[", "2", "][", "3", "]", "Ġ=", "Ġ1", ";", "ĊĊ", "ĉ", "//", "Ġcontent", "Ġof", "ĠA", ".", "mat", "Ċ", "ĉ", "//", "Ġ1", "Ġ4", "Ċ", "ĉ", "//", "Ġ1", "Ġ2", "Ġ3", "Ġ4", "Ċ", "ĉ", "Fe", "as", "ible", "*", "Ġfeasible", "Ġ=", "Ġinput", "_", "Fe", "as", "ible", "(\"", "A", "\");", "Ċ", "ĉ", "v", "2", "Ġ=", "Ġnew", "ĠVector", "Array", "(", "0", ",", "Ġ4", ");", "Ċ", "ĉ", "l", "att", "ice", "_", "bas", "is", "Ġ(", "fe", "as", "ible", "->", "get", "_", "mat", "rix", "(),", "Ġ*", "v", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġvirtual", "Ġvoid", "ĠT", "ear", "Down", "()", "Ġ{}", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVector", "Array", "Ġ*", "v", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "ĠVector", "Array", "Ġ*", "v", "2", ";", "Ċ", "};", "Ċ", "Ċ", "T", "EST", "_", "F", "(", "Gra", "ver", "Comp", "ute", "State", "Test", ",", "Ġcreate", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠGra", "ver", "Comp", "ute", "State", "Ġs", "Ġ(*", "v", "2", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġs", ".", "Make", "Gra", "ver", "Bas", "is", "With", "Z", "S", "olve", "();", "Ċ", "}", "Ċ"], "dataflow_graph": [["v1", 3, "comesFrom", ["v1"], [2]], ["v1", 4, "comesFrom", ["v1"], [2]], ["v1", 5, "comesFrom", ["v1"], [2]], ["v1", 6, "comesFrom", ["v1"], [2]], ["v1", 14, "comesFrom", ["v1"], [2]], ["v2", 13, "comesFrom", ["v2"], [9]], ["v2", 15, "comesFrom", ["v2"], [9]], ["v2", 18, "comesFrom", ["v2"], [9]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::979", "code": "/* \n   File rangernoise.cc: ranger noise plugin demo for Stage\n   Author: Richard Vaughan\n   Date: 3 March 2008\n   CVS: $Id: rangernoise.cc,v 1.1 2008-03-04 02:09:56 rtv Exp $\n*/\n\n#include \"stage.hh\"\nusing namespace Stg;\n\nconst double DEVIATION = 0.05;\n\ndouble simple_normal_deviate( double mean, double stddev )\n{\n  double x = 0.0;\n  \n  for( int i=0; i<12; i++ )\n    x += rand()/(RAND_MAX+1.0);\n  \n  return ( stddev * (x - 6.0) + mean );  \n}\n\n// process the ranger data\nint RangerUpdate( ModelRanger* mod, void* dummy )\n{\n  // get the data\n  uint32_t sample_count=0;\n  \n\tstd::vector<meters_t>& scan = mod->GetRangesMutable();\n\t\n  if( scan.size()>0 )\n    FOR_EACH( it, scan )\n      *it *= simple_normal_deviate( 1.0, DEVIATION );\n  \n  return 0; // run again\n}\n\n// Stage calls this when the model starts up. we just add a callback to\n// the model that gets called just after the sensor update is done.\nextern \"C\" int Init( Model* mod )\n{\n\tmod->AddCallback( Model::CB_UPDATE, (model_callback_t)RangerUpdate, NULL );\n\t\n  // add this so we can see the effects immediately, without needing\n  // anyone else to subscribe to the ranger\n  mod->Subscribe();\n\n  return 0; // ok\n}\n\n", "code_tokens": ["Ġ/*", "Ġ", "Ċ", "Ġ", "Ġ", "ĠFile", "Ġrang", "erno", "ise", ".", "cc", ":", "Ġranger", "Ġnoise", "Ġplugin", "Ġdemo", "Ġfor", "ĠStage", "Ċ", "Ġ", "Ġ", "ĠAuthor", ":", "ĠRichard", "ĠVaughan", "Ċ", "Ġ", "Ġ", "ĠDate", ":", "Ġ3", "ĠMarch", "Ġ2008", "Ċ", "Ġ", "Ġ", "ĠC", "VS", ":", "Ġ$", "Id", ":", "Ġrang", "erno", "ise", ".", "cc", ",", "v", "Ġ1", ".", "1", "Ġ2008", "-", "03", "-", "04", "Ġ02", ":", "09", ":", "56", "Ġr", "tv", "ĠExp", "Ġ$", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "stage", ".", "hh", "\"", "Ċ", "using", "Ġnamespace", "ĠSt", "g", ";", "Ċ", "Ċ", "const", "Ġdouble", "ĠDE", "VI", "ATION", "Ġ=", "Ġ0", ".", "05", ";", "Ċ", "Ċ", "double", "Ġsimple", "_", "normal", "_", "dev", "iate", "(", "Ġdouble", "Ġmean", ",", "Ġdouble", "Ġst", "dd", "ev", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġdouble", "Ġx", "Ġ=", "Ġ0", ".", "0", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġfor", "(", "Ġint", "Ġi", "=", "0", ";", "Ġi", "<", "12", ";", "Ġi", "++", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġx", "Ġ+=", "Ġrand", "()", "/(", "R", "AND", "_", "MAX", "+", "1", ".", "0", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġ(", "Ġst", "dd", "ev", "Ġ*", "Ġ(", "x", "Ġ-", "Ġ6", ".", "0", ")", "Ġ+", "Ġmean", "Ġ);", "Ġ", "Ġ", "Ċ", "}", "Ċ", "Ċ", "//", "Ġprocess", "Ġthe", "Ġranger", "Ġdata", "Ċ", "int", "ĠRanger", "Update", "(", "ĠModel", "R", "anger", "*", "Ġmod", ",", "Ġvoid", "*", "Ġdummy", "Ġ)", "Ċ", "{", "Ċ", "Ġ", "Ġ//", "Ġget", "Ġthe", "Ġdata", "Ċ", "Ġ", "Ġuint", "32", "_", "t", "Ġsample", "_", "count", "=", "0", ";", "Ċ", "Ġ", "Ġ", "Ċ", "ĉ", "std", "::", "vector", "<", "met", "ers", "_", "t", ">", "&", "Ġscan", "Ġ=", "Ġmod", "->", "Get", "R", "anges", "M", "utable", "();", "Ċ", "ĉ", "Ċ", "Ġ", "Ġif", "(", "Ġscan", ".", "size", "()", ">", "0", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "ĠFOR", "_", "E", "ACH", "(", "Ġit", ",", "Ġscan", "Ġ)", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ*", "it", "Ġ*", "=", "Ġsimple", "_", "normal", "_", "dev", "iate", "(", "Ġ1", ".", "0", ",", "ĠDE", "VI", "ATION", "Ġ);", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ġ//", "Ġrun", "Ġagain", "Ċ", "}", "Ċ", "Ċ", "//", "ĠStage", "Ġcalls", "Ġthis", "Ġwhen", "Ġthe", "Ġmodel", "Ġstarts", "Ġup", ".", "Ġwe", "Ġjust", "Ġadd", "Ġa", "Ġcallback", "Ġto", "Ċ", "//", "Ġthe", "Ġmodel", "Ġthat", "Ġgets", "Ġcalled", "Ġjust", "Ġafter", "Ġthe", "Ġsensor", "Ġupdate", "Ġis", "Ġdone", ".", "Ċ", "ex", "tern", "Ġ\"", "C", "\"", "Ġint", "ĠInit", "(", "ĠModel", "*", "Ġmod", "Ġ)", "Ċ", "{", "Ċ", "ĉ", "mod", "->", "Add", "Callback", "(", "ĠModel", "::", "CB", "_", "UPDATE", ",", "Ġ(", "model", "_", "callback", "_", "t", ")", "R", "anger", "Update", ",", "ĠNULL", "Ġ);", "Ċ", "ĉ", "Ċ", "Ġ", "Ġ//", "Ġadd", "Ġthis", "Ġso", "Ġwe", "Ġcan", "Ġsee", "Ġthe", "Ġeffects", "Ġimmediately", ",", "Ġwithout", "Ġneeding", "Ċ", "Ġ", "Ġ//", "Ġanyone", "Ġelse", "Ġto", "Ġsubscribe", "Ġto", "Ġthe", "Ġranger", "Ċ", "Ġ", "Ġmod", "->", "Subscribe", "();", "ĊĊ", "Ġ", "Ġreturn", "Ġ0", ";", "Ġ//", "Ġok", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["i", 7, "comesFrom", ["i"], [6]], ["i", 8, "comesFrom", ["i"], [6]], ["stddev", 12, "comesFrom", ["stddev"], [4]], ["x", 13, "comesFrom", ["x"], [9]], ["mean", 14, "comesFrom", ["mean"], [3]], ["DEVIATION", 29, "comesFrom", ["DEVIATION"], [1]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::980", "code": "#pragma once\nusing namespace std;\n#include <string>\n#include <unordered_map>\n#include <iostream>\n\nclass IsomorphicStr {\npublic:\n\tbool isIsomorphic(string s, string t) {\n\t\tif (s.length() != t.length()) return false;\n\t\tint len = s.length();\n\t\tunordered_map<char, int> hashtbl1, hashtbl2;\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tpair<char, int> p1(s[i], t[i]), p2(t[i],s[i]);\n\t\t\tif (!hashtbl1.insert(p1).second) {\n\t\t\t\tif (hashtbl1.at(s[i]) != t[i]) return false;\n\t\t\t}\n\t\t\telse if (!hashtbl2.insert(p2).second) {\n\t\t\t\tif (hashtbl2.at(t[i]) != s[i]) return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tvoid testResult() {\n\t\tstring c1 = \"ab\", c2 = \"aa\";\n\t\tisIsomorphic(c1, c2);\n\t}\n};", "code_tokens": ["Ġ#", "pr", "ag", "ma", "Ġonce", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "#", "include", "Ġ<", "string", ">", "Ċ", "#", "include", "Ġ<", "un", "ordered", "_", "map", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "class", "ĠIs", "omorphic", "Str", "Ġ{", "Ċ", "public", ":", "Ċ", "ĉ", "bool", "Ġis", "Is", "omorphic", "(", "string", "Ġs", ",", "Ġstring", "Ġt", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "s", ".", "length", "()", "Ġ!=", "Ġt", ".", "length", "())", "Ġreturn", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "int", "Ġlen", "Ġ=", "Ġs", ".", "length", "();", "Ċ", "ĉ", "ĉ", "un", "ordered", "_", "map", "<", "char", ",", "Ġint", ">", "Ġhasht", "bl", "1", ",", "Ġhasht", "bl", "2", ";", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "int", "Ġi", "Ġ=", "Ġ0", ";", "Ġi", "Ġ<", "Ġs", ".", "length", "();", "Ġi", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "pair", "<", "char", ",", "Ġint", ">", "Ġp", "1", "(", "s", "[", "i", "],", "Ġt", "[", "i", "]),", "Ġp", "2", "(", "t", "[", "i", "],", "s", "[", "i", "]);", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ(!", "hash", "t", "bl", "1", ".", "insert", "(", "p", "1", ").", "second", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "hash", "t", "bl", "1", ".", "at", "(", "s", "[", "i", "])", "Ġ!=", "Ġt", "[", "i", "])", "Ġreturn", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "ĉ", "else", "Ġif", "Ġ(!", "hash", "t", "bl", "2", ".", "insert", "(", "p", "2", ").", "second", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "if", "Ġ(", "hash", "t", "bl", "2", ".", "at", "(", "t", "[", "i", "])", "Ġ!=", "Ġs", "[", "i", "])", "Ġreturn", "Ġfalse", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "return", "Ġtrue", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "void", "Ġtest", "Result", "()", "Ġ{", "Ċ", "ĉ", "ĉ", "string", "Ġc", "1", "Ġ=", "Ġ\"", "ab", "\",", "Ġc", "2", "Ġ=", "Ġ\"", "aa", "\";", "Ċ", "ĉ", "ĉ", "is", "Is", "omorphic", "(", "c", "1", ",", "Ġc", "2", ");", "Ċ", "ĉ", "}", "Ċ", "};"], "dataflow_graph": [["s", 4, "comesFrom", ["s"], [2]], ["s", 9, "comesFrom", ["s"], [2]], ["s", 15, "comesFrom", ["s"], [2]], ["s", 30, "comesFrom", ["s"], [2]], ["s", 42, "comesFrom", ["s"], [2]], ["t", 6, "comesFrom", ["t"], [3]], ["t", 32, "comesFrom", ["t"], [3]], ["t", 40, "comesFrom", ["t"], [3]], ["i", 14, "comesFrom", ["i"], [13]], ["i", 17, "comesFrom", ["i"], [13]], ["i", 19, "comesFrom", ["i"], [13]], ["i", 20, "comesFrom", ["i"], [13]], ["i", 22, "comesFrom", ["i"], [13]], ["i", 23, "comesFrom", ["i"], [13]], ["i", 31, "comesFrom", ["i"], [13]], ["i", 33, "comesFrom", ["i"], [13]], ["i", 41, "comesFrom", ["i"], [13]], ["i", 43, "comesFrom", ["i"], [13]], ["hashtbl1", 24, "comesFrom", ["hashtbl1"], [11]], ["hashtbl1", 28, "comesFrom", ["hashtbl1"], [11]], ["hashtbl2", 34, "comesFrom", ["hashtbl2"], [12]], ["hashtbl2", 38, "comesFrom", ["hashtbl2"], [12]], ["c1", 48, "comesFrom", ["c1"], [45]], ["c2", 49, "comesFrom", ["c2"], [46]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::981", "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (){\n    int op1,\n        op2;\n\n    //Entrada de bloque de datos.\n    printf(\"Operando 1: \");\n    scanf(\" %i\", &op1);\n\n    printf(\"Operando 2: \");\n    scanf(\" %i\", &op2);\n\n    //Procesado\n    //Salida de datos\n    printf(\"%i + %i = %i\\n\", op1, op2, op1 + op2);\n\n    return EXIT_SUCCESS;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ<", "std", "io", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "std", "lib", ".", "h", ">", "Ċ", "Ċ", "int", "Ġmain", "Ġ()", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġop", "1", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġop", "2", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ent", "r", "ada", "Ġde", "Ġblo", "que", "Ġde", "Ġdat", "os", ".", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Oper", "ando", "Ġ1", ":", "Ġ\"", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "Ġ%", "i", "\",", "Ġ&", "op", "1", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "Oper", "ando", "Ġ2", ":", "Ġ\"", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscan", "f", "(\"", "Ġ%", "i", "\",", "Ġ&", "op", "2", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ//", "Pro", "ces", "ado", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Sal", "ida", "Ġde", "Ġdat", "os", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprintf", "(\"", "%", "i", "Ġ+", "Ġ%", "i", "Ġ=", "Ġ%", "i", "\\", "n", "\",", "Ġop", "1", ",", "Ġop", "2", ",", "Ġop", "1", "Ġ+", "Ġop", "2", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "ĠEX", "IT", "_", "SU", "CC", "ESS", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["op1", 5, "comesFrom", ["op1"], [1]], ["op1", 10, "comesFrom", ["op1"], [1]], ["op1", 12, "comesFrom", ["op1"], [1]], ["op2", 8, "comesFrom", ["op2"], [2]], ["op2", 11, "comesFrom", ["op2"], [2]], ["op2", 13, "comesFrom", ["op2"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::982", "code": "#include \"Prediction.hpp\"\n\nusing namespace std;\n\nPrediction::Prediction(User u, Movie m, double pred) {\n\tthis->u = u;\n\tthis->m = m;\n\tthis->prediction = pred;\n}\n\nUser Prediction::getUser() {\n\treturn u;\n}\n\t\nMovie Prediction::getMovie() {\n\treturn m;\n}\n\t\ndouble Prediction::getPrediction() {\n\treturn prediction;\n}\n\nvoid Prediction::setPrediction(double prediction) {\n\tthis->prediction = prediction;\n}\n\nvoid savePrediction(list<Prediction> &predictions) {\n\tFILE *output;\n\n\toutput = fopen(\"submission.csv\", \"w\");\n\tfprintf(output, \"UserId:ItemId,Prediction\\n\");\n\n\tfor(list<Prediction>::iterator it_pred = predictions.begin(); it_pred != predictions.end(); it_pred++) {\n\t\tfprintf(output, \"u%d:i%d,%f\\n\", it_pred->getUser().getId(), it_pred->getMovie().getId(), it_pred->getPrediction());\n\t}\n\n\tfclose(output);\n\n\t// printf(\"UserId:ItemId,Prediction\\n\");\n\t// for(list<Prediction>::iterator it_pred = predictions.begin(); it_pred != predictions.end(); it_pred++) {\n\t// \tprintf(\"u%d:i%d,%f\\n\", it_pred->getUser().getId(), it_pred->getMovie().getId(), it_pred->getPrediction());\n\t// }\n}", "code_tokens": ["Ġ#", "include", "Ġ\"", "Pred", "iction", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Pred", "iction", "::", "Pred", "iction", "(", "User", "Ġu", ",", "ĠMovie", "Ġm", ",", "Ġdouble", "Ġpred", ")", "Ġ{", "Ċ", "ĉ", "this", "->", "u", "Ġ=", "Ġu", ";", "Ċ", "ĉ", "this", "->", "m", "Ġ=", "Ġm", ";", "Ċ", "ĉ", "this", "->", "pred", "iction", "Ġ=", "Ġpred", ";", "Ċ", "}", "Ċ", "Ċ", "User", "ĠPrediction", "::", "get", "User", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġu", ";", "Ċ", "}", "Ċ", "ĉ", "Ċ", "Movie", "ĠPrediction", "::", "get", "Movie", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġm", ";", "Ċ", "}", "Ċ", "ĉ", "Ċ", "double", "ĠPrediction", "::", "get", "Pred", "iction", "()", "Ġ{", "Ċ", "ĉ", "return", "Ġprediction", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠPrediction", "::", "set", "Pred", "iction", "(", "double", "Ġprediction", ")", "Ġ{", "Ċ", "ĉ", "this", "->", "pred", "iction", "Ġ=", "Ġprediction", ";", "Ċ", "}", "Ċ", "Ċ", "void", "Ġsave", "Pred", "iction", "(", "list", "<", "Pred", "iction", ">", "Ġ&", "pred", "ictions", ")", "Ġ{", "Ċ", "ĉ", "FILE", "Ġ*", "output", ";", "ĊĊ", "ĉ", "output", "Ġ=", "Ġf", "open", "(\"", "sub", "mission", ".", "csv", "\",", "Ġ\"", "w", "\");", "Ċ", "ĉ", "f", "printf", "(", "output", ",", "Ġ\"", "User", "Id", ":", "Item", "Id", ",", "Pred", "iction", "\\", "n", "\");", "ĊĊ", "ĉ", "for", "(", "list", "<", "Pred", "iction", ">", "::", "iterator", "Ġit", "_", "pred", "Ġ=", "Ġpredictions", ".", "begin", "();", "Ġit", "_", "pred", "Ġ!=", "Ġpredictions", ".", "end", "();", "Ġit", "_", "pred", "++)", "Ġ{", "Ċ", "ĉ", "ĉ", "f", "printf", "(", "output", ",", "Ġ\"", "u", "%", "d", ":", "i", "%", "d", ",", "%", "f", "\\", "n", "\",", "Ġit", "_", "pred", "->", "get", "User", "().", "get", "Id", "(),", "Ġit", "_", "pred", "->", "get", "Movie", "().", "get", "Id", "(),", "Ġit", "_", "pred", "->", "get", "Pred", "iction", "());", "Ċ", "ĉ", "}", "ĊĊ", "ĉ", "f", "close", "(", "output", ");", "ĊĊ", "ĉ", "//", "Ġprintf", "(\"", "User", "Id", ":", "Item", "Id", ",", "Pred", "iction", "\\", "n", "\");", "Ċ", "ĉ", "//", "Ġfor", "(", "list", "<", "Pred", "iction", ">", "::", "iterator", "Ġit", "_", "pred", "Ġ=", "Ġpredictions", ".", "begin", "();", "Ġit", "_", "pred", "Ġ!=", "Ġpredictions", ".", "end", "();", "Ġit", "_", "pred", "++)", "Ġ{", "Ċ", "ĉ", "//", "Ġ", "ĉ", "printf", "(\"", "u", "%", "d", ":", "i", "%", "d", ",", "%", "f", "\\", "n", "\",", "Ġit", "_", "pred", "->", "get", "User", "().", "get", "Id", "(),", "Ġit", "_", "pred", "->", "get", "Movie", "().", "get", "Id", "(),", "Ġit", "_", "pred", "->", "get", "Pred", "iction", "());", "Ċ", "ĉ", "//", "Ġ}", "Ċ", "}"], "dataflow_graph": [["u", 5, "comesFrom", ["u"], [2]], ["u", 6, "comesFrom", ["u"], [2]], ["u", 12, "comesFrom", ["u"], [2]], ["m", 7, "comesFrom", ["m"], [3]], ["m", 8, "comesFrom", ["m"], [3]], ["m", 14, "comesFrom", ["m"], [3]], ["prediction", 19, "comesFrom", ["prediction"], [18]], ["prediction", 20, "comesFrom", ["prediction"], [18]], ["pred", 10, "comesFrom", ["pred"], [4]], ["output", 27, "comesFrom", ["output"], [24]], ["output", 36, "comesFrom", ["output"], [24]], ["output", 46, "comesFrom", ["output"], [24]], ["it_pred", 31, "comesFrom", ["it_pred"], [28]], ["it_pred", 34, "comesFrom", ["it_pred"], [28]], ["it_pred", 37, "comesFrom", ["it_pred"], [28]], ["it_pred", 40, "comesFrom", ["it_pred"], [28]], ["it_pred", 43, "comesFrom", ["it_pred"], [28]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::983", "code": "#include \"help.h\"\n\nusing namespace std;\n\nHelpCommand::HelpCommand() :\n\t\tDaemonCommand(\"help\", \"help <command>\", \"Show <command> help notice, if command is unspecified or inexistent show all commands.\") {\n}\n\nvoid HelpCommand::exec(Daemon *app, const char *args) {\n\tostringstream ost;\n\tlist<DaemonCommand*>::const_iterator it;\n\tconst list<DaemonCommand*> &l = app->getCommandList();\n\tif (args){\n\t\tfor (it = l.begin(); it != l.end(); ++it) {\n\t\t\tif ((*it)->matches(args)){\n\t\t\t\tost << (*it)->getHelp();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (it==l.end()) args=NULL;\n\t}\n\t\n\tif (args==NULL){\n\t\tfor (it = l.begin(); it != l.end(); ++it) {\n\t\t\tost << (*it)->getProto() << endl;\n\t\t}\n\t}\n\tResponse resp;\n\tresp.setBody(ost.str().c_str());\n\tapp->sendResponse(resp);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "help", ".", "h", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "Help", "Command", "::", "Help", "Command", "()", "Ġ:", "Ċ", "ĉ", "ĉ", "Da", "emon", "Command", "(\"", "help", "\",", "Ġ\"", "help", "Ġ<", "command", ">", "\",", "Ġ\"", "Show", "Ġ<", "command", ">", "Ġhelp", "Ġnotice", ",", "Ġif", "Ġcommand", "Ġis", "Ġunspecified", "Ġor", "Ġinex", "istent", "Ġshow", "Ġall", "Ġcommands", ".\")", "Ġ{", "Ċ", "}", "Ċ", "Ċ", "void", "ĠHelp", "Command", "::", "exec", "(", "Da", "emon", "Ġ*", "app", ",", "Ġconst", "Ġchar", "Ġ*", "args", ")", "Ġ{", "Ċ", "ĉ", "ost", "ring", "stream", "Ġost", ";", "Ċ", "ĉ", "list", "<", "Da", "emon", "Command", "*", ">", "::", "const", "_", "iterator", "Ġit", ";", "Ċ", "ĉ", "const", "Ġlist", "<", "Da", "emon", "Command", "*", ">", "Ġ&", "l", "Ġ=", "Ġapp", "->", "get", "Command", "List", "();", "Ċ", "ĉ", "if", "Ġ(", "args", "){", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "it", "Ġ=", "Ġl", ".", "begin", "();", "Ġit", "Ġ!=", "Ġl", ".", "end", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "if", "Ġ((", "*", "it", ")", "->", "mat", "ches", "(", "args", "))", "{", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "ost", "Ġ<<", "Ġ(*", "it", ")", "->", "get", "Help", "();", "Ċ", "ĉ", "ĉ", "ĉ", "ĉ", "break", ";", "Ċ", "ĉ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "ĉ", "if", "Ġ(", "it", "==", "l", ".", "end", "())", "Ġargs", "=", "NULL", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Ċ", "ĉ", "if", "Ġ(", "args", "==", "NULL", "){", "Ċ", "ĉ", "ĉ", "for", "Ġ(", "it", "Ġ=", "Ġl", ".", "begin", "();", "Ġit", "Ġ!=", "Ġl", ".", "end", "();", "Ġ++", "it", ")", "Ġ{", "Ċ", "ĉ", "ĉ", "ĉ", "ost", "Ġ<<", "Ġ(*", "it", ")", "->", "get", "Pro", "to", "()", "Ġ<<", "Ġend", "l", ";", "Ċ", "ĉ", "ĉ", "}", "Ċ", "ĉ", "}", "Ċ", "ĉ", "Response", "Ġresp", ";", "Ċ", "ĉ", "resp", ".", "set", "Body", "(", "ost", ".", "str", "().", "c", "_", "str", "());", "Ċ", "ĉ", "app", "->", "send", "Response", "(", "resp", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["args", 29, "comesFrom", ["args"], [28]], ["it", 15, "comesFrom", ["it"], [12]], ["it", 18, "comesFrom", ["it"], [12]], ["it", 19, "comesFrom", ["it"], [12]], ["it", 23, "comesFrom", ["it"], [12]], ["it", 25, "comesFrom", ["it"], [12]], ["it", 33, "comesFrom", ["it"], [30]], ["it", 36, "comesFrom", ["it"], [30]], ["it", 38, "comesFrom", ["it"], [30]], ["ost", 22, "comesFrom", ["ost"], [6]], ["ost", 37, "comesFrom", ["ost"], [6]], ["ost", 44, "comesFrom", ["ost"], [6]], ["resp", 42, "comesFrom", ["resp"], [41]], ["resp", 49, "comesFrom", ["resp"], [41]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::984", "code": "/***\n * wisent - LALR(1) Parser Generator\n * Copyright (C) 2004,2005 Thomas B. Preußer <preusser@ite.inf.tu-dresden.de>\n * \n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\n\n#include \"Blocks.hpp\"\n\nusing namespace wisent;\n\nBlocks::Blocks() {}\nBlocks::~Blocks() {}\n\nvoid Blocks::add(Kind kind, Block const& block) {\n  blocks[kind] = block;\n}\nBlock const& Blocks::get(Kind kind) const throw (NoEntryException) {\n  Block const *res = find(kind);\n  if(res == 0)  throw NoEntryException(__FILE__, __LINE__, \"Blocks\");\n  return *res;\n}\n\nBlock const *Blocks::find(Kind kind) const {\n  BlockMap::const_iterator  it = blocks.find(kind);\n  return (it == blocks.end())? 0 : &it->second;\n}\n", "code_tokens": ["Ġ/", "***", "Ċ", "Ġ*", "Ġw", "is", "ent", "Ġ-", "ĠL", "AL", "R", "(", "1", ")", "ĠPars", "er", "ĠGenerator", "Ċ", "Ġ*", "ĠCopyright", "Ġ(", "C", ")", "Ġ2004", ",", "2005", "ĠThomas", "ĠB", ".", "ĠPre", "u", "ÃŁ", "er", "Ġ<", "pre", "uss", "er", "@", "ite", ".", "inf", ".", "tu", "-", "d", "res", "den", ".", "de", ">", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "Ġ*", "Ġmodify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġas", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ2", "Ċ", "Ġ*", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ġ", "Ċ", "Ġ*", "ĠThis", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "Blocks", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġw", "is", "ent", ";", "Ċ", "Ċ", "Blocks", "::", "Blocks", "()", "Ġ{}", "Ċ", "Blocks", "::", "~", "Blocks", "()", "Ġ{}", "Ċ", "Ċ", "void", "ĠBlocks", "::", "add", "(", "Kind", "Ġkind", ",", "ĠBlock", "Ġconst", "&", "Ġblock", ")", "Ġ{", "Ċ", "Ġ", "Ġblocks", "[", "kind", "]", "Ġ=", "Ġblock", ";", "Ċ", "}", "Ċ", "Block", "Ġconst", "&", "ĠBlocks", "::", "get", "(", "Kind", "Ġkind", ")", "Ġconst", "Ġthrow", "Ġ(", "No", "Entry", "Exception", ")", "Ġ{", "Ċ", "Ġ", "ĠBlock", "Ġconst", "Ġ*", "res", "Ġ=", "Ġfind", "(", "kind", ");", "Ċ", "Ġ", "Ġif", "(", "res", "Ġ==", "Ġ0", ")", "Ġ", "Ġthrow", "ĠNo", "Entry", "Exception", "(", "__", "FILE", "__", ",", "Ġ__", "LINE", "__", ",", "Ġ\"", "Blocks", "\");", "Ċ", "Ġ", "Ġreturn", "Ġ*", "res", ";", "Ċ", "}", "Ċ", "Ċ", "Block", "Ġconst", "Ġ*", "Blocks", "::", "find", "(", "Kind", "Ġkind", ")", "Ġconst", "Ġ{", "Ċ", "Ġ", "ĠBlock", "Map", "::", "const", "_", "iterator", "Ġ", "Ġit", "Ġ=", "Ġblocks", ".", "find", "(", "kind", ");", "Ċ", "Ġ", "Ġreturn", "Ġ(", "it", "Ġ==", "Ġblocks", ".", "end", "()", ")?", "Ġ0", "Ġ:", "Ġ&", "it", "->", "second", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["kind", 7, "comesFrom", ["kind"], [4]], ["kind", 13, "comesFrom", ["kind"], [10]], ["kind", 24, "comesFrom", ["kind"], [20]], ["it", 25, "comesFrom", ["it"], [21]], ["it", 28, "comesFrom", ["it"], [21]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::985", "code": "#include <celero/Celero.h>\n#include <vector>\n\n#include \"munkres-cpp/munkres.h\"\n#include \"../../tests/matrix_test_utils.h\"\n\n\n\nstd::vector<munkres_cpp::MUNKRES_CPP_MATRIX_TYPE<MUNKRES_CPP_VALUE_TYPE> *> matrices;\n\nsize_t i {0};\n\n\n\nclass MunkresFixture : public celero::TestFixture\n{\n    public:\n        MunkresFixture ()\n            : matrix (1, 1)\n        {\n        }\n\n        void setUp (int64_t) override\n        {\n            matrix = * matrices [i];\n        }\n\n        munkres_cpp::MUNKRES_CPP_MATRIX_TYPE<MUNKRES_CPP_VALUE_TYPE> matrix;\n};\n\n\n\nBASELINE_F (Munkres, Solve, MunkresFixture, 5000, 1)\n{\n    munkres_cpp::Munkres<MUNKRES_CPP_VALUE_TYPE> munkres (matrix);\n}\n\n\n\nint main (int argc, char * argv [])\n{\n    read (matrices);\n\n    while (i < matrices.size () ) {\n        celero::Run (argc, argv);\n        ++i;\n    }\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "celer", "o", "/", "C", "el", "ero", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "vector", ">", "Ċ", "Ċ", "#", "include", "Ġ\"", "m", "unk", "res", "-", "cpp", "/", "m", "unk", "res", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "../", "../", "tests", "/", "mat", "rix", "_", "test", "_", "utils", ".", "h", "\"", "ĊĊ", "Ċ", "Ċ", "std", "::", "vector", "<", "m", "unk", "res", "_", "cpp", "::", "M", "UN", "K", "RES", "_", "CP", "P", "_", "MAT", "RI", "X", "_", "TYPE", "<", "M", "UN", "K", "RES", "_", "CP", "P", "_", "VALUE", "_", "TYPE", ">", "Ġ*", ">", "Ġmat", "rices", ";", "Ċ", "Ċ", "size", "_", "t", "Ġi", "Ġ{", "0", "};", "ĊĊ", "Ċ", "Ċ", "class", "ĠM", "unk", "res", "F", "ixture", "Ġ:", "Ġpublic", "Ġcel", "ero", "::", "Test", "F", "ixture", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġpublic", ":", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "ĠM", "unk", "res", "F", "ixture", "Ġ()", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ:", "Ġmatrix", "Ġ(", "1", ",", "Ġ1", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġvoid", "Ġset", "Up", "Ġ(", "int", "64", "_", "t", ")", "Ġoverride", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġmatrix", "Ġ=", "Ġ*", "Ġmat", "rices", "Ġ[", "i", "];", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "unk", "res", "_", "cpp", "::", "M", "UN", "K", "RES", "_", "CP", "P", "_", "MAT", "RI", "X", "_", "TYPE", "<", "M", "UN", "K", "RES", "_", "CP", "P", "_", "VALUE", "_", "TYPE", ">", "Ġmatrix", ";", "Ċ", "};", "ĊĊ", "Ċ", "Ċ", "B", "AS", "EL", "INE", "_", "F", "Ġ(", "M", "unk", "res", ",", "ĠSol", "ve", ",", "ĠM", "unk", "res", "F", "ixture", ",", "Ġ5000", ",", "Ġ1", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "unk", "res", "_", "cpp", "::", "M", "unk", "res", "<", "M", "UN", "K", "RES", "_", "CP", "P", "_", "VALUE", "_", "TYPE", ">", "Ġm", "unk", "res", "Ġ(", "mat", "rix", ");", "Ċ", "}", "ĊĊ", "Ċ", "Ċ", "int", "Ġmain", "Ġ(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ*", "Ġarg", "v", "Ġ[", "])", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġread", "Ġ(", "mat", "rices", ");", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġwhile", "Ġ(", "i", "Ġ<", "Ġmat", "rices", ".", "size", "Ġ()", "Ġ)", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġcel", "ero", "::", "Run", "Ġ(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ++", "i", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["matrix", 8, "comesFrom", ["matrix"], [5]], ["matrices", 6, "comesFrom", ["matrices"], [0]], ["matrices", 18, "comesFrom", ["matrices"], [0]], ["matrices", 20, "comesFrom", ["matrices"], [0]], ["i", 7, "comesFrom", ["i"], [1]], ["i", 19, "comesFrom", ["i"], [1]], ["i", 25, "comesFrom", ["i"], [1]], ["argc", 23, "comesFrom", ["argc"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::986", "code": "#include <Ice/Ice.h>\n#include \"Printer.h\"\n\nint main(int argc, char ** argv) {\n  int status = 0;\n  Ice::CommunicatorPtr ic;\n  try {\n    ic = Ice::initialize(argc, argv);\n    Ice::ObjectPrx base=ic->stringToProxy(\"hello\");\n    Demo::PrinterPrx printer = Demo::PrinterPrx::checkedCast(base);\n    if (!printer)\n      throw \"Invalid proxy\";\n    printer->printString(\"Hello World\");\n\n  } catch (const Ice::Exception & ex) {\n    std::cerr << ex << std::endl;\n    status = 1;\n  } catch (const char* msg) {\n    std::cerr << msg << std::endl;\n    status = 1;\n  }\n  if (ic)\nic->destroy();\n  return status;\n\n}\n", "code_tokens": ["Ġ#", "include", "Ġ<", "Ice", "/", "Ice", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "Pr", "inter", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġmain", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "Ġarg", "v", ")", "Ġ{", "Ċ", "Ġ", "Ġint", "Ġstatus", "Ġ=", "Ġ0", ";", "Ċ", "Ġ", "ĠIce", "::", "Commun", "icator", "Ptr", "Ġic", ";", "Ċ", "Ġ", "Ġtry", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġic", "Ġ=", "ĠIce", "::", "initial", "ize", "(", "arg", "c", ",", "Ġarg", "v", ");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠIce", "::", "Object", "Pr", "x", "Ġbase", "=", "ic", "->", "string", "To", "Proxy", "(\"", "hello", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "ĠDemo", "::", "Pr", "inter", "Pr", "x", "Ġprinter", "Ġ=", "ĠDemo", "::", "Pr", "inter", "Pr", "x", "::", "checked", "Cast", "(", "base", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "pr", "inter", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthrow", "Ġ\"", "Invalid", "Ġproxy", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġprinter", "->", "print", "String", "(\"", "Hello", "ĠWorld", "\");", "ĊĊ", "Ġ", "Ġ}", "Ġcatch", "Ġ(", "const", "ĠIce", "::", "Exception", "Ġ&", "Ġex", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġex", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatus", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ}", "Ġcatch", "Ġ(", "const", "Ġchar", "*", "Ġmsg", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "cer", "r", "Ġ<<", "Ġmsg", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatus", "Ġ=", "Ġ1", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġif", "Ġ(", "ic", ")", "Ċ", "ic", "->", "destroy", "();", "Ċ", "Ġ", "Ġreturn", "Ġstatus", ";", "Ċ", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 7, "comesFrom", ["argc"], [1]], ["ic", 10, "comesFrom", ["ic"], [5]], ["ic", 28, "comesFrom", ["ic"], [5]], ["ic", 29, "comesFrom", ["ic"], [5]], ["base", 14, "comesFrom", ["base"], [9]], ["printer", 15, "comesFrom", ["printer"], [12]], ["printer", 16, "comesFrom", ["printer"], [12]], ["status", 31, "comesFrom", ["status"], [27]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::987", "code": "/*\n\nPencil - Traditional Animation Software\nCopyright (C) 2005-2007 Patrick Corrieri & Pascal Naidon\nCopyright (C) 2012-2020 Matthew Chiawen Chang\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License\nas published by the Free Software Foundation; version 2 of the License.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\n*/\n\n#include \"blitrect.h\"\n\nBlitRect::BlitRect()\n{\n}\n\nBlitRect::BlitRect(const QPoint p)\n{\n    extend(p);\n}\n\nvoid BlitRect::extend(const QPoint p)\n{\n    if (mInitialized == false)\n    {\n        setBottomLeft(p);\n        setTopRight(p);\n        mInitialized = true;\n    }\n    else\n    {\n        if (left() > p.x()) { setLeft(p.x()); }\n        if (right() < p.x()) { setRight(p.x()); }\n        if (top() > p.y()) { setTop(p.y()); }\n        if (bottom() < p.y()) { setBottom(p.y()); }\n    }\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ċ", "Pen", "cil", "Ġ-", "ĠTraditional", "ĠAnimation", "ĠSoftware", "Ċ", "Copyright", "Ġ(", "C", ")", "Ġ2005", "-", "2007", "ĠPatrick", "ĠCor", "rier", "i", "Ġ&", "ĠPascal", "ĠN", "aid", "on", "Ċ", "Copyright", "Ġ(", "C", ")", "Ġ2012", "-", "2020", "ĠMatthew", "ĠCh", "ia", "wen", "ĠChang", "Ċ", "Ċ", "This", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ċ", "mod", "ify", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "as", "Ġpublished", "Ġby", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġversion", "Ġ2", "Ġof", "Ġthe", "ĠLicense", ".", "Ċ", "Ċ", "This", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "but", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "MER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "GN", "U", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ\"", "bl", "it", "rect", ".", "h", "\"", "Ċ", "Ċ", "Bl", "it", "Rect", "::", "Bl", "it", "Rect", "()", "Ċ", "{", "Ċ", "}", "Ċ", "Ċ", "Bl", "it", "Rect", "::", "Bl", "it", "Rect", "(", "const", "ĠQ", "Point", "Ġp", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġextend", "(", "p", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠBl", "it", "Rect", "::", "ext", "end", "(", "const", "ĠQ", "Point", "Ġp", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "m", "Initialized", "Ġ==", "Ġfalse", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġset", "Bottom", "Left", "(", "p", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġset", "Top", "Right", "(", "p", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġm", "Initialized", "Ġ=", "Ġtrue", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġelse", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "left", "()", "Ġ>", "Ġp", ".", "x", "())", "Ġ{", "Ġset", "Left", "(", "p", ".", "x", "());", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "right", "()", "Ġ<", "Ġp", ".", "x", "())", "Ġ{", "Ġset", "Right", "(", "p", ".", "x", "());", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "top", "()", "Ġ>", "Ġp", ".", "y", "())", "Ġ{", "Ġset", "Top", "(", "p", ".", "y", "());", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "bottom", "()", "Ġ<", "Ġp", ".", "y", "())", "Ġ{", "Ġset", "Bottom", "(", "p", ".", "y", "());", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ"], "dataflow_graph": [["p", 4, "comesFrom", ["p"], [2]], ["p", 9, "comesFrom", ["p"], [6]], ["p", 11, "comesFrom", ["p"], [6]], ["p", 14, "comesFrom", ["p"], [6]], ["p", 17, "comesFrom", ["p"], [6]], ["p", 20, "comesFrom", ["p"], [6]], ["p", 23, "comesFrom", ["p"], [6]], ["p", 26, "comesFrom", ["p"], [6]], ["p", 29, "comesFrom", ["p"], [6]], ["p", 32, "comesFrom", ["p"], [6]], ["p", 35, "comesFrom", ["p"], [6]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::988", "code": "/*\n * Trompeloeil C++ mocking framework\n *\n * Copyright Björn Fahller 2014,2017\n *\n *  Use, modification and distribution is subject to the\n *  Boost Software License, Version 1.0. (See accompanying\n *  file LICENSE_1_0.txt or copy at\n *  http://www.boost.org/LICENSE_1_0.txt)\n *\n * Project home: https://github.com/rollbear/trompeloeil\n */\n\n//Multiple IN_SEQUENCE does not make sense. You can list several sequence\n#include <trompeloeil.hpp>\n\nstruct MS\n{\n  MAKE_MOCK0(f, int());\n};\n\nint main()\n{\n  trompeloeil::sequence seq;\n  MS obj;\n  REQUIRE_DESTRUCTION(obj)\n    .IN_SEQUENCE(seq)\n    .IN_SEQUENCE(seq);\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠT", "rom", "pel", "oe", "il", "ĠC", "++", "Ġmocking", "Ġframework", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "ĠBj", "Ã¶r", "n", "ĠFah", "ller", "Ġ2014", ",", "2017", "Ċ", "Ġ*", "Ċ", "Ġ*", "Ġ", "ĠUse", ",", "Ġmodification", "Ġand", "Ġdistribution", "Ġis", "Ġsubject", "Ġto", "Ġthe", "Ċ", "Ġ*", "Ġ", "ĠBoost", "ĠSoftware", "ĠLicense", ",", "ĠVersion", "Ġ1", ".", "0", ".", "Ġ(", "See", "Ġaccompanying", "Ċ", "Ġ*", "Ġ", "Ġfile", "ĠLIC", "ENSE", "_", "1", "_", "0", ".", "txt", "Ġor", "Ġcopy", "Ġat", "Ċ", "Ġ*", "Ġ", "Ġhttp", "://", "www", ".", "boost", ".", "org", "/", "L", "IC", "ENSE", "_", "1", "_", "0", ".", "txt", ")", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠProject", "Ġhome", ":", "Ġhttps", "://", "github", ".", "com", "/", "roll", "bear", "/", "t", "rom", "pel", "oe", "il", "Ċ", "Ġ*/", "Ċ", "Ċ", "//", "Multiple", "ĠIN", "_", "SE", "QU", "ENCE", "Ġdoes", "Ġnot", "Ġmake", "Ġsense", ".", "ĠYou", "Ġcan", "Ġlist", "Ġseveral", "Ġsequence", "Ċ", "#", "include", "Ġ<", "t", "rom", "pel", "oe", "il", ".", "h", "pp", ">", "Ċ", "Ċ", "struct", "ĠMS", "Ċ", "{", "Ċ", "Ġ", "ĠMAKE", "_", "M", "OCK", "0", "(", "f", ",", "Ġint", "());", "Ċ", "};", "Ċ", "Ċ", "int", "Ġmain", "()", "Ċ", "{", "Ċ", "Ġ", "Ġt", "rom", "pel", "oe", "il", "::", "sequence", "Ġseq", ";", "Ċ", "Ġ", "ĠMS", "Ġobj", ";", "Ċ", "Ġ", "ĠRE", "QUIRE", "_", "DES", "TR", "UCT", "ION", "(", "obj", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ.", "IN", "_", "SE", "QU", "ENCE", "(", "seq", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ.", "IN", "_", "SE", "QU", "ENCE", "(", "seq", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["obj", 5, "comesFrom", ["obj"], [3]], ["seq", 7, "comesFrom", ["seq"], [2]], ["seq", 9, "comesFrom", ["seq"], [2]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::989", "code": "/*\nCopyright (C) 2013 ZhiQiang Fan <aji.zqfan@gmail.com>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include <cstdio>\n#include <cmath>\n\nint main() {\n  double m, n, a;\n  scanf(\"%lf %lf %lf\", &m, &n, &a);\n  printf(\"%.0lf\", ceil(m/a)*ceil(n/a));\n  return 0;\n}\n", "code_tokens": ["Ġ/*", "Ċ", "Copyright", "Ġ(", "C", ")", "Ġ2013", "ĠZ", "hi", "Q", "iang", "ĠFan", "Ġ<", "aji", ".", "z", "q", "fan", "@", "gmail", ".", "com", ">", "Ċ", "Ċ", "This", "Ġprogram", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "it", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "the", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ċ", "This", "Ġprogram", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "but", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "MER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "GN", "U", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ċ", "You", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "along", "Ġwith", "Ġthis", "Ġprogram", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "*/", "Ċ", "Ċ", "#", "include", "Ġ<", "c", "std", "io", ">", "Ċ", "#", "include", "Ġ<", "c", "math", ">", "Ċ", "Ċ", "int", "Ġmain", "()", "Ġ{", "Ċ", "Ġ", "Ġdouble", "Ġm", ",", "Ġn", ",", "Ġa", ";", "Ċ", "Ġ", "Ġscan", "f", "(\"", "%", "lf", "Ġ%", "lf", "Ġ%", "lf", "\",", "Ġ&", "m", ",", "Ġ&", "n", ",", "Ġ&", "a", ");", "Ċ", "Ġ", "Ġprintf", "(\"", "%.", "0", "lf", "\",", "Ġce", "il", "(", "m", "/", "a", ")*", "ce", "il", "(", "n", "/", "a", "));", "Ċ", "Ġ", "Ġreturn", "Ġ0", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["m", 5, "comesFrom", ["m"], [1]], ["m", 10, "comesFrom", ["m"], [1]], ["n", 6, "comesFrom", ["n"], [2]], ["n", 13, "comesFrom", ["n"], [2]], ["a", 7, "comesFrom", ["a"], [3]], ["a", 11, "comesFrom", ["a"], [3]], ["a", 14, "comesFrom", ["a"], [3]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::990", "code": "#include \"PaletteManager.hpp\"\n#include \"Palette.hpp\"\n\nnamespace pte\n{\n\nPalette::Palette(Ref<PaletteManager> manager, QString name, QString displayName, int numColors)\n\t: name_(name),\n\t  displayName_(displayName),\n\t  colorByName_(new ColorByName),\n\t  colorByIndex_(new ColorByIndex(numColors))\n{\n\tmanager->addPalette(this);\n}\n\nQString Palette::name() const { return name_; }\nQString Palette::displayName() const { return displayName_; }\n\nQColor Palette::colorByName(const QString& name) const { return colorByName_->value(name); }\nQColor Palette::colorByIndex(int index) const { return colorByIndex_->get(index); }\nint Palette::numColors() const { return colorByIndex_->size(); }\n\n} // namespace pte\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Pal", "ette", "Manager", ".", "h", "pp", "\"", "Ċ", "#", "include", "Ġ\"", "Pal", "ette", ".", "h", "pp", "\"", "Ċ", "Ċ", "names", "pace", "Ġp", "te", "Ċ", "{", "Ċ", "Ċ", "Pal", "ette", "::", "Pal", "ette", "(", "Ref", "<", "Pal", "ette", "Manager", ">", "Ġmanager", ",", "ĠQ", "String", "Ġname", ",", "ĠQ", "String", "Ġdisplay", "Name", ",", "Ġint", "Ġnum", "Col", "ors", ")", "Ċ", "ĉ", ":", "Ġname", "_(", "name", "),", "Ċ", "ĉ", "Ġ", "Ġdisplay", "Name", "_(", "display", "Name", "),", "Ċ", "ĉ", "Ġ", "Ġcolor", "By", "Name", "_(", "new", "ĠColor", "By", "Name", "),", "Ċ", "ĉ", "Ġ", "Ġcolor", "By", "Index", "_(", "new", "ĠColor", "By", "Index", "(", "num", "Col", "ors", "))", "Ċ", "{", "Ċ", "ĉ", "manager", "->", "add", "Pal", "ette", "(", "this", ");", "Ċ", "}", "Ċ", "Ċ", "Q", "String", "ĠPal", "ette", "::", "name", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġname", "_", ";", "Ġ}", "Ċ", "Q", "String", "ĠPal", "ette", "::", "display", "Name", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġdisplay", "Name", "_", ";", "Ġ}", "Ċ", "Ċ", "Q", "Color", "ĠPal", "ette", "::", "color", "By", "Name", "(", "const", "ĠQ", "String", "&", "Ġname", ")", "Ġconst", "Ġ{", "Ġreturn", "Ġcolor", "By", "Name", "_", "->", "value", "(", "name", ");", "Ġ}", "Ċ", "Q", "Color", "ĠPal", "ette", "::", "color", "By", "Index", "(", "int", "Ġindex", ")", "Ġconst", "Ġ{", "Ġreturn", "Ġcolor", "By", "Index", "_", "->", "get", "(", "index", ");", "Ġ}", "Ċ", "int", "ĠPal", "ette", "::", "num", "Col", "ors", "()", "Ġconst", "Ġ{", "Ġreturn", "Ġcolor", "By", "Index", "_", "->", "size", "();", "Ġ}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "Ġp", "te", "Ċ"], "dataflow_graph": [["name", 7, "comesFrom", ["name"], [3]], ["name", 15, "comesFrom", ["name"], [3]], ["name", 20, "comesFrom", ["name"], [3]], ["name", 23, "comesFrom", ["name"], [3]], ["displayName", 9, "comesFrom", ["displayName"], [4]], ["displayName", 17, "comesFrom", ["displayName"], [4]], ["numColors", 12, "comesFrom", ["numColors"], [5]], ["numColors", 29, "comesFrom", ["numColors"], [5]], ["manager", 13, "comesFrom", ["manager"], [2]], ["index", 28, "comesFrom", ["index"], [25]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::991", "code": "#include \"MantidKernel/LibraryWrapper.h\"\n#include \"MantidKernel/DllOpen.h\"\n\nnamespace Mantid {\nnamespace Kernel {\n\n/**\n * Move constructor\n * @param src Constructor from this temporary\n */\nLibraryWrapper::LibraryWrapper(LibraryWrapper &&src) noexcept {\n  *this = std::move(src);\n}\n\n/**\n * Move assignment\n * @param rhs Temporary object as source of assignment\n */\nLibraryWrapper &LibraryWrapper::operator=(LibraryWrapper &&rhs) noexcept {\n  using std::swap;\n  swap(m_module, rhs.m_module);\n  return *this;\n}\n\n/// Destructor\nLibraryWrapper::~LibraryWrapper() {\n  // Close lib\n  if (m_module) {\n    DllOpen::closeDll(m_module);\n    m_module = nullptr;\n  }\n}\n\n/** Opens a DLL.\n *  @param filepath :: The filepath to the directory where the library is.\n *  @return True if DLL is opened or already open\n */\nbool LibraryWrapper::openLibrary(const std::string &filepath) {\n  if (!m_module) {\n    // Load dynamically loaded library\n    m_module = DllOpen::openDll(filepath);\n    if (!m_module) {\n      return false;\n    }\n  }\n  return true;\n}\n\n} // namespace Kernel\n} // namespace Mantid\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "M", "ant", "id", "K", "ernel", "/", "Library", "Wra", "pper", ".", "h", "\"", "Ċ", "#", "include", "Ġ\"", "M", "ant", "id", "K", "ernel", "/", "D", "ll", "Open", ".", "h", "\"", "Ċ", "Ċ", "names", "pace", "ĠMant", "id", "Ġ{", "Ċ", "names", "pace", "ĠKernel", "Ġ{", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠMove", "Ġconstructor", "Ċ", "Ġ*", "Ġ@", "param", "Ġsrc", "ĠConstruct", "or", "Ġfrom", "Ġthis", "Ġtemporary", "Ċ", "Ġ*/", "Ċ", "Library", "Wra", "pper", "::", "Library", "Wra", "pper", "(", "Library", "Wra", "pper", "Ġ&&", "src", ")", "Ġno", "except", "Ġ{", "Ċ", "Ġ", "Ġ*", "this", "Ġ=", "Ġstd", "::", "move", "(", "src", ");", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ*", "ĠMove", "Ġassignment", "Ċ", "Ġ*", "Ġ@", "param", "Ġrh", "s", "ĠTemporary", "Ġobject", "Ġas", "Ġsource", "Ġof", "Ġassignment", "Ċ", "Ġ*/", "Ċ", "Library", "Wra", "pper", "Ġ&", "Library", "Wra", "pper", "::", "operator", "=(", "Library", "Wra", "pper", "Ġ&&", "r", "hs", ")", "Ġno", "except", "Ġ{", "Ċ", "Ġ", "Ġusing", "Ġstd", "::", "sw", "ap", ";", "Ċ", "Ġ", "Ġswap", "(", "m", "_", "module", ",", "Ġrh", "s", ".", "m", "_", "module", ");", "Ċ", "Ġ", "Ġreturn", "Ġ*", "this", ";", "Ċ", "}", "Ċ", "Ċ", "///", "ĠDest", "ruct", "or", "Ċ", "Library", "Wra", "pper", "::", "~", "Library", "Wra", "pper", "()", "Ġ{", "Ċ", "Ġ", "Ġ//", "ĠClose", "Ġlib", "Ċ", "Ġ", "Ġif", "Ġ(", "m", "_", "module", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "ĠD", "ll", "Open", "::", "close", "D", "ll", "(", "m", "_", "module", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "module", "Ġ=", "Ġnull", "ptr", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "/**", "ĠOp", "ens", "Ġa", "ĠD", "LL", ".", "Ċ", "Ġ*", "Ġ", "Ġ@", "param", "Ġfile", "path", "Ġ::", "ĠThe", "Ġfile", "path", "Ġto", "Ġthe", "Ġdirectory", "Ġwhere", "Ġthe", "Ġlibrary", "Ġis", ".", "Ċ", "Ġ*", "Ġ", "Ġ@", "return", "ĠTrue", "Ġif", "ĠD", "LL", "Ġis", "Ġopened", "Ġor", "Ġalready", "Ġopen", "Ċ", "Ġ*/", "Ċ", "bool", "ĠLibrary", "Wra", "pper", "::", "open", "Library", "(", "const", "Ġstd", "::", "string", "Ġ&", "file", "path", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(!", "m", "_", "module", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "ĠLoad", "Ġdynamically", "Ġloaded", "Ġlibrary", "Ċ", "Ġ", "Ġ", "Ġ", "Ġm", "_", "module", "Ġ=", "ĠD", "ll", "Open", "::", "open", "D", "ll", "(", "file", "path", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(!", "m", "_", "module", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġfalse", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġreturn", "Ġtrue", ";", "Ċ", "}", "Ċ", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠKernel", "Ċ", "}", "Ġ//", "Ġnamespace", "ĠMant", "id", "Ċ"], "dataflow_graph": [["m_module", 17, "comesFrom", ["m_module"], [14]], ["m_module", 21, "comesFrom", ["m_module"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::992", "code": "/* -*- c++ -*- */\n/*\n * Copyright 2012 Free Software Foundation, Inc.\n *\n * This file is part of GNU Radio\n *\n * GNU Radio is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3, or (at your option)\n * any later version.\n *\n * GNU Radio is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with GNU Radio; see the file COPYING.  If not, write to\n * the Free Software Foundation, Inc., 51 Franklin Street,\n * Boston, MA 02110-1301, USA.\n */\n\n#include <cppunit/TextTestRunner.h>\n#include <cppunit/XmlOutputter.h>\n\n#include <gr_unittests.h>\n#include \"qa_fhah.h\"\n#include <iostream>\n\nint\nmain (int argc, char **argv)\n{\n  CppUnit::TextTestRunner runner;\n  std::ofstream xmlfile(get_unittest_path(\"fhah.xml\").c_str());\n  CppUnit::XmlOutputter *xmlout = new CppUnit::XmlOutputter(&runner.result(), xmlfile);\n\n  runner.addTest(qa_fhah::suite());\n  runner.setOutputter(xmlout);\n\n  bool was_successful = runner.run(\"\", false);\n\n  return was_successful ? 0 : 1;\n}\n", "code_tokens": ["Ġ/*", "Ġ-", "*", "-", "Ġc", "++", "Ġ-", "*", "-", "Ġ*/", "Ċ", "/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2012", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠGNU", "ĠRadio", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠGNU", "ĠRadio", "Ġis", "Ġfree", "Ġsoftware", ";", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ";", "Ġeither", "Ġversion", "Ġ3", ",", "Ġor", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ċ", "Ġ*", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠGNU", "ĠRadio", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠGNU", "ĠRadio", ";", "Ġsee", "Ġthe", "Ġfile", "ĠCOP", "YING", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġwrite", "Ġto", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "ĠInc", ".,", "Ġ51", "ĠFranklin", "ĠStreet", ",", "Ċ", "Ġ*", "ĠBoston", ",", "ĠMA", "Ġ0", "21", "10", "-", "13", "01", ",", "ĠUSA", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "Text", "Test", "Runner", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "cpp", "unit", "/", "X", "ml", "Output", "ter", ".", "h", ">", "Ċ", "Ċ", "#", "include", "Ġ<", "gr", "_", "un", "itt", "ests", ".", "h", ">", "Ċ", "#", "include", "Ġ\"", "qa", "_", "f", "h", "ah", ".", "h", "\"", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "int", "Ċ", "main", "Ġ(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "ĠC", "pp", "Unit", "::", "Text", "Test", "Runner", "Ġrunner", ";", "Ċ", "Ġ", "Ġstd", "::", "of", "stream", "Ġx", "m", "lf", "ile", "(", "get", "_", "un", "itt", "est", "_", "path", "(\"", "f", "h", "ah", ".", "xml", "\").", "c", "_", "str", "());", "Ċ", "Ġ", "ĠC", "pp", "Unit", "::", "X", "ml", "Output", "ter", "Ġ*", "xml", "out", "Ġ=", "Ġnew", "ĠC", "pp", "Unit", "::", "X", "ml", "Output", "ter", "(&", "runner", ".", "result", "(),", "Ġx", "m", "lf", "ile", ");", "ĊĊ", "Ġ", "Ġrunner", ".", "add", "Test", "(", "qa", "_", "f", "h", "ah", "::", "su", "ite", "());", "Ċ", "Ġ", "Ġrunner", ".", "set", "Output", "ter", "(", "xml", "out", ");", "ĊĊ", "Ġ", "Ġbool", "Ġwas", "_", "successful", "Ġ=", "Ġrunner", ".", "run", "(\"", "\",", "Ġfalse", ");", "ĊĊ", "Ġ", "Ġreturn", "Ġwas", "_", "successful", "Ġ?", "Ġ0", "Ġ:", "Ġ1", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["runner", 8, "comesFrom", ["runner"], [3]], ["runner", 11, "comesFrom", ["runner"], [3]], ["runner", 14, "comesFrom", ["runner"], [3]], ["runner", 18, "comesFrom", ["runner"], [3]], ["xmlfile", 10, "comesFrom", ["xmlfile"], [4]], ["was_successful", 20, "comesFrom", ["was_successful"], [17]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::993", "code": "\n#pragma once\n\nnamespace RH { namespace UI { namespace Events {\n\nenum keys {\n\tKEY_UNKNOWN,\n\tKEY_ESCAPE,\n\tKEY_SPACE,\n\tKEY_RETURN,\n\tKEY_0,KEY_1,KEY_2,KEY_3,KEY_4,KEY_5,KEY_6,KEY_7,KEY_8,KEY_9,\n\tKEY_A,KEY_B,KEY_C,KEY_D,KEY_E,KEY_F,KEY_G,KEY_H,KEY_I,KEY_J,KEY_K,KEY_L,KEY_M,\n\tKEY_N,KEY_O,KEY_P,KEY_Q,KEY_R,KEY_S,KEY_T,KEY_U,KEY_V,KEY_W,KEY_X,KEY_Y,KEY_Z,\n};\n\nclass KeyPressedEvent {\n\tkeys k;\npublic:\n\tKeyPressedEvent(keys k)\n\t\t:\tk(k)\n\t{}\n\tkeys GetKey() const {\n\t\treturn k;\n\t}\n\tbool operator < (const KeyPressedEvent & that) const {\n\t\treturn this->k < that.k;\n\t}\n};\n\nclass KeyReleasedEvent {\n\tkeys k;\npublic:\n\tKeyReleasedEvent(keys k)\n\t\t:\tk(k)\n\t{}\n\tkeys GetKey() const {\n\t\treturn k;\n\t}\n\tbool operator < (const KeyReleasedEvent & that) const {\n\t\treturn this->k < that.k;\n\t}\n};\n\n}}}\n", "code_tokens": ["Ċ", "#", "pr", "ag", "ma", "Ġonce", "Ċ", "Ċ", "names", "pace", "ĠRH", "Ġ{", "Ġnamespace", "ĠUI", "Ġ{", "Ġnamespace", "ĠEvents", "Ġ{", "Ċ", "Ċ", "enum", "Ġkeys", "Ġ{", "Ċ", "ĉ", "KEY", "_", "UN", "KNOWN", ",", "Ċ", "ĉ", "KEY", "_", "ES", "CAP", "E", ",", "Ċ", "ĉ", "KEY", "_", "SP", "ACE", ",", "Ċ", "ĉ", "KEY", "_", "RET", "URN", ",", "Ċ", "ĉ", "KEY", "_", "0", ",", "KEY", "_", "1", ",", "KEY", "_", "2", ",", "KEY", "_", "3", ",", "KEY", "_", "4", ",", "KEY", "_", "5", ",", "KEY", "_", "6", ",", "KEY", "_", "7", ",", "KEY", "_", "8", ",", "KEY", "_", "9", ",", "Ċ", "ĉ", "KEY", "_", "A", ",", "KEY", "_", "B", ",", "KEY", "_", "C", ",", "KEY", "_", "D", ",", "KEY", "_", "E", ",", "KEY", "_", "F", ",", "KEY", "_", "G", ",", "KEY", "_", "H", ",", "KEY", "_", "I", ",", "KEY", "_", "J", ",", "KEY", "_", "K", ",", "KEY", "_", "L", ",", "KEY", "_", "M", ",", "Ċ", "ĉ", "KEY", "_", "N", ",", "KEY", "_", "O", ",", "KEY", "_", "P", ",", "KEY", "_", "Q", ",", "KEY", "_", "R", ",", "KEY", "_", "S", ",", "KEY", "_", "T", ",", "KEY", "_", "U", ",", "KEY", "_", "V", ",", "KEY", "_", "W", ",", "KEY", "_", "X", ",", "KEY", "_", "Y", ",", "KEY", "_", "Z", ",", "Ċ", "};", "Ċ", "Ċ", "class", "ĠKey", "P", "ressed", "Event", "Ġ{", "Ċ", "ĉ", "keys", "Ġk", ";", "Ċ", "public", ":", "Ċ", "ĉ", "Key", "P", "ressed", "Event", "(", "keys", "Ġk", ")", "Ċ", "ĉ", "ĉ", ":", "ĉ", "k", "(", "k", ")", "Ċ", "ĉ", "{", "}", "Ċ", "ĉ", "keys", "ĠGet", "Key", "()", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġk", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "bool", "Ġoperator", "Ġ<", "Ġ(", "const", "ĠKey", "P", "ressed", "Event", "Ġ&", "Ġthat", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġthis", "->", "k", "Ġ<", "Ġthat", ".", "k", ";", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "class", "ĠKey", "Released", "Event", "Ġ{", "Ċ", "ĉ", "keys", "Ġk", ";", "Ċ", "public", ":", "Ċ", "ĉ", "Key", "Released", "Event", "(", "keys", "Ġk", ")", "Ċ", "ĉ", "ĉ", ":", "ĉ", "k", "(", "k", ")", "Ċ", "ĉ", "{", "}", "Ċ", "ĉ", "keys", "ĠGet", "Key", "()", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġk", ";", "Ċ", "ĉ", "}", "Ċ", "ĉ", "bool", "Ġoperator", "Ġ<", "Ġ(", "const", "ĠKey", "Released", "Event", "Ġ&", "Ġthat", ")", "Ġconst", "Ġ{", "Ċ", "ĉ", "ĉ", "return", "Ġthis", "->", "k", "Ġ<", "Ġthat", ".", "k", ";", "Ċ", "ĉ", "}", "Ċ", "};", "Ċ", "Ċ", "}}}", "Ċ"], "dataflow_graph": [["k", 43, "comesFrom", ["k"], [42]], ["k", 44, "comesFrom", ["k"], [42]], ["k", 46, "comesFrom", ["k"], [42]], ["k", 48, "comesFrom", ["k"], [42]], ["k", 50, "comesFrom", ["k"], [42]], ["k", 51, "comesFrom", ["k"], [42]], ["k", 54, "comesFrom", ["k"], [53]], ["k", 55, "comesFrom", ["k"], [53]], ["k", 57, "comesFrom", ["k"], [53]], ["k", 59, "comesFrom", ["k"], [53]], ["k", 61, "comesFrom", ["k"], [53]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::994", "code": "#include \"ArgumentParser.hpp\"\n\n/**\n    Put all arg in vector of string\n */\nArgumentParser::ArgumentParser(int argc, char **argv)\n{\n    _argc = argc;\n    for (int i=1; i < _argc; ++i)\n    {\n        this->_tokens.push_back(std::string(argv[i]));\n    }\n}\n\n/**\n    Get argument following the option\n */\nconst std::string& ArgumentParser::getCmdOption(const std::string &option) const\n{\n    static const std::string empty = \"\";\n    std::vector<std::string>::const_iterator itr;\n    itr =  std::find(this->_tokens.begin(), this->_tokens.end(), option);\n    \n    if (itr != this->_tokens.end() && ++itr != this->_tokens.end())\n    {\n        return *itr;\n    }\n    return empty;\n}\n\nbool ArgumentParser::cmdOptionExists(const std::string &option) const\n{\n    return std::find(this->_tokens.begin(), this->_tokens.end(), option)\n    != this->_tokens.end();\n}\n\nint ArgumentParser::getArgc()\n{\n    return _argc;\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Arg", "ument", "Parser", ".", "h", "pp", "\"", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ", "Ġ", "ĠPut", "Ġall", "Ġarg", "Ġin", "Ġvector", "Ġof", "Ġstring", "Ċ", "Ġ*/", "Ċ", "Arg", "ument", "Parser", "::", "Arg", "ument", "Parser", "(", "int", "Ġarg", "c", ",", "Ġchar", "Ġ**", "arg", "v", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ_", "arg", "c", "Ġ=", "Ġarg", "c", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġfor", "Ġ(", "int", "Ġi", "=", "1", ";", "Ġi", "Ġ<", "Ġ_", "arg", "c", ";", "Ġ++", "i", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġthis", "->", "_", "t", "ok", "ens", ".", "push", "_", "back", "(", "std", "::", "string", "(", "arg", "v", "[", "i", "])", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "Ċ", "/**", "Ċ", "Ġ", "Ġ", "Ġ", "ĠGet", "Ġargument", "Ġfollowing", "Ġthe", "Ġoption", "Ċ", "Ġ*/", "Ċ", "const", "Ġstd", "::", "string", "&", "ĠArgument", "Parser", "::", "get", "Cmd", "Option", "(", "const", "Ġstd", "::", "string", "Ġ&", "option", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "Ġconst", "Ġstd", "::", "string", "Ġempty", "Ġ=", "Ġ\"", "\";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "vector", "<", "std", "::", "string", ">", "::", "const", "_", "iterator", "Ġit", "r", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġit", "r", "Ġ=", "Ġ", "Ġstd", "::", "find", "(", "this", "->", "_", "t", "ok", "ens", ".", "begin", "(),", "Ġthis", "->", "_", "t", "ok", "ens", ".", "end", "(),", "Ġoption", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "it", "r", "Ġ!=", "Ġthis", "->", "_", "t", "ok", "ens", ".", "end", "()", "Ġ&&", "Ġ++", "it", "r", "Ġ!=", "Ġthis", "->", "_", "t", "ok", "ens", ".", "end", "())", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ*", "it", "r", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġempty", ";", "Ċ", "}", "Ċ", "Ċ", "bool", "ĠArgument", "Parser", "::", "cmd", "Option", "Ex", "ists", "(", "const", "Ġstd", "::", "string", "Ġ&", "option", ")", "Ġconst", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġstd", "::", "find", "(", "this", "->", "_", "t", "ok", "ens", ".", "begin", "(),", "Ġthis", "->", "_", "t", "ok", "ens", ".", "end", "(),", "Ġoption", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ!=", "Ġthis", "->", "_", "t", "ok", "ens", ".", "end", "();", "Ċ", "}", "Ċ", "Ċ", "int", "ĠArgument", "Parser", "::", "get", "Arg", "c", "()", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ_", "arg", "c", ";", "Ċ", "}", "Ċ"], "dataflow_graph": [["argc", 4, "comesFrom", ["argc"], [1]], ["i", 6, "comesFrom", ["i"], [5]], ["i", 8, "comesFrom", ["i"], [5]], ["i", 13, "comesFrom", ["i"], [5]], ["_argc", 7, "comesFrom", ["_argc"], [3]], ["_argc", 44, "comesFrom", ["_argc"], [3]], ["itr", 25, "comesFrom", ["itr"], [18]], ["itr", 28, "comesFrom", ["itr"], [18]], ["itr", 31, "comesFrom", ["itr"], [18]], ["empty", 32, "comesFrom", ["empty"], [16]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::995", "code": "// crtp.cpp\n\n#include <iostream>\n\ntemplate <typename Derived>\nstruct Base{\n  void interface(){\n    static_cast<Derived*>(this)->implementation();\n  }\n  void implementation(){\n    std::cout << \"Implementation Base\" << std::endl;\n  }\n};\n\nstruct Derived1: Base<Derived1>{\n  void implementation(){\n    std::cout << \"Implementation Derived1\" << std::endl;\n  }\n};\n\nstruct Derived2: Base<Derived2>{\n  void implementation(){\n    std::cout << \"Implementation Derived2\" << std::endl;\n  }\n};\n\nstruct Derived3: Base<Derived3>{};\n\ntemplate <typename T>\nvoid execute(T& base){\n    base.interface();\n}\n\n\nint main(){\n  \n  std::cout << std::endl;\n  \n  Derived1 d1;\n  execute(d1);\n    \n  Derived2 d2;\n  execute(d2);\n  \n  Derived3 d3;\n  execute(d3);\n  \n  std::cout << std::endl;\n  \n}\n", "code_tokens": ["Ġ//", "Ġcr", "tp", ".", "cpp", "Ċ", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠDer", "ived", ">", "Ċ", "struct", "ĠBase", "{", "Ċ", "Ġ", "Ġvoid", "Ġinterface", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstatic", "_", "cast", "<", "Der", "ived", "*", ">(", "this", ")", "->", "im", "plementation", "();", "Ċ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġvoid", "Ġimplementation", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Im", "plementation", "ĠBase", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠDer", "ived", "1", ":", "ĠBase", "<", "Der", "ived", "1", ">", "{", "Ċ", "Ġ", "Ġvoid", "Ġimplementation", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Im", "plementation", "ĠDer", "ived", "1", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠDer", "ived", "2", ":", "ĠBase", "<", "Der", "ived", "2", ">", "{", "Ċ", "Ġ", "Ġvoid", "Ġimplementation", "(){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġ\"", "Im", "plementation", "ĠDer", "ived", "2", "\"", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "};", "Ċ", "Ċ", "struct", "ĠDer", "ived", "3", ":", "ĠBase", "<", "Der", "ived", "3", ">", "{", "};", "Ċ", "Ċ", "template", "Ġ<", "ty", "pen", "ame", "ĠT", ">", "Ċ", "void", "Ġexecute", "(", "T", "&", "Ġbase", "){", "Ċ", "Ġ", "Ġ", "Ġ", "Ġbase", ".", "interface", "();", "Ċ", "}", "ĊĊ", "Ċ", "int", "Ġmain", "(){", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "ĠDer", "ived", "1", "Ġd", "1", ";", "Ċ", "Ġ", "Ġexecute", "(", "d", "1", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ċ", "Ġ", "ĠDer", "ived", "2", "Ġd", "2", ";", "Ċ", "Ġ", "Ġexecute", "(", "d", "2", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "ĠDer", "ived", "3", "Ġd", "3", ";", "Ċ", "Ġ", "Ġexecute", "(", "d", "3", ");", "Ċ", "Ġ", "Ġ", "Ċ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ", "Ċ", "}", "Ċ"], "dataflow_graph": [["d1", 21, "comesFrom", ["d1"], [19]], ["d2", 24, "comesFrom", ["d2"], [22]], ["d3", 27, "comesFrom", ["d3"], [25]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::996", "code": "/** \\file utility.cpp Benchmarking utilities\n *\n * Copyright 2007-2017 IMP Inventors. All rights reserved.\n */\n\n#include <IMP/benchmark/utility.h>\n#include <IMP/exception.h>\n#include <IMP/log_macros.h>\n#include <iostream>\n#include <boost/format.hpp>\n#include <algorithm>\n#include <IMP/benchmark/benchmark_macros.h>\n#include <IMP/log.h>\nIMPBENCHMARK_BEGIN_NAMESPACE\n\nvoid report(std::string name, std::string algorithm, double value,\n            double check) {\n  if (value < 0) {\n    // disabled\n  } else {\n    std::cout << boost::format(\"%s, %s, %30t%.2e, %50t%1.1e, %d\") % name %\n                     algorithm % value % check %\n                     (internal::current_benchmark) << std::endl;\n  }\n}\nvoid report(std::string name, double value, double check) {\n  report(name, \"\", value, check);\n}\n\nint get_return_value() { return 0; }\n\nIMPBENCHMARK_END_NAMESPACE\n", "code_tokens": ["Ġ/**", "Ġ\\", "file", "Ġutility", ".", "cpp", "ĠBench", "mark", "ing", "Ġutilities", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2007", "-", "2017", "ĠIMP", "ĠIn", "vent", "ors", ".", "ĠAll", "Ġrights", "Ġreserved", ".", "Ċ", "Ġ*/", "Ċ", "Ċ", "#", "include", "Ġ<", "IM", "P", "/", "bench", "mark", "/", "ut", "ility", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "IM", "P", "/", "ex", "ception", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "IM", "P", "/", "log", "_", "mac", "ros", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "i", "ost", "ream", ">", "Ċ", "#", "include", "Ġ<", "boost", "/", "format", ".", "h", "pp", ">", "Ċ", "#", "include", "Ġ<", "al", "gorithm", ">", "Ċ", "#", "include", "Ġ<", "IM", "P", "/", "bench", "mark", "/", "bench", "mark", "_", "mac", "ros", ".", "h", ">", "Ċ", "#", "include", "Ġ<", "IM", "P", "/", "log", ".", "h", ">", "Ċ", "IM", "PB", "EN", "CH", "M", "ARK", "_", "B", "EGIN", "_", "N", "AMES", "P", "ACE", "Ċ", "Ċ", "void", "Ġreport", "(", "std", "::", "string", "Ġname", ",", "Ġstd", "::", "string", "Ġalgorithm", ",", "Ġdouble", "Ġvalue", ",", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġdouble", "Ġcheck", ")", "Ġ{", "Ċ", "Ġ", "Ġif", "Ġ(", "value", "Ġ<", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ//", "Ġdisabled", "Ċ", "Ġ", "Ġ}", "Ġelse", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstd", "::", "c", "out", "Ġ<<", "Ġboost", "::", "format", "(\"", "%", "s", ",", "Ġ%", "s", ",", "Ġ%", "30", "t", "%.", "2", "e", ",", "Ġ%", "50", "t", "%", "1", ".", "1", "e", ",", "Ġ%", "d", "\")", "Ġ%", "Ġname", "Ġ%", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġalgorithm", "Ġ%", "Ġvalue", "Ġ%", "Ġcheck", "Ġ%", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ(", "internal", "::", "current", "_", "bench", "mark", ")", "Ġ<<", "Ġstd", "::", "end", "l", ";", "Ċ", "Ġ", "Ġ}", "Ċ", "}", "Ċ", "void", "Ġreport", "(", "std", "::", "string", "Ġname", ",", "Ġdouble", "Ġvalue", ",", "Ġdouble", "Ġcheck", ")", "Ġ{", "Ċ", "Ġ", "Ġreport", "(", "name", ",", "Ġ\"", "\",", "Ġvalue", ",", "Ġcheck", ");", "Ċ", "}", "Ċ", "Ċ", "int", "Ġget", "_", "return", "_", "value", "()", "Ġ{", "Ġreturn", "Ġ0", ";", "Ġ}", "Ċ", "Ċ", "IM", "PB", "EN", "CH", "M", "ARK", "_", "END", "_", "N", "AMES", "P", "ACE", "Ċ"], "dataflow_graph": [["value", 6, "comesFrom", ["value"], [4]], ["value", 11, "comesFrom", ["value"], [4]], ["value", 21, "comesFrom", ["value"], [17]], ["name", 9, "comesFrom", ["name"], [2]], ["name", 20, "comesFrom", ["name"], [16]], ["algorithm", 10, "comesFrom", ["algorithm"], [3]], ["check", 12, "comesFrom", ["check"], [5]], ["check", 22, "comesFrom", ["check"], [18]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::997", "code": "/*\n * Copyright 2008, 2009, Dominik Geyer\n *\n * This file is part of HoldingNuts.\n *\n * HoldingNuts is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * HoldingNuts is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with HoldingNuts.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors:\n *     Dominik Geyer <dominik.geyer@holdingnuts.net>\n */\n\n\n#include \"GameDebug.hpp\"\n\nusing namespace std;\n\n#if DEBUG\n\nvoid print_cards(const char *name, vector<Card> *cards)\n{\n\tfprintf(stderr, \"[cards]: %s: [[ \", name);\n\tfor (vector<Card>::iterator e = cards->begin(); e != cards->end(); e++)\n\t\tfprintf(stderr, \"%s \", e->getName());\n\t\n\tfprintf(stderr, \"]]\\n\");\n}\n\n#endif\n", "code_tokens": ["Ġ/*", "Ċ", "Ġ*", "ĠCopyright", "Ġ2008", ",", "Ġ2009", ",", "ĠDomin", "ik", "ĠGe", "yer", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠThis", "Ġfile", "Ġis", "Ġpart", "Ġof", "ĠHolding", "N", "uts", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠHolding", "N", "uts", "Ġis", "Ġfree", "Ġsoftware", ":", "Ġyou", "Ġcan", "Ġredist", "ribute", "Ġit", "Ġand", "/", "or", "Ġmodify", "Ċ", "Ġ*", "Ġit", "Ġunder", "Ġthe", "Ġterms", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġas", "Ġpublished", "Ġby", "Ċ", "Ġ*", "Ġthe", "ĠFree", "ĠSoftware", "ĠFoundation", ",", "Ġeither", "Ġversion", "Ġ3", "Ġof", "Ġthe", "ĠLicense", ",", "Ġor", "Ċ", "Ġ*", "Ġ(", "at", "Ġyour", "Ġoption", ")", "Ġany", "Ġlater", "Ġversion", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠHolding", "N", "uts", "Ġis", "Ġdistributed", "Ġin", "Ġthe", "Ġhope", "Ġthat", "Ġit", "Ġwill", "Ġbe", "Ġuseful", ",", "Ċ", "Ġ*", "Ġbut", "ĠWITHOUT", "ĠANY", "ĠWARRANT", "Y", ";", "Ġwithout", "Ġeven", "Ġthe", "Ġimplied", "Ġwarranty", "Ġof", "Ċ", "Ġ*", "ĠMER", "CH", "AN", "TA", "BILITY", "Ġor", "ĠF", "ITNESS", "ĠFOR", "ĠA", "ĠPART", "IC", "ULAR", "ĠPUR", "POSE", ".", "Ġ", "ĠSee", "Ġthe", "Ċ", "Ġ*", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ġfor", "Ġmore", "Ġdetails", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠYou", "Ġshould", "Ġhave", "Ġreceived", "Ġa", "Ġcopy", "Ġof", "Ġthe", "ĠGNU", "ĠGeneral", "ĠPublic", "ĠLicense", "Ċ", "Ġ*", "Ġalong", "Ġwith", "ĠHolding", "N", "uts", ".", "Ġ", "ĠIf", "Ġnot", ",", "Ġsee", "Ġ<", "http", "://", "www", ".", "gnu", ".", "org", "/", "lic", "enses", "/>", ".", "Ċ", "Ġ*", "Ċ", "Ġ*", "ĠAuthors", ":", "Ċ", "Ġ*", "Ġ", "Ġ", "Ġ", "Ġ", "ĠDomin", "ik", "ĠGe", "yer", "Ġ<", "dom", "in", "ik", ".", "ge", "yer", "@", "holding", "nuts", ".", "net", ">", "Ċ", "Ġ*/", "ĊĊ", "Ċ", "#", "include", "Ġ\"", "Game", "Debug", ".", "h", "pp", "\"", "Ċ", "Ċ", "using", "Ġnamespace", "Ġstd", ";", "Ċ", "Ċ", "#", "if", "ĠDEBUG", "Ċ", "Ċ", "void", "Ġprint", "_", "cards", "(", "const", "Ġchar", "Ġ*", "name", ",", "Ġvector", "<", "Card", ">", "Ġ*", "cards", ")", "Ċ", "{", "Ċ", "ĉ", "f", "printf", "(", "st", "der", "r", ",", "Ġ\"[", "cards", "]:", "Ġ%", "s", ":", "Ġ[[", "Ġ\",", "Ġname", ");", "Ċ", "ĉ", "for", "Ġ(", "vector", "<", "Card", ">", "::", "iterator", "Ġe", "Ġ=", "Ġcards", "->", "begin", "();", "Ġe", "Ġ!=", "Ġcards", "->", "end", "();", "Ġe", "++)", "Ċ", "ĉ", "ĉ", "f", "printf", "(", "st", "der", "r", ",", "Ġ\"%", "s", "Ġ\",", "Ġe", "->", "get", "Name", "());", "Ċ", "ĉ", "Ċ", "ĉ", "f", "printf", "(", "st", "der", "r", ",", "Ġ\"", "]]", "\\", "n", "\");", "Ċ", "}", "Ċ", "Ċ", "#", "endif", "Ċ"], "dataflow_graph": [["e", 11, "comesFrom", ["e"], [8]], ["e", 14, "comesFrom", ["e"], [8]], ["e", 17, "comesFrom", ["e"], [8]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::998", "code": "#include \"../unp.h\"\n\nint sockfd_to_family(int sockfd)\n{\n    struct sockaddr_storage ss;\n    socklen_t len;\n\n    len = sizeof(ss);\n    if (getsockname(sockfd, (SA *) &ss, &len) < 0) {\n        return -1;\n    }\n    return ss.ss_family;\n}\n\nint Sockfd_to_family(int sockfd)\n{\n    int rc;\n    if ((rc = sockfd_to_family(sockfd)) < 0) {\n        err_sys(\"sockfd_to_family error\");\n    }\n\n    return rc;\n}\n\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "../", "un", "p", ".", "h", "\"", "Ċ", "Ċ", "int", "Ġsock", "fd", "_", "to", "_", "family", "(", "int", "Ġsock", "fd", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġstruct", "Ġsock", "addr", "_", "storage", "Ġss", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġsock", "len", "_", "t", "Ġlen", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġlen", "Ġ=", "Ġsizeof", "(", "ss", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ(", "gets", "ock", "name", "(", "s", "ock", "fd", ",", "Ġ(", "SA", "Ġ*)", "Ġ&", "ss", ",", "Ġ&", "len", ")", "Ġ<", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġ-", "1", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "Ċ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġss", ".", "ss", "_", "family", ";", "Ċ", "}", "Ċ", "Ċ", "int", "ĠS", "ock", "fd", "_", "to", "_", "family", "(", "int", "Ġsock", "fd", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġint", "Ġrc", ";", "Ċ", "Ġ", "Ġ", "Ġ", "Ġif", "Ġ((", "rc", "Ġ=", "Ġsock", "fd", "_", "to", "_", "family", "(", "s", "ock", "fd", "))", "Ġ<", "Ġ0", ")", "Ġ{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġ", "Ġerr", "_", "sys", "(\"", "s", "ock", "fd", "_", "to", "_", "family", "Ġerror", "\");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ}", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġreturn", "Ġrc", ";", "Ċ", "}", "ĊĊ"], "dataflow_graph": [["ss", 5, "comesFrom", ["ss"], [2]], ["ss", 8, "comesFrom", ["ss"], [2]], ["ss", 10, "comesFrom", ["ss"], [2]], ["sockfd", 7, "comesFrom", ["sockfd"], [1]], ["sockfd", 17, "comesFrom", ["sockfd"], [13]], ["len", 9, "comesFrom", ["len"], [4]], ["rc", 19, "comesFrom", ["rc"], [15]]], "docstring": "", "docstring_tokens": []}
{"idx": "cpp::999", "code": "#include \"Score.hpp\"\n\n#include \"StartWorld.hpp\"\n\nScore::Score(tank::Vectori pos, std::string label)\n    : Entity(pos)\n{\n    using Pos = tank::Vectorf;\n\n    auto labelText = makeGraphic<tank::Text>(StartWorld::font);\n    labelText->setText(label);\n    labelText->setFontSize(24);\n    scoreText_ = makeGraphic<tank::Text>(StartWorld::font);\n    scoreText_->setFontSize(24);\n    scoreText_->setPos(labelText->getPos() + Pos{labelText->getSize().x + 10,0});\n\n    setScore(0);\n}\n\nvoid Score::setScore(unsigned score)\n{\n    score_ = score;\n}\n\nvoid Score::draw(tank::Camera const& cam)\n{\n    scoreText_->setText(std::to_string(score_));\n    Entity::draw(cam);\n}\n", "code_tokens": ["Ġ#", "include", "Ġ\"", "Score", ".", "h", "pp", "\"", "Ċ", "Ċ", "#", "include", "Ġ\"", "Start", "World", ".", "h", "pp", "\"", "Ċ", "Ċ", "Score", "::", "Score", "(", "tank", "::", "Vector", "i", "Ġpos", ",", "Ġstd", "::", "string", "Ġlabel", ")", "Ċ", "Ġ", "Ġ", "Ġ", "Ġ:", "ĠEntity", "(", "pos", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġusing", "ĠPos", "Ġ=", "Ġtank", "::", "Vector", "f", ";", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġauto", "Ġlabel", "Text", "Ġ=", "Ġmake", "G", "raphic", "<", "tank", "::", "Text", ">(", "Start", "World", "::", "font", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlabel", "Text", "->", "set", "Text", "(", "label", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġlabel", "Text", "->", "set", "FontSize", "(", "24", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscore", "Text", "_", "Ġ=", "Ġmake", "G", "raphic", "<", "tank", "::", "Text", ">(", "Start", "World", "::", "font", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscore", "Text", "_", "->", "set", "FontSize", "(", "24", ");", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscore", "Text", "_", "->", "set", "Pos", "(", "label", "Text", "->", "get", "Pos", "()", "Ġ+", "ĠPos", "{", "label", "Text", "->", "get", "Size", "().", "x", "Ġ+", "Ġ10", ",", "0", "});", "ĊĊ", "Ġ", "Ġ", "Ġ", "Ġset", "Score", "(", "0", ");", "Ċ", "}", "Ċ", "Ċ", "void", "ĠScore", "::", "set", "Score", "(", "unsigned", "Ġscore", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscore", "_", "Ġ=", "Ġscore", ";", "Ċ", "}", "Ċ", "Ċ", "void", "ĠScore", "::", "draw", "(", "tank", "::", "Camera", "Ġconst", "&", "Ġcam", ")", "Ċ", "{", "Ċ", "Ġ", "Ġ", "Ġ", "Ġscore", "Text", "_", "->", "set", "Text", "(", "std", "::", "to", "_", "string", "(", "score", "_", "));", "Ċ", "Ġ", "Ġ", "Ġ", "ĠEntity", "::", "draw", "(", "cam", ");", "Ċ", "}", "Ċ"], "dataflow_graph": [["pos", 4, "comesFrom", ["pos"], [1]], ["labelText", 8, "comesFrom", ["labelText"], [5]], ["labelText", 11, "comesFrom", ["labelText"], [5]], ["labelText", 20, "comesFrom", ["labelText"], [5]], ["labelText", 22, "comesFrom", ["labelText"], [5]], ["label", 10, "comesFrom", ["label"], [2]], ["scoreText_", 16, "comesFrom", ["scoreText_"], [13]], ["scoreText_", 18, "comesFrom", ["scoreText_"], [13]], ["scoreText_", 32, "comesFrom", ["scoreText_"], [13]], ["score", 29, "comesFrom", ["score"], [27]], ["score_", 35, "comesFrom", ["score_"], [28]]], "docstring": "", "docstring_tokens": []}
